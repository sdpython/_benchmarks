<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1750" onload="init(evt)" viewBox="0 0 1200 1750" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1750" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1733.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1733.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:1) (1 samples, 0.37%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(214,41,27)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(213,70,31)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(251,132,23)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(222,28,52)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(244,36,19)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(223,76,38)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.37%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(227,136,53)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.37%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(240,209,10)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(209,169,5)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(229,120,54)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(221,184,26)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(239,163,21)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(205,38,47)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(231,118,2)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.37%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(246,162,4)"/><text x="13.00" y="382.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2063) (1 samples, 0.37%)</title><rect x="14" y="916" width="4" height="15" fill="rgb(232,192,44)"/><text x="17.00" y="926.50"></text></g><g><title>join (posixpath.py:86) (1 samples, 0.37%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(243,110,2)"/><text x="17.00" y="942.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.75%)</title><rect x="14" y="852" width="9" height="15" fill="rgb(248,146,21)"/><text x="17.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.75%)</title><rect x="14" y="868" width="9" height="15" fill="rgb(253,92,0)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.75%)</title><rect x="14" y="884" width="9" height="15" fill="rgb(243,45,29)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.75%)</title><rect x="14" y="900" width="9" height="15" fill="rgb(226,220,28)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.37%)</title><rect x="18" y="916" width="5" height="15" fill="rgb(247,134,8)"/><text x="21.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.37%)</title><rect x="18" y="932" width="5" height="15" fill="rgb(245,91,47)"/><text x="21.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.37%)</title><rect x="18" y="948" width="5" height="15" fill="rgb(234,146,48)"/><text x="21.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (3 samples, 1.12%)</title><rect x="14" y="148" width="13" height="15" fill="rgb(209,107,47)"/><text x="17.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="164" width="13" height="15" fill="rgb(250,78,1)"/><text x="17.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.12%)</title><rect x="14" y="180" width="13" height="15" fill="rgb(246,185,37)"/><text x="17.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="196" width="13" height="15" fill="rgb(216,113,54)"/><text x="17.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="212" width="13" height="15" fill="rgb(232,95,23)"/><text x="17.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="14" y="228" width="13" height="15" fill="rgb(223,217,41)"/><text x="17.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="14" y="244" width="13" height="15" fill="rgb(230,149,9)"/><text x="17.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="14" y="260" width="13" height="15" fill="rgb(212,44,49)"/><text x="17.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="276" width="13" height="15" fill="rgb(238,190,3)"/><text x="17.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.12%)</title><rect x="14" y="292" width="13" height="15" fill="rgb(254,176,18)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="308" width="13" height="15" fill="rgb(234,218,4)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="14" y="324" width="13" height="15" fill="rgb(206,108,26)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="14" y="340" width="13" height="15" fill="rgb(240,25,25)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="14" y="356" width="13" height="15" fill="rgb(239,18,49)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="372" width="13" height="15" fill="rgb(231,138,51)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.12%)</title><rect x="14" y="388" width="13" height="15" fill="rgb(228,67,8)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="404" width="13" height="15" fill="rgb(211,59,34)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="14" y="420" width="13" height="15" fill="rgb(206,223,49)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="14" y="436" width="13" height="15" fill="rgb(221,145,50)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="14" y="452" width="13" height="15" fill="rgb(234,147,15)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="468" width="13" height="15" fill="rgb(233,93,11)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.12%)</title><rect x="14" y="484" width="13" height="15" fill="rgb(211,82,14)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="500" width="13" height="15" fill="rgb(245,30,24)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="14" y="516" width="13" height="15" fill="rgb(238,131,32)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="14" y="532" width="13" height="15" fill="rgb(226,150,48)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="14" y="548" width="13" height="15" fill="rgb(224,40,49)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="564" width="13" height="15" fill="rgb(208,154,1)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.12%)</title><rect x="14" y="580" width="13" height="15" fill="rgb(220,136,19)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="596" width="13" height="15" fill="rgb(248,41,53)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.12%)</title><rect x="14" y="612" width="13" height="15" fill="rgb(210,38,22)"/><text x="17.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="628" width="13" height="15" fill="rgb(210,56,9)"/><text x="17.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="644" width="13" height="15" fill="rgb(217,94,4)"/><text x="17.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="14" y="660" width="13" height="15" fill="rgb(235,196,1)"/><text x="17.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="14" y="676" width="13" height="15" fill="rgb(250,73,34)"/><text x="17.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="14" y="692" width="13" height="15" fill="rgb(248,140,49)"/><text x="17.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="708" width="13" height="15" fill="rgb(235,168,32)"/><text x="17.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.12%)</title><rect x="14" y="724" width="13" height="15" fill="rgb(238,146,12)"/><text x="17.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.12%)</title><rect x="14" y="740" width="13" height="15" fill="rgb(206,169,24)"/><text x="17.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.12%)</title><rect x="14" y="756" width="13" height="15" fill="rgb(246,172,51)"/><text x="17.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.12%)</title><rect x="14" y="772" width="13" height="15" fill="rgb(235,97,20)"/><text x="17.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.12%)</title><rect x="14" y="788" width="13" height="15" fill="rgb(238,151,12)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.12%)</title><rect x="14" y="804" width="13" height="15" fill="rgb(234,12,14)"/><text x="17.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.12%)</title><rect x="14" y="820" width="13" height="15" fill="rgb(218,183,1)"/><text x="17.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.12%)</title><rect x="14" y="836" width="13" height="15" fill="rgb(249,30,34)"/><text x="17.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.37%)</title><rect x="23" y="852" width="4" height="15" fill="rgb(216,196,51)"/><text x="26.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.37%)</title><rect x="23" y="868" width="4" height="15" fill="rgb(208,162,29)"/><text x="26.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.37%)</title><rect x="23" y="884" width="4" height="15" fill="rgb(252,87,0)"/><text x="26.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.37%)</title><rect x="23" y="900" width="4" height="15" fill="rgb(212,65,8)"/><text x="26.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.37%)</title><rect x="23" y="916" width="4" height="15" fill="rgb(243,69,18)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.37%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(239,217,25)"/><text x="26.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.37%)</title><rect x="23" y="948" width="4" height="15" fill="rgb(238,141,16)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.37%)</title><rect x="23" y="964" width="4" height="15" fill="rgb(242,112,46)"/><text x="26.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.37%)</title><rect x="27" y="244" width="5" height="15" fill="rgb(245,89,4)"/><text x="30.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="260" width="5" height="15" fill="rgb(229,103,6)"/><text x="30.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="27" y="276" width="5" height="15" fill="rgb(232,147,14)"/><text x="30.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="27" y="292" width="5" height="15" fill="rgb(235,77,21)"/><text x="30.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="27" y="308" width="5" height="15" fill="rgb(219,151,35)"/><text x="30.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="324" width="5" height="15" fill="rgb(205,130,17)"/><text x="30.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.37%)</title><rect x="27" y="340" width="5" height="15" fill="rgb(253,43,46)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="356" width="5" height="15" fill="rgb(252,136,43)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="27" y="372" width="5" height="15" fill="rgb(252,189,53)"/><text x="30.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="388" width="5" height="15" fill="rgb(247,103,4)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="404" width="5" height="15" fill="rgb(254,10,20)"/><text x="30.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="27" y="420" width="5" height="15" fill="rgb(231,209,19)"/><text x="30.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="27" y="436" width="5" height="15" fill="rgb(228,58,45)"/><text x="30.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="27" y="452" width="5" height="15" fill="rgb(246,87,25)"/><text x="30.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="468" width="5" height="15" fill="rgb(219,65,31)"/><text x="30.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.37%)</title><rect x="27" y="484" width="5" height="15" fill="rgb(221,193,2)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="500" width="5" height="15" fill="rgb(205,159,10)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="27" y="516" width="5" height="15" fill="rgb(205,76,26)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="27" y="532" width="5" height="15" fill="rgb(226,205,18)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="27" y="548" width="5" height="15" fill="rgb(242,62,3)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="564" width="5" height="15" fill="rgb(225,192,46)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.37%)</title><rect x="27" y="580" width="5" height="15" fill="rgb(213,14,16)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="596" width="5" height="15" fill="rgb(251,227,27)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="27" y="612" width="5" height="15" fill="rgb(244,182,33)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="27" y="628" width="5" height="15" fill="rgb(208,135,4)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="27" y="644" width="5" height="15" fill="rgb(231,183,35)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="660" width="5" height="15" fill="rgb(212,168,15)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.37%)</title><rect x="27" y="676" width="5" height="15" fill="rgb(226,10,24)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="692" width="5" height="15" fill="rgb(238,2,23)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="27" y="708" width="5" height="15" fill="rgb(245,107,5)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="27" y="724" width="5" height="15" fill="rgb(239,38,21)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="27" y="740" width="5" height="15" fill="rgb(237,21,18)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="756" width="5" height="15" fill="rgb(223,71,49)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:76) (1 samples, 0.37%)</title><rect x="27" y="772" width="5" height="15" fill="rgb(208,45,27)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="27" y="788" width="5" height="15" fill="rgb(217,21,48)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="27" y="804" width="5" height="15" fill="rgb(206,88,53)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="27" y="820" width="5" height="15" fill="rgb(220,101,26)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="27" y="836" width="5" height="15" fill="rgb(234,136,1)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="27" y="852" width="5" height="15" fill="rgb(235,173,8)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (configparser.py:559) (1 samples, 0.37%)</title><rect x="27" y="868" width="5" height="15" fill="rgb(221,185,38)"/><text x="30.00" y="878.50"></text></g><g><title>RawConfigParser (configparser.py:593) (1 samples, 0.37%)</title><rect x="27" y="884" width="5" height="15" fill="rgb(248,49,31)"/><text x="30.00" y="894.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.37%)</title><rect x="27" y="900" width="5" height="15" fill="rgb(230,178,22)"/><text x="30.00" y="910.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.37%)</title><rect x="27" y="916" width="5" height="15" fill="rgb(231,24,41)"/><text x="30.00" y="926.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.37%)</title><rect x="27" y="932" width="5" height="15" fill="rgb(217,147,3)"/><text x="30.00" y="942.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.37%)</title><rect x="27" y="948" width="5" height="15" fill="rgb(250,27,26)"/><text x="30.00" y="958.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.37%)</title><rect x="27" y="964" width="5" height="15" fill="rgb(232,106,40)"/><text x="30.00" y="974.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.37%)</title><rect x="27" y="980" width="5" height="15" fill="rgb(221,15,37)"/><text x="30.00" y="990.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.37%)</title><rect x="27" y="996" width="5" height="15" fill="rgb(251,171,5)"/><text x="30.00" y="1006.50"></text></g><g><title>__next (sre_parse.py:236) (1 samples, 0.37%)</title><rect x="27" y="1012" width="5" height="15" fill="rgb(234,180,40)"/><text x="30.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.37%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(240,181,29)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(225,59,9)"/><text x="35.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(234,104,4)"/><text x="35.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(209,226,2)"/><text x="35.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(212,96,47)"/><text x="35.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(251,110,22)"/><text x="35.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.37%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(227,160,38)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(221,83,36)"/><text x="35.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(211,217,31)"/><text x="35.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(250,27,3)"/><text x="35.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(251,43,42)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(210,82,2)"/><text x="35.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.37%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(220,36,54)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(232,165,25)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(230,45,43)"/><text x="35.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(220,53,24)"/><text x="35.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(213,1,29)"/><text x="35.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(247,187,47)"/><text x="35.00" y="910.50"></text></g><g><title>0x7f245c59440e (?) (1 samples, 0.37%)</title><rect x="32" y="916" width="4" height="15" fill="rgb(213,174,25)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="932" width="4" height="15" fill="rgb(215,106,49)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="948" width="4" height="15" fill="rgb(222,15,35)"/><text x="35.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="964" width="4" height="15" fill="rgb(242,2,30)"/><text x="35.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="32" y="980" width="4" height="15" fill="rgb(228,0,43)"/><text x="35.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="996" width="4" height="15" fill="rgb(233,115,41)"/><text x="35.00" y="1006.50"></text></g><g><title>0x7f245c34dbb0 (?) (1 samples, 0.37%)</title><rect x="32" y="1012" width="4" height="15" fill="rgb(230,118,25)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="1028" width="4" height="15" fill="rgb(229,191,36)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="1044" width="4" height="15" fill="rgb(222,227,0)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="1060" width="4" height="15" fill="rgb(254,101,18)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.37%)</title><rect x="32" y="1076" width="4" height="15" fill="rgb(227,76,40)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="1092" width="4" height="15" fill="rgb(248,102,11)"/><text x="35.00" y="1102.50"></text></g><g><title>0x7f245bcd4e18 (?) (1 samples, 0.37%)</title><rect x="32" y="1108" width="4" height="15" fill="rgb(247,126,4)"/><text x="35.00" y="1118.50"></text></g><g><title>0x7f245bcd728a (?) (1 samples, 0.37%)</title><rect x="32" y="1124" width="4" height="15" fill="rgb(233,48,19)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="1140" width="4" height="15" fill="rgb(220,156,17)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="1156" width="4" height="15" fill="rgb(245,147,10)"/><text x="35.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="1172" width="4" height="15" fill="rgb(221,52,44)"/><text x="35.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="32" y="1188" width="4" height="15" fill="rgb(222,21,41)"/><text x="35.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="1204" width="4" height="15" fill="rgb(208,5,51)"/><text x="35.00" y="1214.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/__init__.py:2) (1 samples, 0.37%)</title><rect x="32" y="1220" width="4" height="15" fill="rgb(211,26,19)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="32" y="1236" width="4" height="15" fill="rgb(253,133,18)"/><text x="35.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="32" y="1252" width="4" height="15" fill="rgb(229,66,3)"/><text x="35.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="32" y="1268" width="4" height="15" fill="rgb(210,84,4)"/><text x="35.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="32" y="1284" width="4" height="15" fill="rgb(246,194,19)"/><text x="35.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="32" y="1300" width="4" height="15" fill="rgb(228,103,38)"/><text x="35.00" y="1310.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/tz.py:133) (1 samples, 0.37%)</title><rect x="32" y="1316" width="4" height="15" fill="rgb(249,54,25)"/><text x="35.00" y="1326.50"></text></g><g><title>wrapper (six.py:860) (1 samples, 0.37%)</title><rect x="32" y="1332" width="4" height="15" fill="rgb(239,191,0)"/><text x="35.00" y="1342.50"></text></g><g><title>__init__ (dateutil/tz/_factories.py:27) (1 samples, 0.37%)</title><rect x="32" y="1348" width="4" height="15" fill="rgb(240,26,43)"/><text x="35.00" y="1358.50"></text></g><g><title>__init__ (weakref.py:123) (1 samples, 0.37%)</title><rect x="32" y="1364" width="4" height="15" fill="rgb(224,7,23)"/><text x="35.00" y="1374.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.75%)</title><rect x="32" y="436" width="8" height="15" fill="rgb(243,80,2)"/><text x="35.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="32" y="452" width="8" height="15" fill="rgb(215,99,38)"/><text x="35.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="32" y="468" width="8" height="15" fill="rgb(242,167,14)"/><text x="35.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="32" y="484" width="8" height="15" fill="rgb(226,130,16)"/><text x="35.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="32" y="500" width="8" height="15" fill="rgb(247,18,13)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="32" y="516" width="8" height="15" fill="rgb(232,16,40)"/><text x="35.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.75%)</title><rect x="32" y="532" width="8" height="15" fill="rgb(246,189,32)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="32" y="548" width="8" height="15" fill="rgb(235,200,27)"/><text x="35.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="32" y="564" width="8" height="15" fill="rgb(244,198,35)"/><text x="35.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="32" y="580" width="8" height="15" fill="rgb(217,96,49)"/><text x="35.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="32" y="596" width="8" height="15" fill="rgb(233,93,16)"/><text x="35.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="32" y="612" width="8" height="15" fill="rgb(253,69,9)"/><text x="35.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.37%)</title><rect x="36" y="628" width="4" height="15" fill="rgb(231,53,7)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="644" width="4" height="15" fill="rgb(234,41,30)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="660" width="4" height="15" fill="rgb(232,200,30)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="676" width="4" height="15" fill="rgb(254,96,39)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="692" width="4" height="15" fill="rgb(207,194,39)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="708" width="4" height="15" fill="rgb(250,164,39)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.37%)</title><rect x="36" y="724" width="4" height="15" fill="rgb(214,55,1)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="740" width="4" height="15" fill="rgb(225,14,29)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="756" width="4" height="15" fill="rgb(223,185,30)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="772" width="4" height="15" fill="rgb(215,82,2)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="788" width="4" height="15" fill="rgb(244,203,51)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="804" width="4" height="15" fill="rgb(238,146,11)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.37%)</title><rect x="36" y="820" width="4" height="15" fill="rgb(218,206,13)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="836" width="4" height="15" fill="rgb(215,67,24)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="852" width="4" height="15" fill="rgb(206,196,34)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="868" width="4" height="15" fill="rgb(246,183,54)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="884" width="4" height="15" fill="rgb(217,37,29)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(214,191,26)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.37%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(217,81,31)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(224,105,23)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(208,79,3)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(220,148,53)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(220,168,44)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(208,1,5)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.37%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(228,44,54)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(220,201,5)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(209,218,2)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(211,20,43)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(232,77,9)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(212,4,26)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.37%)</title><rect x="36" y="1108" width="4" height="15" fill="rgb(240,39,23)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(209,198,43)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(241,79,22)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(217,204,39)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(231,143,12)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(234,14,44)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.37%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(227,218,18)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(248,150,3)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(229,145,46)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(232,46,14)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(212,191,45)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(220,61,2)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.37%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(241,153,43)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(244,103,5)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(219,92,17)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(213,184,20)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="1364" width="4" height="15" fill="rgb(230,199,38)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1380" width="4" height="15" fill="rgb(254,146,21)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.37%)</title><rect x="36" y="1396" width="4" height="15" fill="rgb(239,4,11)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1412" width="4" height="15" fill="rgb(227,137,28)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="1428" width="4" height="15" fill="rgb(234,68,3)"/><text x="39.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="1444" width="4" height="15" fill="rgb(230,207,22)"/><text x="39.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="1460" width="4" height="15" fill="rgb(240,183,4)"/><text x="39.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1476" width="4" height="15" fill="rgb(231,73,38)"/><text x="39.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.37%)</title><rect x="36" y="1492" width="4" height="15" fill="rgb(250,160,10)"/><text x="39.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1508" width="4" height="15" fill="rgb(220,4,5)"/><text x="39.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.37%)</title><rect x="36" y="1524" width="4" height="15" fill="rgb(239,226,39)"/><text x="39.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1540" width="4" height="15" fill="rgb(207,110,7)"/><text x="39.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="36" y="1556" width="4" height="15" fill="rgb(243,141,2)"/><text x="39.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="36" y="1572" width="4" height="15" fill="rgb(246,157,20)"/><text x="39.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="36" y="1588" width="4" height="15" fill="rgb(212,139,13)"/><text x="39.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="36" y="1604" width="4" height="15" fill="rgb(230,114,11)"/><text x="39.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="36" y="1620" width="4" height="15" fill="rgb(254,68,6)"/><text x="39.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:1036) (1 samples, 0.37%)</title><rect x="36" y="1636" width="4" height="15" fill="rgb(224,214,41)"/><text x="39.00" y="1646.50"></text></g><g><title>__init__ (matplotlib/__init__.py:772) (1 samples, 0.37%)</title><rect x="36" y="1652" width="4" height="15" fill="rgb(234,223,49)"/><text x="39.00" y="1662.50"></text></g><g><title>update (_collections_abc.py:847) (1 samples, 0.37%)</title><rect x="36" y="1668" width="4" height="15" fill="rgb(247,181,24)"/><text x="39.00" y="1678.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py:801) (1 samples, 0.37%)</title><rect x="36" y="1684" width="4" height="15" fill="rgb(230,19,11)"/><text x="39.00" y="1694.50"></text></g><g><title>validate_bool (matplotlib/rcsetup.py:118) (1 samples, 0.37%)</title><rect x="36" y="1700" width="4" height="15" fill="rgb(239,93,33)"/><text x="39.00" y="1710.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.37%)</title><rect x="40" y="1380" width="5" height="15" fill="rgb(217,150,36)"/><text x="43.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.37%)</title><rect x="40" y="1396" width="5" height="15" fill="rgb(228,40,32)"/><text x="43.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.37%)</title><rect x="40" y="1412" width="5" height="15" fill="rgb(221,62,54)"/><text x="43.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.75%)</title><rect x="40" y="1108" width="9" height="15" fill="rgb(235,144,1)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="40" y="1124" width="9" height="15" fill="rgb(234,158,16)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="40" y="1140" width="9" height="15" fill="rgb(220,100,52)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="40" y="1156" width="9" height="15" fill="rgb(245,1,43)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="40" y="1172" width="9" height="15" fill="rgb(240,74,42)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="40" y="1188" width="9" height="15" fill="rgb(212,107,4)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.75%)</title><rect x="40" y="1204" width="9" height="15" fill="rgb(221,221,42)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="40" y="1220" width="9" height="15" fill="rgb(242,91,45)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="40" y="1236" width="9" height="15" fill="rgb(223,115,48)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="40" y="1252" width="9" height="15" fill="rgb(225,47,19)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="40" y="1268" width="9" height="15" fill="rgb(225,227,32)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="40" y="1284" width="9" height="15" fill="rgb(220,212,30)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.75%)</title><rect x="40" y="1300" width="9" height="15" fill="rgb(226,16,3)"/><text x="43.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.75%)</title><rect x="40" y="1316" width="9" height="15" fill="rgb(224,30,50)"/><text x="43.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.75%)</title><rect x="40" y="1332" width="9" height="15" fill="rgb(225,25,42)"/><text x="43.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.75%)</title><rect x="40" y="1348" width="9" height="15" fill="rgb(209,20,25)"/><text x="43.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.75%)</title><rect x="40" y="1364" width="9" height="15" fill="rgb(206,193,22)"/><text x="43.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:648) (1 samples, 0.37%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(232,88,48)"/><text x="48.00" y="1390.50"></text></g><g><title>__new__ (&lt;string&gt;:1) (1 samples, 0.37%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(228,137,33)"/><text x="48.00" y="1406.50"></text></g><g><title>root (&lt;template&gt;:100) (2 samples, 0.75%)</title><rect x="49" y="1572" width="9" height="15" fill="rgb(228,76,5)"/><text x="52.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (2 samples, 0.75%)</title><rect x="49" y="1588" width="9" height="15" fill="rgb(225,32,19)"/><text x="52.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.37%)</title><rect x="54" y="1604" width="4" height="15" fill="rgb(231,130,44)"/><text x="57.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="54" y="1620" width="4" height="15" fill="rgb(242,203,15)"/><text x="57.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="54" y="1636" width="4" height="15" fill="rgb(236,156,37)"/><text x="57.00" y="1646.50"></text></g><g><title>pybind11::detail::object_api&lt;pybind11::handle&gt;::rich_compare [clone .constprop.1331] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="54" y="1652" width="4" height="15" fill="rgb(250,112,51)"/><text x="57.00" y="1662.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="54" y="1668" width="4" height="15" fill="rgb(207,64,6)"/><text x="57.00" y="1678.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="54" y="1684" width="4" height="15" fill="rgb(240,23,13)"/><text x="57.00" y="1694.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="54" y="1700" width="4" height="15" fill="rgb(230,168,15)"/><text x="57.00" y="1710.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 1.12%)</title><rect x="49" y="1492" width="13" height="15" fill="rgb(247,60,41)"/><text x="52.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 1.12%)</title><rect x="49" y="1508" width="13" height="15" fill="rgb(207,31,38)"/><text x="52.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 1.12%)</title><rect x="49" y="1524" width="13" height="15" fill="rgb(233,213,42)"/><text x="52.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 1.12%)</title><rect x="49" y="1540" width="13" height="15" fill="rgb(244,179,27)"/><text x="52.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.12%)</title><rect x="49" y="1556" width="13" height="15" fill="rgb(206,208,41)"/><text x="52.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:138) (1 samples, 0.37%)</title><rect x="58" y="1572" width="4" height="15" fill="rgb(228,22,20)"/><text x="61.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.37%)</title><rect x="58" y="1588" width="4" height="15" fill="rgb(229,5,0)"/><text x="61.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="58" y="1604" width="4" height="15" fill="rgb(250,124,0)"/><text x="61.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;::def_readonly&lt;onnx::OpSchema::TypeConstraintParam, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::TypeConstraintParam::*, const&amp;)::{lambda(onnx::OpSchema::TypeConstraintParam const&amp;)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::TypeConstraintParam const&amp;, pybind11::is_method&gt;(pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;&amp; pybind11::class_&lt;onnx::OpSchema::TypeConstraintParam, &gt;::def_readonly&lt;onnx::OpSchema::TypeConstraintParam, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, &gt;(char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const onnx::OpSchema::TypeConstraintParam::*, const&amp;)::{lambda(onnx::OpSchema::TypeConstraintParam const&amp;)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::TypeConstraintParam const&amp;), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="58" y="1620" width="4" height="15" fill="rgb(246,81,46)"/><text x="61.00" y="1630.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.594] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="58" y="1636" width="4" height="15" fill="rgb(218,91,19)"/><text x="61.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:4) (13 samples, 4.85%)</title><rect x="10" y="52" width="57" height="15" fill="rgb(233,168,14)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 4.85%)</title><rect x="10" y="68" width="57" height="15" fill="rgb(249,80,11)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 4.85%)</title><rect x="10" y="84" width="57" height="15" fill="rgb(231,151,38)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 4.85%)</title><rect x="10" y="100" width="57" height="15" fill="rgb(249,121,42)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 4.85%)</title><rect x="10" y="116" width="57" height="15" fill="rgb(205,214,19)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 4.85%)</title><rect x="10" y="132" width="57" height="15" fill="rgb(242,13,37)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (9 samples, 3.36%)</title><rect x="27" y="148" width="40" height="15" fill="rgb(209,167,29)"/><text x="30.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.36%)</title><rect x="27" y="164" width="40" height="15" fill="rgb(227,142,36)"/><text x="30.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.36%)</title><rect x="27" y="180" width="40" height="15" fill="rgb(237,66,16)"/><text x="30.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.36%)</title><rect x="27" y="196" width="40" height="15" fill="rgb(210,63,31)"/><text x="30.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.36%)</title><rect x="27" y="212" width="40" height="15" fill="rgb(238,186,39)"/><text x="30.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.36%)</title><rect x="27" y="228" width="40" height="15" fill="rgb(209,112,29)"/><text x="30.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 2.99%)</title><rect x="32" y="244" width="35" height="15" fill="rgb(239,71,34)"/><text x="35.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.99%)</title><rect x="32" y="260" width="35" height="15" fill="rgb(206,42,37)"/><text x="35.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.99%)</title><rect x="32" y="276" width="35" height="15" fill="rgb(235,70,15)"/><text x="35.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.99%)</title><rect x="32" y="292" width="35" height="15" fill="rgb(206,217,49)"/><text x="35.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.99%)</title><rect x="32" y="308" width="35" height="15" fill="rgb(250,129,22)"/><text x="35.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.99%)</title><rect x="32" y="324" width="35" height="15" fill="rgb(217,157,26)"/><text x="35.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 2.99%)</title><rect x="32" y="340" width="35" height="15" fill="rgb(234,137,35)"/><text x="35.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.99%)</title><rect x="32" y="356" width="35" height="15" fill="rgb(247,117,13)"/><text x="35.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.99%)</title><rect x="32" y="372" width="35" height="15" fill="rgb(219,150,20)"/><text x="35.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.99%)</title><rect x="32" y="388" width="35" height="15" fill="rgb(242,141,15)"/><text x="35.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.99%)</title><rect x="32" y="404" width="35" height="15" fill="rgb(216,150,1)"/><text x="35.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.99%)</title><rect x="32" y="420" width="35" height="15" fill="rgb(234,107,39)"/><text x="35.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (6 samples, 2.24%)</title><rect x="40" y="436" width="27" height="15" fill="rgb(227,112,7)"/><text x="43.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="452" width="27" height="15" fill="rgb(209,17,45)"/><text x="43.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.24%)</title><rect x="40" y="468" width="27" height="15" fill="rgb(240,169,23)"/><text x="43.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="484" width="27" height="15" fill="rgb(206,111,54)"/><text x="43.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="500" width="27" height="15" fill="rgb(238,179,31)"/><text x="43.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="40" y="516" width="27" height="15" fill="rgb(219,108,6)"/><text x="43.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="40" y="532" width="27" height="15" fill="rgb(253,149,8)"/><text x="43.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="40" y="548" width="27" height="15" fill="rgb(235,44,27)"/><text x="43.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="564" width="27" height="15" fill="rgb(212,111,24)"/><text x="43.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (6 samples, 2.24%)</title><rect x="40" y="580" width="27" height="15" fill="rgb(207,179,51)"/><text x="43.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="596" width="27" height="15" fill="rgb(232,1,24)"/><text x="43.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="40" y="612" width="27" height="15" fill="rgb(207,211,21)"/><text x="43.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="40" y="628" width="27" height="15" fill="rgb(209,222,53)"/><text x="43.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="40" y="644" width="27" height="15" fill="rgb(222,100,43)"/><text x="43.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="660" width="27" height="15" fill="rgb(244,206,48)"/><text x="43.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (6 samples, 2.24%)</title><rect x="40" y="676" width="27" height="15" fill="rgb(243,2,43)"/><text x="43.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="692" width="27" height="15" fill="rgb(249,119,17)"/><text x="43.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="40" y="708" width="27" height="15" fill="rgb(232,12,33)"/><text x="43.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="40" y="724" width="27" height="15" fill="rgb(218,114,14)"/><text x="43.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="40" y="740" width="27" height="15" fill="rgb(241,59,36)"/><text x="43.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="756" width="27" height="15" fill="rgb(242,73,34)"/><text x="43.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (6 samples, 2.24%)</title><rect x="40" y="772" width="27" height="15" fill="rgb(245,3,44)"/><text x="43.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="788" width="27" height="15" fill="rgb(252,67,46)"/><text x="43.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="40" y="804" width="27" height="15" fill="rgb(245,117,19)"/><text x="43.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="40" y="820" width="27" height="15" fill="rgb(244,30,51)"/><text x="43.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="40" y="836" width="27" height="15" fill="rgb(234,92,7)"/><text x="43.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="852" width="27" height="15" fill="rgb(241,194,26)"/><text x="43.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (6 samples, 2.24%)</title><rect x="40" y="868" width="27" height="15" fill="rgb(228,120,29)"/><text x="43.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="884" width="27" height="15" fill="rgb(250,32,8)"/><text x="43.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.24%)</title><rect x="40" y="900" width="27" height="15" fill="rgb(230,7,46)"/><text x="43.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="916" width="27" height="15" fill="rgb(209,9,6)"/><text x="43.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="932" width="27" height="15" fill="rgb(252,118,13)"/><text x="43.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="40" y="948" width="27" height="15" fill="rgb(248,156,24)"/><text x="43.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="40" y="964" width="27" height="15" fill="rgb(247,27,38)"/><text x="43.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="40" y="980" width="27" height="15" fill="rgb(219,76,34)"/><text x="43.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="996" width="27" height="15" fill="rgb(219,107,46)"/><text x="43.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (6 samples, 2.24%)</title><rect x="40" y="1012" width="27" height="15" fill="rgb(215,225,32)"/><text x="43.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.24%)</title><rect x="40" y="1028" width="27" height="15" fill="rgb(230,88,53)"/><text x="43.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.24%)</title><rect x="40" y="1044" width="27" height="15" fill="rgb(254,3,39)"/><text x="43.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.24%)</title><rect x="40" y="1060" width="27" height="15" fill="rgb(206,207,42)"/><text x="43.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.24%)</title><rect x="40" y="1076" width="27" height="15" fill="rgb(247,192,49)"/><text x="43.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.24%)</title><rect x="40" y="1092" width="27" height="15" fill="rgb(215,111,36)"/><text x="43.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.49%)</title><rect x="49" y="1108" width="18" height="15" fill="rgb(214,193,40)"/><text x="52.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.49%)</title><rect x="49" y="1124" width="18" height="15" fill="rgb(246,126,45)"/><text x="52.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.49%)</title><rect x="49" y="1140" width="18" height="15" fill="rgb(216,107,29)"/><text x="52.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.49%)</title><rect x="49" y="1156" width="18" height="15" fill="rgb(231,216,47)"/><text x="52.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.49%)</title><rect x="49" y="1172" width="18" height="15" fill="rgb(230,73,1)"/><text x="52.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.49%)</title><rect x="49" y="1188" width="18" height="15" fill="rgb(240,34,11)"/><text x="52.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.49%)</title><rect x="49" y="1204" width="18" height="15" fill="rgb(251,86,4)"/><text x="52.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.49%)</title><rect x="49" y="1220" width="18" height="15" fill="rgb(235,7,41)"/><text x="52.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.49%)</title><rect x="49" y="1236" width="18" height="15" fill="rgb(214,115,20)"/><text x="52.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.49%)</title><rect x="49" y="1252" width="18" height="15" fill="rgb(221,214,27)"/><text x="52.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.49%)</title><rect x="49" y="1268" width="18" height="15" fill="rgb(228,99,10)"/><text x="52.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.49%)</title><rect x="49" y="1284" width="18" height="15" fill="rgb(212,189,6)"/><text x="52.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.49%)</title><rect x="49" y="1300" width="18" height="15" fill="rgb(245,8,54)"/><text x="52.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.49%)</title><rect x="49" y="1316" width="18" height="15" fill="rgb(211,50,45)"/><text x="52.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.49%)</title><rect x="49" y="1332" width="18" height="15" fill="rgb(208,34,42)"/><text x="52.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.49%)</title><rect x="49" y="1348" width="18" height="15" fill="rgb(208,134,10)"/><text x="52.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.49%)</title><rect x="49" y="1364" width="18" height="15" fill="rgb(240,112,21)"/><text x="52.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.49%)</title><rect x="49" y="1380" width="18" height="15" fill="rgb(218,158,2)"/><text x="52.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.49%)</title><rect x="49" y="1396" width="18" height="15" fill="rgb(250,170,39)"/><text x="52.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.49%)</title><rect x="49" y="1412" width="18" height="15" fill="rgb(216,142,39)"/><text x="52.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.49%)</title><rect x="49" y="1428" width="18" height="15" fill="rgb(229,84,4)"/><text x="52.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.49%)</title><rect x="49" y="1444" width="18" height="15" fill="rgb(239,147,42)"/><text x="52.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 1.49%)</title><rect x="49" y="1460" width="18" height="15" fill="rgb(219,224,23)"/><text x="52.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 1.49%)</title><rect x="49" y="1476" width="18" height="15" fill="rgb(215,156,19)"/><text x="52.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.37%)</title><rect x="62" y="1492" width="5" height="15" fill="rgb(253,226,34)"/><text x="65.00" y="1502.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/algebra/onnx_ops.py:119) (1 samples, 0.37%)</title><rect x="62" y="1508" width="5" height="15" fill="rgb(246,227,9)"/><text x="65.00" y="1518.50"></text></g><g><title>_c (skl2onnx/algebra/onnx_ops.py:112) (1 samples, 0.37%)</title><rect x="62" y="1524" width="5" height="15" fill="rgb(218,130,52)"/><text x="65.00" y="1534.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.37%)</title><rect x="67" y="196" width="4" height="15" fill="rgb(229,79,23)"/><text x="70.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.37%)</title><rect x="67" y="212" width="4" height="15" fill="rgb(216,83,27)"/><text x="70.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.37%)</title><rect x="67" y="228" width="4" height="15" fill="rgb(232,100,14)"/><text x="70.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.37%)</title><rect x="67" y="244" width="4" height="15" fill="rgb(208,71,17)"/><text x="70.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.37%)</title><rect x="67" y="260" width="4" height="15" fill="rgb(212,21,54)"/><text x="70.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.37%)</title><rect x="67" y="276" width="4" height="15" fill="rgb(233,72,7)"/><text x="70.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="67" y="292" width="4" height="15" fill="rgb(205,149,16)"/><text x="70.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:145) (1 samples, 0.37%)</title><rect x="67" y="308" width="4" height="15" fill="rgb(246,44,13)"/><text x="70.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:40) (2 samples, 0.75%)</title><rect x="67" y="52" width="9" height="15" fill="rgb(224,148,38)"/><text x="70.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:11) (2 samples, 0.75%)</title><rect x="67" y="68" width="9" height="15" fill="rgb(216,199,20)"/><text x="70.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:39) (2 samples, 0.75%)</title><rect x="67" y="84" width="9" height="15" fill="rgb(210,137,45)"/><text x="70.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 0.75%)</title><rect x="67" y="100" width="9" height="15" fill="rgb(248,49,12)"/><text x="70.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:994) (2 samples, 0.75%)</title><rect x="67" y="116" width="9" height="15" fill="rgb(216,45,38)"/><text x="70.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (2 samples, 0.75%)</title><rect x="67" y="132" width="9" height="15" fill="rgb(231,194,37)"/><text x="70.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:1051) (2 samples, 0.75%)</title><rect x="67" y="148" width="9" height="15" fill="rgb(219,82,44)"/><text x="70.00" y="158.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (2 samples, 0.75%)</title><rect x="67" y="164" width="9" height="15" fill="rgb(246,188,18)"/><text x="70.00" y="174.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (2 samples, 0.75%)</title><rect x="67" y="180" width="9" height="15" fill="rgb(216,182,21)"/><text x="70.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.37%)</title><rect x="71" y="196" width="5" height="15" fill="rgb(227,15,46)"/><text x="74.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.37%)</title><rect x="71" y="212" width="5" height="15" fill="rgb(209,33,25)"/><text x="74.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.37%)</title><rect x="71" y="228" width="5" height="15" fill="rgb(227,97,16)"/><text x="74.00" y="238.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.37%)</title><rect x="71" y="244" width="5" height="15" fill="rgb(213,108,31)"/><text x="74.00" y="254.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:30) (1 samples, 0.37%)</title><rect x="76" y="100" width="4" height="15" fill="rgb(215,18,43)"/><text x="79.00" y="110.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.37%)</title><rect x="80" y="164" width="4" height="15" fill="rgb(242,90,10)"/><text x="83.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.37%)</title><rect x="84" y="180" width="5" height="15" fill="rgb(254,103,11)"/><text x="87.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (4 samples, 1.49%)</title><rect x="80" y="148" width="18" height="15" fill="rgb(234,19,9)"/><text x="83.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (3 samples, 1.12%)</title><rect x="84" y="164" width="14" height="15" fill="rgb(250,189,1)"/><text x="87.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.75%)</title><rect x="89" y="180" width="9" height="15" fill="rgb(249,103,43)"/><text x="92.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.75%)</title><rect x="89" y="196" width="9" height="15" fill="rgb(222,112,1)"/><text x="92.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.37%)</title><rect x="111" y="212" width="4" height="15" fill="rgb(212,11,51)"/><text x="114.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.49%)</title><rect x="102" y="180" width="18" height="15" fill="rgb(229,99,12)"/><text x="105.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.12%)</title><rect x="106" y="196" width="14" height="15" fill="rgb(239,114,38)"/><text x="109.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.37%)</title><rect x="115" y="212" width="5" height="15" fill="rgb(245,92,16)"/><text x="118.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.37%)</title><rect x="120" y="180" width="4" height="15" fill="rgb(218,62,54)"/><text x="123.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.75%)</title><rect x="124" y="180" width="9" height="15" fill="rgb(236,100,40)"/><text x="127.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.37%)</title><rect x="128" y="196" width="5" height="15" fill="rgb(223,135,51)"/><text x="131.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1579) (1 samples, 0.37%)</title><rect x="128" y="212" width="5" height="15" fill="rgb(214,60,11)"/><text x="131.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.37%)</title><rect x="133" y="180" width="4" height="15" fill="rgb(206,183,27)"/><text x="136.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.37%)</title><rect x="133" y="196" width="4" height="15" fill="rgb(251,50,48)"/><text x="136.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.37%)</title><rect x="137" y="180" width="5" height="15" fill="rgb(244,209,47)"/><text x="140.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.37%)</title><rect x="142" y="180" width="4" height="15" fill="rgb(231,169,52)"/><text x="145.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.37%)</title><rect x="142" y="196" width="4" height="15" fill="rgb(232,96,7)"/><text x="145.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (12 samples, 4.48%)</title><rect x="98" y="148" width="52" height="15" fill="rgb(217,132,3)"/><text x="101.00" y="158.50">predi..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (12 samples, 4.48%)</title><rect x="98" y="164" width="52" height="15" fill="rgb(224,180,47)"/><text x="101.00" y="174.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.37%)</title><rect x="146" y="180" width="4" height="15" fill="rgb(248,149,13)"/><text x="149.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.37%)</title><rect x="146" y="196" width="4" height="15" fill="rgb(213,223,26)"/><text x="149.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.37%)</title><rect x="146" y="212" width="4" height="15" fill="rgb(253,182,47)"/><text x="149.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.37%)</title><rect x="146" y="228" width="4" height="15" fill="rgb(206,218,21)"/><text x="149.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.37%)</title><rect x="172" y="196" width="5" height="15" fill="rgb(228,33,1)"/><text x="175.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="177" y="196" width="4" height="15" fill="rgb(210,75,48)"/><text x="180.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.37%)</title><rect x="177" y="212" width="4" height="15" fill="rgb(251,93,47)"/><text x="180.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.75%)</title><rect x="181" y="212" width="9" height="15" fill="rgb(246,180,5)"/><text x="184.00" y="222.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.37%)</title><rect x="186" y="228" width="4" height="15" fill="rgb(252,60,16)"/><text x="189.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.37%)</title><rect x="199" y="228" width="4" height="15" fill="rgb(237,146,24)"/><text x="202.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 1.49%)</title><rect x="203" y="228" width="18" height="15" fill="rgb(252,46,13)"/><text x="206.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.75%)</title><rect x="212" y="244" width="9" height="15" fill="rgb(206,209,8)"/><text x="215.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (11 samples, 4.10%)</title><rect x="181" y="196" width="49" height="15" fill="rgb(219,220,31)"/><text x="184.00" y="206.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (9 samples, 3.36%)</title><rect x="190" y="212" width="40" height="15" fill="rgb(242,64,31)"/><text x="193.00" y="222.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.75%)</title><rect x="221" y="228" width="9" height="15" fill="rgb(238,139,22)"/><text x="224.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.37%)</title><rect x="225" y="244" width="5" height="15" fill="rgb(218,3,36)"/><text x="228.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.37%)</title><rect x="234" y="228" width="4" height="15" fill="rgb(218,197,32)"/><text x="237.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.37%)</title><rect x="238" y="228" width="5" height="15" fill="rgb(241,54,7)"/><text x="241.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.75%)</title><rect x="243" y="228" width="9" height="15" fill="rgb(228,220,11)"/><text x="246.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.37%)</title><rect x="247" y="244" width="5" height="15" fill="rgb(217,133,1)"/><text x="250.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.37%)</title><rect x="260" y="244" width="5" height="15" fill="rgb(232,136,30)"/><text x="263.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.49%)</title><rect x="252" y="228" width="17" height="15" fill="rgb(242,18,46)"/><text x="255.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:491) (1 samples, 0.37%)</title><rect x="265" y="244" width="4" height="15" fill="rgb(230,78,39)"/><text x="268.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.49%)</title><rect x="269" y="228" width="18" height="15" fill="rgb(228,192,35)"/><text x="272.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.12%)</title><rect x="274" y="244" width="13" height="15" fill="rgb(205,216,50)"/><text x="277.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.75%)</title><rect x="278" y="260" width="9" height="15" fill="rgb(242,94,6)"/><text x="281.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.75%)</title><rect x="287" y="228" width="9" height="15" fill="rgb(250,191,19)"/><text x="290.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.37%)</title><rect x="291" y="244" width="5" height="15" fill="rgb(246,113,2)"/><text x="294.00" y="254.50"></text></g><g><title>0x7f248707976f (libc-2.29.so) (1 samples, 0.37%)</title><rect x="291" y="260" width="5" height="15" fill="rgb(237,11,28)"/><text x="294.00" y="270.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:320) (1 samples, 0.37%)</title><rect x="305" y="276" width="4" height="15" fill="rgb(211,155,16)"/><text x="308.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 1.49%)</title><rect x="296" y="228" width="17" height="15" fill="rgb(221,105,27)"/><text x="299.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 1.49%)</title><rect x="296" y="244" width="17" height="15" fill="rgb(231,106,45)"/><text x="299.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.12%)</title><rect x="300" y="260" width="13" height="15" fill="rgb(237,171,5)"/><text x="303.00" y="270.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c:543) (1 samples, 0.37%)</title><rect x="309" y="276" width="4" height="15" fill="rgb(208,1,49)"/><text x="312.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.37%)</title><rect x="313" y="228" width="5" height="15" fill="rgb(251,59,4)"/><text x="316.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.37%)</title><rect x="313" y="244" width="5" height="15" fill="rgb(249,77,25)"/><text x="316.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.37%)</title><rect x="318" y="228" width="4" height="15" fill="rgb(217,40,18)"/><text x="321.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.37%)</title><rect x="318" y="244" width="4" height="15" fill="rgb(247,199,18)"/><text x="321.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.37%)</title><rect x="335" y="260" width="5" height="15" fill="rgb(210,137,19)"/><text x="338.00" y="270.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.37%)</title><rect x="340" y="260" width="4" height="15" fill="rgb(224,220,7)"/><text x="343.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (7 samples, 2.61%)</title><rect x="322" y="244" width="31" height="15" fill="rgb(220,2,53)"/><text x="325.00" y="254.50">_a..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.75%)</title><rect x="344" y="260" width="9" height="15" fill="rgb(250,103,0)"/><text x="347.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (11 samples, 4.10%)</title><rect x="322" y="228" width="49" height="15" fill="rgb(243,59,54)"/><text x="325.00" y="238.50">chec..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (4 samples, 1.49%)</title><rect x="353" y="244" width="18" height="15" fill="rgb(209,93,43)"/><text x="356.00" y="254.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.37%)</title><rect x="366" y="260" width="5" height="15" fill="rgb(222,223,47)"/><text x="369.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.37%)</title><rect x="371" y="244" width="4" height="15" fill="rgb(229,16,47)"/><text x="374.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.37%)</title><rect x="375" y="244" width="4" height="15" fill="rgb(248,12,9)"/><text x="378.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.61%)</title><rect x="371" y="228" width="30" height="15" fill="rgb(211,109,12)"/><text x="374.00" y="238.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.87%)</title><rect x="379" y="244" width="22" height="15" fill="rgb(207,101,17)"/><text x="382.00" y="254.50">_..</text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.12%)</title><rect x="388" y="260" width="13" height="15" fill="rgb(240,224,2)"/><text x="391.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.37%)</title><rect x="397" y="276" width="4" height="15" fill="rgb(239,148,46)"/><text x="400.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (40 samples, 14.93%)</title><rect x="230" y="196" width="176" height="15" fill="rgb(230,75,0)"/><text x="233.00" y="206.50">predict (sklearn/tree/..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (40 samples, 14.93%)</title><rect x="230" y="212" width="176" height="15" fill="rgb(222,164,29)"/><text x="233.00" y="222.50">_validate_X_predict (s..</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.37%)</title><rect x="401" y="228" width="5" height="15" fill="rgb(243,200,53)"/><text x="404.00" y="238.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.37%)</title><rect x="401" y="244" width="5" height="15" fill="rgb(250,122,10)"/><text x="404.00" y="254.50"></text></g><g><title>0x7f2460ab52df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="406" y="260" width="4" height="15" fill="rgb(216,105,37)"/><text x="409.00" y="270.50"></text></g><g><title>0x7f2460a99d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="406" y="276" width="4" height="15" fill="rgb(206,184,10)"/><text x="409.00" y="286.50"></text></g><g><title>0x7f2460a99666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="406" y="292" width="4" height="15" fill="rgb(222,190,43)"/><text x="409.00" y="302.50"></text></g><g><title>0x7f2460a8f2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="406" y="308" width="4" height="15" fill="rgb(218,195,20)"/><text x="409.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.37%)</title><rect x="406" y="324" width="4" height="15" fill="rgb(205,10,44)"/><text x="409.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.37%)</title><rect x="406" y="340" width="4" height="15" fill="rgb(206,104,15)"/><text x="409.00" y="350.50"></text></g><g><title>0x7f2460ab5319 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="410" y="260" width="5" height="15" fill="rgb(220,31,53)"/><text x="413.00" y="270.50"></text></g><g><title>0x7f2460ab54b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="415" y="260" width="4" height="15" fill="rgb(207,151,0)"/><text x="418.00" y="270.50"></text></g><g><title>0x7f2460ab556e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(252,134,29)"/><text x="422.00" y="270.50"></text></g><g><title>0x7f2460ab5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="423" y="260" width="5" height="15" fill="rgb(232,205,20)"/><text x="426.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.37%)</title><rect x="423" y="276" width="5" height="15" fill="rgb(207,192,38)"/><text x="426.00" y="286.50"></text></g><g><title>0x7f2460aa6fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.24%)</title><rect x="406" y="228" width="26" height="15" fill="rgb(240,189,43)"/><text x="409.00" y="238.50">0..</text></g><g><title>0x7f2460ab6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.24%)</title><rect x="406" y="244" width="26" height="15" fill="rgb(213,103,49)"/><text x="409.00" y="254.50">0..</text></g><g><title>0x7f2460ab5c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="428" y="260" width="4" height="15" fill="rgb(214,194,9)"/><text x="431.00" y="270.50"></text></g><g><title>0x7f2460a8d529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="428" y="276" width="4" height="15" fill="rgb(234,111,24)"/><text x="431.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.37%)</title><rect x="428" y="292" width="4" height="15" fill="rgb(220,35,9)"/><text x="431.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:645) (1 samples, 0.37%)</title><rect x="428" y="308" width="4" height="15" fill="rgb(216,215,2)"/><text x="431.00" y="318.50"></text></g><g><title>0x7f2460aa705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="432" y="228" width="5" height="15" fill="rgb(246,87,26)"/><text x="435.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.37%)</title><rect x="432" y="244" width="5" height="15" fill="rgb(240,89,35)"/><text x="435.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.37%)</title><rect x="432" y="260" width="5" height="15" fill="rgb(238,29,11)"/><text x="435.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="432" y="276" width="5" height="15" fill="rgb(228,84,6)"/><text x="435.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.37%)</title><rect x="432" y="292" width="5" height="15" fill="rgb(252,96,5)"/><text x="435.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.37%)</title><rect x="432" y="308" width="5" height="15" fill="rgb(239,139,30)"/><text x="435.00" y="318.50"></text></g><g><title>0x7f2460aa713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="437" y="228" width="4" height="15" fill="rgb(226,224,53)"/><text x="440.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (9 samples, 3.36%)</title><rect x="406" y="196" width="39" height="15" fill="rgb(207,152,31)"/><text x="409.00" y="206.50">pre..</text></g><g><title>0x7f2460aa7d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.36%)</title><rect x="406" y="212" width="39" height="15" fill="rgb(207,107,18)"/><text x="409.00" y="222.50">0x7..</text></g><g><title>0x7f2460aa7328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="441" y="228" width="4" height="15" fill="rgb(244,101,36)"/><text x="444.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.37%)</title><rect x="441" y="244" width="4" height="15" fill="rgb(245,61,39)"/><text x="444.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.37%)</title><rect x="441" y="260" width="4" height="15" fill="rgb(210,119,49)"/><text x="444.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.37%)</title><rect x="441" y="276" width="4" height="15" fill="rgb(237,115,26)"/><text x="444.00" y="286.50"></text></g><g><title>0x7f2486285ef0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="441" y="292" width="4" height="15" fill="rgb(240,100,35)"/><text x="444.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (66 samples, 24.63%)</title><rect x="159" y="180" width="291" height="15" fill="rgb(222,70,47)"/><text x="162.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_bo..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.37%)</title><rect x="445" y="196" width="5" height="15" fill="rgb(216,48,14)"/><text x="448.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1901) (1 samples, 0.37%)</title><rect x="450" y="212" width="4" height="15" fill="rgb(220,156,41)"/><text x="453.00" y="222.50"></text></g><g><title>setArrayFromSequence (ctors.c:540) (1 samples, 0.37%)</title><rect x="454" y="244" width="5" height="15" fill="rgb(218,93,30)"/><text x="457.00" y="254.50"></text></g><g><title>array_item_asarray (mapping.c:1336) (1 samples, 0.37%)</title><rect x="454" y="260" width="5" height="15" fill="rgb(232,201,10)"/><text x="457.00" y="270.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.37%)</title><rect x="454" y="276" width="5" height="15" fill="rgb(233,183,36)"/><text x="457.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 1.12%)</title><rect x="450" y="180" width="13" height="15" fill="rgb(254,110,6)"/><text x="453.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 1.12%)</title><rect x="450" y="196" width="13" height="15" fill="rgb(250,28,12)"/><text x="453.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (2 samples, 0.75%)</title><rect x="454" y="212" width="9" height="15" fill="rgb(231,129,2)"/><text x="457.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (2 samples, 0.75%)</title><rect x="454" y="228" width="9" height="15" fill="rgb(242,131,40)"/><text x="457.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (1 samples, 0.37%)</title><rect x="459" y="244" width="4" height="15" fill="rgb(251,166,46)"/><text x="462.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (1 samples, 0.37%)</title><rect x="459" y="260" width="4" height="15" fill="rgb(211,68,13)"/><text x="462.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="459" y="276" width="4" height="15" fill="rgb(214,10,51)"/><text x="462.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.37%)</title><rect x="459" y="292" width="4" height="15" fill="rgb(218,125,36)"/><text x="462.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="459" y="308" width="4" height="15" fill="rgb(250,187,49)"/><text x="462.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (72 samples, 26.87%)</title><rect x="150" y="164" width="317" height="15" fill="rgb(241,120,1)"/><text x="153.00" y="174.50">_get_median_predict (sklearn/ensemble/_wei..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="463" y="180" width="4" height="15" fill="rgb(213,170,42)"/><text x="466.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="463" y="196" width="4" height="15" fill="rgb(225,117,34)"/><text x="466.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.37%)</title><rect x="463" y="212" width="4" height="15" fill="rgb(217,73,29)"/><text x="466.00" y="222.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:4) (1 samples, 0.37%)</title><rect x="467" y="180" width="5" height="15" fill="rgb(208,31,45)"/><text x="470.00" y="190.50"></text></g><g><title>_argsort_dispatcher (numpy/core/fromnumeric.py:975) (1 samples, 0.37%)</title><rect x="467" y="196" width="5" height="15" fill="rgb(227,186,51)"/><text x="470.00" y="206.50"></text></g><g><title>array_argsort (methods.c:1360) (2 samples, 0.75%)</title><rect x="472" y="244" width="9" height="15" fill="rgb(245,216,53)"/><text x="475.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.37%)</title><rect x="476" y="260" width="5" height="15" fill="rgb(251,71,14)"/><text x="479.00" y="270.50"></text></g><g><title>0x7f2487141130 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="476" y="276" width="5" height="15" fill="rgb(249,27,15)"/><text x="479.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (4 samples, 1.49%)</title><rect x="467" y="164" width="18" height="15" fill="rgb(217,69,14)"/><text x="470.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (3 samples, 1.12%)</title><rect x="472" y="180" width="13" height="15" fill="rgb(228,22,20)"/><text x="475.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.12%)</title><rect x="472" y="196" width="13" height="15" fill="rgb(241,167,51)"/><text x="475.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (3 samples, 1.12%)</title><rect x="472" y="212" width="13" height="15" fill="rgb(211,74,45)"/><text x="475.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.12%)</title><rect x="472" y="228" width="13" height="15" fill="rgb(223,81,3)"/><text x="475.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.37%)</title><rect x="481" y="244" width="4" height="15" fill="rgb(234,117,48)"/><text x="484.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.37%)</title><rect x="481" y="260" width="4" height="15" fill="rgb(251,220,23)"/><text x="484.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:998) (1 samples, 0.37%)</title><rect x="481" y="276" width="4" height="15" fill="rgb(228,74,0)"/><text x="484.00" y="286.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c:288) (1 samples, 0.37%)</title><rect x="481" y="292" width="4" height="15" fill="rgb(206,172,41)"/><text x="484.00" y="302.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.37%)</title><rect x="481" y="308" width="4" height="15" fill="rgb(214,67,0)"/><text x="484.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="481" y="324" width="4" height="15" fill="rgb(209,107,42)"/><text x="484.00" y="334.50"></text></g><g><title>0x7f2487064d86 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="481" y="340" width="4" height="15" fill="rgb(211,57,26)"/><text x="484.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="485" y="180" width="4" height="15" fill="rgb(246,0,52)"/><text x="488.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="485" y="196" width="4" height="15" fill="rgb(220,174,45)"/><text x="488.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.37%)</title><rect x="485" y="212" width="4" height="15" fill="rgb(217,215,37)"/><text x="488.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1634) (1 samples, 0.37%)</title><rect x="489" y="180" width="5" height="15" fill="rgb(232,169,6)"/><text x="492.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="489" y="196" width="5" height="15" fill="rgb(206,52,12)"/><text x="492.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.37%)</title><rect x="489" y="212" width="5" height="15" fill="rgb(246,100,29)"/><text x="492.00" y="222.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.37%)</title><rect x="494" y="260" width="4" height="15" fill="rgb(245,36,45)"/><text x="497.00" y="270.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.37%)</title><rect x="494" y="276" width="4" height="15" fill="rgb(217,54,27)"/><text x="497.00" y="286.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (2 samples, 0.75%)</title><rect x="494" y="180" width="9" height="15" fill="rgb(245,183,52)"/><text x="497.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (2 samples, 0.75%)</title><rect x="494" y="196" width="9" height="15" fill="rgb(234,87,47)"/><text x="497.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.75%)</title><rect x="494" y="212" width="9" height="15" fill="rgb(220,111,3)"/><text x="497.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (2 samples, 0.75%)</title><rect x="494" y="228" width="9" height="15" fill="rgb(210,55,20)"/><text x="497.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.75%)</title><rect x="494" y="244" width="9" height="15" fill="rgb(233,214,40)"/><text x="497.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (1 samples, 0.37%)</title><rect x="498" y="260" width="5" height="15" fill="rgb(249,37,8)"/><text x="501.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (1 samples, 0.37%)</title><rect x="498" y="276" width="5" height="15" fill="rgb(206,139,1)"/><text x="501.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:261) (1 samples, 0.37%)</title><rect x="498" y="292" width="5" height="15" fill="rgb(208,186,26)"/><text x="501.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="498" y="308" width="5" height="15" fill="rgb(227,130,4)"/><text x="501.00" y="318.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (1 samples, 0.37%)</title><rect x="503" y="180" width="4" height="15" fill="rgb(248,1,33)"/><text x="506.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.37%)</title><rect x="503" y="196" width="4" height="15" fill="rgb(247,209,33)"/><text x="506.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.37%)</title><rect x="503" y="212" width="4" height="15" fill="rgb(205,141,52)"/><text x="506.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.37%)</title><rect x="503" y="228" width="4" height="15" fill="rgb(217,93,27)"/><text x="506.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.37%)</title><rect x="503" y="244" width="4" height="15" fill="rgb(221,178,10)"/><text x="506.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.37%)</title><rect x="503" y="260" width="4" height="15" fill="rgb(251,126,16)"/><text x="506.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.37%)</title><rect x="503" y="276" width="4" height="15" fill="rgb(237,15,34)"/><text x="506.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.37%)</title><rect x="503" y="292" width="4" height="15" fill="rgb(238,51,8)"/><text x="506.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="503" y="308" width="4" height="15" fill="rgb(251,91,12)"/><text x="506.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="503" y="324" width="4" height="15" fill="rgb(243,143,33)"/><text x="506.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.37%)</title><rect x="503" y="340" width="4" height="15" fill="rgb(237,190,16)"/><text x="506.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.37%)</title><rect x="503" y="356" width="4" height="15" fill="rgb(210,190,24)"/><text x="506.00" y="366.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:160) (1 samples, 0.37%)</title><rect x="503" y="372" width="4" height="15" fill="rgb(227,111,50)"/><text x="506.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.37%)</title><rect x="507" y="212" width="4" height="15" fill="rgb(251,214,12)"/><text x="510.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.37%)</title><rect x="507" y="228" width="4" height="15" fill="rgb(248,40,15)"/><text x="510.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.37%)</title><rect x="507" y="244" width="4" height="15" fill="rgb(220,85,14)"/><text x="510.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.37%)</title><rect x="507" y="260" width="4" height="15" fill="rgb(232,2,22)"/><text x="510.00" y="270.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (2 samples, 0.75%)</title><rect x="507" y="180" width="9" height="15" fill="rgb(224,106,41)"/><text x="510.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.75%)</title><rect x="507" y="196" width="9" height="15" fill="rgb(211,226,15)"/><text x="510.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.37%)</title><rect x="511" y="212" width="5" height="15" fill="rgb(213,210,1)"/><text x="514.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="511" y="228" width="5" height="15" fill="rgb(211,3,13)"/><text x="514.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1116) (1 samples, 0.37%)</title><rect x="511" y="244" width="5" height="15" fill="rgb(215,120,32)"/><text x="514.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:212) (1 samples, 0.37%)</title><rect x="525" y="212" width="4" height="15" fill="rgb(254,21,11)"/><text x="528.00" y="222.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (3 samples, 1.12%)</title><rect x="520" y="196" width="13" height="15" fill="rgb(223,38,43)"/><text x="523.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.37%)</title><rect x="529" y="212" width="4" height="15" fill="rgb(230,22,19)"/><text x="532.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (1 samples, 0.37%)</title><rect x="529" y="228" width="4" height="15" fill="rgb(230,7,39)"/><text x="532.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.37%)</title><rect x="529" y="244" width="4" height="15" fill="rgb(239,195,11)"/><text x="532.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.37%)</title><rect x="529" y="260" width="4" height="15" fill="rgb(216,82,13)"/><text x="532.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.37%)</title><rect x="529" y="276" width="4" height="15" fill="rgb(218,51,20)"/><text x="532.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.37%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(212,221,24)"/><text x="532.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.37%)</title><rect x="529" y="308" width="4" height="15" fill="rgb(241,67,21)"/><text x="532.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.37%)</title><rect x="529" y="324" width="4" height="15" fill="rgb(206,132,45)"/><text x="532.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2039) (1 samples, 0.37%)</title><rect x="529" y="340" width="4" height="15" fill="rgb(213,187,3)"/><text x="532.00" y="350.50"></text></g><g><title>isclose (numpy/core/numeric.py:2261) (1 samples, 0.37%)</title><rect x="538" y="228" width="4" height="15" fill="rgb(242,189,23)"/><text x="541.00" y="238.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.37%)</title><rect x="538" y="244" width="4" height="15" fill="rgb(215,107,26)"/><text x="541.00" y="254.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (1 samples, 0.37%)</title><rect x="542" y="228" width="5" height="15" fill="rgb(235,54,11)"/><text x="545.00" y="238.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (1 samples, 0.37%)</title><rect x="547" y="228" width="4" height="15" fill="rgb(217,121,44)"/><text x="550.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="547" y="244" width="4" height="15" fill="rgb(220,87,26)"/><text x="550.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3285) (1 samples, 0.37%)</title><rect x="547" y="260" width="4" height="15" fill="rgb(226,128,2)"/><text x="550.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.37%)</title><rect x="564" y="292" width="5" height="15" fill="rgb(231,115,11)"/><text x="567.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.37%)</title><rect x="564" y="308" width="5" height="15" fill="rgb(228,96,45)"/><text x="567.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="582" y="356" width="4" height="15" fill="rgb(207,151,54)"/><text x="585.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="582" y="372" width="4" height="15" fill="rgb(219,152,12)"/><text x="585.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.37%)</title><rect x="582" y="388" width="4" height="15" fill="rgb(224,177,34)"/><text x="585.00" y="398.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (9 samples, 3.36%)</title><rect x="551" y="228" width="40" height="15" fill="rgb(236,141,14)"/><text x="554.00" y="238.50">isc..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (8 samples, 2.99%)</title><rect x="555" y="244" width="36" height="15" fill="rgb(248,93,9)"/><text x="558.00" y="254.50">all..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 2.99%)</title><rect x="555" y="260" width="36" height="15" fill="rgb(248,43,39)"/><text x="558.00" y="270.50">arr..</text></g><g><title>all (numpy/core/fromnumeric.py:2351) (8 samples, 2.99%)</title><rect x="555" y="276" width="36" height="15" fill="rgb(236,76,20)"/><text x="558.00" y="286.50">all..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 1.87%)</title><rect x="569" y="292" width="22" height="15" fill="rgb(220,183,53)"/><text x="572.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.12%)</title><rect x="577" y="308" width="14" height="15" fill="rgb(238,55,48)"/><text x="580.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (3 samples, 1.12%)</title><rect x="577" y="324" width="14" height="15" fill="rgb(224,104,43)"/><text x="580.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (3 samples, 1.12%)</title><rect x="577" y="340" width="14" height="15" fill="rgb(240,202,11)"/><text x="580.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.37%)</title><rect x="586" y="356" width="5" height="15" fill="rgb(236,17,42)"/><text x="589.00" y="366.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.37%)</title><rect x="586" y="372" width="5" height="15" fill="rgb(242,167,29)"/><text x="589.00" y="382.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.37%)</title><rect x="586" y="388" width="5" height="15" fill="rgb(239,61,50)"/><text x="589.00" y="398.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (1 samples, 0.37%)</title><rect x="591" y="244" width="4" height="15" fill="rgb(207,215,20)"/><text x="594.00" y="254.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.37%)</title><rect x="595" y="260" width="5" height="15" fill="rgb(248,83,13)"/><text x="598.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.37%)</title><rect x="595" y="276" width="5" height="15" fill="rgb(234,173,12)"/><text x="598.00" y="286.50"></text></g><g><title>array_add (number.c:326) (1 samples, 0.37%)</title><rect x="600" y="260" width="4" height="15" fill="rgb(248,207,15)"/><text x="603.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.37%)</title><rect x="604" y="260" width="4" height="15" fill="rgb(238,141,6)"/><text x="607.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="604" y="276" width="4" height="15" fill="rgb(205,49,35)"/><text x="607.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="604" y="292" width="4" height="15" fill="rgb(240,16,47)"/><text x="607.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1616) (1 samples, 0.37%)</title><rect x="604" y="308" width="4" height="15" fill="rgb(211,212,17)"/><text x="607.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c:1473) (1 samples, 0.37%)</title><rect x="604" y="324" width="4" height="15" fill="rgb(243,140,33)"/><text x="607.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (29 samples, 10.82%)</title><rect x="485" y="164" width="128" height="15" fill="rgb(219,160,39)"/><text x="488.00" y="174.50">_get_median_pred..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (22 samples, 8.21%)</title><rect x="516" y="180" width="97" height="15" fill="rgb(224,155,40)"/><text x="519.00" y="190.50">stable_cums..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (18 samples, 6.72%)</title><rect x="533" y="196" width="80" height="15" fill="rgb(243,94,28)"/><text x="536.00" y="206.50">isclose (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (17 samples, 6.34%)</title><rect x="538" y="212" width="75" height="15" fill="rgb(238,221,0)"/><text x="541.00" y="222.50">array_im..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (5 samples, 1.87%)</title><rect x="591" y="228" width="22" height="15" fill="rgb(214,46,22)"/><text x="594.00" y="238.50">i..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (4 samples, 1.49%)</title><rect x="595" y="244" width="18" height="15" fill="rgb(211,10,41)"/><text x="598.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4713) (1 samples, 0.37%)</title><rect x="608" y="260" width="5" height="15" fill="rgb(224,145,52)"/><text x="611.00" y="270.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (1 samples, 0.37%)</title><rect x="613" y="164" width="4" height="15" fill="rgb(247,218,44)"/><text x="616.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.37%)</title><rect x="613" y="180" width="4" height="15" fill="rgb(217,6,18)"/><text x="616.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="613" y="196" width="4" height="15" fill="rgb(212,130,7)"/><text x="616.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="613" y="212" width="4" height="15" fill="rgb(242,56,53)"/><text x="616.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.37%)</title><rect x="613" y="228" width="4" height="15" fill="rgb(221,79,10)"/><text x="616.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.37%)</title><rect x="613" y="244" width="4" height="15" fill="rgb(231,201,23)"/><text x="616.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.37%)</title><rect x="613" y="260" width="4" height="15" fill="rgb(220,204,39)"/><text x="616.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1187) (1 samples, 0.37%)</title><rect x="613" y="276" width="4" height="15" fill="rgb(217,115,38)"/><text x="616.00" y="286.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.37%)</title><rect x="622" y="196" width="4" height="15" fill="rgb(252,76,39)"/><text x="625.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.37%)</title><rect x="622" y="212" width="4" height="15" fill="rgb(209,145,3)"/><text x="625.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.37%)</title><rect x="622" y="228" width="4" height="15" fill="rgb(228,63,48)"/><text x="625.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.37%)</title><rect x="622" y="244" width="4" height="15" fill="rgb(206,157,16)"/><text x="625.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.37%)</title><rect x="622" y="260" width="4" height="15" fill="rgb(240,187,41)"/><text x="625.00" y="270.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (3 samples, 1.12%)</title><rect x="617" y="164" width="13" height="15" fill="rgb(205,87,41)"/><text x="620.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (2 samples, 0.75%)</title><rect x="622" y="180" width="8" height="15" fill="rgb(233,45,4)"/><text x="625.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:51) (1 samples, 0.37%)</title><rect x="626" y="196" width="4" height="15" fill="rgb(245,46,54)"/><text x="629.00" y="206.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3030) (1 samples, 0.37%)</title><rect x="626" y="212" width="4" height="15" fill="rgb(234,68,44)"/><text x="629.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (2 samples, 0.75%)</title><rect x="630" y="164" width="9" height="15" fill="rgb(213,53,3)"/><text x="633.00" y="174.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.37%)</title><rect x="635" y="180" width="4" height="15" fill="rgb(222,40,5)"/><text x="638.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.37%)</title><rect x="635" y="196" width="4" height="15" fill="rgb(226,37,52)"/><text x="638.00" y="206.50"></text></g><g><title>_calc_length (ctors.c:3276) (1 samples, 0.37%)</title><rect x="635" y="212" width="4" height="15" fill="rgb(225,11,23)"/><text x="638.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (128 samples, 47.76%)</title><rect x="80" y="132" width="564" height="15" fill="rgb(245,209,44)"/><text x="83.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (112 samples, 41.79%)</title><rect x="150" y="148" width="494" height="15" fill="rgb(217,178,35)"/><text x="153.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="639" y="164" width="5" height="15" fill="rgb(245,147,21)"/><text x="642.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="639" y="180" width="5" height="15" fill="rgb(231,207,6)"/><text x="642.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="639" y="196" width="5" height="15" fill="rgb(242,136,0)"/><text x="642.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:54) (130 samples, 48.51%)</title><rect x="76" y="52" width="572" height="15" fill="rgb(219,68,28)"/><text x="79.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:53) (130 samples, 48.51%)</title><rect x="76" y="68" width="572" height="15" fill="rgb(231,200,20)"/><text x="79.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_flo..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:37) (130 samples, 48.51%)</title><rect x="76" y="84" width="572" height="15" fill="rgb(254,58,2)"/><text x="79.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_f..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:31) (129 samples, 48.13%)</title><rect x="80" y="100" width="568" height="15" fill="rgb(206,81,22)"/><text x="83.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_...</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (129 samples, 48.13%)</title><rect x="80" y="116" width="568" height="15" fill="rgb(216,3,8)"/><text x="83.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.37%)</title><rect x="644" y="132" width="4" height="15" fill="rgb(207,32,32)"/><text x="647.00" y="142.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:36) (1 samples, 0.37%)</title><rect x="648" y="84" width="4" height="15" fill="rgb(241,0,17)"/><text x="651.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.37%)</title><rect x="648" y="100" width="4" height="15" fill="rgb(246,201,5)"/><text x="651.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.37%)</title><rect x="648" y="116" width="4" height="15" fill="rgb(228,86,20)"/><text x="651.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.37%)</title><rect x="648" y="132" width="4" height="15" fill="rgb(219,207,14)"/><text x="651.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.37%)</title><rect x="648" y="148" width="4" height="15" fill="rgb(230,15,54)"/><text x="651.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.37%)</title><rect x="648" y="164" width="4" height="15" fill="rgb(212,57,38)"/><text x="651.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.37%)</title><rect x="648" y="180" width="4" height="15" fill="rgb(231,210,24)"/><text x="651.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.37%)</title><rect x="648" y="196" width="4" height="15" fill="rgb(236,121,23)"/><text x="651.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="648" y="212" width="4" height="15" fill="rgb(247,164,23)"/><text x="651.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="648" y="228" width="4" height="15" fill="rgb(213,225,31)"/><text x="651.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="648" y="244" width="4" height="15" fill="rgb(254,46,45)"/><text x="651.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="648" y="260" width="4" height="15" fill="rgb(226,139,12)"/><text x="651.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="648" y="276" width="4" height="15" fill="rgb(244,215,50)"/><text x="651.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.37%)</title><rect x="648" y="292" width="4" height="15" fill="rgb(247,198,50)"/><text x="651.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.37%)</title><rect x="648" y="308" width="4" height="15" fill="rgb(231,122,42)"/><text x="651.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.37%)</title><rect x="648" y="324" width="4" height="15" fill="rgb(205,134,19)"/><text x="651.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.37%)</title><rect x="648" y="340" width="4" height="15" fill="rgb(218,114,49)"/><text x="651.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.37%)</title><rect x="648" y="356" width="4" height="15" fill="rgb(230,132,26)"/><text x="651.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.37%)</title><rect x="648" y="372" width="4" height="15" fill="rgb(237,95,40)"/><text x="651.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.37%)</title><rect x="648" y="388" width="4" height="15" fill="rgb(244,206,47)"/><text x="651.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:142) (1 samples, 0.37%)</title><rect x="648" y="404" width="4" height="15" fill="rgb(235,116,50)"/><text x="651.00" y="414.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.37%)</title><rect x="657" y="164" width="4" height="15" fill="rgb(207,89,1)"/><text x="660.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 1.87%)</title><rect x="666" y="180" width="22" height="15" fill="rgb(233,40,16)"/><text x="669.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.75%)</title><rect x="679" y="196" width="9" height="15" fill="rgb(241,170,52)"/><text x="682.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (1 samples, 0.37%)</title><rect x="705" y="212" width="5" height="15" fill="rgb(217,29,23)"/><text x="708.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:43) (1 samples, 0.37%)</title><rect x="710" y="212" width="4" height="15" fill="rgb(244,190,51)"/><text x="713.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.37%)</title><rect x="714" y="244" width="4" height="15" fill="rgb(254,196,33)"/><text x="717.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.75%)</title><rect x="714" y="228" width="9" height="15" fill="rgb(223,60,43)"/><text x="717.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:492) (1 samples, 0.37%)</title><rect x="718" y="244" width="5" height="15" fill="rgb(220,34,5)"/><text x="721.00" y="254.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.37%)</title><rect x="718" y="260" width="5" height="15" fill="rgb(244,194,10)"/><text x="721.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (3 samples, 1.12%)</title><rect x="714" y="212" width="13" height="15" fill="rgb(231,0,13)"/><text x="717.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.37%)</title><rect x="723" y="228" width="4" height="15" fill="rgb(235,33,6)"/><text x="726.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.37%)</title><rect x="723" y="244" width="4" height="15" fill="rgb(213,84,13)"/><text x="726.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.37%)</title><rect x="723" y="260" width="4" height="15" fill="rgb(223,188,6)"/><text x="726.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.37%)</title><rect x="723" y="276" width="4" height="15" fill="rgb(237,31,27)"/><text x="726.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3003) (1 samples, 0.37%)</title><rect x="723" y="292" width="4" height="15" fill="rgb(223,28,30)"/><text x="726.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (2 samples, 0.75%)</title><rect x="727" y="212" width="9" height="15" fill="rgb(216,34,34)"/><text x="730.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.37%)</title><rect x="732" y="228" width="4" height="15" fill="rgb(253,60,53)"/><text x="735.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.37%)</title><rect x="732" y="244" width="4" height="15" fill="rgb(220,183,2)"/><text x="735.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.37%)</title><rect x="732" y="260" width="4" height="15" fill="rgb(215,162,24)"/><text x="735.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.37%)</title><rect x="736" y="244" width="4" height="15" fill="rgb(211,1,14)"/><text x="739.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1394) (1 samples, 0.37%)</title><rect x="736" y="260" width="4" height="15" fill="rgb(247,10,37)"/><text x="739.00" y="270.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.37%)</title><rect x="740" y="244" width="5" height="15" fill="rgb(253,182,9)"/><text x="743.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.37%)</title><rect x="740" y="260" width="5" height="15" fill="rgb(246,105,8)"/><text x="743.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.37%)</title><rect x="740" y="276" width="5" height="15" fill="rgb(210,22,5)"/><text x="743.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 1.12%)</title><rect x="736" y="212" width="13" height="15" fill="rgb(210,61,43)"/><text x="739.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 1.12%)</title><rect x="736" y="228" width="13" height="15" fill="rgb(232,59,20)"/><text x="739.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.37%)</title><rect x="745" y="244" width="4" height="15" fill="rgb(213,86,35)"/><text x="748.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="745" y="260" width="4" height="15" fill="rgb(213,4,42)"/><text x="748.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.37%)</title><rect x="745" y="276" width="4" height="15" fill="rgb(246,94,51)"/><text x="748.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="745" y="292" width="4" height="15" fill="rgb(210,148,6)"/><text x="748.00" y="302.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.37%)</title><rect x="749" y="228" width="5" height="15" fill="rgb(253,52,26)"/><text x="752.00" y="238.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:259) (1 samples, 0.37%)</title><rect x="754" y="324" width="4" height="15" fill="rgb(230,90,48)"/><text x="757.00" y="334.50"></text></g><g><title>_get_keywords (number.c:208) (1 samples, 0.37%)</title><rect x="754" y="340" width="4" height="15" fill="rgb(251,206,49)"/><text x="757.00" y="350.50"></text></g><g><title>0x7f248708414e (libc-2.29.so) (1 samples, 0.37%)</title><rect x="754" y="356" width="4" height="15" fill="rgb(221,83,26)"/><text x="757.00" y="366.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:261) (1 samples, 0.37%)</title><rect x="758" y="324" width="4" height="15" fill="rgb(245,56,46)"/><text x="761.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (4 samples, 1.49%)</title><rect x="749" y="212" width="18" height="15" fill="rgb(240,23,34)"/><text x="752.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (3 samples, 1.12%)</title><rect x="754" y="228" width="13" height="15" fill="rgb(213,175,16)"/><text x="757.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.12%)</title><rect x="754" y="244" width="13" height="15" fill="rgb(215,146,37)"/><text x="757.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (3 samples, 1.12%)</title><rect x="754" y="260" width="13" height="15" fill="rgb(215,183,7)"/><text x="757.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 1.12%)</title><rect x="754" y="276" width="13" height="15" fill="rgb(215,12,41)"/><text x="757.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (3 samples, 1.12%)</title><rect x="754" y="292" width="13" height="15" fill="rgb(238,122,47)"/><text x="757.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (3 samples, 1.12%)</title><rect x="754" y="308" width="13" height="15" fill="rgb(209,2,37)"/><text x="757.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (1 samples, 0.37%)</title><rect x="762" y="324" width="5" height="15" fill="rgb(224,152,52)"/><text x="765.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.37%)</title><rect x="762" y="340" width="5" height="15" fill="rgb(243,5,20)"/><text x="765.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.37%)</title><rect x="762" y="356" width="5" height="15" fill="rgb(252,124,40)"/><text x="765.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (1 samples, 0.37%)</title><rect x="762" y="372" width="5" height="15" fill="rgb(243,131,7)"/><text x="765.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.37%)</title><rect x="762" y="388" width="5" height="15" fill="rgb(250,122,8)"/><text x="765.00" y="398.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2196) (1 samples, 0.37%)</title><rect x="762" y="404" width="5" height="15" fill="rgb(236,66,31)"/><text x="765.00" y="414.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.37%)</title><rect x="771" y="244" width="5" height="15" fill="rgb(223,68,8)"/><text x="774.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.37%)</title><rect x="776" y="244" width="4" height="15" fill="rgb(209,182,31)"/><text x="779.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (5 samples, 1.87%)</title><rect x="767" y="212" width="22" height="15" fill="rgb(222,108,8)"/><text x="770.00" y="222.50">_..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (5 samples, 1.87%)</title><rect x="767" y="228" width="22" height="15" fill="rgb(238,0,10)"/><text x="770.00" y="238.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.75%)</title><rect x="780" y="244" width="9" height="15" fill="rgb(222,109,39)"/><text x="783.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (2 samples, 0.75%)</title><rect x="780" y="260" width="9" height="15" fill="rgb(235,11,25)"/><text x="783.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.75%)</title><rect x="780" y="276" width="9" height="15" fill="rgb(248,211,45)"/><text x="783.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:344) (2 samples, 0.75%)</title><rect x="780" y="292" width="9" height="15" fill="rgb(233,65,15)"/><text x="783.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (1 samples, 0.37%)</title><rect x="789" y="212" width="4" height="15" fill="rgb(240,51,1)"/><text x="792.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.37%)</title><rect x="789" y="228" width="4" height="15" fill="rgb(223,163,6)"/><text x="792.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c:937) (1 samples, 0.37%)</title><rect x="798" y="308" width="4" height="15" fill="rgb(221,197,15)"/><text x="801.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.37%)</title><rect x="798" y="324" width="4" height="15" fill="rgb(236,24,14)"/><text x="801.00" y="334.50"></text></g><g><title>0x7f2487054ab0 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="798" y="340" width="4" height="15" fill="rgb(240,140,14)"/><text x="801.00" y="350.50"></text></g><g><title>0x7f2487047b01 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="798" y="356" width="4" height="15" fill="rgb(221,96,15)"/><text x="801.00" y="366.50"></text></g><g><title>0x7f2487079977 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="798" y="372" width="4" height="15" fill="rgb(216,20,53)"/><text x="801.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.37%)</title><rect x="802" y="340" width="4" height="15" fill="rgb(223,54,33)"/><text x="805.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.37%)</title><rect x="802" y="356" width="4" height="15" fill="rgb(234,111,51)"/><text x="805.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (3 samples, 1.12%)</title><rect x="798" y="244" width="13" height="15" fill="rgb(249,142,44)"/><text x="801.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (3 samples, 1.12%)</title><rect x="798" y="260" width="13" height="15" fill="rgb(234,29,43)"/><text x="801.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (3 samples, 1.12%)</title><rect x="798" y="276" width="13" height="15" fill="rgb(247,40,26)"/><text x="801.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (3 samples, 1.12%)</title><rect x="798" y="292" width="13" height="15" fill="rgb(210,52,23)"/><text x="801.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.75%)</title><rect x="802" y="308" width="9" height="15" fill="rgb(230,219,29)"/><text x="805.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.75%)</title><rect x="802" y="324" width="9" height="15" fill="rgb(238,119,19)"/><text x="805.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.37%)</title><rect x="806" y="340" width="5" height="15" fill="rgb(240,167,22)"/><text x="809.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (2 samples, 0.75%)</title><rect x="811" y="324" width="9" height="15" fill="rgb(237,57,21)"/><text x="814.00" y="334.50"></text></g><g><title>array_choose (methods.c:1218) (3 samples, 1.12%)</title><rect x="811" y="292" width="13" height="15" fill="rgb(248,102,16)"/><text x="814.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (3 samples, 1.12%)</title><rect x="811" y="308" width="13" height="15" fill="rgb(210,62,2)"/><text x="814.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.37%)</title><rect x="820" y="324" width="4" height="15" fill="rgb(219,22,19)"/><text x="823.00" y="334.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (1 samples, 0.37%)</title><rect x="824" y="308" width="4" height="15" fill="rgb(249,212,6)"/><text x="827.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2144) (1 samples, 0.37%)</title><rect x="824" y="324" width="4" height="15" fill="rgb(237,187,32)"/><text x="827.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (1 samples, 0.37%)</title><rect x="824" y="340" width="4" height="15" fill="rgb(215,70,1)"/><text x="827.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.37%)</title><rect x="824" y="356" width="4" height="15" fill="rgb(230,85,7)"/><text x="827.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.37%)</title><rect x="824" y="372" width="4" height="15" fill="rgb(228,130,52)"/><text x="827.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.37%)</title><rect x="824" y="388" width="4" height="15" fill="rgb(225,28,2)"/><text x="827.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.37%)</title><rect x="824" y="404" width="4" height="15" fill="rgb(224,12,51)"/><text x="827.00" y="414.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:160) (1 samples, 0.37%)</title><rect x="824" y="420" width="4" height="15" fill="rgb(228,139,43)"/><text x="827.00" y="430.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h:1617) (1 samples, 0.37%)</title><rect x="824" y="436" width="4" height="15" fill="rgb(231,154,50)"/><text x="827.00" y="446.50"></text></g><g><title>0x7f2487064e80 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="828" y="388" width="5" height="15" fill="rgb(240,216,5)"/><text x="831.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (2 samples, 0.75%)</title><rect x="828" y="308" width="9" height="15" fill="rgb(219,179,54)"/><text x="831.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (2 samples, 0.75%)</title><rect x="828" y="324" width="9" height="15" fill="rgb(227,126,31)"/><text x="831.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1296) (2 samples, 0.75%)</title><rect x="828" y="340" width="9" height="15" fill="rgb(206,43,30)"/><text x="831.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (2 samples, 0.75%)</title><rect x="828" y="356" width="9" height="15" fill="rgb(243,57,7)"/><text x="831.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.75%)</title><rect x="828" y="372" width="9" height="15" fill="rgb(249,20,21)"/><text x="831.00" y="382.50"></text></g><g><title>0x7f2487065654 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="833" y="388" width="4" height="15" fill="rgb(227,221,53)"/><text x="836.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (11 samples, 4.10%)</title><rect x="793" y="212" width="49" height="15" fill="rgb(213,1,47)"/><text x="796.00" y="222.50">_run..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (10 samples, 3.73%)</title><rect x="798" y="228" width="44" height="15" fill="rgb(215,141,45)"/><text x="801.00" y="238.50">choo..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (7 samples, 2.61%)</title><rect x="811" y="244" width="31" height="15" fill="rgb(209,78,8)"/><text x="814.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (7 samples, 2.61%)</title><rect x="811" y="260" width="31" height="15" fill="rgb(248,207,12)"/><text x="814.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (7 samples, 2.61%)</title><rect x="811" y="276" width="31" height="15" fill="rgb(225,202,0)"/><text x="814.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c:1224) (4 samples, 1.49%)</title><rect x="824" y="292" width="18" height="15" fill="rgb(253,126,48)"/><text x="827.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:794) (1 samples, 0.37%)</title><rect x="837" y="308" width="5" height="15" fill="rgb(230,101,38)"/><text x="840.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (1 samples, 0.37%)</title><rect x="842" y="212" width="4" height="15" fill="rgb(245,23,21)"/><text x="845.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.37%)</title><rect x="842" y="228" width="4" height="15" fill="rgb(243,12,47)"/><text x="845.00" y="238.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.37%)</title><rect x="850" y="260" width="5" height="15" fill="rgb(240,225,20)"/><text x="853.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.37%)</title><rect x="850" y="276" width="5" height="15" fill="rgb(229,91,24)"/><text x="853.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.37%)</title><rect x="850" y="292" width="5" height="15" fill="rgb(228,154,50)"/><text x="853.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.37%)</title><rect x="850" y="308" width="5" height="15" fill="rgb(211,66,50)"/><text x="853.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.37%)</title><rect x="850" y="324" width="5" height="15" fill="rgb(246,96,40)"/><text x="853.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.37%)</title><rect x="850" y="340" width="5" height="15" fill="rgb(228,28,39)"/><text x="853.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:997) (1 samples, 0.37%)</title><rect x="850" y="356" width="5" height="15" fill="rgb(252,30,1)"/><text x="853.00" y="366.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c:288) (1 samples, 0.37%)</title><rect x="850" y="372" width="5" height="15" fill="rgb(206,203,33)"/><text x="853.00" y="382.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.37%)</title><rect x="850" y="388" width="5" height="15" fill="rgb(218,121,23)"/><text x="853.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="850" y="404" width="5" height="15" fill="rgb(218,182,18)"/><text x="853.00" y="414.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (3 samples, 1.12%)</title><rect x="846" y="228" width="13" height="15" fill="rgb(245,186,8)"/><text x="849.00" y="238.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (3 samples, 1.12%)</title><rect x="846" y="244" width="13" height="15" fill="rgb(236,110,43)"/><text x="849.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.37%)</title><rect x="855" y="260" width="4" height="15" fill="rgb(253,99,29)"/><text x="858.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (36 samples, 13.43%)</title><rect x="705" y="196" width="159" height="15" fill="rgb(244,65,24)"/><text x="708.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (4 samples, 1.49%)</title><rect x="846" y="212" width="18" height="15" fill="rgb(242,100,10)"/><text x="849.00" y="222.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.37%)</title><rect x="859" y="228" width="5" height="15" fill="rgb(217,173,29)"/><text x="862.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.37%)</title><rect x="859" y="244" width="5" height="15" fill="rgb(244,154,48)"/><text x="862.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.37%)</title><rect x="859" y="260" width="5" height="15" fill="rgb(254,40,24)"/><text x="862.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.37%)</title><rect x="859" y="276" width="5" height="15" fill="rgb(242,201,4)"/><text x="862.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:61) (1 samples, 0.37%)</title><rect x="859" y="292" width="5" height="15" fill="rgb(246,64,41)"/><text x="862.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.37%)</title><rect x="868" y="292" width="4" height="15" fill="rgb(251,167,7)"/><text x="871.00" y="302.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (3 samples, 1.12%)</title><rect x="864" y="260" width="13" height="15" fill="rgb(233,13,26)"/><text x="867.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (2 samples, 0.75%)</title><rect x="868" y="276" width="9" height="15" fill="rgb(238,172,22)"/><text x="871.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.37%)</title><rect x="872" y="292" width="5" height="15" fill="rgb(205,130,49)"/><text x="875.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (1 samples, 0.37%)</title><rect x="872" y="308" width="5" height="15" fill="rgb(237,201,20)"/><text x="875.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.37%)</title><rect x="872" y="324" width="5" height="15" fill="rgb(224,166,0)"/><text x="875.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (1 samples, 0.37%)</title><rect x="872" y="340" width="5" height="15" fill="rgb(233,88,33)"/><text x="875.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:201) (1 samples, 0.37%)</title><rect x="872" y="356" width="5" height="15" fill="rgb(228,163,16)"/><text x="875.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.37%)</title><rect x="872" y="372" width="5" height="15" fill="rgb(222,11,49)"/><text x="875.00" y="382.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:574) (1 samples, 0.37%)</title><rect x="877" y="308" width="4" height="15" fill="rgb(226,53,25)"/><text x="880.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (5 samples, 1.87%)</title><rect x="864" y="196" width="22" height="15" fill="rgb(215,224,45)"/><text x="867.00" y="206.50">r..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (5 samples, 1.87%)</title><rect x="864" y="212" width="22" height="15" fill="rgb(207,87,32)"/><text x="867.00" y="222.50">r..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (5 samples, 1.87%)</title><rect x="864" y="228" width="22" height="15" fill="rgb(252,187,40)"/><text x="867.00" y="238.50">_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (5 samples, 1.87%)</title><rect x="864" y="244" width="22" height="15" fill="rgb(237,19,20)"/><text x="867.00" y="254.50">_..</text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (2 samples, 0.75%)</title><rect x="877" y="260" width="9" height="15" fill="rgb(206,217,18)"/><text x="880.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (2 samples, 0.75%)</title><rect x="877" y="276" width="9" height="15" fill="rgb(210,132,48)"/><text x="880.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.75%)</title><rect x="877" y="292" width="9" height="15" fill="rgb(251,21,12)"/><text x="880.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.37%)</title><rect x="881" y="308" width="5" height="15" fill="rgb(209,129,25)"/><text x="884.00" y="318.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.37%)</title><rect x="881" y="324" width="5" height="15" fill="rgb(243,217,45)"/><text x="884.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.37%)</title><rect x="881" y="340" width="5" height="15" fill="rgb(240,81,47)"/><text x="884.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.37%)</title><rect x="881" y="356" width="5" height="15" fill="rgb(207,158,27)"/><text x="884.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1023) (1 samples, 0.37%)</title><rect x="881" y="372" width="5" height="15" fill="rgb(220,20,42)"/><text x="884.00" y="382.50"></text></g><g><title>0x7f2447afc54f (?) (1 samples, 0.37%)</title><rect x="890" y="244" width="5" height="15" fill="rgb(221,23,18)"/><text x="893.00" y="254.50"></text></g><g><title>0x7f2447b0265e (?) (1 samples, 0.37%)</title><rect x="890" y="260" width="5" height="15" fill="rgb(253,84,54)"/><text x="893.00" y="270.50"></text></g><g><title>0x7f2447b0250f (?) (1 samples, 0.37%)</title><rect x="890" y="276" width="5" height="15" fill="rgb(239,226,32)"/><text x="893.00" y="286.50"></text></g><g><title>0x7f2447b08d6c (?) (1 samples, 0.37%)</title><rect x="890" y="292" width="5" height="15" fill="rgb(217,24,30)"/><text x="893.00" y="302.50"></text></g><g><title>0x7f245105fcfa (?) (1 samples, 0.37%)</title><rect x="890" y="308" width="5" height="15" fill="rgb(251,229,38)"/><text x="893.00" y="318.50"></text></g><g><title>0x7f2451068daa (?) (1 samples, 0.37%)</title><rect x="890" y="324" width="5" height="15" fill="rgb(241,198,16)"/><text x="893.00" y="334.50"></text></g><g><title>0x7f245106acf9 (?) (1 samples, 0.37%)</title><rect x="890" y="340" width="5" height="15" fill="rgb(231,100,41)"/><text x="893.00" y="350.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:528) (1 samples, 0.37%)</title><rect x="895" y="244" width="4" height="15" fill="rgb(242,97,51)"/><text x="898.00" y="254.50"></text></g><g><title>std::vector&lt;pybind11::handle, std::allocator&lt;pybind11::handle&gt; &gt;::push_back (stl_vector.h:924) (1 samples, 0.37%)</title><rect x="895" y="260" width="4" height="15" fill="rgb(212,140,39)"/><text x="898.00" y="270.50"></text></g><g><title>0x7f245106aea0 (libgomp.so.1.0.0) (2 samples, 0.75%)</title><rect x="899" y="484" width="9" height="15" fill="rgb(234,212,39)"/><text x="902.00" y="494.50"></text></g><g><title>0x7f245106aea9 (libgomp.so.1.0.0) (9 samples, 3.36%)</title><rect x="908" y="484" width="39" height="15" fill="rgb(214,163,16)"/><text x="911.00" y="494.50">0x7..</text></g><g><title>0x7f245106aeab (libgomp.so.1.0.0) (9 samples, 3.36%)</title><rect x="947" y="484" width="40" height="15" fill="rgb(245,137,54)"/><text x="950.00" y="494.50">0x7..</text></g><g><title>0x7f2451069ab9 (libgomp.so.1.0.0) (32 samples, 11.94%)</title><rect x="899" y="468" width="141" height="15" fill="rgb(217,131,31)"/><text x="902.00" y="478.50">0x7f2451069ab9 (l..</text></g><g><title>0x7f245106aead (libgomp.so.1.0.0) (12 samples, 4.48%)</title><rect x="987" y="484" width="53" height="15" fill="rgb(248,166,46)"/><text x="990.00" y="494.50">0x7f2..</text></g><g><title>0x7f2451068daa (libgomp.so.1.0.0) (1 samples, 0.37%)</title><rect x="1040" y="484" width="4" height="15" fill="rgb(239,142,26)"/><text x="1043.00" y="494.50"></text></g><g><title>0x7f245106acfb (libgomp.so.1.0.0) (1 samples, 0.37%)</title><rect x="1040" y="500" width="4" height="15" fill="rgb(249,168,41)"/><text x="1043.00" y="510.50"></text></g><g><title>pybind11::array::size (numpy.h:619) (34 samples, 12.69%)</title><rect x="899" y="436" width="150" height="15" fill="rgb(242,2,34)"/><text x="902.00" y="446.50">pybind11::array::si..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (34 samples, 12.69%)</title><rect x="899" y="452" width="150" height="15" fill="rgb(226,101,46)"/><text x="902.00" y="462.50">std::accumulate&lt;lon..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.75%)</title><rect x="1040" y="468" width="9" height="15" fill="rgb(220,207,9)"/><text x="1043.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:363) (1 samples, 0.37%)</title><rect x="1044" y="484" width="5" height="15" fill="rgb(232,58,18)"/><text x="1047.00" y="494.50"></text></g><g><title>0x7f2447ae6420 (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="1044" y="500" width="5" height="15" fill="rgb(236,35,4)"/><text x="1047.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (38 samples, 14.18%)</title><rect x="886" y="196" width="167" height="15" fill="rgb(226,95,35)"/><text x="889.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (38 samples, 14.18%)</title><rect x="886" y="212" width="167" height="15" fill="rgb(247,143,48)"/><text x="889.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (38 samples, 14.18%)</title><rect x="886" y="228" width="167" height="15" fill="rgb(208,206,25)"/><text x="889.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (35 samples, 13.06%)</title><rect x="899" y="244" width="154" height="15" fill="rgb(207,218,39)"/><text x="902.00" y="254.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (35 samples, 13.06%)</title><rect x="899" y="260" width="154" height="15" fill="rgb(221,45,13)"/><text x="902.00" y="270.50">void pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (35 samples, 13.06%)</title><rect x="899" y="276" width="154" height="15" fill="rgb(251,126,44)"/><text x="902.00" y="286.50">void pybind11::cpp_..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (35 samples, 13.06%)</title><rect x="899" y="292" width="154" height="15" fill="rgb(232,122,2)"/><text x="902.00" y="302.50">pybind11::detail::a..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (35 samples, 13.06%)</title><rect x="899" y="308" width="154" height="15" fill="rgb(208,218,30)"/><text x="902.00" y="318.50">pybind11::detail::a..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (35 samples, 13.06%)</title><rect x="899" y="324" width="154" height="15" fill="rgb(213,197,2)"/><text x="902.00" y="334.50">pybind11::cpp_funct..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (35 samples, 13.06%)</title><rect x="899" y="340" width="154" height="15" fill="rgb(240,170,14)"/><text x="902.00" y="350.50">pybind11::array_t&lt;f..</text></g><g><title>pybind11::array::~array (numpy.h:538) (35 samples, 13.06%)</title><rect x="899" y="356" width="154" height="15" fill="rgb(210,161,24)"/><text x="902.00" y="366.50">pybind11::array::~a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (35 samples, 13.06%)</title><rect x="899" y="372" width="154" height="15" fill="rgb(240,185,10)"/><text x="902.00" y="382.50">pybind11::buffer::~..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (35 samples, 13.06%)</title><rect x="899" y="388" width="154" height="15" fill="rgb(211,201,44)"/><text x="902.00" y="398.50">pybind11::object::~..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (35 samples, 13.06%)</title><rect x="899" y="404" width="154" height="15" fill="rgb(227,2,16)"/><text x="902.00" y="414.50">pybind11::handle::d..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (35 samples, 13.06%)</title><rect x="899" y="420" width="154" height="15" fill="rgb(249,28,39)"/><text x="902.00" y="430.50">RuntimeTreeEnsemble..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.37%)</title><rect x="1049" y="436" width="4" height="15" fill="rgb(214,60,44)"/><text x="1052.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_default_append (vector.tcc:578) (1 samples, 0.37%)</title><rect x="1049" y="452" width="4" height="15" fill="rgb(215,51,54)"/><text x="1052.00" y="462.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_deallocate (stl_vector.h:177) (1 samples, 0.37%)</title><rect x="1049" y="468" width="4" height="15" fill="rgb(249,98,51)"/><text x="1052.00" y="478.50"></text></g><g><title>0x7f2487084120 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1049" y="484" width="4" height="15" fill="rgb(252,45,39)"/><text x="1052.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.75%)</title><rect x="1053" y="196" width="9" height="15" fill="rgb(213,135,33)"/><text x="1056.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (1 samples, 0.37%)</title><rect x="1057" y="212" width="5" height="15" fill="rgb(246,141,23)"/><text x="1060.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="1057" y="228" width="5" height="15" fill="rgb(228,92,35)"/><text x="1060.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.37%)</title><rect x="1057" y="244" width="5" height="15" fill="rgb(237,6,4)"/><text x="1060.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.37%)</title><rect x="1057" y="260" width="5" height="15" fill="rgb(214,168,36)"/><text x="1060.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.37%)</title><rect x="1057" y="276" width="5" height="15" fill="rgb(212,117,13)"/><text x="1060.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.37%)</title><rect x="1057" y="292" width="5" height="15" fill="rgb(236,105,34)"/><text x="1060.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1704) (1 samples, 0.37%)</title><rect x="1057" y="308" width="5" height="15" fill="rgb(220,32,22)"/><text x="1060.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (1 samples, 0.37%)</title><rect x="1062" y="196" width="4" height="15" fill="rgb(236,217,35)"/><text x="1065.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.37%)</title><rect x="1062" y="212" width="4" height="15" fill="rgb(236,187,40)"/><text x="1065.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.37%)</title><rect x="1062" y="228" width="4" height="15" fill="rgb(238,9,10)"/><text x="1065.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.37%)</title><rect x="1062" y="244" width="4" height="15" fill="rgb(216,4,33)"/><text x="1065.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.37%)</title><rect x="1062" y="260" width="4" height="15" fill="rgb(208,153,8)"/><text x="1065.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:557) (1 samples, 0.37%)</title><rect x="1062" y="276" width="4" height="15" fill="rgb(219,15,49)"/><text x="1065.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (87 samples, 32.46%)</title><rect x="688" y="180" width="383" height="15" fill="rgb(216,8,43)"/><text x="691.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.37%)</title><rect x="1066" y="196" width="5" height="15" fill="rgb(215,167,27)"/><text x="1069.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.37%)</title><rect x="1071" y="180" width="4" height="15" fill="rgb(231,181,14)"/><text x="1074.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.75%)</title><rect x="1075" y="180" width="9" height="15" fill="rgb(206,201,42)"/><text x="1078.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (3 samples, 1.12%)</title><rect x="1084" y="180" width="13" height="15" fill="rgb(226,129,8)"/><text x="1087.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (100 samples, 37.31%)</title><rect x="661" y="164" width="440" height="15" fill="rgb(232,117,34)"/><text x="664.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:45..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.37%)</title><rect x="1097" y="180" width="4" height="15" fill="rgb(236,199,4)"/><text x="1100.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:61) (104 samples, 38.81%)</title><rect x="648" y="52" width="458" height="15" fill="rgb(221,219,48)"/><text x="651.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimator..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:60) (104 samples, 38.81%)</title><rect x="648" y="68" width="458" height="15" fill="rgb(227,60,47)"/><text x="651.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estim..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:37) (103 samples, 38.43%)</title><rect x="652" y="84" width="454" height="15" fill="rgb(224,53,26)"/><text x="655.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_esti..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:31) (103 samples, 38.43%)</title><rect x="652" y="100" width="454" height="15" fill="rgb(224,43,29)"/><text x="655.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (103 samples, 38.43%)</title><rect x="652" y="116" width="454" height="15" fill="rgb(214,213,4)"/><text x="655.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (102 samples, 38.06%)</title><rect x="657" y="132" width="449" height="15" fill="rgb(245,179,53)"/><text x="660.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (102 samples, 38.06%)</title><rect x="657" y="148" width="449" height="15" fill="rgb(242,62,24)"/><text x="660.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.37%)</title><rect x="1101" y="164" width="5" height="15" fill="rgb(229,50,35)"/><text x="1104.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.37%)</title><rect x="1101" y="180" width="5" height="15" fill="rgb(245,38,17)"/><text x="1104.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.37%)</title><rect x="1101" y="196" width="5" height="15" fill="rgb(240,13,22)"/><text x="1104.00" y="206.50"></text></g><g><title>0x7f24470a9af0 (?) (1 samples, 0.37%)</title><rect x="1106" y="564" width="4" height="15" fill="rgb(248,206,12)"/><text x="1109.00" y="574.50"></text></g><g><title>0x7f24470bc1d2 (?) (1 samples, 0.37%)</title><rect x="1106" y="580" width="4" height="15" fill="rgb(244,100,29)"/><text x="1109.00" y="590.50"></text></g><g><title>0x7f24470bb7b8 (?) (1 samples, 0.37%)</title><rect x="1106" y="596" width="4" height="15" fill="rgb(242,167,21)"/><text x="1109.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="1106" y="612" width="4" height="15" fill="rgb(245,174,28)"/><text x="1109.00" y="622.50"></text></g><g><title>0x7f24470b96f8 (?) (1 samples, 0.37%)</title><rect x="1106" y="628" width="4" height="15" fill="rgb(239,74,26)"/><text x="1109.00" y="638.50"></text></g><g><title>0x7f244754494f (?) (1 samples, 0.37%)</title><rect x="1106" y="644" width="4" height="15" fill="rgb(214,205,53)"/><text x="1109.00" y="654.50"></text></g><g><title>0x7f24470ba59c (?) (1 samples, 0.37%)</title><rect x="1106" y="660" width="4" height="15" fill="rgb(248,205,32)"/><text x="1109.00" y="670.50"></text></g><g><title>0x7f244765f3ad (?) (1 samples, 0.37%)</title><rect x="1106" y="676" width="4" height="15" fill="rgb(208,93,33)"/><text x="1109.00" y="686.50"></text></g><g><title>0x7f244765f038 (?) (1 samples, 0.37%)</title><rect x="1106" y="692" width="4" height="15" fill="rgb(254,24,40)"/><text x="1109.00" y="702.50"></text></g><g><title>0x7f2487063be4 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1106" y="708" width="4" height="15" fill="rgb(217,123,52)"/><text x="1109.00" y="718.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:36) (2 samples, 0.75%)</title><rect x="1106" y="84" width="9" height="15" fill="rgb(220,34,49)"/><text x="1109.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.75%)</title><rect x="1106" y="100" width="9" height="15" fill="rgb(225,220,49)"/><text x="1109.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.75%)</title><rect x="1106" y="116" width="9" height="15" fill="rgb(220,141,24)"/><text x="1109.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.75%)</title><rect x="1106" y="132" width="9" height="15" fill="rgb(205,202,26)"/><text x="1109.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.75%)</title><rect x="1106" y="148" width="9" height="15" fill="rgb(245,182,30)"/><text x="1109.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.75%)</title><rect x="1106" y="164" width="9" height="15" fill="rgb(228,198,45)"/><text x="1109.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="1106" y="180" width="9" height="15" fill="rgb(214,187,19)"/><text x="1109.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="1106" y="196" width="9" height="15" fill="rgb(218,198,41)"/><text x="1109.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="1106" y="212" width="9" height="15" fill="rgb(242,19,24)"/><text x="1109.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="1106" y="228" width="9" height="15" fill="rgb(234,157,48)"/><text x="1109.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="1106" y="244" width="9" height="15" fill="rgb(232,225,27)"/><text x="1109.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.75%)</title><rect x="1106" y="260" width="9" height="15" fill="rgb(233,139,30)"/><text x="1109.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="1106" y="276" width="9" height="15" fill="rgb(209,44,43)"/><text x="1109.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="1106" y="292" width="9" height="15" fill="rgb(212,162,12)"/><text x="1109.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="1106" y="308" width="9" height="15" fill="rgb(216,165,17)"/><text x="1109.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="1106" y="324" width="9" height="15" fill="rgb(210,229,39)"/><text x="1109.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="1106" y="340" width="9" height="15" fill="rgb(250,72,30)"/><text x="1109.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.75%)</title><rect x="1106" y="356" width="9" height="15" fill="rgb(222,155,16)"/><text x="1109.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="1106" y="372" width="9" height="15" fill="rgb(213,48,39)"/><text x="1109.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="1106" y="388" width="9" height="15" fill="rgb(219,93,1)"/><text x="1109.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.75%)</title><rect x="1106" y="404" width="9" height="15" fill="rgb(224,215,29)"/><text x="1109.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.75%)</title><rect x="1106" y="420" width="9" height="15" fill="rgb(232,216,49)"/><text x="1109.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="1106" y="436" width="9" height="15" fill="rgb(253,211,7)"/><text x="1109.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.75%)</title><rect x="1106" y="452" width="9" height="15" fill="rgb(246,109,20)"/><text x="1109.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.75%)</title><rect x="1106" y="468" width="9" height="15" fill="rgb(212,197,13)"/><text x="1109.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.75%)</title><rect x="1106" y="484" width="9" height="15" fill="rgb(205,130,46)"/><text x="1109.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.75%)</title><rect x="1106" y="500" width="9" height="15" fill="rgb(217,208,24)"/><text x="1109.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.75%)</title><rect x="1106" y="516" width="9" height="15" fill="rgb(222,102,48)"/><text x="1109.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.75%)</title><rect x="1106" y="532" width="9" height="15" fill="rgb(231,17,28)"/><text x="1109.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.75%)</title><rect x="1106" y="548" width="9" height="15" fill="rgb(213,168,2)"/><text x="1109.00" y="558.50"></text></g><g><title>PyInit_onnxruntime_pybind11_state (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="564" width="5" height="15" fill="rgb(209,189,38)"/><text x="1113.00" y="574.50"></text></g><g><title>onnxruntime::Environment::Create (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="580" width="5" height="15" fill="rgb(230,211,48)"/><text x="1113.00" y="590.50"></text></g><g><title>onnxruntime::Environment::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="596" width="5" height="15" fill="rgb(228,82,0)"/><text x="1113.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="1110" y="612" width="5" height="15" fill="rgb(220,181,27)"/><text x="1113.00" y="622.50"></text></g><g><title>void std::call_once&lt;onnxruntime::Environment::Initialize()::{lambda()#1}, &gt;(std::once_flag&amp;, onnxruntime::Environment::Initialize()::{lambda()#1}&amp;&amp;, &amp;&amp;)::{lambda()#2}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="628" width="5" height="15" fill="rgb(235,82,48)"/><text x="1113.00" y="638.50"></text></g><g><title>onnx::OpSet_Onnx_ver9::ForEachSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="644" width="5" height="15" fill="rgb(233,213,41)"/><text x="1113.00" y="654.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::Where_Onnx_ver9&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="660" width="5" height="15" fill="rgb(242,226,14)"/><text x="1113.00" y="670.50"></text></g><g><title>onnx::OpSchema::TypeConstraint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="676" width="5" height="15" fill="rgb(247,197,45)"/><text x="1113.00" y="686.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="692" width="5" height="15" fill="rgb(254,40,19)"/><text x="1113.00" y="702.50"></text></g><g><title>onnx::Utils::DataTypeUtils::ToType[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1110" y="708" width="5" height="15" fill="rgb(210,55,5)"/><text x="1113.00" y="718.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1123" y="260" width="5" height="15" fill="rgb(237,36,31)"/><text x="1126.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="1123" y="276" width="5" height="15" fill="rgb(236,19,3)"/><text x="1126.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1132" y="292" width="5" height="15" fill="rgb(216,201,8)"/><text x="1135.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1132" y="308" width="5" height="15" fill="rgb(251,66,48)"/><text x="1135.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1132" y="324" width="5" height="15" fill="rgb(220,123,19)"/><text x="1135.00" y="334.50"></text></g><g><title>0x7f248706500a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1132" y="340" width="5" height="15" fill="rgb(230,219,27)"/><text x="1135.00" y="350.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="340" width="4" height="15" fill="rgb(242,61,7)"/><text x="1140.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="356" width="4" height="15" fill="rgb(245,223,49)"/><text x="1140.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="372" width="4" height="15" fill="rgb(241,197,46)"/><text x="1140.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="388" width="4" height="15" fill="rgb(231,94,20)"/><text x="1140.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="404" width="4" height="15" fill="rgb(241,7,8)"/><text x="1140.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="420" width="4" height="15" fill="rgb(247,110,18)"/><text x="1140.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="436" width="4" height="15" fill="rgb(225,222,40)"/><text x="1140.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="452" width="4" height="15" fill="rgb(210,97,51)"/><text x="1140.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="468" width="4" height="15" fill="rgb(233,156,22)"/><text x="1140.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="484" width="4" height="15" fill="rgb(249,206,17)"/><text x="1140.00" y="494.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="500" width="4" height="15" fill="rgb(216,190,6)"/><text x="1140.00" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1137" y="516" width="4" height="15" fill="rgb(224,117,35)"/><text x="1140.00" y="526.50"></text></g><g><title>0x7f2487083d6f (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1137" y="532" width="4" height="15" fill="rgb(241,27,6)"/><text x="1140.00" y="542.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="340" width="4" height="15" fill="rgb(229,183,52)"/><text x="1144.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="356" width="4" height="15" fill="rgb(226,186,43)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="372" width="4" height="15" fill="rgb(208,167,15)"/><text x="1144.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="388" width="4" height="15" fill="rgb(206,208,37)"/><text x="1144.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="404" width="4" height="15" fill="rgb(221,209,16)"/><text x="1144.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="420" width="4" height="15" fill="rgb(237,156,53)"/><text x="1144.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="436" width="4" height="15" fill="rgb(230,76,7)"/><text x="1144.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::GetAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1141" y="452" width="4" height="15" fill="rgb(248,136,43)"/><text x="1144.00" y="462.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1145" y="356" width="5" height="15" fill="rgb(254,166,39)"/><text x="1148.00" y="366.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1145" y="340" width="9" height="15" fill="rgb(242,14,3)"/><text x="1148.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1150" y="356" width="4" height="15" fill="rgb(233,56,28)"/><text x="1153.00" y="366.50"></text></g><g><title>0x7f2487063a55 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1154" y="356" width="5" height="15" fill="rgb(237,184,51)"/><text x="1157.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="356" width="4" height="15" fill="rgb(239,166,45)"/><text x="1162.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="372" width="4" height="15" fill="rgb(232,164,34)"/><text x="1162.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="388" width="4" height="15" fill="rgb(254,129,24)"/><text x="1162.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="404" width="4" height="15" fill="rgb(247,119,7)"/><text x="1162.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="420" width="4" height="15" fill="rgb(224,134,14)"/><text x="1162.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="436" width="4" height="15" fill="rgb(243,209,27)"/><text x="1162.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1159" y="452" width="4" height="15" fill="rgb(248,59,25)"/><text x="1162.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1159" y="468" width="4" height="15" fill="rgb(208,164,16)"/><text x="1162.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1159" y="484" width="4" height="15" fill="rgb(242,173,42)"/><text x="1162.00" y="494.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.12%)</title><rect x="1154" y="340" width="13" height="15" fill="rgb(222,147,42)"/><text x="1157.00" y="350.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1163" y="356" width="4" height="15" fill="rgb(245,81,15)"/><text x="1166.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1163" y="372" width="4" height="15" fill="rgb(252,93,4)"/><text x="1166.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1163" y="388" width="4" height="15" fill="rgb(253,167,12)"/><text x="1166.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="420" width="5" height="15" fill="rgb(228,222,40)"/><text x="1170.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="436" width="5" height="15" fill="rgb(215,5,17)"/><text x="1170.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="452" width="5" height="15" fill="rgb(206,23,3)"/><text x="1170.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="468" width="5" height="15" fill="rgb(218,145,36)"/><text x="1170.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="484" width="5" height="15" fill="rgb(230,49,42)"/><text x="1170.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1167" y="500" width="5" height="15" fill="rgb(233,140,37)"/><text x="1170.00" y="510.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1167" y="516" width="5" height="15" fill="rgb(229,117,31)"/><text x="1170.00" y="526.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1167" y="340" width="9" height="15" fill="rgb(216,115,33)"/><text x="1170.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1167" y="356" width="9" height="15" fill="rgb(228,222,7)"/><text x="1170.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1167" y="372" width="9" height="15" fill="rgb(245,25,19)"/><text x="1170.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1167" y="388" width="9" height="15" fill="rgb(222,110,24)"/><text x="1170.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.75%)</title><rect x="1167" y="404" width="9" height="15" fill="rgb(228,159,14)"/><text x="1170.00" y="414.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1172" y="420" width="4" height="15" fill="rgb(250,16,39)"/><text x="1175.00" y="430.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.48%)</title><rect x="1128" y="260" width="53" height="15" fill="rgb(247,196,52)"/><text x="1131.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 4.48%)</title><rect x="1128" y="276" width="53" height="15" fill="rgb(239,8,50)"/><text x="1131.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.73%)</title><rect x="1137" y="292" width="44" height="15" fill="rgb(211,117,42)"/><text x="1140.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.73%)</title><rect x="1137" y="308" width="44" height="15" fill="rgb(223,13,17)"/><text x="1140.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.73%)</title><rect x="1137" y="324" width="44" height="15" fill="rgb(232,110,50)"/><text x="1140.00" y="334.50">onnx..</text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1176" y="340" width="5" height="15" fill="rgb(226,108,36)"/><text x="1179.00" y="350.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 5.22%)</title><rect x="1123" y="244" width="62" height="15" fill="rgb(212,128,22)"/><text x="1126.00" y="254.50">onnxru..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1181" y="260" width="4" height="15" fill="rgb(221,142,14)"/><text x="1184.00" y="270.50"></text></g><g><title>all (268 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,173,7)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:68) (19 samples, 7.09%)</title><rect x="1106" y="52" width="84" height="15" fill="rgb(224,128,8)"/><text x="1109.00" y="62.50">&lt;module&gt; ..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:67) (19 samples, 7.09%)</title><rect x="1106" y="68" width="84" height="15" fill="rgb(208,116,47)"/><text x="1109.00" y="78.50">profile_o..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:37) (17 samples, 6.34%)</title><rect x="1115" y="84" width="75" height="15" fill="rgb(245,60,9)"/><text x="1118.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:31) (17 samples, 6.34%)</title><rect x="1115" y="100" width="75" height="15" fill="rgb(241,49,8)"/><text x="1118.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (16 samples, 5.97%)</title><rect x="1119" y="116" width="71" height="15" fill="rgb(248,145,17)"/><text x="1122.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (16 samples, 5.97%)</title><rect x="1119" y="132" width="71" height="15" fill="rgb(250,203,46)"/><text x="1122.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (15 samples, 5.60%)</title><rect x="1123" y="148" width="67" height="15" fill="rgb(230,229,3)"/><text x="1126.00" y="158.50">run (ml..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (15 samples, 5.60%)</title><rect x="1123" y="164" width="67" height="15" fill="rgb(237,40,13)"/><text x="1126.00" y="174.50">_run_wh..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (15 samples, 5.60%)</title><rect x="1123" y="180" width="67" height="15" fill="rgb(228,142,3)"/><text x="1126.00" y="190.50">run (ml..</text></g><g><title>run (onnxruntime/capi/session.py:136) (15 samples, 5.60%)</title><rect x="1123" y="196" width="67" height="15" fill="rgb(212,57,36)"/><text x="1126.00" y="206.50">run (on..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.60%)</title><rect x="1123" y="212" width="67" height="15" fill="rgb(218,119,5)"/><text x="1126.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 5.60%)</title><rect x="1123" y="228" width="67" height="15" fill="rgb(209,47,2)"/><text x="1126.00" y="238.50">void py..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(205,22,6)"/><text x="1188.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(228,55,31)"/><text x="1188.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(207,53,46)"/><text x="1188.00" y="286.50"></text></g></g></svg>