<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2246" onload="init(evt)" viewBox="0 0 1200 2246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2246" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2229.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2229.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:1) (1 samples, 0.43%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(205,38,32)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(248,43,8)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(248,164,34)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(244,138,27)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(231,113,10)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(208,219,50)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:148) (1 samples, 0.43%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(205,14,16)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(222,70,21)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(237,90,6)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(219,216,3)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(231,202,7)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(231,77,44)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(236,80,18)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(216,62,25)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/fft/__init__.py:189) (1 samples, 0.43%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(223,136,10)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(229,146,47)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.43%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(252,32,4)"/><text x="13.00" y="414.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.43%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(227,69,39)"/><text x="13.00" y="430.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.43%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(223,116,16)"/><text x="13.00" y="446.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.43%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(224,202,7)"/><text x="13.00" y="462.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1393) (1 samples, 0.43%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(223,170,46)"/><text x="13.00" y="478.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.43%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(241,201,27)"/><text x="18.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.43%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(208,97,41)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.85%)</title><rect x="20" y="980" width="10" height="15" fill="rgb(243,61,27)"/><text x="23.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.43%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(234,75,54)"/><text x="28.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.43%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(249,193,45)"/><text x="28.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (4 samples, 1.71%)</title><rect x="15" y="916" width="20" height="15" fill="rgb(229,59,19)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (4 samples, 1.71%)</title><rect x="15" y="932" width="20" height="15" fill="rgb(213,177,20)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (3 samples, 1.28%)</title><rect x="20" y="948" width="15" height="15" fill="rgb(236,23,9)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (3 samples, 1.28%)</title><rect x="20" y="964" width="15" height="15" fill="rgb(237,8,24)"/><text x="23.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.43%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(245,146,14)"/><text x="33.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.43%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(247,131,42)"/><text x="33.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.43%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(243,29,46)"/><text x="33.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:115) (1 samples, 0.43%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(250,199,15)"/><text x="33.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.43%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(220,18,32)"/><text x="33.00" y="1054.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.43%)</title><rect x="35" y="932" width="5" height="15" fill="rgb(205,178,18)"/><text x="38.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.43%)</title><rect x="35" y="948" width="5" height="15" fill="rgb(239,59,3)"/><text x="38.00" y="958.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.43%)</title><rect x="35" y="964" width="5" height="15" fill="rgb(230,158,30)"/><text x="38.00" y="974.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.43%)</title><rect x="35" y="980" width="5" height="15" fill="rgb(228,16,26)"/><text x="38.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (6 samples, 2.56%)</title><rect x="15" y="852" width="30" height="15" fill="rgb(246,147,31)"/><text x="18.00" y="862.50">_i..</text></g><g><title>_build_master (pkg_resources/__init__.py:574) (6 samples, 2.56%)</title><rect x="15" y="868" width="30" height="15" fill="rgb(235,149,20)"/><text x="18.00" y="878.50">_b..</text></g><g><title>__init__ (pkg_resources/__init__.py:567) (6 samples, 2.56%)</title><rect x="15" y="884" width="30" height="15" fill="rgb(241,180,5)"/><text x="18.00" y="894.50">__..</text></g><g><title>add_entry (pkg_resources/__init__.py:623) (6 samples, 2.56%)</title><rect x="15" y="900" width="30" height="15" fill="rgb(245,134,49)"/><text x="18.00" y="910.50">ad..</text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.85%)</title><rect x="35" y="916" width="10" height="15" fill="rgb(219,148,51)"/><text x="38.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.43%)</title><rect x="40" y="932" width="5" height="15" fill="rgb(207,115,25)"/><text x="43.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.43%)</title><rect x="40" y="948" width="5" height="15" fill="rgb(211,173,20)"/><text x="43.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.43%)</title><rect x="45" y="852" width="5" height="15" fill="rgb(240,34,48)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.43%)</title><rect x="45" y="868" width="5" height="15" fill="rgb(229,221,23)"/><text x="48.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.43%)</title><rect x="45" y="884" width="5" height="15" fill="rgb(236,140,37)"/><text x="48.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.43%)</title><rect x="45" y="900" width="5" height="15" fill="rgb(218,50,24)"/><text x="48.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.43%)</title><rect x="45" y="916" width="5" height="15" fill="rgb(211,119,0)"/><text x="48.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.43%)</title><rect x="45" y="932" width="5" height="15" fill="rgb(233,163,40)"/><text x="48.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.43%)</title><rect x="45" y="948" width="5" height="15" fill="rgb(245,70,20)"/><text x="48.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.43%)</title><rect x="45" y="964" width="5" height="15" fill="rgb(216,21,1)"/><text x="48.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.43%)</title><rect x="45" y="980" width="5" height="15" fill="rgb(247,100,2)"/><text x="48.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:58) (1 samples, 0.43%)</title><rect x="45" y="996" width="5" height="15" fill="rgb(210,224,14)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 3.42%)</title><rect x="15" y="820" width="40" height="15" fill="rgb(231,11,21)"/><text x="18.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 3.42%)</title><rect x="15" y="836" width="40" height="15" fill="rgb(249,76,15)"/><text x="18.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.43%)</title><rect x="50" y="852" width="5" height="15" fill="rgb(236,185,54)"/><text x="53.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.43%)</title><rect x="50" y="868" width="5" height="15" fill="rgb(233,107,14)"/><text x="53.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.43%)</title><rect x="50" y="884" width="5" height="15" fill="rgb(232,98,53)"/><text x="53.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.43%)</title><rect x="50" y="900" width="5" height="15" fill="rgb(211,172,19)"/><text x="53.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.43%)</title><rect x="50" y="916" width="5" height="15" fill="rgb(251,25,50)"/><text x="53.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.43%)</title><rect x="50" y="932" width="5" height="15" fill="rgb(213,154,7)"/><text x="53.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.43%)</title><rect x="50" y="948" width="5" height="15" fill="rgb(247,30,32)"/><text x="53.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (9 samples, 3.85%)</title><rect x="15" y="148" width="45" height="15" fill="rgb(233,23,33)"/><text x="18.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="164" width="45" height="15" fill="rgb(218,211,9)"/><text x="18.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 3.85%)</title><rect x="15" y="180" width="45" height="15" fill="rgb(210,177,9)"/><text x="18.00" y="190.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="196" width="45" height="15" fill="rgb(248,113,25)"/><text x="18.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="212" width="45" height="15" fill="rgb(229,181,4)"/><text x="18.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.85%)</title><rect x="15" y="228" width="45" height="15" fill="rgb(205,112,9)"/><text x="18.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.85%)</title><rect x="15" y="244" width="45" height="15" fill="rgb(250,75,31)"/><text x="18.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.85%)</title><rect x="15" y="260" width="45" height="15" fill="rgb(249,40,42)"/><text x="18.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="276" width="45" height="15" fill="rgb(223,221,12)"/><text x="18.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 3.85%)</title><rect x="15" y="292" width="45" height="15" fill="rgb(216,213,1)"/><text x="18.00" y="302.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="308" width="45" height="15" fill="rgb(225,209,21)"/><text x="18.00" y="318.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.85%)</title><rect x="15" y="324" width="45" height="15" fill="rgb(238,40,35)"/><text x="18.00" y="334.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.85%)</title><rect x="15" y="340" width="45" height="15" fill="rgb(209,148,34)"/><text x="18.00" y="350.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.85%)</title><rect x="15" y="356" width="45" height="15" fill="rgb(249,48,20)"/><text x="18.00" y="366.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="372" width="45" height="15" fill="rgb(250,190,18)"/><text x="18.00" y="382.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 3.85%)</title><rect x="15" y="388" width="45" height="15" fill="rgb(251,52,33)"/><text x="18.00" y="398.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="404" width="45" height="15" fill="rgb(207,167,54)"/><text x="18.00" y="414.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.85%)</title><rect x="15" y="420" width="45" height="15" fill="rgb(226,53,37)"/><text x="18.00" y="430.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.85%)</title><rect x="15" y="436" width="45" height="15" fill="rgb(253,221,14)"/><text x="18.00" y="446.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.85%)</title><rect x="15" y="452" width="45" height="15" fill="rgb(218,201,37)"/><text x="18.00" y="462.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="468" width="45" height="15" fill="rgb(220,17,6)"/><text x="18.00" y="478.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 3.85%)</title><rect x="15" y="484" width="45" height="15" fill="rgb(223,57,54)"/><text x="18.00" y="494.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="500" width="45" height="15" fill="rgb(246,66,1)"/><text x="18.00" y="510.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.85%)</title><rect x="15" y="516" width="45" height="15" fill="rgb(223,34,12)"/><text x="18.00" y="526.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.85%)</title><rect x="15" y="532" width="45" height="15" fill="rgb(223,133,12)"/><text x="18.00" y="542.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.85%)</title><rect x="15" y="548" width="45" height="15" fill="rgb(218,81,24)"/><text x="18.00" y="558.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="564" width="45" height="15" fill="rgb(253,68,45)"/><text x="18.00" y="574.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 3.85%)</title><rect x="15" y="580" width="45" height="15" fill="rgb(252,184,0)"/><text x="18.00" y="590.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="596" width="45" height="15" fill="rgb(246,91,5)"/><text x="18.00" y="606.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 3.85%)</title><rect x="15" y="612" width="45" height="15" fill="rgb(219,211,2)"/><text x="18.00" y="622.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="628" width="45" height="15" fill="rgb(240,2,25)"/><text x="18.00" y="638.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="644" width="45" height="15" fill="rgb(246,159,7)"/><text x="18.00" y="654.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.85%)</title><rect x="15" y="660" width="45" height="15" fill="rgb(227,38,6)"/><text x="18.00" y="670.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.85%)</title><rect x="15" y="676" width="45" height="15" fill="rgb(215,65,3)"/><text x="18.00" y="686.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.85%)</title><rect x="15" y="692" width="45" height="15" fill="rgb(233,56,51)"/><text x="18.00" y="702.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="708" width="45" height="15" fill="rgb(244,22,5)"/><text x="18.00" y="718.50">_cal..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 3.85%)</title><rect x="15" y="724" width="45" height="15" fill="rgb(247,10,36)"/><text x="18.00" y="734.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 3.85%)</title><rect x="15" y="740" width="45" height="15" fill="rgb(237,47,45)"/><text x="18.00" y="750.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 3.85%)</title><rect x="15" y="756" width="45" height="15" fill="rgb(218,220,11)"/><text x="18.00" y="766.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 3.85%)</title><rect x="15" y="772" width="45" height="15" fill="rgb(205,93,36)"/><text x="18.00" y="782.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 3.85%)</title><rect x="15" y="788" width="45" height="15" fill="rgb(223,127,19)"/><text x="18.00" y="798.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 3.85%)</title><rect x="15" y="804" width="45" height="15" fill="rgb(223,100,10)"/><text x="18.00" y="814.50">_cal..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.43%)</title><rect x="55" y="820" width="5" height="15" fill="rgb(243,144,20)"/><text x="58.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="836" width="5" height="15" fill="rgb(231,96,12)"/><text x="58.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="852" width="5" height="15" fill="rgb(240,214,39)"/><text x="58.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="868" width="5" height="15" fill="rgb(232,213,6)"/><text x="58.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="884" width="5" height="15" fill="rgb(216,148,53)"/><text x="58.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="900" width="5" height="15" fill="rgb(252,39,24)"/><text x="58.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.43%)</title><rect x="55" y="916" width="5" height="15" fill="rgb(220,180,44)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="932" width="5" height="15" fill="rgb(205,40,29)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="948" width="5" height="15" fill="rgb(206,1,40)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="964" width="5" height="15" fill="rgb(205,162,26)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="980" width="5" height="15" fill="rgb(234,2,28)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="996" width="5" height="15" fill="rgb(249,226,6)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.43%)</title><rect x="55" y="1012" width="5" height="15" fill="rgb(216,48,33)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="1028" width="5" height="15" fill="rgb(226,49,46)"/><text x="58.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="1044" width="5" height="15" fill="rgb(252,220,47)"/><text x="58.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="1060" width="5" height="15" fill="rgb(223,99,6)"/><text x="58.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="1076" width="5" height="15" fill="rgb(230,14,12)"/><text x="58.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="1092" width="5" height="15" fill="rgb(236,227,16)"/><text x="58.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.43%)</title><rect x="55" y="1108" width="5" height="15" fill="rgb(230,189,0)"/><text x="58.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="1124" width="5" height="15" fill="rgb(249,136,53)"/><text x="58.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="1140" width="5" height="15" fill="rgb(207,147,14)"/><text x="58.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="1156" width="5" height="15" fill="rgb(234,21,4)"/><text x="58.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.43%)</title><rect x="55" y="1172" width="5" height="15" fill="rgb(231,196,42)"/><text x="58.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.43%)</title><rect x="55" y="1188" width="5" height="15" fill="rgb(211,47,45)"/><text x="58.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.43%)</title><rect x="55" y="1204" width="5" height="15" fill="rgb(247,195,2)"/><text x="58.00" y="1214.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.43%)</title><rect x="60" y="772" width="5" height="15" fill="rgb(211,60,28)"/><text x="63.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="60" y="788" width="5" height="15" fill="rgb(236,145,7)"/><text x="63.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="804" width="5" height="15" fill="rgb(205,204,11)"/><text x="63.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="820" width="5" height="15" fill="rgb(247,107,37)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="836" width="5" height="15" fill="rgb(227,194,28)"/><text x="63.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="852" width="5" height="15" fill="rgb(210,219,46)"/><text x="63.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="868" width="5" height="15" fill="rgb(244,17,38)"/><text x="63.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="884" width="5" height="15" fill="rgb(208,98,33)"/><text x="63.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.43%)</title><rect x="60" y="900" width="5" height="15" fill="rgb(236,51,9)"/><text x="63.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="916" width="5" height="15" fill="rgb(214,201,5)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="932" width="5" height="15" fill="rgb(240,167,8)"/><text x="63.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="948" width="5" height="15" fill="rgb(224,111,48)"/><text x="63.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="964" width="5" height="15" fill="rgb(216,31,40)"/><text x="63.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="980" width="5" height="15" fill="rgb(237,94,53)"/><text x="63.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.43%)</title><rect x="60" y="996" width="5" height="15" fill="rgb(248,94,51)"/><text x="63.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1012" width="5" height="15" fill="rgb(251,36,35)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="60" y="1028" width="5" height="15" fill="rgb(251,4,35)"/><text x="63.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="60" y="1044" width="5" height="15" fill="rgb(249,191,52)"/><text x="63.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="60" y="1060" width="5" height="15" fill="rgb(240,200,19)"/><text x="63.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="60" y="1076" width="5" height="15" fill="rgb(235,203,36)"/><text x="63.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:29) (1 samples, 0.43%)</title><rect x="60" y="1092" width="5" height="15" fill="rgb(239,5,12)"/><text x="63.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="60" y="1108" width="5" height="15" fill="rgb(249,116,7)"/><text x="63.00" y="1118.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.43%)</title><rect x="65" y="772" width="5" height="15" fill="rgb(216,177,31)"/><text x="68.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="788" width="5" height="15" fill="rgb(224,177,7)"/><text x="68.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="804" width="5" height="15" fill="rgb(235,114,31)"/><text x="68.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="65" y="820" width="5" height="15" fill="rgb(218,36,34)"/><text x="68.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="65" y="836" width="5" height="15" fill="rgb(227,201,13)"/><text x="68.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="852" width="5" height="15" fill="rgb(205,152,20)"/><text x="68.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.43%)</title><rect x="65" y="868" width="5" height="15" fill="rgb(238,190,0)"/><text x="68.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="884" width="5" height="15" fill="rgb(243,158,14)"/><text x="68.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="900" width="5" height="15" fill="rgb(222,67,13)"/><text x="68.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="65" y="916" width="5" height="15" fill="rgb(250,86,30)"/><text x="68.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="65" y="932" width="5" height="15" fill="rgb(236,211,22)"/><text x="68.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="948" width="5" height="15" fill="rgb(240,15,37)"/><text x="68.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.43%)</title><rect x="65" y="964" width="5" height="15" fill="rgb(253,222,38)"/><text x="68.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="980" width="5" height="15" fill="rgb(225,182,12)"/><text x="68.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="996" width="5" height="15" fill="rgb(245,193,34)"/><text x="68.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="65" y="1012" width="5" height="15" fill="rgb(249,111,21)"/><text x="68.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="65" y="1028" width="5" height="15" fill="rgb(231,54,21)"/><text x="68.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="1044" width="5" height="15" fill="rgb(253,222,22)"/><text x="68.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.43%)</title><rect x="65" y="1060" width="5" height="15" fill="rgb(250,180,23)"/><text x="68.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="1076" width="5" height="15" fill="rgb(221,110,36)"/><text x="68.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.43%)</title><rect x="65" y="1092" width="5" height="15" fill="rgb(220,147,33)"/><text x="68.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="1108" width="5" height="15" fill="rgb(216,23,49)"/><text x="68.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="1124" width="5" height="15" fill="rgb(249,196,37)"/><text x="68.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="1140" width="5" height="15" fill="rgb(233,19,21)"/><text x="68.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="65" y="1156" width="5" height="15" fill="rgb(212,95,18)"/><text x="68.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="65" y="1172" width="5" height="15" fill="rgb(228,84,44)"/><text x="68.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="1188" width="5" height="15" fill="rgb(222,51,14)"/><text x="68.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.43%)</title><rect x="65" y="1204" width="5" height="15" fill="rgb(235,111,12)"/><text x="68.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="1220" width="5" height="15" fill="rgb(232,151,36)"/><text x="68.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="1236" width="5" height="15" fill="rgb(229,220,30)"/><text x="68.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="65" y="1252" width="5" height="15" fill="rgb(216,48,36)"/><text x="68.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="65" y="1268" width="5" height="15" fill="rgb(225,212,12)"/><text x="68.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="1284" width="5" height="15" fill="rgb(254,109,31)"/><text x="68.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.43%)</title><rect x="65" y="1300" width="5" height="15" fill="rgb(205,180,23)"/><text x="68.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="65" y="1316" width="5" height="15" fill="rgb(234,16,38)"/><text x="68.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="65" y="1332" width="5" height="15" fill="rgb(217,206,40)"/><text x="68.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="65" y="1348" width="5" height="15" fill="rgb(215,138,0)"/><text x="68.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="65" y="1364" width="5" height="15" fill="rgb(214,82,42)"/><text x="68.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="65" y="1380" width="5" height="15" fill="rgb(241,83,25)"/><text x="68.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:63) (1 samples, 0.43%)</title><rect x="65" y="1396" width="5" height="15" fill="rgb(240,9,28)"/><text x="68.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.43%)</title><rect x="65" y="1412" width="5" height="15" fill="rgb(226,195,38)"/><text x="68.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.43%)</title><rect x="65" y="1428" width="5" height="15" fill="rgb(207,25,14)"/><text x="68.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.43%)</title><rect x="65" y="1444" width="5" height="15" fill="rgb(218,184,10)"/><text x="68.00" y="1454.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.43%)</title><rect x="65" y="1460" width="5" height="15" fill="rgb(234,2,30)"/><text x="68.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.43%)</title><rect x="65" y="1476" width="5" height="15" fill="rgb(236,111,52)"/><text x="68.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.43%)</title><rect x="65" y="1492" width="5" height="15" fill="rgb(219,82,12)"/><text x="68.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.43%)</title><rect x="65" y="1508" width="5" height="15" fill="rgb(224,217,7)"/><text x="68.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.43%)</title><rect x="65" y="1524" width="5" height="15" fill="rgb(247,49,12)"/><text x="68.00" y="1534.50"></text></g><g><title>_optimize_charset (sre_compile.py:364) (1 samples, 0.43%)</title><rect x="65" y="1540" width="5" height="15" fill="rgb(218,118,17)"/><text x="68.00" y="1550.50"></text></g><g><title>_mk_bitmap (sre_compile.py:414) (1 samples, 0.43%)</title><rect x="65" y="1556" width="5" height="15" fill="rgb(205,203,18)"/><text x="68.00" y="1566.50"></text></g><g><title>&lt;listcomp&gt; (sre_compile.py:414) (1 samples, 0.43%)</title><rect x="65" y="1572" width="5" height="15" fill="rgb(225,187,3)"/><text x="68.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (3 samples, 1.28%)</title><rect x="60" y="244" width="15" height="15" fill="rgb(207,181,21)"/><text x="63.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="60" y="260" width="15" height="15" fill="rgb(242,181,54)"/><text x="63.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="60" y="276" width="15" height="15" fill="rgb(239,229,52)"/><text x="63.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="60" y="292" width="15" height="15" fill="rgb(240,110,15)"/><text x="63.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="60" y="308" width="15" height="15" fill="rgb(227,138,39)"/><text x="63.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="60" y="324" width="15" height="15" fill="rgb(212,0,47)"/><text x="63.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (3 samples, 1.28%)</title><rect x="60" y="340" width="15" height="15" fill="rgb(247,58,3)"/><text x="63.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="60" y="356" width="15" height="15" fill="rgb(239,88,48)"/><text x="63.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.28%)</title><rect x="60" y="372" width="15" height="15" fill="rgb(209,81,53)"/><text x="63.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="60" y="388" width="15" height="15" fill="rgb(224,69,12)"/><text x="63.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="60" y="404" width="15" height="15" fill="rgb(218,5,45)"/><text x="63.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="60" y="420" width="15" height="15" fill="rgb(248,34,28)"/><text x="63.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="60" y="436" width="15" height="15" fill="rgb(209,218,14)"/><text x="63.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="60" y="452" width="15" height="15" fill="rgb(245,224,15)"/><text x="63.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="60" y="468" width="15" height="15" fill="rgb(249,39,33)"/><text x="63.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 1.28%)</title><rect x="60" y="484" width="15" height="15" fill="rgb(243,49,8)"/><text x="63.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="60" y="500" width="15" height="15" fill="rgb(249,159,45)"/><text x="63.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="60" y="516" width="15" height="15" fill="rgb(224,28,37)"/><text x="63.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="60" y="532" width="15" height="15" fill="rgb(239,87,16)"/><text x="63.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="60" y="548" width="15" height="15" fill="rgb(211,1,52)"/><text x="63.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="60" y="564" width="15" height="15" fill="rgb(251,222,50)"/><text x="63.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (3 samples, 1.28%)</title><rect x="60" y="580" width="15" height="15" fill="rgb(237,201,16)"/><text x="63.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="60" y="596" width="15" height="15" fill="rgb(210,91,44)"/><text x="63.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="60" y="612" width="15" height="15" fill="rgb(212,214,39)"/><text x="63.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="60" y="628" width="15" height="15" fill="rgb(251,182,23)"/><text x="63.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="60" y="644" width="15" height="15" fill="rgb(244,102,5)"/><text x="63.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="60" y="660" width="15" height="15" fill="rgb(229,182,13)"/><text x="63.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (3 samples, 1.28%)</title><rect x="60" y="676" width="15" height="15" fill="rgb(237,188,17)"/><text x="63.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="60" y="692" width="15" height="15" fill="rgb(235,218,54)"/><text x="63.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="60" y="708" width="15" height="15" fill="rgb(224,31,4)"/><text x="63.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="60" y="724" width="15" height="15" fill="rgb(228,144,40)"/><text x="63.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="60" y="740" width="15" height="15" fill="rgb(245,222,34)"/><text x="63.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="60" y="756" width="15" height="15" fill="rgb(215,47,1)"/><text x="63.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.43%)</title><rect x="70" y="772" width="5" height="15" fill="rgb(243,185,52)"/><text x="73.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="70" y="788" width="5" height="15" fill="rgb(253,11,12)"/><text x="73.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="804" width="5" height="15" fill="rgb(250,118,31)"/><text x="73.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="820" width="5" height="15" fill="rgb(225,122,31)"/><text x="73.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="836" width="5" height="15" fill="rgb(247,215,28)"/><text x="73.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="852" width="5" height="15" fill="rgb(229,2,42)"/><text x="73.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="868" width="5" height="15" fill="rgb(212,78,48)"/><text x="73.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="884" width="5" height="15" fill="rgb(214,22,42)"/><text x="73.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.43%)</title><rect x="70" y="900" width="5" height="15" fill="rgb(248,173,3)"/><text x="73.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="916" width="5" height="15" fill="rgb(228,225,32)"/><text x="73.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="932" width="5" height="15" fill="rgb(226,68,26)"/><text x="73.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="948" width="5" height="15" fill="rgb(210,109,5)"/><text x="73.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="964" width="5" height="15" fill="rgb(253,13,48)"/><text x="73.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="980" width="5" height="15" fill="rgb(218,92,0)"/><text x="73.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.43%)</title><rect x="70" y="996" width="5" height="15" fill="rgb(253,180,24)"/><text x="73.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="1012" width="5" height="15" fill="rgb(225,189,31)"/><text x="73.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="1028" width="5" height="15" fill="rgb(228,39,28)"/><text x="73.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="1044" width="5" height="15" fill="rgb(245,173,2)"/><text x="73.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="1060" width="5" height="15" fill="rgb(252,150,5)"/><text x="73.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="1076" width="5" height="15" fill="rgb(208,102,3)"/><text x="73.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:62) (1 samples, 0.43%)</title><rect x="70" y="1092" width="5" height="15" fill="rgb(210,105,19)"/><text x="73.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="1108" width="5" height="15" fill="rgb(217,75,30)"/><text x="73.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="1124" width="5" height="15" fill="rgb(252,25,25)"/><text x="73.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="1140" width="5" height="15" fill="rgb(233,217,34)"/><text x="73.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="1156" width="5" height="15" fill="rgb(252,166,38)"/><text x="73.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="1172" width="5" height="15" fill="rgb(245,182,13)"/><text x="73.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py:21) (1 samples, 0.43%)</title><rect x="70" y="1188" width="5" height="15" fill="rgb(254,148,10)"/><text x="73.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="70" y="1204" width="5" height="15" fill="rgb(233,107,22)"/><text x="73.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="70" y="1220" width="5" height="15" fill="rgb(228,86,15)"/><text x="73.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="70" y="1236" width="5" height="15" fill="rgb(223,143,35)"/><text x="73.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="70" y="1252" width="5" height="15" fill="rgb(217,88,28)"/><text x="73.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="70" y="1268" width="5" height="15" fill="rgb(239,103,26)"/><text x="73.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/padding.py:27) (1 samples, 0.43%)</title><rect x="70" y="1284" width="5" height="15" fill="rgb(220,60,36)"/><text x="73.00" y="1294.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.43%)</title><rect x="70" y="1300" width="5" height="15" fill="rgb(230,110,36)"/><text x="73.00" y="1310.50"></text></g><g><title>verify_interface (cryptography/utils.py:103) (1 samples, 0.43%)</title><rect x="70" y="1316" width="5" height="15" fill="rgb(221,111,44)"/><text x="73.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.43%)</title><rect x="75" y="628" width="5" height="15" fill="rgb(230,82,53)"/><text x="78.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="75" y="644" width="5" height="15" fill="rgb(235,181,42)"/><text x="78.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="75" y="660" width="5" height="15" fill="rgb(240,77,4)"/><text x="78.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="75" y="676" width="5" height="15" fill="rgb(228,59,15)"/><text x="78.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="75" y="692" width="5" height="15" fill="rgb(229,178,20)"/><text x="78.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="75" y="708" width="5" height="15" fill="rgb(252,18,36)"/><text x="78.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.43%)</title><rect x="75" y="724" width="5" height="15" fill="rgb(229,170,46)"/><text x="78.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="75" y="740" width="5" height="15" fill="rgb(212,153,37)"/><text x="78.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="75" y="756" width="5" height="15" fill="rgb(251,1,52)"/><text x="78.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="75" y="772" width="5" height="15" fill="rgb(241,13,17)"/><text x="78.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="75" y="788" width="5" height="15" fill="rgb(251,177,7)"/><text x="78.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="75" y="804" width="5" height="15" fill="rgb(210,153,12)"/><text x="78.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.43%)</title><rect x="75" y="820" width="5" height="15" fill="rgb(223,161,26)"/><text x="78.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="75" y="836" width="5" height="15" fill="rgb(225,57,44)"/><text x="78.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="75" y="852" width="5" height="15" fill="rgb(242,141,16)"/><text x="78.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="75" y="868" width="5" height="15" fill="rgb(219,201,49)"/><text x="78.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.43%)</title><rect x="75" y="884" width="5" height="15" fill="rgb(212,63,31)"/><text x="78.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="75" y="900" width="5" height="15" fill="rgb(215,140,1)"/><text x="78.00" y="910.50"></text></g><g><title>0x7ffb690b040e (?) (1 samples, 0.43%)</title><rect x="75" y="916" width="5" height="15" fill="rgb(242,147,43)"/><text x="78.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="75" y="932" width="5" height="15" fill="rgb(205,211,20)"/><text x="78.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="75" y="948" width="5" height="15" fill="rgb(232,192,40)"/><text x="78.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="75" y="964" width="5" height="15" fill="rgb(246,229,25)"/><text x="78.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.43%)</title><rect x="75" y="980" width="5" height="15" fill="rgb(239,164,47)"/><text x="78.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="75" y="996" width="5" height="15" fill="rgb(233,205,14)"/><text x="78.00" y="1006.50"></text></g><g><title>0x7ffb68e69cd2 (?) (1 samples, 0.43%)</title><rect x="75" y="1012" width="5" height="15" fill="rgb(219,29,32)"/><text x="78.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="75" y="1028" width="5" height="15" fill="rgb(235,68,14)"/><text x="78.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="75" y="1044" width="5" height="15" fill="rgb(228,35,54)"/><text x="78.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="75" y="1060" width="5" height="15" fill="rgb(249,187,47)"/><text x="78.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.43%)</title><rect x="75" y="1076" width="5" height="15" fill="rgb(223,136,53)"/><text x="78.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="75" y="1092" width="5" height="15" fill="rgb(217,136,45)"/><text x="78.00" y="1102.50"></text></g><g><title>0x7ffb6855f0e5 (?) (1 samples, 0.43%)</title><rect x="75" y="1108" width="5" height="15" fill="rgb(217,161,17)"/><text x="78.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="75" y="1124" width="5" height="15" fill="rgb(241,23,15)"/><text x="78.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="75" y="1140" width="5" height="15" fill="rgb(221,124,43)"/><text x="78.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="75" y="1156" width="5" height="15" fill="rgb(219,102,25)"/><text x="78.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.43%)</title><rect x="75" y="1172" width="5" height="15" fill="rgb(248,137,36)"/><text x="78.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="75" y="1188" width="5" height="15" fill="rgb(245,105,44)"/><text x="78.00" y="1198.50"></text></g><g><title>0x7ffb682e4ca4 (?) (1 samples, 0.43%)</title><rect x="75" y="1204" width="5" height="15" fill="rgb(224,108,0)"/><text x="78.00" y="1214.50"></text></g><g><title>0x7ffb682ec1cf (?) (1 samples, 0.43%)</title><rect x="75" y="1220" width="5" height="15" fill="rgb(207,27,7)"/><text x="78.00" y="1230.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.43%)</title><rect x="75" y="1236" width="5" height="15" fill="rgb(231,42,48)"/><text x="78.00" y="1246.50"></text></g><g><title>&lt;module&gt; (&lt;string&gt;:1) (1 samples, 0.43%)</title><rect x="75" y="1252" width="5" height="15" fill="rgb(233,65,44)"/><text x="78.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.43%)</title><rect x="80" y="1492" width="5" height="15" fill="rgb(206,57,43)"/><text x="83.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="80" y="1508" width="5" height="15" fill="rgb(226,142,47)"/><text x="83.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="80" y="1524" width="5" height="15" fill="rgb(217,184,52)"/><text x="83.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="80" y="1540" width="5" height="15" fill="rgb(229,117,45)"/><text x="83.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="80" y="1556" width="5" height="15" fill="rgb(226,90,11)"/><text x="83.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="80" y="1572" width="5" height="15" fill="rgb(248,100,10)"/><text x="83.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.43%)</title><rect x="80" y="1588" width="5" height="15" fill="rgb(230,64,42)"/><text x="83.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="80" y="1604" width="5" height="15" fill="rgb(229,81,37)"/><text x="83.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="80" y="1620" width="5" height="15" fill="rgb(223,159,45)"/><text x="83.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="80" y="1636" width="5" height="15" fill="rgb(234,199,19)"/><text x="83.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="80" y="1652" width="5" height="15" fill="rgb(220,141,30)"/><text x="83.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="80" y="1668" width="5" height="15" fill="rgb(252,150,23)"/><text x="83.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.43%)</title><rect x="80" y="1684" width="5" height="15" fill="rgb(213,101,27)"/><text x="83.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="80" y="1700" width="5" height="15" fill="rgb(243,131,1)"/><text x="83.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="80" y="1716" width="5" height="15" fill="rgb(221,48,46)"/><text x="83.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="80" y="1732" width="5" height="15" fill="rgb(214,104,52)"/><text x="83.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="80" y="1748" width="5" height="15" fill="rgb(241,138,50)"/><text x="83.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="80" y="1764" width="5" height="15" fill="rgb(213,164,48)"/><text x="83.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:30) (1 samples, 0.43%)</title><rect x="80" y="1780" width="5" height="15" fill="rgb(253,42,43)"/><text x="83.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="80" y="1796" width="5" height="15" fill="rgb(253,63,32)"/><text x="83.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="80" y="1812" width="5" height="15" fill="rgb(217,64,14)"/><text x="83.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="80" y="1828" width="5" height="15" fill="rgb(252,226,46)"/><text x="83.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="80" y="1844" width="5" height="15" fill="rgb(252,94,31)"/><text x="83.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="80" y="1860" width="5" height="15" fill="rgb(244,159,46)"/><text x="83.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/_cm_listed.py:1241) (1 samples, 0.43%)</title><rect x="80" y="1876" width="5" height="15" fill="rgb(218,26,41)"/><text x="83.00" y="1886.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.28%)</title><rect x="75" y="436" width="15" height="15" fill="rgb(207,29,5)"/><text x="78.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="75" y="452" width="15" height="15" fill="rgb(253,109,37)"/><text x="78.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="75" y="468" width="15" height="15" fill="rgb(213,44,25)"/><text x="78.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="75" y="484" width="15" height="15" fill="rgb(233,9,26)"/><text x="78.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="75" y="500" width="15" height="15" fill="rgb(244,116,39)"/><text x="78.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="75" y="516" width="15" height="15" fill="rgb(251,79,49)"/><text x="78.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.28%)</title><rect x="75" y="532" width="15" height="15" fill="rgb(215,166,41)"/><text x="78.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.28%)</title><rect x="75" y="548" width="15" height="15" fill="rgb(209,138,0)"/><text x="78.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.28%)</title><rect x="75" y="564" width="15" height="15" fill="rgb(235,148,14)"/><text x="78.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.28%)</title><rect x="75" y="580" width="15" height="15" fill="rgb(212,104,19)"/><text x="78.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.28%)</title><rect x="75" y="596" width="15" height="15" fill="rgb(219,119,12)"/><text x="78.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.28%)</title><rect x="75" y="612" width="15" height="15" fill="rgb(218,93,27)"/><text x="78.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.85%)</title><rect x="80" y="628" width="10" height="15" fill="rgb(253,157,41)"/><text x="83.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="644" width="10" height="15" fill="rgb(236,9,2)"/><text x="83.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="660" width="10" height="15" fill="rgb(218,209,27)"/><text x="83.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="676" width="10" height="15" fill="rgb(242,199,7)"/><text x="83.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="692" width="10" height="15" fill="rgb(220,213,40)"/><text x="83.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="708" width="10" height="15" fill="rgb(250,137,30)"/><text x="83.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.85%)</title><rect x="80" y="724" width="10" height="15" fill="rgb(236,27,25)"/><text x="83.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="740" width="10" height="15" fill="rgb(251,45,26)"/><text x="83.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="756" width="10" height="15" fill="rgb(222,212,12)"/><text x="83.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="772" width="10" height="15" fill="rgb(214,203,1)"/><text x="83.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="788" width="10" height="15" fill="rgb(240,47,36)"/><text x="83.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="804" width="10" height="15" fill="rgb(222,8,25)"/><text x="83.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.85%)</title><rect x="80" y="820" width="10" height="15" fill="rgb(208,189,25)"/><text x="83.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="836" width="10" height="15" fill="rgb(226,73,47)"/><text x="83.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="852" width="10" height="15" fill="rgb(223,104,21)"/><text x="83.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="868" width="10" height="15" fill="rgb(236,169,41)"/><text x="83.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="884" width="10" height="15" fill="rgb(240,62,24)"/><text x="83.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="900" width="10" height="15" fill="rgb(245,82,39)"/><text x="83.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.85%)</title><rect x="80" y="916" width="10" height="15" fill="rgb(241,33,22)"/><text x="83.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="932" width="10" height="15" fill="rgb(208,19,22)"/><text x="83.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="948" width="10" height="15" fill="rgb(245,13,7)"/><text x="83.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="964" width="10" height="15" fill="rgb(207,3,2)"/><text x="83.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="980" width="10" height="15" fill="rgb(229,74,5)"/><text x="83.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="996" width="10" height="15" fill="rgb(225,138,2)"/><text x="83.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.85%)</title><rect x="80" y="1012" width="10" height="15" fill="rgb(235,162,35)"/><text x="83.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="1028" width="10" height="15" fill="rgb(220,190,53)"/><text x="83.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="1044" width="10" height="15" fill="rgb(239,66,43)"/><text x="83.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="1060" width="10" height="15" fill="rgb(226,145,19)"/><text x="83.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="1076" width="10" height="15" fill="rgb(207,121,46)"/><text x="83.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="1092" width="10" height="15" fill="rgb(219,173,49)"/><text x="83.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.85%)</title><rect x="80" y="1108" width="10" height="15" fill="rgb(235,200,50)"/><text x="83.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="1124" width="10" height="15" fill="rgb(235,136,12)"/><text x="83.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="1140" width="10" height="15" fill="rgb(216,70,2)"/><text x="83.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="1156" width="10" height="15" fill="rgb(219,117,45)"/><text x="83.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="1172" width="10" height="15" fill="rgb(212,130,2)"/><text x="83.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="1188" width="10" height="15" fill="rgb(245,6,29)"/><text x="83.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.85%)</title><rect x="80" y="1204" width="10" height="15" fill="rgb(244,68,23)"/><text x="83.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="1220" width="10" height="15" fill="rgb(247,189,48)"/><text x="83.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="1236" width="10" height="15" fill="rgb(219,174,43)"/><text x="83.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="1252" width="10" height="15" fill="rgb(252,3,17)"/><text x="83.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="1268" width="10" height="15" fill="rgb(235,65,28)"/><text x="83.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="1284" width="10" height="15" fill="rgb(231,226,0)"/><text x="83.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.85%)</title><rect x="80" y="1300" width="10" height="15" fill="rgb(246,172,7)"/><text x="83.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="1316" width="10" height="15" fill="rgb(240,209,5)"/><text x="83.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="1332" width="10" height="15" fill="rgb(206,147,0)"/><text x="83.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="1348" width="10" height="15" fill="rgb(220,44,9)"/><text x="83.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="1364" width="10" height="15" fill="rgb(227,83,21)"/><text x="83.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="1380" width="10" height="15" fill="rgb(245,4,1)"/><text x="83.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.85%)</title><rect x="80" y="1396" width="10" height="15" fill="rgb(252,36,14)"/><text x="83.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="80" y="1412" width="10" height="15" fill="rgb(243,132,25)"/><text x="83.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="80" y="1428" width="10" height="15" fill="rgb(236,18,48)"/><text x="83.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="80" y="1444" width="10" height="15" fill="rgb(220,98,27)"/><text x="83.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="80" y="1460" width="10" height="15" fill="rgb(227,122,19)"/><text x="83.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="80" y="1476" width="10" height="15" fill="rgb(224,17,52)"/><text x="83.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.43%)</title><rect x="85" y="1492" width="5" height="15" fill="rgb(223,30,39)"/><text x="88.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="85" y="1508" width="5" height="15" fill="rgb(206,102,43)"/><text x="88.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.43%)</title><rect x="85" y="1524" width="5" height="15" fill="rgb(238,81,28)"/><text x="88.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="85" y="1540" width="5" height="15" fill="rgb(213,169,6)"/><text x="88.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="85" y="1556" width="5" height="15" fill="rgb(235,21,39)"/><text x="88.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="85" y="1572" width="5" height="15" fill="rgb(212,148,35)"/><text x="88.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="85" y="1588" width="5" height="15" fill="rgb(232,79,52)"/><text x="88.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="85" y="1604" width="5" height="15" fill="rgb(216,159,14)"/><text x="88.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="85" y="1620" width="5" height="15" fill="rgb(228,144,36)"/><text x="88.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.43%)</title><rect x="85" y="1636" width="5" height="15" fill="rgb(236,63,11)"/><text x="88.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="85" y="1652" width="5" height="15" fill="rgb(233,81,10)"/><text x="88.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="85" y="1668" width="5" height="15" fill="rgb(234,119,52)"/><text x="88.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="85" y="1684" width="5" height="15" fill="rgb(236,113,0)"/><text x="88.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="85" y="1700" width="5" height="15" fill="rgb(233,163,1)"/><text x="88.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="85" y="1716" width="5" height="15" fill="rgb(252,82,13)"/><text x="88.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="85" y="1732" width="5" height="15" fill="rgb(208,94,29)"/><text x="88.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="85" y="1748" width="5" height="15" fill="rgb(226,69,28)"/><text x="88.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.43%)</title><rect x="85" y="1764" width="5" height="15" fill="rgb(216,207,40)"/><text x="88.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="85" y="1780" width="5" height="15" fill="rgb(208,219,2)"/><text x="88.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="85" y="1796" width="5" height="15" fill="rgb(231,206,40)"/><text x="88.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="85" y="1812" width="5" height="15" fill="rgb(224,69,44)"/><text x="88.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="85" y="1828" width="5" height="15" fill="rgb(217,198,20)"/><text x="88.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="85" y="1844" width="5" height="15" fill="rgb(239,2,3)"/><text x="88.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.43%)</title><rect x="85" y="1860" width="5" height="15" fill="rgb(243,129,18)"/><text x="88.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="85" y="1876" width="5" height="15" fill="rgb(230,153,10)"/><text x="88.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="85" y="1892" width="5" height="15" fill="rgb(237,94,12)"/><text x="88.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="85" y="1908" width="5" height="15" fill="rgb(250,59,27)"/><text x="88.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="85" y="1924" width="5" height="15" fill="rgb(238,59,5)"/><text x="88.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="85" y="1940" width="5" height="15" fill="rgb(245,87,31)"/><text x="88.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.43%)</title><rect x="85" y="1956" width="5" height="15" fill="rgb(240,195,39)"/><text x="88.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6579) (1 samples, 0.43%)</title><rect x="85" y="1972" width="5" height="15" fill="rgb(225,120,25)"/><text x="88.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py:5105) (1 samples, 0.43%)</title><rect x="85" y="1988" width="5" height="15" fill="rgb(215,84,6)"/><text x="88.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4449) (1 samples, 0.43%)</title><rect x="85" y="2004" width="5" height="15" fill="rgb(206,126,17)"/><text x="88.00" y="2014.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2020" width="5" height="15" fill="rgb(209,78,40)"/><text x="88.00" y="2030.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2036" width="5" height="15" fill="rgb(220,210,41)"/><text x="88.00" y="2046.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2052" width="5" height="15" fill="rgb(253,65,43)"/><text x="88.00" y="2062.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2068" width="5" height="15" fill="rgb(224,142,26)"/><text x="88.00" y="2078.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2084" width="5" height="15" fill="rgb(212,84,45)"/><text x="88.00" y="2094.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2100" width="5" height="15" fill="rgb(215,191,31)"/><text x="88.00" y="2110.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2116" width="5" height="15" fill="rgb(218,87,29)"/><text x="88.00" y="2126.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.43%)</title><rect x="85" y="2132" width="5" height="15" fill="rgb(254,4,22)"/><text x="88.00" y="2142.50"></text></g><g><title>copy (pyparsing.py:3951) (1 samples, 0.43%)</title><rect x="85" y="2148" width="5" height="15" fill="rgb(247,152,21)"/><text x="88.00" y="2158.50"></text></g><g><title>copy (pyparsing.py:1437) (1 samples, 0.43%)</title><rect x="85" y="2164" width="5" height="15" fill="rgb(250,146,29)"/><text x="88.00" y="2174.50"></text></g><g><title>copy (copy.py:106) (1 samples, 0.43%)</title><rect x="85" y="2180" width="5" height="15" fill="rgb(223,205,41)"/><text x="88.00" y="2190.50"></text></g><g><title>_reconstruct (copy.py:289) (1 samples, 0.43%)</title><rect x="85" y="2196" width="5" height="15" fill="rgb(223,57,52)"/><text x="88.00" y="2206.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.43%)</title><rect x="90" y="1140" width="5" height="15" fill="rgb(242,20,27)"/><text x="93.00" y="1150.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.43%)</title><rect x="90" y="1156" width="5" height="15" fill="rgb(250,73,22)"/><text x="93.00" y="1166.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.43%)</title><rect x="90" y="1172" width="5" height="15" fill="rgb(215,103,6)"/><text x="93.00" y="1182.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.43%)</title><rect x="90" y="1188" width="5" height="15" fill="rgb(222,130,8)"/><text x="93.00" y="1198.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1396) (1 samples, 0.43%)</title><rect x="90" y="1204" width="5" height="15" fill="rgb(214,188,32)"/><text x="93.00" y="1214.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1354) (1 samples, 0.43%)</title><rect x="90" y="1220" width="5" height="15" fill="rgb(222,163,41)"/><text x="93.00" y="1230.50"></text></g><g><title>spec_from_file_location (&lt;frozen importlib._bootstrap_external&gt;:606) (1 samples, 0.43%)</title><rect x="90" y="1236" width="5" height="15" fill="rgb(229,191,13)"/><text x="93.00" y="1246.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:4) (18 samples, 7.69%)</title><rect x="10" y="52" width="90" height="15" fill="rgb(212,131,23)"/><text x="13.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (18 samples, 7.69%)</title><rect x="10" y="68" width="90" height="15" fill="rgb(242,211,26)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (18 samples, 7.69%)</title><rect x="10" y="84" width="90" height="15" fill="rgb(231,125,0)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (18 samples, 7.69%)</title><rect x="10" y="100" width="90" height="15" fill="rgb(223,44,20)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (18 samples, 7.69%)</title><rect x="10" y="116" width="90" height="15" fill="rgb(228,166,52)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (18 samples, 7.69%)</title><rect x="10" y="132" width="90" height="15" fill="rgb(222,178,35)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (8 samples, 3.42%)</title><rect x="60" y="148" width="40" height="15" fill="rgb(237,128,13)"/><text x="63.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.42%)</title><rect x="60" y="164" width="40" height="15" fill="rgb(211,58,11)"/><text x="63.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.42%)</title><rect x="60" y="180" width="40" height="15" fill="rgb(225,98,19)"/><text x="63.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.42%)</title><rect x="60" y="196" width="40" height="15" fill="rgb(223,23,43)"/><text x="63.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.42%)</title><rect x="60" y="212" width="40" height="15" fill="rgb(248,88,46)"/><text x="63.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.42%)</title><rect x="60" y="228" width="40" height="15" fill="rgb(221,81,36)"/><text x="63.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.14%)</title><rect x="75" y="244" width="25" height="15" fill="rgb(252,217,38)"/><text x="78.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.14%)</title><rect x="75" y="260" width="25" height="15" fill="rgb(220,51,13)"/><text x="78.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.14%)</title><rect x="75" y="276" width="25" height="15" fill="rgb(239,212,44)"/><text x="78.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.14%)</title><rect x="75" y="292" width="25" height="15" fill="rgb(228,46,2)"/><text x="78.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.14%)</title><rect x="75" y="308" width="25" height="15" fill="rgb(223,61,18)"/><text x="78.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.14%)</title><rect x="75" y="324" width="25" height="15" fill="rgb(205,189,43)"/><text x="78.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.14%)</title><rect x="75" y="340" width="25" height="15" fill="rgb(222,129,17)"/><text x="78.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.14%)</title><rect x="75" y="356" width="25" height="15" fill="rgb(230,191,1)"/><text x="78.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.14%)</title><rect x="75" y="372" width="25" height="15" fill="rgb(222,221,8)"/><text x="78.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.14%)</title><rect x="75" y="388" width="25" height="15" fill="rgb(209,225,28)"/><text x="78.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.14%)</title><rect x="75" y="404" width="25" height="15" fill="rgb(228,226,22)"/><text x="78.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.14%)</title><rect x="75" y="420" width="25" height="15" fill="rgb(207,137,26)"/><text x="78.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.85%)</title><rect x="90" y="436" width="10" height="15" fill="rgb(251,26,4)"/><text x="93.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="452" width="10" height="15" fill="rgb(206,46,30)"/><text x="93.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.85%)</title><rect x="90" y="468" width="10" height="15" fill="rgb(209,165,28)"/><text x="93.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="484" width="10" height="15" fill="rgb(242,207,18)"/><text x="93.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="500" width="10" height="15" fill="rgb(243,8,33)"/><text x="93.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="90" y="516" width="10" height="15" fill="rgb(230,198,46)"/><text x="93.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="90" y="532" width="10" height="15" fill="rgb(214,182,16)"/><text x="93.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="90" y="548" width="10" height="15" fill="rgb(206,74,17)"/><text x="93.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="564" width="10" height="15" fill="rgb(231,205,52)"/><text x="93.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.85%)</title><rect x="90" y="580" width="10" height="15" fill="rgb(221,12,18)"/><text x="93.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="596" width="10" height="15" fill="rgb(208,196,30)"/><text x="93.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="90" y="612" width="10" height="15" fill="rgb(215,55,14)"/><text x="93.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="90" y="628" width="10" height="15" fill="rgb(248,14,20)"/><text x="93.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="90" y="644" width="10" height="15" fill="rgb(240,126,2)"/><text x="93.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="660" width="10" height="15" fill="rgb(230,45,45)"/><text x="93.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.85%)</title><rect x="90" y="676" width="10" height="15" fill="rgb(251,119,5)"/><text x="93.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="692" width="10" height="15" fill="rgb(248,138,48)"/><text x="93.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="90" y="708" width="10" height="15" fill="rgb(238,26,1)"/><text x="93.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="90" y="724" width="10" height="15" fill="rgb(234,80,38)"/><text x="93.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="90" y="740" width="10" height="15" fill="rgb(235,9,9)"/><text x="93.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="756" width="10" height="15" fill="rgb(248,101,12)"/><text x="93.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.85%)</title><rect x="90" y="772" width="10" height="15" fill="rgb(218,154,24)"/><text x="93.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="788" width="10" height="15" fill="rgb(221,224,27)"/><text x="93.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="90" y="804" width="10" height="15" fill="rgb(252,24,10)"/><text x="93.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="90" y="820" width="10" height="15" fill="rgb(251,35,45)"/><text x="93.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="90" y="836" width="10" height="15" fill="rgb(253,20,16)"/><text x="93.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="852" width="10" height="15" fill="rgb(206,26,39)"/><text x="93.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.85%)</title><rect x="90" y="868" width="10" height="15" fill="rgb(253,11,26)"/><text x="93.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="884" width="10" height="15" fill="rgb(222,197,4)"/><text x="93.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.85%)</title><rect x="90" y="900" width="10" height="15" fill="rgb(242,105,23)"/><text x="93.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="916" width="10" height="15" fill="rgb(241,205,15)"/><text x="93.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="932" width="10" height="15" fill="rgb(231,159,19)"/><text x="93.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="90" y="948" width="10" height="15" fill="rgb(232,200,36)"/><text x="93.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="90" y="964" width="10" height="15" fill="rgb(241,133,22)"/><text x="93.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="90" y="980" width="10" height="15" fill="rgb(228,127,41)"/><text x="93.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="996" width="10" height="15" fill="rgb(253,173,43)"/><text x="93.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.85%)</title><rect x="90" y="1012" width="10" height="15" fill="rgb(240,129,42)"/><text x="93.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="1028" width="10" height="15" fill="rgb(209,117,9)"/><text x="93.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.85%)</title><rect x="90" y="1044" width="10" height="15" fill="rgb(237,31,34)"/><text x="93.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.85%)</title><rect x="90" y="1060" width="10" height="15" fill="rgb(250,100,21)"/><text x="93.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.85%)</title><rect x="90" y="1076" width="10" height="15" fill="rgb(249,152,38)"/><text x="93.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.85%)</title><rect x="90" y="1092" width="10" height="15" fill="rgb(209,118,2)"/><text x="93.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (2 samples, 0.85%)</title><rect x="90" y="1108" width="10" height="15" fill="rgb(244,170,21)"/><text x="93.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.85%)</title><rect x="90" y="1124" width="10" height="15" fill="rgb(233,101,9)"/><text x="93.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="95" y="1140" width="5" height="15" fill="rgb(213,224,4)"/><text x="98.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="95" y="1156" width="5" height="15" fill="rgb(245,107,25)"/><text x="98.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="95" y="1172" width="5" height="15" fill="rgb(227,193,14)"/><text x="98.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1188" width="5" height="15" fill="rgb(230,90,31)"/><text x="98.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:23) (1 samples, 0.43%)</title><rect x="95" y="1204" width="5" height="15" fill="rgb(224,102,35)"/><text x="98.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="95" y="1220" width="5" height="15" fill="rgb(233,116,4)"/><text x="98.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="95" y="1236" width="5" height="15" fill="rgb(251,73,26)"/><text x="98.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="95" y="1252" width="5" height="15" fill="rgb(222,188,1)"/><text x="98.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="95" y="1268" width="5" height="15" fill="rgb(209,228,19)"/><text x="98.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1284" width="5" height="15" fill="rgb(248,141,6)"/><text x="98.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py:5) (1 samples, 0.43%)</title><rect x="95" y="1300" width="5" height="15" fill="rgb(221,82,11)"/><text x="98.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="95" y="1316" width="5" height="15" fill="rgb(248,201,15)"/><text x="98.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="95" y="1332" width="5" height="15" fill="rgb(212,128,45)"/><text x="98.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="95" y="1348" width="5" height="15" fill="rgb(235,148,15)"/><text x="98.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="95" y="1364" width="5" height="15" fill="rgb(233,117,14)"/><text x="98.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1380" width="5" height="15" fill="rgb(234,95,18)"/><text x="98.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py:11) (1 samples, 0.43%)</title><rect x="95" y="1396" width="5" height="15" fill="rgb(207,219,46)"/><text x="98.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="95" y="1412" width="5" height="15" fill="rgb(239,57,50)"/><text x="98.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="95" y="1428" width="5" height="15" fill="rgb(235,226,2)"/><text x="98.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="95" y="1444" width="5" height="15" fill="rgb(229,228,27)"/><text x="98.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="95" y="1460" width="5" height="15" fill="rgb(252,165,27)"/><text x="98.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1476" width="5" height="15" fill="rgb(247,58,13)"/><text x="98.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py:13) (1 samples, 0.43%)</title><rect x="95" y="1492" width="5" height="15" fill="rgb(223,219,31)"/><text x="98.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="95" y="1508" width="5" height="15" fill="rgb(236,108,12)"/><text x="98.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1524" width="5" height="15" fill="rgb(249,106,26)"/><text x="98.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="95" y="1540" width="5" height="15" fill="rgb(242,171,41)"/><text x="98.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="95" y="1556" width="5" height="15" fill="rgb(231,123,41)"/><text x="98.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="95" y="1572" width="5" height="15" fill="rgb(219,15,41)"/><text x="98.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="95" y="1588" width="5" height="15" fill="rgb(241,52,33)"/><text x="98.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1604" width="5" height="15" fill="rgb(227,123,50)"/><text x="98.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py:16) (1 samples, 0.43%)</title><rect x="95" y="1620" width="5" height="15" fill="rgb(224,115,7)"/><text x="98.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="95" y="1636" width="5" height="15" fill="rgb(237,85,40)"/><text x="98.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="95" y="1652" width="5" height="15" fill="rgb(217,12,50)"/><text x="98.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="95" y="1668" width="5" height="15" fill="rgb(223,16,13)"/><text x="98.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="95" y="1684" width="5" height="15" fill="rgb(219,83,49)"/><text x="98.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="95" y="1700" width="5" height="15" fill="rgb(241,229,41)"/><text x="98.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_bicluster.py:85) (1 samples, 0.43%)</title><rect x="95" y="1716" width="5" height="15" fill="rgb(247,204,34)"/><text x="98.00" y="1726.50"></text></g><g><title>__new__ (abc.py:126) (1 samples, 0.43%)</title><rect x="95" y="1732" width="5" height="15" fill="rgb(230,210,17)"/><text x="98.00" y="1742.50"></text></g><g><title>randint (mtrand.c:6086) (1 samples, 0.43%)</title><rect x="100" y="212" width="5" height="15" fill="rgb(253,150,12)"/><text x="103.00" y="222.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c:25435) (1 samples, 0.43%)</title><rect x="100" y="228" width="5" height="15" fill="rgb(254,71,16)"/><text x="103.00" y="238.50"></text></g><g><title>arraydescr_name_get (descriptor.c:1928) (1 samples, 0.43%)</title><rect x="100" y="244" width="5" height="15" fill="rgb(222,166,45)"/><text x="103.00" y="254.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:334) (1 samples, 0.43%)</title><rect x="100" y="260" width="5" height="15" fill="rgb(222,199,22)"/><text x="103.00" y="270.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.43%)</title><rect x="100" y="276" width="5" height="15" fill="rgb(242,120,35)"/><text x="103.00" y="286.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.43%)</title><rect x="100" y="292" width="5" height="15" fill="rgb(243,172,28)"/><text x="103.00" y="302.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16353) (1 samples, 0.43%)</title><rect x="105" y="228" width="5" height="15" fill="rgb(215,131,31)"/><text x="108.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.43%)</title><rect x="105" y="244" width="5" height="15" fill="rgb(207,106,12)"/><text x="108.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:40) (3 samples, 1.28%)</title><rect x="100" y="52" width="15" height="15" fill="rgb(231,22,9)"/><text x="103.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:11) (3 samples, 1.28%)</title><rect x="100" y="68" width="15" height="15" fill="rgb(238,52,19)"/><text x="103.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:39) (3 samples, 1.28%)</title><rect x="100" y="84" width="15" height="15" fill="rgb(226,123,5)"/><text x="103.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 1.28%)</title><rect x="100" y="100" width="15" height="15" fill="rgb(213,164,44)"/><text x="103.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:994) (3 samples, 1.28%)</title><rect x="100" y="116" width="15" height="15" fill="rgb(221,5,37)"/><text x="103.00" y="126.50"></text></g><g><title>fit (sklearn/ensemble/_weight_boosting.py:142) (3 samples, 1.28%)</title><rect x="100" y="132" width="15" height="15" fill="rgb(232,162,43)"/><text x="103.00" y="142.50"></text></g><g><title>_boost (sklearn/ensemble/_weight_boosting.py:1039) (3 samples, 1.28%)</title><rect x="100" y="148" width="15" height="15" fill="rgb(224,229,54)"/><text x="103.00" y="158.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (3 samples, 1.28%)</title><rect x="100" y="164" width="15" height="15" fill="rgb(206,167,2)"/><text x="103.00" y="174.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:74) (3 samples, 1.28%)</title><rect x="100" y="180" width="15" height="15" fill="rgb(238,76,14)"/><text x="103.00" y="190.50"></text></g><g><title>randint (mtrand.c:6007) (3 samples, 1.28%)</title><rect x="100" y="196" width="15" height="15" fill="rgb(230,18,0)"/><text x="103.00" y="206.50"></text></g><g><title>randint (mtrand.c:6250) (2 samples, 0.85%)</title><rect x="105" y="212" width="10" height="15" fill="rgb(225,57,23)"/><text x="108.00" y="222.50"></text></g><g><title>bounded_integers__rand_int64 (bounded_integers.c:16384) (1 samples, 0.43%)</title><rect x="110" y="228" width="5" height="15" fill="rgb(238,46,12)"/><text x="113.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.43%)</title><rect x="110" y="244" width="5" height="15" fill="rgb(211,90,15)"/><text x="113.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.43%)</title><rect x="110" y="260" width="5" height="15" fill="rgb(250,174,0)"/><text x="113.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.43%)</title><rect x="110" y="276" width="5" height="15" fill="rgb(215,91,16)"/><text x="113.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.43%)</title><rect x="110" y="292" width="5" height="15" fill="rgb(214,131,6)"/><text x="113.00" y="302.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (1 samples, 0.43%)</title><rect x="110" y="308" width="5" height="15" fill="rgb(216,154,33)"/><text x="113.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:47) (1 samples, 0.43%)</title><rect x="115" y="52" width="5" height="15" fill="rgb(242,88,1)"/><text x="118.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:46) (1 samples, 0.43%)</title><rect x="115" y="68" width="5" height="15" fill="rgb(231,36,46)"/><text x="118.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:25) (1 samples, 0.43%)</title><rect x="115" y="84" width="5" height="15" fill="rgb(220,159,33)"/><text x="118.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.43%)</title><rect x="115" y="100" width="5" height="15" fill="rgb(253,189,44)"/><text x="118.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:188) (1 samples, 0.43%)</title><rect x="115" y="116" width="5" height="15" fill="rgb(248,7,20)"/><text x="118.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py:37) (1 samples, 0.43%)</title><rect x="115" y="132" width="5" height="15" fill="rgb(217,100,18)"/><text x="118.00" y="142.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.43%)</title><rect x="120" y="164" width="5" height="15" fill="rgb(214,120,42)"/><text x="123.00" y="174.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (2 samples, 0.85%)</title><rect x="120" y="148" width="11" height="15" fill="rgb(222,161,30)"/><text x="123.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:941) (1 samples, 0.43%)</title><rect x="125" y="164" width="6" height="15" fill="rgb(217,49,35)"/><text x="128.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.43%)</title><rect x="136" y="180" width="5" height="15" fill="rgb(253,113,3)"/><text x="139.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.43%)</title><rect x="141" y="180" width="5" height="15" fill="rgb(210,73,9)"/><text x="144.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.43%)</title><rect x="146" y="180" width="5" height="15" fill="rgb(214,17,46)"/><text x="149.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.43%)</title><rect x="146" y="196" width="5" height="15" fill="rgb(224,188,50)"/><text x="149.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.43%)</title><rect x="151" y="180" width="5" height="15" fill="rgb(253,114,39)"/><text x="154.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.43%)</title><rect x="156" y="180" width="5" height="15" fill="rgb(219,18,14)"/><text x="159.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.43%)</title><rect x="156" y="196" width="5" height="15" fill="rgb(247,28,5)"/><text x="159.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.43%)</title><rect x="161" y="196" width="5" height="15" fill="rgb(215,178,50)"/><text x="164.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.85%)</title><rect x="161" y="180" width="10" height="15" fill="rgb(246,142,14)"/><text x="164.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.43%)</title><rect x="166" y="196" width="5" height="15" fill="rgb(234,171,22)"/><text x="169.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (9 samples, 3.85%)</title><rect x="131" y="148" width="45" height="15" fill="rgb(227,40,34)"/><text x="134.00" y="158.50">pred..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (9 samples, 3.85%)</title><rect x="131" y="164" width="45" height="15" fill="rgb(212,71,44)"/><text x="134.00" y="174.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.43%)</title><rect x="171" y="180" width="5" height="15" fill="rgb(227,180,32)"/><text x="174.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.43%)</title><rect x="176" y="212" width="5" height="15" fill="rgb(213,45,37)"/><text x="179.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.43%)</title><rect x="191" y="228" width="5" height="15" fill="rgb(210,144,44)"/><text x="194.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (3 samples, 1.28%)</title><rect x="196" y="228" width="15" height="15" fill="rgb(251,145,35)"/><text x="199.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.85%)</title><rect x="201" y="244" width="10" height="15" fill="rgb(214,109,27)"/><text x="204.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (8 samples, 3.42%)</title><rect x="176" y="196" width="40" height="15" fill="rgb(252,11,26)"/><text x="179.00" y="206.50">pre..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (7 samples, 2.99%)</title><rect x="181" y="212" width="35" height="15" fill="rgb(238,112,36)"/><text x="184.00" y="222.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.43%)</title><rect x="211" y="228" width="5" height="15" fill="rgb(253,124,29)"/><text x="214.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.43%)</title><rect x="226" y="228" width="5" height="15" fill="rgb(229,76,10)"/><text x="229.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.43%)</title><rect x="241" y="244" width="6" height="15" fill="rgb(250,107,47)"/><text x="244.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 1.71%)</title><rect x="231" y="228" width="21" height="15" fill="rgb(245,107,23)"/><text x="234.00" y="238.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.43%)</title><rect x="247" y="244" width="5" height="15" fill="rgb(249,51,23)"/><text x="250.00" y="254.50"></text></g><g><title>simplefilter (warnings.py:177) (2 samples, 0.85%)</title><rect x="252" y="244" width="10" height="15" fill="rgb(244,76,53)"/><text x="255.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.43%)</title><rect x="267" y="260" width="5" height="15" fill="rgb(236,78,26)"/><text x="270.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:187) (1 samples, 0.43%)</title><rect x="272" y="260" width="5" height="15" fill="rgb(254,69,17)"/><text x="275.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (6 samples, 2.56%)</title><rect x="252" y="228" width="30" height="15" fill="rgb(216,88,29)"/><text x="255.00" y="238.50">ch..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.71%)</title><rect x="262" y="244" width="20" height="15" fill="rgb(245,50,6)"/><text x="265.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.43%)</title><rect x="277" y="260" width="5" height="15" fill="rgb(222,154,14)"/><text x="280.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 0.85%)</title><rect x="282" y="228" width="10" height="15" fill="rgb(245,69,9)"/><text x="285.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.43%)</title><rect x="292" y="260" width="5" height="15" fill="rgb(235,207,26)"/><text x="295.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.43%)</title><rect x="292" y="276" width="5" height="15" fill="rgb(251,107,26)"/><text x="295.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.85%)</title><rect x="292" y="228" width="10" height="15" fill="rgb(207,113,46)"/><text x="295.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.85%)</title><rect x="292" y="244" width="10" height="15" fill="rgb(218,22,30)"/><text x="295.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1738) (1 samples, 0.43%)</title><rect x="297" y="260" width="5" height="15" fill="rgb(223,41,54)"/><text x="300.00" y="270.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.43%)</title><rect x="312" y="244" width="5" height="15" fill="rgb(239,228,22)"/><text x="315.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 1.71%)</title><rect x="302" y="228" width="20" height="15" fill="rgb(221,36,8)"/><text x="305.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.43%)</title><rect x="317" y="244" width="5" height="15" fill="rgb(247,0,24)"/><text x="320.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (4 samples, 1.71%)</title><rect x="322" y="228" width="20" height="15" fill="rgb(224,41,1)"/><text x="325.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (2 samples, 0.85%)</title><rect x="332" y="244" width="10" height="15" fill="rgb(236,61,30)"/><text x="335.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.43%)</title><rect x="342" y="228" width="5" height="15" fill="rgb(232,166,51)"/><text x="345.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 1.28%)</title><rect x="357" y="260" width="16" height="15" fill="rgb(243,136,21)"/><text x="360.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 2.56%)</title><rect x="347" y="244" width="31" height="15" fill="rgb(223,103,36)"/><text x="350.00" y="254.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.43%)</title><rect x="373" y="260" width="5" height="15" fill="rgb(211,114,41)"/><text x="376.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 2.99%)</title><rect x="347" y="228" width="36" height="15" fill="rgb(212,13,40)"/><text x="350.00" y="238.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.43%)</title><rect x="378" y="244" width="5" height="15" fill="rgb(229,212,27)"/><text x="381.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.43%)</title><rect x="393" y="260" width="5" height="15" fill="rgb(208,59,34)"/><text x="396.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 1.71%)</title><rect x="383" y="228" width="20" height="15" fill="rgb(233,25,37)"/><text x="386.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.71%)</title><rect x="383" y="244" width="20" height="15" fill="rgb(233,75,27)"/><text x="386.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.43%)</title><rect x="398" y="260" width="5" height="15" fill="rgb(205,176,20)"/><text x="401.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (37 samples, 15.81%)</title><rect x="221" y="212" width="187" height="15" fill="rgb(207,118,45)"/><text x="224.00" y="222.50">_validate_X_predict (skl..</text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.43%)</title><rect x="403" y="228" width="5" height="15" fill="rgb(241,34,30)"/><text x="406.00" y="238.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (2 samples, 0.85%)</title><rect x="408" y="212" width="10" height="15" fill="rgb(236,5,17)"/><text x="411.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.43%)</title><rect x="413" y="228" width="5" height="15" fill="rgb(222,220,20)"/><text x="416.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (41 samples, 17.52%)</title><rect x="216" y="196" width="207" height="15" fill="rgb(238,105,24)"/><text x="219.00" y="206.50">predict (sklearn/tree/_clas..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.43%)</title><rect x="418" y="212" width="5" height="15" fill="rgb(222,204,23)"/><text x="421.00" y="222.50"></text></g><g><title>0x7ffb6d5c2f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="423" y="228" width="5" height="15" fill="rgb(216,134,41)"/><text x="426.00" y="238.50"></text></g><g><title>0x7ffb6d5b2d46 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="423" y="244" width="5" height="15" fill="rgb(242,2,18)"/><text x="426.00" y="254.50"></text></g><g><title>0x7ffb6d5ab0e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="428" y="308" width="5" height="15" fill="rgb(252,62,10)"/><text x="431.00" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.43%)</title><rect x="433" y="356" width="5" height="15" fill="rgb(222,196,9)"/><text x="436.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="433" y="372" width="5" height="15" fill="rgb(220,206,21)"/><text x="436.00" y="382.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.85%)</title><rect x="433" y="340" width="10" height="15" fill="rgb(221,214,0)"/><text x="436.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.43%)</title><rect x="438" y="356" width="5" height="15" fill="rgb(210,131,19)"/><text x="441.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.43%)</title><rect x="438" y="372" width="5" height="15" fill="rgb(233,188,37)"/><text x="441.00" y="382.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:214) (1 samples, 0.43%)</title><rect x="438" y="388" width="5" height="15" fill="rgb(227,140,46)"/><text x="441.00" y="398.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.28%)</title><rect x="433" y="324" width="15" height="15" fill="rgb(249,83,50)"/><text x="436.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.43%)</title><rect x="443" y="340" width="5" height="15" fill="rgb(237,199,43)"/><text x="446.00" y="350.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.43%)</title><rect x="443" y="356" width="5" height="15" fill="rgb(252,137,29)"/><text x="446.00" y="366.50"></text></g><g><title>0x7ffb93b8e93a (libc-2.29.so) (1 samples, 0.43%)</title><rect x="443" y="372" width="5" height="15" fill="rgb(206,97,3)"/><text x="446.00" y="382.50"></text></g><g><title>0x7ffb6d5d12df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.14%)</title><rect x="428" y="260" width="25" height="15" fill="rgb(206,148,33)"/><text x="431.00" y="270.50">0..</text></g><g><title>0x7ffb6d5b5d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.14%)</title><rect x="428" y="276" width="25" height="15" fill="rgb(231,85,20)"/><text x="431.00" y="286.50">0..</text></g><g><title>0x7ffb6d5b5666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.14%)</title><rect x="428" y="292" width="25" height="15" fill="rgb(210,64,21)"/><text x="431.00" y="302.50">0..</text></g><g><title>0x7ffb6d5ab2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.71%)</title><rect x="433" y="308" width="20" height="15" fill="rgb(245,189,11)"/><text x="436.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.43%)</title><rect x="448" y="324" width="5" height="15" fill="rgb(222,62,44)"/><text x="451.00" y="334.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.43%)</title><rect x="448" y="340" width="5" height="15" fill="rgb(224,136,39)"/><text x="451.00" y="350.50"></text></g><g><title>0x7ffb6d5d12fb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="453" y="260" width="5" height="15" fill="rgb(228,89,40)"/><text x="456.00" y="270.50"></text></g><g><title>0x7ffb93b95734 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="458" y="292" width="5" height="15" fill="rgb(220,8,39)"/><text x="461.00" y="302.50"></text></g><g><title>0x7ffb6d5d1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.85%)</title><rect x="458" y="260" width="10" height="15" fill="rgb(240,47,39)"/><text x="461.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.85%)</title><rect x="458" y="276" width="10" height="15" fill="rgb(242,46,27)"/><text x="461.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:98) (1 samples, 0.43%)</title><rect x="463" y="292" width="5" height="15" fill="rgb(207,153,53)"/><text x="466.00" y="302.50"></text></g><g><title>0x7ffb6d5d2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.85%)</title><rect x="428" y="244" width="45" height="15" fill="rgb(237,65,23)"/><text x="431.00" y="254.50">0x7f..</text></g><g><title>0x7ffb6d5d192f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="468" y="260" width="5" height="15" fill="rgb(223,125,44)"/><text x="471.00" y="270.50"></text></g><g><title>0x7ffb6d5a69db (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="468" y="276" width="5" height="15" fill="rgb(249,94,35)"/><text x="471.00" y="286.50"></text></g><g><title>0x7ffb6d5c2fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 4.27%)</title><rect x="428" y="228" width="50" height="15" fill="rgb(221,65,46)"/><text x="431.00" y="238.50">0x7ff..</text></g><g><title>0x7ffb6d5d2540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="473" y="244" width="5" height="15" fill="rgb(217,53,22)"/><text x="476.00" y="254.50"></text></g><g><title>0x7ffb6d5a72f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="473" y="260" width="5" height="15" fill="rgb(207,18,20)"/><text x="476.00" y="270.50"></text></g><g><title>0x7ffb6d5a6530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="473" y="276" width="5" height="15" fill="rgb(213,162,38)"/><text x="476.00" y="286.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.43%)</title><rect x="473" y="292" width="5" height="15" fill="rgb(215,223,23)"/><text x="476.00" y="302.50"></text></g><g><title>0x7ffb6d5c2fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="478" y="228" width="6" height="15" fill="rgb(211,216,52)"/><text x="481.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:73) (1 samples, 0.43%)</title><rect x="484" y="260" width="5" height="15" fill="rgb(205,93,25)"/><text x="487.00" y="270.50"></text></g><g><title>0x7ffb6d5c305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.85%)</title><rect x="484" y="228" width="10" height="15" fill="rgb(211,81,51)"/><text x="487.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.85%)</title><rect x="484" y="244" width="10" height="15" fill="rgb(242,205,29)"/><text x="487.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.43%)</title><rect x="489" y="260" width="5" height="15" fill="rgb(228,175,43)"/><text x="492.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.43%)</title><rect x="489" y="276" width="5" height="15" fill="rgb(251,109,36)"/><text x="492.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.43%)</title><rect x="489" y="292" width="5" height="15" fill="rgb(222,185,16)"/><text x="492.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.43%)</title><rect x="489" y="308" width="5" height="15" fill="rgb(223,53,28)"/><text x="492.00" y="318.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.43%)</title><rect x="489" y="324" width="5" height="15" fill="rgb(205,177,12)"/><text x="492.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.43%)</title><rect x="489" y="340" width="5" height="15" fill="rgb(228,52,43)"/><text x="492.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.43%)</title><rect x="494" y="276" width="5" height="15" fill="rgb(225,146,43)"/><text x="497.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.43%)</title><rect x="494" y="292" width="5" height="15" fill="rgb(224,78,52)"/><text x="497.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.43%)</title><rect x="494" y="308" width="5" height="15" fill="rgb(241,151,50)"/><text x="497.00" y="318.50"></text></g><g><title>0x7ffb6d5c314f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.85%)</title><rect x="494" y="228" width="10" height="15" fill="rgb(229,109,12)"/><text x="497.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.85%)</title><rect x="494" y="244" width="10" height="15" fill="rgb(250,77,29)"/><text x="497.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.85%)</title><rect x="494" y="260" width="10" height="15" fill="rgb(210,220,18)"/><text x="497.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.43%)</title><rect x="499" y="276" width="5" height="15" fill="rgb(240,108,42)"/><text x="502.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (17 samples, 7.26%)</title><rect x="423" y="196" width="86" height="15" fill="rgb(234,117,9)"/><text x="426.00" y="206.50">predict (s..</text></g><g><title>0x7ffb6d5c3d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 7.26%)</title><rect x="423" y="212" width="86" height="15" fill="rgb(219,115,25)"/><text x="426.00" y="222.50">0x7ffb6d5c..</text></g><g><title>0x7ffb6d5c3328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="504" y="228" width="5" height="15" fill="rgb(230,136,16)"/><text x="507.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.43%)</title><rect x="504" y="244" width="5" height="15" fill="rgb(209,131,22)"/><text x="507.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.43%)</title><rect x="504" y="260" width="5" height="15" fill="rgb(233,58,36)"/><text x="507.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:240) (1 samples, 0.43%)</title><rect x="504" y="276" width="5" height="15" fill="rgb(229,172,6)"/><text x="507.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (67 samples, 28.63%)</title><rect x="176" y="180" width="338" height="15" fill="rgb(239,193,16)"/><text x="179.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.43%)</title><rect x="509" y="196" width="5" height="15" fill="rgb(234,140,35)"/><text x="512.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.43%)</title><rect x="509" y="212" width="5" height="15" fill="rgb(234,196,33)"/><text x="512.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.43%)</title><rect x="509" y="228" width="5" height="15" fill="rgb(237,136,44)"/><text x="512.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.43%)</title><rect x="509" y="244" width="5" height="15" fill="rgb(248,221,4)"/><text x="512.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.43%)</title><rect x="509" y="260" width="5" height="15" fill="rgb(251,57,14)"/><text x="512.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.43%)</title><rect x="514" y="212" width="5" height="15" fill="rgb(219,194,34)"/><text x="517.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.43%)</title><rect x="514" y="228" width="5" height="15" fill="rgb(238,47,21)"/><text x="517.00" y="238.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:257) (1 samples, 0.43%)</title><rect x="519" y="276" width="5" height="15" fill="rgb(237,132,4)"/><text x="522.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (3 samples, 1.28%)</title><rect x="514" y="180" width="15" height="15" fill="rgb(249,82,20)"/><text x="517.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (3 samples, 1.28%)</title><rect x="514" y="196" width="15" height="15" fill="rgb(224,88,29)"/><text x="517.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (2 samples, 0.85%)</title><rect x="519" y="212" width="10" height="15" fill="rgb(244,157,34)"/><text x="522.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (2 samples, 0.85%)</title><rect x="519" y="228" width="10" height="15" fill="rgb(213,88,41)"/><text x="522.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (2 samples, 0.85%)</title><rect x="519" y="244" width="10" height="15" fill="rgb(247,213,33)"/><text x="522.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (2 samples, 0.85%)</title><rect x="519" y="260" width="10" height="15" fill="rgb(238,83,12)"/><text x="522.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.43%)</title><rect x="524" y="276" width="5" height="15" fill="rgb(225,200,5)"/><text x="527.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:94) (1 samples, 0.43%)</title><rect x="524" y="292" width="5" height="15" fill="rgb(245,104,52)"/><text x="527.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c:62) (1 samples, 0.43%)</title><rect x="524" y="308" width="5" height="15" fill="rgb(246,34,27)"/><text x="527.00" y="318.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:110) (1 samples, 0.43%)</title><rect x="524" y="324" width="5" height="15" fill="rgb(245,170,1)"/><text x="527.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (71 samples, 30.34%)</title><rect x="176" y="164" width="358" height="15" fill="rgb(241,62,29)"/><text x="179.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_bo..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.43%)</title><rect x="529" y="180" width="5" height="15" fill="rgb(213,124,35)"/><text x="532.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.43%)</title><rect x="529" y="196" width="5" height="15" fill="rgb(223,118,6)"/><text x="532.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.43%)</title><rect x="529" y="212" width="5" height="15" fill="rgb(215,59,30)"/><text x="532.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.43%)</title><rect x="529" y="228" width="5" height="15" fill="rgb(251,100,39)"/><text x="532.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.43%)</title><rect x="539" y="228" width="5" height="15" fill="rgb(253,195,11)"/><text x="542.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (3 samples, 1.28%)</title><rect x="534" y="164" width="15" height="15" fill="rgb(225,30,5)"/><text x="537.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (3 samples, 1.28%)</title><rect x="534" y="180" width="15" height="15" fill="rgb(209,119,29)"/><text x="537.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.28%)</title><rect x="534" y="196" width="15" height="15" fill="rgb(230,114,16)"/><text x="537.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (3 samples, 1.28%)</title><rect x="534" y="212" width="15" height="15" fill="rgb(237,138,26)"/><text x="537.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.43%)</title><rect x="544" y="228" width="5" height="15" fill="rgb(253,217,45)"/><text x="547.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.43%)</title><rect x="544" y="244" width="5" height="15" fill="rgb(245,176,39)"/><text x="547.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.43%)</title><rect x="544" y="260" width="5" height="15" fill="rgb(241,119,44)"/><text x="547.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1116) (1 samples, 0.43%)</title><rect x="544" y="276" width="5" height="15" fill="rgb(228,127,30)"/><text x="547.00" y="286.50"></text></g><g><title>arrayiter_dealloc (iterators.c:392) (1 samples, 0.43%)</title><rect x="544" y="292" width="5" height="15" fill="rgb(250,69,28)"/><text x="547.00" y="302.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (2 samples, 0.85%)</title><rect x="549" y="180" width="10" height="15" fill="rgb(206,64,13)"/><text x="552.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.43%)</title><rect x="554" y="196" width="5" height="15" fill="rgb(217,53,16)"/><text x="557.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.43%)</title><rect x="554" y="212" width="5" height="15" fill="rgb(239,131,42)"/><text x="557.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2181) (1 samples, 0.43%)</title><rect x="559" y="228" width="5" height="15" fill="rgb(231,160,8)"/><text x="562.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.43%)</title><rect x="564" y="244" width="5" height="15" fill="rgb(236,143,46)"/><text x="567.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.43%)</title><rect x="569" y="308" width="5" height="15" fill="rgb(218,56,44)"/><text x="572.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.43%)</title><rect x="569" y="324" width="5" height="15" fill="rgb(233,8,26)"/><text x="572.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.43%)</title><rect x="569" y="340" width="5" height="15" fill="rgb(207,218,32)"/><text x="572.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (1 samples, 0.43%)</title><rect x="569" y="356" width="5" height="15" fill="rgb(223,189,31)"/><text x="572.00" y="366.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.43%)</title><rect x="569" y="372" width="5" height="15" fill="rgb(217,131,29)"/><text x="572.00" y="382.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:917) (1 samples, 0.43%)</title><rect x="569" y="388" width="5" height="15" fill="rgb(243,153,14)"/><text x="572.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.43%)</title><rect x="574" y="308" width="5" height="15" fill="rgb(208,10,52)"/><text x="577.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.43%)</title><rect x="574" y="324" width="5" height="15" fill="rgb(252,216,25)"/><text x="577.00" y="334.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (5 samples, 2.14%)</title><rect x="559" y="180" width="25" height="15" fill="rgb(234,45,1)"/><text x="562.00" y="190.50">s..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (5 samples, 2.14%)</title><rect x="559" y="196" width="25" height="15" fill="rgb(216,89,10)"/><text x="562.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.14%)</title><rect x="559" y="212" width="25" height="15" fill="rgb(215,227,25)"/><text x="562.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (4 samples, 1.71%)</title><rect x="564" y="228" width="20" height="15" fill="rgb(222,185,29)"/><text x="567.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.28%)</title><rect x="569" y="244" width="15" height="15" fill="rgb(213,122,22)"/><text x="572.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.28%)</title><rect x="569" y="260" width="15" height="15" fill="rgb(219,125,3)"/><text x="572.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.28%)</title><rect x="569" y="276" width="15" height="15" fill="rgb(207,68,53)"/><text x="572.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.28%)</title><rect x="569" y="292" width="15" height="15" fill="rgb(238,141,38)"/><text x="572.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.43%)</title><rect x="579" y="308" width="5" height="15" fill="rgb(208,144,10)"/><text x="582.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.43%)</title><rect x="579" y="324" width="5" height="15" fill="rgb(225,170,10)"/><text x="582.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.43%)</title><rect x="579" y="340" width="5" height="15" fill="rgb(224,144,26)"/><text x="582.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (1 samples, 0.43%)</title><rect x="584" y="180" width="5" height="15" fill="rgb(240,193,45)"/><text x="587.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.43%)</title><rect x="584" y="196" width="5" height="15" fill="rgb(209,197,8)"/><text x="587.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.43%)</title><rect x="584" y="212" width="5" height="15" fill="rgb(207,125,15)"/><text x="587.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.43%)</title><rect x="584" y="228" width="5" height="15" fill="rgb(240,31,1)"/><text x="587.00" y="238.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.43%)</title><rect x="594" y="308" width="6" height="15" fill="rgb(242,42,42)"/><text x="597.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.43%)</title><rect x="594" y="324" width="6" height="15" fill="rgb(235,28,5)"/><text x="597.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.43%)</title><rect x="594" y="340" width="6" height="15" fill="rgb(230,135,25)"/><text x="597.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.43%)</title><rect x="594" y="356" width="6" height="15" fill="rgb(215,119,43)"/><text x="597.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.43%)</title><rect x="594" y="372" width="6" height="15" fill="rgb(243,166,49)"/><text x="597.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.43%)</title><rect x="594" y="388" width="6" height="15" fill="rgb(222,44,8)"/><text x="597.00" y="398.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (2 samples, 0.85%)</title><rect x="594" y="196" width="11" height="15" fill="rgb(230,160,31)"/><text x="597.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.85%)</title><rect x="594" y="212" width="11" height="15" fill="rgb(253,100,49)"/><text x="597.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (2 samples, 0.85%)</title><rect x="594" y="228" width="11" height="15" fill="rgb(217,156,45)"/><text x="597.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.85%)</title><rect x="594" y="244" width="11" height="15" fill="rgb(250,53,44)"/><text x="597.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.85%)</title><rect x="594" y="260" width="11" height="15" fill="rgb(208,110,13)"/><text x="597.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.85%)</title><rect x="594" y="276" width="11" height="15" fill="rgb(207,195,8)"/><text x="597.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.85%)</title><rect x="594" y="292" width="11" height="15" fill="rgb(234,170,47)"/><text x="597.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.43%)</title><rect x="600" y="308" width="5" height="15" fill="rgb(224,205,34)"/><text x="603.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.43%)</title><rect x="600" y="324" width="5" height="15" fill="rgb(246,25,44)"/><text x="603.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.43%)</title><rect x="600" y="340" width="5" height="15" fill="rgb(206,73,46)"/><text x="603.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.43%)</title><rect x="600" y="356" width="5" height="15" fill="rgb(219,112,24)"/><text x="603.00" y="366.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.43%)</title><rect x="600" y="372" width="5" height="15" fill="rgb(242,19,42)"/><text x="603.00" y="382.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (2 samples, 0.85%)</title><rect x="610" y="292" width="10" height="15" fill="rgb(228,99,19)"/><text x="613.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.43%)</title><rect x="615" y="308" width="5" height="15" fill="rgb(251,96,9)"/><text x="618.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.43%)</title><rect x="620" y="324" width="5" height="15" fill="rgb(246,151,54)"/><text x="623.00" y="334.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (5 samples, 2.14%)</title><rect x="605" y="228" width="25" height="15" fill="rgb(205,138,22)"/><text x="608.00" y="238.50">i..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (5 samples, 2.14%)</title><rect x="605" y="244" width="25" height="15" fill="rgb(243,184,13)"/><text x="608.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.71%)</title><rect x="610" y="260" width="20" height="15" fill="rgb(236,203,37)"/><text x="613.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (4 samples, 1.71%)</title><rect x="610" y="276" width="20" height="15" fill="rgb(232,221,39)"/><text x="613.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 0.85%)</title><rect x="620" y="292" width="10" height="15" fill="rgb(223,226,45)"/><text x="623.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (2 samples, 0.85%)</title><rect x="620" y="308" width="10" height="15" fill="rgb(225,65,16)"/><text x="623.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.43%)</title><rect x="625" y="324" width="5" height="15" fill="rgb(212,57,34)"/><text x="628.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.43%)</title><rect x="625" y="340" width="5" height="15" fill="rgb(228,15,45)"/><text x="628.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.43%)</title><rect x="625" y="356" width="5" height="15" fill="rgb(241,55,28)"/><text x="628.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.43%)</title><rect x="625" y="372" width="5" height="15" fill="rgb(245,105,5)"/><text x="628.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.43%)</title><rect x="625" y="388" width="5" height="15" fill="rgb(221,194,24)"/><text x="628.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.43%)</title><rect x="625" y="404" width="5" height="15" fill="rgb(247,17,18)"/><text x="628.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1039) (1 samples, 0.43%)</title><rect x="625" y="420" width="5" height="15" fill="rgb(237,219,13)"/><text x="628.00" y="430.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.43%)</title><rect x="630" y="276" width="5" height="15" fill="rgb(226,53,20)"/><text x="633.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.43%)</title><rect x="630" y="292" width="5" height="15" fill="rgb(242,79,13)"/><text x="633.00" y="302.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (1 samples, 0.43%)</title><rect x="635" y="276" width="5" height="15" fill="rgb(209,160,44)"/><text x="638.00" y="286.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (3 samples, 1.28%)</title><rect x="630" y="260" width="15" height="15" fill="rgb(221,74,2)"/><text x="633.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:136) (1 samples, 0.43%)</title><rect x="640" y="276" width="5" height="15" fill="rgb(213,6,44)"/><text x="643.00" y="286.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (4 samples, 1.71%)</title><rect x="630" y="244" width="20" height="15" fill="rgb(245,172,19)"/><text x="633.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:443) (1 samples, 0.43%)</title><rect x="645" y="260" width="5" height="15" fill="rgb(232,134,19)"/><text x="648.00" y="270.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.43%)</title><rect x="655" y="260" width="5" height="15" fill="rgb(223,132,36)"/><text x="658.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.43%)</title><rect x="655" y="276" width="5" height="15" fill="rgb(246,145,18)"/><text x="658.00" y="286.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.43%)</title><rect x="660" y="260" width="5" height="15" fill="rgb(207,49,45)"/><text x="663.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="660" y="276" width="5" height="15" fill="rgb(229,68,12)"/><text x="663.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.43%)</title><rect x="660" y="292" width="5" height="15" fill="rgb(221,53,0)"/><text x="663.00" y="302.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c:878) (1 samples, 0.43%)</title><rect x="660" y="308" width="5" height="15" fill="rgb(245,205,21)"/><text x="663.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.43%)</title><rect x="660" y="324" width="5" height="15" fill="rgb(219,22,10)"/><text x="663.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1944) (1 samples, 0.43%)</title><rect x="660" y="340" width="5" height="15" fill="rgb(251,115,17)"/><text x="663.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (24 samples, 10.26%)</title><rect x="549" y="164" width="121" height="15" fill="rgb(242,217,53)"/><text x="552.00" y="174.50">_get_median_pre..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (16 samples, 6.84%)</title><rect x="589" y="180" width="81" height="15" fill="rgb(224,72,3)"/><text x="592.00" y="190.50">stable_cu..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (13 samples, 5.56%)</title><rect x="605" y="196" width="65" height="15" fill="rgb(249,163,43)"/><text x="608.00" y="206.50">isclose..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (13 samples, 5.56%)</title><rect x="605" y="212" width="65" height="15" fill="rgb(208,27,41)"/><text x="608.00" y="222.50">array_i..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (8 samples, 3.42%)</title><rect x="630" y="228" width="40" height="15" fill="rgb(215,56,17)"/><text x="633.00" y="238.50">isc..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (4 samples, 1.71%)</title><rect x="650" y="244" width="20" height="15" fill="rgb(229,172,17)"/><text x="653.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="665" y="260" width="5" height="15" fill="rgb(208,65,51)"/><text x="668.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.43%)</title><rect x="665" y="276" width="5" height="15" fill="rgb(206,158,41)"/><text x="668.00" y="286.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:315) (1 samples, 0.43%)</title><rect x="665" y="292" width="5" height="15" fill="rgb(222,74,36)"/><text x="668.00" y="302.50"></text></g><g><title>_extract_pyvals (extobj.c:215) (1 samples, 0.43%)</title><rect x="665" y="308" width="5" height="15" fill="rgb(236,131,32)"/><text x="668.00" y="318.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.43%)</title><rect x="670" y="180" width="5" height="15" fill="rgb(219,193,24)"/><text x="673.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="670" y="196" width="5" height="15" fill="rgb(231,32,19)"/><text x="673.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.43%)</title><rect x="670" y="212" width="5" height="15" fill="rgb(237,192,26)"/><text x="673.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.43%)</title><rect x="675" y="180" width="5" height="15" fill="rgb(231,102,21)"/><text x="678.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="675" y="196" width="5" height="15" fill="rgb(225,133,26)"/><text x="678.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.43%)</title><rect x="675" y="212" width="5" height="15" fill="rgb(242,171,6)"/><text x="678.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.43%)</title><rect x="675" y="228" width="5" height="15" fill="rgb(250,30,31)"/><text x="678.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.43%)</title><rect x="675" y="244" width="5" height="15" fill="rgb(246,41,22)"/><text x="678.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.43%)</title><rect x="675" y="260" width="5" height="15" fill="rgb(208,13,33)"/><text x="678.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.43%)</title><rect x="675" y="276" width="5" height="15" fill="rgb(250,73,6)"/><text x="678.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.43%)</title><rect x="675" y="292" width="5" height="15" fill="rgb(214,212,23)"/><text x="678.00" y="302.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (3 samples, 1.28%)</title><rect x="670" y="164" width="15" height="15" fill="rgb(246,33,50)"/><text x="673.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.43%)</title><rect x="680" y="180" width="5" height="15" fill="rgb(237,137,26)"/><text x="683.00" y="190.50"></text></g><g><title>prepare_index (mapping.c:418) (1 samples, 0.43%)</title><rect x="680" y="196" width="5" height="15" fill="rgb(237,161,17)"/><text x="683.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (2 samples, 0.85%)</title><rect x="685" y="164" width="10" height="15" fill="rgb(219,203,36)"/><text x="688.00" y="174.50"></text></g><g><title>array_argmax (methods.c:297) (1 samples, 0.43%)</title><rect x="690" y="180" width="5" height="15" fill="rgb(253,40,38)"/><text x="693.00" y="190.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.43%)</title><rect x="690" y="196" width="5" height="15" fill="rgb(216,191,20)"/><text x="693.00" y="206.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.43%)</title><rect x="690" y="212" width="5" height="15" fill="rgb(253,188,7)"/><text x="693.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.43%)</title><rect x="690" y="228" width="5" height="15" fill="rgb(243,160,11)"/><text x="693.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (1 samples, 0.43%)</title><rect x="695" y="164" width="5" height="15" fill="rgb(249,219,34)"/><text x="698.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.43%)</title><rect x="695" y="180" width="5" height="15" fill="rgb(236,156,10)"/><text x="698.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.43%)</title><rect x="700" y="196" width="5" height="15" fill="rgb(210,163,54)"/><text x="703.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.43%)</title><rect x="700" y="212" width="5" height="15" fill="rgb(232,151,40)"/><text x="703.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:390) (1 samples, 0.43%)</title><rect x="700" y="228" width="5" height="15" fill="rgb(254,116,18)"/><text x="703.00" y="238.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c:1360) (1 samples, 0.43%)</title><rect x="700" y="244" width="5" height="15" fill="rgb(207,68,6)"/><text x="703.00" y="254.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:54) (117 samples, 50.00%)</title><rect x="120" y="52" width="590" height="15" fill="rgb(221,216,22)"/><text x="123.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:53) (117 samples, 50.00%)</title><rect x="120" y="68" width="590" height="15" fill="rgb(245,76,28)"/><text x="123.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:37) (117 samples, 50.00%)</title><rect x="120" y="84" width="590" height="15" fill="rgb(235,133,33)"/><text x="123.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_floa..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:31) (117 samples, 50.00%)</title><rect x="120" y="100" width="590" height="15" fill="rgb(219,30,38)"/><text x="123.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (117 samples, 50.00%)</title><rect x="120" y="116" width="590" height="15" fill="rgb(227,135,17)"/><text x="123.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (117 samples, 50.00%)</title><rect x="120" y="132" width="590" height="15" fill="rgb(235,159,5)"/><text x="123.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (106 samples, 45.30%)</title><rect x="176" y="148" width="534" height="15" fill="rgb(210,74,16)"/><text x="179.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (2 samples, 0.85%)</title><rect x="700" y="164" width="10" height="15" fill="rgb(246,5,28)"/><text x="703.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.85%)</title><rect x="700" y="180" width="10" height="15" fill="rgb(217,218,29)"/><text x="703.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.43%)</title><rect x="705" y="196" width="5" height="15" fill="rgb(235,65,18)"/><text x="708.00" y="206.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.43%)</title><rect x="705" y="212" width="5" height="15" fill="rgb(213,23,18)"/><text x="708.00" y="222.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.43%)</title><rect x="705" y="228" width="5" height="15" fill="rgb(246,41,41)"/><text x="708.00" y="238.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2054) (1 samples, 0.43%)</title><rect x="705" y="244" width="5" height="15" fill="rgb(245,142,36)"/><text x="708.00" y="254.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:36) (1 samples, 0.43%)</title><rect x="710" y="84" width="5" height="15" fill="rgb(248,206,29)"/><text x="713.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.43%)</title><rect x="710" y="100" width="5" height="15" fill="rgb(206,145,10)"/><text x="713.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.43%)</title><rect x="710" y="116" width="5" height="15" fill="rgb(211,203,42)"/><text x="713.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.43%)</title><rect x="710" y="132" width="5" height="15" fill="rgb(252,150,38)"/><text x="713.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.43%)</title><rect x="710" y="148" width="5" height="15" fill="rgb(234,11,49)"/><text x="713.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.43%)</title><rect x="710" y="164" width="5" height="15" fill="rgb(209,16,30)"/><text x="713.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.43%)</title><rect x="710" y="180" width="5" height="15" fill="rgb(209,56,48)"/><text x="713.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.43%)</title><rect x="710" y="196" width="5" height="15" fill="rgb(227,35,33)"/><text x="713.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="710" y="212" width="5" height="15" fill="rgb(224,21,26)"/><text x="713.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="710" y="228" width="5" height="15" fill="rgb(233,204,1)"/><text x="713.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="710" y="244" width="5" height="15" fill="rgb(217,145,10)"/><text x="713.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="710" y="260" width="5" height="15" fill="rgb(233,164,37)"/><text x="713.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="710" y="276" width="5" height="15" fill="rgb(215,1,48)"/><text x="713.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.43%)</title><rect x="710" y="292" width="5" height="15" fill="rgb(252,187,24)"/><text x="713.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="710" y="308" width="5" height="15" fill="rgb(218,190,19)"/><text x="713.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="710" y="324" width="5" height="15" fill="rgb(210,132,20)"/><text x="713.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="710" y="340" width="5" height="15" fill="rgb(219,139,47)"/><text x="713.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="710" y="356" width="5" height="15" fill="rgb(233,87,30)"/><text x="713.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="710" y="372" width="5" height="15" fill="rgb(219,85,20)"/><text x="713.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:25) (1 samples, 0.43%)</title><rect x="710" y="388" width="5" height="15" fill="rgb(216,157,26)"/><text x="713.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="710" y="404" width="5" height="15" fill="rgb(226,76,53)"/><text x="713.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="710" y="420" width="5" height="15" fill="rgb(209,208,46)"/><text x="713.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="710" y="436" width="5" height="15" fill="rgb(244,38,24)"/><text x="713.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.43%)</title><rect x="710" y="452" width="5" height="15" fill="rgb(230,135,51)"/><text x="713.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.43%)</title><rect x="710" y="468" width="5" height="15" fill="rgb(214,41,40)"/><text x="713.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.43%)</title><rect x="710" y="484" width="5" height="15" fill="rgb(247,183,12)"/><text x="713.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.43%)</title><rect x="715" y="148" width="6" height="15" fill="rgb(224,62,33)"/><text x="718.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 2.14%)</title><rect x="721" y="180" width="25" height="15" fill="rgb(226,223,8)"/><text x="724.00" y="190.50">r..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.43%)</title><rect x="741" y="196" width="5" height="15" fill="rgb(224,13,1)"/><text x="744.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:32) (1 samples, 0.43%)</title><rect x="761" y="212" width="5" height="15" fill="rgb(248,172,39)"/><text x="764.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.43%)</title><rect x="766" y="244" width="5" height="15" fill="rgb(220,193,47)"/><text x="769.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.43%)</title><rect x="766" y="260" width="5" height="15" fill="rgb(254,31,12)"/><text x="769.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.43%)</title><rect x="766" y="276" width="5" height="15" fill="rgb(234,219,41)"/><text x="769.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.43%)</title><rect x="771" y="260" width="5" height="15" fill="rgb(234,147,5)"/><text x="774.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.43%)</title><rect x="771" y="276" width="5" height="15" fill="rgb(217,72,17)"/><text x="774.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 1.28%)</title><rect x="766" y="228" width="15" height="15" fill="rgb(211,214,50)"/><text x="769.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (2 samples, 0.85%)</title><rect x="771" y="244" width="10" height="15" fill="rgb(243,66,17)"/><text x="774.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.43%)</title><rect x="776" y="260" width="5" height="15" fill="rgb(241,182,52)"/><text x="779.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:571) (1 samples, 0.43%)</title><rect x="776" y="276" width="5" height="15" fill="rgb(234,66,13)"/><text x="779.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.43%)</title><rect x="781" y="228" width="5" height="15" fill="rgb(230,0,23)"/><text x="784.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.43%)</title><rect x="781" y="244" width="5" height="15" fill="rgb(216,52,36)"/><text x="784.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (5 samples, 2.14%)</title><rect x="766" y="212" width="25" height="15" fill="rgb(238,76,29)"/><text x="769.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1684) (1 samples, 0.43%)</title><rect x="786" y="228" width="5" height="15" fill="rgb(205,202,42)"/><text x="789.00" y="238.50"></text></g><g><title>PyArray_MapIterSwapAxes (mapping.c:140) (1 samples, 0.43%)</title><rect x="786" y="244" width="5" height="15" fill="rgb(206,225,41)"/><text x="789.00" y="254.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.43%)</title><rect x="786" y="260" width="5" height="15" fill="rgb(218,187,26)"/><text x="789.00" y="270.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.43%)</title><rect x="786" y="276" width="5" height="15" fill="rgb(253,115,7)"/><text x="789.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.43%)</title><rect x="786" y="292" width="5" height="15" fill="rgb(208,167,42)"/><text x="789.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.43%)</title><rect x="786" y="308" width="5" height="15" fill="rgb(249,137,39)"/><text x="789.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.43%)</title><rect x="786" y="324" width="5" height="15" fill="rgb(215,71,34)"/><text x="789.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.43%)</title><rect x="791" y="212" width="5" height="15" fill="rgb(245,221,41)"/><text x="794.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.43%)</title><rect x="791" y="228" width="5" height="15" fill="rgb(228,60,27)"/><text x="794.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:46) (1 samples, 0.43%)</title><rect x="796" y="212" width="5" height="15" fill="rgb(219,25,33)"/><text x="799.00" y="222.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.43%)</title><rect x="811" y="244" width="5" height="15" fill="rgb(247,142,18)"/><text x="814.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.43%)</title><rect x="811" y="260" width="5" height="15" fill="rgb(242,142,2)"/><text x="814.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.43%)</title><rect x="811" y="276" width="5" height="15" fill="rgb(212,19,41)"/><text x="814.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.43%)</title><rect x="811" y="292" width="5" height="15" fill="rgb(254,154,41)"/><text x="814.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.43%)</title><rect x="811" y="308" width="5" height="15" fill="rgb(223,221,14)"/><text x="814.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.43%)</title><rect x="811" y="324" width="5" height="15" fill="rgb(233,60,20)"/><text x="814.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.43%)</title><rect x="811" y="340" width="5" height="15" fill="rgb(253,50,29)"/><text x="814.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.43%)</title><rect x="811" y="356" width="5" height="15" fill="rgb(205,48,32)"/><text x="814.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 1.71%)</title><rect x="801" y="212" width="20" height="15" fill="rgb(251,164,38)"/><text x="804.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 1.71%)</title><rect x="801" y="228" width="20" height="15" fill="rgb(216,63,53)"/><text x="804.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.43%)</title><rect x="816" y="244" width="5" height="15" fill="rgb(226,72,43)"/><text x="819.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.43%)</title><rect x="816" y="260" width="5" height="15" fill="rgb(211,29,31)"/><text x="819.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.43%)</title><rect x="816" y="276" width="5" height="15" fill="rgb(245,160,38)"/><text x="819.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (1 samples, 0.43%)</title><rect x="816" y="292" width="5" height="15" fill="rgb(213,139,29)"/><text x="819.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:38) (1 samples, 0.43%)</title><rect x="821" y="212" width="5" height="15" fill="rgb(252,20,24)"/><text x="824.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (3 samples, 1.28%)</title><rect x="826" y="212" width="16" height="15" fill="rgb(205,66,41)"/><text x="829.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.43%)</title><rect x="837" y="228" width="5" height="15" fill="rgb(214,143,29)"/><text x="840.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.43%)</title><rect x="837" y="244" width="5" height="15" fill="rgb(241,38,42)"/><text x="840.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.43%)</title><rect x="837" y="260" width="5" height="15" fill="rgb(218,194,31)"/><text x="840.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.43%)</title><rect x="837" y="276" width="5" height="15" fill="rgb(207,106,38)"/><text x="840.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (1 samples, 0.43%)</title><rect x="837" y="292" width="5" height="15" fill="rgb(251,85,20)"/><text x="840.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (1 samples, 0.43%)</title><rect x="837" y="308" width="5" height="15" fill="rgb(208,93,54)"/><text x="840.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (1 samples, 0.43%)</title><rect x="837" y="324" width="5" height="15" fill="rgb(241,118,26)"/><text x="840.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.43%)</title><rect x="837" y="340" width="5" height="15" fill="rgb(236,41,2)"/><text x="840.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4577) (1 samples, 0.43%)</title><rect x="837" y="356" width="5" height="15" fill="rgb(220,189,38)"/><text x="840.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c:810) (1 samples, 0.43%)</title><rect x="837" y="372" width="5" height="15" fill="rgb(232,142,40)"/><text x="840.00" y="382.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.43%)</title><rect x="837" y="388" width="5" height="15" fill="rgb(239,66,0)"/><text x="840.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.43%)</title><rect x="837" y="404" width="5" height="15" fill="rgb(245,123,0)"/><text x="840.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (1 samples, 0.43%)</title><rect x="842" y="212" width="5" height="15" fill="rgb(242,193,48)"/><text x="845.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (1 samples, 0.43%)</title><rect x="847" y="212" width="5" height="15" fill="rgb(213,114,23)"/><text x="850.00" y="222.50"></text></g><g><title>0x7ffb93b7d9f5 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="857" y="356" width="5" height="15" fill="rgb(215,152,22)"/><text x="860.00" y="366.50"></text></g><g><title>_IO_setb (libc-2.29.so) (1 samples, 0.43%)</title><rect x="857" y="372" width="5" height="15" fill="rgb(207,21,45)"/><text x="860.00" y="382.50"></text></g><g><title>0x7ffb93b70a9f (libc-2.29.so) (2 samples, 0.85%)</title><rect x="857" y="340" width="10" height="15" fill="rgb(236,22,35)"/><text x="860.00" y="350.50"></text></g><g><title>0x7ffb93b7d9f9 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="862" y="356" width="5" height="15" fill="rgb(235,211,29)"/><text x="865.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (4 samples, 1.71%)</title><rect x="852" y="244" width="20" height="15" fill="rgb(208,90,18)"/><text x="855.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (3 samples, 1.28%)</title><rect x="857" y="260" width="15" height="15" fill="rgb(218,171,31)"/><text x="860.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (3 samples, 1.28%)</title><rect x="857" y="276" width="15" height="15" fill="rgb(253,229,15)"/><text x="860.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (3 samples, 1.28%)</title><rect x="857" y="292" width="15" height="15" fill="rgb(241,29,9)"/><text x="860.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:937) (3 samples, 1.28%)</title><rect x="857" y="308" width="15" height="15" fill="rgb(205,175,33)"/><text x="860.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (3 samples, 1.28%)</title><rect x="857" y="324" width="15" height="15" fill="rgb(207,186,32)"/><text x="860.00" y="334.50"></text></g><g><title>0x7ffb93b70ab0 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="867" y="340" width="5" height="15" fill="rgb(249,98,9)"/><text x="870.00" y="350.50"></text></g><g><title>0x7ffb93b64ac7 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="867" y="356" width="5" height="15" fill="rgb(248,5,48)"/><text x="870.00" y="366.50"></text></g><g><title>_IO_default_xsputn (libc-2.29.so) (1 samples, 0.43%)</title><rect x="867" y="372" width="5" height="15" fill="rgb(224,31,3)"/><text x="870.00" y="382.50"></text></g><g><title>array_choose (methods.c:1218) (1 samples, 0.43%)</title><rect x="872" y="292" width="5" height="15" fill="rgb(220,65,51)"/><text x="875.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.43%)</title><rect x="872" y="308" width="5" height="15" fill="rgb(213,2,20)"/><text x="875.00" y="318.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.43%)</title><rect x="872" y="324" width="5" height="15" fill="rgb(228,147,44)"/><text x="875.00" y="334.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (1 samples, 0.43%)</title><rect x="877" y="308" width="5" height="15" fill="rgb(249,137,48)"/><text x="880.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2137) (1 samples, 0.43%)</title><rect x="877" y="324" width="5" height="15" fill="rgb(234,194,30)"/><text x="880.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:242) (1 samples, 0.43%)</title><rect x="877" y="340" width="5" height="15" fill="rgb(208,212,50)"/><text x="880.00" y="350.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (1 samples, 0.43%)</title><rect x="882" y="308" width="5" height="15" fill="rgb(206,175,32)"/><text x="885.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (1 samples, 0.43%)</title><rect x="882" y="324" width="5" height="15" fill="rgb(249,204,5)"/><text x="885.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1312) (1 samples, 0.43%)</title><rect x="882" y="340" width="5" height="15" fill="rgb(241,56,30)"/><text x="885.00" y="350.50"></text></g><g><title>PyArray_Broadcast (iterators.c:1235) (1 samples, 0.43%)</title><rect x="882" y="356" width="5" height="15" fill="rgb(254,110,10)"/><text x="885.00" y="366.50"></text></g><g><title>PyArray_Choose (item_selection.c:709) (1 samples, 0.43%)</title><rect x="887" y="308" width="5" height="15" fill="rgb(243,24,33)"/><text x="890.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.43%)</title><rect x="887" y="324" width="5" height="15" fill="rgb(232,135,17)"/><text x="890.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.43%)</title><rect x="887" y="340" width="5" height="15" fill="rgb(241,78,42)"/><text x="890.00" y="350.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.43%)</title><rect x="887" y="356" width="5" height="15" fill="rgb(222,57,17)"/><text x="890.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.43%)</title><rect x="887" y="372" width="5" height="15" fill="rgb(238,159,1)"/><text x="890.00" y="382.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.43%)</title><rect x="887" y="388" width="5" height="15" fill="rgb(245,90,1)"/><text x="890.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="887" y="404" width="5" height="15" fill="rgb(226,61,1)"/><text x="890.00" y="414.50"></text></g><g><title>0x7ffb93b80f2e (libc-2.29.so) (1 samples, 0.43%)</title><rect x="887" y="420" width="5" height="15" fill="rgb(228,143,6)"/><text x="890.00" y="430.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (9 samples, 3.85%)</title><rect x="852" y="212" width="45" height="15" fill="rgb(236,7,20)"/><text x="855.00" y="222.50">_run..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (9 samples, 3.85%)</title><rect x="852" y="228" width="45" height="15" fill="rgb(221,108,8)"/><text x="855.00" y="238.50">choo..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.14%)</title><rect x="872" y="244" width="25" height="15" fill="rgb(209,77,17)"/><text x="875.00" y="254.50">a..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (5 samples, 2.14%)</title><rect x="872" y="260" width="25" height="15" fill="rgb(218,130,3)"/><text x="875.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 2.14%)</title><rect x="872" y="276" width="25" height="15" fill="rgb(207,37,8)"/><text x="875.00" y="286.50">_..</text></g><g><title>array_choose (methods.c:1224) (4 samples, 1.71%)</title><rect x="877" y="292" width="20" height="15" fill="rgb(250,209,20)"/><text x="880.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:792) (1 samples, 0.43%)</title><rect x="892" y="308" width="5" height="15" fill="rgb(223,102,5)"/><text x="895.00" y="318.50"></text></g><g><title>arraymultiter_dealloc (iterators.c:1439) (1 samples, 0.43%)</title><rect x="892" y="324" width="5" height="15" fill="rgb(210,9,40)"/><text x="895.00" y="334.50"></text></g><g><title>0x7ffb93b7ff71 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="892" y="340" width="5" height="15" fill="rgb(221,106,22)"/><text x="895.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (1 samples, 0.43%)</title><rect x="897" y="212" width="5" height="15" fill="rgb(218,121,6)"/><text x="900.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.43%)</title><rect x="897" y="228" width="5" height="15" fill="rgb(246,32,14)"/><text x="900.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.43%)</title><rect x="897" y="244" width="5" height="15" fill="rgb(230,167,49)"/><text x="900.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.43%)</title><rect x="902" y="244" width="5" height="15" fill="rgb(253,171,27)"/><text x="905.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:523) (1 samples, 0.43%)</title><rect x="902" y="260" width="5" height="15" fill="rgb(253,73,46)"/><text x="905.00" y="270.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:4) (1 samples, 0.43%)</title><rect x="907" y="260" width="5" height="15" fill="rgb(247,113,54)"/><text x="910.00" y="270.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.43%)</title><rect x="912" y="260" width="5" height="15" fill="rgb(206,101,5)"/><text x="915.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.43%)</title><rect x="912" y="276" width="5" height="15" fill="rgb(238,15,22)"/><text x="915.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.43%)</title><rect x="912" y="292" width="5" height="15" fill="rgb(248,20,19)"/><text x="915.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2869) (1 samples, 0.43%)</title><rect x="917" y="276" width="5" height="15" fill="rgb(234,187,3)"/><text x="920.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.43%)</title><rect x="922" y="324" width="5" height="15" fill="rgb(250,152,50)"/><text x="925.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2691) (1 samples, 0.43%)</title><rect x="922" y="340" width="5" height="15" fill="rgb(236,42,44)"/><text x="925.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 1.28%)</title><rect x="917" y="260" width="15" height="15" fill="rgb(244,214,12)"/><text x="920.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.85%)</title><rect x="922" y="276" width="10" height="15" fill="rgb(227,124,32)"/><text x="925.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (2 samples, 0.85%)</title><rect x="922" y="292" width="10" height="15" fill="rgb(233,125,5)"/><text x="925.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (2 samples, 0.85%)</title><rect x="922" y="308" width="10" height="15" fill="rgb(210,186,25)"/><text x="925.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.43%)</title><rect x="927" y="324" width="5" height="15" fill="rgb(222,143,27)"/><text x="930.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:2019) (1 samples, 0.43%)</title><rect x="927" y="340" width="5" height="15" fill="rgb(231,127,6)"/><text x="930.00" y="350.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (6 samples, 2.56%)</title><rect x="907" y="244" width="30" height="15" fill="rgb(235,167,30)"/><text x="910.00" y="254.50">to..</text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.43%)</title><rect x="932" y="260" width="5" height="15" fill="rgb(249,203,50)"/><text x="935.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2503) (1 samples, 0.43%)</title><rect x="932" y="276" width="5" height="15" fill="rgb(210,22,44)"/><text x="935.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.43%)</title><rect x="932" y="292" width="5" height="15" fill="rgb(251,126,44)"/><text x="935.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.43%)</title><rect x="932" y="308" width="5" height="15" fill="rgb(246,152,39)"/><text x="935.00" y="318.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (8 samples, 3.42%)</title><rect x="902" y="228" width="40" height="15" fill="rgb(228,126,43)"/><text x="905.00" y="238.50">_co..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (1 samples, 0.43%)</title><rect x="937" y="244" width="5" height="15" fill="rgb(207,147,31)"/><text x="940.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.43%)</title><rect x="937" y="260" width="5" height="15" fill="rgb(236,107,50)"/><text x="940.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2569) (1 samples, 0.43%)</title><rect x="937" y="276" width="5" height="15" fill="rgb(241,114,16)"/><text x="940.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="937" y="292" width="5" height="15" fill="rgb(208,106,9)"/><text x="940.00" y="302.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.43%)</title><rect x="942" y="244" width="5" height="15" fill="rgb(221,218,6)"/><text x="945.00" y="254.50"></text></g><g><title>0x7ffb92da2dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="942" y="260" width="5" height="15" fill="rgb(232,104,36)"/><text x="945.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.43%)</title><rect x="947" y="308" width="5" height="15" fill="rgb(230,198,15)"/><text x="950.00" y="318.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:33) (1 samples, 0.43%)</title><rect x="947" y="324" width="5" height="15" fill="rgb(238,116,46)"/><text x="950.00" y="334.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (3 samples, 1.28%)</title><rect x="942" y="228" width="16" height="15" fill="rgb(249,148,2)"/><text x="945.00" y="238.50"></text></g><g><title>array_astype (methods.c:841) (2 samples, 0.85%)</title><rect x="947" y="244" width="11" height="15" fill="rgb(221,72,33)"/><text x="950.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (2 samples, 0.85%)</title><rect x="947" y="260" width="11" height="15" fill="rgb(237,131,17)"/><text x="950.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (2 samples, 0.85%)</title><rect x="947" y="276" width="11" height="15" fill="rgb(234,15,14)"/><text x="950.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (2 samples, 0.85%)</title><rect x="947" y="292" width="11" height="15" fill="rgb(253,18,41)"/><text x="950.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.43%)</title><rect x="952" y="308" width="6" height="15" fill="rgb(221,61,33)"/><text x="955.00" y="318.50"></text></g><g><title>_array_fill_strides (ctors.c:4130) (1 samples, 0.43%)</title><rect x="952" y="324" width="6" height="15" fill="rgb(225,184,50)"/><text x="955.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (40 samples, 17.09%)</title><rect x="761" y="196" width="202" height="15" fill="rgb(248,118,42)"/><text x="764.00" y="206.50">run (mlprodict/onnxrt/ops_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (12 samples, 5.13%)</title><rect x="902" y="212" width="61" height="15" fill="rgb(208,155,9)"/><text x="905.00" y="222.50">_run (..</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.43%)</title><rect x="958" y="228" width="5" height="15" fill="rgb(214,167,20)"/><text x="961.00" y="238.50"></text></g><g><title>npy_free_cache_dim (alloc.c:175) (1 samples, 0.43%)</title><rect x="958" y="244" width="5" height="15" fill="rgb(217,60,8)"/><text x="961.00" y="254.50"></text></g><g><title>_npy_free_cache (alloc.c:108) (1 samples, 0.43%)</title><rect x="958" y="260" width="5" height="15" fill="rgb(250,211,27)"/><text x="961.00" y="270.50"></text></g><g><title>0x7ffb5461854f (?) (1 samples, 0.43%)</title><rect x="963" y="244" width="5" height="15" fill="rgb(236,56,24)"/><text x="966.00" y="254.50"></text></g><g><title>0x7ffb5461e65e (?) (1 samples, 0.43%)</title><rect x="963" y="260" width="5" height="15" fill="rgb(222,21,11)"/><text x="966.00" y="270.50"></text></g><g><title>0x7ffb5461e50f (?) (1 samples, 0.43%)</title><rect x="963" y="276" width="5" height="15" fill="rgb(253,94,4)"/><text x="966.00" y="286.50"></text></g><g><title>0x7ffb54624d6c (?) (1 samples, 0.43%)</title><rect x="963" y="292" width="5" height="15" fill="rgb(235,133,32)"/><text x="966.00" y="302.50"></text></g><g><title>0x7ffb5db85ab9 (?) (1 samples, 0.43%)</title><rect x="963" y="308" width="5" height="15" fill="rgb(252,222,17)"/><text x="966.00" y="318.50"></text></g><g><title>0x7ffb5db86eab (?) (1 samples, 0.43%)</title><rect x="963" y="324" width="5" height="15" fill="rgb(209,225,29)"/><text x="966.00" y="334.50"></text></g><g><title>0x7ffb5db86ea0 (libgomp.so.1.0.0) (3 samples, 1.28%)</title><rect x="968" y="484" width="15" height="15" fill="rgb(243,193,5)"/><text x="971.00" y="494.50"></text></g><g><title>0x7ffb5db86ea9 (libgomp.so.1.0.0) (4 samples, 1.71%)</title><rect x="983" y="484" width="20" height="15" fill="rgb(227,181,50)"/><text x="986.00" y="494.50"></text></g><g><title>0x7ffb5db86eab (libgomp.so.1.0.0) (6 samples, 2.56%)</title><rect x="1003" y="484" width="30" height="15" fill="rgb(229,175,51)"/><text x="1006.00" y="494.50">0x..</text></g><g><title>0x7ffb5db85ab9 (libgomp.so.1.0.0) (17 samples, 7.26%)</title><rect x="968" y="468" width="85" height="15" fill="rgb(245,98,1)"/><text x="971.00" y="478.50">0x7ffb5db8..</text></g><g><title>0x7ffb5db86ead (libgomp.so.1.0.0) (4 samples, 1.71%)</title><rect x="1033" y="484" width="20" height="15" fill="rgb(221,109,8)"/><text x="1036.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (62 samples, 26.50%)</title><rect x="746" y="180" width="312" height="15" fill="rgb(250,150,21)"/><text x="749.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node...</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (19 samples, 8.12%)</title><rect x="963" y="196" width="95" height="15" fill="rgb(209,135,21)"/><text x="966.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (19 samples, 8.12%)</title><rect x="963" y="212" width="95" height="15" fill="rgb(241,77,14)"/><text x="966.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (19 samples, 8.12%)</title><rect x="963" y="228" width="95" height="15" fill="rgb(224,84,51)"/><text x="966.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (18 samples, 7.69%)</title><rect x="968" y="244" width="90" height="15" fill="rgb(212,44,48)"/><text x="971.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (18 samples, 7.69%)</title><rect x="968" y="260" width="90" height="15" fill="rgb(225,212,28)"/><text x="971.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (18 samples, 7.69%)</title><rect x="968" y="276" width="90" height="15" fill="rgb(214,47,5)"/><text x="971.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (18 samples, 7.69%)</title><rect x="968" y="292" width="90" height="15" fill="rgb(218,94,45)"/><text x="971.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (18 samples, 7.69%)</title><rect x="968" y="308" width="90" height="15" fill="rgb(238,108,25)"/><text x="971.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (18 samples, 7.69%)</title><rect x="968" y="324" width="90" height="15" fill="rgb(248,192,12)"/><text x="971.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (18 samples, 7.69%)</title><rect x="968" y="340" width="90" height="15" fill="rgb(232,172,22)"/><text x="971.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h:538) (18 samples, 7.69%)</title><rect x="968" y="356" width="90" height="15" fill="rgb(238,49,30)"/><text x="971.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (18 samples, 7.69%)</title><rect x="968" y="372" width="90" height="15" fill="rgb(221,207,1)"/><text x="971.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (18 samples, 7.69%)</title><rect x="968" y="388" width="90" height="15" fill="rgb(242,172,41)"/><text x="971.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (18 samples, 7.69%)</title><rect x="968" y="404" width="90" height="15" fill="rgb(243,165,43)"/><text x="971.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (18 samples, 7.69%)</title><rect x="968" y="420" width="90" height="15" fill="rgb(254,119,27)"/><text x="971.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h:619) (18 samples, 7.69%)</title><rect x="968" y="436" width="90" height="15" fill="rgb(218,53,25)"/><text x="971.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (18 samples, 7.69%)</title><rect x="968" y="452" width="90" height="15" fill="rgb(245,97,24)"/><text x="971.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.43%)</title><rect x="1053" y="468" width="5" height="15" fill="rgb(213,208,33)"/><text x="1056.00" y="478.50"></text></g><g><title>0x7ffb5db84daa (libgomp.so.1.0.0) (1 samples, 0.43%)</title><rect x="1053" y="484" width="5" height="15" fill="rgb(241,139,52)"/><text x="1056.00" y="494.50"></text></g><g><title>0x7ffb5db86d6d (libgomp.so.1.0.0) (1 samples, 0.43%)</title><rect x="1053" y="500" width="5" height="15" fill="rgb(206,194,52)"/><text x="1056.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.43%)</title><rect x="1058" y="180" width="5" height="15" fill="rgb(214,84,34)"/><text x="1061.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.43%)</title><rect x="1063" y="180" width="5" height="15" fill="rgb(245,78,6)"/><text x="1066.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (70 samples, 29.91%)</title><rect x="721" y="164" width="353" height="15" fill="rgb(251,173,0)"/><text x="724.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:154) (1 samples, 0.43%)</title><rect x="1068" y="180" width="6" height="15" fill="rgb(238,139,5)"/><text x="1071.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:61) (73 samples, 31.20%)</title><rect x="710" y="52" width="369" height="15" fill="rgb(253,73,31)"/><text x="713.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:60) (73 samples, 31.20%)</title><rect x="710" y="68" width="369" height="15" fill="rgb(238,183,3)"/><text x="713.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_re..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:37) (72 samples, 30.77%)</title><rect x="715" y="84" width="364" height="15" fill="rgb(245,3,38)"/><text x="718.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:31) (72 samples, 30.77%)</title><rect x="715" y="100" width="364" height="15" fill="rgb(254,228,34)"/><text x="718.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (72 samples, 30.77%)</title><rect x="715" y="116" width="364" height="15" fill="rgb(236,113,47)"/><text x="718.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (72 samples, 30.77%)</title><rect x="715" y="132" width="364" height="15" fill="rgb(242,173,29)"/><text x="718.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (71 samples, 30.34%)</title><rect x="721" y="148" width="358" height="15" fill="rgb(211,142,48)"/><text x="724.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.43%)</title><rect x="1074" y="164" width="5" height="15" fill="rgb(220,60,2)"/><text x="1077.00" y="174.50"></text></g><g><title>0x7ffb93b7fd07 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1074" y="180" width="5" height="15" fill="rgb(245,141,45)"/><text x="1077.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.43%)</title><rect x="1079" y="132" width="5" height="15" fill="rgb(251,226,20)"/><text x="1082.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.43%)</title><rect x="1084" y="132" width="5" height="15" fill="rgb(250,20,32)"/><text x="1087.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.43%)</title><rect x="1084" y="148" width="5" height="15" fill="rgb(237,139,29)"/><text x="1087.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.28%)</title><rect x="1079" y="116" width="15" height="15" fill="rgb(244,165,12)"/><text x="1082.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:946) (1 samples, 0.43%)</title><rect x="1089" y="132" width="5" height="15" fill="rgb(242,97,7)"/><text x="1092.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.43%)</title><rect x="1094" y="196" width="5" height="15" fill="rgb(245,122,53)"/><text x="1097.00" y="206.50"></text></g><g><title>0x7ffb53bbdff9 (?) (1 samples, 0.43%)</title><rect x="1104" y="212" width="5" height="15" fill="rgb(235,33,47)"/><text x="1107.00" y="222.50"></text></g><g><title>0x7ffb53bb8ef6 (?) (1 samples, 0.43%)</title><rect x="1104" y="228" width="5" height="15" fill="rgb(214,135,0)"/><text x="1107.00" y="238.50"></text></g><g><title>0x7ffb53bad962 (?) (1 samples, 0.43%)</title><rect x="1104" y="244" width="5" height="15" fill="rgb(216,201,54)"/><text x="1107.00" y="254.50"></text></g><g><title>0x7ffb53be17a7 (?) (1 samples, 0.43%)</title><rect x="1104" y="260" width="5" height="15" fill="rgb(242,12,45)"/><text x="1107.00" y="270.50"></text></g><g><title>0x7ffb53be1379 (?) (1 samples, 0.43%)</title><rect x="1104" y="276" width="5" height="15" fill="rgb(232,81,38)"/><text x="1107.00" y="286.50"></text></g><g><title>0x7ffb5403f8b8 (?) (1 samples, 0.43%)</title><rect x="1104" y="292" width="5" height="15" fill="rgb(250,9,22)"/><text x="1107.00" y="302.50"></text></g><g><title>0x7ffb5403dc7f (?) (1 samples, 0.43%)</title><rect x="1104" y="308" width="5" height="15" fill="rgb(218,220,12)"/><text x="1107.00" y="318.50"></text></g><g><title>0x7ffb5405099c (?) (1 samples, 0.43%)</title><rect x="1104" y="324" width="5" height="15" fill="rgb(254,68,28)"/><text x="1107.00" y="334.50"></text></g><g><title>0x7ffb53e526f1 (?) (1 samples, 0.43%)</title><rect x="1104" y="340" width="5" height="15" fill="rgb(213,90,7)"/><text x="1107.00" y="350.50"></text></g><g><title>0x7ffb5400c5e6 (?) (1 samples, 0.43%)</title><rect x="1104" y="356" width="5" height="15" fill="rgb(241,139,21)"/><text x="1107.00" y="366.50"></text></g><g><title>0x7ffb5400c486 (?) (1 samples, 0.43%)</title><rect x="1104" y="372" width="5" height="15" fill="rgb(225,112,31)"/><text x="1107.00" y="382.50"></text></g><g><title>0x7ffb53ff6c8d (?) (1 samples, 0.43%)</title><rect x="1104" y="388" width="5" height="15" fill="rgb(240,136,32)"/><text x="1107.00" y="398.50"></text></g><g><title>0x7ffb53ff6202 (?) (1 samples, 0.43%)</title><rect x="1104" y="404" width="5" height="15" fill="rgb(209,220,8)"/><text x="1107.00" y="414.50"></text></g><g><title>0x7ffb53ff5913 (?) (1 samples, 0.43%)</title><rect x="1104" y="420" width="5" height="15" fill="rgb(241,117,17)"/><text x="1107.00" y="430.50"></text></g><g><title>0x7ffb53ff479d (?) (1 samples, 0.43%)</title><rect x="1104" y="436" width="5" height="15" fill="rgb(223,169,7)"/><text x="1107.00" y="446.50"></text></g><g><title>0x7ffb540252f2 (?) (1 samples, 0.43%)</title><rect x="1104" y="452" width="5" height="15" fill="rgb(251,168,45)"/><text x="1107.00" y="462.50"></text></g><g><title>0x7ffb53fde0c9 (?) (1 samples, 0.43%)</title><rect x="1104" y="468" width="5" height="15" fill="rgb(250,85,45)"/><text x="1107.00" y="478.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="1104" y="484" width="5" height="15" fill="rgb(221,13,48)"/><text x="1107.00" y="494.50"></text></g><g><title>0x7ffb93b7fd07 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1114" y="324" width="5" height="15" fill="rgb(225,7,21)"/><text x="1117.00" y="334.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1124" y="356" width="5" height="15" fill="rgb(226,131,18)"/><text x="1127.00" y="366.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="1124" y="340" width="10" height="15" fill="rgb(240,43,46)"/><text x="1127.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="356" width="5" height="15" fill="rgb(247,156,20)"/><text x="1132.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="372" width="5" height="15" fill="rgb(223,137,28)"/><text x="1132.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="388" width="5" height="15" fill="rgb(238,49,4)"/><text x="1132.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="404" width="5" height="15" fill="rgb(208,164,42)"/><text x="1132.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="420" width="5" height="15" fill="rgb(240,65,4)"/><text x="1132.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="436" width="5" height="15" fill="rgb(235,167,21)"/><text x="1132.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1129" y="452" width="5" height="15" fill="rgb(250,201,32)"/><text x="1132.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.28%)</title><rect x="1134" y="340" width="15" height="15" fill="rgb(220,187,28)"/><text x="1137.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.28%)</title><rect x="1134" y="356" width="15" height="15" fill="rgb(212,182,9)"/><text x="1137.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="1139" y="372" width="10" height="15" fill="rgb(247,66,39)"/><text x="1142.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.85%)</title><rect x="1139" y="388" width="10" height="15" fill="rgb(233,57,28)"/><text x="1142.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.85%)</title><rect x="1139" y="404" width="10" height="15" fill="rgb(242,193,41)"/><text x="1142.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.85%)</title><rect x="1139" y="420" width="10" height="15" fill="rgb(212,63,10)"/><text x="1142.00" y="430.50"></text></g><g><title>0x7ffb93b81028 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1144" y="436" width="5" height="15" fill="rgb(240,130,4)"/><text x="1147.00" y="446.50"></text></g><g><title>0x7ffb93b7ec4d (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1144" y="452" width="5" height="15" fill="rgb(244,37,5)"/><text x="1147.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1149" y="340" width="5" height="15" fill="rgb(245,4,41)"/><text x="1152.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1149" y="356" width="5" height="15" fill="rgb(238,223,17)"/><text x="1152.00" y="366.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="1149" y="372" width="5" height="15" fill="rgb(248,50,12)"/><text x="1152.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1154" y="340" width="5" height="15" fill="rgb(239,96,24)"/><text x="1157.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1154" y="356" width="5" height="15" fill="rgb(247,24,50)"/><text x="1157.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1154" y="372" width="5" height="15" fill="rgb(243,24,0)"/><text x="1157.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.27%)</title><rect x="1114" y="260" width="50" height="15" fill="rgb(245,178,48)"/><text x="1117.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.27%)</title><rect x="1114" y="276" width="50" height="15" fill="rgb(251,150,4)"/><text x="1117.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.27%)</title><rect x="1114" y="292" width="50" height="15" fill="rgb(244,50,17)"/><text x="1117.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.27%)</title><rect x="1114" y="308" width="50" height="15" fill="rgb(222,178,19)"/><text x="1117.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.85%)</title><rect x="1119" y="324" width="45" height="15" fill="rgb(248,187,42)"/><text x="1122.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1159" y="340" width="5" height="15" fill="rgb(240,206,30)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1159" y="356" width="5" height="15" fill="rgb(239,89,10)"/><text x="1162.00" y="366.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1159" y="372" width="5" height="15" fill="rgb(240,125,47)"/><text x="1162.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1159" y="388" width="5" height="15" fill="rgb(218,219,2)"/><text x="1162.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.43%)</title><rect x="1159" y="404" width="5" height="15" fill="rgb(225,40,41)"/><text x="1162.00" y="414.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1164" y="260" width="5" height="15" fill="rgb(222,1,25)"/><text x="1167.00" y="270.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.43%)</title><rect x="1169" y="260" width="5" height="15" fill="rgb(242,132,4)"/><text x="1172.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.56%)</title><rect x="1114" y="244" width="65" height="15" fill="rgb(242,106,37)"/><text x="1117.00" y="254.50">onnxrun..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1174" y="260" width="5" height="15" fill="rgb(228,78,31)"/><text x="1177.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1174" y="276" width="5" height="15" fill="rgb(246,170,4)"/><text x="1177.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1174" y="292" width="5" height="15" fill="rgb(213,164,34)"/><text x="1177.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1174" y="308" width="5" height="15" fill="rgb(212,140,52)"/><text x="1177.00" y="318.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (18 samples, 7.69%)</title><rect x="1094" y="164" width="90" height="15" fill="rgb(238,168,20)"/><text x="1097.00" y="174.50">_run_whole..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (18 samples, 7.69%)</title><rect x="1094" y="180" width="90" height="15" fill="rgb(224,35,30)"/><text x="1097.00" y="190.50">run (mlpro..</text></g><g><title>run (onnxruntime/capi/session.py:136) (17 samples, 7.26%)</title><rect x="1099" y="196" width="85" height="15" fill="rgb(251,53,44)"/><text x="1102.00" y="206.50">run (onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.41%)</title><rect x="1109" y="212" width="75" height="15" fill="rgb(220,62,21)"/><text x="1112.00" y="222.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.41%)</title><rect x="1109" y="228" width="75" height="15" fill="rgb(226,221,53)"/><text x="1112.00" y="238.50">void pyb..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1179" y="244" width="5" height="15" fill="rgb(252,166,3)"/><text x="1182.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.43%)</title><rect x="1179" y="260" width="5" height="15" fill="rgb(223,41,53)"/><text x="1182.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.43%)</title><rect x="1179" y="276" width="5" height="15" fill="rgb(213,117,23)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7ffb93b9fd50 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1179" y="292" width="5" height="15" fill="rgb(241,220,10)"/><text x="1182.00" y="302.50"></text></g><g><title>all (234 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,163,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:68) (22 samples, 9.40%)</title><rect x="1079" y="52" width="111" height="15" fill="rgb(253,84,9)"/><text x="1082.00" y="62.50">&lt;module&gt; (ben..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:67) (22 samples, 9.40%)</title><rect x="1079" y="68" width="111" height="15" fill="rgb(230,45,14)"/><text x="1082.00" y="78.50">profile_ort (..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:37) (22 samples, 9.40%)</title><rect x="1079" y="84" width="111" height="15" fill="rgb(218,209,17)"/><text x="1082.00" y="94.50">setup_profile..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_4_12_float_.py:31) (22 samples, 9.40%)</title><rect x="1079" y="100" width="111" height="15" fill="rgb(227,168,11)"/><text x="1082.00" y="110.50">profile (benc..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (19 samples, 8.12%)</title><rect x="1094" y="116" width="96" height="15" fill="rgb(224,33,28)"/><text x="1097.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (19 samples, 8.12%)</title><rect x="1094" y="132" width="96" height="15" fill="rgb(216,171,41)"/><text x="1097.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (19 samples, 8.12%)</title><rect x="1094" y="148" width="96" height="15" fill="rgb(246,227,19)"/><text x="1097.00" y="158.50">run (mlprod..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.43%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(222,118,8)"/><text x="1187.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.43%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(207,176,37)"/><text x="1187.00" y="190.50"></text></g></g></svg>