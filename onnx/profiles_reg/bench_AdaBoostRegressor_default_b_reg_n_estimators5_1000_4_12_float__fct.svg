<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(245,178,18)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(223,75,2)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(227,120,46)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(219,117,31)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="932" width="1" height="15" fill="rgb(228,42,42)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(234,40,32)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(251,127,8)"/><text x="14.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.09%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(247,128,42)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.09%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(206,77,4)"/><text x="14.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.09%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(216,210,51)"/><text x="14.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.09%)</title><rect x="11" y="1028" width="1" height="15" fill="rgb(207,200,35)"/><text x="14.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.09%)</title><rect x="11" y="1044" width="1" height="15" fill="rgb(229,123,52)"/><text x="14.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.09%)</title><rect x="11" y="1060" width="1" height="15" fill="rgb(250,111,24)"/><text x="14.00" y="1070.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.27%)</title><rect x="11" y="868" width="3" height="15" fill="rgb(220,69,36)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.27%)</title><rect x="11" y="884" width="3" height="15" fill="rgb(212,72,25)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.27%)</title><rect x="11" y="900" width="3" height="15" fill="rgb(215,150,51)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.27%)</title><rect x="11" y="916" width="3" height="15" fill="rgb(229,194,35)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(208,36,13)"/><text x="15.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(253,201,35)"/><text x="16.00" y="958.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(207,170,39)"/><text x="17.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(215,228,19)"/><text x="17.00" y="910.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 0.55%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(254,167,21)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 0.55%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(208,39,34)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(208,142,33)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(239,70,53)"/><text x="18.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(217,12,45)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(222,155,4)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="15" y="932" width="1" height="15" fill="rgb(242,20,12)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(210,55,48)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(233,103,41)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(211,127,48)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(221,143,6)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(237,134,15)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(211,125,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.64%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(237,192,51)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(253,135,10)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 0.64%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(246,210,46)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(214,208,52)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(222,117,51)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(231,119,46)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.64%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(247,153,22)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(239,13,10)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 0.64%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(253,99,31)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(226,157,51)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(253,166,10)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(207,123,39)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(219,24,32)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(247,217,17)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py) (1 samples, 0.09%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(247,75,24)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(225,64,25)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(253,128,9)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="964" width="1" height="15" fill="rgb(242,23,31)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="980" width="1" height="15" fill="rgb(232,217,9)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="996" width="1" height="15" fill="rgb(233,124,44)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py) (1 samples, 0.09%)</title><rect x="16" y="1012" width="1" height="15" fill="rgb(229,12,16)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1028" width="1" height="15" fill="rgb(239,199,10)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1044" width="1" height="15" fill="rgb(208,5,8)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1060" width="1" height="15" fill="rgb(210,106,7)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1076" width="1" height="15" fill="rgb(253,117,8)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(222,102,40)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py) (1 samples, 0.09%)</title><rect x="16" y="1108" width="1" height="15" fill="rgb(221,210,51)"/><text x="19.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(212,149,4)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(236,48,32)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(209,9,12)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1172" width="1" height="15" fill="rgb(226,192,9)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1188" width="1" height="15" fill="rgb(205,212,21)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py) (1 samples, 0.09%)</title><rect x="16" y="1204" width="1" height="15" fill="rgb(207,34,3)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1220" width="1" height="15" fill="rgb(210,127,2)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1236" width="1" height="15" fill="rgb(252,87,41)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1252" width="1" height="15" fill="rgb(207,71,40)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1268" width="1" height="15" fill="rgb(249,107,2)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1284" width="1" height="15" fill="rgb(254,30,45)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (email/_parseaddr.py) (1 samples, 0.09%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(246,17,24)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(250,208,22)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(213,35,34)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(211,157,18)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(248,128,53)"/><text x="19.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(217,86,9)"/><text x="19.00" y="1390.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1396" width="1" height="15" fill="rgb(249,224,13)"/><text x="19.00" y="1406.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="16" y="1412" width="1" height="15" fill="rgb(209,149,45)"/><text x="19.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(219,129,18)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(216,30,50)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(240,147,40)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(240,176,22)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(210,65,44)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(233,54,32)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 0.73%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(210,219,8)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(237,185,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(219,174,26)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(222,163,11)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(251,30,38)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(250,13,51)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 0.73%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(235,72,29)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(219,206,32)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(232,220,4)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(239,113,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(248,196,53)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(213,167,39)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 0.73%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(230,35,29)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(249,149,2)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(216,47,38)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(237,137,20)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(236,181,25)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(219,225,37)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 0.73%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(227,159,33)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="596" width="1" height="15" fill="rgb(232,203,1)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="612" width="1" height="15" fill="rgb(205,143,38)"/><text x="20.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="628" width="1" height="15" fill="rgb(205,89,54)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="644" width="1" height="15" fill="rgb(241,124,44)"/><text x="20.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="660" width="1" height="15" fill="rgb(252,16,43)"/><text x="20.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="676" width="1" height="15" fill="rgb(248,94,9)"/><text x="20.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="692" width="1" height="15" fill="rgb(216,59,7)"/><text x="20.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.09%)</title><rect x="17" y="708" width="1" height="15" fill="rgb(205,174,33)"/><text x="20.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="724" width="1" height="15" fill="rgb(241,150,1)"/><text x="20.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="740" width="1" height="15" fill="rgb(209,189,9)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="756" width="1" height="15" fill="rgb(206,37,44)"/><text x="20.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="772" width="1" height="15" fill="rgb(240,25,23)"/><text x="20.00" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="788" width="1" height="15" fill="rgb(247,90,12)"/><text x="20.00" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="804" width="1" height="15" fill="rgb(219,83,28)"/><text x="20.00" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="820" width="1" height="15" fill="rgb(254,165,38)"/><text x="20.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="836" width="1" height="15" fill="rgb(229,28,37)"/><text x="20.00" y="846.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="852" width="1" height="15" fill="rgb(222,190,22)"/><text x="20.00" y="862.50"></text></g><g><title>0x7f5310109995 (libdl-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="868" width="1" height="15" fill="rgb(211,46,47)"/><text x="20.00" y="878.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="884" width="1" height="15" fill="rgb(243,9,53)"/><text x="20.00" y="894.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="900" width="1" height="15" fill="rgb(226,119,5)"/><text x="20.00" y="910.50"></text></g><g><title>0x7f5310109258 (libdl-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="916" width="1" height="15" fill="rgb(205,20,42)"/><text x="20.00" y="926.50"></text></g><g><title>0x7f5310156d7a (ld-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="932" width="1" height="15" fill="rgb(217,126,24)"/><text x="20.00" y="942.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="948" width="1" height="15" fill="rgb(212,199,10)"/><text x="20.00" y="958.50"></text></g><g><title>0x7f5310157345 (ld-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="964" width="1" height="15" fill="rgb(214,178,3)"/><text x="20.00" y="974.50"></text></g><g><title>0x7f531014ffec (ld-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="980" width="1" height="15" fill="rgb(243,118,12)"/><text x="20.00" y="990.50"></text></g><g><title>0x7f531014e44b (ld-2.29.so) (1 samples, 0.09%)</title><rect x="17" y="996" width="1" height="15" fill="rgb(238,106,4)"/><text x="20.00" y="1006.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.09%)</title><rect x="18" y="1380" width="1" height="15" fill="rgb(212,156,50)"/><text x="21.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.09%)</title><rect x="18" y="1396" width="1" height="15" fill="rgb(221,11,37)"/><text x="21.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.09%)</title><rect x="18" y="1412" width="1" height="15" fill="rgb(220,208,50)"/><text x="21.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(215,199,1)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(223,49,54)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(229,194,27)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(248,22,30)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(208,124,45)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.18%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(244,193,35)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(208,64,42)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(244,37,8)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(224,22,7)"/><text x="21.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(231,129,31)"/><text x="21.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(232,209,17)"/><text x="21.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.18%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(226,29,19)"/><text x="21.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.18%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(244,15,27)"/><text x="21.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.18%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(210,172,41)"/><text x="21.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.18%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(238,78,45)"/><text x="21.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.18%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(245,36,10)"/><text x="21.00" y="1374.50"></text></g><g><title>tokeneater (inspect.py) (1 samples, 0.09%)</title><rect x="19" y="1380" width="1" height="15" fill="rgb(212,70,18)"/><text x="22.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="484" width="3" height="15" fill="rgb(249,13,33)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="500" width="3" height="15" fill="rgb(242,179,29)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="516" width="3" height="15" fill="rgb(219,156,3)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="532" width="3" height="15" fill="rgb(249,97,33)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="18" y="548" width="3" height="15" fill="rgb(210,205,36)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="564" width="3" height="15" fill="rgb(230,43,47)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.27%)</title><rect x="18" y="580" width="3" height="15" fill="rgb(236,205,3)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="596" width="3" height="15" fill="rgb(247,189,1)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="612" width="3" height="15" fill="rgb(230,51,36)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="628" width="3" height="15" fill="rgb(246,125,11)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="18" y="644" width="3" height="15" fill="rgb(227,41,48)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="660" width="3" height="15" fill="rgb(246,140,20)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.27%)</title><rect x="18" y="676" width="3" height="15" fill="rgb(244,37,38)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="692" width="3" height="15" fill="rgb(245,4,2)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="708" width="3" height="15" fill="rgb(246,157,31)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="724" width="3" height="15" fill="rgb(238,100,51)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="18" y="740" width="3" height="15" fill="rgb(212,137,31)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="756" width="3" height="15" fill="rgb(235,37,46)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.27%)</title><rect x="18" y="772" width="3" height="15" fill="rgb(214,41,18)"/><text x="21.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="788" width="3" height="15" fill="rgb(215,212,20)"/><text x="21.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="804" width="3" height="15" fill="rgb(228,41,30)"/><text x="21.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="820" width="3" height="15" fill="rgb(250,161,13)"/><text x="21.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="18" y="836" width="3" height="15" fill="rgb(206,192,0)"/><text x="21.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="852" width="3" height="15" fill="rgb(242,29,32)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.27%)</title><rect x="18" y="868" width="3" height="15" fill="rgb(218,198,21)"/><text x="21.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(210,174,19)"/><text x="21.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(236,14,7)"/><text x="21.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(212,0,51)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(226,83,49)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(226,23,13)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(206,34,35)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(217,115,47)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="996" width="3" height="15" fill="rgb(250,162,15)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.27%)</title><rect x="18" y="1012" width="3" height="15" fill="rgb(245,59,15)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="1028" width="3" height="15" fill="rgb(226,136,45)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="1044" width="3" height="15" fill="rgb(223,77,54)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="1060" width="3" height="15" fill="rgb(206,116,6)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="18" y="1076" width="3" height="15" fill="rgb(207,160,31)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="18" y="1092" width="3" height="15" fill="rgb(205,55,41)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.27%)</title><rect x="18" y="1108" width="3" height="15" fill="rgb(244,61,42)"/><text x="21.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1124" width="1" height="15" fill="rgb(244,37,17)"/><text x="23.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1140" width="1" height="15" fill="rgb(234,212,39)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1156" width="1" height="15" fill="rgb(233,5,45)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1172" width="1" height="15" fill="rgb(212,41,33)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1188" width="1" height="15" fill="rgb(247,205,20)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(207,146,40)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(214,145,37)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.09%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(223,63,8)"/><text x="23.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(216,105,0)"/><text x="23.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(240,51,1)"/><text x="23.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(238,216,34)"/><text x="23.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(217,218,2)"/><text x="23.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(214,60,20)"/><text x="23.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(229,97,24)"/><text x="23.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(236,42,22)"/><text x="23.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.09%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(251,142,35)"/><text x="23.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(213,12,47)"/><text x="23.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(215,132,26)"/><text x="23.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(210,7,49)"/><text x="23.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1428" width="1" height="15" fill="rgb(208,165,10)"/><text x="23.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1444" width="1" height="15" fill="rgb(236,34,33)"/><text x="23.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.09%)</title><rect x="20" y="1460" width="1" height="15" fill="rgb(254,141,20)"/><text x="23.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(246,217,53)"/><text x="23.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(207,159,47)"/><text x="23.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(206,202,30)"/><text x="23.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(241,51,26)"/><text x="23.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(239,192,13)"/><text x="23.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.09%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(241,13,19)"/><text x="23.00" y="1566.50"></text></g><g><title>_get_doc_template_sklearn (skl2onnx/algebra/automation.py) (1 samples, 0.09%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(221,179,6)"/><text x="23.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="20" y="1588" width="1" height="15" fill="rgb(251,100,18)"/><text x="23.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="20" y="1604" width="1" height="15" fill="rgb(235,228,17)"/><text x="23.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="20" y="1620" width="1" height="15" fill="rgb(213,1,34)"/><text x="23.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="20" y="1636" width="1" height="15" fill="rgb(211,190,53)"/><text x="23.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.09%)</title><rect x="20" y="1652" width="1" height="15" fill="rgb(231,51,7)"/><text x="23.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.09%)</title><rect x="20" y="1668" width="1" height="15" fill="rgb(248,61,8)"/><text x="23.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.09%)</title><rect x="20" y="1684" width="1" height="15" fill="rgb(237,80,38)"/><text x="23.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.09%)</title><rect x="20" y="1700" width="1" height="15" fill="rgb(230,70,54)"/><text x="23.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.09%)</title><rect x="20" y="1716" width="1" height="15" fill="rgb(229,151,52)"/><text x="23.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.09%)</title><rect x="20" y="1732" width="1" height="15" fill="rgb(211,70,8)"/><text x="23.00" y="1742.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.09%)</title><rect x="20" y="1748" width="1" height="15" fill="rgb(223,189,14)"/><text x="23.00" y="1758.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.09%)</title><rect x="20" y="1764" width="1" height="15" fill="rgb(249,42,9)"/><text x="23.00" y="1774.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.09%)</title><rect x="20" y="1780" width="1" height="15" fill="rgb(231,160,47)"/><text x="23.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1540" width="1" height="15" fill="rgb(220,221,44)"/><text x="24.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1556" width="1" height="15" fill="rgb(214,60,47)"/><text x="24.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1572" width="1" height="15" fill="rgb(242,139,34)"/><text x="24.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(232,115,14)"/><text x="24.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(211,55,3)"/><text x="24.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(247,2,4)"/><text x="24.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.09%)</title><rect x="21" y="1636" width="1" height="15" fill="rgb(220,173,26)"/><text x="24.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1652" width="1" height="15" fill="rgb(253,229,54)"/><text x="24.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1668" width="1" height="15" fill="rgb(214,135,2)"/><text x="24.00" y="1678.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1684" width="1" height="15" fill="rgb(241,116,5)"/><text x="24.00" y="1694.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1700" width="1" height="15" fill="rgb(213,43,18)"/><text x="24.00" y="1710.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1716" width="1" height="15" fill="rgb(213,206,44)"/><text x="24.00" y="1726.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1732" width="1" height="15" fill="rgb(216,157,51)"/><text x="24.00" y="1742.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1748" width="1" height="15" fill="rgb(214,38,29)"/><text x="24.00" y="1758.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.09%)</title><rect x="21" y="1764" width="1" height="15" fill="rgb(209,201,6)"/><text x="24.00" y="1774.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.27%)</title><rect x="21" y="1012" width="4" height="15" fill="rgb(209,135,26)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1028" width="4" height="15" fill="rgb(234,40,43)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1044" width="4" height="15" fill="rgb(252,29,34)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1060" width="4" height="15" fill="rgb(249,108,45)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="21" y="1076" width="4" height="15" fill="rgb(215,214,16)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1092" width="4" height="15" fill="rgb(238,9,19)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.27%)</title><rect x="21" y="1108" width="4" height="15" fill="rgb(231,178,41)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1124" width="4" height="15" fill="rgb(230,106,43)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1140" width="4" height="15" fill="rgb(233,161,48)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1156" width="4" height="15" fill="rgb(226,187,32)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="21" y="1172" width="4" height="15" fill="rgb(251,116,29)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1188" width="4" height="15" fill="rgb(213,101,5)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.27%)</title><rect x="21" y="1204" width="4" height="15" fill="rgb(247,49,25)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1220" width="4" height="15" fill="rgb(222,189,0)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1236" width="4" height="15" fill="rgb(233,130,17)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1252" width="4" height="15" fill="rgb(212,27,0)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="21" y="1268" width="4" height="15" fill="rgb(212,180,49)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1284" width="4" height="15" fill="rgb(237,130,43)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.27%)</title><rect x="21" y="1300" width="4" height="15" fill="rgb(226,15,44)"/><text x="24.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1316" width="4" height="15" fill="rgb(243,168,37)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1332" width="4" height="15" fill="rgb(211,50,12)"/><text x="24.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1348" width="4" height="15" fill="rgb(230,137,52)"/><text x="24.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="21" y="1364" width="4" height="15" fill="rgb(226,30,22)"/><text x="24.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1380" width="4" height="15" fill="rgb(235,77,24)"/><text x="24.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.27%)</title><rect x="21" y="1396" width="4" height="15" fill="rgb(215,48,29)"/><text x="24.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1412" width="4" height="15" fill="rgb(206,167,51)"/><text x="24.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1428" width="4" height="15" fill="rgb(213,101,14)"/><text x="24.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1444" width="4" height="15" fill="rgb(239,99,18)"/><text x="24.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.27%)</title><rect x="21" y="1460" width="4" height="15" fill="rgb(236,139,25)"/><text x="24.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1476" width="4" height="15" fill="rgb(221,101,29)"/><text x="24.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.27%)</title><rect x="21" y="1492" width="4" height="15" fill="rgb(253,195,42)"/><text x="24.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1508" width="4" height="15" fill="rgb(254,10,22)"/><text x="24.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="21" y="1524" width="4" height="15" fill="rgb(239,136,2)"/><text x="24.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1540" width="3" height="15" fill="rgb(215,206,4)"/><text x="25.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="22" y="1556" width="3" height="15" fill="rgb(248,210,42)"/><text x="25.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1572" width="3" height="15" fill="rgb(243,45,6)"/><text x="25.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.18%)</title><rect x="22" y="1588" width="3" height="15" fill="rgb(228,138,44)"/><text x="25.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1604" width="3" height="15" fill="rgb(218,143,51)"/><text x="25.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1620" width="3" height="15" fill="rgb(252,83,46)"/><text x="25.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1636" width="3" height="15" fill="rgb(205,32,53)"/><text x="25.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="22" y="1652" width="3" height="15" fill="rgb(251,203,31)"/><text x="25.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1668" width="3" height="15" fill="rgb(234,69,22)"/><text x="25.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.18%)</title><rect x="22" y="1684" width="3" height="15" fill="rgb(205,28,28)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1700" width="3" height="15" fill="rgb(209,128,40)"/><text x="25.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1716" width="3" height="15" fill="rgb(224,88,48)"/><text x="25.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1732" width="3" height="15" fill="rgb(237,128,27)"/><text x="25.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="22" y="1748" width="3" height="15" fill="rgb(248,22,21)"/><text x="25.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1764" width="3" height="15" fill="rgb(240,130,12)"/><text x="25.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.18%)</title><rect x="22" y="1780" width="3" height="15" fill="rgb(231,148,12)"/><text x="25.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1796" width="3" height="15" fill="rgb(234,167,15)"/><text x="25.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1812" width="3" height="15" fill="rgb(242,65,31)"/><text x="25.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1828" width="3" height="15" fill="rgb(252,150,32)"/><text x="25.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="22" y="1844" width="3" height="15" fill="rgb(230,124,33)"/><text x="25.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1860" width="3" height="15" fill="rgb(210,106,35)"/><text x="25.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.18%)</title><rect x="22" y="1876" width="3" height="15" fill="rgb(227,137,20)"/><text x="25.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1892" width="3" height="15" fill="rgb(213,123,34)"/><text x="25.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1908" width="3" height="15" fill="rgb(222,209,19)"/><text x="25.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1924" width="3" height="15" fill="rgb(208,91,2)"/><text x="25.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="22" y="1940" width="3" height="15" fill="rgb(214,110,22)"/><text x="25.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1956" width="3" height="15" fill="rgb(239,91,1)"/><text x="25.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (2 samples, 0.18%)</title><rect x="22" y="1972" width="3" height="15" fill="rgb(210,109,25)"/><text x="25.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="1988" width="3" height="15" fill="rgb(242,170,9)"/><text x="25.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="2004" width="3" height="15" fill="rgb(249,176,35)"/><text x="25.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="2020" width="3" height="15" fill="rgb(251,37,2)"/><text x="25.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="22" y="2036" width="3" height="15" fill="rgb(241,120,2)"/><text x="25.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="22" y="2052" width="3" height="15" fill="rgb(244,28,0)"/><text x="25.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py) (2 samples, 0.18%)</title><rect x="22" y="2068" width="3" height="15" fill="rgb(222,52,1)"/><text x="25.00" y="2078.50"></text></g><g><title>Parser (matplotlib/mathtext.py) (2 samples, 0.18%)</title><rect x="22" y="2084" width="3" height="15" fill="rgb(239,35,17)"/><text x="25.00" y="2094.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/mathtext.py) (2 samples, 0.18%)</title><rect x="22" y="2100" width="3" height="15" fill="rgb(216,122,14)"/><text x="25.00" y="2110.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/mathtext.py) (2 samples, 0.18%)</title><rect x="22" y="2116" width="3" height="15" fill="rgb(212,184,8)"/><text x="25.00" y="2126.50"></text></g><g><title>&lt;genexpr&gt; (matplotlib/mathtext.py) (2 samples, 0.18%)</title><rect x="22" y="2132" width="3" height="15" fill="rgb(221,98,30)"/><text x="25.00" y="2142.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.09%)</title><rect x="24" y="2148" width="1" height="15" fill="rgb(248,228,54)"/><text x="27.00" y="2158.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 0.64%)</title><rect x="18" y="340" width="8" height="15" fill="rgb(239,80,45)"/><text x="21.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="18" y="356" width="8" height="15" fill="rgb(227,75,12)"/><text x="21.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="18" y="372" width="8" height="15" fill="rgb(227,81,42)"/><text x="21.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="18" y="388" width="8" height="15" fill="rgb(238,181,49)"/><text x="21.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.64%)</title><rect x="18" y="404" width="8" height="15" fill="rgb(253,154,28)"/><text x="21.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="18" y="420" width="8" height="15" fill="rgb(222,39,0)"/><text x="21.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.64%)</title><rect x="18" y="436" width="8" height="15" fill="rgb(207,56,9)"/><text x="21.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="18" y="452" width="8" height="15" fill="rgb(220,139,44)"/><text x="21.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.64%)</title><rect x="18" y="468" width="8" height="15" fill="rgb(209,158,46)"/><text x="21.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="484" width="5" height="15" fill="rgb(228,191,51)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="21" y="500" width="5" height="15" fill="rgb(224,121,0)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="516" width="5" height="15" fill="rgb(229,55,51)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.37%)</title><rect x="21" y="532" width="5" height="15" fill="rgb(222,194,23)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="548" width="5" height="15" fill="rgb(251,151,51)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="564" width="5" height="15" fill="rgb(225,62,14)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="580" width="5" height="15" fill="rgb(235,8,2)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="21" y="596" width="5" height="15" fill="rgb(212,40,12)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="612" width="5" height="15" fill="rgb(213,42,26)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.37%)</title><rect x="21" y="628" width="5" height="15" fill="rgb(224,9,19)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="644" width="5" height="15" fill="rgb(244,189,6)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="660" width="5" height="15" fill="rgb(227,190,44)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="676" width="5" height="15" fill="rgb(236,161,19)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="21" y="692" width="5" height="15" fill="rgb(210,216,11)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="708" width="5" height="15" fill="rgb(229,204,36)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.37%)</title><rect x="21" y="724" width="5" height="15" fill="rgb(253,208,17)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="740" width="5" height="15" fill="rgb(221,23,1)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="756" width="5" height="15" fill="rgb(227,3,39)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="772" width="5" height="15" fill="rgb(223,103,45)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="21" y="788" width="5" height="15" fill="rgb(245,102,52)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="804" width="5" height="15" fill="rgb(222,133,8)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 0.37%)</title><rect x="21" y="820" width="5" height="15" fill="rgb(241,97,37)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="836" width="5" height="15" fill="rgb(244,207,45)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="852" width="5" height="15" fill="rgb(247,88,16)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="868" width="5" height="15" fill="rgb(247,138,2)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="21" y="884" width="5" height="15" fill="rgb(210,122,36)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="900" width="5" height="15" fill="rgb(221,163,54)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 0.37%)</title><rect x="21" y="916" width="5" height="15" fill="rgb(239,166,10)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="932" width="5" height="15" fill="rgb(227,56,23)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="948" width="5" height="15" fill="rgb(241,138,5)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="964" width="5" height="15" fill="rgb(236,177,54)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.37%)</title><rect x="21" y="980" width="5" height="15" fill="rgb(243,116,23)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.37%)</title><rect x="21" y="996" width="5" height="15" fill="rgb(212,96,15)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 0.09%)</title><rect x="25" y="1012" width="1" height="15" fill="rgb(233,23,0)"/><text x="28.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.09%)</title><rect x="25" y="1028" width="1" height="15" fill="rgb(236,9,21)"/><text x="28.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.09%)</title><rect x="25" y="1044" width="1" height="15" fill="rgb(228,124,37)"/><text x="28.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.09%)</title><rect x="25" y="1060" width="1" height="15" fill="rgb(234,118,18)"/><text x="28.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.09%)</title><rect x="25" y="1076" width="1" height="15" fill="rgb(252,68,26)"/><text x="28.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.09%)</title><rect x="25" y="1092" width="1" height="15" fill="rgb(237,113,50)"/><text x="28.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.09%)</title><rect x="25" y="1108" width="1" height="15" fill="rgb(238,153,44)"/><text x="28.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.09%)</title><rect x="25" y="1124" width="1" height="15" fill="rgb(251,185,22)"/><text x="28.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 0.73%)</title><rect x="18" y="244" width="9" height="15" fill="rgb(230,116,1)"/><text x="21.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="18" y="260" width="9" height="15" fill="rgb(222,87,21)"/><text x="21.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="18" y="276" width="9" height="15" fill="rgb(229,195,47)"/><text x="21.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="18" y="292" width="9" height="15" fill="rgb(209,65,23)"/><text x="21.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.73%)</title><rect x="18" y="308" width="9" height="15" fill="rgb(218,174,39)"/><text x="21.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.73%)</title><rect x="18" y="324" width="9" height="15" fill="rgb(244,128,17)"/><text x="21.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.09%)</title><rect x="26" y="340" width="1" height="15" fill="rgb(220,113,38)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="356" width="1" height="15" fill="rgb(207,209,31)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="372" width="1" height="15" fill="rgb(222,17,31)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="388" width="1" height="15" fill="rgb(206,85,25)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="404" width="1" height="15" fill="rgb(240,168,17)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="420" width="1" height="15" fill="rgb(226,146,29)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="436" width="1" height="15" fill="rgb(224,45,19)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="452" width="1" height="15" fill="rgb(241,66,31)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="468" width="1" height="15" fill="rgb(254,179,21)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.09%)</title><rect x="26" y="484" width="1" height="15" fill="rgb(224,73,24)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="500" width="1" height="15" fill="rgb(210,228,12)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="516" width="1" height="15" fill="rgb(235,165,47)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="532" width="1" height="15" fill="rgb(219,216,52)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="548" width="1" height="15" fill="rgb(253,48,36)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="564" width="1" height="15" fill="rgb(250,163,37)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.09%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(228,221,1)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(206,137,49)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(209,44,12)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="628" width="1" height="15" fill="rgb(217,20,9)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="644" width="1" height="15" fill="rgb(233,219,42)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="660" width="1" height="15" fill="rgb(247,56,6)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.09%)</title><rect x="26" y="676" width="1" height="15" fill="rgb(254,10,8)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="692" width="1" height="15" fill="rgb(218,150,54)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="708" width="1" height="15" fill="rgb(250,171,24)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="724" width="1" height="15" fill="rgb(253,8,23)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="740" width="1" height="15" fill="rgb(226,99,34)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="756" width="1" height="15" fill="rgb(252,218,4)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.09%)</title><rect x="26" y="772" width="1" height="15" fill="rgb(254,54,39)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="788" width="1" height="15" fill="rgb(236,179,43)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="804" width="1" height="15" fill="rgb(206,176,42)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="820" width="1" height="15" fill="rgb(230,23,13)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="836" width="1" height="15" fill="rgb(221,197,12)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="852" width="1" height="15" fill="rgb(243,154,34)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.09%)</title><rect x="26" y="868" width="1" height="15" fill="rgb(234,183,10)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="884" width="1" height="15" fill="rgb(240,63,45)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="900" width="1" height="15" fill="rgb(221,28,22)"/><text x="29.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(253,112,51)"/><text x="29.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(212,35,36)"/><text x="29.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(216,157,2)"/><text x="29.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.09%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(210,120,13)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(249,105,34)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(211,140,38)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(228,24,27)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(232,44,36)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(220,32,40)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py) (1 samples, 0.09%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(246,206,31)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(244,51,21)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(207,11,53)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(243,128,23)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(212,223,27)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(209,69,54)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py) (1 samples, 0.09%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(242,136,13)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(249,17,1)"/><text x="29.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(233,83,36)"/><text x="29.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(211,206,29)"/><text x="29.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(228,78,38)"/><text x="29.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="26" y="1236" width="1" height="15" fill="rgb(205,60,12)"/><text x="29.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/jpcntx.py) (1 samples, 0.09%)</title><rect x="26" y="1252" width="1" height="15" fill="rgb(233,96,54)"/><text x="29.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.56%)</title><rect x="10" y="68" width="18" height="15" fill="rgb(240,44,47)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.56%)</title><rect x="10" y="84" width="18" height="15" fill="rgb(209,187,53)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.56%)</title><rect x="10" y="100" width="18" height="15" fill="rgb(227,194,44)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 1.56%)</title><rect x="10" y="116" width="18" height="15" fill="rgb(218,23,48)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.56%)</title><rect x="10" y="132" width="18" height="15" fill="rgb(234,130,39)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (17 samples, 1.56%)</title><rect x="10" y="148" width="18" height="15" fill="rgb(224,65,23)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.56%)</title><rect x="10" y="164" width="18" height="15" fill="rgb(210,211,47)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.56%)</title><rect x="10" y="180" width="18" height="15" fill="rgb(223,40,36)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.82%)</title><rect x="18" y="196" width="10" height="15" fill="rgb(248,134,11)"/><text x="21.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.82%)</title><rect x="18" y="212" width="10" height="15" fill="rgb(232,25,34)"/><text x="21.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.82%)</title><rect x="18" y="228" width="10" height="15" fill="rgb(243,124,4)"/><text x="21.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.09%)</title><rect x="27" y="244" width="1" height="15" fill="rgb(215,217,22)"/><text x="30.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(243,107,51)"/><text x="30.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(234,63,3)"/><text x="30.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(210,219,6)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(233,144,16)"/><text x="30.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(241,21,33)"/><text x="30.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(207,62,32)"/><text x="30.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="356" width="1" height="15" fill="rgb(247,204,16)"/><text x="30.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.09%)</title><rect x="27" y="372" width="1" height="15" fill="rgb(252,136,11)"/><text x="30.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="388" width="1" height="15" fill="rgb(254,182,33)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="404" width="1" height="15" fill="rgb(207,216,24)"/><text x="30.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="420" width="1" height="15" fill="rgb(216,179,30)"/><text x="30.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(211,163,39)"/><text x="30.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(254,126,13)"/><text x="30.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.09%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(217,108,0)"/><text x="30.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(248,194,32)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(232,171,14)"/><text x="30.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(221,79,32)"/><text x="30.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(214,202,39)"/><text x="30.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="27" y="548" width="1" height="15" fill="rgb(248,110,50)"/><text x="30.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.09%)</title><rect x="27" y="564" width="1" height="15" fill="rgb(208,213,41)"/><text x="30.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.09%)</title><rect x="27" y="580" width="1" height="15" fill="rgb(253,11,27)"/><text x="30.00" y="590.50"></text></g><g><title>0x7f52cfebfff9 (?) (1 samples, 0.09%)</title><rect x="34" y="212" width="1" height="15" fill="rgb(231,55,34)"/><text x="37.00" y="222.50"></text></g><g><title>0x7f52cfebaef6 (?) (1 samples, 0.09%)</title><rect x="34" y="228" width="1" height="15" fill="rgb(229,217,40)"/><text x="37.00" y="238.50"></text></g><g><title>0x7f52cfeaf962 (?) (1 samples, 0.09%)</title><rect x="34" y="244" width="1" height="15" fill="rgb(216,106,2)"/><text x="37.00" y="254.50"></text></g><g><title>0x7f52cfee37a7 (?) (1 samples, 0.09%)</title><rect x="34" y="260" width="1" height="15" fill="rgb(238,131,5)"/><text x="37.00" y="270.50"></text></g><g><title>0x7f52cfee3379 (?) (1 samples, 0.09%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(233,161,1)"/><text x="37.00" y="286.50"></text></g><g><title>0x7f52d03418b8 (?) (1 samples, 0.09%)</title><rect x="34" y="292" width="1" height="15" fill="rgb(223,202,43)"/><text x="37.00" y="302.50"></text></g><g><title>0x7f52d033fc7f (?) (1 samples, 0.09%)</title><rect x="34" y="308" width="1" height="15" fill="rgb(244,62,48)"/><text x="37.00" y="318.50"></text></g><g><title>0x7f52d035299c (?) (1 samples, 0.09%)</title><rect x="34" y="324" width="1" height="15" fill="rgb(215,71,1)"/><text x="37.00" y="334.50"></text></g><g><title>0x7f52d0079dc2 (?) (1 samples, 0.09%)</title><rect x="34" y="340" width="1" height="15" fill="rgb(207,95,50)"/><text x="37.00" y="350.50"></text></g><g><title>0x7f52d00794c5 (?) (1 samples, 0.09%)</title><rect x="34" y="356" width="1" height="15" fill="rgb(231,140,24)"/><text x="37.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="35" y="292" width="2" height="15" fill="rgb(210,135,38)"/><text x="38.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="35" y="308" width="2" height="15" fill="rgb(227,109,27)"/><text x="38.00" y="318.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 0.92%)</title><rect x="37" y="340" width="10" height="15" fill="rgb(229,117,52)"/><text x="40.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.46%)</title><rect x="42" y="356" width="5" height="15" fill="rgb(243,222,6)"/><text x="45.00" y="366.50"></text></g><g><title>0x7f530fea1d50 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="54" y="372" width="1" height="15" fill="rgb(221,41,50)"/><text x="57.00" y="382.50"></text></g><g><title>0x7f530fea1dc9 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="55" y="372" width="2" height="15" fill="rgb(248,47,33)"/><text x="58.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.01%)</title><rect x="47" y="340" width="12" height="15" fill="rgb(236,180,8)"/><text x="50.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.01%)</title><rect x="47" y="356" width="12" height="15" fill="rgb(245,116,53)"/><text x="50.00" y="366.50"></text></g><g><title>0x7f530fea1dcb (libc-2.29.so) (2 samples, 0.18%)</title><rect x="57" y="372" width="2" height="15" fill="rgb(219,189,18)"/><text x="60.00" y="382.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="59" y="356" width="1" height="15" fill="rgb(233,195,50)"/><text x="62.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.64%)</title><rect x="59" y="340" width="8" height="15" fill="rgb(233,46,15)"/><text x="62.00" y="350.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.55%)</title><rect x="60" y="356" width="7" height="15" fill="rgb(214,22,24)"/><text x="63.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="67" y="340" width="1" height="15" fill="rgb(242,96,53)"/><text x="70.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="67" y="356" width="1" height="15" fill="rgb(218,122,25)"/><text x="70.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="67" y="372" width="1" height="15" fill="rgb(234,223,15)"/><text x="70.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="67" y="388" width="1" height="15" fill="rgb(212,195,49)"/><text x="70.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="67" y="404" width="1" height="15" fill="rgb(214,141,47)"/><text x="70.00" y="414.50"></text></g><g><title>0x7f530fea1dbf (libc-2.29.so) (1 samples, 0.09%)</title><rect x="76" y="356" width="2" height="15" fill="rgb(234,219,41)"/><text x="79.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 0.92%)</title><rect x="68" y="340" width="11" height="15" fill="rgb(213,141,33)"/><text x="71.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="78" y="356" width="1" height="15" fill="rgb(241,81,17)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="79" y="340" width="1" height="15" fill="rgb(230,157,52)"/><text x="82.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="79" y="356" width="1" height="15" fill="rgb(232,142,23)"/><text x="82.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="79" y="372" width="1" height="15" fill="rgb(216,56,9)"/><text x="82.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="80" y="340" width="1" height="15" fill="rgb(215,117,1)"/><text x="83.00" y="350.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="340" width="1" height="15" fill="rgb(218,212,11)"/><text x="84.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="81" y="356" width="1" height="15" fill="rgb(212,156,51)"/><text x="84.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="82" y="372" width="2" height="15" fill="rgb(225,163,26)"/><text x="85.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.27%)</title><rect x="82" y="340" width="3" height="15" fill="rgb(222,69,30)"/><text x="85.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.27%)</title><rect x="82" y="356" width="3" height="15" fill="rgb(244,58,17)"/><text x="85.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="84" y="372" width="1" height="15" fill="rgb(206,109,16)"/><text x="87.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="84" y="388" width="1" height="15" fill="rgb(225,215,42)"/><text x="87.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="84" y="404" width="1" height="15" fill="rgb(212,70,42)"/><text x="87.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="84" y="420" width="1" height="15" fill="rgb(216,16,52)"/><text x="87.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="84" y="436" width="1" height="15" fill="rgb(239,11,4)"/><text x="87.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="84" y="452" width="1" height="15" fill="rgb(214,60,53)"/><text x="87.00" y="462.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="85" y="340" width="1" height="15" fill="rgb(210,161,46)"/><text x="88.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="85" y="356" width="1" height="15" fill="rgb(211,76,6)"/><text x="88.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="85" y="372" width="1" height="15" fill="rgb(247,73,21)"/><text x="88.00" y="382.50"></text></g><g><title>0x7f530fe8192c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="109" y="388" width="1" height="15" fill="rgb(234,152,37)"/><text x="112.00" y="398.50"></text></g><g><title>0x7f530fe81982 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="110" y="388" width="1" height="15" fill="rgb(237,168,9)"/><text x="113.00" y="398.50"></text></g><g><title>0x7f530fe81bd4 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="111" y="388" width="1" height="15" fill="rgb(244,55,38)"/><text x="114.00" y="398.50"></text></g><g><title>0x7f5310053e01 (libm-2.29.so) (1 samples, 0.09%)</title><rect x="112" y="388" width="1" height="15" fill="rgb(239,50,28)"/><text x="115.00" y="398.50"></text></g><g><title>0x7f5310053e25 (libm-2.29.so) (1 samples, 0.09%)</title><rect x="113" y="388" width="1" height="15" fill="rgb(225,154,54)"/><text x="116.00" y="398.50"></text></g><g><title>0x7f5310053e7e (libm-2.29.so) (1 samples, 0.09%)</title><rect x="114" y="388" width="1" height="15" fill="rgb(209,113,6)"/><text x="117.00" y="398.50"></text></g><g><title>0x7f5310053e88 (libm-2.29.so) (1 samples, 0.09%)</title><rect x="115" y="388" width="1" height="15" fill="rgb(247,71,11)"/><text x="118.00" y="398.50"></text></g><g><title>0x7f5310053ea2 (libm-2.29.so) (2 samples, 0.18%)</title><rect x="116" y="388" width="3" height="15" fill="rgb(219,70,38)"/><text x="119.00" y="398.50"></text></g><g><title>0x7f5310053eca (libm-2.29.so) (1 samples, 0.09%)</title><rect x="119" y="388" width="1" height="15" fill="rgb(249,198,54)"/><text x="122.00" y="398.50"></text></g><g><title>0x7f5310053efa (libm-2.29.so) (2 samples, 0.18%)</title><rect x="120" y="388" width="2" height="15" fill="rgb(239,203,21)"/><text x="123.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.73%)</title><rect x="122" y="388" width="9" height="15" fill="rgb(208,119,42)"/><text x="125.00" y="398.50"></text></g><g><title>0x7f530fe8191e (libc-2.29.so) (1 samples, 0.09%)</title><rect x="134" y="404" width="1" height="15" fill="rgb(216,141,45)"/><text x="137.00" y="414.50"></text></g><g><title>0x7f530fe81961 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="135" y="404" width="1" height="15" fill="rgb(250,159,5)"/><text x="138.00" y="414.50"></text></g><g><title>0x7f530fe81a4c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="136" y="404" width="1" height="15" fill="rgb(213,47,38)"/><text x="139.00" y="414.50"></text></g><g><title>0x7f530fe81a4d (libc-2.29.so) (1 samples, 0.09%)</title><rect x="137" y="404" width="1" height="15" fill="rgb(218,189,15)"/><text x="140.00" y="414.50"></text></g><g><title>0x7f530fe81bd8 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="138" y="404" width="1" height="15" fill="rgb(211,185,41)"/><text x="141.00" y="414.50"></text></g><g><title>0x7f530fe81be4 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="139" y="404" width="1" height="15" fill="rgb(215,147,53)"/><text x="142.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.09%)</title><rect x="140" y="404" width="1" height="15" fill="rgb(230,0,4)"/><text x="143.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 5.22%)</title><rect x="86" y="340" width="62" height="15" fill="rgb(247,188,39)"/><text x="89.00" y="350.50">onnxru..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 5.22%)</title><rect x="86" y="356" width="62" height="15" fill="rgb(231,24,12)"/><text x="89.00" y="366.50">onnxru..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 5.22%)</title><rect x="86" y="372" width="62" height="15" fill="rgb(207,106,21)"/><text x="89.00" y="382.50">onnxru..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.47%)</title><rect x="131" y="388" width="17" height="15" fill="rgb(220,186,45)"/><text x="134.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (6 samples, 0.55%)</title><rect x="141" y="404" width="7" height="15" fill="rgb(214,76,36)"/><text x="144.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.46%)</title><rect x="142" y="420" width="6" height="15" fill="rgb(252,196,37)"/><text x="145.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="148" y="340" width="1" height="15" fill="rgb(244,7,21)"/><text x="151.00" y="350.50"></text></g><g><title>0x7f52ff94e7a0 (libstdc++.so.6.0.28) (2 samples, 0.18%)</title><rect x="189" y="356" width="2" height="15" fill="rgb(226,106,24)"/><text x="192.00" y="366.50"></text></g><g><title>0x7f530fe81906 (libc-2.29.so) (4 samples, 0.37%)</title><rect x="191" y="356" width="4" height="15" fill="rgb(212,142,45)"/><text x="194.00" y="366.50"></text></g><g><title>0x7f530fe8191c (libc-2.29.so) (1 samples, 0.09%)</title><rect x="195" y="356" width="1" height="15" fill="rgb(214,14,50)"/><text x="198.00" y="366.50"></text></g><g><title>0x7f530fe8191e (libc-2.29.so) (1 samples, 0.09%)</title><rect x="196" y="356" width="2" height="15" fill="rgb(248,100,6)"/><text x="199.00" y="366.50"></text></g><g><title>0x7f530fe81925 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="198" y="356" width="1" height="15" fill="rgb(213,130,9)"/><text x="201.00" y="366.50"></text></g><g><title>0x7f530fe8193b (libc-2.29.so) (1 samples, 0.09%)</title><rect x="199" y="356" width="1" height="15" fill="rgb(242,142,28)"/><text x="202.00" y="366.50"></text></g><g><title>0x7f530fe81945 (libc-2.29.so) (3 samples, 0.27%)</title><rect x="200" y="356" width="3" height="15" fill="rgb(232,192,20)"/><text x="203.00" y="366.50"></text></g><g><title>0x7f530fe8194f (libc-2.29.so) (1 samples, 0.09%)</title><rect x="203" y="356" width="1" height="15" fill="rgb(237,50,32)"/><text x="206.00" y="366.50"></text></g><g><title>0x7f530fe81957 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="204" y="356" width="1" height="15" fill="rgb(230,30,52)"/><text x="207.00" y="366.50"></text></g><g><title>0x7f530fe8195e (libc-2.29.so) (2 samples, 0.18%)</title><rect x="205" y="356" width="2" height="15" fill="rgb(231,2,30)"/><text x="208.00" y="366.50"></text></g><g><title>0x7f530fe81961 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="207" y="356" width="2" height="15" fill="rgb(236,80,42)"/><text x="210.00" y="366.50"></text></g><g><title>0x7f530fe81965 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="209" y="356" width="3" height="15" fill="rgb(210,92,9)"/><text x="212.00" y="366.50"></text></g><g><title>0x7f530fe81971 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="212" y="356" width="1" height="15" fill="rgb(238,225,6)"/><text x="215.00" y="366.50"></text></g><g><title>0x7f530fe8197c (libc-2.29.so) (4 samples, 0.37%)</title><rect x="213" y="356" width="4" height="15" fill="rgb(226,229,7)"/><text x="216.00" y="366.50"></text></g><g><title>0x7f530fe81991 (libc-2.29.so) (8 samples, 0.73%)</title><rect x="217" y="356" width="9" height="15" fill="rgb(207,191,9)"/><text x="220.00" y="366.50"></text></g><g><title>0x7f530fe81998 (libc-2.29.so) (3 samples, 0.27%)</title><rect x="226" y="356" width="3" height="15" fill="rgb(248,92,13)"/><text x="229.00" y="366.50"></text></g><g><title>0x7f530fe81bc0 (libc-2.29.so) (4 samples, 0.37%)</title><rect x="229" y="356" width="4" height="15" fill="rgb(210,190,19)"/><text x="232.00" y="366.50"></text></g><g><title>0x7f530fe81bd8 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="233" y="356" width="1" height="15" fill="rgb(251,229,5)"/><text x="236.00" y="366.50"></text></g><g><title>0x7f530fea214a (libc-2.29.so) (1 samples, 0.09%)</title><rect x="234" y="356" width="1" height="15" fill="rgb(220,37,19)"/><text x="237.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (12 samples, 1.10%)</title><rect x="235" y="356" width="13" height="15" fill="rgb(242,23,4)"/><text x="238.00" y="366.50"></text></g><g><title>0x7f52cfe86930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="363" y="388" width="1" height="15" fill="rgb(233,60,52)"/><text x="366.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.01%)</title><rect x="364" y="388" width="12" height="15" fill="rgb(222,101,44)"/><text x="367.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.82%)</title><rect x="366" y="404" width="10" height="15" fill="rgb(206,7,2)"/><text x="369.00" y="414.50"></text></g><g><title>0x7f530fea214a (libc-2.29.so) (1 samples, 0.09%)</title><rect x="394" y="420" width="1" height="15" fill="rgb(242,16,11)"/><text x="397.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.10%)</title><rect x="390" y="404" width="13" height="15" fill="rgb(206,69,14)"/><text x="393.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 0.64%)</title><rect x="395" y="420" width="8" height="15" fill="rgb(248,145,26)"/><text x="398.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 0.64%)</title><rect x="395" y="436" width="8" height="15" fill="rgb(251,22,28)"/><text x="398.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (199 samples, 18.22%)</title><rect x="248" y="356" width="215" height="15" fill="rgb(210,98,14)"/><text x="251.00" y="366.50">onnxruntime::ml::TreeEnsembl..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (101 samples, 9.25%)</title><rect x="354" y="372" width="109" height="15" fill="rgb(252,37,14)"/><text x="357.00" y="382.50">std::_Hashtab..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (81 samples, 7.42%)</title><rect x="376" y="388" width="87" height="15" fill="rgb(235,4,20)"/><text x="379.00" y="398.50">std::_Hash..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (56 samples, 5.13%)</title><rect x="403" y="404" width="60" height="15" fill="rgb(254,222,35)"/><text x="406.00" y="414.50">std::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (26 samples, 2.38%)</title><rect x="435" y="420" width="28" height="15" fill="rgb(242,29,36)"/><text x="438.00" y="430.50">s..</text></g><g><title>0x7f52cfe86850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="474" y="372" width="1" height="15" fill="rgb(225,118,39)"/><text x="477.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.10%)</title><rect x="463" y="356" width="13" height="15" fill="rgb(249,54,35)"/><text x="466.00" y="366.50"></text></g><g><title>0x7f530fea1d50 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="475" y="372" width="1" height="15" fill="rgb(230,87,28)"/><text x="478.00" y="382.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 1.56%)</title><rect x="476" y="356" width="19" height="15" fill="rgb(215,110,18)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f52ff94dd50 (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="505" y="388" width="2" height="15" fill="rgb(246,17,19)"/><text x="508.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (445 samples, 40.75%)</title><rect x="35" y="260" width="481" height="15" fill="rgb(246,119,20)"/><text x="38.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (445 samples, 40.75%)</title><rect x="35" y="276" width="481" height="15" fill="rgb(233,204,33)"/><text x="38.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (444 samples, 40.66%)</title><rect x="37" y="292" width="479" height="15" fill="rgb(207,195,6)"/><text x="40.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_py..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (444 samples, 40.66%)</title><rect x="37" y="308" width="479" height="15" fill="rgb(242,15,45)"/><text x="40.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (444 samples, 40.66%)</title><rect x="37" y="324" width="479" height="15" fill="rgb(229,129,8)"/><text x="40.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (340 samples, 31.14%)</title><rect x="149" y="340" width="367" height="15" fill="rgb(235,157,33)"/><text x="152.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Co..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 1.83%)</title><rect x="495" y="356" width="21" height="15" fill="rgb(222,0,33)"/><text x="498.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.10%)</title><rect x="503" y="372" width="13" height="15" fill="rgb(250,154,12)"/><text x="506.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.82%)</title><rect x="507" y="388" width="9" height="15" fill="rgb(251,178,49)"/><text x="510.00" y="398.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="516" y="260" width="1" height="15" fill="rgb(206,95,1)"/><text x="519.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="516" y="276" width="1" height="15" fill="rgb(210,55,39)"/><text x="519.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (447 samples, 40.93%)</title><rect x="35" y="244" width="483" height="15" fill="rgb(209,201,1)"/><text x="38.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="260" width="1" height="15" fill="rgb(245,87,15)"/><text x="520.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="276" width="1" height="15" fill="rgb(236,152,49)"/><text x="520.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="292" width="1" height="15" fill="rgb(230,175,33)"/><text x="520.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="308" width="1" height="15" fill="rgb(227,109,44)"/><text x="520.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="324" width="1" height="15" fill="rgb(237,199,48)"/><text x="520.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="340" width="1" height="15" fill="rgb(241,204,14)"/><text x="520.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="356" width="1" height="15" fill="rgb(216,147,52)"/><text x="520.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="517" y="372" width="1" height="15" fill="rgb(245,118,32)"/><text x="520.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="518" y="244" width="2" height="15" fill="rgb(211,100,45)"/><text x="521.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="518" y="260" width="2" height="15" fill="rgb(230,219,0)"/><text x="521.00" y="270.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (456 samples, 41.76%)</title><rect x="28" y="68" width="493" height="15" fill="rgb(224,26,15)"/><text x="31.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_10..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (456 samples, 41.76%)</title><rect x="28" y="84" width="493" height="15" fill="rgb(208,10,9)"/><text x="31.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (456 samples, 41.76%)</title><rect x="28" y="100" width="493" height="15" fill="rgb(222,101,21)"/><text x="31.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (456 samples, 41.76%)</title><rect x="28" y="116" width="493" height="15" fill="rgb(241,198,52)"/><text x="31.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (456 samples, 41.76%)</title><rect x="28" y="132" width="493" height="15" fill="rgb(241,148,13)"/><text x="31.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (456 samples, 41.76%)</title><rect x="28" y="148" width="493" height="15" fill="rgb(252,22,52)"/><text x="31.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (454 samples, 41.58%)</title><rect x="30" y="164" width="491" height="15" fill="rgb(216,147,6)"/><text x="33.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (454 samples, 41.58%)</title><rect x="30" y="180" width="491" height="15" fill="rgb(218,178,25)"/><text x="33.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (454 samples, 41.58%)</title><rect x="30" y="196" width="491" height="15" fill="rgb(251,123,50)"/><text x="33.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (449 samples, 41.12%)</title><rect x="35" y="212" width="486" height="15" fill="rgb(213,8,26)"/><text x="38.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (449 samples, 41.12%)</title><rect x="35" y="228" width="486" height="15" fill="rgb(206,20,5)"/><text x="38.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addOb..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="520" y="244" width="1" height="15" fill="rgb(254,223,4)"/><text x="523.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src) (7 samples, 0.64%)</title><rect x="551" y="260" width="7" height="15" fill="rgb(225,92,12)"/><text x="554.00" y="270.50"></text></g><g><title>0x7f530f0a4800 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="557" y="276" width="1" height="15" fill="rgb(243,99,19)"/><text x="560.00" y="286.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="558" y="260" width="2" height="15" fill="rgb(254,219,49)"/><text x="561.00" y="270.50"></text></g><g><title>0x7f530fea2103 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="558" y="276" width="2" height="15" fill="rgb(233,71,13)"/><text x="561.00" y="286.50"></text></g><g><title>PyArray_ToList (convert.c) (15 samples, 1.37%)</title><rect x="549" y="228" width="16" height="15" fill="rgb(250,34,4)"/><text x="552.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (15 samples, 1.37%)</title><rect x="549" y="244" width="16" height="15" fill="rgb(227,34,10)"/><text x="552.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (5 samples, 0.46%)</title><rect x="560" y="260" width="5" height="15" fill="rgb(228,74,21)"/><text x="563.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="565" y="228" width="1" height="15" fill="rgb(223,114,29)"/><text x="568.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="565" y="244" width="1" height="15" fill="rgb(234,151,34)"/><text x="568.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="565" y="260" width="1" height="15" fill="rgb(232,27,4)"/><text x="568.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.09%)</title><rect x="566" y="244" width="1" height="15" fill="rgb(234,141,54)"/><text x="569.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="566" y="260" width="1" height="15" fill="rgb(218,14,35)"/><text x="569.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="566" y="276" width="1" height="15" fill="rgb(206,132,12)"/><text x="569.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="566" y="292" width="1" height="15" fill="rgb(211,218,2)"/><text x="569.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="566" y="308" width="1" height="15" fill="rgb(229,117,40)"/><text x="569.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="566" y="324" width="1" height="15" fill="rgb(215,64,12)"/><text x="569.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="566" y="340" width="1" height="15" fill="rgb(207,86,17)"/><text x="569.00" y="350.50"></text></g><g><title>0x7f530fe836db (libc-2.29.so) (1 samples, 0.09%)</title><rect x="566" y="356" width="1" height="15" fill="rgb(239,178,3)"/><text x="569.00" y="366.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (8 samples, 0.73%)</title><rect x="567" y="244" width="9" height="15" fill="rgb(245,219,35)"/><text x="570.00" y="254.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.09%)</title><rect x="575" y="260" width="1" height="15" fill="rgb(223,200,26)"/><text x="578.00" y="270.50"></text></g><g><title>0x7f530f0a37c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="601" y="340" width="1" height="15" fill="rgb(245,100,38)"/><text x="604.00" y="350.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (31 samples, 2.84%)</title><rect x="576" y="276" width="33" height="15" fill="rgb(207,168,26)"/><text x="579.00" y="286.50">Py..</text></g><g><title>setArrayFromSequence (ctors.c) (31 samples, 2.84%)</title><rect x="576" y="292" width="33" height="15" fill="rgb(242,75,26)"/><text x="579.00" y="302.50">se..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (24 samples, 2.20%)</title><rect x="583" y="308" width="26" height="15" fill="rgb(228,190,9)"/><text x="586.00" y="318.50">P..</text></g><g><title>LONG_setitem (arraytypes.c.src) (19 samples, 1.74%)</title><rect x="589" y="324" width="20" height="15" fill="rgb(235,1,31)"/><text x="592.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (7 samples, 0.64%)</title><rect x="602" y="340" width="7" height="15" fill="rgb(216,61,12)"/><text x="605.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (8 samples, 0.73%)</title><rect x="633" y="340" width="9" height="15" fill="rgb(235,31,28)"/><text x="636.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (3 samples, 0.27%)</title><rect x="638" y="356" width="4" height="15" fill="rgb(208,189,24)"/><text x="641.00" y="366.50"></text></g><g><title>0x7f530f0a40a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="664" y="356" width="1" height="15" fill="rgb(228,131,21)"/><text x="667.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="665" y="356" width="1" height="15" fill="rgb(252,86,8)"/><text x="668.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (54 samples, 4.95%)</title><rect x="609" y="292" width="59" height="15" fill="rgb(251,73,8)"/><text x="612.00" y="302.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (54 samples, 4.95%)</title><rect x="609" y="308" width="59" height="15" fill="rgb(236,219,36)"/><text x="612.00" y="318.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (51 samples, 4.67%)</title><rect x="612" y="324" width="56" height="15" fill="rgb(205,146,32)"/><text x="615.00" y="334.50">PyArr..</text></g><g><title>_array_find_python_scalar_type (common.c) (24 samples, 2.20%)</title><rect x="642" y="340" width="26" height="15" fill="rgb(223,137,35)"/><text x="645.00" y="350.50">_..</text></g><g><title>PyInt_Check (npy_3kcompat.h) (1 samples, 0.09%)</title><rect x="666" y="356" width="2" height="15" fill="rgb(216,100,3)"/><text x="669.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (147 samples, 13.46%)</title><rect x="545" y="212" width="159" height="15" fill="rgb(232,125,47)"/><text x="548.00" y="222.50">_run (mlprodict/onnx..</text></g><g><title>array_subscript (mapping.c) (128 samples, 11.72%)</title><rect x="566" y="228" width="138" height="15" fill="rgb(211,93,6)"/><text x="569.00" y="238.50">array_subscript (..</text></g><g><title>prepare_index (mapping.c) (119 samples, 10.90%)</title><rect x="576" y="244" width="128" height="15" fill="rgb(216,34,49)"/><text x="579.00" y="254.50">prepare_index (m..</text></g><g><title>PyArray_FromAny (ctors.c) (119 samples, 10.90%)</title><rect x="576" y="260" width="128" height="15" fill="rgb(232,105,18)"/><text x="579.00" y="270.50">PyArray_FromAny ..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (88 samples, 8.06%)</title><rect x="609" y="276" width="95" height="15" fill="rgb(236,196,37)"/><text x="612.00" y="286.50">PyArray_Get..</text></g><g><title>discover_dimensions (ctors.c) (34 samples, 3.11%)</title><rect x="668" y="292" width="36" height="15" fill="rgb(242,120,29)"/><text x="671.00" y="302.50">dis..</text></g><g><title>discover_dimensions (ctors.c) (24 samples, 2.20%)</title><rect x="678" y="308" width="26" height="15" fill="rgb(233,127,54)"/><text x="681.00" y="318.50">d..</text></g><g><title>0x7f530f0a43f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="702" y="324" width="2" height="15" fill="rgb(215,215,39)"/><text x="705.00" y="334.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.09%)</title><rect x="705" y="276" width="1" height="15" fill="rgb(226,177,54)"/><text x="708.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.09%)</title><rect x="705" y="292" width="1" height="15" fill="rgb(242,203,28)"/><text x="708.00" y="302.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.09%)</title><rect x="706" y="292" width="2" height="15" fill="rgb(244,13,52)"/><text x="709.00" y="302.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.09%)</title><rect x="708" y="292" width="1" height="15" fill="rgb(224,90,28)"/><text x="711.00" y="302.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.09%)</title><rect x="708" y="308" width="1" height="15" fill="rgb(220,123,46)"/><text x="711.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (10 samples, 0.92%)</title><rect x="704" y="212" width="11" height="15" fill="rgb(223,79,10)"/><text x="707.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (9 samples, 0.82%)</title><rect x="705" y="228" width="10" height="15" fill="rgb(233,183,19)"/><text x="708.00" y="238.50"></text></g><g><title>array_astype (methods.c) (9 samples, 0.82%)</title><rect x="705" y="244" width="10" height="15" fill="rgb(232,60,49)"/><text x="708.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (9 samples, 0.82%)</title><rect x="705" y="260" width="10" height="15" fill="rgb(227,197,4)"/><text x="708.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (8 samples, 0.73%)</title><rect x="706" y="276" width="9" height="15" fill="rgb(238,205,9)"/><text x="709.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src) (6 samples, 0.55%)</title><rect x="709" y="292" width="6" height="15" fill="rgb(216,108,9)"/><text x="712.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (6 samples, 0.55%)</title><rect x="715" y="212" width="7" height="15" fill="rgb(246,9,8)"/><text x="718.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (5 samples, 0.46%)</title><rect x="716" y="228" width="6" height="15" fill="rgb(245,11,23)"/><text x="719.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.46%)</title><rect x="716" y="244" width="6" height="15" fill="rgb(245,64,8)"/><text x="719.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (5 samples, 0.46%)</title><rect x="716" y="260" width="6" height="15" fill="rgb(227,82,0)"/><text x="719.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.46%)</title><rect x="716" y="276" width="6" height="15" fill="rgb(217,112,43)"/><text x="719.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (5 samples, 0.46%)</title><rect x="716" y="292" width="6" height="15" fill="rgb(230,188,6)"/><text x="719.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (5 samples, 0.46%)</title><rect x="716" y="308" width="6" height="15" fill="rgb(229,197,32)"/><text x="719.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (5 samples, 0.46%)</title><rect x="716" y="324" width="6" height="15" fill="rgb(229,134,0)"/><text x="719.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (5 samples, 0.46%)</title><rect x="716" y="340" width="6" height="15" fill="rgb(232,63,31)"/><text x="719.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.37%)</title><rect x="717" y="356" width="5" height="15" fill="rgb(227,193,12)"/><text x="720.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (4 samples, 0.37%)</title><rect x="717" y="372" width="5" height="15" fill="rgb(214,111,42)"/><text x="720.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (4 samples, 0.37%)</title><rect x="717" y="388" width="5" height="15" fill="rgb(252,191,47)"/><text x="720.00" y="398.50"></text></g><g><title>run_binary_simd_add_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="721" y="404" width="1" height="15" fill="rgb(240,104,17)"/><text x="724.00" y="414.50"></text></g><g><title>abs_ptrdiff (simd.inc.src) (1 samples, 0.09%)</title><rect x="721" y="420" width="1" height="15" fill="rgb(207,189,6)"/><text x="724.00" y="430.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="728" y="260" width="1" height="15" fill="rgb(206,94,41)"/><text x="731.00" y="270.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.09%)</title><rect x="728" y="276" width="1" height="15" fill="rgb(228,141,29)"/><text x="731.00" y="286.50"></text></g><g><title>0x7f530ff5fff0 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="729" y="276" width="1" height="15" fill="rgb(225,161,32)"/><text x="732.00" y="286.50"></text></g><g><title>0x7f530fe97757 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="731" y="324" width="1" height="15" fill="rgb(245,28,4)"/><text x="734.00" y="334.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.09%)</title><rect x="732" y="324" width="1" height="15" fill="rgb(227,95,40)"/><text x="735.00" y="334.50"></text></g><g><title>0x7f530ff5f130 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="732" y="340" width="1" height="15" fill="rgb(242,181,15)"/><text x="735.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (3 samples, 0.27%)</title><rect x="731" y="308" width="4" height="15" fill="rgb(207,89,18)"/><text x="734.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.09%)</title><rect x="733" y="324" width="2" height="15" fill="rgb(225,215,38)"/><text x="736.00" y="334.50"></text></g><g><title>0x7f530fea1db3 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="748" y="324" width="1" height="15" fill="rgb(237,71,34)"/><text x="751.00" y="334.50"></text></g><g><title>0x7f530fea1dbb (libc-2.29.so) (1 samples, 0.09%)</title><rect x="749" y="324" width="1" height="15" fill="rgb(231,4,45)"/><text x="752.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="750" y="388" width="1" height="15" fill="rgb(228,110,12)"/><text x="753.00" y="398.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="751" y="388" width="1" height="15" fill="rgb(232,171,41)"/><text x="754.00" y="398.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (7 samples, 0.64%)</title><rect x="750" y="324" width="7" height="15" fill="rgb(226,120,4)"/><text x="753.00" y="334.50"></text></g><g><title>PyArray_NewCopy (convert.c) (7 samples, 0.64%)</title><rect x="750" y="340" width="7" height="15" fill="rgb(251,143,40)"/><text x="753.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (7 samples, 0.64%)</title><rect x="750" y="356" width="7" height="15" fill="rgb(245,27,49)"/><text x="753.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (7 samples, 0.64%)</title><rect x="750" y="372" width="7" height="15" fill="rgb(205,27,44)"/><text x="753.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src) (5 samples, 0.46%)</title><rect x="752" y="388" width="5" height="15" fill="rgb(234,135,12)"/><text x="755.00" y="398.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (32 samples, 2.93%)</title><rect x="724" y="228" width="34" height="15" fill="rgb(237,23,2)"/><text x="727.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (31 samples, 2.84%)</title><rect x="725" y="244" width="33" height="15" fill="rgb(217,193,34)"/><text x="728.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py) (27 samples, 2.47%)</title><rect x="729" y="260" width="29" height="15" fill="rgb(213,26,4)"/><text x="732.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (26 samples, 2.38%)</title><rect x="730" y="276" width="28" height="15" fill="rgb(242,100,3)"/><text x="733.00" y="286.50">_..</text></g><g><title>array_choose (methods.c) (25 samples, 2.29%)</title><rect x="731" y="292" width="27" height="15" fill="rgb(225,128,7)"/><text x="734.00" y="302.50">a..</text></g><g><title>PyArray_Choose (item_selection.c) (22 samples, 2.01%)</title><rect x="735" y="308" width="23" height="15" fill="rgb(237,57,31)"/><text x="738.00" y="318.50">P..</text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="757" y="324" width="1" height="15" fill="rgb(243,100,10)"/><text x="760.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="757" y="340" width="1" height="15" fill="rgb(231,61,28)"/><text x="760.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="757" y="356" width="1" height="15" fill="rgb(238,15,4)"/><text x="760.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (36 samples, 3.30%)</title><rect x="722" y="212" width="39" height="15" fill="rgb(235,89,20)"/><text x="725.00" y="222.50">_ru..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (2 samples, 0.18%)</title><rect x="758" y="228" width="3" height="15" fill="rgb(245,175,39)"/><text x="761.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.18%)</title><rect x="758" y="244" width="3" height="15" fill="rgb(209,78,26)"/><text x="761.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (2 samples, 0.18%)</title><rect x="758" y="260" width="3" height="15" fill="rgb(248,56,41)"/><text x="761.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.18%)</title><rect x="758" y="276" width="3" height="15" fill="rgb(237,223,41)"/><text x="761.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c) (1 samples, 0.09%)</title><rect x="759" y="292" width="2" height="15" fill="rgb(227,179,29)"/><text x="762.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c) (1 samples, 0.09%)</title><rect x="759" y="308" width="2" height="15" fill="rgb(219,76,7)"/><text x="762.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.09%)</title><rect x="759" y="324" width="2" height="15" fill="rgb(222,24,42)"/><text x="762.00" y="334.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.09%)</title><rect x="761" y="260" width="1" height="15" fill="rgb(249,143,2)"/><text x="764.00" y="270.50"></text></g><g><title>FLOAT_less (loops.c.src) (1 samples, 0.09%)</title><rect x="762" y="292" width="1" height="15" fill="rgb(209,186,7)"/><text x="765.00" y="302.50"></text></g><g><title>run_binary_simd_less_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="762" y="308" width="1" height="15" fill="rgb(247,119,51)"/><text x="765.00" y="318.50"></text></g><g><title>sse2_binary_less_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="762" y="324" width="1" height="15" fill="rgb(218,79,2)"/><text x="765.00" y="334.50"></text></g><g><title>sse2_compress4_to_byte_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="762" y="340" width="1" height="15" fill="rgb(228,211,28)"/><text x="765.00" y="350.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h) (1 samples, 0.09%)</title><rect x="762" y="356" width="1" height="15" fill="rgb(207,101,47)"/><text x="765.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.18%)</title><rect x="763" y="292" width="2" height="15" fill="rgb(241,94,40)"/><text x="766.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.18%)</title><rect x="763" y="308" width="2" height="15" fill="rgb(216,182,26)"/><text x="766.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.18%)</title><rect x="763" y="324" width="2" height="15" fill="rgb(227,0,38)"/><text x="766.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.18%)</title><rect x="763" y="340" width="2" height="15" fill="rgb(254,121,16)"/><text x="766.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.18%)</title><rect x="763" y="356" width="2" height="15" fill="rgb(236,36,30)"/><text x="766.00" y="366.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="764" y="372" width="1" height="15" fill="rgb(253,176,42)"/><text x="767.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="764" y="388" width="1" height="15" fill="rgb(224,148,41)"/><text x="767.00" y="398.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="764" y="404" width="1" height="15" fill="rgb(245,80,41)"/><text x="767.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="764" y="420" width="1" height="15" fill="rgb(236,48,38)"/><text x="767.00" y="430.50"></text></g><g><title>0x7f530fe82b68 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="764" y="436" width="1" height="15" fill="rgb(212,134,53)"/><text x="767.00" y="446.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (5 samples, 0.46%)</title><rect x="761" y="212" width="5" height="15" fill="rgb(214,2,39)"/><text x="764.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 0.46%)</title><rect x="761" y="228" width="5" height="15" fill="rgb(216,182,38)"/><text x="764.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 0.46%)</title><rect x="761" y="244" width="5" height="15" fill="rgb(221,130,18)"/><text x="764.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.37%)</title><rect x="762" y="260" width="4" height="15" fill="rgb(238,126,5)"/><text x="765.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.37%)</title><rect x="762" y="276" width="4" height="15" fill="rgb(248,126,1)"/><text x="765.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.09%)</title><rect x="765" y="292" width="1" height="15" fill="rgb(215,212,17)"/><text x="768.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="765" y="308" width="1" height="15" fill="rgb(220,194,35)"/><text x="768.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="765" y="324" width="1" height="15" fill="rgb(212,43,4)"/><text x="768.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.09%)</title><rect x="765" y="340" width="1" height="15" fill="rgb(219,65,54)"/><text x="768.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.09%)</title><rect x="766" y="276" width="1" height="15" fill="rgb(222,85,24)"/><text x="769.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.09%)</title><rect x="766" y="292" width="1" height="15" fill="rgb(245,217,50)"/><text x="769.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (2 samples, 0.18%)</title><rect x="766" y="212" width="2" height="15" fill="rgb(241,138,34)"/><text x="769.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.18%)</title><rect x="766" y="228" width="2" height="15" fill="rgb(214,58,5)"/><text x="769.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.18%)</title><rect x="766" y="244" width="2" height="15" fill="rgb(248,149,28)"/><text x="769.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.18%)</title><rect x="766" y="260" width="2" height="15" fill="rgb(217,150,38)"/><text x="769.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.09%)</title><rect x="767" y="276" width="1" height="15" fill="rgb(217,148,42)"/><text x="770.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="767" y="292" width="1" height="15" fill="rgb(235,85,27)"/><text x="770.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="767" y="308" width="1" height="15" fill="rgb(227,149,16)"/><text x="770.00" y="318.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.09%)</title><rect x="769" y="244" width="1" height="15" fill="rgb(220,55,51)"/><text x="772.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.09%)</title><rect x="769" y="260" width="1" height="15" fill="rgb(234,60,37)"/><text x="772.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="769" y="276" width="1" height="15" fill="rgb(226,27,45)"/><text x="772.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.09%)</title><rect x="769" y="292" width="1" height="15" fill="rgb(227,23,15)"/><text x="772.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="769" y="308" width="1" height="15" fill="rgb(210,193,31)"/><text x="772.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="769" y="324" width="1" height="15" fill="rgb(214,42,48)"/><text x="772.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="769" y="340" width="1" height="15" fill="rgb(216,101,53)"/><text x="772.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="769" y="356" width="1" height="15" fill="rgb(217,95,26)"/><text x="772.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="769" y="372" width="1" height="15" fill="rgb(211,121,17)"/><text x="772.00" y="382.50"></text></g><g><title>0x7f530fe830b4 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="769" y="388" width="1" height="15" fill="rgb(214,226,30)"/><text x="772.00" y="398.50"></text></g><g><title>_new_argsortlike (item_selection.c) (6 samples, 0.55%)</title><rect x="771" y="356" width="7" height="15" fill="rgb(241,114,24)"/><text x="774.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src) (1 samples, 0.09%)</title><rect x="777" y="372" width="1" height="15" fill="rgb(232,177,29)"/><text x="780.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="778" y="356" width="1" height="15" fill="rgb(254,33,12)"/><text x="781.00" y="366.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (8 samples, 0.73%)</title><rect x="771" y="340" width="9" height="15" fill="rgb(222,132,35)"/><text x="774.00" y="350.50"></text></g><g><title>partition_prep_kth_array (item_selection.c) (1 samples, 0.09%)</title><rect x="779" y="356" width="1" height="15" fill="rgb(241,163,5)"/><text x="782.00" y="366.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.09%)</title><rect x="779" y="372" width="1" height="15" fill="rgb(226,143,34)"/><text x="782.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.09%)</title><rect x="779" y="388" width="1" height="15" fill="rgb(246,17,17)"/><text x="782.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.09%)</title><rect x="779" y="404" width="1" height="15" fill="rgb(241,168,1)"/><text x="782.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.09%)</title><rect x="779" y="420" width="1" height="15" fill="rgb(216,43,10)"/><text x="782.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.09%)</title><rect x="779" y="436" width="1" height="15" fill="rgb(232,195,27)"/><text x="782.00" y="446.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.09%)</title><rect x="780" y="356" width="1" height="15" fill="rgb(209,196,39)"/><text x="783.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="780" y="372" width="1" height="15" fill="rgb(241,36,12)"/><text x="783.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="780" y="388" width="1" height="15" fill="rgb(223,114,32)"/><text x="783.00" y="398.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (10 samples, 0.92%)</title><rect x="771" y="260" width="11" height="15" fill="rgb(246,158,24)"/><text x="774.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 0.92%)</title><rect x="771" y="276" width="11" height="15" fill="rgb(223,170,50)"/><text x="774.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (10 samples, 0.92%)</title><rect x="771" y="292" width="11" height="15" fill="rgb(233,17,43)"/><text x="774.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (10 samples, 0.92%)</title><rect x="771" y="308" width="11" height="15" fill="rgb(250,190,32)"/><text x="774.00" y="318.50"></text></g><g><title>array_argpartition (methods.c) (10 samples, 0.92%)</title><rect x="771" y="324" width="11" height="15" fill="rgb(234,56,45)"/><text x="774.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.18%)</title><rect x="780" y="340" width="2" height="15" fill="rgb(208,117,44)"/><text x="783.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.09%)</title><rect x="781" y="356" width="1" height="15" fill="rgb(225,182,43)"/><text x="784.00" y="366.50"></text></g><g><title>_argsort_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="782" y="276" width="1" height="15" fill="rgb(207,64,36)"/><text x="785.00" y="286.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (13 samples, 1.19%)</title><rect x="782" y="260" width="14" height="15" fill="rgb(213,90,52)"/><text x="785.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (12 samples, 1.10%)</title><rect x="783" y="276" width="13" height="15" fill="rgb(233,193,53)"/><text x="786.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (12 samples, 1.10%)</title><rect x="783" y="292" width="13" height="15" fill="rgb(254,59,5)"/><text x="786.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (11 samples, 1.01%)</title><rect x="784" y="308" width="12" height="15" fill="rgb(212,77,45)"/><text x="787.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (11 samples, 1.01%)</title><rect x="784" y="324" width="12" height="15" fill="rgb(209,140,33)"/><text x="787.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (11 samples, 1.01%)</title><rect x="784" y="340" width="12" height="15" fill="rgb(221,61,5)"/><text x="787.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (10 samples, 0.92%)</title><rect x="785" y="356" width="11" height="15" fill="rgb(214,169,11)"/><text x="788.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (4 samples, 0.37%)</title><rect x="792" y="372" width="4" height="15" fill="rgb(212,57,32)"/><text x="795.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (1 samples, 0.09%)</title><rect x="795" y="388" width="1" height="15" fill="rgb(254,3,40)"/><text x="798.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="796" y="260" width="1" height="15" fill="rgb(206,157,20)"/><text x="799.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="796" y="276" width="1" height="15" fill="rgb(206,189,21)"/><text x="799.00" y="286.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.09%)</title><rect x="796" y="292" width="1" height="15" fill="rgb(212,75,21)"/><text x="799.00" y="302.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.09%)</title><rect x="796" y="308" width="1" height="15" fill="rgb(250,198,29)"/><text x="799.00" y="318.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.09%)</title><rect x="796" y="324" width="1" height="15" fill="rgb(243,188,48)"/><text x="799.00" y="334.50"></text></g><g><title>0x7f530fe81f71 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="796" y="340" width="1" height="15" fill="rgb(244,5,6)"/><text x="799.00" y="350.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (13 samples, 1.19%)</title><rect x="797" y="276" width="14" height="15" fill="rgb(252,128,24)"/><text x="800.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (8 samples, 0.73%)</title><rect x="803" y="292" width="8" height="15" fill="rgb(250,151,13)"/><text x="806.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (8 samples, 0.73%)</title><rect x="811" y="276" width="9" height="15" fill="rgb(222,136,7)"/><text x="814.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (7 samples, 0.64%)</title><rect x="812" y="292" width="8" height="15" fill="rgb(215,219,44)"/><text x="815.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (7 samples, 0.64%)</title><rect x="812" y="308" width="8" height="15" fill="rgb(220,113,31)"/><text x="815.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.64%)</title><rect x="812" y="324" width="8" height="15" fill="rgb(226,214,11)"/><text x="815.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.64%)</title><rect x="812" y="340" width="8" height="15" fill="rgb(233,24,28)"/><text x="815.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (6 samples, 0.55%)</title><rect x="813" y="356" width="7" height="15" fill="rgb(215,57,42)"/><text x="816.00" y="366.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.09%)</title><rect x="820" y="276" width="1" height="15" fill="rgb(223,24,10)"/><text x="823.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.09%)</title><rect x="820" y="292" width="1" height="15" fill="rgb(240,183,28)"/><text x="823.00" y="302.50"></text></g><g><title>0x7f530fe81dfb (libc-2.29.so) (1 samples, 0.09%)</title><rect x="820" y="308" width="1" height="15" fill="rgb(239,213,46)"/><text x="823.00" y="318.50"></text></g><g><title>0x7f530fe80aa0 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="820" y="324" width="1" height="15" fill="rgb(226,4,25)"/><text x="823.00" y="334.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (33 samples, 3.02%)</title><rect x="821" y="276" width="36" height="15" fill="rgb(232,148,51)"/><text x="824.00" y="286.50">map..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.09%)</title><rect x="856" y="292" width="1" height="15" fill="rgb(252,91,5)"/><text x="859.00" y="302.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="856" y="308" width="1" height="15" fill="rgb(213,142,51)"/><text x="859.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (56 samples, 5.13%)</title><rect x="797" y="260" width="61" height="15" fill="rgb(217,204,29)"/><text x="800.00" y="270.50">array_..</text></g><g><title>prepare_index (mapping.c) (1 samples, 0.09%)</title><rect x="857" y="276" width="1" height="15" fill="rgb(229,204,35)"/><text x="860.00" y="286.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.09%)</title><rect x="857" y="292" width="1" height="15" fill="rgb(251,96,35)"/><text x="860.00" y="302.50"></text></g><g><title>unpack_tuple (mapping.c) (1 samples, 0.09%)</title><rect x="857" y="308" width="1" height="15" fill="rgb(238,78,1)"/><text x="860.00" y="318.50"></text></g><g><title>long_subtract (scalarmath.c.src) (1 samples, 0.09%)</title><rect x="858" y="260" width="1" height="15" fill="rgb(237,147,5)"/><text x="861.00" y="270.50"></text></g><g><title>_long_convert2_to_ctypes (scalarmath.c.src) (1 samples, 0.09%)</title><rect x="858" y="276" width="1" height="15" fill="rgb(236,125,7)"/><text x="861.00" y="286.50"></text></g><g><title>_long_convert_to_ctype (scalarmath.c.src) (1 samples, 0.09%)</title><rect x="858" y="292" width="1" height="15" fill="rgb(230,51,29)"/><text x="861.00" y="302.50"></text></g><g><title>PyArray_ScalarFromObject (scalarapi.c) (1 samples, 0.09%)</title><rect x="858" y="308" width="1" height="15" fill="rgb(210,29,17)"/><text x="861.00" y="318.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (84 samples, 7.69%)</title><rect x="769" y="228" width="91" height="15" fill="rgb(252,106,53)"/><text x="772.00" y="238.50">_common_ru..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (83 samples, 7.60%)</title><rect x="770" y="244" width="90" height="15" fill="rgb(252,200,13)"/><text x="773.00" y="254.50">topk_sorte..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="859" y="260" width="1" height="15" fill="rgb(249,147,40)"/><text x="862.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="859" y="276" width="1" height="15" fill="rgb(230,116,19)"/><text x="862.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="859" y="292" width="1" height="15" fill="rgb(209,171,28)"/><text x="862.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="859" y="308" width="1" height="15" fill="rgb(253,197,5)"/><text x="862.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src) (1 samples, 0.09%)</title><rect x="859" y="324" width="1" height="15" fill="rgb(242,86,2)"/><text x="862.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="859" y="340" width="1" height="15" fill="rgb(249,198,1)"/><text x="862.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src) (1 samples, 0.09%)</title><rect x="859" y="356" width="1" height="15" fill="rgb(243,194,48)"/><text x="862.00" y="366.50"></text></g><g><title>_mm_xor_ps (xmmintrin.h) (1 samples, 0.09%)</title><rect x="859" y="372" width="1" height="15" fill="rgb(205,130,27)"/><text x="862.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (86 samples, 7.88%)</title><rect x="768" y="212" width="93" height="15" fill="rgb(222,35,39)"/><text x="771.00" y="222.50">_run (mlpro..</text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.09%)</title><rect x="860" y="228" width="1" height="15" fill="rgb(235,83,52)"/><text x="863.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="860" y="244" width="1" height="15" fill="rgb(243,39,21)"/><text x="863.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="860" y="260" width="1" height="15" fill="rgb(241,173,34)"/><text x="863.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="861" y="212" width="1" height="15" fill="rgb(252,63,42)"/><text x="864.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="861" y="228" width="1" height="15" fill="rgb(206,8,0)"/><text x="864.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="861" y="244" width="1" height="15" fill="rgb(249,36,28)"/><text x="864.00" y="254.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (7 samples, 0.64%)</title><rect x="862" y="276" width="8" height="15" fill="rgb(221,149,24)"/><text x="865.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.55%)</title><rect x="863" y="292" width="7" height="15" fill="rgb(217,112,49)"/><text x="866.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (4 samples, 0.37%)</title><rect x="865" y="308" width="5" height="15" fill="rgb(239,55,30)"/><text x="868.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 0.37%)</title><rect x="865" y="324" width="5" height="15" fill="rgb(213,5,37)"/><text x="868.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (4 samples, 0.37%)</title><rect x="865" y="340" width="5" height="15" fill="rgb(234,125,14)"/><text x="868.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c) (4 samples, 0.37%)</title><rect x="865" y="356" width="5" height="15" fill="rgb(244,38,16)"/><text x="868.00" y="366.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src) (3 samples, 0.27%)</title><rect x="866" y="372" width="4" height="15" fill="rgb(251,163,14)"/><text x="869.00" y="382.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.09%)</title><rect x="870" y="276" width="1" height="15" fill="rgb(211,104,47)"/><text x="873.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.09%)</title><rect x="870" y="292" width="1" height="15" fill="rgb(218,114,16)"/><text x="873.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.09%)</title><rect x="870" y="308" width="1" height="15" fill="rgb(207,62,0)"/><text x="873.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="870" y="324" width="1" height="15" fill="rgb(218,156,8)"/><text x="873.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (9 samples, 0.82%)</title><rect x="862" y="228" width="10" height="15" fill="rgb(226,85,8)"/><text x="865.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (9 samples, 0.82%)</title><rect x="862" y="244" width="10" height="15" fill="rgb(232,92,16)"/><text x="865.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (9 samples, 0.82%)</title><rect x="862" y="260" width="10" height="15" fill="rgb(217,13,15)"/><text x="865.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.09%)</title><rect x="871" y="276" width="1" height="15" fill="rgb(219,7,28)"/><text x="874.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.09%)</title><rect x="871" y="292" width="1" height="15" fill="rgb(235,147,27)"/><text x="874.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.09%)</title><rect x="871" y="308" width="1" height="15" fill="rgb(235,28,23)"/><text x="874.00" y="318.50"></text></g><g><title>0x7f52d091a54f (?) (1 samples, 0.09%)</title><rect x="872" y="244" width="1" height="15" fill="rgb(236,41,10)"/><text x="875.00" y="254.50"></text></g><g><title>0x7f52d092065e (?) (1 samples, 0.09%)</title><rect x="872" y="260" width="1" height="15" fill="rgb(212,221,46)"/><text x="875.00" y="270.50"></text></g><g><title>0x7f52d092050f (?) (1 samples, 0.09%)</title><rect x="872" y="276" width="1" height="15" fill="rgb(216,118,14)"/><text x="875.00" y="286.50"></text></g><g><title>0x7f52d0926d6c (?) (1 samples, 0.09%)</title><rect x="872" y="292" width="1" height="15" fill="rgb(206,21,4)"/><text x="875.00" y="302.50"></text></g><g><title>0x7f52d9e87ab9 (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="872" y="308" width="1" height="15" fill="rgb(214,40,40)"/><text x="875.00" y="318.50"></text></g><g><title>0x7f52d9e88ea0 (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="872" y="324" width="1" height="15" fill="rgb(229,105,42)"/><text x="875.00" y="334.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h) (1 samples, 0.09%)</title><rect x="874" y="260" width="1" height="15" fill="rgb(239,132,6)"/><text x="877.00" y="270.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.09%)</title><rect x="874" y="276" width="1" height="15" fill="rgb(222,181,25)"/><text x="877.00" y="286.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::emplace_back&lt;_object*&gt; (vector.tcc) (1 samples, 0.09%)</title><rect x="874" y="292" width="1" height="15" fill="rgb(218,77,17)"/><text x="877.00" y="302.50"></text></g><g><title>pybind11::detail::get_internals (internals.h) (1 samples, 0.09%)</title><rect x="874" y="308" width="1" height="15" fill="rgb(232,144,9)"/><text x="877.00" y="318.50"></text></g><g><title>0x7f52d9e88ea0 (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="875" y="484" width="1" height="15" fill="rgb(244,63,18)"/><text x="878.00" y="494.50"></text></g><g><title>0x7f52d9e88ea9 (libgomp.so.1.0.0) (18 samples, 1.65%)</title><rect x="876" y="484" width="20" height="15" fill="rgb(216,38,47)"/><text x="879.00" y="494.50"></text></g><g><title>0x7f52d9e88eab (libgomp.so.1.0.0) (11 samples, 1.01%)</title><rect x="896" y="484" width="11" height="15" fill="rgb(249,53,40)"/><text x="899.00" y="494.50"></text></g><g><title>0x7f52d9e87ab9 (libgomp.so.1.0.0) (44 samples, 4.03%)</title><rect x="875" y="468" width="48" height="15" fill="rgb(207,83,21)"/><text x="878.00" y="478.50">0x7f..</text></g><g><title>0x7f52d9e88ead (libgomp.so.1.0.0) (14 samples, 1.28%)</title><rect x="907" y="484" width="16" height="15" fill="rgb(211,219,5)"/><text x="910.00" y="494.50"></text></g><g><title>0x7f52d9e88cfb (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="923" y="500" width="1" height="15" fill="rgb(234,149,7)"/><text x="926.00" y="510.50"></text></g><g><title>0x7f52d9e86daa (libgomp.so.1.0.0) (2 samples, 0.18%)</title><rect x="923" y="484" width="2" height="15" fill="rgb(208,71,8)"/><text x="926.00" y="494.50"></text></g><g><title>0x7f52d9e88cfd (libgomp.so.1.0.0) (1 samples, 0.09%)</title><rect x="924" y="500" width="1" height="15" fill="rgb(251,120,14)"/><text x="927.00" y="510.50"></text></g><g><title>pybind11::array::size (numpy.h) (49 samples, 4.49%)</title><rect x="875" y="436" width="53" height="15" fill="rgb(213,160,40)"/><text x="878.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (49 samples, 4.49%)</title><rect x="875" y="452" width="53" height="15" fill="rgb(206,83,47)"/><text x="878.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 0.46%)</title><rect x="923" y="468" width="5" height="15" fill="rgb(226,66,14)"/><text x="926.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (3 samples, 0.27%)</title><rect x="925" y="484" width="3" height="15" fill="rgb(223,96,10)"/><text x="928.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.09%)</title><rect x="927" y="500" width="1" height="15" fill="rgb(206,145,6)"/><text x="930.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (1 samples, 0.09%)</title><rect x="927" y="516" width="1" height="15" fill="rgb(226,138,9)"/><text x="930.00" y="526.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (1 samples, 0.09%)</title><rect x="927" y="532" width="1" height="15" fill="rgb(246,115,18)"/><text x="930.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (1 samples, 0.09%)</title><rect x="927" y="548" width="1" height="15" fill="rgb(246,78,20)"/><text x="930.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (1 samples, 0.09%)</title><rect x="927" y="564" width="1" height="15" fill="rgb(239,164,45)"/><text x="930.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (1 samples, 0.09%)</title><rect x="927" y="580" width="1" height="15" fill="rgb(245,59,27)"/><text x="930.00" y="590.50"></text></g><g><title>0x7f530fe83028 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="929" y="660" width="1" height="15" fill="rgb(247,100,23)"/><text x="932.00" y="670.50"></text></g><g><title>0x7f530fe80bdf (libc-2.29.so) (1 samples, 0.09%)</title><rect x="929" y="676" width="1" height="15" fill="rgb(243,78,45)"/><text x="932.00" y="686.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h) (3 samples, 0.27%)</title><rect x="928" y="436" width="3" height="15" fill="rgb(215,218,41)"/><text x="931.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (3 samples, 0.27%)</title><rect x="928" y="452" width="3" height="15" fill="rgb(224,34,33)"/><text x="931.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (3 samples, 0.27%)</title><rect x="928" y="468" width="3" height="15" fill="rgb(216,217,22)"/><text x="931.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (3 samples, 0.27%)</title><rect x="928" y="484" width="3" height="15" fill="rgb(220,39,13)"/><text x="931.00" y="494.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (3 samples, 0.27%)</title><rect x="928" y="500" width="3" height="15" fill="rgb(215,44,27)"/><text x="931.00" y="510.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (3 samples, 0.27%)</title><rect x="928" y="516" width="3" height="15" fill="rgb(219,2,32)"/><text x="931.00" y="526.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (3 samples, 0.27%)</title><rect x="928" y="532" width="3" height="15" fill="rgb(214,100,7)"/><text x="931.00" y="542.50"></text></g><g><title>pybind11::array::array (numpy.h) (3 samples, 0.27%)</title><rect x="928" y="548" width="3" height="15" fill="rgb(213,137,37)"/><text x="931.00" y="558.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (3 samples, 0.27%)</title><rect x="928" y="564" width="3" height="15" fill="rgb(220,35,17)"/><text x="931.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.27%)</title><rect x="928" y="580" width="3" height="15" fill="rgb(212,58,15)"/><text x="931.00" y="590.50"></text></g><g><title>npy_alloc_cache (alloc.c) (3 samples, 0.27%)</title><rect x="928" y="596" width="3" height="15" fill="rgb(248,152,49)"/><text x="931.00" y="606.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (3 samples, 0.27%)</title><rect x="928" y="612" width="3" height="15" fill="rgb(219,61,49)"/><text x="931.00" y="622.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (3 samples, 0.27%)</title><rect x="928" y="628" width="3" height="15" fill="rgb(254,58,14)"/><text x="931.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.27%)</title><rect x="928" y="644" width="3" height="15" fill="rgb(235,81,39)"/><text x="931.00" y="654.50"></text></g><g><title>0x7f530fe832f8 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="930" y="660" width="1" height="15" fill="rgb(208,38,25)"/><text x="933.00" y="670.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (56 samples, 5.13%)</title><rect x="872" y="228" width="60" height="15" fill="rgb(243,164,25)"/><text x="875.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (55 samples, 5.04%)</title><rect x="873" y="244" width="59" height="15" fill="rgb(239,155,9)"/><text x="876.00" y="254.50">pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (53 samples, 4.85%)</title><rect x="875" y="260" width="57" height="15" fill="rgb(208,24,11)"/><text x="878.00" y="270.50">void p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (53 samples, 4.85%)</title><rect x="875" y="276" width="57" height="15" fill="rgb(233,74,49)"/><text x="878.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (53 samples, 4.85%)</title><rect x="875" y="292" width="57" height="15" fill="rgb(254,150,3)"/><text x="878.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (53 samples, 4.85%)</title><rect x="875" y="308" width="57" height="15" fill="rgb(252,30,33)"/><text x="878.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (53 samples, 4.85%)</title><rect x="875" y="324" width="57" height="15" fill="rgb(229,19,50)"/><text x="878.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (53 samples, 4.85%)</title><rect x="875" y="340" width="57" height="15" fill="rgb(249,85,12)"/><text x="878.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h) (53 samples, 4.85%)</title><rect x="875" y="356" width="57" height="15" fill="rgb(205,197,40)"/><text x="878.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (53 samples, 4.85%)</title><rect x="875" y="372" width="57" height="15" fill="rgb(235,1,13)"/><text x="878.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h) (53 samples, 4.85%)</title><rect x="875" y="388" width="57" height="15" fill="rgb(225,118,46)"/><text x="878.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (53 samples, 4.85%)</title><rect x="875" y="404" width="57" height="15" fill="rgb(249,1,10)"/><text x="878.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (53 samples, 4.85%)</title><rect x="875" y="420" width="57" height="15" fill="rgb(244,125,31)"/><text x="878.00" y="430.50">Runtim..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (1 samples, 0.09%)</title><rect x="931" y="436" width="1" height="15" fill="rgb(230,96,12)"/><text x="934.00" y="446.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_default_append (vector.tcc) (1 samples, 0.09%)</title><rect x="931" y="452" width="1" height="15" fill="rgb(221,4,2)"/><text x="934.00" y="462.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_M_deallocate (stl_vector.h) (1 samples, 0.09%)</title><rect x="931" y="468" width="1" height="15" fill="rgb(238,20,18)"/><text x="934.00" y="478.50"></text></g><g><title>0x7f530fea2120 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="931" y="484" width="1" height="15" fill="rgb(242,23,23)"/><text x="934.00" y="494.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (382 samples, 34.98%)</title><rect x="521" y="100" width="412" height="15" fill="rgb(225,100,10)"/><text x="524.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimat..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (382 samples, 34.98%)</title><rect x="521" y="116" width="412" height="15" fill="rgb(214,117,32)"/><text x="524.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (382 samples, 34.98%)</title><rect x="521" y="132" width="412" height="15" fill="rgb(241,163,10)"/><text x="524.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (380 samples, 34.80%)</title><rect x="523" y="148" width="410" height="15" fill="rgb(252,89,52)"/><text x="526.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (380 samples, 34.80%)</title><rect x="523" y="164" width="410" height="15" fill="rgb(253,143,35)"/><text x="526.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (377 samples, 34.52%)</title><rect x="526" y="180" width="407" height="15" fill="rgb(242,210,20)"/><text x="529.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (363 samples, 33.24%)</title><rect x="541" y="196" width="392" height="15" fill="rgb(210,31,28)"/><text x="544.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (66 samples, 6.04%)</title><rect x="862" y="212" width="71" height="15" fill="rgb(248,125,22)"/><text x="865.00" y="222.50">run (mlp..</text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.09%)</title><rect x="932" y="228" width="1" height="15" fill="rgb(231,85,39)"/><text x="935.00" y="238.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.09%)</title><rect x="932" y="244" width="1" height="15" fill="rgb(241,143,16)"/><text x="935.00" y="254.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (384 samples, 35.16%)</title><rect x="521" y="68" width="415" height="15" fill="rgb(247,68,26)"/><text x="524.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_es..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (384 samples, 35.16%)</title><rect x="521" y="84" width="415" height="15" fill="rgb(226,139,5)"/><text x="524.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_e..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.18%)</title><rect x="933" y="100" width="3" height="15" fill="rgb(245,55,42)"/><text x="936.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.18%)</title><rect x="933" y="116" width="3" height="15" fill="rgb(239,215,27)"/><text x="936.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.18%)</title><rect x="933" y="132" width="3" height="15" fill="rgb(228,62,7)"/><text x="936.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.18%)</title><rect x="933" y="148" width="3" height="15" fill="rgb(254,85,49)"/><text x="936.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.18%)</title><rect x="933" y="164" width="3" height="15" fill="rgb(235,8,35)"/><text x="936.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.18%)</title><rect x="933" y="180" width="3" height="15" fill="rgb(210,29,50)"/><text x="936.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.18%)</title><rect x="933" y="196" width="3" height="15" fill="rgb(250,58,54)"/><text x="936.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="212" width="3" height="15" fill="rgb(247,62,14)"/><text x="936.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="228" width="3" height="15" fill="rgb(231,221,54)"/><text x="936.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="244" width="3" height="15" fill="rgb(206,218,14)"/><text x="936.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="933" y="260" width="3" height="15" fill="rgb(232,9,21)"/><text x="936.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="276" width="3" height="15" fill="rgb(239,129,18)"/><text x="936.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.18%)</title><rect x="933" y="292" width="3" height="15" fill="rgb(254,2,44)"/><text x="936.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="308" width="3" height="15" fill="rgb(225,38,7)"/><text x="936.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="324" width="3" height="15" fill="rgb(226,154,9)"/><text x="936.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="340" width="3" height="15" fill="rgb(221,59,23)"/><text x="936.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="933" y="356" width="3" height="15" fill="rgb(223,110,5)"/><text x="936.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="933" y="372" width="3" height="15" fill="rgb(212,197,10)"/><text x="936.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.18%)</title><rect x="933" y="388" width="3" height="15" fill="rgb(222,138,3)"/><text x="936.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.18%)</title><rect x="933" y="404" width="3" height="15" fill="rgb(224,163,47)"/><text x="936.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.18%)</title><rect x="933" y="420" width="3" height="15" fill="rgb(221,32,9)"/><text x="936.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.18%)</title><rect x="933" y="436" width="3" height="15" fill="rgb(214,143,39)"/><text x="936.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.18%)</title><rect x="933" y="452" width="3" height="15" fill="rgb(250,0,15)"/><text x="936.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.18%)</title><rect x="933" y="468" width="3" height="15" fill="rgb(208,127,1)"/><text x="936.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.09%)</title><rect x="934" y="484" width="2" height="15" fill="rgb(236,145,1)"/><text x="937.00" y="494.50"></text></g><g><title>0x7f52e98c5d2e (?) (1 samples, 0.09%)</title><rect x="949" y="212" width="1" height="15" fill="rgb(213,226,14)"/><text x="952.00" y="222.50"></text></g><g><title>0x7f52e98c4fa6 (?) (1 samples, 0.09%)</title><rect x="949" y="228" width="1" height="15" fill="rgb(228,112,25)"/><text x="952.00" y="238.50"></text></g><g><title>0x7f52e98d4405 (?) (1 samples, 0.09%)</title><rect x="949" y="244" width="1" height="15" fill="rgb(243,195,30)"/><text x="952.00" y="254.50"></text></g><g><title>0x7f52e98d36aa (?) (1 samples, 0.09%)</title><rect x="949" y="260" width="1" height="15" fill="rgb(240,24,35)"/><text x="952.00" y="270.50"></text></g><g><title>0x7f52e98c4f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="950" y="228" width="1" height="15" fill="rgb(235,46,5)"/><text x="953.00" y="238.50"></text></g><g><title>0x7f52e98b4d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="950" y="244" width="1" height="15" fill="rgb(245,177,40)"/><text x="953.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.09%)</title><rect x="950" y="260" width="1" height="15" fill="rgb(249,79,52)"/><text x="953.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="950" y="276" width="1" height="15" fill="rgb(219,114,2)"/><text x="953.00" y="286.50"></text></g><g><title>0x7f52e98d3225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.27%)</title><rect x="951" y="260" width="3" height="15" fill="rgb(231,172,26)"/><text x="954.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (3 samples, 0.27%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(220,90,17)"/><text x="954.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.09%)</title><rect x="953" y="292" width="1" height="15" fill="rgb(237,75,43)"/><text x="956.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.09%)</title><rect x="955" y="356" width="1" height="15" fill="rgb(217,159,32)"/><text x="958.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.09%)</title><rect x="955" y="372" width="1" height="15" fill="rgb(205,82,46)"/><text x="958.00" y="382.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.09%)</title><rect x="957" y="372" width="1" height="15" fill="rgb(224,22,18)"/><text x="960.00" y="382.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.09%)</title><rect x="957" y="388" width="1" height="15" fill="rgb(238,202,11)"/><text x="960.00" y="398.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="957" y="404" width="1" height="15" fill="rgb(251,99,7)"/><text x="960.00" y="414.50"></text></g><g><title>0x7f52e98b7666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.46%)</title><rect x="954" y="292" width="5" height="15" fill="rgb(213,21,0)"/><text x="957.00" y="302.50"></text></g><g><title>0x7f52e98ad2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.46%)</title><rect x="954" y="308" width="5" height="15" fill="rgb(241,63,8)"/><text x="957.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 0.46%)</title><rect x="954" y="324" width="5" height="15" fill="rgb(226,202,14)"/><text x="957.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (5 samples, 0.46%)</title><rect x="954" y="340" width="5" height="15" fill="rgb(227,20,6)"/><text x="957.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c) (3 samples, 0.27%)</title><rect x="956" y="356" width="3" height="15" fill="rgb(218,78,1)"/><text x="959.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="958" y="372" width="1" height="15" fill="rgb(208,138,23)"/><text x="961.00" y="382.50"></text></g><g><title>0x7f52e98d32df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.55%)</title><rect x="954" y="260" width="6" height="15" fill="rgb(220,5,25)"/><text x="957.00" y="270.50"></text></g><g><title>0x7f52e98b7d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.55%)</title><rect x="954" y="276" width="6" height="15" fill="rgb(241,22,39)"/><text x="957.00" y="286.50"></text></g><g><title>0x7f52e98b76fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="959" y="292" width="1" height="15" fill="rgb(241,176,16)"/><text x="962.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="960" y="340" width="1" height="15" fill="rgb(213,44,51)"/><text x="963.00" y="350.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.09%)</title><rect x="960" y="356" width="1" height="15" fill="rgb(215,152,1)"/><text x="963.00" y="366.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.09%)</title><rect x="960" y="372" width="1" height="15" fill="rgb(245,63,39)"/><text x="963.00" y="382.50"></text></g><g><title>0x7f530fe82dc9 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="963" y="388" width="1" height="15" fill="rgb(224,183,10)"/><text x="966.00" y="398.50"></text></g><g><title>0x7f52e98d3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.37%)</title><rect x="960" y="260" width="5" height="15" fill="rgb(250,139,17)"/><text x="963.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (4 samples, 0.37%)</title><rect x="960" y="276" width="5" height="15" fill="rgb(237,16,44)"/><text x="963.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (4 samples, 0.37%)</title><rect x="960" y="292" width="5" height="15" fill="rgb(247,18,10)"/><text x="963.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (4 samples, 0.37%)</title><rect x="960" y="308" width="5" height="15" fill="rgb(207,148,48)"/><text x="963.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (4 samples, 0.37%)</title><rect x="960" y="324" width="5" height="15" fill="rgb(234,129,6)"/><text x="963.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (3 samples, 0.27%)</title><rect x="961" y="340" width="4" height="15" fill="rgb(233,101,9)"/><text x="964.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.18%)</title><rect x="963" y="356" width="2" height="15" fill="rgb(208,110,40)"/><text x="966.00" y="366.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.18%)</title><rect x="963" y="372" width="2" height="15" fill="rgb(244,187,0)"/><text x="966.00" y="382.50"></text></g><g><title>0x7f530fe8378d (libc-2.29.so) (1 samples, 0.09%)</title><rect x="964" y="388" width="1" height="15" fill="rgb(253,122,20)"/><text x="967.00" y="398.50"></text></g><g><title>0x7f52e98d36a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="965" y="260" width="1" height="15" fill="rgb(207,115,12)"/><text x="968.00" y="270.50"></text></g><g><title>0x7f52e98d36aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.27%)</title><rect x="966" y="260" width="3" height="15" fill="rgb(236,75,17)"/><text x="969.00" y="270.50"></text></g><g><title>0x7f52e98d392f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="969" y="260" width="1" height="15" fill="rgb(211,127,37)"/><text x="972.00" y="270.50"></text></g><g><title>0x7f52e98a88d1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="969" y="276" width="1" height="15" fill="rgb(240,3,3)"/><text x="972.00" y="286.50"></text></g><g><title>0x7f52e98ab529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="970" y="276" width="1" height="15" fill="rgb(219,31,38)"/><text x="973.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.09%)</title><rect x="970" y="292" width="1" height="15" fill="rgb(217,112,1)"/><text x="973.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.09%)</title><rect x="970" y="308" width="1" height="15" fill="rgb(206,118,20)"/><text x="973.00" y="318.50"></text></g><g><title>0x7f52e98c4fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 1.83%)</title><rect x="951" y="228" width="21" height="15" fill="rgb(254,6,29)"/><text x="954.00" y="238.50"></text></g><g><title>0x7f52e98d4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (20 samples, 1.83%)</title><rect x="951" y="244" width="21" height="15" fill="rgb(210,34,49)"/><text x="954.00" y="254.50"></text></g><g><title>0x7f52e98d3c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="970" y="260" width="2" height="15" fill="rgb(240,138,10)"/><text x="973.00" y="270.50"></text></g><g><title>0x7f52e98ab5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="971" y="276" width="1" height="15" fill="rgb(234,197,49)"/><text x="974.00" y="286.50"></text></g><g><title>0x7f52e98ab2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="971" y="292" width="1" height="15" fill="rgb(225,103,28)"/><text x="974.00" y="302.50"></text></g><g><title>0x7f52e98aa913 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="971" y="308" width="1" height="15" fill="rgb(254,22,42)"/><text x="974.00" y="318.50"></text></g><g><title>0x7f52e98c4fd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="972" y="228" width="1" height="15" fill="rgb(233,111,23)"/><text x="975.00" y="238.50"></text></g><g><title>0x7f52e98c505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.55%)</title><rect x="973" y="228" width="7" height="15" fill="rgb(227,227,5)"/><text x="976.00" y="238.50"></text></g><g><title>array_take (methods.c) (6 samples, 0.55%)</title><rect x="973" y="244" width="7" height="15" fill="rgb(246,44,3)"/><text x="976.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.27%)</title><rect x="977" y="260" width="3" height="15" fill="rgb(233,186,46)"/><text x="980.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.27%)</title><rect x="977" y="276" width="3" height="15" fill="rgb(210,134,14)"/><text x="980.00" y="286.50"></text></g><g><title>0x7f52e98c514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="980" y="228" width="1" height="15" fill="rgb(237,224,40)"/><text x="983.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="980" y="244" width="1" height="15" fill="rgb(250,90,25)"/><text x="983.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="980" y="260" width="1" height="15" fill="rgb(217,193,54)"/><text x="983.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="980" y="276" width="1" height="15" fill="rgb(208,136,42)"/><text x="983.00" y="286.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.09%)</title><rect x="980" y="292" width="1" height="15" fill="rgb(253,169,27)"/><text x="983.00" y="302.50"></text></g><g><title>0x7f52e98c518f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="981" y="228" width="1" height="15" fill="rgb(236,45,28)"/><text x="984.00" y="238.50"></text></g><g><title>0x7f52e98c5d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 2.93%)</title><rect x="950" y="212" width="34" height="15" fill="rgb(229,4,38)"/><text x="953.00" y="222.50">0x..</text></g><g><title>0x7f52e98c5328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="982" y="228" width="2" height="15" fill="rgb(228,207,11)"/><text x="985.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.18%)</title><rect x="982" y="244" width="2" height="15" fill="rgb(205,33,42)"/><text x="985.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.18%)</title><rect x="982" y="260" width="2" height="15" fill="rgb(226,189,40)"/><text x="985.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.18%)</title><rect x="982" y="276" width="2" height="15" fill="rgb(213,224,42)"/><text x="985.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.18%)</title><rect x="982" y="292" width="2" height="15" fill="rgb(251,4,44)"/><text x="985.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="983" y="308" width="1" height="15" fill="rgb(209,179,41)"/><text x="986.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="983" y="324" width="1" height="15" fill="rgb(233,163,42)"/><text x="986.00" y="334.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.09%)</title><rect x="983" y="340" width="1" height="15" fill="rgb(239,46,48)"/><text x="986.00" y="350.50"></text></g><g><title>__enter__ (warnings.py) (6 samples, 0.55%)</title><rect x="995" y="244" width="6" height="15" fill="rgb(218,112,29)"/><text x="998.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.18%)</title><rect x="1001" y="244" width="3" height="15" fill="rgb(212,57,5)"/><text x="1004.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.09%)</title><rect x="1004" y="244" width="1" height="15" fill="rgb(212,148,46)"/><text x="1007.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 0.64%)</title><rect x="1005" y="244" width="7" height="15" fill="rgb(247,227,49)"/><text x="1008.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="1009" y="260" width="3" height="15" fill="rgb(225,12,32)"/><text x="1012.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.09%)</title><rect x="1012" y="244" width="1" height="15" fill="rgb(249,95,13)"/><text x="1015.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.09%)</title><rect x="1028" y="260" width="2" height="15" fill="rgb(216,226,54)"/><text x="1031.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (18 samples, 1.65%)</title><rect x="1013" y="244" width="20" height="15" fill="rgb(225,15,17)"/><text x="1016.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.27%)</title><rect x="1030" y="260" width="3" height="15" fill="rgb(214,163,48)"/><text x="1033.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.18%)</title><rect x="1031" y="276" width="2" height="15" fill="rgb(225,199,36)"/><text x="1034.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.09%)</title><rect x="1033" y="244" width="1" height="15" fill="rgb(252,141,42)"/><text x="1036.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.46%)</title><rect x="1034" y="244" width="5" height="15" fill="rgb(251,114,14)"/><text x="1037.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.27%)</title><rect x="1036" y="260" width="3" height="15" fill="rgb(249,215,17)"/><text x="1039.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.18%)</title><rect x="1037" y="276" width="2" height="15" fill="rgb(254,109,24)"/><text x="1040.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (56 samples, 5.13%)</title><rect x="984" y="212" width="61" height="15" fill="rgb(240,122,35)"/><text x="987.00" y="222.50">_valid..</text></g><g><title>check_array (sklearn/utils/validation.py) (55 samples, 5.04%)</title><rect x="985" y="228" width="60" height="15" fill="rgb(225,16,52)"/><text x="988.00" y="238.50">check_..</text></g><g><title>simplefilter (warnings.py) (5 samples, 0.46%)</title><rect x="1039" y="244" width="6" height="15" fill="rgb(233,31,13)"/><text x="1042.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.37%)</title><rect x="1040" y="260" width="5" height="15" fill="rgb(222,212,37)"/><text x="1043.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.09%)</title><rect x="1045" y="228" width="1" height="15" fill="rgb(235,39,15)"/><text x="1048.00" y="238.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.09%)</title><rect x="1045" y="244" width="1" height="15" fill="rgb(206,55,22)"/><text x="1048.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1045" y="260" width="1" height="15" fill="rgb(223,51,19)"/><text x="1048.00" y="270.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="1045" y="276" width="1" height="15" fill="rgb(251,199,12)"/><text x="1048.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.09%)</title><rect x="1045" y="292" width="1" height="15" fill="rgb(210,103,18)"/><text x="1048.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.09%)</title><rect x="1045" y="308" width="1" height="15" fill="rgb(238,164,43)"/><text x="1048.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.18%)</title><rect x="1045" y="212" width="2" height="15" fill="rgb(222,133,4)"/><text x="1048.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.09%)</title><rect x="1046" y="228" width="1" height="15" fill="rgb(245,21,19)"/><text x="1049.00" y="238.50"></text></g><g><title>0x7f530fea2120 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1052" y="244" width="1" height="15" fill="rgb(237,79,14)"/><text x="1055.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.37%)</title><rect x="1053" y="244" width="5" height="15" fill="rgb(244,24,22)"/><text x="1056.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 0.73%)</title><rect x="1050" y="228" width="9" height="15" fill="rgb(248,74,6)"/><text x="1053.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.09%)</title><rect x="1058" y="244" width="1" height="15" fill="rgb(231,7,14)"/><text x="1061.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 1.10%)</title><rect x="1047" y="212" width="13" height="15" fill="rgb(226,38,3)"/><text x="1050.00" y="222.50"></text></g><g><title>isclass (inspect.py) (1 samples, 0.09%)</title><rect x="1059" y="228" width="1" height="15" fill="rgb(209,90,3)"/><text x="1062.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (109 samples, 9.98%)</title><rect x="943" y="180" width="118" height="15" fill="rgb(227,37,21)"/><text x="946.00" y="190.50">&lt;listcomp&gt; (sk..</text></g><g><title>predict (sklearn/tree/_classes.py) (108 samples, 9.89%)</title><rect x="944" y="196" width="117" height="15" fill="rgb(219,96,6)"/><text x="947.00" y="206.50">predict (sklea..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.09%)</title><rect x="1060" y="212" width="1" height="15" fill="rgb(241,207,44)"/><text x="1063.00" y="222.50"></text></g><g><title>0x7f530f0a2c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1061" y="308" width="1" height="15" fill="rgb(252,41,42)"/><text x="1064.00" y="318.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (2 samples, 0.18%)</title><rect x="1061" y="228" width="2" height="15" fill="rgb(217,115,13)"/><text x="1064.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.18%)</title><rect x="1061" y="244" width="2" height="15" fill="rgb(206,6,47)"/><text x="1064.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.18%)</title><rect x="1061" y="260" width="2" height="15" fill="rgb(227,198,17)"/><text x="1064.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.18%)</title><rect x="1061" y="276" width="2" height="15" fill="rgb(252,9,24)"/><text x="1064.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.18%)</title><rect x="1061" y="292" width="2" height="15" fill="rgb(225,124,2)"/><text x="1064.00" y="302.50"></text></g><g><title>0x7f530fea1d94 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1062" y="308" width="1" height="15" fill="rgb(245,216,0)"/><text x="1065.00" y="318.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.09%)</title><rect x="1063" y="228" width="1" height="15" fill="rgb(210,74,24)"/><text x="1066.00" y="238.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.09%)</title><rect x="1063" y="244" width="1" height="15" fill="rgb(236,182,33)"/><text x="1066.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.37%)</title><rect x="1061" y="180" width="4" height="15" fill="rgb(227,114,37)"/><text x="1064.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 0.37%)</title><rect x="1061" y="196" width="4" height="15" fill="rgb(250,21,47)"/><text x="1064.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.37%)</title><rect x="1061" y="212" width="4" height="15" fill="rgb(217,101,36)"/><text x="1064.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1064" y="228" width="1" height="15" fill="rgb(252,59,0)"/><text x="1067.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1064" y="244" width="1" height="15" fill="rgb(226,128,51)"/><text x="1067.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1064" y="260" width="1" height="15" fill="rgb(207,118,31)"/><text x="1067.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="1064" y="276" width="1" height="15" fill="rgb(232,155,26)"/><text x="1067.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1064" y="292" width="1" height="15" fill="rgb(214,10,44)"/><text x="1067.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 0.55%)</title><rect x="1065" y="180" width="7" height="15" fill="rgb(217,228,5)"/><text x="1068.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.09%)</title><rect x="1071" y="196" width="1" height="15" fill="rgb(213,100,3)"/><text x="1074.00" y="206.50"></text></g><g><title>_argsort_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="1073" y="196" width="1" height="15" fill="rgb(251,149,15)"/><text x="1076.00" y="206.50"></text></g><g><title>_basic_copyn (arraytypes.c.src) (1 samples, 0.09%)</title><rect x="1085" y="308" width="1" height="15" fill="rgb(217,164,7)"/><text x="1088.00" y="318.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src) (6 samples, 0.55%)</title><rect x="1085" y="292" width="6" height="15" fill="rgb(227,32,49)"/><text x="1088.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c) (5 samples, 0.46%)</title><rect x="1086" y="308" width="5" height="15" fill="rgb(248,209,44)"/><text x="1089.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (22 samples, 2.01%)</title><rect x="1072" y="180" width="23" height="15" fill="rgb(245,121,27)"/><text x="1075.00" y="190.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (20 samples, 1.83%)</title><rect x="1074" y="196" width="21" height="15" fill="rgb(210,9,25)"/><text x="1077.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (20 samples, 1.83%)</title><rect x="1074" y="212" width="21" height="15" fill="rgb(245,72,43)"/><text x="1077.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (20 samples, 1.83%)</title><rect x="1074" y="228" width="21" height="15" fill="rgb(254,108,12)"/><text x="1077.00" y="238.50"></text></g><g><title>array_argsort (methods.c) (20 samples, 1.83%)</title><rect x="1074" y="244" width="21" height="15" fill="rgb(214,82,23)"/><text x="1077.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (20 samples, 1.83%)</title><rect x="1074" y="260" width="21" height="15" fill="rgb(218,84,42)"/><text x="1077.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c) (20 samples, 1.83%)</title><rect x="1074" y="276" width="21" height="15" fill="rgb(205,77,43)"/><text x="1077.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src) (4 samples, 0.37%)</title><rect x="1091" y="292" width="4" height="15" fill="rgb(238,139,51)"/><text x="1094.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h) (3 samples, 0.27%)</title><rect x="1092" y="308" width="3" height="15" fill="rgb(236,215,16)"/><text x="1095.00" y="318.50"></text></g><g><title>0x7f530f0a3b20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1097" y="212" width="1" height="15" fill="rgb(247,125,15)"/><text x="1100.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1098" y="212" width="1" height="15" fill="rgb(210,11,4)"/><text x="1101.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1098" y="228" width="1" height="15" fill="rgb(225,221,49)"/><text x="1101.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1098" y="244" width="1" height="15" fill="rgb(251,219,1)"/><text x="1101.00" y="254.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="1098" y="260" width="1" height="15" fill="rgb(212,213,28)"/><text x="1101.00" y="270.50"></text></g><g><title>array_arange (multiarraymodule.c) (5 samples, 0.46%)</title><rect x="1095" y="180" width="6" height="15" fill="rgb(246,197,45)"/><text x="1098.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (4 samples, 0.37%)</title><rect x="1097" y="196" width="4" height="15" fill="rgb(232,184,36)"/><text x="1100.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (2 samples, 0.18%)</title><rect x="1099" y="212" width="2" height="15" fill="rgb(219,135,40)"/><text x="1102.00" y="222.50"></text></g><g><title>0x7f530f0a44c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1100" y="228" width="1" height="15" fill="rgb(241,13,7)"/><text x="1103.00" y="238.50"></text></g><g><title>array_argmax (methods.c) (3 samples, 0.27%)</title><rect x="1101" y="180" width="3" height="15" fill="rgb(244,227,43)"/><text x="1104.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c) (3 samples, 0.27%)</title><rect x="1101" y="196" width="3" height="15" fill="rgb(250,171,35)"/><text x="1104.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src) (3 samples, 0.27%)</title><rect x="1101" y="212" width="3" height="15" fill="rgb(248,127,54)"/><text x="1104.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="1104" y="180" width="1" height="15" fill="rgb(208,118,31)"/><text x="1107.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="1104" y="196" width="1" height="15" fill="rgb(210,161,34)"/><text x="1107.00" y="206.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.09%)</title><rect x="1105" y="180" width="1" height="15" fill="rgb(233,128,42)"/><text x="1108.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1105" y="196" width="1" height="15" fill="rgb(209,45,54)"/><text x="1108.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1105" y="212" width="1" height="15" fill="rgb(248,31,26)"/><text x="1108.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1105" y="228" width="1" height="15" fill="rgb(252,170,1)"/><text x="1108.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1105" y="244" width="1" height="15" fill="rgb(212,107,19)"/><text x="1108.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1105" y="260" width="1" height="15" fill="rgb(247,31,25)"/><text x="1108.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1105" y="276" width="1" height="15" fill="rgb(223,220,40)"/><text x="1108.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.09%)</title><rect x="1106" y="180" width="1" height="15" fill="rgb(239,178,35)"/><text x="1109.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1106" y="196" width="1" height="15" fill="rgb(215,146,32)"/><text x="1109.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1106" y="212" width="1" height="15" fill="rgb(237,48,26)"/><text x="1109.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1106" y="228" width="1" height="15" fill="rgb(234,67,42)"/><text x="1109.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1106" y="244" width="1" height="15" fill="rgb(232,94,9)"/><text x="1109.00" y="254.50"></text></g><g><title>DOUBLE_greater_equal (loops.c.src) (1 samples, 0.09%)</title><rect x="1106" y="260" width="1" height="15" fill="rgb(228,41,19)"/><text x="1109.00" y="270.50"></text></g><g><title>run_binary_simd_greater_equal_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1106" y="276" width="1" height="15" fill="rgb(226,169,52)"/><text x="1109.00" y="286.50"></text></g><g><title>sse2_binary_greater_equal_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1106" y="292" width="1" height="15" fill="rgb(232,206,34)"/><text x="1109.00" y="302.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src) (1 samples, 0.09%)</title><rect x="1106" y="308" width="1" height="15" fill="rgb(237,69,20)"/><text x="1109.00" y="318.50"></text></g><g><title>_mm_and_si128 (emmintrin.h) (1 samples, 0.09%)</title><rect x="1106" y="324" width="1" height="15" fill="rgb(247,147,0)"/><text x="1109.00" y="334.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (6 samples, 0.55%)</title><rect x="1107" y="196" width="7" height="15" fill="rgb(211,221,23)"/><text x="1110.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h) (3 samples, 0.27%)</title><rect x="1111" y="212" width="3" height="15" fill="rgb(224,179,35)"/><text x="1114.00" y="222.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.09%)</title><rect x="1114" y="212" width="1" height="15" fill="rgb(234,129,0)"/><text x="1117.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 0.27%)</title><rect x="1114" y="196" width="3" height="15" fill="rgb(254,40,3)"/><text x="1117.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.18%)</title><rect x="1115" y="212" width="2" height="15" fill="rgb(247,192,52)"/><text x="1118.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.18%)</title><rect x="1115" y="228" width="2" height="15" fill="rgb(249,79,29)"/><text x="1118.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1116" y="244" width="1" height="15" fill="rgb(236,18,46)"/><text x="1119.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1116" y="260" width="1" height="15" fill="rgb(210,108,33)"/><text x="1119.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="1116" y="276" width="1" height="15" fill="rgb(241,160,24)"/><text x="1119.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1116" y="292" width="1" height="15" fill="rgb(218,163,10)"/><text x="1119.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1116" y="308" width="1" height="15" fill="rgb(244,55,19)"/><text x="1119.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1116" y="324" width="1" height="15" fill="rgb(229,34,42)"/><text x="1119.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="1116" y="340" width="1" height="15" fill="rgb(218,180,31)"/><text x="1119.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1116" y="356" width="1" height="15" fill="rgb(213,99,7)"/><text x="1119.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="1117" y="196" width="1" height="15" fill="rgb(251,23,22)"/><text x="1120.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1117" y="212" width="1" height="15" fill="rgb(208,118,54)"/><text x="1120.00" y="222.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.09%)</title><rect x="1118" y="196" width="1" height="15" fill="rgb(247,201,11)"/><text x="1121.00" y="206.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.09%)</title><rect x="1118" y="212" width="1" height="15" fill="rgb(242,143,7)"/><text x="1121.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (3 samples, 0.27%)</title><rect x="1119" y="196" width="4" height="15" fill="rgb(238,9,36)"/><text x="1122.00" y="206.50"></text></g><g><title>array_subscript (mapping.c) (16 samples, 1.47%)</title><rect x="1107" y="180" width="18" height="15" fill="rgb(253,163,48)"/><text x="1110.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src) (2 samples, 0.18%)</title><rect x="1123" y="196" width="2" height="15" fill="rgb(218,217,6)"/><text x="1126.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h) (2 samples, 0.18%)</title><rect x="1123" y="212" width="2" height="15" fill="rgb(232,99,32)"/><text x="1126.00" y="222.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (1 samples, 0.09%)</title><rect x="1126" y="196" width="1" height="15" fill="rgb(219,193,28)"/><text x="1129.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.09%)</title><rect x="1126" y="212" width="1" height="15" fill="rgb(218,214,37)"/><text x="1129.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="1126" y="228" width="1" height="15" fill="rgb(254,73,20)"/><text x="1129.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="1126" y="244" width="1" height="15" fill="rgb(245,123,24)"/><text x="1129.00" y="254.50"></text></g><g><title>array_take (methods.c) (1 samples, 0.09%)</title><rect x="1127" y="196" width="1" height="15" fill="rgb(231,47,19)"/><text x="1130.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.09%)</title><rect x="1127" y="212" width="1" height="15" fill="rgb(219,162,46)"/><text x="1130.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.09%)</title><rect x="1127" y="228" width="1" height="15" fill="rgb(213,229,41)"/><text x="1130.00" y="238.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.09%)</title><rect x="1127" y="244" width="1" height="15" fill="rgb(228,47,38)"/><text x="1130.00" y="254.50"></text></g><g><title>0x7f530fea1dbb (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1132" y="356" width="1" height="15" fill="rgb(209,149,35)"/><text x="1135.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (6 samples, 0.55%)</title><rect x="1133" y="356" width="7" height="15" fill="rgb(249,1,22)"/><text x="1136.00" y="366.50"></text></g><g><title>PyArray_CumSum (calculation.c) (11 samples, 1.01%)</title><rect x="1129" y="276" width="12" height="15" fill="rgb(221,140,19)"/><text x="1132.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (11 samples, 1.01%)</title><rect x="1129" y="292" width="12" height="15" fill="rgb(210,145,6)"/><text x="1132.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (9 samples, 0.82%)</title><rect x="1131" y="308" width="10" height="15" fill="rgb(247,204,4)"/><text x="1134.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (9 samples, 0.82%)</title><rect x="1131" y="324" width="10" height="15" fill="rgb(207,43,51)"/><text x="1134.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (9 samples, 0.82%)</title><rect x="1131" y="340" width="10" height="15" fill="rgb(220,154,13)"/><text x="1134.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="1140" y="356" width="1" height="15" fill="rgb(235,147,50)"/><text x="1143.00" y="366.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (13 samples, 1.19%)</title><rect x="1128" y="196" width="14" height="15" fill="rgb(219,7,40)"/><text x="1131.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 1.19%)</title><rect x="1128" y="212" width="14" height="15" fill="rgb(235,227,20)"/><text x="1131.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (13 samples, 1.19%)</title><rect x="1128" y="228" width="14" height="15" fill="rgb(229,17,54)"/><text x="1131.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (12 samples, 1.10%)</title><rect x="1129" y="244" width="13" height="15" fill="rgb(245,124,39)"/><text x="1132.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (12 samples, 1.10%)</title><rect x="1129" y="260" width="13" height="15" fill="rgb(230,170,17)"/><text x="1132.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.09%)</title><rect x="1141" y="276" width="1" height="15" fill="rgb(246,181,43)"/><text x="1144.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.09%)</title><rect x="1147" y="308" width="1" height="15" fill="rgb(238,98,13)"/><text x="1150.00" y="318.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (6 samples, 0.55%)</title><rect x="1144" y="244" width="7" height="15" fill="rgb(212,166,47)"/><text x="1147.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.46%)</title><rect x="1145" y="260" width="6" height="15" fill="rgb(212,46,6)"/><text x="1148.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (5 samples, 0.46%)</title><rect x="1145" y="276" width="6" height="15" fill="rgb(231,153,19)"/><text x="1148.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 0.27%)</title><rect x="1147" y="292" width="4" height="15" fill="rgb(217,9,12)"/><text x="1150.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1148" y="308" width="3" height="15" fill="rgb(223,57,13)"/><text x="1151.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1148" y="324" width="3" height="15" fill="rgb(224,164,6)"/><text x="1151.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1148" y="340" width="3" height="15" fill="rgb(253,182,25)"/><text x="1151.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.18%)</title><rect x="1148" y="356" width="3" height="15" fill="rgb(209,71,18)"/><text x="1151.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.18%)</title><rect x="1148" y="372" width="3" height="15" fill="rgb(221,80,0)"/><text x="1151.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.09%)</title><rect x="1150" y="388" width="1" height="15" fill="rgb(254,149,31)"/><text x="1153.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.09%)</title><rect x="1151" y="260" width="1" height="15" fill="rgb(229,74,46)"/><text x="1154.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c) (1 samples, 0.09%)</title><rect x="1151" y="276" width="1" height="15" fill="rgb(240,139,3)"/><text x="1154.00" y="286.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (2 samples, 0.18%)</title><rect x="1151" y="244" width="2" height="15" fill="rgb(216,56,21)"/><text x="1154.00" y="254.50"></text></g><g><title>result_type (numpy/core/multiarray.py) (1 samples, 0.09%)</title><rect x="1152" y="260" width="1" height="15" fill="rgb(250,198,48)"/><text x="1155.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1153" y="244" width="1" height="15" fill="rgb(231,226,3)"/><text x="1156.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1153" y="260" width="1" height="15" fill="rgb(250,212,44)"/><text x="1156.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1153" y="276" width="1" height="15" fill="rgb(210,212,36)"/><text x="1156.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1153" y="292" width="1" height="15" fill="rgb(249,186,50)"/><text x="1156.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="1153" y="308" width="1" height="15" fill="rgb(217,147,16)"/><text x="1156.00" y="318.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (4 samples, 0.37%)</title><rect x="1155" y="260" width="4" height="15" fill="rgb(218,29,6)"/><text x="1158.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 0.27%)</title><rect x="1156" y="276" width="3" height="15" fill="rgb(207,72,47)"/><text x="1159.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1158" y="292" width="1" height="15" fill="rgb(245,220,49)"/><text x="1161.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1159" y="260" width="1" height="15" fill="rgb(235,79,10)"/><text x="1162.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.09%)</title><rect x="1159" y="276" width="1" height="15" fill="rgb(222,108,38)"/><text x="1162.00" y="286.50"></text></g><g><title>array_add (number.c) (1 samples, 0.09%)</title><rect x="1160" y="260" width="1" height="15" fill="rgb(251,178,54)"/><text x="1163.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1160" y="276" width="1" height="15" fill="rgb(233,60,15)"/><text x="1163.00" y="286.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1160" y="292" width="1" height="15" fill="rgb(240,48,28)"/><text x="1163.00" y="302.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1160" y="308" width="1" height="15" fill="rgb(217,218,39)"/><text x="1163.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="1161" y="260" width="1" height="15" fill="rgb(215,119,3)"/><text x="1164.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1161" y="276" width="1" height="15" fill="rgb(231,103,19)"/><text x="1164.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1161" y="292" width="1" height="15" fill="rgb(227,185,47)"/><text x="1164.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.09%)</title><rect x="1161" y="308" width="1" height="15" fill="rgb(216,113,7)"/><text x="1164.00" y="318.50"></text></g><g><title>0x7f530fe81ace (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1161" y="324" width="1" height="15" fill="rgb(248,102,17)"/><text x="1164.00" y="334.50"></text></g><g><title>PyUFunc_SubtractionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.09%)</title><rect x="1162" y="308" width="2" height="15" fill="rgb(229,226,15)"/><text x="1165.00" y="318.50"></text></g><g><title>array_subtract (number.c) (2 samples, 0.18%)</title><rect x="1162" y="260" width="3" height="15" fill="rgb(222,213,5)"/><text x="1165.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1162" y="276" width="3" height="15" fill="rgb(234,50,1)"/><text x="1165.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1162" y="292" width="3" height="15" fill="rgb(236,18,37)"/><text x="1165.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1164" y="308" width="1" height="15" fill="rgb(246,126,20)"/><text x="1167.00" y="318.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.09%)</title><rect x="1164" y="324" width="1" height="15" fill="rgb(248,114,0)"/><text x="1167.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1165" y="276" width="1" height="15" fill="rgb(223,128,51)"/><text x="1168.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1165" y="292" width="1" height="15" fill="rgb(222,25,42)"/><text x="1168.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.09%)</title><rect x="1165" y="308" width="1" height="15" fill="rgb(223,84,47)"/><text x="1168.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1165" y="324" width="1" height="15" fill="rgb(234,51,25)"/><text x="1168.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="1165" y="340" width="1" height="15" fill="rgb(244,17,11)"/><text x="1168.00" y="350.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (23 samples, 2.11%)</title><rect x="1142" y="196" width="25" height="15" fill="rgb(209,35,19)"/><text x="1145.00" y="206.50">i..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (22 samples, 2.01%)</title><rect x="1143" y="212" width="24" height="15" fill="rgb(217,127,37)"/><text x="1146.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py) (22 samples, 2.01%)</title><rect x="1143" y="228" width="24" height="15" fill="rgb(209,73,28)"/><text x="1146.00" y="238.50">i..</text></g><g><title>within_tol (numpy/core/numeric.py) (12 samples, 1.10%)</title><rect x="1154" y="244" width="13" height="15" fill="rgb(214,136,32)"/><text x="1157.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.18%)</title><rect x="1165" y="260" width="2" height="15" fill="rgb(227,216,0)"/><text x="1168.00" y="270.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.09%)</title><rect x="1166" y="276" width="1" height="15" fill="rgb(250,123,40)"/><text x="1169.00" y="286.50"></text></g><g><title>DOUBLE_add (loops.c.src) (4 samples, 0.37%)</title><rect x="1169" y="340" width="4" height="15" fill="rgb(232,78,2)"/><text x="1172.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (4 samples, 0.37%)</title><rect x="1169" y="356" width="4" height="15" fill="rgb(217,150,50)"/><text x="1172.00" y="366.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (220 samples, 20.15%)</title><rect x="938" y="164" width="237" height="15" fill="rgb(242,87,44)"/><text x="941.00" y="174.50">_get_median_predict (sklearn/en..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (47 samples, 4.30%)</title><rect x="1125" y="180" width="50" height="15" fill="rgb(248,113,2)"/><text x="1128.00" y="190.50">stabl..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (8 samples, 0.73%)</title><rect x="1167" y="196" width="8" height="15" fill="rgb(210,145,6)"/><text x="1170.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 0.73%)</title><rect x="1167" y="212" width="8" height="15" fill="rgb(225,43,16)"/><text x="1170.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (8 samples, 0.73%)</title><rect x="1167" y="228" width="8" height="15" fill="rgb(223,215,38)"/><text x="1170.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (7 samples, 0.64%)</title><rect x="1168" y="244" width="7" height="15" fill="rgb(221,159,7)"/><text x="1171.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (6 samples, 0.55%)</title><rect x="1169" y="260" width="6" height="15" fill="rgb(238,188,3)"/><text x="1172.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (6 samples, 0.55%)</title><rect x="1169" y="276" width="6" height="15" fill="rgb(205,30,8)"/><text x="1172.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (6 samples, 0.55%)</title><rect x="1169" y="292" width="6" height="15" fill="rgb(242,204,43)"/><text x="1172.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (6 samples, 0.55%)</title><rect x="1169" y="308" width="6" height="15" fill="rgb(219,119,9)"/><text x="1172.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c) (6 samples, 0.55%)</title><rect x="1169" y="324" width="6" height="15" fill="rgb(217,63,1)"/><text x="1172.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src) (2 samples, 0.18%)</title><rect x="1173" y="340" width="2" height="15" fill="rgb(238,180,1)"/><text x="1176.00" y="350.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.18%)</title><rect x="1177" y="196" width="2" height="15" fill="rgb(250,229,23)"/><text x="1180.00" y="206.50"></text></g><g><title>0x7f530ff5f130 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1179" y="212" width="1" height="15" fill="rgb(228,173,1)"/><text x="1182.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.18%)</title><rect x="1179" y="196" width="2" height="15" fill="rgb(235,112,24)"/><text x="1182.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="1180" y="212" width="1" height="15" fill="rgb(233,61,40)"/><text x="1183.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.27%)</title><rect x="1181" y="196" width="3" height="15" fill="rgb(254,21,25)"/><text x="1184.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.09%)</title><rect x="1184" y="196" width="1" height="15" fill="rgb(221,229,0)"/><text x="1187.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.09%)</title><rect x="1184" y="212" width="1" height="15" fill="rgb(221,171,47)"/><text x="1187.00" y="222.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (10 samples, 0.92%)</title><rect x="1175" y="164" width="11" height="15" fill="rgb(222,36,43)"/><text x="1178.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (10 samples, 0.92%)</title><rect x="1175" y="180" width="11" height="15" fill="rgb(217,92,47)"/><text x="1178.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.09%)</title><rect x="1185" y="196" width="1" height="15" fill="rgb(207,155,8)"/><text x="1188.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.09%)</title><rect x="1185" y="212" width="1" height="15" fill="rgb(218,50,43)"/><text x="1188.00" y="222.50"></text></g><g><title>all (1,092 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(238,68,48)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (1,092 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(229,39,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (235 samples, 21.52%)</title><rect x="936" y="68" width="254" height="15" fill="rgb(218,181,19)"/><text x="939.00" y="78.50">profile_skl (bench_AdaBoostRegres..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (235 samples, 21.52%)</title><rect x="936" y="84" width="254" height="15" fill="rgb(222,173,15)"/><text x="939.00" y="94.50">setup_profile (bench_AdaBoostRegr..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1000_4_12_float_.py) (235 samples, 21.52%)</title><rect x="936" y="100" width="254" height="15" fill="rgb(252,68,23)"/><text x="939.00" y="110.50">profile (bench_AdaBoostRegressor_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (234 samples, 21.43%)</title><rect x="937" y="116" width="253" height="15" fill="rgb(246,117,22)"/><text x="940.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (234 samples, 21.43%)</title><rect x="937" y="132" width="253" height="15" fill="rgb(248,205,39)"/><text x="940.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (234 samples, 21.43%)</title><rect x="937" y="148" width="253" height="15" fill="rgb(211,215,44)"/><text x="940.00" y="158.50">predict (sklearn/ensemble/_weight..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.27%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(218,159,30)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (3 samples, 0.27%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(205,10,34)"/><text x="1189.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.09%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(254,104,29)"/><text x="1191.00" y="206.50"></text></g></g></svg>