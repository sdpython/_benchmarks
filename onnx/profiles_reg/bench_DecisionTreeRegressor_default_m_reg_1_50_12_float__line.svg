<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1478" onload="init(evt)" viewBox="0 0 1200 1478" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1478" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1461.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1461.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:1) (1 samples, 0.45%)</title><rect x="10" y="148" width="5" height="15" fill="rgb(248,149,41)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="10" y="164" width="5" height="15" fill="rgb(242,133,0)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="10" y="180" width="5" height="15" fill="rgb(233,98,39)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(217,159,50)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(221,213,37)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(224,30,54)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.45%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(246,20,53)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(213,140,32)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(214,39,33)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(210,119,27)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(233,57,5)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(229,70,41)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(210,21,19)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(226,102,27)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.45%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(237,128,29)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(235,109,31)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(205,191,36)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(221,122,42)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(214,0,14)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(224,191,27)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(244,179,11)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(218,152,17)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:78) (1 samples, 0.45%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(243,201,24)"/><text x="13.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:203) (1 samples, 0.45%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(221,60,31)"/><text x="13.00" y="526.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.45%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(216,74,14)"/><text x="13.00" y="542.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.45%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(230,82,15)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.45%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(217,36,24)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.45%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(238,163,12)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.45%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(217,162,23)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.45%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(234,160,9)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.45%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(234,9,2)"/><text x="18.00" y="1006.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.45%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(216,199,50)"/><text x="18.00" y="1022.50"></text></g><g><title>0x7f3186093734 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="15" y="1028" width="5" height="15" fill="rgb(211,36,32)"/><text x="18.00" y="1038.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2125) (1 samples, 0.45%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(212,97,3)"/><text x="23.00" y="942.50"></text></g><g><title>dirname (posixpath.py:158) (1 samples, 0.45%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(219,100,26)"/><text x="23.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.45%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(223,1,48)"/><text x="23.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (3 samples, 1.34%)</title><rect x="15" y="852" width="16" height="15" fill="rgb(208,136,9)"/><text x="18.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (3 samples, 1.34%)</title><rect x="15" y="868" width="16" height="15" fill="rgb(249,143,29)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (3 samples, 1.34%)</title><rect x="15" y="884" width="16" height="15" fill="rgb(242,93,8)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.34%)</title><rect x="15" y="900" width="16" height="15" fill="rgb(251,142,11)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.89%)</title><rect x="20" y="916" width="11" height="15" fill="rgb(234,27,39)"/><text x="23.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.45%)</title><rect x="25" y="932" width="6" height="15" fill="rgb(218,110,33)"/><text x="28.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.45%)</title><rect x="25" y="948" width="6" height="15" fill="rgb(205,125,16)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.45%)</title><rect x="25" y="964" width="6" height="15" fill="rgb(222,170,54)"/><text x="28.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.45%)</title><rect x="25" y="980" width="6" height="15" fill="rgb(213,8,53)"/><text x="28.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.45%)</title><rect x="25" y="996" width="6" height="15" fill="rgb(248,117,38)"/><text x="28.00" y="1006.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:367) (1 samples, 0.45%)</title><rect x="25" y="1012" width="6" height="15" fill="rgb(228,48,36)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="15" y="596" width="26" height="15" fill="rgb(224,195,41)"/><text x="18.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.23%)</title><rect x="15" y="612" width="26" height="15" fill="rgb(253,92,9)"/><text x="18.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="15" y="628" width="26" height="15" fill="rgb(214,124,4)"/><text x="18.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="15" y="644" width="26" height="15" fill="rgb(225,25,48)"/><text x="18.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="15" y="660" width="26" height="15" fill="rgb(224,87,43)"/><text x="18.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="15" y="676" width="26" height="15" fill="rgb(212,86,27)"/><text x="18.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="15" y="692" width="26" height="15" fill="rgb(252,185,23)"/><text x="18.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="15" y="708" width="26" height="15" fill="rgb(209,222,18)"/><text x="18.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 2.23%)</title><rect x="15" y="724" width="26" height="15" fill="rgb(234,203,20)"/><text x="18.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="15" y="740" width="26" height="15" fill="rgb(230,186,48)"/><text x="18.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="15" y="756" width="26" height="15" fill="rgb(243,225,38)"/><text x="18.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="15" y="772" width="26" height="15" fill="rgb(216,154,33)"/><text x="18.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="15" y="788" width="26" height="15" fill="rgb(242,5,2)"/><text x="18.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="15" y="804" width="26" height="15" fill="rgb(218,148,32)"/><text x="18.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 2.23%)</title><rect x="15" y="820" width="26" height="15" fill="rgb(240,68,6)"/><text x="18.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 2.23%)</title><rect x="15" y="836" width="26" height="15" fill="rgb(211,13,44)"/><text x="18.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.89%)</title><rect x="31" y="852" width="10" height="15" fill="rgb(207,186,4)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.89%)</title><rect x="31" y="868" width="10" height="15" fill="rgb(209,46,27)"/><text x="34.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.89%)</title><rect x="31" y="884" width="10" height="15" fill="rgb(216,13,27)"/><text x="34.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.89%)</title><rect x="31" y="900" width="10" height="15" fill="rgb(211,162,31)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.89%)</title><rect x="31" y="916" width="10" height="15" fill="rgb(223,22,25)"/><text x="34.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.89%)</title><rect x="31" y="932" width="10" height="15" fill="rgb(248,207,22)"/><text x="34.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.89%)</title><rect x="31" y="948" width="10" height="15" fill="rgb(223,37,25)"/><text x="34.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.89%)</title><rect x="31" y="964" width="10" height="15" fill="rgb(246,219,23)"/><text x="34.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.89%)</title><rect x="31" y="980" width="10" height="15" fill="rgb(243,178,19)"/><text x="34.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.89%)</title><rect x="31" y="996" width="10" height="15" fill="rgb(205,71,28)"/><text x="34.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.89%)</title><rect x="31" y="1012" width="10" height="15" fill="rgb(239,215,15)"/><text x="34.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.45%)</title><rect x="36" y="1028" width="5" height="15" fill="rgb(234,14,28)"/><text x="39.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (6 samples, 2.68%)</title><rect x="15" y="148" width="31" height="15" fill="rgb(250,28,45)"/><text x="18.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.68%)</title><rect x="15" y="164" width="31" height="15" fill="rgb(244,10,47)"/><text x="18.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.68%)</title><rect x="15" y="180" width="31" height="15" fill="rgb(223,161,37)"/><text x="18.00" y="190.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.68%)</title><rect x="15" y="196" width="31" height="15" fill="rgb(236,97,18)"/><text x="18.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.68%)</title><rect x="15" y="212" width="31" height="15" fill="rgb(238,182,26)"/><text x="18.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.68%)</title><rect x="15" y="228" width="31" height="15" fill="rgb(216,214,29)"/><text x="18.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.68%)</title><rect x="15" y="244" width="31" height="15" fill="rgb(212,80,38)"/><text x="18.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.68%)</title><rect x="15" y="260" width="31" height="15" fill="rgb(243,106,42)"/><text x="18.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.68%)</title><rect x="15" y="276" width="31" height="15" fill="rgb(224,193,50)"/><text x="18.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.68%)</title><rect x="15" y="292" width="31" height="15" fill="rgb(211,81,42)"/><text x="18.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.68%)</title><rect x="15" y="308" width="31" height="15" fill="rgb(252,201,39)"/><text x="18.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.68%)</title><rect x="15" y="324" width="31" height="15" fill="rgb(250,71,26)"/><text x="18.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.68%)</title><rect x="15" y="340" width="31" height="15" fill="rgb(251,207,15)"/><text x="18.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.68%)</title><rect x="15" y="356" width="31" height="15" fill="rgb(209,120,2)"/><text x="18.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.68%)</title><rect x="15" y="372" width="31" height="15" fill="rgb(231,35,52)"/><text x="18.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.68%)</title><rect x="15" y="388" width="31" height="15" fill="rgb(239,191,1)"/><text x="18.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.68%)</title><rect x="15" y="404" width="31" height="15" fill="rgb(212,44,9)"/><text x="18.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.68%)</title><rect x="15" y="420" width="31" height="15" fill="rgb(207,30,46)"/><text x="18.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.68%)</title><rect x="15" y="436" width="31" height="15" fill="rgb(238,200,38)"/><text x="18.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.68%)</title><rect x="15" y="452" width="31" height="15" fill="rgb(252,137,1)"/><text x="18.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.68%)</title><rect x="15" y="468" width="31" height="15" fill="rgb(237,3,30)"/><text x="18.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.68%)</title><rect x="15" y="484" width="31" height="15" fill="rgb(235,18,6)"/><text x="18.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.68%)</title><rect x="15" y="500" width="31" height="15" fill="rgb(224,108,34)"/><text x="18.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.68%)</title><rect x="15" y="516" width="31" height="15" fill="rgb(236,211,3)"/><text x="18.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.68%)</title><rect x="15" y="532" width="31" height="15" fill="rgb(250,175,15)"/><text x="18.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.68%)</title><rect x="15" y="548" width="31" height="15" fill="rgb(240,3,43)"/><text x="18.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.68%)</title><rect x="15" y="564" width="31" height="15" fill="rgb(225,189,41)"/><text x="18.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.68%)</title><rect x="15" y="580" width="31" height="15" fill="rgb(252,88,38)"/><text x="18.00" y="590.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="41" y="596" width="5" height="15" fill="rgb(244,193,19)"/><text x="44.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="612" width="5" height="15" fill="rgb(221,181,30)"/><text x="44.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="628" width="5" height="15" fill="rgb(214,38,50)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="644" width="5" height="15" fill="rgb(219,181,2)"/><text x="44.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="660" width="5" height="15" fill="rgb(205,219,39)"/><text x="44.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="676" width="5" height="15" fill="rgb(245,124,7)"/><text x="44.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="692" width="5" height="15" fill="rgb(249,132,51)"/><text x="44.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/internal/enum_type_wrapper.py:40) (1 samples, 0.45%)</title><rect x="41" y="708" width="5" height="15" fill="rgb(212,49,6)"/><text x="44.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="724" width="5" height="15" fill="rgb(238,17,44)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="740" width="5" height="15" fill="rgb(220,67,10)"/><text x="44.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="756" width="5" height="15" fill="rgb(230,140,2)"/><text x="44.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="772" width="5" height="15" fill="rgb(238,217,7)"/><text x="44.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="788" width="5" height="15" fill="rgb(210,171,43)"/><text x="44.00" y="798.50"></text></g><g><title>&lt;module&gt; (six.py:737) (1 samples, 0.45%)</title><rect x="41" y="804" width="5" height="15" fill="rgb(231,152,9)"/><text x="44.00" y="814.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:755) (1 samples, 0.45%)</title><rect x="46" y="1140" width="6" height="15" fill="rgb(212,52,18)"/><text x="49.00" y="1150.50"></text></g><g><title>_flex_method_SERIES (pandas/core/ops/__init__.py:1335) (1 samples, 0.45%)</title><rect x="46" y="1156" width="6" height="15" fill="rgb(213,32,28)"/><text x="49.00" y="1166.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.45%)</title><rect x="46" y="1172" width="6" height="15" fill="rgb(218,132,4)"/><text x="49.00" y="1182.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.45%)</title><rect x="46" y="1188" width="6" height="15" fill="rgb(209,203,11)"/><text x="49.00" y="1198.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.45%)</title><rect x="46" y="1204" width="6" height="15" fill="rgb(220,93,9)"/><text x="49.00" y="1214.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.45%)</title><rect x="46" y="1220" width="6" height="15" fill="rgb(231,115,33)"/><text x="49.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.89%)</title><rect x="46" y="436" width="11" height="15" fill="rgb(252,24,33)"/><text x="49.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="452" width="11" height="15" fill="rgb(227,86,13)"/><text x="49.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="468" width="11" height="15" fill="rgb(221,25,49)"/><text x="49.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="484" width="11" height="15" fill="rgb(210,104,30)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="500" width="11" height="15" fill="rgb(249,55,48)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="516" width="11" height="15" fill="rgb(216,150,8)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.89%)</title><rect x="46" y="532" width="11" height="15" fill="rgb(213,199,28)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="548" width="11" height="15" fill="rgb(233,123,27)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="564" width="11" height="15" fill="rgb(227,66,8)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="580" width="11" height="15" fill="rgb(213,106,11)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="596" width="11" height="15" fill="rgb(206,69,24)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="612" width="11" height="15" fill="rgb(213,32,40)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.89%)</title><rect x="46" y="628" width="11" height="15" fill="rgb(223,34,30)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="644" width="11" height="15" fill="rgb(216,195,41)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="660" width="11" height="15" fill="rgb(237,62,3)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="676" width="11" height="15" fill="rgb(243,193,18)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="692" width="11" height="15" fill="rgb(243,165,36)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="708" width="11" height="15" fill="rgb(213,122,16)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.89%)</title><rect x="46" y="724" width="11" height="15" fill="rgb(231,104,33)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="740" width="11" height="15" fill="rgb(245,201,48)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="756" width="11" height="15" fill="rgb(228,92,34)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="772" width="11" height="15" fill="rgb(211,75,27)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="788" width="11" height="15" fill="rgb(230,0,43)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="804" width="11" height="15" fill="rgb(252,208,38)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.89%)</title><rect x="46" y="820" width="11" height="15" fill="rgb(242,154,53)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="836" width="11" height="15" fill="rgb(211,61,42)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="852" width="11" height="15" fill="rgb(253,132,39)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="868" width="11" height="15" fill="rgb(239,159,46)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="884" width="11" height="15" fill="rgb(245,188,47)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="900" width="11" height="15" fill="rgb(208,96,22)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.89%)</title><rect x="46" y="916" width="11" height="15" fill="rgb(253,186,18)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="932" width="11" height="15" fill="rgb(218,64,39)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="948" width="11" height="15" fill="rgb(210,29,53)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="964" width="11" height="15" fill="rgb(244,80,43)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="980" width="11" height="15" fill="rgb(227,207,27)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="996" width="11" height="15" fill="rgb(216,84,11)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.89%)</title><rect x="46" y="1012" width="11" height="15" fill="rgb(246,137,14)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="46" y="1028" width="11" height="15" fill="rgb(252,55,45)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="46" y="1044" width="11" height="15" fill="rgb(212,171,25)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="46" y="1060" width="11" height="15" fill="rgb(207,210,31)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="46" y="1076" width="11" height="15" fill="rgb(252,201,5)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="46" y="1092" width="11" height="15" fill="rgb(251,139,35)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:4895) (2 samples, 0.89%)</title><rect x="46" y="1108" width="11" height="15" fill="rgb(243,169,10)"/><text x="49.00" y="1118.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (2 samples, 0.89%)</title><rect x="46" y="1124" width="11" height="15" fill="rgb(218,178,50)"/><text x="49.00" y="1134.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:761) (1 samples, 0.45%)</title><rect x="52" y="1140" width="5" height="15" fill="rgb(221,218,11)"/><text x="55.00" y="1150.50"></text></g><g><title>_flex_method_SERIES (pandas/core/ops/__init__.py:1335) (1 samples, 0.45%)</title><rect x="52" y="1156" width="5" height="15" fill="rgb(249,110,52)"/><text x="55.00" y="1166.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.45%)</title><rect x="52" y="1172" width="5" height="15" fill="rgb(220,143,8)"/><text x="55.00" y="1182.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.45%)</title><rect x="52" y="1188" width="5" height="15" fill="rgb(211,159,19)"/><text x="55.00" y="1198.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.45%)</title><rect x="52" y="1204" width="5" height="15" fill="rgb(212,215,43)"/><text x="55.00" y="1214.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.45%)</title><rect x="57" y="1108" width="5" height="15" fill="rgb(250,111,19)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="1124" width="5" height="15" fill="rgb(219,133,41)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="1140" width="5" height="15" fill="rgb(241,182,53)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="1156" width="5" height="15" fill="rgb(244,47,12)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="1172" width="5" height="15" fill="rgb(228,228,18)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1188" width="5" height="15" fill="rgb(211,26,24)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.45%)</title><rect x="57" y="1204" width="5" height="15" fill="rgb(249,79,37)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="1220" width="5" height="15" fill="rgb(228,124,16)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="1236" width="5" height="15" fill="rgb(217,142,19)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="1252" width="5" height="15" fill="rgb(211,97,40)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="1268" width="5" height="15" fill="rgb(241,50,15)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1284" width="5" height="15" fill="rgb(227,217,47)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.45%)</title><rect x="57" y="1300" width="5" height="15" fill="rgb(222,188,5)"/><text x="60.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.45%)</title><rect x="57" y="1316" width="5" height="15" fill="rgb(247,49,9)"/><text x="60.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.45%)</title><rect x="57" y="1332" width="5" height="15" fill="rgb(230,216,24)"/><text x="60.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.45%)</title><rect x="57" y="1348" width="5" height="15" fill="rgb(212,100,22)"/><text x="60.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.45%)</title><rect x="57" y="1364" width="5" height="15" fill="rgb(227,118,5)"/><text x="60.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.45%)</title><rect x="57" y="1380" width="5" height="15" fill="rgb(245,79,8)"/><text x="60.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.45%)</title><rect x="57" y="1396" width="5" height="15" fill="rgb(223,72,31)"/><text x="60.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.45%)</title><rect x="57" y="1412" width="5" height="15" fill="rgb(238,22,54)"/><text x="60.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.45%)</title><rect x="57" y="1428" width="5" height="15" fill="rgb(207,152,32)"/><text x="60.00" y="1438.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.45%)</title><rect x="62" y="1108" width="5" height="15" fill="rgb(218,99,12)"/><text x="65.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="62" y="1124" width="5" height="15" fill="rgb(252,57,26)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="62" y="1140" width="5" height="15" fill="rgb(208,192,40)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="62" y="1156" width="5" height="15" fill="rgb(248,39,43)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="62" y="1172" width="5" height="15" fill="rgb(234,52,31)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="62" y="1188" width="5" height="15" fill="rgb(247,30,17)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.45%)</title><rect x="62" y="1204" width="5" height="15" fill="rgb(205,116,9)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="62" y="1220" width="5" height="15" fill="rgb(205,99,48)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="62" y="1236" width="5" height="15" fill="rgb(242,65,44)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="62" y="1252" width="5" height="15" fill="rgb(222,173,11)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="62" y="1268" width="5" height="15" fill="rgb(228,36,3)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="62" y="1284" width="5" height="15" fill="rgb(235,200,46)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:42) (1 samples, 0.45%)</title><rect x="62" y="1300" width="5" height="15" fill="rgb(211,194,41)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="62" y="1316" width="5" height="15" fill="rgb(205,28,2)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="62" y="1332" width="5" height="15" fill="rgb(243,73,23)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="62" y="1348" width="5" height="15" fill="rgb(241,35,36)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="62" y="1364" width="5" height="15" fill="rgb(227,88,48)"/><text x="65.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="62" y="1380" width="5" height="15" fill="rgb(239,67,36)"/><text x="65.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/discriminant_analysis.py:20) (1 samples, 0.45%)</title><rect x="62" y="1396" width="5" height="15" fill="rgb(206,143,28)"/><text x="65.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.45%)</title><rect x="62" y="1412" width="5" height="15" fill="rgb(221,151,28)"/><text x="65.00" y="1422.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:144) (1 samples, 0.45%)</title><rect x="62" y="1428" width="5" height="15" fill="rgb(233,98,35)"/><text x="65.00" y="1438.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:4) (12 samples, 5.36%)</title><rect x="10" y="52" width="63" height="15" fill="rgb(243,122,34)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 5.36%)</title><rect x="10" y="68" width="63" height="15" fill="rgb(209,226,42)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 5.36%)</title><rect x="10" y="84" width="63" height="15" fill="rgb(206,12,50)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 5.36%)</title><rect x="10" y="100" width="63" height="15" fill="rgb(227,107,11)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 5.36%)</title><rect x="10" y="116" width="63" height="15" fill="rgb(213,6,49)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 5.36%)</title><rect x="10" y="132" width="63" height="15" fill="rgb(242,39,53)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (5 samples, 2.23%)</title><rect x="46" y="148" width="27" height="15" fill="rgb(230,159,17)"/><text x="49.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="164" width="27" height="15" fill="rgb(232,151,25)"/><text x="49.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="46" y="180" width="27" height="15" fill="rgb(221,206,24)"/><text x="49.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="46" y="196" width="27" height="15" fill="rgb(216,49,15)"/><text x="49.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="46" y="212" width="27" height="15" fill="rgb(248,178,54)"/><text x="49.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="228" width="27" height="15" fill="rgb(214,8,40)"/><text x="49.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.23%)</title><rect x="46" y="244" width="27" height="15" fill="rgb(213,19,4)"/><text x="49.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="260" width="27" height="15" fill="rgb(207,40,21)"/><text x="49.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="46" y="276" width="27" height="15" fill="rgb(213,119,34)"/><text x="49.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="46" y="292" width="27" height="15" fill="rgb(222,174,50)"/><text x="49.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="46" y="308" width="27" height="15" fill="rgb(245,46,34)"/><text x="49.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="324" width="27" height="15" fill="rgb(254,214,29)"/><text x="49.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.23%)</title><rect x="46" y="340" width="27" height="15" fill="rgb(217,118,27)"/><text x="49.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="356" width="27" height="15" fill="rgb(227,52,14)"/><text x="49.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="46" y="372" width="27" height="15" fill="rgb(234,217,50)"/><text x="49.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="46" y="388" width="27" height="15" fill="rgb(248,119,9)"/><text x="49.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="46" y="404" width="27" height="15" fill="rgb(217,152,35)"/><text x="49.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="420" width="27" height="15" fill="rgb(227,82,34)"/><text x="49.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.34%)</title><rect x="57" y="436" width="16" height="15" fill="rgb(247,150,5)"/><text x="60.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="452" width="16" height="15" fill="rgb(254,124,2)"/><text x="60.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.34%)</title><rect x="57" y="468" width="16" height="15" fill="rgb(225,131,37)"/><text x="60.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="484" width="16" height="15" fill="rgb(246,176,11)"/><text x="60.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="500" width="16" height="15" fill="rgb(235,29,23)"/><text x="60.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="57" y="516" width="16" height="15" fill="rgb(218,12,48)"/><text x="60.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="57" y="532" width="16" height="15" fill="rgb(227,39,10)"/><text x="60.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="57" y="548" width="16" height="15" fill="rgb(231,152,2)"/><text x="60.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="564" width="16" height="15" fill="rgb(233,29,20)"/><text x="60.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.34%)</title><rect x="57" y="580" width="16" height="15" fill="rgb(215,64,45)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="596" width="16" height="15" fill="rgb(250,176,36)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="57" y="612" width="16" height="15" fill="rgb(215,22,42)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="57" y="628" width="16" height="15" fill="rgb(222,22,9)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="57" y="644" width="16" height="15" fill="rgb(248,201,41)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="660" width="16" height="15" fill="rgb(228,217,19)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.34%)</title><rect x="57" y="676" width="16" height="15" fill="rgb(240,183,51)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="692" width="16" height="15" fill="rgb(215,37,54)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="57" y="708" width="16" height="15" fill="rgb(231,85,49)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="57" y="724" width="16" height="15" fill="rgb(206,44,49)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="57" y="740" width="16" height="15" fill="rgb(226,131,24)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="756" width="16" height="15" fill="rgb(223,101,7)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.34%)</title><rect x="57" y="772" width="16" height="15" fill="rgb(245,168,34)"/><text x="60.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="788" width="16" height="15" fill="rgb(210,27,27)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="57" y="804" width="16" height="15" fill="rgb(223,32,30)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="57" y="820" width="16" height="15" fill="rgb(239,127,49)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="57" y="836" width="16" height="15" fill="rgb(223,191,43)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="852" width="16" height="15" fill="rgb(249,1,19)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.34%)</title><rect x="57" y="868" width="16" height="15" fill="rgb(229,97,46)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="884" width="16" height="15" fill="rgb(234,145,49)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.34%)</title><rect x="57" y="900" width="16" height="15" fill="rgb(248,110,32)"/><text x="60.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="916" width="16" height="15" fill="rgb(216,71,38)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="932" width="16" height="15" fill="rgb(226,93,45)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="57" y="948" width="16" height="15" fill="rgb(237,25,26)"/><text x="60.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="57" y="964" width="16" height="15" fill="rgb(206,78,16)"/><text x="60.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="57" y="980" width="16" height="15" fill="rgb(212,24,21)"/><text x="60.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="996" width="16" height="15" fill="rgb(217,86,36)"/><text x="60.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.34%)</title><rect x="57" y="1012" width="16" height="15" fill="rgb(221,222,22)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="57" y="1028" width="16" height="15" fill="rgb(219,90,33)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="57" y="1044" width="16" height="15" fill="rgb(228,60,21)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="57" y="1060" width="16" height="15" fill="rgb(237,136,1)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="57" y="1076" width="16" height="15" fill="rgb(214,224,43)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="57" y="1092" width="16" height="15" fill="rgb(220,122,39)"/><text x="60.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.45%)</title><rect x="67" y="1108" width="6" height="15" fill="rgb(221,95,42)"/><text x="70.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="67" y="1124" width="6" height="15" fill="rgb(245,204,32)"/><text x="70.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="67" y="1140" width="6" height="15" fill="rgb(250,174,4)"/><text x="70.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="67" y="1156" width="6" height="15" fill="rgb(234,121,4)"/><text x="70.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="67" y="1172" width="6" height="15" fill="rgb(245,158,15)"/><text x="70.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="67" y="1188" width="6" height="15" fill="rgb(245,188,49)"/><text x="70.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="67" y="1204" width="6" height="15" fill="rgb(229,184,10)"/><text x="70.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="67" y="1220" width="6" height="15" fill="rgb(252,193,12)"/><text x="70.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:34) (1 samples, 0.45%)</title><rect x="67" y="1236" width="6" height="15" fill="rgb(248,228,8)"/><text x="70.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="67" y="1252" width="6" height="15" fill="rgb(211,75,18)"/><text x="70.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="67" y="1268" width="6" height="15" fill="rgb(247,109,43)"/><text x="70.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="67" y="1284" width="6" height="15" fill="rgb(211,187,22)"/><text x="70.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="67" y="1300" width="6" height="15" fill="rgb(253,172,12)"/><text x="70.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="67" y="1316" width="6" height="15" fill="rgb(254,66,31)"/><text x="70.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="67" y="1332" width="6" height="15" fill="rgb(251,19,22)"/><text x="70.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:848) (1 samples, 0.45%)</title><rect x="67" y="1348" width="6" height="15" fill="rgb(212,190,39)"/><text x="70.00" y="1358.50"></text></g><g><title>_validate_timestamp_pyc (&lt;frozen importlib._bootstrap_external&gt;:490) (1 samples, 0.45%)</title><rect x="67" y="1364" width="6" height="15" fill="rgb(216,161,36)"/><text x="70.00" y="1374.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:934) (1 samples, 0.45%)</title><rect x="94" y="164" width="5" height="15" fill="rgb(247,170,52)"/><text x="97.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.45%)</title><rect x="120" y="180" width="5" height="15" fill="rgb(252,216,53)"/><text x="123.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.89%)</title><rect x="146" y="196" width="11" height="15" fill="rgb(227,132,14)"/><text x="149.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 4.46%)</title><rect x="125" y="180" width="53" height="15" fill="rgb(218,34,39)"/><text x="128.00" y="190.50">&lt;list..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.79%)</title><rect x="157" y="196" width="21" height="15" fill="rgb(221,181,30)"/><text x="160.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (18 samples, 8.04%)</title><rect x="89" y="148" width="94" height="15" fill="rgb(242,173,1)"/><text x="92.00" y="158.50">predict (sk..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 7.14%)</title><rect x="99" y="164" width="84" height="15" fill="rgb(220,214,45)"/><text x="102.00" y="174.50">check_is_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.45%)</title><rect x="178" y="180" width="5" height="15" fill="rgb(206,225,52)"/><text x="181.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.45%)</title><rect x="178" y="196" width="5" height="15" fill="rgb(230,165,36)"/><text x="181.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.45%)</title><rect x="189" y="180" width="5" height="15" fill="rgb(209,17,23)"/><text x="192.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.45%)</title><rect x="194" y="180" width="5" height="15" fill="rgb(254,216,2)"/><text x="197.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (6 samples, 2.68%)</title><rect x="199" y="180" width="32" height="15" fill="rgb(239,214,49)"/><text x="202.00" y="190.50">ch..</text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.89%)</title><rect x="220" y="196" width="11" height="15" fill="rgb(241,98,36)"/><text x="223.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.45%)</title><rect x="257" y="196" width="5" height="15" fill="rgb(228,226,7)"/><text x="260.00" y="206.50"></text></g><g><title>__init__ (warnings.py:453) (1 samples, 0.45%)</title><rect x="262" y="196" width="6" height="15" fill="rgb(230,6,18)"/><text x="265.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.89%)</title><rect x="268" y="196" width="10" height="15" fill="rgb(239,118,3)"/><text x="271.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.45%)</title><rect x="278" y="196" width="5" height="15" fill="rgb(249,228,12)"/><text x="281.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 4.91%)</title><rect x="231" y="180" width="58" height="15" fill="rgb(212,17,1)"/><text x="234.00" y="190.50">check_..</text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.45%)</title><rect x="283" y="196" width="6" height="15" fill="rgb(251,38,53)"/><text x="286.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.45%)</title><rect x="294" y="196" width="5" height="15" fill="rgb(206,30,54)"/><text x="297.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (5 samples, 2.23%)</title><rect x="299" y="212" width="27" height="15" fill="rgb(237,30,44)"/><text x="302.00" y="222.50">_..</text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.45%)</title><rect x="326" y="212" width="5" height="15" fill="rgb(245,63,1)"/><text x="329.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (9 samples, 4.02%)</title><rect x="289" y="180" width="47" height="15" fill="rgb(219,188,25)"/><text x="292.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 3.12%)</title><rect x="299" y="196" width="37" height="15" fill="rgb(211,167,28)"/><text x="302.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.45%)</title><rect x="331" y="212" width="5" height="15" fill="rgb(244,35,49)"/><text x="334.00" y="222.50"></text></g><g><title>0x7f318609e124 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="347" y="196" width="5" height="15" fill="rgb(233,225,5)"/><text x="350.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (5 samples, 2.23%)</title><rect x="336" y="180" width="26" height="15" fill="rgb(222,129,42)"/><text x="339.00" y="190.50">c..</text></g><g><title>arraydescr_new (descriptor.c:2270) (2 samples, 0.89%)</title><rect x="352" y="196" width="10" height="15" fill="rgb(225,4,13)"/><text x="355.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.45%)</title><rect x="368" y="212" width="5" height="15" fill="rgb(225,123,24)"/><text x="371.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 1.34%)</title><rect x="362" y="180" width="16" height="15" fill="rgb(225,61,31)"/><text x="365.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 1.34%)</title><rect x="362" y="196" width="16" height="15" fill="rgb(212,32,18)"/><text x="365.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.45%)</title><rect x="373" y="212" width="5" height="15" fill="rgb(218,16,31)"/><text x="376.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (2 samples, 0.89%)</title><rect x="405" y="196" width="10" height="15" fill="rgb(224,157,33)"/><text x="408.00" y="206.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.45%)</title><rect x="415" y="196" width="5" height="15" fill="rgb(227,40,49)"/><text x="418.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (9 samples, 4.02%)</title><rect x="378" y="180" width="48" height="15" fill="rgb(207,42,32)"/><text x="381.00" y="190.50">chec..</text></g><g><title>__exit__ (warnings.py:498) (1 samples, 0.45%)</title><rect x="420" y="196" width="6" height="15" fill="rgb(227,65,18)"/><text x="423.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.45%)</title><rect x="426" y="196" width="5" height="15" fill="rgb(245,213,17)"/><text x="429.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.89%)</title><rect x="426" y="180" width="10" height="15" fill="rgb(245,57,39)"/><text x="429.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.45%)</title><rect x="431" y="196" width="5" height="15" fill="rgb(249,210,11)"/><text x="434.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.89%)</title><rect x="463" y="212" width="10" height="15" fill="rgb(251,110,7)"/><text x="466.00" y="222.50"></text></g><g><title>0x7f3186093e50 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="468" y="228" width="5" height="15" fill="rgb(242,227,36)"/><text x="471.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.45%)</title><rect x="473" y="212" width="5" height="15" fill="rgb(236,88,29)"/><text x="476.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (9 samples, 4.02%)</title><rect x="436" y="196" width="48" height="15" fill="rgb(208,104,44)"/><text x="439.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.45%)</title><rect x="478" y="212" width="6" height="15" fill="rgb(232,137,49)"/><text x="481.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (12 samples, 5.36%)</title><rect x="436" y="180" width="63" height="15" fill="rgb(249,118,5)"/><text x="439.00" y="190.50">check_..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (3 samples, 1.34%)</title><rect x="484" y="196" width="15" height="15" fill="rgb(207,111,44)"/><text x="487.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (3 samples, 1.34%)</title><rect x="505" y="196" width="15" height="15" fill="rgb(208,70,40)"/><text x="508.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (2 samples, 0.89%)</title><rect x="520" y="196" width="11" height="15" fill="rgb(226,91,22)"/><text x="523.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (2 samples, 0.89%)</title><rect x="531" y="196" width="11" height="15" fill="rgb(229,138,14)"/><text x="534.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.45%)</title><rect x="542" y="196" width="5" height="15" fill="rgb(217,65,32)"/><text x="545.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (11 samples, 4.91%)</title><rect x="499" y="180" width="58" height="15" fill="rgb(214,190,27)"/><text x="502.00" y="190.50">check_..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.89%)</title><rect x="547" y="196" width="10" height="15" fill="rgb(212,196,37)"/><text x="550.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 0.89%)</title><rect x="547" y="212" width="10" height="15" fill="rgb(208,90,40)"/><text x="550.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.89%)</title><rect x="547" y="228" width="10" height="15" fill="rgb(245,52,18)"/><text x="550.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:566) (1 samples, 0.45%)</title><rect x="557" y="180" width="6" height="15" fill="rgb(249,84,42)"/><text x="560.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (73 samples, 32.59%)</title><rect x="183" y="164" width="385" height="15" fill="rgb(241,164,11)"/><text x="186.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py:380)</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.45%)</title><rect x="563" y="180" width="5" height="15" fill="rgb(236,73,27)"/><text x="566.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.45%)</title><rect x="568" y="164" width="5" height="15" fill="rgb(212,222,9)"/><text x="571.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (75 samples, 33.48%)</title><rect x="183" y="148" width="395" height="15" fill="rgb(237,226,49)"/><text x="186.00" y="158.50">predict (sklearn/tree/_classes.py:419)</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.45%)</title><rect x="573" y="164" width="5" height="15" fill="rgb(205,161,34)"/><text x="576.00" y="174.50"></text></g><g><title>0x7f31606e9d2e (?) (1 samples, 0.45%)</title><rect x="578" y="164" width="6" height="15" fill="rgb(249,47,32)"/><text x="581.00" y="174.50"></text></g><g><title>0x7f31606e8f55 (?) (1 samples, 0.45%)</title><rect x="578" y="180" width="6" height="15" fill="rgb(230,222,15)"/><text x="581.00" y="190.50"></text></g><g><title>0x7f31606d8cee (?) (1 samples, 0.45%)</title><rect x="578" y="196" width="6" height="15" fill="rgb(245,100,36)"/><text x="581.00" y="206.50"></text></g><g><title>0x7f31606e8f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="584" y="180" width="5" height="15" fill="rgb(239,150,39)"/><text x="587.00" y="190.50"></text></g><g><title>0x7f31606d8cd0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="589" y="196" width="5" height="15" fill="rgb(228,120,16)"/><text x="592.00" y="206.50"></text></g><g><title>0x7f31606e8f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="589" y="180" width="11" height="15" fill="rgb(248,84,37)"/><text x="592.00" y="190.50"></text></g><g><title>0x7f31606d8d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="594" y="196" width="6" height="15" fill="rgb(218,59,6)"/><text x="597.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.45%)</title><rect x="594" y="212" width="6" height="15" fill="rgb(220,166,38)"/><text x="597.00" y="222.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.45%)</title><rect x="594" y="228" width="6" height="15" fill="rgb(224,204,36)"/><text x="597.00" y="238.50"></text></g><g><title>0x7f31606db5d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="600" y="244" width="5" height="15" fill="rgb(243,15,28)"/><text x="603.00" y="254.50"></text></g><g><title>0x7f31606dbd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.79%)</title><rect x="600" y="228" width="21" height="15" fill="rgb(234,27,0)"/><text x="603.00" y="238.50"></text></g><g><title>0x7f31606db666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="605" y="244" width="16" height="15" fill="rgb(223,96,5)"/><text x="608.00" y="254.50"></text></g><g><title>0x7f31606d12fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="605" y="260" width="16" height="15" fill="rgb(250,128,12)"/><text x="608.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.34%)</title><rect x="605" y="276" width="16" height="15" fill="rgb(227,165,33)"/><text x="608.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (3 samples, 1.34%)</title><rect x="605" y="292" width="16" height="15" fill="rgb(243,146,41)"/><text x="608.00" y="302.50"></text></g><g><title>0x7f31606dbde2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="621" y="228" width="5" height="15" fill="rgb(215,168,19)"/><text x="624.00" y="238.50"></text></g><g><title>0x7f31606cf020 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="626" y="244" width="5" height="15" fill="rgb(216,199,16)"/><text x="629.00" y="254.50"></text></g><g><title>0x7f31606f72df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.12%)</title><rect x="600" y="212" width="36" height="15" fill="rgb(218,183,48)"/><text x="603.00" y="222.50">0x7..</text></g><g><title>0x7f31606dbe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="626" y="228" width="10" height="15" fill="rgb(205,94,19)"/><text x="629.00" y="238.50"></text></g><g><title>0x7f31606cf2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="631" y="244" width="5" height="15" fill="rgb(247,83,4)"/><text x="634.00" y="254.50"></text></g><g><title>0x7f31606ce9b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="631" y="260" width="5" height="15" fill="rgb(208,130,34)"/><text x="634.00" y="270.50"></text></g><g><title>0x7f31606f7456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="636" y="212" width="6" height="15" fill="rgb(229,17,12)"/><text x="639.00" y="222.50"></text></g><g><title>0x7f31606f7511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="642" y="212" width="5" height="15" fill="rgb(212,39,8)"/><text x="645.00" y="222.50"></text></g><g><title>0x7f31606f7592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="647" y="212" width="10" height="15" fill="rgb(209,38,51)"/><text x="650.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.89%)</title><rect x="647" y="228" width="10" height="15" fill="rgb(229,35,50)"/><text x="650.00" y="238.50"></text></g><g><title>0x7f31606f759c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="657" y="212" width="6" height="15" fill="rgb(213,67,9)"/><text x="660.00" y="222.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.45%)</title><rect x="663" y="260" width="5" height="15" fill="rgb(232,212,24)"/><text x="666.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (1 samples, 0.45%)</title><rect x="668" y="260" width="5" height="15" fill="rgb(210,53,38)"/><text x="671.00" y="270.50"></text></g><g><title>0x7f31606e8fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 6.70%)</title><rect x="600" y="180" width="79" height="15" fill="rgb(218,136,51)"/><text x="603.00" y="190.50">0x7f31606..</text></g><g><title>0x7f31606f8405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 6.70%)</title><rect x="600" y="196" width="79" height="15" fill="rgb(209,93,9)"/><text x="603.00" y="206.50">0x7f31606..</text></g><g><title>0x7f31606f7c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="663" y="212" width="16" height="15" fill="rgb(211,154,22)"/><text x="666.00" y="222.50"></text></g><g><title>0x7f31606cf529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="663" y="228" width="16" height="15" fill="rgb(209,70,32)"/><text x="666.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.34%)</title><rect x="663" y="244" width="16" height="15" fill="rgb(206,211,29)"/><text x="666.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.45%)</title><rect x="673" y="260" width="6" height="15" fill="rgb(230,181,28)"/><text x="676.00" y="270.50"></text></g><g><title>0x7f31606e8fbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="679" y="180" width="5" height="15" fill="rgb(220,49,32)"/><text x="682.00" y="190.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.89%)</title><rect x="684" y="196" width="10" height="15" fill="rgb(239,108,27)"/><text x="687.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:121) (1 samples, 0.45%)</title><rect x="694" y="212" width="6" height="15" fill="rgb(223,176,1)"/><text x="697.00" y="222.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.45%)</title><rect x="700" y="212" width="5" height="15" fill="rgb(205,159,9)"/><text x="703.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.45%)</title><rect x="700" y="228" width="5" height="15" fill="rgb(224,99,43)"/><text x="703.00" y="238.50"></text></g><g><title>0x7f31606e905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.23%)</title><rect x="684" y="180" width="26" height="15" fill="rgb(228,30,0)"/><text x="687.00" y="190.50">0..</text></g><g><title>array_take (methods.c:145) (3 samples, 1.34%)</title><rect x="694" y="196" width="16" height="15" fill="rgb(218,94,27)"/><text x="697.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.45%)</title><rect x="705" y="212" width="5" height="15" fill="rgb(226,84,14)"/><text x="708.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.45%)</title><rect x="705" y="228" width="5" height="15" fill="rgb(213,82,39)"/><text x="708.00" y="238.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.45%)</title><rect x="705" y="244" width="5" height="15" fill="rgb(210,10,30)"/><text x="708.00" y="254.50"></text></g><g><title>0x7f31606e913a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="710" y="180" width="5" height="15" fill="rgb(238,214,50)"/><text x="713.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="710" y="196" width="5" height="15" fill="rgb(244,79,1)"/><text x="713.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.45%)</title><rect x="710" y="212" width="5" height="15" fill="rgb(229,56,4)"/><text x="713.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.45%)</title><rect x="710" y="228" width="5" height="15" fill="rgb(216,200,5)"/><text x="713.00" y="238.50"></text></g><g><title>0x7f31606e914f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="715" y="180" width="6" height="15" fill="rgb(231,49,38)"/><text x="718.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="715" y="196" width="6" height="15" fill="rgb(228,175,53)"/><text x="718.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.45%)</title><rect x="715" y="212" width="6" height="15" fill="rgb(218,89,43)"/><text x="718.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.45%)</title><rect x="715" y="228" width="6" height="15" fill="rgb(228,186,11)"/><text x="718.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.45%)</title><rect x="715" y="244" width="6" height="15" fill="rgb(239,127,2)"/><text x="718.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (28 samples, 12.50%)</title><rect x="578" y="148" width="148" height="15" fill="rgb(248,17,33)"/><text x="581.00" y="158.50">predict (sklearn/t..</text></g><g><title>0x7f31606e9d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 12.05%)</title><rect x="584" y="164" width="142" height="15" fill="rgb(211,129,46)"/><text x="587.00" y="174.50">0x7f31606e9d2e (sk..</text></g><g><title>0x7f31606e91bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="721" y="180" width="5" height="15" fill="rgb(250,124,40)"/><text x="724.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.45%)</title><rect x="721" y="196" width="5" height="15" fill="rgb(222,212,20)"/><text x="724.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.45%)</title><rect x="726" y="148" width="5" height="15" fill="rgb(230,50,17)"/><text x="729.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.45%)</title><rect x="726" y="164" width="5" height="15" fill="rgb(210,24,14)"/><text x="729.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.45%)</title><rect x="736" y="164" width="6" height="15" fill="rgb(219,80,46)"/><text x="739.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:496) (1 samples, 0.45%)</title><rect x="736" y="180" width="6" height="15" fill="rgb(237,91,6)"/><text x="739.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:54) (128 samples, 57.14%)</title><rect x="73" y="52" width="674" height="15" fill="rgb(234,27,45)"/><text x="76.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:53) (128 samples, 57.14%)</title><rect x="73" y="68" width="674" height="15" fill="rgb(235,166,49)"/><text x="76.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37) (128 samples, 57.14%)</title><rect x="73" y="84" width="674" height="15" fill="rgb(252,143,6)"/><text x="76.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31) (128 samples, 57.14%)</title><rect x="73" y="100" width="674" height="15" fill="rgb(213,211,20)"/><text x="76.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (128 samples, 57.14%)</title><rect x="73" y="116" width="674" height="15" fill="rgb(249,82,17)"/><text x="76.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (125 samples, 55.80%)</title><rect x="89" y="132" width="658" height="15" fill="rgb(226,76,50)"/><text x="92.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/tree/_classes.py:442) (3 samples, 1.34%)</title><rect x="731" y="148" width="16" height="15" fill="rgb(220,85,33)"/><text x="734.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.45%)</title><rect x="742" y="164" width="5" height="15" fill="rgb(230,14,4)"/><text x="745.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:939) (1 samples, 0.45%)</title><rect x="742" y="180" width="5" height="15" fill="rgb(244,98,33)"/><text x="745.00" y="190.50"></text></g><g><title>visit_Template (jinja2/compiler.py:722) (1 samples, 0.45%)</title><rect x="747" y="612" width="5" height="15" fill="rgb(226,163,18)"/><text x="750.00" y="622.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.45%)</title><rect x="747" y="628" width="5" height="15" fill="rgb(254,29,9)"/><text x="750.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.45%)</title><rect x="747" y="644" width="5" height="15" fill="rgb(237,148,0)"/><text x="750.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py:191) (1 samples, 0.45%)</title><rect x="747" y="660" width="5" height="15" fill="rgb(214,210,21)"/><text x="750.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py:188) (1 samples, 0.45%)</title><rect x="747" y="676" width="5" height="15" fill="rgb(252,55,26)"/><text x="750.00" y="686.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:169) (1 samples, 0.45%)</title><rect x="747" y="692" width="5" height="15" fill="rgb(253,164,28)"/><text x="750.00" y="702.50"></text></g><g><title>iter_fields (jinja2/nodes.py:160) (1 samples, 0.45%)</title><rect x="747" y="708" width="5" height="15" fill="rgb(253,100,31)"/><text x="750.00" y="718.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:36) (2 samples, 0.89%)</title><rect x="747" y="84" width="11" height="15" fill="rgb(212,33,47)"/><text x="750.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.89%)</title><rect x="747" y="100" width="11" height="15" fill="rgb(208,189,36)"/><text x="750.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.89%)</title><rect x="747" y="116" width="11" height="15" fill="rgb(220,224,42)"/><text x="750.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.89%)</title><rect x="747" y="132" width="11" height="15" fill="rgb(241,206,1)"/><text x="750.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.89%)</title><rect x="747" y="148" width="11" height="15" fill="rgb(241,75,43)"/><text x="750.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (2 samples, 0.89%)</title><rect x="747" y="164" width="11" height="15" fill="rgb(205,18,27)"/><text x="750.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (2 samples, 0.89%)</title><rect x="747" y="180" width="11" height="15" fill="rgb(235,20,46)"/><text x="750.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (2 samples, 0.89%)</title><rect x="747" y="196" width="11" height="15" fill="rgb(252,133,31)"/><text x="750.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="747" y="212" width="11" height="15" fill="rgb(211,89,4)"/><text x="750.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="747" y="228" width="11" height="15" fill="rgb(238,31,2)"/><text x="750.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="747" y="244" width="11" height="15" fill="rgb(227,42,48)"/><text x="750.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="747" y="260" width="11" height="15" fill="rgb(247,53,49)"/><text x="750.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="747" y="276" width="11" height="15" fill="rgb(238,32,9)"/><text x="750.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (2 samples, 0.89%)</title><rect x="747" y="292" width="11" height="15" fill="rgb(254,203,14)"/><text x="750.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="747" y="308" width="11" height="15" fill="rgb(216,1,27)"/><text x="750.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="747" y="324" width="11" height="15" fill="rgb(247,165,14)"/><text x="750.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="747" y="340" width="11" height="15" fill="rgb(253,61,44)"/><text x="750.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="747" y="356" width="11" height="15" fill="rgb(246,63,6)"/><text x="750.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="747" y="372" width="11" height="15" fill="rgb(235,128,36)"/><text x="750.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (2 samples, 0.89%)</title><rect x="747" y="388" width="11" height="15" fill="rgb(216,220,7)"/><text x="750.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="747" y="404" width="11" height="15" fill="rgb(254,5,29)"/><text x="750.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="747" y="420" width="11" height="15" fill="rgb(216,94,3)"/><text x="750.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="747" y="436" width="11" height="15" fill="rgb(221,209,13)"/><text x="750.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="747" y="452" width="11" height="15" fill="rgb(249,76,6)"/><text x="750.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="747" y="468" width="11" height="15" fill="rgb(238,185,44)"/><text x="750.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (2 samples, 0.89%)</title><rect x="747" y="484" width="11" height="15" fill="rgb(229,147,21)"/><text x="750.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (2 samples, 0.89%)</title><rect x="747" y="500" width="11" height="15" fill="rgb(230,116,19)"/><text x="750.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (2 samples, 0.89%)</title><rect x="747" y="516" width="11" height="15" fill="rgb(235,28,45)"/><text x="750.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (2 samples, 0.89%)</title><rect x="747" y="532" width="11" height="15" fill="rgb(206,21,46)"/><text x="750.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (2 samples, 0.89%)</title><rect x="747" y="548" width="11" height="15" fill="rgb(254,177,12)"/><text x="750.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (2 samples, 0.89%)</title><rect x="747" y="564" width="11" height="15" fill="rgb(246,202,13)"/><text x="750.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (2 samples, 0.89%)</title><rect x="747" y="580" width="11" height="15" fill="rgb(212,24,32)"/><text x="750.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (2 samples, 0.89%)</title><rect x="747" y="596" width="11" height="15" fill="rgb(250,98,31)"/><text x="750.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:734) (1 samples, 0.45%)</title><rect x="752" y="612" width="6" height="15" fill="rgb(245,202,43)"/><text x="755.00" y="622.50"></text></g><g><title>writeline (jinja2/compiler.py:399) (1 samples, 0.45%)</title><rect x="752" y="628" width="6" height="15" fill="rgb(212,205,48)"/><text x="755.00" y="638.50"></text></g><g><title>newline (jinja2/compiler.py:404) (1 samples, 0.45%)</title><rect x="752" y="644" width="6" height="15" fill="rgb(247,9,46)"/><text x="755.00" y="654.50"></text></g><g><title>0x7f3146b5654f (?) (1 samples, 0.45%)</title><rect x="758" y="244" width="5" height="15" fill="rgb(251,57,22)"/><text x="761.00" y="254.50"></text></g><g><title>0x7f3146b5c65e (?) (1 samples, 0.45%)</title><rect x="758" y="260" width="5" height="15" fill="rgb(248,86,42)"/><text x="761.00" y="270.50"></text></g><g><title>0x7f3146b5c50f (?) (1 samples, 0.45%)</title><rect x="758" y="276" width="5" height="15" fill="rgb(209,30,54)"/><text x="761.00" y="286.50"></text></g><g><title>0x7f3146b62d6c (?) (1 samples, 0.45%)</title><rect x="758" y="292" width="5" height="15" fill="rgb(225,98,10)"/><text x="761.00" y="302.50"></text></g><g><title>0x7f3150083ab9 (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="758" y="308" width="5" height="15" fill="rgb(216,93,50)"/><text x="761.00" y="318.50"></text></g><g><title>0x7f3150084eab (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="758" y="324" width="5" height="15" fill="rgb(221,143,16)"/><text x="761.00" y="334.50"></text></g><g><title>0x7f3150084ea0 (libgomp.so.1.0.0) (4 samples, 1.79%)</title><rect x="763" y="484" width="21" height="15" fill="rgb(239,164,0)"/><text x="766.00" y="494.50"></text></g><g><title>0x7f3150084ea9 (libgomp.so.1.0.0) (8 samples, 3.57%)</title><rect x="784" y="484" width="42" height="15" fill="rgb(252,44,3)"/><text x="787.00" y="494.50">0x7..</text></g><g><title>0x7f3150084eab (libgomp.so.1.0.0) (14 samples, 6.25%)</title><rect x="826" y="484" width="74" height="15" fill="rgb(223,76,32)"/><text x="829.00" y="494.50">0x7f3150..</text></g><g><title>0x7f3150083ab9 (libgomp.so.1.0.0) (36 samples, 16.07%)</title><rect x="763" y="468" width="189" height="15" fill="rgb(215,138,8)"/><text x="766.00" y="478.50">0x7f3150083ab9 (libgomp...</text></g><g><title>0x7f3150084ead (libgomp.so.1.0.0) (10 samples, 4.46%)</title><rect x="900" y="484" width="52" height="15" fill="rgb(220,105,8)"/><text x="903.00" y="494.50">0x7f3..</text></g><g><title>0x7f3150084cf9 (libgomp.so.1.0.0) (2 samples, 0.89%)</title><rect x="952" y="500" width="11" height="15" fill="rgb(237,214,2)"/><text x="955.00" y="510.50"></text></g><g><title>0x7f3150084cfb (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="963" y="500" width="5" height="15" fill="rgb(237,29,42)"/><text x="966.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:61) (44 samples, 19.64%)</title><rect x="747" y="52" width="232" height="15" fill="rgb(230,72,45)"/><text x="750.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRe..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:60) (44 samples, 19.64%)</title><rect x="747" y="68" width="232" height="15" fill="rgb(218,61,40)"/><text x="750.00" y="78.50">profile_pyrt (bench_DecisionTr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37) (42 samples, 18.75%)</title><rect x="758" y="84" width="221" height="15" fill="rgb(232,78,5)"/><text x="761.00" y="94.50">setup_profile (bench_Decision..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31) (42 samples, 18.75%)</title><rect x="758" y="100" width="221" height="15" fill="rgb(220,19,2)"/><text x="761.00" y="110.50">profile (bench_DecisionTreeRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (42 samples, 18.75%)</title><rect x="758" y="116" width="221" height="15" fill="rgb(240,193,46)"/><text x="761.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (42 samples, 18.75%)</title><rect x="758" y="132" width="221" height="15" fill="rgb(248,52,18)"/><text x="761.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (42 samples, 18.75%)</title><rect x="758" y="148" width="221" height="15" fill="rgb(233,187,51)"/><text x="761.00" y="158.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (42 samples, 18.75%)</title><rect x="758" y="164" width="221" height="15" fill="rgb(209,203,49)"/><text x="761.00" y="174.50">_run_sequence_runtime (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (42 samples, 18.75%)</title><rect x="758" y="180" width="221" height="15" fill="rgb(243,27,17)"/><text x="761.00" y="190.50">run (mlprodict/onnxrt/onnx_in..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (42 samples, 18.75%)</title><rect x="758" y="196" width="221" height="15" fill="rgb(233,87,20)"/><text x="761.00" y="206.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (42 samples, 18.75%)</title><rect x="758" y="212" width="221" height="15" fill="rgb(233,93,4)"/><text x="761.00" y="222.50">run (mlprodict/onnxrt/ops_cpu..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (42 samples, 18.75%)</title><rect x="758" y="228" width="221" height="15" fill="rgb(229,206,3)"/><text x="761.00" y="238.50">_run (mlprodict/onnxrt/ops_cp..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (41 samples, 18.30%)</title><rect x="763" y="244" width="216" height="15" fill="rgb(232,12,36)"/><text x="766.00" y="254.50">pybind11::cpp_function::disp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (41 samples, 18.30%)</title><rect x="763" y="260" width="216" height="15" fill="rgb(239,101,27)"/><text x="766.00" y="270.50">void pybind11::cpp_function:..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (41 samples, 18.30%)</title><rect x="763" y="276" width="216" height="15" fill="rgb(230,47,51)"/><text x="766.00" y="286.50">void pybind11::cpp_function:..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (41 samples, 18.30%)</title><rect x="763" y="292" width="216" height="15" fill="rgb(213,42,28)"/><text x="766.00" y="302.50">pybind11::detail::argument_l..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (41 samples, 18.30%)</title><rect x="763" y="308" width="216" height="15" fill="rgb(236,179,16)"/><text x="766.00" y="318.50">pybind11::detail::argument_l..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (41 samples, 18.30%)</title><rect x="763" y="324" width="216" height="15" fill="rgb(249,7,29)"/><text x="766.00" y="334.50">pybind11::cpp_function::cpp_..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (41 samples, 18.30%)</title><rect x="763" y="340" width="216" height="15" fill="rgb(223,169,9)"/><text x="766.00" y="350.50">pybind11::array_t&lt;float, 16&gt;..</text></g><g><title>pybind11::array::~array (numpy.h:538) (41 samples, 18.30%)</title><rect x="763" y="356" width="216" height="15" fill="rgb(209,169,15)"/><text x="766.00" y="366.50">pybind11::array::~array (num..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (41 samples, 18.30%)</title><rect x="763" y="372" width="216" height="15" fill="rgb(210,58,2)"/><text x="766.00" y="382.50">pybind11::buffer::~buffer (p..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (41 samples, 18.30%)</title><rect x="763" y="388" width="216" height="15" fill="rgb(216,159,18)"/><text x="766.00" y="398.50">pybind11::object::~object (p..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (41 samples, 18.30%)</title><rect x="763" y="404" width="216" height="15" fill="rgb(207,208,32)"/><text x="766.00" y="414.50">pybind11::handle::dec_ref &amp; ..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (41 samples, 18.30%)</title><rect x="763" y="420" width="216" height="15" fill="rgb(205,146,34)"/><text x="766.00" y="430.50">RuntimeTreeEnsembleRegressor..</text></g><g><title>pybind11::array::size (numpy.h:619) (41 samples, 18.30%)</title><rect x="763" y="436" width="216" height="15" fill="rgb(251,172,50)"/><text x="766.00" y="446.50">pybind11::array::size (numpy..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (41 samples, 18.30%)</title><rect x="763" y="452" width="216" height="15" fill="rgb(220,97,25)"/><text x="766.00" y="462.50">std::accumulate&lt;long const*,..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (5 samples, 2.23%)</title><rect x="952" y="468" width="27" height="15" fill="rgb(246,85,24)"/><text x="955.00" y="478.50">G..</text></g><g><title>0x7f3150082daa (libgomp.so.1.0.0) (5 samples, 2.23%)</title><rect x="952" y="484" width="27" height="15" fill="rgb(235,139,43)"/><text x="955.00" y="494.50">0..</text></g><g><title>0x7f3150084cfd (libgomp.so.1.0.0) (2 samples, 0.89%)</title><rect x="968" y="500" width="11" height="15" fill="rgb(224,8,8)"/><text x="971.00" y="510.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:30) (1 samples, 0.45%)</title><rect x="979" y="100" width="5" height="15" fill="rgb(243,41,39)"/><text x="982.00" y="110.50"></text></g><g><title>0x7f31852a09c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="984" y="116" width="5" height="15" fill="rgb(245,122,42)"/><text x="987.00" y="126.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.89%)</title><rect x="1000" y="148" width="10" height="15" fill="rgb(213,119,2)"/><text x="1003.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.45%)</title><rect x="1010" y="164" width="6" height="15" fill="rgb(246,64,19)"/><text x="1013.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:128) (3 samples, 1.34%)</title><rect x="1016" y="196" width="15" height="15" fill="rgb(254,82,33)"/><text x="1019.00" y="206.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.89%)</title><rect x="1037" y="260" width="10" height="15" fill="rgb(218,9,22)"/><text x="1040.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (4 samples, 1.79%)</title><rect x="1031" y="196" width="22" height="15" fill="rgb(241,13,27)"/><text x="1034.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.79%)</title><rect x="1031" y="212" width="22" height="15" fill="rgb(250,22,12)"/><text x="1034.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.34%)</title><rect x="1037" y="228" width="16" height="15" fill="rgb(223,90,4)"/><text x="1040.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.34%)</title><rect x="1037" y="244" width="16" height="15" fill="rgb(241,5,22)"/><text x="1040.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1047" y="260" width="6" height="15" fill="rgb(240,62,3)"/><text x="1050.00" y="270.50"></text></g><g><title>0x7f314613bff9 (?) (1 samples, 0.45%)</title><rect x="1053" y="212" width="5" height="15" fill="rgb(242,180,36)"/><text x="1056.00" y="222.50"></text></g><g><title>0x7f3146136ef6 (?) (1 samples, 0.45%)</title><rect x="1053" y="228" width="5" height="15" fill="rgb(239,208,32)"/><text x="1056.00" y="238.50"></text></g><g><title>0x7f314612b962 (?) (1 samples, 0.45%)</title><rect x="1053" y="244" width="5" height="15" fill="rgb(221,57,43)"/><text x="1056.00" y="254.50"></text></g><g><title>0x7f314615f7a7 (?) (1 samples, 0.45%)</title><rect x="1053" y="260" width="5" height="15" fill="rgb(231,15,11)"/><text x="1056.00" y="270.50"></text></g><g><title>0x7f314615f379 (?) (1 samples, 0.45%)</title><rect x="1053" y="276" width="5" height="15" fill="rgb(236,221,21)"/><text x="1056.00" y="286.50"></text></g><g><title>0x7f31465bd8b8 (?) (1 samples, 0.45%)</title><rect x="1053" y="292" width="5" height="15" fill="rgb(229,82,10)"/><text x="1056.00" y="302.50"></text></g><g><title>0x7f31465bbc7f (?) (1 samples, 0.45%)</title><rect x="1053" y="308" width="5" height="15" fill="rgb(219,101,13)"/><text x="1056.00" y="318.50"></text></g><g><title>0x7f31465ce99c (?) (1 samples, 0.45%)</title><rect x="1053" y="324" width="5" height="15" fill="rgb(216,206,5)"/><text x="1056.00" y="334.50"></text></g><g><title>0x7f31462f5cb7 (?) (1 samples, 0.45%)</title><rect x="1053" y="340" width="5" height="15" fill="rgb(221,217,14)"/><text x="1056.00" y="350.50"></text></g><g><title>0x7f314658a5e6 (?) (1 samples, 0.45%)</title><rect x="1053" y="356" width="5" height="15" fill="rgb(211,160,27)"/><text x="1056.00" y="366.50"></text></g><g><title>0x7f314658a486 (?) (1 samples, 0.45%)</title><rect x="1053" y="372" width="5" height="15" fill="rgb(230,30,30)"/><text x="1056.00" y="382.50"></text></g><g><title>0x7f3146574c8d (?) (1 samples, 0.45%)</title><rect x="1053" y="388" width="5" height="15" fill="rgb(250,118,37)"/><text x="1056.00" y="398.50"></text></g><g><title>0x7f3146574202 (?) (1 samples, 0.45%)</title><rect x="1053" y="404" width="5" height="15" fill="rgb(231,64,48)"/><text x="1056.00" y="414.50"></text></g><g><title>0x7f3146573913 (?) (1 samples, 0.45%)</title><rect x="1053" y="420" width="5" height="15" fill="rgb(220,178,47)"/><text x="1056.00" y="430.50"></text></g><g><title>0x7f314657279d (?) (1 samples, 0.45%)</title><rect x="1053" y="436" width="5" height="15" fill="rgb(222,112,44)"/><text x="1056.00" y="446.50"></text></g><g><title>0x7f31465a32f2 (?) (1 samples, 0.45%)</title><rect x="1053" y="452" width="5" height="15" fill="rgb(212,109,31)"/><text x="1056.00" y="462.50"></text></g><g><title>0x7f314655c0b5 (?) (1 samples, 0.45%)</title><rect x="1053" y="468" width="5" height="15" fill="rgb(232,224,15)"/><text x="1056.00" y="478.50"></text></g><g><title>0x7f3146554fce (?) (1 samples, 0.45%)</title><rect x="1053" y="484" width="5" height="15" fill="rgb(246,204,32)"/><text x="1056.00" y="494.50"></text></g><g><title>0x7f3146554a5d (?) (1 samples, 0.45%)</title><rect x="1053" y="500" width="5" height="15" fill="rgb(239,215,33)"/><text x="1056.00" y="510.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1074" y="292" width="5" height="15" fill="rgb(215,121,23)"/><text x="1077.00" y="302.50"></text></g><g><title>0x7f318607d9ea (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1074" y="308" width="5" height="15" fill="rgb(207,223,25)"/><text x="1077.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1079" y="292" width="5" height="15" fill="rgb(241,39,5)"/><text x="1082.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1079" y="308" width="5" height="15" fill="rgb(234,101,35)"/><text x="1082.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1079" y="324" width="5" height="15" fill="rgb(229,92,38)"/><text x="1082.00" y="334.50"></text></g><g><title>0x7f318607eb12 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1079" y="340" width="5" height="15" fill="rgb(226,44,22)"/><text x="1082.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1084" y="292" width="5" height="15" fill="rgb(252,58,6)"/><text x="1087.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1089" y="292" width="6" height="15" fill="rgb(246,200,4)"/><text x="1092.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1089" y="308" width="6" height="15" fill="rgb(228,187,34)"/><text x="1092.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1095" y="292" width="5" height="15" fill="rgb(236,39,51)"/><text x="1098.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1110" y="340" width="6" height="15" fill="rgb(230,85,54)"/><text x="1113.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1110" y="356" width="6" height="15" fill="rgb(236,153,25)"/><text x="1113.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1110" y="372" width="6" height="15" fill="rgb(235,214,6)"/><text x="1113.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1116" y="340" width="5" height="15" fill="rgb(233,186,40)"/><text x="1119.00" y="350.50"></text></g><g><title>0x7f318607d97c (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1121" y="356" width="5" height="15" fill="rgb(231,13,22)"/><text x="1124.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.89%)</title><rect x="1126" y="356" width="11" height="15" fill="rgb(236,29,8)"/><text x="1129.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="372" width="5" height="15" fill="rgb(226,207,13)"/><text x="1135.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="388" width="5" height="15" fill="rgb(244,110,37)"/><text x="1135.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="404" width="5" height="15" fill="rgb(247,177,36)"/><text x="1135.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="420" width="5" height="15" fill="rgb(229,214,24)"/><text x="1135.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="436" width="5" height="15" fill="rgb(222,188,17)"/><text x="1135.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="452" width="5" height="15" fill="rgb(225,70,33)"/><text x="1135.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1132" y="468" width="5" height="15" fill="rgb(218,108,34)"/><text x="1135.00" y="478.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 6.25%)</title><rect x="1068" y="260" width="74" height="15" fill="rgb(233,202,19)"/><text x="1071.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 6.25%)</title><rect x="1068" y="276" width="74" height="15" fill="rgb(249,211,48)"/><text x="1071.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.57%)</title><rect x="1100" y="292" width="42" height="15" fill="rgb(254,157,52)"/><text x="1103.00" y="302.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.57%)</title><rect x="1100" y="308" width="42" height="15" fill="rgb(209,118,36)"/><text x="1103.00" y="318.50">onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.57%)</title><rect x="1100" y="324" width="42" height="15" fill="rgb(207,122,22)"/><text x="1103.00" y="334.50">onn..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.79%)</title><rect x="1121" y="340" width="21" height="15" fill="rgb(214,180,52)"/><text x="1124.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1137" y="356" width="5" height="15" fill="rgb(212,196,6)"/><text x="1140.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.89%)</title><rect x="1142" y="260" width="11" height="15" fill="rgb(224,20,35)"/><text x="1145.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1153" y="260" width="5" height="15" fill="rgb(209,122,53)"/><text x="1156.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.45%)</title><rect x="1153" y="276" width="5" height="15" fill="rgb(207,24,14)"/><text x="1156.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.45%)</title><rect x="1153" y="292" width="5" height="15" fill="rgb(248,206,47)"/><text x="1156.00" y="302.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1158" y="260" width="5" height="15" fill="rgb(213,154,22)"/><text x="1161.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 8.93%)</title><rect x="1063" y="244" width="105" height="15" fill="rgb(252,115,36)"/><text x="1066.00" y="254.50">onnxruntime:..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="260" width="5" height="15" fill="rgb(244,221,1)"/><text x="1166.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="276" width="5" height="15" fill="rgb(214,179,9)"/><text x="1166.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="292" width="5" height="15" fill="rgb(235,136,15)"/><text x="1166.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="308" width="5" height="15" fill="rgb(215,91,34)"/><text x="1166.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="324" width="5" height="15" fill="rgb(243,99,25)"/><text x="1166.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="340" width="5" height="15" fill="rgb(232,185,30)"/><text x="1166.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="356" width="5" height="15" fill="rgb(238,156,51)"/><text x="1166.00" y="366.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (30 samples, 13.39%)</title><rect x="1016" y="164" width="158" height="15" fill="rgb(224,41,27)"/><text x="1019.00" y="174.50">_run_whole_runtime (..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (30 samples, 13.39%)</title><rect x="1016" y="180" width="158" height="15" fill="rgb(249,157,34)"/><text x="1019.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (23 samples, 10.27%)</title><rect x="1053" y="196" width="121" height="15" fill="rgb(236,157,5)"/><text x="1056.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 9.82%)</title><rect x="1058" y="212" width="116" height="15" fill="rgb(245,202,29)"/><text x="1061.00" y="222.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 9.82%)</title><rect x="1058" y="228" width="116" height="15" fill="rgb(243,200,2)"/><text x="1061.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1168" y="244" width="6" height="15" fill="rgb(222,188,0)"/><text x="1171.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1168" y="260" width="6" height="15" fill="rgb(225,209,19)"/><text x="1171.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1168" y="276" width="6" height="15" fill="rgb(213,4,48)"/><text x="1171.00" y="286.50"></text></g><g><title>all (224 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,127,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:68) (40 samples, 17.86%)</title><rect x="979" y="52" width="211" height="15" fill="rgb(227,88,52)"/><text x="982.00" y="62.50">&lt;module&gt; (bench_DecisionTre..</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:67) (40 samples, 17.86%)</title><rect x="979" y="68" width="211" height="15" fill="rgb(243,220,20)"/><text x="982.00" y="78.50">profile_ort (bench_Decision..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37) (40 samples, 17.86%)</title><rect x="979" y="84" width="211" height="15" fill="rgb(223,206,14)"/><text x="982.00" y="94.50">setup_profile (bench_Decisi..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31) (39 samples, 17.41%)</title><rect x="984" y="100" width="206" height="15" fill="rgb(206,134,15)"/><text x="987.00" y="110.50">profile (bench_DecisionTree..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (38 samples, 16.96%)</title><rect x="989" y="116" width="201" height="15" fill="rgb(211,218,1)"/><text x="992.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (37 samples, 16.52%)</title><rect x="995" y="132" width="195" height="15" fill="rgb(214,138,19)"/><text x="998.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (34 samples, 15.18%)</title><rect x="1010" y="148" width="180" height="15" fill="rgb(231,205,42)"/><text x="1013.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.34%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(236,44,2)"/><text x="1177.00" y="174.50"></text></g></g></svg>