<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.62%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(211,204,47)"/><text x="13.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.62%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(229,114,17)"/><text x="13.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.62%)</title><rect x="10" y="916" width="7" height="15" fill="rgb(215,133,31)"/><text x="13.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.62%)</title><rect x="10" y="932" width="7" height="15" fill="rgb(249,101,40)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.62%)</title><rect x="10" y="948" width="7" height="15" fill="rgb(246,9,34)"/><text x="13.00" y="958.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.62%)</title><rect x="17" y="900" width="7" height="15" fill="rgb(206,191,4)"/><text x="20.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.62%)</title><rect x="17" y="916" width="7" height="15" fill="rgb(212,83,23)"/><text x="20.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.62%)</title><rect x="17" y="932" width="7" height="15" fill="rgb(217,169,11)"/><text x="20.00" y="942.50"></text></g><g><title>0x7fb927b3a237 (libc-2.29.so) (1 samples, 0.62%)</title><rect x="17" y="948" width="7" height="15" fill="rgb(209,91,24)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (3 samples, 1.85%)</title><rect x="10" y="148" width="21" height="15" fill="rgb(226,192,20)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="164" width="21" height="15" fill="rgb(232,11,28)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.85%)</title><rect x="10" y="180" width="21" height="15" fill="rgb(215,126,45)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="196" width="21" height="15" fill="rgb(243,184,12)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="212" width="21" height="15" fill="rgb(224,154,18)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="10" y="228" width="21" height="15" fill="rgb(239,97,4)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="10" y="244" width="21" height="15" fill="rgb(209,76,16)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="10" y="260" width="21" height="15" fill="rgb(207,138,29)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="276" width="21" height="15" fill="rgb(234,169,54)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.85%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(224,18,30)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(212,34,34)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(215,140,23)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="10" y="340" width="21" height="15" fill="rgb(235,4,13)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(220,85,38)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(214,107,50)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.85%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(207,191,31)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(243,208,32)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(249,222,24)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(243,171,15)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(208,125,29)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(247,143,33)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.85%)</title><rect x="10" y="484" width="21" height="15" fill="rgb(253,2,26)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="500" width="21" height="15" fill="rgb(205,210,31)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="10" y="516" width="21" height="15" fill="rgb(228,169,44)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="10" y="532" width="21" height="15" fill="rgb(225,131,12)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="10" y="548" width="21" height="15" fill="rgb(225,109,35)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="564" width="21" height="15" fill="rgb(232,20,2)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.85%)</title><rect x="10" y="580" width="21" height="15" fill="rgb(228,216,31)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="596" width="21" height="15" fill="rgb(251,184,35)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.85%)</title><rect x="10" y="612" width="21" height="15" fill="rgb(216,80,48)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="628" width="21" height="15" fill="rgb(243,41,49)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="644" width="21" height="15" fill="rgb(243,150,44)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="10" y="660" width="21" height="15" fill="rgb(247,27,4)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="10" y="676" width="21" height="15" fill="rgb(211,147,25)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="10" y="692" width="21" height="15" fill="rgb(205,172,17)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="708" width="21" height="15" fill="rgb(232,166,4)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.85%)</title><rect x="10" y="724" width="21" height="15" fill="rgb(235,3,38)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="10" y="740" width="21" height="15" fill="rgb(226,70,8)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="10" y="756" width="21" height="15" fill="rgb(246,118,13)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="10" y="772" width="21" height="15" fill="rgb(235,226,17)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="10" y="788" width="21" height="15" fill="rgb(242,1,54)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="10" y="804" width="21" height="15" fill="rgb(252,31,10)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.85%)</title><rect x="10" y="820" width="21" height="15" fill="rgb(226,205,54)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.85%)</title><rect x="10" y="836" width="21" height="15" fill="rgb(230,70,23)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.85%)</title><rect x="10" y="852" width="21" height="15" fill="rgb(208,84,41)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.85%)</title><rect x="10" y="868" width="21" height="15" fill="rgb(217,122,49)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 1.23%)</title><rect x="17" y="884" width="14" height="15" fill="rgb(206,212,46)"/><text x="20.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.62%)</title><rect x="24" y="900" width="7" height="15" fill="rgb(226,46,42)"/><text x="27.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.62%)</title><rect x="24" y="916" width="7" height="15" fill="rgb(219,115,7)"/><text x="27.00" y="926.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py:2994) (1 samples, 0.62%)</title><rect x="24" y="932" width="7" height="15" fill="rgb(244,210,47)"/><text x="27.00" y="942.50"></text></g><g><title>_get_version (pkg_resources/__init__.py:2772) (1 samples, 0.62%)</title><rect x="24" y="948" width="7" height="15" fill="rgb(213,206,30)"/><text x="27.00" y="958.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py:2556) (1 samples, 0.62%)</title><rect x="24" y="964" width="7" height="15" fill="rgb(233,187,28)"/><text x="27.00" y="974.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2767) (1 samples, 0.62%)</title><rect x="24" y="980" width="7" height="15" fill="rgb(247,39,13)"/><text x="27.00" y="990.50"></text></g><g><title>get_metadata_lines (pkg_resources/__init__.py:1432) (1 samples, 0.62%)</title><rect x="24" y="996" width="7" height="15" fill="rgb(208,176,51)"/><text x="27.00" y="1006.50"></text></g><g><title>get_metadata (pkg_resources/__init__.py:1419) (1 samples, 0.62%)</title><rect x="24" y="1012" width="7" height="15" fill="rgb(224,226,9)"/><text x="27.00" y="1022.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py:1407) (1 samples, 0.62%)</title><rect x="24" y="1028" width="7" height="15" fill="rgb(246,35,7)"/><text x="27.00" y="1038.50"></text></g><g><title>_fn (pkg_resources/__init__.py:1487) (1 samples, 0.62%)</title><rect x="24" y="1044" width="7" height="15" fill="rgb(245,99,53)"/><text x="27.00" y="1054.50"></text></g><g><title>_validate_resource_path (pkg_resources/__init__.py:1546) (1 samples, 0.62%)</title><rect x="24" y="1060" width="7" height="15" fill="rgb(223,55,28)"/><text x="27.00" y="1070.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.62%)</title><rect x="31" y="484" width="8" height="15" fill="rgb(216,198,16)"/><text x="34.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.62%)</title><rect x="31" y="500" width="8" height="15" fill="rgb(218,97,37)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="516" width="8" height="15" fill="rgb(222,76,26)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="532" width="8" height="15" fill="rgb(234,73,11)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="548" width="8" height="15" fill="rgb(240,26,47)"/><text x="34.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="564" width="8" height="15" fill="rgb(251,82,16)"/><text x="34.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="580" width="8" height="15" fill="rgb(249,103,7)"/><text x="34.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="596" width="8" height="15" fill="rgb(212,85,39)"/><text x="34.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.62%)</title><rect x="31" y="612" width="8" height="15" fill="rgb(240,169,16)"/><text x="34.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="628" width="8" height="15" fill="rgb(214,179,22)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="644" width="8" height="15" fill="rgb(220,166,42)"/><text x="34.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="660" width="8" height="15" fill="rgb(227,91,19)"/><text x="34.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="676" width="8" height="15" fill="rgb(235,56,39)"/><text x="34.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="692" width="8" height="15" fill="rgb(224,125,10)"/><text x="34.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.62%)</title><rect x="31" y="708" width="8" height="15" fill="rgb(239,43,2)"/><text x="34.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="724" width="8" height="15" fill="rgb(208,146,14)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="740" width="8" height="15" fill="rgb(215,136,17)"/><text x="34.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="756" width="8" height="15" fill="rgb(210,54,21)"/><text x="34.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="772" width="8" height="15" fill="rgb(212,25,2)"/><text x="34.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="788" width="8" height="15" fill="rgb(213,119,22)"/><text x="34.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.62%)</title><rect x="31" y="804" width="8" height="15" fill="rgb(241,141,46)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="820" width="8" height="15" fill="rgb(206,64,32)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="836" width="8" height="15" fill="rgb(213,215,46)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="852" width="8" height="15" fill="rgb(250,70,28)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="868" width="8" height="15" fill="rgb(244,156,18)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="884" width="8" height="15" fill="rgb(246,59,3)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.62%)</title><rect x="31" y="900" width="8" height="15" fill="rgb(223,170,8)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="916" width="8" height="15" fill="rgb(231,98,22)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="932" width="8" height="15" fill="rgb(207,38,15)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="948" width="8" height="15" fill="rgb(244,56,45)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="964" width="8" height="15" fill="rgb(205,167,45)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="980" width="8" height="15" fill="rgb(205,200,36)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.62%)</title><rect x="31" y="996" width="8" height="15" fill="rgb(249,1,13)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="1012" width="8" height="15" fill="rgb(236,166,38)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.62%)</title><rect x="31" y="1028" width="8" height="15" fill="rgb(243,109,41)"/><text x="34.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="1044" width="8" height="15" fill="rgb(220,91,54)"/><text x="34.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="1060" width="8" height="15" fill="rgb(245,42,3)"/><text x="34.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="1076" width="8" height="15" fill="rgb(207,69,0)"/><text x="34.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="1092" width="8" height="15" fill="rgb(231,168,54)"/><text x="34.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="1108" width="8" height="15" fill="rgb(239,84,26)"/><text x="34.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="1124" width="8" height="15" fill="rgb(235,29,39)"/><text x="34.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:12) (1 samples, 0.62%)</title><rect x="31" y="1140" width="8" height="15" fill="rgb(235,142,22)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="1156" width="8" height="15" fill="rgb(253,19,29)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="1172" width="8" height="15" fill="rgb(228,220,37)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="1188" width="8" height="15" fill="rgb(212,93,6)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="31" y="1204" width="8" height="15" fill="rgb(205,20,18)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="1220" width="8" height="15" fill="rgb(206,156,52)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/reduction.py:125) (1 samples, 0.62%)</title><rect x="31" y="1236" width="8" height="15" fill="rgb(241,15,11)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.62%)</title><rect x="31" y="1252" width="8" height="15" fill="rgb(220,168,46)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="31" y="1268" width="8" height="15" fill="rgb(247,167,6)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="31" y="1284" width="8" height="15" fill="rgb(234,173,6)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="31" y="1300" width="8" height="15" fill="rgb(208,225,51)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="31" y="1316" width="8" height="15" fill="rgb(240,145,12)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.62%)</title><rect x="31" y="1332" width="8" height="15" fill="rgb(247,205,41)"/><text x="34.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.62%)</title><rect x="31" y="1348" width="8" height="15" fill="rgb(240,113,44)"/><text x="34.00" y="1358.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.62%)</title><rect x="31" y="1364" width="8" height="15" fill="rgb(239,69,1)"/><text x="34.00" y="1374.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.62%)</title><rect x="31" y="1380" width="8" height="15" fill="rgb(231,32,13)"/><text x="34.00" y="1390.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:4) (2 samples, 1.23%)</title><rect x="31" y="148" width="15" height="15" fill="rgb(227,76,51)"/><text x="34.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="31" y="164" width="15" height="15" fill="rgb(236,181,37)"/><text x="34.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.23%)</title><rect x="31" y="180" width="15" height="15" fill="rgb(220,26,54)"/><text x="34.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="31" y="196" width="15" height="15" fill="rgb(248,160,42)"/><text x="34.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="31" y="212" width="15" height="15" fill="rgb(248,192,35)"/><text x="34.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="31" y="228" width="15" height="15" fill="rgb(250,29,21)"/><text x="34.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="31" y="244" width="15" height="15" fill="rgb(231,65,33)"/><text x="34.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="31" y="260" width="15" height="15" fill="rgb(245,23,7)"/><text x="34.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="31" y="276" width="15" height="15" fill="rgb(214,48,54)"/><text x="34.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 1.23%)</title><rect x="31" y="292" width="15" height="15" fill="rgb(251,77,54)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="31" y="308" width="15" height="15" fill="rgb(254,115,35)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="31" y="324" width="15" height="15" fill="rgb(240,194,29)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="31" y="340" width="15" height="15" fill="rgb(208,227,52)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="31" y="356" width="15" height="15" fill="rgb(219,188,51)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="31" y="372" width="15" height="15" fill="rgb(243,204,6)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 1.23%)</title><rect x="31" y="388" width="15" height="15" fill="rgb(212,21,19)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="31" y="404" width="15" height="15" fill="rgb(230,7,28)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="31" y="420" width="15" height="15" fill="rgb(238,202,22)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="31" y="436" width="15" height="15" fill="rgb(249,229,28)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="31" y="452" width="15" height="15" fill="rgb(227,65,32)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="31" y="468" width="15" height="15" fill="rgb(230,11,14)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.62%)</title><rect x="39" y="484" width="7" height="15" fill="rgb(207,189,22)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="39" y="500" width="7" height="15" fill="rgb(239,82,16)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="39" y="516" width="7" height="15" fill="rgb(225,95,36)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="39" y="532" width="7" height="15" fill="rgb(208,219,16)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="39" y="548" width="7" height="15" fill="rgb(216,199,22)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="564" width="7" height="15" fill="rgb(251,46,42)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.62%)</title><rect x="39" y="580" width="7" height="15" fill="rgb(212,45,43)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="39" y="596" width="7" height="15" fill="rgb(206,21,15)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="39" y="612" width="7" height="15" fill="rgb(252,70,38)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="39" y="628" width="7" height="15" fill="rgb(244,19,40)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="39" y="644" width="7" height="15" fill="rgb(226,91,44)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="660" width="7" height="15" fill="rgb(213,175,19)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.62%)</title><rect x="39" y="676" width="7" height="15" fill="rgb(221,174,2)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="39" y="692" width="7" height="15" fill="rgb(245,144,48)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="39" y="708" width="7" height="15" fill="rgb(235,19,51)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="39" y="724" width="7" height="15" fill="rgb(229,103,17)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="39" y="740" width="7" height="15" fill="rgb(236,212,52)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="756" width="7" height="15" fill="rgb(212,23,36)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.62%)</title><rect x="39" y="772" width="7" height="15" fill="rgb(241,83,23)"/><text x="42.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.62%)</title><rect x="39" y="788" width="7" height="15" fill="rgb(238,96,14)"/><text x="42.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="804" width="7" height="15" fill="rgb(226,217,35)"/><text x="42.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="39" y="820" width="7" height="15" fill="rgb(252,169,5)"/><text x="42.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="39" y="836" width="7" height="15" fill="rgb(223,60,7)"/><text x="42.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="39" y="852" width="7" height="15" fill="rgb(241,223,16)"/><text x="42.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="39" y="868" width="7" height="15" fill="rgb(254,102,22)"/><text x="42.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="884" width="7" height="15" fill="rgb(238,191,43)"/><text x="42.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.62%)</title><rect x="39" y="900" width="7" height="15" fill="rgb(225,78,26)"/><text x="42.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.62%)</title><rect x="39" y="916" width="7" height="15" fill="rgb(252,97,36)"/><text x="42.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="932" width="7" height="15" fill="rgb(233,81,15)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="39" y="948" width="7" height="15" fill="rgb(245,214,17)"/><text x="42.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="39" y="964" width="7" height="15" fill="rgb(236,130,2)"/><text x="42.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="39" y="980" width="7" height="15" fill="rgb(229,120,14)"/><text x="42.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="39" y="996" width="7" height="15" fill="rgb(253,113,13)"/><text x="42.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="39" y="1012" width="7" height="15" fill="rgb(205,210,7)"/><text x="42.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5221) (1 samples, 0.62%)</title><rect x="39" y="1028" width="7" height="15" fill="rgb(227,104,50)"/><text x="42.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.62%)</title><rect x="39" y="1044" width="7" height="15" fill="rgb(209,82,13)"/><text x="42.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.62%)</title><rect x="39" y="1060" width="7" height="15" fill="rgb(244,131,52)"/><text x="42.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.62%)</title><rect x="46" y="244" width="7" height="15" fill="rgb(213,134,53)"/><text x="49.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="260" width="7" height="15" fill="rgb(254,0,31)"/><text x="49.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="276" width="7" height="15" fill="rgb(222,182,43)"/><text x="49.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="292" width="7" height="15" fill="rgb(248,193,51)"/><text x="49.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="308" width="7" height="15" fill="rgb(249,226,32)"/><text x="49.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="324" width="7" height="15" fill="rgb(229,144,25)"/><text x="49.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.62%)</title><rect x="46" y="340" width="7" height="15" fill="rgb(210,87,9)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="356" width="7" height="15" fill="rgb(218,211,3)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.62%)</title><rect x="46" y="372" width="7" height="15" fill="rgb(230,2,5)"/><text x="49.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="388" width="7" height="15" fill="rgb(241,152,35)"/><text x="49.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="404" width="7" height="15" fill="rgb(236,125,25)"/><text x="49.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="420" width="7" height="15" fill="rgb(247,153,45)"/><text x="49.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="436" width="7" height="15" fill="rgb(216,224,22)"/><text x="49.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="452" width="7" height="15" fill="rgb(209,70,15)"/><text x="49.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="468" width="7" height="15" fill="rgb(221,17,28)"/><text x="49.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.62%)</title><rect x="46" y="484" width="7" height="15" fill="rgb(238,39,41)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="500" width="7" height="15" fill="rgb(216,196,6)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="516" width="7" height="15" fill="rgb(210,145,3)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="532" width="7" height="15" fill="rgb(250,114,45)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="548" width="7" height="15" fill="rgb(242,11,30)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="564" width="7" height="15" fill="rgb(222,189,48)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.62%)</title><rect x="46" y="580" width="7" height="15" fill="rgb(225,16,37)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="596" width="7" height="15" fill="rgb(213,10,39)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="612" width="7" height="15" fill="rgb(241,144,25)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="628" width="7" height="15" fill="rgb(238,118,46)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="644" width="7" height="15" fill="rgb(213,123,26)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="660" width="7" height="15" fill="rgb(248,15,1)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.62%)</title><rect x="46" y="676" width="7" height="15" fill="rgb(221,150,37)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="692" width="7" height="15" fill="rgb(206,30,18)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="708" width="7" height="15" fill="rgb(253,73,40)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="724" width="7" height="15" fill="rgb(235,108,15)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="740" width="7" height="15" fill="rgb(230,29,29)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="756" width="7" height="15" fill="rgb(218,108,18)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.62%)</title><rect x="46" y="772" width="7" height="15" fill="rgb(253,74,2)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="788" width="7" height="15" fill="rgb(207,36,25)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="804" width="7" height="15" fill="rgb(247,22,49)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="820" width="7" height="15" fill="rgb(211,167,23)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="836" width="7" height="15" fill="rgb(221,229,27)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="852" width="7" height="15" fill="rgb(206,24,49)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.62%)</title><rect x="46" y="868" width="7" height="15" fill="rgb(224,200,40)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="46" y="884" width="7" height="15" fill="rgb(228,132,52)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="46" y="900" width="7" height="15" fill="rgb(221,183,6)"/><text x="49.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="46" y="916" width="7" height="15" fill="rgb(221,16,22)"/><text x="49.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="46" y="932" width="7" height="15" fill="rgb(248,88,0)"/><text x="49.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="46" y="948" width="7" height="15" fill="rgb(247,85,16)"/><text x="49.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:51) (1 samples, 0.62%)</title><rect x="46" y="964" width="7" height="15" fill="rgb(233,224,42)"/><text x="49.00" y="974.50"></text></g><g><title>UniversalDetector (chardet/universaldetector.py:70) (1 samples, 0.62%)</title><rect x="46" y="980" width="7" height="15" fill="rgb(227,30,19)"/><text x="49.00" y="990.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.62%)</title><rect x="46" y="996" width="7" height="15" fill="rgb(218,166,29)"/><text x="49.00" y="1006.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.62%)</title><rect x="46" y="1012" width="7" height="15" fill="rgb(228,36,30)"/><text x="49.00" y="1022.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.62%)</title><rect x="46" y="1028" width="7" height="15" fill="rgb(207,119,7)"/><text x="49.00" y="1038.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.62%)</title><rect x="46" y="1044" width="7" height="15" fill="rgb(211,220,47)"/><text x="49.00" y="1054.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.62%)</title><rect x="46" y="1060" width="7" height="15" fill="rgb(209,187,31)"/><text x="49.00" y="1070.50"></text></g><g><title>_parse (sre_parse.py:482) (1 samples, 0.62%)</title><rect x="46" y="1076" width="7" height="15" fill="rgb(213,54,23)"/><text x="49.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.62%)</title><rect x="53" y="340" width="7" height="15" fill="rgb(252,23,20)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="356" width="7" height="15" fill="rgb(252,150,51)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="53" y="372" width="7" height="15" fill="rgb(218,14,6)"/><text x="56.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="53" y="388" width="7" height="15" fill="rgb(246,78,51)"/><text x="56.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="53" y="404" width="7" height="15" fill="rgb(227,98,24)"/><text x="56.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="53" y="420" width="7" height="15" fill="rgb(227,5,6)"/><text x="56.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.62%)</title><rect x="53" y="436" width="7" height="15" fill="rgb(252,152,16)"/><text x="56.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="452" width="7" height="15" fill="rgb(232,176,48)"/><text x="56.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="53" y="468" width="7" height="15" fill="rgb(220,182,30)"/><text x="56.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="53" y="484" width="7" height="15" fill="rgb(228,221,29)"/><text x="56.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="53" y="500" width="7" height="15" fill="rgb(238,83,15)"/><text x="56.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="53" y="516" width="7" height="15" fill="rgb(254,123,12)"/><text x="56.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.62%)</title><rect x="53" y="532" width="7" height="15" fill="rgb(230,189,2)"/><text x="56.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="548" width="7" height="15" fill="rgb(215,124,39)"/><text x="56.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.62%)</title><rect x="53" y="564" width="7" height="15" fill="rgb(242,125,9)"/><text x="56.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="53" y="580" width="7" height="15" fill="rgb(209,27,12)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="596" width="7" height="15" fill="rgb(206,73,36)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="53" y="612" width="7" height="15" fill="rgb(231,192,9)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="53" y="628" width="7" height="15" fill="rgb(207,186,48)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="53" y="644" width="7" height="15" fill="rgb(209,83,48)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="53" y="660" width="7" height="15" fill="rgb(238,97,19)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:97) (1 samples, 0.62%)</title><rect x="53" y="676" width="7" height="15" fill="rgb(251,62,23)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="692" width="7" height="15" fill="rgb(239,75,9)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="53" y="708" width="7" height="15" fill="rgb(223,157,1)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="53" y="724" width="7" height="15" fill="rgb(206,130,50)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="53" y="740" width="7" height="15" fill="rgb(223,206,24)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="53" y="756" width="7" height="15" fill="rgb(254,135,13)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/__init__.py:13) (1 samples, 0.62%)</title><rect x="53" y="772" width="7" height="15" fill="rgb(240,222,19)"/><text x="56.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="788" width="7" height="15" fill="rgb(242,54,25)"/><text x="56.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="53" y="804" width="7" height="15" fill="rgb(253,194,1)"/><text x="56.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="53" y="820" width="7" height="15" fill="rgb(228,17,31)"/><text x="56.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="53" y="836" width="7" height="15" fill="rgb(249,14,51)"/><text x="56.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="53" y="852" width="7" height="15" fill="rgb(248,173,18)"/><text x="56.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/io/matlab/mio.py:11) (1 samples, 0.62%)</title><rect x="53" y="868" width="7" height="15" fill="rgb(234,84,4)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="53" y="884" width="7" height="15" fill="rgb(205,112,7)"/><text x="56.00" y="894.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.62%)</title><rect x="53" y="900" width="7" height="15" fill="rgb(218,47,37)"/><text x="56.00" y="910.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:104) (1 samples, 0.62%)</title><rect x="53" y="916" width="7" height="15" fill="rgb(222,216,51)"/><text x="56.00" y="926.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (1 samples, 0.62%)</title><rect x="60" y="628" width="8" height="15" fill="rgb(225,58,52)"/><text x="63.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="644" width="8" height="15" fill="rgb(219,189,33)"/><text x="63.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="660" width="8" height="15" fill="rgb(229,115,27)"/><text x="63.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="676" width="8" height="15" fill="rgb(218,6,11)"/><text x="63.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="60" y="692" width="8" height="15" fill="rgb(236,9,51)"/><text x="63.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="708" width="8" height="15" fill="rgb(239,166,21)"/><text x="63.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (1 samples, 0.62%)</title><rect x="60" y="724" width="8" height="15" fill="rgb(253,199,18)"/><text x="63.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="740" width="8" height="15" fill="rgb(232,141,11)"/><text x="63.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="756" width="8" height="15" fill="rgb(207,174,32)"/><text x="63.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="772" width="8" height="15" fill="rgb(222,135,46)"/><text x="63.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="60" y="788" width="8" height="15" fill="rgb(239,25,52)"/><text x="63.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="804" width="8" height="15" fill="rgb(230,79,20)"/><text x="63.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (1 samples, 0.62%)</title><rect x="60" y="820" width="8" height="15" fill="rgb(244,123,1)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="836" width="8" height="15" fill="rgb(223,94,25)"/><text x="63.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="852" width="8" height="15" fill="rgb(225,204,47)"/><text x="63.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="868" width="8" height="15" fill="rgb(234,41,17)"/><text x="63.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="884" width="8" height="15" fill="rgb(205,50,6)"/><text x="63.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="900" width="8" height="15" fill="rgb(205,76,7)"/><text x="63.00" y="910.50"></text></g><g><title>0x7fb8fd2e240e (?) (1 samples, 0.62%)</title><rect x="60" y="916" width="8" height="15" fill="rgb(223,102,2)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="932" width="8" height="15" fill="rgb(245,178,42)"/><text x="63.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="948" width="8" height="15" fill="rgb(226,189,42)"/><text x="63.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="964" width="8" height="15" fill="rgb(205,47,24)"/><text x="63.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="980" width="8" height="15" fill="rgb(229,169,14)"/><text x="63.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="996" width="8" height="15" fill="rgb(209,229,18)"/><text x="63.00" y="1006.50"></text></g><g><title>0x7fb8fd09bcd2 (?) (1 samples, 0.62%)</title><rect x="60" y="1012" width="8" height="15" fill="rgb(207,35,43)"/><text x="63.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="1028" width="8" height="15" fill="rgb(247,148,37)"/><text x="63.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="1044" width="8" height="15" fill="rgb(233,18,16)"/><text x="63.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="1060" width="8" height="15" fill="rgb(213,73,4)"/><text x="63.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="1076" width="8" height="15" fill="rgb(207,63,37)"/><text x="63.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="1092" width="8" height="15" fill="rgb(221,91,20)"/><text x="63.00" y="1102.50"></text></g><g><title>0x7fb8fc7910e5 (?) (1 samples, 0.62%)</title><rect x="60" y="1108" width="8" height="15" fill="rgb(233,135,39)"/><text x="63.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="1124" width="8" height="15" fill="rgb(247,19,45)"/><text x="63.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="1140" width="8" height="15" fill="rgb(241,207,37)"/><text x="63.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="1156" width="8" height="15" fill="rgb(226,22,52)"/><text x="63.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="1172" width="8" height="15" fill="rgb(242,225,28)"/><text x="63.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="1188" width="8" height="15" fill="rgb(213,166,19)"/><text x="63.00" y="1198.50"></text></g><g><title>0x7fb8fc515e68 (?) (1 samples, 0.62%)</title><rect x="60" y="1204" width="8" height="15" fill="rgb(226,122,38)"/><text x="63.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="1220" width="8" height="15" fill="rgb(253,86,51)"/><text x="63.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="1236" width="8" height="15" fill="rgb(218,35,20)"/><text x="63.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="1252" width="8" height="15" fill="rgb(224,173,17)"/><text x="63.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="1268" width="8" height="15" fill="rgb(236,133,53)"/><text x="63.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="1284" width="8" height="15" fill="rgb(243,181,34)"/><text x="63.00" y="1294.50"></text></g><g><title>0x7fb8fc2a62fb (?) (1 samples, 0.62%)</title><rect x="60" y="1300" width="8" height="15" fill="rgb(207,161,6)"/><text x="63.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="1316" width="8" height="15" fill="rgb(214,127,30)"/><text x="63.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="1332" width="8" height="15" fill="rgb(212,148,2)"/><text x="63.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="1348" width="8" height="15" fill="rgb(246,200,43)"/><text x="63.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="1364" width="8" height="15" fill="rgb(220,40,36)"/><text x="63.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="1380" width="8" height="15" fill="rgb(243,221,27)"/><text x="63.00" y="1390.50"></text></g><g><title>0x7fb8fc08a153 (?) (1 samples, 0.62%)</title><rect x="60" y="1396" width="8" height="15" fill="rgb(248,76,39)"/><text x="63.00" y="1406.50"></text></g><g><title>0x7fb8fc088c13 (?) (1 samples, 0.62%)</title><rect x="60" y="1412" width="8" height="15" fill="rgb(214,170,4)"/><text x="63.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="60" y="1428" width="8" height="15" fill="rgb(249,204,4)"/><text x="63.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="60" y="1444" width="8" height="15" fill="rgb(234,137,8)"/><text x="63.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="60" y="1460" width="8" height="15" fill="rgb(227,33,13)"/><text x="63.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.62%)</title><rect x="60" y="1476" width="8" height="15" fill="rgb(215,88,0)"/><text x="63.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="60" y="1492" width="8" height="15" fill="rgb(246,191,14)"/><text x="63.00" y="1502.50"></text></g><g><title>0x7fb8fbe25181 (?) (1 samples, 0.62%)</title><rect x="60" y="1508" width="8" height="15" fill="rgb(240,51,49)"/><text x="63.00" y="1518.50"></text></g><g><title>0x7fb8fbe281c9 (?) (1 samples, 0.62%)</title><rect x="60" y="1524" width="8" height="15" fill="rgb(252,144,4)"/><text x="63.00" y="1534.50"></text></g><g><title>0x7fb8fbe54167 (?) (1 samples, 0.62%)</title><rect x="60" y="1540" width="8" height="15" fill="rgb(234,180,13)"/><text x="63.00" y="1550.50"></text></g><g><title>0x7fb8fbe4fb64 (?) (1 samples, 0.62%)</title><rect x="60" y="1556" width="8" height="15" fill="rgb(210,40,53)"/><text x="63.00" y="1566.50"></text></g><g><title>0x7fb8fbe33b18 (?) (1 samples, 0.62%)</title><rect x="60" y="1572" width="8" height="15" fill="rgb(233,174,2)"/><text x="63.00" y="1582.50"></text></g><g><title>0x7fb8fbe27ce5 (?) (1 samples, 0.62%)</title><rect x="60" y="1588" width="8" height="15" fill="rgb(239,146,19)"/><text x="63.00" y="1598.50"></text></g><g><title>0x7fb8fbe54667 (?) (1 samples, 0.62%)</title><rect x="60" y="1604" width="8" height="15" fill="rgb(251,152,53)"/><text x="63.00" y="1614.50"></text></g><g><title>0x7fb8fbe34535 (?) (1 samples, 0.62%)</title><rect x="60" y="1620" width="8" height="15" fill="rgb(247,180,33)"/><text x="63.00" y="1630.50"></text></g><g><title>escape (re.py:257) (1 samples, 0.62%)</title><rect x="60" y="1636" width="8" height="15" fill="rgb(237,135,33)"/><text x="63.00" y="1646.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 1.23%)</title><rect x="60" y="532" width="15" height="15" fill="rgb(253,219,25)"/><text x="63.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="60" y="548" width="15" height="15" fill="rgb(245,45,18)"/><text x="63.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="60" y="564" width="15" height="15" fill="rgb(236,34,42)"/><text x="63.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="60" y="580" width="15" height="15" fill="rgb(206,17,23)"/><text x="63.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="60" y="596" width="15" height="15" fill="rgb(223,188,13)"/><text x="63.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="60" y="612" width="15" height="15" fill="rgb(231,201,52)"/><text x="63.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.62%)</title><rect x="68" y="628" width="7" height="15" fill="rgb(252,125,36)"/><text x="71.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="644" width="7" height="15" fill="rgb(244,195,23)"/><text x="71.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="660" width="7" height="15" fill="rgb(225,2,49)"/><text x="71.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="676" width="7" height="15" fill="rgb(225,139,5)"/><text x="71.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="692" width="7" height="15" fill="rgb(240,195,28)"/><text x="71.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="708" width="7" height="15" fill="rgb(213,149,1)"/><text x="71.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.62%)</title><rect x="68" y="724" width="7" height="15" fill="rgb(225,63,20)"/><text x="71.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="740" width="7" height="15" fill="rgb(249,41,0)"/><text x="71.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="756" width="7" height="15" fill="rgb(230,187,4)"/><text x="71.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="772" width="7" height="15" fill="rgb(247,190,8)"/><text x="71.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="788" width="7" height="15" fill="rgb(210,59,29)"/><text x="71.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="804" width="7" height="15" fill="rgb(221,95,49)"/><text x="71.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.62%)</title><rect x="68" y="820" width="7" height="15" fill="rgb(253,0,38)"/><text x="71.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="836" width="7" height="15" fill="rgb(251,125,43)"/><text x="71.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="852" width="7" height="15" fill="rgb(218,215,50)"/><text x="71.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="868" width="7" height="15" fill="rgb(249,87,51)"/><text x="71.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="884" width="7" height="15" fill="rgb(248,97,2)"/><text x="71.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="900" width="7" height="15" fill="rgb(241,70,16)"/><text x="71.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.62%)</title><rect x="68" y="916" width="7" height="15" fill="rgb(205,209,51)"/><text x="71.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="932" width="7" height="15" fill="rgb(216,32,16)"/><text x="71.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="948" width="7" height="15" fill="rgb(227,10,34)"/><text x="71.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="964" width="7" height="15" fill="rgb(228,140,48)"/><text x="71.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="980" width="7" height="15" fill="rgb(247,102,42)"/><text x="71.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="996" width="7" height="15" fill="rgb(210,115,4)"/><text x="71.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.62%)</title><rect x="68" y="1012" width="7" height="15" fill="rgb(231,154,0)"/><text x="71.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1028" width="7" height="15" fill="rgb(240,58,21)"/><text x="71.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1044" width="7" height="15" fill="rgb(244,212,8)"/><text x="71.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1060" width="7" height="15" fill="rgb(233,21,9)"/><text x="71.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1076" width="7" height="15" fill="rgb(251,212,23)"/><text x="71.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1092" width="7" height="15" fill="rgb(232,215,53)"/><text x="71.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.62%)</title><rect x="68" y="1108" width="7" height="15" fill="rgb(227,125,20)"/><text x="71.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1124" width="7" height="15" fill="rgb(216,220,3)"/><text x="71.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1140" width="7" height="15" fill="rgb(214,59,41)"/><text x="71.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1156" width="7" height="15" fill="rgb(217,148,6)"/><text x="71.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1172" width="7" height="15" fill="rgb(209,225,32)"/><text x="71.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1188" width="7" height="15" fill="rgb(246,210,49)"/><text x="71.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.62%)</title><rect x="68" y="1204" width="7" height="15" fill="rgb(211,19,47)"/><text x="71.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1220" width="7" height="15" fill="rgb(207,91,34)"/><text x="71.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1236" width="7" height="15" fill="rgb(211,199,15)"/><text x="71.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1252" width="7" height="15" fill="rgb(230,24,25)"/><text x="71.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1268" width="7" height="15" fill="rgb(245,115,53)"/><text x="71.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1284" width="7" height="15" fill="rgb(241,123,43)"/><text x="71.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.62%)</title><rect x="68" y="1300" width="7" height="15" fill="rgb(212,148,53)"/><text x="71.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1316" width="7" height="15" fill="rgb(247,58,23)"/><text x="71.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1332" width="7" height="15" fill="rgb(209,45,5)"/><text x="71.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1348" width="7" height="15" fill="rgb(229,152,11)"/><text x="71.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1364" width="7" height="15" fill="rgb(242,112,16)"/><text x="71.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1380" width="7" height="15" fill="rgb(232,99,6)"/><text x="71.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.62%)</title><rect x="68" y="1396" width="7" height="15" fill="rgb(253,202,46)"/><text x="71.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1412" width="7" height="15" fill="rgb(205,36,19)"/><text x="71.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1428" width="7" height="15" fill="rgb(239,190,6)"/><text x="71.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1444" width="7" height="15" fill="rgb(230,71,51)"/><text x="71.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1460" width="7" height="15" fill="rgb(216,167,9)"/><text x="71.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1476" width="7" height="15" fill="rgb(209,61,32)"/><text x="71.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.62%)</title><rect x="68" y="1492" width="7" height="15" fill="rgb(224,130,5)"/><text x="71.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1508" width="7" height="15" fill="rgb(235,18,45)"/><text x="71.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1524" width="7" height="15" fill="rgb(249,204,50)"/><text x="71.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1540" width="7" height="15" fill="rgb(212,127,34)"/><text x="71.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1556" width="7" height="15" fill="rgb(245,208,51)"/><text x="71.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1572" width="7" height="15" fill="rgb(206,215,2)"/><text x="71.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.62%)</title><rect x="68" y="1588" width="7" height="15" fill="rgb(252,11,1)"/><text x="71.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1604" width="7" height="15" fill="rgb(222,39,21)"/><text x="71.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1620" width="7" height="15" fill="rgb(248,157,11)"/><text x="71.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1636" width="7" height="15" fill="rgb(252,130,49)"/><text x="71.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1652" width="7" height="15" fill="rgb(213,198,41)"/><text x="71.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1668" width="7" height="15" fill="rgb(216,183,48)"/><text x="71.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.62%)</title><rect x="68" y="1684" width="7" height="15" fill="rgb(231,183,36)"/><text x="71.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1700" width="7" height="15" fill="rgb(216,93,29)"/><text x="71.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1716" width="7" height="15" fill="rgb(244,59,19)"/><text x="71.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1732" width="7" height="15" fill="rgb(253,110,48)"/><text x="71.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1748" width="7" height="15" fill="rgb(210,165,15)"/><text x="71.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1764" width="7" height="15" fill="rgb(215,114,36)"/><text x="71.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.62%)</title><rect x="68" y="1780" width="7" height="15" fill="rgb(239,127,44)"/><text x="71.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1796" width="7" height="15" fill="rgb(225,100,21)"/><text x="71.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1812" width="7" height="15" fill="rgb(241,217,31)"/><text x="71.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1828" width="7" height="15" fill="rgb(237,144,47)"/><text x="71.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1844" width="7" height="15" fill="rgb(215,22,5)"/><text x="71.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1860" width="7" height="15" fill="rgb(233,64,40)"/><text x="71.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.62%)</title><rect x="68" y="1876" width="7" height="15" fill="rgb(222,82,46)"/><text x="71.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.62%)</title><rect x="68" y="1892" width="7" height="15" fill="rgb(215,184,53)"/><text x="71.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1908" width="7" height="15" fill="rgb(213,113,19)"/><text x="71.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="68" y="1924" width="7" height="15" fill="rgb(238,62,30)"/><text x="71.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="68" y="1940" width="7" height="15" fill="rgb(216,187,33)"/><text x="71.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="68" y="1956" width="7" height="15" fill="rgb(233,117,14)"/><text x="71.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="68" y="1972" width="7" height="15" fill="rgb(234,157,48)"/><text x="71.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="68" y="1988" width="7" height="15" fill="rgb(236,170,49)"/><text x="71.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.62%)</title><rect x="68" y="2004" width="7" height="15" fill="rgb(218,228,25)"/><text x="71.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.62%)</title><rect x="68" y="2020" width="7" height="15" fill="rgb(212,163,10)"/><text x="71.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1372) (1 samples, 0.62%)</title><rect x="68" y="2036" width="7" height="15" fill="rgb(214,164,29)"/><text x="71.00" y="2046.50"></text></g><g><title>aliased_name (matplotlib/artist.py:1334) (1 samples, 0.62%)</title><rect x="68" y="2052" width="7" height="15" fill="rgb(224,212,26)"/><text x="71.00" y="2062.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.85%)</title><rect x="60" y="436" width="22" height="15" fill="rgb(230,146,52)"/><text x="63.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.85%)</title><rect x="60" y="452" width="22" height="15" fill="rgb(205,64,51)"/><text x="63.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.85%)</title><rect x="60" y="468" width="22" height="15" fill="rgb(239,170,11)"/><text x="63.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.85%)</title><rect x="60" y="484" width="22" height="15" fill="rgb(236,107,27)"/><text x="63.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.85%)</title><rect x="60" y="500" width="22" height="15" fill="rgb(237,212,46)"/><text x="63.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.85%)</title><rect x="60" y="516" width="22" height="15" fill="rgb(242,220,28)"/><text x="63.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:16) (1 samples, 0.62%)</title><rect x="75" y="532" width="7" height="15" fill="rgb(243,103,2)"/><text x="78.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="75" y="548" width="7" height="15" fill="rgb(252,17,22)"/><text x="78.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="75" y="564" width="7" height="15" fill="rgb(208,44,31)"/><text x="78.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="75" y="580" width="7" height="15" fill="rgb(248,189,20)"/><text x="78.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="75" y="596" width="7" height="15" fill="rgb(209,134,28)"/><text x="78.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="75" y="612" width="7" height="15" fill="rgb(223,208,21)"/><text x="78.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_node.py:9) (1 samples, 0.62%)</title><rect x="75" y="628" width="7" height="15" fill="rgb(213,165,10)"/><text x="78.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="75" y="644" width="7" height="15" fill="rgb(212,180,18)"/><text x="78.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="75" y="660" width="7" height="15" fill="rgb(232,224,37)"/><text x="78.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="75" y="676" width="7" height="15" fill="rgb(230,74,37)"/><text x="78.00" y="686.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:321) (1 samples, 0.62%)</title><rect x="75" y="692" width="7" height="15" fill="rgb(231,160,46)"/><text x="78.00" y="702.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.62%)</title><rect x="82" y="1460" width="8" height="15" fill="rgb(240,225,16)"/><text x="85.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.62%)</title><rect x="82" y="1476" width="8" height="15" fill="rgb(234,79,3)"/><text x="85.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.62%)</title><rect x="82" y="1492" width="8" height="15" fill="rgb(229,56,13)"/><text x="85.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.62%)</title><rect x="82" y="1508" width="8" height="15" fill="rgb(244,169,10)"/><text x="85.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.62%)</title><rect x="82" y="1524" width="8" height="15" fill="rgb(217,174,9)"/><text x="85.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.62%)</title><rect x="82" y="1540" width="8" height="15" fill="rgb(243,146,6)"/><text x="85.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.62%)</title><rect x="82" y="1556" width="8" height="15" fill="rgb(215,76,14)"/><text x="85.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:117) (1 samples, 0.62%)</title><rect x="82" y="1572" width="8" height="15" fill="rgb(218,119,7)"/><text x="85.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.62%)</title><rect x="82" y="1588" width="8" height="15" fill="rgb(213,28,0)"/><text x="85.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="82" y="1604" width="8" height="15" fill="rgb(209,4,28)"/><text x="85.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="82" y="1620" width="8" height="15" fill="rgb(245,168,0)"/><text x="85.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="82" y="1636" width="8" height="15" fill="rgb(227,66,35)"/><text x="85.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="82" y="1652" width="8" height="15" fill="rgb(212,86,46)"/><text x="85.00" y="1662.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema::FormalParameter, &gt;::init_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="82" y="1668" width="8" height="15" fill="rgb(254,21,28)"/><text x="85.00" y="1678.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_insert_multi_node (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="82" y="1684" width="8" height="15" fill="rgb(249,220,29)"/><text x="85.00" y="1694.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:4) (12 samples, 7.41%)</title><rect x="10" y="52" width="87" height="15" fill="rgb(239,27,51)"/><text x="13.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 7.41%)</title><rect x="10" y="68" width="87" height="15" fill="rgb(246,12,12)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 7.41%)</title><rect x="10" y="84" width="87" height="15" fill="rgb(244,11,10)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 7.41%)</title><rect x="10" y="100" width="87" height="15" fill="rgb(249,2,53)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 7.41%)</title><rect x="10" y="116" width="87" height="15" fill="rgb(209,217,24)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 7.41%)</title><rect x="10" y="132" width="87" height="15" fill="rgb(234,206,38)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (7 samples, 4.32%)</title><rect x="46" y="148" width="51" height="15" fill="rgb(250,115,29)"/><text x="49.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 4.32%)</title><rect x="46" y="164" width="51" height="15" fill="rgb(223,225,51)"/><text x="49.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 4.32%)</title><rect x="46" y="180" width="51" height="15" fill="rgb(211,7,2)"/><text x="49.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 4.32%)</title><rect x="46" y="196" width="51" height="15" fill="rgb(250,28,39)"/><text x="49.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 4.32%)</title><rect x="46" y="212" width="51" height="15" fill="rgb(210,42,12)"/><text x="49.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 4.32%)</title><rect x="46" y="228" width="51" height="15" fill="rgb(247,181,45)"/><text x="49.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 3.70%)</title><rect x="53" y="244" width="44" height="15" fill="rgb(236,52,14)"/><text x="56.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.70%)</title><rect x="53" y="260" width="44" height="15" fill="rgb(217,25,25)"/><text x="56.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.70%)</title><rect x="53" y="276" width="44" height="15" fill="rgb(208,178,14)"/><text x="56.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.70%)</title><rect x="53" y="292" width="44" height="15" fill="rgb(211,64,10)"/><text x="56.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.70%)</title><rect x="53" y="308" width="44" height="15" fill="rgb(231,208,37)"/><text x="56.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.70%)</title><rect x="53" y="324" width="44" height="15" fill="rgb(209,92,23)"/><text x="56.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 3.09%)</title><rect x="60" y="340" width="37" height="15" fill="rgb(234,63,8)"/><text x="63.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 3.09%)</title><rect x="60" y="356" width="37" height="15" fill="rgb(230,105,44)"/><text x="63.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 3.09%)</title><rect x="60" y="372" width="37" height="15" fill="rgb(213,52,12)"/><text x="63.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 3.09%)</title><rect x="60" y="388" width="37" height="15" fill="rgb(230,164,19)"/><text x="63.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 3.09%)</title><rect x="60" y="404" width="37" height="15" fill="rgb(216,151,48)"/><text x="63.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 3.09%)</title><rect x="60" y="420" width="37" height="15" fill="rgb(238,175,54)"/><text x="63.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 1.23%)</title><rect x="82" y="436" width="15" height="15" fill="rgb(252,207,10)"/><text x="85.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="452" width="15" height="15" fill="rgb(223,7,39)"/><text x="85.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.23%)</title><rect x="82" y="468" width="15" height="15" fill="rgb(244,183,24)"/><text x="85.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="484" width="15" height="15" fill="rgb(245,2,22)"/><text x="85.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="500" width="15" height="15" fill="rgb(222,217,30)"/><text x="85.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="516" width="15" height="15" fill="rgb(237,8,24)"/><text x="85.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="532" width="15" height="15" fill="rgb(212,57,13)"/><text x="85.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="548" width="15" height="15" fill="rgb(234,214,30)"/><text x="85.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="564" width="15" height="15" fill="rgb(206,14,28)"/><text x="85.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 1.23%)</title><rect x="82" y="580" width="15" height="15" fill="rgb(239,127,39)"/><text x="85.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="596" width="15" height="15" fill="rgb(237,102,18)"/><text x="85.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="612" width="15" height="15" fill="rgb(212,171,22)"/><text x="85.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="628" width="15" height="15" fill="rgb(249,180,31)"/><text x="85.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="644" width="15" height="15" fill="rgb(236,144,37)"/><text x="85.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="660" width="15" height="15" fill="rgb(241,220,20)"/><text x="85.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 1.23%)</title><rect x="82" y="676" width="15" height="15" fill="rgb(217,213,33)"/><text x="85.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="692" width="15" height="15" fill="rgb(253,221,0)"/><text x="85.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="708" width="15" height="15" fill="rgb(244,197,29)"/><text x="85.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="724" width="15" height="15" fill="rgb(244,114,15)"/><text x="85.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="740" width="15" height="15" fill="rgb(217,163,19)"/><text x="85.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="756" width="15" height="15" fill="rgb(242,100,3)"/><text x="85.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 1.23%)</title><rect x="82" y="772" width="15" height="15" fill="rgb(213,68,18)"/><text x="85.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="788" width="15" height="15" fill="rgb(254,194,26)"/><text x="85.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="804" width="15" height="15" fill="rgb(229,143,41)"/><text x="85.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="820" width="15" height="15" fill="rgb(207,133,47)"/><text x="85.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="836" width="15" height="15" fill="rgb(247,223,34)"/><text x="85.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="852" width="15" height="15" fill="rgb(239,123,46)"/><text x="85.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 1.23%)</title><rect x="82" y="868" width="15" height="15" fill="rgb(241,86,35)"/><text x="85.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="884" width="15" height="15" fill="rgb(223,34,18)"/><text x="85.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.23%)</title><rect x="82" y="900" width="15" height="15" fill="rgb(227,190,20)"/><text x="85.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="916" width="15" height="15" fill="rgb(243,96,12)"/><text x="85.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="932" width="15" height="15" fill="rgb(249,24,53)"/><text x="85.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="948" width="15" height="15" fill="rgb(246,24,31)"/><text x="85.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="964" width="15" height="15" fill="rgb(220,133,43)"/><text x="85.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="980" width="15" height="15" fill="rgb(214,170,38)"/><text x="85.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="996" width="15" height="15" fill="rgb(211,77,52)"/><text x="85.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 1.23%)</title><rect x="82" y="1012" width="15" height="15" fill="rgb(226,102,24)"/><text x="85.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="1028" width="15" height="15" fill="rgb(213,208,43)"/><text x="85.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="1044" width="15" height="15" fill="rgb(230,228,23)"/><text x="85.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="1060" width="15" height="15" fill="rgb(214,93,37)"/><text x="85.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="1076" width="15" height="15" fill="rgb(206,185,3)"/><text x="85.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="1092" width="15" height="15" fill="rgb(206,190,41)"/><text x="85.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 1.23%)</title><rect x="82" y="1108" width="15" height="15" fill="rgb(235,175,15)"/><text x="85.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.23%)</title><rect x="82" y="1124" width="15" height="15" fill="rgb(213,102,38)"/><text x="85.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="1140" width="15" height="15" fill="rgb(237,1,51)"/><text x="85.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="1156" width="15" height="15" fill="rgb(243,198,20)"/><text x="85.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="1172" width="15" height="15" fill="rgb(231,220,36)"/><text x="85.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="1188" width="15" height="15" fill="rgb(217,87,12)"/><text x="85.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="1204" width="15" height="15" fill="rgb(209,89,17)"/><text x="85.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="1220" width="15" height="15" fill="rgb(216,218,7)"/><text x="85.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 1.23%)</title><rect x="82" y="1236" width="15" height="15" fill="rgb(218,133,25)"/><text x="85.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.23%)</title><rect x="82" y="1252" width="15" height="15" fill="rgb(209,79,18)"/><text x="85.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="1268" width="15" height="15" fill="rgb(221,207,29)"/><text x="85.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="1284" width="15" height="15" fill="rgb(225,115,10)"/><text x="85.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="1300" width="15" height="15" fill="rgb(217,82,48)"/><text x="85.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="1316" width="15" height="15" fill="rgb(220,158,48)"/><text x="85.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="1332" width="15" height="15" fill="rgb(247,77,21)"/><text x="85.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="1348" width="15" height="15" fill="rgb(225,57,31)"/><text x="85.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 1.23%)</title><rect x="82" y="1364" width="15" height="15" fill="rgb(208,165,41)"/><text x="85.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="82" y="1380" width="15" height="15" fill="rgb(229,214,52)"/><text x="85.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="82" y="1396" width="15" height="15" fill="rgb(209,66,43)"/><text x="85.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="82" y="1412" width="15" height="15" fill="rgb(212,222,24)"/><text x="85.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="82" y="1428" width="15" height="15" fill="rgb(247,136,29)"/><text x="85.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="82" y="1444" width="15" height="15" fill="rgb(213,223,42)"/><text x="85.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.62%)</title><rect x="90" y="1460" width="7" height="15" fill="rgb(247,91,28)"/><text x="93.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.62%)</title><rect x="90" y="1476" width="7" height="15" fill="rgb(236,102,30)"/><text x="93.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.62%)</title><rect x="90" y="1492" width="7" height="15" fill="rgb(243,113,29)"/><text x="93.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.62%)</title><rect x="90" y="1508" width="7" height="15" fill="rgb(247,53,19)"/><text x="93.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.62%)</title><rect x="90" y="1524" width="7" height="15" fill="rgb(211,29,12)"/><text x="93.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.62%)</title><rect x="90" y="1540" width="7" height="15" fill="rgb(209,30,4)"/><text x="93.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.62%)</title><rect x="90" y="1556" width="7" height="15" fill="rgb(250,12,10)"/><text x="93.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.62%)</title><rect x="90" y="1572" width="7" height="15" fill="rgb(234,212,49)"/><text x="93.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.62%)</title><rect x="90" y="1588" width="7" height="15" fill="rgb(206,118,3)"/><text x="93.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.62%)</title><rect x="90" y="1604" width="7" height="15" fill="rgb(251,134,21)"/><text x="93.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:588) (1 samples, 0.62%)</title><rect x="90" y="1620" width="7" height="15" fill="rgb(235,163,33)"/><text x="93.00" y="1630.50"></text></g><g><title>_compile (jinja2/environment.py:551) (1 samples, 0.62%)</title><rect x="90" y="1636" width="7" height="15" fill="rgb(227,26,24)"/><text x="93.00" y="1646.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.62%)</title><rect x="111" y="164" width="8" height="15" fill="rgb(205,220,21)"/><text x="114.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 1.23%)</title><rect x="119" y="164" width="14" height="15" fill="rgb(243,195,23)"/><text x="122.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.62%)</title><rect x="184" y="196" width="8" height="15" fill="rgb(216,145,40)"/><text x="187.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 4.94%)</title><rect x="148" y="180" width="58" height="15" fill="rgb(249,30,41)"/><text x="151.00" y="190.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.23%)</title><rect x="192" y="196" width="14" height="15" fill="rgb(223,45,31)"/><text x="195.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (15 samples, 9.26%)</title><rect x="111" y="148" width="110" height="15" fill="rgb(227,123,15)"/><text x="114.00" y="158.50">predict (skle..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 7.41%)</title><rect x="133" y="164" width="88" height="15" fill="rgb(206,123,21)"/><text x="136.00" y="174.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 1.23%)</title><rect x="206" y="180" width="15" height="15" fill="rgb(239,189,3)"/><text x="209.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 1.23%)</title><rect x="221" y="180" width="14" height="15" fill="rgb(252,39,41)"/><text x="224.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (2 samples, 1.23%)</title><rect x="235" y="180" width="15" height="15" fill="rgb(212,86,23)"/><text x="238.00" y="190.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.62%)</title><rect x="243" y="196" width="7" height="15" fill="rgb(216,9,0)"/><text x="246.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:481) (1 samples, 0.62%)</title><rect x="257" y="196" width="7" height="15" fill="rgb(219,155,21)"/><text x="260.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (3 samples, 1.85%)</title><rect x="264" y="196" width="22" height="15" fill="rgb(240,226,8)"/><text x="267.00" y="206.50">_..</text></g><g><title>__enter__ (warnings.py:483) (1 samples, 0.62%)</title><rect x="286" y="196" width="8" height="15" fill="rgb(208,34,47)"/><text x="289.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (2 samples, 1.23%)</title><rect x="294" y="196" width="14" height="15" fill="rgb(242,62,48)"/><text x="297.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (11 samples, 6.79%)</title><rect x="250" y="180" width="80" height="15" fill="rgb(210,185,33)"/><text x="253.00" y="190.50">check_arr..</text></g><g><title>__init__ (warnings.py:463) (3 samples, 1.85%)</title><rect x="308" y="196" width="22" height="15" fill="rgb(248,143,3)"/><text x="311.00" y="206.50">_..</text></g><g><title>_add_filter (warnings.py:186) (5 samples, 3.09%)</title><rect x="330" y="212" width="36" height="15" fill="rgb(229,193,9)"/><text x="333.00" y="222.50">_ad..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.62%)</title><rect x="366" y="212" width="8" height="15" fill="rgb(249,58,24)"/><text x="369.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (7 samples, 4.32%)</title><rect x="330" y="180" width="51" height="15" fill="rgb(224,186,9)"/><text x="333.00" y="190.50">check..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 4.32%)</title><rect x="330" y="196" width="51" height="15" fill="rgb(225,25,42)"/><text x="333.00" y="206.50">simpl..</text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.62%)</title><rect x="374" y="212" width="7" height="15" fill="rgb(223,110,19)"/><text x="377.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 1.23%)</title><rect x="381" y="180" width="15" height="15" fill="rgb(218,214,2)"/><text x="384.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 1.23%)</title><rect x="381" y="196" width="15" height="15" fill="rgb(224,22,49)"/><text x="384.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 1.23%)</title><rect x="381" y="212" width="15" height="15" fill="rgb(253,198,51)"/><text x="384.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.62%)</title><rect x="388" y="228" width="8" height="15" fill="rgb(241,106,29)"/><text x="391.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:494) (2 samples, 1.23%)</title><rect x="410" y="196" width="15" height="15" fill="rgb(246,58,5)"/><text x="413.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (5 samples, 3.09%)</title><rect x="396" y="180" width="36" height="15" fill="rgb(250,222,15)"/><text x="399.00" y="190.50">che..</text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.62%)</title><rect x="425" y="196" width="7" height="15" fill="rgb(244,7,10)"/><text x="428.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.62%)</title><rect x="432" y="180" width="7" height="15" fill="rgb(223,4,46)"/><text x="435.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (1 samples, 0.62%)</title><rect x="439" y="180" width="8" height="15" fill="rgb(235,27,34)"/><text x="442.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 1.23%)</title><rect x="461" y="212" width="15" height="15" fill="rgb(208,198,28)"/><text x="464.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:416) (1 samples, 0.62%)</title><rect x="476" y="212" width="7" height="15" fill="rgb(244,197,35)"/><text x="479.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 3.70%)</title><rect x="454" y="196" width="44" height="15" fill="rgb(208,18,37)"/><text x="457.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 1.23%)</title><rect x="483" y="212" width="15" height="15" fill="rgb(222,44,34)"/><text x="486.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (9 samples, 5.56%)</title><rect x="447" y="180" width="65" height="15" fill="rgb(209,81,50)"/><text x="450.00" y="190.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 1.23%)</title><rect x="498" y="196" width="14" height="15" fill="rgb(218,155,1)"/><text x="501.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.62%)</title><rect x="505" y="212" width="7" height="15" fill="rgb(218,16,16)"/><text x="508.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (5 samples, 3.09%)</title><rect x="512" y="196" width="37" height="15" fill="rgb(238,143,18)"/><text x="515.00" y="206.50">_nu..</text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.62%)</title><rect x="549" y="196" width="7" height="15" fill="rgb(227,128,51)"/><text x="552.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (1 samples, 0.62%)</title><rect x="556" y="196" width="7" height="15" fill="rgb(254,175,31)"/><text x="559.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (15 samples, 9.26%)</title><rect x="512" y="180" width="109" height="15" fill="rgb(220,112,51)"/><text x="515.00" y="190.50">check_array (..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (8 samples, 4.94%)</title><rect x="563" y="196" width="58" height="15" fill="rgb(224,174,23)"/><text x="566.00" y="206.50">_num_s..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 3.09%)</title><rect x="585" y="212" width="36" height="15" fill="rgb(223,192,24)"/><text x="588.00" y="222.50">__i..</text></g><g><title>__subclasscheck__ (abc.py:143) (4 samples, 2.47%)</title><rect x="592" y="228" width="29" height="15" fill="rgb(250,190,1)"/><text x="595.00" y="238.50">__..</text></g><g><title>predict (sklearn/tree/_classes.py:419) (56 samples, 34.57%)</title><rect x="221" y="148" width="408" height="15" fill="rgb(233,113,7)"/><text x="224.00" y="158.50">predict (sklearn/tree/_classes.py:419)</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (56 samples, 34.57%)</title><rect x="221" y="164" width="408" height="15" fill="rgb(244,87,29)"/><text x="224.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py:380)</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.62%)</title><rect x="621" y="180" width="8" height="15" fill="rgb(236,81,52)"/><text x="624.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.62%)</title><rect x="621" y="196" width="8" height="15" fill="rgb(224,106,6)"/><text x="624.00" y="206.50"></text></g><g><title>0x7fb9021742df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="643" y="212" width="7" height="15" fill="rgb(214,47,28)"/><text x="646.00" y="222.50"></text></g><g><title>0x7fb902158d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="643" y="228" width="7" height="15" fill="rgb(220,210,30)"/><text x="646.00" y="238.50"></text></g><g><title>0x7fb902158666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="643" y="244" width="7" height="15" fill="rgb(254,189,11)"/><text x="646.00" y="254.50"></text></g><g><title>0x7fb90214e2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="643" y="260" width="7" height="15" fill="rgb(241,11,25)"/><text x="646.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.62%)</title><rect x="643" y="276" width="7" height="15" fill="rgb(224,87,44)"/><text x="646.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.62%)</title><rect x="643" y="292" width="7" height="15" fill="rgb(224,200,31)"/><text x="646.00" y="302.50"></text></g><g><title>0x7fb927b10e82 (libc-2.29.so) (1 samples, 0.62%)</title><rect x="650" y="244" width="8" height="15" fill="rgb(248,50,21)"/><text x="653.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.62%)</title><rect x="658" y="244" width="7" height="15" fill="rgb(207,218,54)"/><text x="661.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:162) (1 samples, 0.62%)</title><rect x="658" y="260" width="7" height="15" fill="rgb(217,195,32)"/><text x="661.00" y="270.50"></text></g><g><title>0x7fb902174592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.47%)</title><rect x="650" y="212" width="30" height="15" fill="rgb(210,163,38)"/><text x="653.00" y="222.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c:1973) (4 samples, 2.47%)</title><rect x="650" y="228" width="30" height="15" fill="rgb(216,110,1)"/><text x="653.00" y="238.50">ar..</text></g><g><title>unicode_hash (python3.7) (2 samples, 1.23%)</title><rect x="665" y="244" width="15" height="15" fill="rgb(244,60,20)"/><text x="668.00" y="254.50"></text></g><g><title>0x7fb902174644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="680" y="212" width="7" height="15" fill="rgb(250,74,51)"/><text x="683.00" y="222.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.62%)</title><rect x="680" y="228" width="7" height="15" fill="rgb(211,163,6)"/><text x="683.00" y="238.50"></text></g><g><title>0x7fb9021746fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="687" y="212" width="7" height="15" fill="rgb(232,88,2)"/><text x="690.00" y="222.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.62%)</title><rect x="687" y="228" width="7" height="15" fill="rgb(248,156,19)"/><text x="690.00" y="238.50"></text></g><g><title>0x7fb9021748e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="694" y="212" width="7" height="15" fill="rgb(248,66,47)"/><text x="697.00" y="222.50"></text></g><g><title>0x7fb90214c56c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="701" y="228" width="8" height="15" fill="rgb(222,140,44)"/><text x="704.00" y="238.50"></text></g><g><title>0x7fb902175405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 6.17%)</title><rect x="643" y="196" width="73" height="15" fill="rgb(242,11,54)"/><text x="646.00" y="206.50">0x7fb902..</text></g><g><title>0x7fb902174c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.23%)</title><rect x="701" y="212" width="15" height="15" fill="rgb(254,106,10)"/><text x="704.00" y="222.50"></text></g><g><title>0x7fb90214c5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="709" y="228" width="7" height="15" fill="rgb(215,137,21)"/><text x="712.00" y="238.50"></text></g><g><title>0x7fb90214bf22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="709" y="244" width="7" height="15" fill="rgb(217,75,15)"/><text x="712.00" y="254.50"></text></g><g><title>0x7fb902165fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 6.79%)</title><rect x="643" y="180" width="80" height="15" fill="rgb(232,120,48)"/><text x="646.00" y="190.50">0x7fb9021..</text></g><g><title>0x7fb902175540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="716" y="196" width="7" height="15" fill="rgb(245,211,39)"/><text x="719.00" y="206.50"></text></g><g><title>0x7fb90214a2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="716" y="212" width="7" height="15" fill="rgb(227,200,40)"/><text x="719.00" y="222.50"></text></g><g><title>0x7fb902149530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="716" y="228" width="7" height="15" fill="rgb(225,77,9)"/><text x="719.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.62%)</title><rect x="716" y="244" width="7" height="15" fill="rgb(234,124,43)"/><text x="719.00" y="254.50"></text></g><g><title>0x7fb902165ff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="723" y="180" width="8" height="15" fill="rgb(219,26,39)"/><text x="726.00" y="190.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.62%)</title><rect x="731" y="196" width="7" height="15" fill="rgb(242,136,39)"/><text x="734.00" y="206.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.62%)</title><rect x="731" y="212" width="7" height="15" fill="rgb(243,66,41)"/><text x="734.00" y="222.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.62%)</title><rect x="738" y="212" width="7" height="15" fill="rgb(222,179,17)"/><text x="741.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.62%)</title><rect x="738" y="228" width="7" height="15" fill="rgb(250,106,12)"/><text x="741.00" y="238.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.62%)</title><rect x="738" y="244" width="7" height="15" fill="rgb(233,97,1)"/><text x="741.00" y="254.50"></text></g><g><title>0x7fb90216605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.85%)</title><rect x="731" y="180" width="21" height="15" fill="rgb(220,125,7)"/><text x="734.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 1.23%)</title><rect x="738" y="196" width="14" height="15" fill="rgb(208,193,22)"/><text x="741.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.62%)</title><rect x="745" y="212" width="7" height="15" fill="rgb(213,26,52)"/><text x="748.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.62%)</title><rect x="745" y="228" width="7" height="15" fill="rgb(222,63,21)"/><text x="748.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.62%)</title><rect x="745" y="244" width="7" height="15" fill="rgb(241,220,35)"/><text x="748.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1965) (1 samples, 0.62%)</title><rect x="745" y="260" width="7" height="15" fill="rgb(217,183,15)"/><text x="748.00" y="270.50"></text></g><g><title>0x7fb90216614f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="752" y="180" width="8" height="15" fill="rgb(240,225,17)"/><text x="755.00" y="190.50"></text></g><g><title>0x7fb9021661bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="760" y="180" width="7" height="15" fill="rgb(235,182,54)"/><text x="763.00" y="190.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.62%)</title><rect x="760" y="196" width="7" height="15" fill="rgb(250,175,3)"/><text x="763.00" y="206.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.62%)</title><rect x="767" y="196" width="7" height="15" fill="rgb(252,20,40)"/><text x="770.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.62%)</title><rect x="767" y="212" width="7" height="15" fill="rgb(210,42,51)"/><text x="770.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (21 samples, 12.96%)</title><rect x="629" y="148" width="153" height="15" fill="rgb(242,206,23)"/><text x="632.00" y="158.50">predict (sklearn/tr..</text></g><g><title>0x7fb902166d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 11.73%)</title><rect x="643" y="164" width="139" height="15" fill="rgb(238,92,23)"/><text x="646.00" y="174.50">0x7fb902166d2e (s..</text></g><g><title>0x7fb902166328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.23%)</title><rect x="767" y="180" width="15" height="15" fill="rgb(221,166,19)"/><text x="770.00" y="190.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.62%)</title><rect x="774" y="196" width="8" height="15" fill="rgb(215,99,25)"/><text x="777.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.62%)</title><rect x="774" y="212" width="8" height="15" fill="rgb(244,53,49)"/><text x="777.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.62%)</title><rect x="774" y="228" width="8" height="15" fill="rgb(235,141,49)"/><text x="777.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.62%)</title><rect x="774" y="244" width="8" height="15" fill="rgb(248,37,13)"/><text x="777.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.62%)</title><rect x="774" y="260" width="8" height="15" fill="rgb(251,64,8)"/><text x="777.00" y="270.50"></text></g><g><title>0x7fb926d1c600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.62%)</title><rect x="774" y="276" width="8" height="15" fill="rgb(214,70,49)"/><text x="777.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:54) (96 samples, 59.26%)</title><rect x="97" y="52" width="699" height="15" fill="rgb(226,4,37)"/><text x="100.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:53) (96 samples, 59.26%)</title><rect x="97" y="68" width="699" height="15" fill="rgb(232,69,25)"/><text x="100.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37) (96 samples, 59.26%)</title><rect x="97" y="84" width="699" height="15" fill="rgb(232,173,49)"/><text x="100.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31) (96 samples, 59.26%)</title><rect x="97" y="100" width="699" height="15" fill="rgb(245,58,33)"/><text x="100.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (94 samples, 58.02%)</title><rect x="111" y="116" width="685" height="15" fill="rgb(228,102,36)"/><text x="114.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (94 samples, 58.02%)</title><rect x="111" y="132" width="685" height="15" fill="rgb(231,68,53)"/><text x="114.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/tree/_classes.py:424) (2 samples, 1.23%)</title><rect x="782" y="148" width="14" height="15" fill="rgb(206,160,52)"/><text x="785.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.62%)</title><rect x="789" y="164" width="7" height="15" fill="rgb(249,61,39)"/><text x="792.00" y="174.50"></text></g><g><title>0x7fb8e861354f (?) (1 samples, 0.62%)</title><rect x="796" y="244" width="7" height="15" fill="rgb(213,65,6)"/><text x="799.00" y="254.50"></text></g><g><title>0x7fb8e861965e (?) (1 samples, 0.62%)</title><rect x="796" y="260" width="7" height="15" fill="rgb(214,24,25)"/><text x="799.00" y="270.50"></text></g><g><title>0x7fb8e861950f (?) (1 samples, 0.62%)</title><rect x="796" y="276" width="7" height="15" fill="rgb(223,205,29)"/><text x="799.00" y="286.50"></text></g><g><title>0x7fb8e861fd6c (?) (1 samples, 0.62%)</title><rect x="796" y="292" width="7" height="15" fill="rgb(211,58,36)"/><text x="799.00" y="302.50"></text></g><g><title>0x7fb8f1b00ab9 (?) (1 samples, 0.62%)</title><rect x="796" y="308" width="7" height="15" fill="rgb(210,206,40)"/><text x="799.00" y="318.50"></text></g><g><title>0x7fb8f1b01eab (?) (1 samples, 0.62%)</title><rect x="796" y="324" width="7" height="15" fill="rgb(236,215,11)"/><text x="799.00" y="334.50"></text></g><g><title>0x7fb8f1b01ea0 (libgomp.so.1.0.0) (3 samples, 1.85%)</title><rect x="803" y="484" width="22" height="15" fill="rgb(250,71,16)"/><text x="806.00" y="494.50">0..</text></g><g><title>0x7fb8f1b01ea9 (libgomp.so.1.0.0) (5 samples, 3.09%)</title><rect x="825" y="484" width="37" height="15" fill="rgb(225,49,14)"/><text x="828.00" y="494.50">0x7..</text></g><g><title>0x7fb8f1b01eab (libgomp.so.1.0.0) (5 samples, 3.09%)</title><rect x="862" y="484" width="36" height="15" fill="rgb(221,178,10)"/><text x="865.00" y="494.50">0x7..</text></g><g><title>0x7fb8f1b00ab9 (libgomp.so.1.0.0) (17 samples, 10.49%)</title><rect x="803" y="468" width="124" height="15" fill="rgb(242,191,2)"/><text x="806.00" y="478.50">0x7fb8f1b00ab9 ..</text></g><g><title>0x7fb8f1b01ead (libgomp.so.1.0.0) (4 samples, 2.47%)</title><rect x="898" y="484" width="29" height="15" fill="rgb(240,32,1)"/><text x="901.00" y="494.50">0x..</text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:61) (19 samples, 11.73%)</title><rect x="796" y="52" width="139" height="15" fill="rgb(224,76,51)"/><text x="799.00" y="62.50">&lt;module&gt; (bench_D..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:60) (19 samples, 11.73%)</title><rect x="796" y="68" width="139" height="15" fill="rgb(244,32,45)"/><text x="799.00" y="78.50">profile_pyrt (ben..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37) (19 samples, 11.73%)</title><rect x="796" y="84" width="139" height="15" fill="rgb(229,229,27)"/><text x="799.00" y="94.50">setup_profile (be..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31) (19 samples, 11.73%)</title><rect x="796" y="100" width="139" height="15" fill="rgb(251,215,24)"/><text x="799.00" y="110.50">profile (bench_De..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (19 samples, 11.73%)</title><rect x="796" y="116" width="139" height="15" fill="rgb(249,69,26)"/><text x="799.00" y="126.50">time_predict (mlp..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (19 samples, 11.73%)</title><rect x="796" y="132" width="139" height="15" fill="rgb(207,193,10)"/><text x="799.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (19 samples, 11.73%)</title><rect x="796" y="148" width="139" height="15" fill="rgb(245,120,52)"/><text x="799.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (19 samples, 11.73%)</title><rect x="796" y="164" width="139" height="15" fill="rgb(241,208,46)"/><text x="799.00" y="174.50">_run_sequence_run..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (19 samples, 11.73%)</title><rect x="796" y="180" width="139" height="15" fill="rgb(239,221,9)"/><text x="799.00" y="190.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (19 samples, 11.73%)</title><rect x="796" y="196" width="139" height="15" fill="rgb(236,228,43)"/><text x="799.00" y="206.50">run (mlprodict/on..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (19 samples, 11.73%)</title><rect x="796" y="212" width="139" height="15" fill="rgb(208,204,18)"/><text x="799.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (19 samples, 11.73%)</title><rect x="796" y="228" width="139" height="15" fill="rgb(236,84,31)"/><text x="799.00" y="238.50">_run (mlprodict/o..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (18 samples, 11.11%)</title><rect x="803" y="244" width="132" height="15" fill="rgb(205,194,41)"/><text x="806.00" y="254.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (18 samples, 11.11%)</title><rect x="803" y="260" width="132" height="15" fill="rgb(227,149,39)"/><text x="806.00" y="270.50">void pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (18 samples, 11.11%)</title><rect x="803" y="276" width="132" height="15" fill="rgb(237,8,30)"/><text x="806.00" y="286.50">void pybind11::c..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (18 samples, 11.11%)</title><rect x="803" y="292" width="132" height="15" fill="rgb(217,210,41)"/><text x="806.00" y="302.50">pybind11::detail..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (18 samples, 11.11%)</title><rect x="803" y="308" width="132" height="15" fill="rgb(233,187,43)"/><text x="806.00" y="318.50">pybind11::detail..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (18 samples, 11.11%)</title><rect x="803" y="324" width="132" height="15" fill="rgb(208,187,40)"/><text x="806.00" y="334.50">pybind11::cpp_fu..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (18 samples, 11.11%)</title><rect x="803" y="340" width="132" height="15" fill="rgb(248,137,43)"/><text x="806.00" y="350.50">pybind11::array_..</text></g><g><title>pybind11::array::~array (numpy.h:538) (18 samples, 11.11%)</title><rect x="803" y="356" width="132" height="15" fill="rgb(249,119,5)"/><text x="806.00" y="366.50">pybind11::array:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (18 samples, 11.11%)</title><rect x="803" y="372" width="132" height="15" fill="rgb(233,1,10)"/><text x="806.00" y="382.50">pybind11::buffer..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (18 samples, 11.11%)</title><rect x="803" y="388" width="132" height="15" fill="rgb(210,155,11)"/><text x="806.00" y="398.50">pybind11::object..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (18 samples, 11.11%)</title><rect x="803" y="404" width="132" height="15" fill="rgb(232,97,16)"/><text x="806.00" y="414.50">pybind11::handle..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (18 samples, 11.11%)</title><rect x="803" y="420" width="132" height="15" fill="rgb(214,138,49)"/><text x="806.00" y="430.50">RuntimeTreeEnsem..</text></g><g><title>pybind11::array::size (numpy.h:619) (18 samples, 11.11%)</title><rect x="803" y="436" width="132" height="15" fill="rgb(227,150,23)"/><text x="806.00" y="446.50">pybind11::array:..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (18 samples, 11.11%)</title><rect x="803" y="452" width="132" height="15" fill="rgb(238,164,51)"/><text x="806.00" y="462.50">std::accumulate&lt;..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.62%)</title><rect x="927" y="468" width="8" height="15" fill="rgb(244,60,47)"/><text x="930.00" y="478.50"></text></g><g><title>0x7fb8f1affdaa (libgomp.so.1.0.0) (1 samples, 0.62%)</title><rect x="927" y="484" width="8" height="15" fill="rgb(236,180,6)"/><text x="930.00" y="494.50"></text></g><g><title>0x7fb8f1b01cf0 (libgomp.so.1.0.0) (1 samples, 0.62%)</title><rect x="927" y="500" width="8" height="15" fill="rgb(209,116,41)"/><text x="930.00" y="510.50"></text></g><g><title>architecture (platform.py:860) (1 samples, 0.62%)</title><rect x="935" y="388" width="7" height="15" fill="rgb(212,207,3)"/><text x="938.00" y="398.50"></text></g><g><title>calcsize (_struct.c.h:168) (1 samples, 0.62%)</title><rect x="935" y="404" width="7" height="15" fill="rgb(248,125,14)"/><text x="938.00" y="414.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:36) (2 samples, 1.23%)</title><rect x="935" y="84" width="14" height="15" fill="rgb(209,127,41)"/><text x="938.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 1.23%)</title><rect x="935" y="100" width="14" height="15" fill="rgb(239,196,46)"/><text x="938.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 1.23%)</title><rect x="935" y="116" width="14" height="15" fill="rgb(253,66,29)"/><text x="938.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 1.23%)</title><rect x="935" y="132" width="14" height="15" fill="rgb(250,10,49)"/><text x="938.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 1.23%)</title><rect x="935" y="148" width="14" height="15" fill="rgb(240,96,53)"/><text x="938.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 1.23%)</title><rect x="935" y="164" width="14" height="15" fill="rgb(230,57,5)"/><text x="938.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="935" y="180" width="14" height="15" fill="rgb(246,128,26)"/><text x="938.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="935" y="196" width="14" height="15" fill="rgb(250,4,36)"/><text x="938.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="935" y="212" width="14" height="15" fill="rgb(213,222,0)"/><text x="938.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="935" y="228" width="14" height="15" fill="rgb(246,108,5)"/><text x="938.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="935" y="244" width="14" height="15" fill="rgb(211,178,49)"/><text x="938.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 1.23%)</title><rect x="935" y="260" width="14" height="15" fill="rgb(239,201,13)"/><text x="938.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.23%)</title><rect x="935" y="276" width="14" height="15" fill="rgb(217,186,19)"/><text x="938.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.23%)</title><rect x="935" y="292" width="14" height="15" fill="rgb(240,143,0)"/><text x="938.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.23%)</title><rect x="935" y="308" width="14" height="15" fill="rgb(244,104,34)"/><text x="938.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.23%)</title><rect x="935" y="324" width="14" height="15" fill="rgb(221,90,17)"/><text x="938.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.23%)</title><rect x="935" y="340" width="14" height="15" fill="rgb(208,19,37)"/><text x="938.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:15) (2 samples, 1.23%)</title><rect x="935" y="356" width="14" height="15" fill="rgb(216,199,41)"/><text x="938.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py:16) (2 samples, 1.23%)</title><rect x="935" y="372" width="14" height="15" fill="rgb(224,10,13)"/><text x="938.00" y="382.50"></text></g><g><title>architecture (platform.py:868) (1 samples, 0.62%)</title><rect x="942" y="388" width="7" height="15" fill="rgb(218,101,42)"/><text x="945.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py:813) (1 samples, 0.62%)</title><rect x="942" y="404" width="7" height="15" fill="rgb(219,116,28)"/><text x="945.00" y="414.50"></text></g><g><title>__init__ (subprocess.py:775) (1 samples, 0.62%)</title><rect x="942" y="420" width="7" height="15" fill="rgb(235,84,15)"/><text x="945.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py:1443) (1 samples, 0.62%)</title><rect x="942" y="436" width="7" height="15" fill="rgb(230,60,18)"/><text x="945.00" y="446.50"></text></g><g><title>get_exec_path (os.py:634) (1 samples, 0.62%)</title><rect x="942" y="452" width="7" height="15" fill="rgb(230,21,34)"/><text x="945.00" y="462.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.62%)</title><rect x="942" y="468" width="7" height="15" fill="rgb(254,143,41)"/><text x="945.00" y="478.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.62%)</title><rect x="942" y="484" width="7" height="15" fill="rgb(240,124,42)"/><text x="945.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.62%)</title><rect x="956" y="116" width="8" height="15" fill="rgb(236,76,38)"/><text x="959.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.62%)</title><rect x="956" y="132" width="8" height="15" fill="rgb(219,169,8)"/><text x="959.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.62%)</title><rect x="956" y="148" width="8" height="15" fill="rgb(206,14,30)"/><text x="959.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.62%)</title><rect x="986" y="148" width="7" height="15" fill="rgb(250,138,33)"/><text x="989.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.62%)</title><rect x="1007" y="196" width="8" height="15" fill="rgb(205,223,24)"/><text x="1010.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.62%)</title><rect x="1007" y="212" width="8" height="15" fill="rgb(242,183,12)"/><text x="1010.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1007" y="228" width="8" height="15" fill="rgb(233,206,30)"/><text x="1010.00" y="238.50"></text></g><g><title>0x7fb8e7bb8ff9 (?) (1 samples, 0.62%)</title><rect x="1022" y="212" width="7" height="15" fill="rgb(241,80,11)"/><text x="1025.00" y="222.50"></text></g><g><title>0x7fb8e7bb3ef6 (?) (1 samples, 0.62%)</title><rect x="1022" y="228" width="7" height="15" fill="rgb(234,223,17)"/><text x="1025.00" y="238.50"></text></g><g><title>0x7fb8e7ba8458 (?) (1 samples, 0.62%)</title><rect x="1022" y="244" width="7" height="15" fill="rgb(245,147,24)"/><text x="1025.00" y="254.50"></text></g><g><title>0x7fb8e7b98d1e (?) (1 samples, 0.62%)</title><rect x="1022" y="260" width="7" height="15" fill="rgb(237,200,26)"/><text x="1025.00" y="270.50"></text></g><g><title>0x7fb927afad07 (libc-2.29.so) (1 samples, 0.62%)</title><rect x="1029" y="228" width="8" height="15" fill="rgb(205,153,14)"/><text x="1032.00" y="238.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1037" y="260" width="7" height="15" fill="rgb(211,192,14)"/><text x="1040.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.62%)</title><rect x="1044" y="260" width="7" height="15" fill="rgb(216,197,18)"/><text x="1047.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1051" y="292" width="7" height="15" fill="rgb(228,99,24)"/><text x="1054.00" y="302.50"></text></g><g><title>0x7fb927afa9b7 (libc-2.29.so) (1 samples, 0.62%)</title><rect x="1051" y="308" width="7" height="15" fill="rgb(243,117,39)"/><text x="1054.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1058" y="292" width="8" height="15" fill="rgb(252,35,11)"/><text x="1061.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1058" y="308" width="8" height="15" fill="rgb(239,199,43)"/><text x="1061.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.62%)</title><rect x="1058" y="324" width="8" height="15" fill="rgb(236,78,30)"/><text x="1061.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.62%)</title><rect x="1058" y="340" width="8" height="15" fill="rgb(211,214,35)"/><text x="1061.00" y="350.50"></text></g><g><title>0x7fb927afc00a (libc-2.29.so) (1 samples, 0.62%)</title><rect x="1058" y="356" width="8" height="15" fill="rgb(232,80,44)"/><text x="1061.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.23%)</title><rect x="1066" y="292" width="14" height="15" fill="rgb(251,100,42)"/><text x="1069.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1080" y="356" width="8" height="15" fill="rgb(251,82,22)"/><text x="1083.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.23%)</title><rect x="1080" y="340" width="15" height="15" fill="rgb(239,56,33)"/><text x="1083.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1088" y="356" width="7" height="15" fill="rgb(248,112,10)"/><text x="1091.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1095" y="340" width="7" height="15" fill="rgb(243,224,23)"/><text x="1098.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1102" y="340" width="7" height="15" fill="rgb(250,210,47)"/><text x="1105.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.62%)</title><rect x="1102" y="356" width="7" height="15" fill="rgb(218,215,45)"/><text x="1105.00" y="366.50"></text></g><g><title>0x7fb9175c77a0 (libstdc++.so.6.0.28) (1 samples, 0.62%)</title><rect x="1109" y="356" width="8" height="15" fill="rgb(246,18,42)"/><text x="1112.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 6.17%)</title><rect x="1051" y="260" width="73" height="15" fill="rgb(207,174,20)"/><text x="1054.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 6.17%)</title><rect x="1051" y="276" width="73" height="15" fill="rgb(211,28,40)"/><text x="1054.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 3.70%)</title><rect x="1080" y="292" width="44" height="15" fill="rgb(222,228,46)"/><text x="1083.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 3.70%)</title><rect x="1080" y="308" width="44" height="15" fill="rgb(207,218,46)"/><text x="1083.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 3.70%)</title><rect x="1080" y="324" width="44" height="15" fill="rgb(210,202,42)"/><text x="1083.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.23%)</title><rect x="1109" y="340" width="15" height="15" fill="rgb(252,151,6)"/><text x="1112.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="356" width="7" height="15" fill="rgb(220,32,20)"/><text x="1120.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="372" width="7" height="15" fill="rgb(226,114,38)"/><text x="1120.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="388" width="7" height="15" fill="rgb(206,212,47)"/><text x="1120.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="404" width="7" height="15" fill="rgb(244,220,54)"/><text x="1120.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="420" width="7" height="15" fill="rgb(216,53,48)"/><text x="1120.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="436" width="7" height="15" fill="rgb(249,133,20)"/><text x="1120.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="452" width="7" height="15" fill="rgb(241,30,12)"/><text x="1120.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="468" width="7" height="15" fill="rgb(209,81,49)"/><text x="1120.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="484" width="7" height="15" fill="rgb(209,58,1)"/><text x="1120.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1117" y="500" width="7" height="15" fill="rgb(249,163,18)"/><text x="1120.00" y="510.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 8.64%)</title><rect x="1037" y="244" width="102" height="15" fill="rgb(206,79,7)"/><text x="1040.00" y="254.50">onnxruntime:..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.23%)</title><rect x="1124" y="260" width="15" height="15" fill="rgb(236,127,28)"/><text x="1127.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1131" y="276" width="8" height="15" fill="rgb(226,182,46)"/><text x="1134.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1139" y="244" width="7" height="15" fill="rgb(211,63,54)"/><text x="1142.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1146" y="244" width="7" height="15" fill="rgb(249,213,21)"/><text x="1149.00" y="254.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1146" y="260" width="7" height="15" fill="rgb(227,59,45)"/><text x="1149.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (22 samples, 13.58%)</title><rect x="1000" y="164" width="160" height="15" fill="rgb(214,133,30)"/><text x="1003.00" y="174.50">_run_whole_runtime (..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (22 samples, 13.58%)</title><rect x="1000" y="180" width="160" height="15" fill="rgb(250,7,18)"/><text x="1003.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py:136) (20 samples, 12.35%)</title><rect x="1015" y="196" width="145" height="15" fill="rgb(231,165,35)"/><text x="1018.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 11.11%)</title><rect x="1029" y="212" width="131" height="15" fill="rgb(241,88,24)"/><text x="1032.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 10.49%)</title><rect x="1037" y="228" width="123" height="15" fill="rgb(217,162,1)"/><text x="1040.00" y="238.50">void pybind11::..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.62%)</title><rect x="1153" y="244" width="7" height="15" fill="rgb(209,45,41)"/><text x="1156.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (27 samples, 16.67%)</title><rect x="978" y="132" width="197" height="15" fill="rgb(234,8,16)"/><text x="981.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (25 samples, 15.43%)</title><rect x="993" y="148" width="182" height="15" fill="rgb(206,202,46)"/><text x="996.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (2 samples, 1.23%)</title><rect x="1160" y="164" width="15" height="15" fill="rgb(249,186,53)"/><text x="1163.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.62%)</title><rect x="1168" y="180" width="7" height="15" fill="rgb(237,162,29)"/><text x="1171.00" y="190.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.62%)</title><rect x="1175" y="132" width="7" height="15" fill="rgb(243,154,34)"/><text x="1178.00" y="142.50"></text></g><g><title>all (162 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,51,12)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:68) (35 samples, 21.60%)</title><rect x="935" y="52" width="255" height="15" fill="rgb(227,136,49)"/><text x="938.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegres..</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:67) (35 samples, 21.60%)</title><rect x="935" y="68" width="255" height="15" fill="rgb(212,32,22)"/><text x="938.00" y="78.50">profile_ort (bench_DecisionTreeReg..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:37) (33 samples, 20.37%)</title><rect x="949" y="84" width="241" height="15" fill="rgb(208,149,27)"/><text x="952.00" y="94.50">setup_profile (bench_DecisionTre..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py:31) (33 samples, 20.37%)</title><rect x="949" y="100" width="241" height="15" fill="rgb(238,162,23)"/><text x="952.00" y="110.50">profile (bench_DecisionTreeRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (31 samples, 19.14%)</title><rect x="964" y="116" width="226" height="15" fill="rgb(234,59,27)"/><text x="967.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.62%)</title><rect x="1182" y="132" width="8" height="15" fill="rgb(233,119,3)"/><text x="1185.00" y="142.50"></text></g></g></svg>