<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(228,201,16)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(251,110,48)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(207,42,38)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(224,107,4)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(241,213,16)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(231,129,27)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.40%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(215,41,4)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(237,109,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(213,3,5)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(219,66,1)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(225,23,5)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(246,76,4)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.40%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(241,182,54)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(245,211,23)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(238,77,30)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(239,8,19)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(225,197,38)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(232,184,42)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.40%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(254,228,34)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(243,75,13)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(227,0,10)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(206,160,43)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(218,0,22)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(229,11,29)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(236,79,14)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(246,41,34)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(211,184,22)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(216,168,25)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(235,153,1)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(247,55,23)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(223,37,46)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(241,26,16)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(250,227,13)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(208,0,21)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(225,76,42)"/><text x="13.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(252,64,26)"/><text x="13.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(229,221,14)"/><text x="13.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(236,30,16)"/><text x="13.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(231,170,27)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.40%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(238,200,20)"/><text x="13.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.40%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(231,16,6)"/><text x="13.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.40%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(224,35,26)"/><text x="13.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(208,76,44)"/><text x="13.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(240,2,7)"/><text x="13.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(230,19,21)"/><text x="13.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1012" width="4" height="15" fill="rgb(240,128,28)"/><text x="13.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1028" width="4" height="15" fill="rgb(232,27,11)"/><text x="13.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1044" width="4" height="15" fill="rgb(248,191,50)"/><text x="13.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1060" width="4" height="15" fill="rgb(225,34,29)"/><text x="13.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1076" width="4" height="15" fill="rgb(230,220,42)"/><text x="13.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1092" width="4" height="15" fill="rgb(254,170,25)"/><text x="13.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1108" width="4" height="15" fill="rgb(232,193,41)"/><text x="13.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1124" width="4" height="15" fill="rgb(245,169,46)"/><text x="13.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1140" width="4" height="15" fill="rgb(223,69,39)"/><text x="13.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="10" y="1156" width="4" height="15" fill="rgb(207,49,2)"/><text x="13.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(225,50,40)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(223,48,25)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(254,184,4)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(234,63,2)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(254,63,9)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(247,222,47)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="292" width="5" height="15" fill="rgb(206,76,35)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="308" width="5" height="15" fill="rgb(210,209,46)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="324" width="5" height="15" fill="rgb(244,161,46)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="340" width="5" height="15" fill="rgb(234,40,10)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="356" width="5" height="15" fill="rgb(220,123,41)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="372" width="5" height="15" fill="rgb(239,227,29)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.40%)</title><rect x="14" y="388" width="5" height="15" fill="rgb(241,119,43)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="404" width="5" height="15" fill="rgb(218,146,21)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="420" width="5" height="15" fill="rgb(247,32,36)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="436" width="5" height="15" fill="rgb(227,130,49)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="452" width="5" height="15" fill="rgb(209,73,14)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="468" width="5" height="15" fill="rgb(210,114,1)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="484" width="5" height="15" fill="rgb(216,34,54)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="500" width="5" height="15" fill="rgb(222,78,9)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="516" width="5" height="15" fill="rgb(237,176,1)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="532" width="5" height="15" fill="rgb(252,131,38)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="548" width="5" height="15" fill="rgb(215,76,15)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="564" width="5" height="15" fill="rgb(231,48,1)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.40%)</title><rect x="14" y="580" width="5" height="15" fill="rgb(252,84,36)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="596" width="5" height="15" fill="rgb(238,173,17)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="612" width="5" height="15" fill="rgb(211,66,26)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="628" width="5" height="15" fill="rgb(228,80,19)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="644" width="5" height="15" fill="rgb(251,100,39)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="660" width="5" height="15" fill="rgb(238,27,41)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="676" width="5" height="15" fill="rgb(219,130,33)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="692" width="5" height="15" fill="rgb(231,79,25)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="708" width="5" height="15" fill="rgb(221,179,9)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="724" width="5" height="15" fill="rgb(213,37,3)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="740" width="5" height="15" fill="rgb(216,223,5)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="756" width="5" height="15" fill="rgb(243,48,22)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.40%)</title><rect x="14" y="772" width="5" height="15" fill="rgb(216,120,21)"/><text x="17.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="788" width="5" height="15" fill="rgb(238,158,35)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="804" width="5" height="15" fill="rgb(251,77,33)"/><text x="17.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="820" width="5" height="15" fill="rgb(211,39,33)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="836" width="5" height="15" fill="rgb(224,2,40)"/><text x="17.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="852" width="5" height="15" fill="rgb(240,151,11)"/><text x="17.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="868" width="5" height="15" fill="rgb(208,192,29)"/><text x="17.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="884" width="5" height="15" fill="rgb(229,166,17)"/><text x="17.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.40%)</title><rect x="14" y="900" width="5" height="15" fill="rgb(240,200,39)"/><text x="17.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(212,189,51)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(241,168,24)"/><text x="17.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(237,216,44)"/><text x="17.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(247,91,33)"/><text x="17.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(246,142,22)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.40%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(222,114,25)"/><text x="17.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(215,218,51)"/><text x="17.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1028" width="5" height="15" fill="rgb(237,14,1)"/><text x="17.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1044" width="5" height="15" fill="rgb(233,129,34)"/><text x="17.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1060" width="5" height="15" fill="rgb(236,32,48)"/><text x="17.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1076" width="5" height="15" fill="rgb(233,167,20)"/><text x="17.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="1092" width="5" height="15" fill="rgb(233,51,32)"/><text x="17.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1108" width="5" height="15" fill="rgb(211,95,43)"/><text x="17.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="1124" width="5" height="15" fill="rgb(214,56,20)"/><text x="17.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1140" width="5" height="15" fill="rgb(254,22,10)"/><text x="17.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1156" width="5" height="15" fill="rgb(226,206,33)"/><text x="17.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="14" y="1172" width="5" height="15" fill="rgb(241,106,18)"/><text x="17.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="1188" width="5" height="15" fill="rgb(232,202,49)"/><text x="17.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="1204" width="5" height="15" fill="rgb(227,213,30)"/><text x="17.00" y="1214.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="14" y="1220" width="5" height="15" fill="rgb(253,160,43)"/><text x="17.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="484" width="5" height="15" fill="rgb(236,18,43)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="500" width="5" height="15" fill="rgb(250,118,32)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="516" width="5" height="15" fill="rgb(235,211,29)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="532" width="5" height="15" fill="rgb(249,133,19)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="548" width="5" height="15" fill="rgb(223,229,1)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="564" width="5" height="15" fill="rgb(213,227,38)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(242,130,53)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="596" width="5" height="15" fill="rgb(254,44,32)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="612" width="5" height="15" fill="rgb(244,97,15)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="628" width="5" height="15" fill="rgb(252,112,34)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="644" width="5" height="15" fill="rgb(245,79,34)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="660" width="5" height="15" fill="rgb(235,120,12)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.40%)</title><rect x="19" y="676" width="5" height="15" fill="rgb(250,9,40)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="692" width="5" height="15" fill="rgb(242,55,49)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="708" width="5" height="15" fill="rgb(229,23,27)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="724" width="5" height="15" fill="rgb(249,198,6)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="740" width="5" height="15" fill="rgb(222,101,45)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="756" width="5" height="15" fill="rgb(212,158,17)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="772" width="5" height="15" fill="rgb(206,111,0)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="788" width="5" height="15" fill="rgb(226,229,46)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="804" width="5" height="15" fill="rgb(244,35,27)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="820" width="5" height="15" fill="rgb(242,189,0)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="836" width="5" height="15" fill="rgb(222,105,18)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(248,108,32)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.40%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(228,88,38)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(245,191,0)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(238,189,34)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(244,131,41)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(223,24,7)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(210,102,8)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(209,131,49)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(238,192,30)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(211,14,0)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.40%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(235,162,31)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1028" width="5" height="15" fill="rgb(239,1,26)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1044" width="5" height="15" fill="rgb(254,18,4)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1060" width="5" height="15" fill="rgb(226,199,8)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="1076" width="5" height="15" fill="rgb(216,102,23)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1092" width="5" height="15" fill="rgb(246,151,15)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.40%)</title><rect x="19" y="1108" width="5" height="15" fill="rgb(252,53,10)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1124" width="5" height="15" fill="rgb(223,173,23)"/><text x="22.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1140" width="5" height="15" fill="rgb(220,189,29)"/><text x="22.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1156" width="5" height="15" fill="rgb(240,217,13)"/><text x="22.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="1172" width="5" height="15" fill="rgb(219,151,47)"/><text x="22.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1188" width="5" height="15" fill="rgb(234,4,36)"/><text x="22.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.40%)</title><rect x="19" y="1204" width="5" height="15" fill="rgb(227,227,30)"/><text x="22.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1220" width="5" height="15" fill="rgb(214,20,6)"/><text x="22.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1236" width="5" height="15" fill="rgb(244,187,6)"/><text x="22.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1252" width="5" height="15" fill="rgb(216,142,12)"/><text x="22.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="19" y="1268" width="5" height="15" fill="rgb(209,170,16)"/><text x="22.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1284" width="5" height="15" fill="rgb(217,177,41)"/><text x="22.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.40%)</title><rect x="19" y="1300" width="5" height="15" fill="rgb(233,1,14)"/><text x="22.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1316" width="5" height="15" fill="rgb(236,145,32)"/><text x="22.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1332" width="5" height="15" fill="rgb(227,36,34)"/><text x="22.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1348" width="5" height="15" fill="rgb(224,92,1)"/><text x="22.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="19" y="1364" width="5" height="15" fill="rgb(236,226,31)"/><text x="22.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="772" width="5" height="15" fill="rgb(236,151,27)"/><text x="27.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="788" width="5" height="15" fill="rgb(245,227,29)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="804" width="5" height="15" fill="rgb(245,25,43)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="820" width="5" height="15" fill="rgb(241,60,6)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="836" width="5" height="15" fill="rgb(212,87,18)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="852" width="5" height="15" fill="rgb(246,84,23)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="868" width="5" height="15" fill="rgb(228,170,15)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(215,130,33)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(254,22,41)"/><text x="27.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(246,136,4)"/><text x="27.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(224,22,10)"/><text x="27.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="948" width="5" height="15" fill="rgb(248,197,35)"/><text x="27.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.40%)</title><rect x="24" y="964" width="5" height="15" fill="rgb(215,48,27)"/><text x="27.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="980" width="5" height="15" fill="rgb(212,70,34)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="996" width="5" height="15" fill="rgb(221,177,17)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1012" width="5" height="15" fill="rgb(243,57,52)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1028" width="5" height="15" fill="rgb(233,119,53)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1044" width="5" height="15" fill="rgb(217,189,19)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1060" width="5" height="15" fill="rgb(226,160,10)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1076" width="5" height="15" fill="rgb(236,43,23)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.40%)</title><rect x="24" y="1092" width="5" height="15" fill="rgb(247,207,36)"/><text x="27.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1108" width="5" height="15" fill="rgb(215,122,4)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1124" width="5" height="15" fill="rgb(216,101,28)"/><text x="27.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1140" width="5" height="15" fill="rgb(232,227,39)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1156" width="5" height="15" fill="rgb(215,129,43)"/><text x="27.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1172" width="5" height="15" fill="rgb(217,89,22)"/><text x="27.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1188" width="5" height="15" fill="rgb(218,100,37)"/><text x="27.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1204" width="5" height="15" fill="rgb(226,22,8)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1220" width="5" height="15" fill="rgb(209,217,23)"/><text x="27.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py) (1 samples, 0.40%)</title><rect x="24" y="1236" width="5" height="15" fill="rgb(223,181,53)"/><text x="27.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1252" width="5" height="15" fill="rgb(212,13,49)"/><text x="27.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1268" width="5" height="15" fill="rgb(218,207,54)"/><text x="27.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1284" width="5" height="15" fill="rgb(254,187,22)"/><text x="27.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1300" width="5" height="15" fill="rgb(252,125,17)"/><text x="27.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1316" width="5" height="15" fill="rgb(239,110,47)"/><text x="27.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/core/util/hashing.py) (1 samples, 0.40%)</title><rect x="24" y="1332" width="5" height="15" fill="rgb(248,5,12)"/><text x="27.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1348" width="5" height="15" fill="rgb(249,53,33)"/><text x="27.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1364" width="5" height="15" fill="rgb(217,109,41)"/><text x="27.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1380" width="5" height="15" fill="rgb(243,17,19)"/><text x="27.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1396" width="5" height="15" fill="rgb(212,46,22)"/><text x="27.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1412" width="5" height="15" fill="rgb(218,7,48)"/><text x="27.00" y="1422.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/cast.py) (1 samples, 0.40%)</title><rect x="24" y="1428" width="5" height="15" fill="rgb(215,27,43)"/><text x="27.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1444" width="5" height="15" fill="rgb(227,133,12)"/><text x="27.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1460" width="5" height="15" fill="rgb(249,205,17)"/><text x="27.00" y="1470.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="24" y="1476" width="5" height="15" fill="rgb(230,4,52)"/><text x="27.00" y="1486.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1492" width="5" height="15" fill="rgb(231,160,21)"/><text x="27.00" y="1502.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1508" width="5" height="15" fill="rgb(247,147,54)"/><text x="27.00" y="1518.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="24" y="1524" width="5" height="15" fill="rgb(221,101,24)"/><text x="27.00" y="1534.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.40%)</title><rect x="29" y="1108" width="4" height="15" fill="rgb(247,85,1)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1124" width="4" height="15" fill="rgb(235,9,34)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1140" width="4" height="15" fill="rgb(240,117,32)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1156" width="4" height="15" fill="rgb(244,143,25)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1172" width="4" height="15" fill="rgb(233,140,50)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1188" width="4" height="15" fill="rgb(212,124,22)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.40%)</title><rect x="29" y="1204" width="4" height="15" fill="rgb(254,196,53)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1220" width="4" height="15" fill="rgb(234,70,32)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1236" width="4" height="15" fill="rgb(210,78,18)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1252" width="4" height="15" fill="rgb(224,207,14)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1268" width="4" height="15" fill="rgb(216,54,49)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1284" width="4" height="15" fill="rgb(251,98,12)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.40%)</title><rect x="29" y="1300" width="4" height="15" fill="rgb(211,141,37)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1316" width="4" height="15" fill="rgb(227,94,13)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1332" width="4" height="15" fill="rgb(250,63,38)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1348" width="4" height="15" fill="rgb(238,168,12)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1364" width="4" height="15" fill="rgb(252,214,1)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1380" width="4" height="15" fill="rgb(227,26,10)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.40%)</title><rect x="29" y="1396" width="4" height="15" fill="rgb(226,197,49)"/><text x="32.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1412" width="4" height="15" fill="rgb(237,161,20)"/><text x="32.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1428" width="4" height="15" fill="rgb(218,122,22)"/><text x="32.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="29" y="1444" width="4" height="15" fill="rgb(218,199,8)"/><text x="32.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1460" width="4" height="15" fill="rgb(222,214,24)"/><text x="32.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1476" width="4" height="15" fill="rgb(214,221,6)"/><text x="32.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="29" y="1492" width="4" height="15" fill="rgb(250,97,7)"/><text x="32.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="1028" width="9" height="15" fill="rgb(208,153,31)"/><text x="32.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="1044" width="9" height="15" fill="rgb(210,228,39)"/><text x="32.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="1060" width="9" height="15" fill="rgb(207,80,6)"/><text x="32.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="29" y="1076" width="9" height="15" fill="rgb(205,104,28)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="29" y="1092" width="9" height="15" fill="rgb(229,29,44)"/><text x="32.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.40%)</title><rect x="33" y="1108" width="5" height="15" fill="rgb(232,122,49)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1124" width="5" height="15" fill="rgb(233,41,18)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1140" width="5" height="15" fill="rgb(206,2,14)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1156" width="5" height="15" fill="rgb(205,173,11)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1172" width="5" height="15" fill="rgb(222,110,2)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1188" width="5" height="15" fill="rgb(207,136,47)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.40%)</title><rect x="33" y="1204" width="5" height="15" fill="rgb(233,111,17)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1220" width="5" height="15" fill="rgb(229,23,14)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1236" width="5" height="15" fill="rgb(207,169,46)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1252" width="5" height="15" fill="rgb(232,15,15)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1268" width="5" height="15" fill="rgb(228,109,54)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1284" width="5" height="15" fill="rgb(252,86,51)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.40%)</title><rect x="33" y="1300" width="5" height="15" fill="rgb(209,191,25)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1316" width="5" height="15" fill="rgb(244,155,49)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1332" width="5" height="15" fill="rgb(238,18,26)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1348" width="5" height="15" fill="rgb(243,168,30)"/><text x="36.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1364" width="5" height="15" fill="rgb(219,141,12)"/><text x="36.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1380" width="5" height="15" fill="rgb(231,157,38)"/><text x="36.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.40%)</title><rect x="33" y="1396" width="5" height="15" fill="rgb(217,201,22)"/><text x="36.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1412" width="5" height="15" fill="rgb(250,5,51)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1428" width="5" height="15" fill="rgb(230,170,1)"/><text x="36.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1444" width="5" height="15" fill="rgb(221,3,36)"/><text x="36.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1460" width="5" height="15" fill="rgb(222,142,7)"/><text x="36.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1476" width="5" height="15" fill="rgb(219,207,25)"/><text x="36.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.40%)</title><rect x="33" y="1492" width="5" height="15" fill="rgb(214,31,54)"/><text x="36.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1508" width="5" height="15" fill="rgb(207,213,54)"/><text x="36.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1524" width="5" height="15" fill="rgb(246,55,4)"/><text x="36.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1540" width="5" height="15" fill="rgb(215,165,28)"/><text x="36.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1556" width="5" height="15" fill="rgb(240,6,19)"/><text x="36.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1572" width="5" height="15" fill="rgb(226,195,39)"/><text x="36.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.40%)</title><rect x="33" y="1588" width="5" height="15" fill="rgb(240,131,34)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1604" width="5" height="15" fill="rgb(208,184,16)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1620" width="5" height="15" fill="rgb(245,217,38)"/><text x="36.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1636" width="5" height="15" fill="rgb(234,49,31)"/><text x="36.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1652" width="5" height="15" fill="rgb(247,229,43)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1668" width="5" height="15" fill="rgb(219,12,52)"/><text x="36.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.40%)</title><rect x="33" y="1684" width="5" height="15" fill="rgb(234,95,35)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1700" width="5" height="15" fill="rgb(217,35,0)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1716" width="5" height="15" fill="rgb(210,72,34)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1732" width="5" height="15" fill="rgb(235,146,36)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1748" width="5" height="15" fill="rgb(215,2,7)"/><text x="36.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1764" width="5" height="15" fill="rgb(215,28,33)"/><text x="36.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.40%)</title><rect x="33" y="1780" width="5" height="15" fill="rgb(209,62,13)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1796" width="5" height="15" fill="rgb(234,103,36)"/><text x="36.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1812" width="5" height="15" fill="rgb(239,59,7)"/><text x="36.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1828" width="5" height="15" fill="rgb(232,223,23)"/><text x="36.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1844" width="5" height="15" fill="rgb(217,191,20)"/><text x="36.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1860" width="5" height="15" fill="rgb(254,17,6)"/><text x="36.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.40%)</title><rect x="33" y="1876" width="5" height="15" fill="rgb(214,75,40)"/><text x="36.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1892" width="5" height="15" fill="rgb(228,224,45)"/><text x="36.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1908" width="5" height="15" fill="rgb(207,67,7)"/><text x="36.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1924" width="5" height="15" fill="rgb(238,60,18)"/><text x="36.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="1940" width="5" height="15" fill="rgb(230,144,17)"/><text x="36.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1956" width="5" height="15" fill="rgb(249,20,37)"/><text x="36.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.40%)</title><rect x="33" y="1972" width="5" height="15" fill="rgb(210,182,4)"/><text x="36.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="1988" width="5" height="15" fill="rgb(217,220,4)"/><text x="36.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="2004" width="5" height="15" fill="rgb(225,77,50)"/><text x="36.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="2020" width="5" height="15" fill="rgb(249,92,53)"/><text x="36.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="2036" width="5" height="15" fill="rgb(224,212,8)"/><text x="36.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="2052" width="5" height="15" fill="rgb(238,24,45)"/><text x="36.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="33" y="2068" width="5" height="15" fill="rgb(211,195,53)"/><text x="36.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="33" y="2084" width="5" height="15" fill="rgb(209,159,12)"/><text x="36.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/dviread.py) (1 samples, 0.40%)</title><rect x="33" y="2100" width="5" height="15" fill="rgb(205,106,7)"/><text x="36.00" y="2110.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.61%)</title><rect x="24" y="724" width="19" height="15" fill="rgb(223,11,1)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.61%)</title><rect x="24" y="740" width="19" height="15" fill="rgb(216,113,37)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.61%)</title><rect x="24" y="756" width="19" height="15" fill="rgb(213,81,52)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="772" width="14" height="15" fill="rgb(237,112,2)"/><text x="32.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="29" y="788" width="14" height="15" fill="rgb(205,133,29)"/><text x="32.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="804" width="14" height="15" fill="rgb(218,26,11)"/><text x="32.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.21%)</title><rect x="29" y="820" width="14" height="15" fill="rgb(249,204,15)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="836" width="14" height="15" fill="rgb(249,220,52)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="852" width="14" height="15" fill="rgb(240,142,0)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="868" width="14" height="15" fill="rgb(217,96,48)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="29" y="884" width="14" height="15" fill="rgb(213,140,51)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="900" width="14" height="15" fill="rgb(205,57,50)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.21%)</title><rect x="29" y="916" width="14" height="15" fill="rgb(236,107,45)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="932" width="14" height="15" fill="rgb(237,127,20)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="948" width="14" height="15" fill="rgb(210,170,43)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="964" width="14" height="15" fill="rgb(215,17,7)"/><text x="32.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.21%)</title><rect x="29" y="980" width="14" height="15" fill="rgb(242,61,40)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="29" y="996" width="14" height="15" fill="rgb(246,110,41)"/><text x="32.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.21%)</title><rect x="29" y="1012" width="14" height="15" fill="rgb(211,139,21)"/><text x="32.00" y="1022.50"></text></g><g><title>add_special_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.40%)</title><rect x="38" y="1028" width="5" height="15" fill="rgb(249,151,27)"/><text x="41.00" y="1038.50"></text></g><g><title>add_methods (pandas/core/ops/__init__.py) (1 samples, 0.40%)</title><rect x="38" y="1044" width="5" height="15" fill="rgb(252,216,36)"/><text x="41.00" y="1054.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.42%)</title><rect x="19" y="340" width="29" height="15" fill="rgb(218,99,47)"/><text x="22.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.42%)</title><rect x="19" y="356" width="29" height="15" fill="rgb(225,57,33)"/><text x="22.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.42%)</title><rect x="19" y="372" width="29" height="15" fill="rgb(228,14,54)"/><text x="22.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.42%)</title><rect x="19" y="388" width="29" height="15" fill="rgb(238,226,0)"/><text x="22.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.42%)</title><rect x="19" y="404" width="29" height="15" fill="rgb(253,3,54)"/><text x="22.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.42%)</title><rect x="19" y="420" width="29" height="15" fill="rgb(235,26,38)"/><text x="22.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 2.42%)</title><rect x="19" y="436" width="29" height="15" fill="rgb(227,148,53)"/><text x="22.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.42%)</title><rect x="19" y="452" width="29" height="15" fill="rgb(230,82,3)"/><text x="22.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.42%)</title><rect x="19" y="468" width="29" height="15" fill="rgb(212,116,50)"/><text x="22.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="484" width="24" height="15" fill="rgb(230,147,49)"/><text x="27.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.02%)</title><rect x="24" y="500" width="24" height="15" fill="rgb(242,6,27)"/><text x="27.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="516" width="24" height="15" fill="rgb(230,77,44)"/><text x="27.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 2.02%)</title><rect x="24" y="532" width="24" height="15" fill="rgb(249,194,54)"/><text x="27.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="548" width="24" height="15" fill="rgb(226,146,46)"/><text x="27.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="564" width="24" height="15" fill="rgb(226,87,21)"/><text x="27.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="580" width="24" height="15" fill="rgb(242,157,53)"/><text x="27.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.02%)</title><rect x="24" y="596" width="24" height="15" fill="rgb(210,18,11)"/><text x="27.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="612" width="24" height="15" fill="rgb(228,97,34)"/><text x="27.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 2.02%)</title><rect x="24" y="628" width="24" height="15" fill="rgb(220,212,7)"/><text x="27.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="644" width="24" height="15" fill="rgb(239,207,50)"/><text x="27.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="660" width="24" height="15" fill="rgb(251,179,54)"/><text x="27.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="676" width="24" height="15" fill="rgb(207,2,35)"/><text x="27.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.02%)</title><rect x="24" y="692" width="24" height="15" fill="rgb(217,16,35)"/><text x="27.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.02%)</title><rect x="24" y="708" width="24" height="15" fill="rgb(209,215,26)"/><text x="27.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.40%)</title><rect x="43" y="724" width="5" height="15" fill="rgb(243,5,45)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="740" width="5" height="15" fill="rgb(235,191,43)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="756" width="5" height="15" fill="rgb(254,141,4)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="772" width="5" height="15" fill="rgb(218,153,37)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="43" y="788" width="5" height="15" fill="rgb(217,96,27)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="43" y="804" width="5" height="15" fill="rgb(247,35,24)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/html.py) (1 samples, 0.40%)</title><rect x="43" y="820" width="5" height="15" fill="rgb(251,223,1)"/><text x="46.00" y="830.50"></text></g><g><title>_BeautifulSoupHtml5LibFrameParser (pandas/io/html.py) (1 samples, 0.40%)</title><rect x="43" y="836" width="5" height="15" fill="rgb(225,59,12)"/><text x="46.00" y="846.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.82%)</title><rect x="19" y="244" width="33" height="15" fill="rgb(224,160,22)"/><text x="22.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.82%)</title><rect x="19" y="260" width="33" height="15" fill="rgb(236,104,9)"/><text x="22.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.82%)</title><rect x="19" y="276" width="33" height="15" fill="rgb(222,68,4)"/><text x="22.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.82%)</title><rect x="19" y="292" width="33" height="15" fill="rgb(215,143,10)"/><text x="22.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.82%)</title><rect x="19" y="308" width="33" height="15" fill="rgb(253,89,15)"/><text x="22.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.82%)</title><rect x="19" y="324" width="33" height="15" fill="rgb(242,99,20)"/><text x="22.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.40%)</title><rect x="48" y="340" width="4" height="15" fill="rgb(254,150,37)"/><text x="51.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="356" width="4" height="15" fill="rgb(225,127,21)"/><text x="51.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="372" width="4" height="15" fill="rgb(206,10,30)"/><text x="51.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="388" width="4" height="15" fill="rgb(236,91,9)"/><text x="51.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="404" width="4" height="15" fill="rgb(227,187,50)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="420" width="4" height="15" fill="rgb(242,158,29)"/><text x="51.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="436" width="4" height="15" fill="rgb(207,44,5)"/><text x="51.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="452" width="4" height="15" fill="rgb(214,40,25)"/><text x="51.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="468" width="4" height="15" fill="rgb(245,200,20)"/><text x="51.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.40%)</title><rect x="48" y="484" width="4" height="15" fill="rgb(215,38,4)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="500" width="4" height="15" fill="rgb(245,210,49)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="516" width="4" height="15" fill="rgb(230,124,39)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="532" width="4" height="15" fill="rgb(243,145,20)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="548" width="4" height="15" fill="rgb(222,81,19)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="564" width="4" height="15" fill="rgb(252,196,1)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.40%)</title><rect x="48" y="580" width="4" height="15" fill="rgb(210,210,53)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="596" width="4" height="15" fill="rgb(253,139,4)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="612" width="4" height="15" fill="rgb(217,120,40)"/><text x="51.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="628" width="4" height="15" fill="rgb(227,211,11)"/><text x="51.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="644" width="4" height="15" fill="rgb(249,199,34)"/><text x="51.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="660" width="4" height="15" fill="rgb(225,75,45)"/><text x="51.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="676" width="4" height="15" fill="rgb(231,208,1)"/><text x="51.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="692" width="4" height="15" fill="rgb(235,38,11)"/><text x="51.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="708" width="4" height="15" fill="rgb(216,19,32)"/><text x="51.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.40%)</title><rect x="48" y="724" width="4" height="15" fill="rgb(215,148,52)"/><text x="51.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="740" width="4" height="15" fill="rgb(236,29,23)"/><text x="51.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="756" width="4" height="15" fill="rgb(244,174,8)"/><text x="51.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="772" width="4" height="15" fill="rgb(250,18,54)"/><text x="51.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="788" width="4" height="15" fill="rgb(213,41,32)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="804" width="4" height="15" fill="rgb(250,79,29)"/><text x="51.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.40%)</title><rect x="48" y="820" width="4" height="15" fill="rgb(253,60,54)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="836" width="4" height="15" fill="rgb(236,60,41)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="852" width="4" height="15" fill="rgb(208,86,44)"/><text x="51.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="868" width="4" height="15" fill="rgb(209,199,34)"/><text x="51.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="884" width="4" height="15" fill="rgb(210,209,39)"/><text x="51.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="900" width="4" height="15" fill="rgb(243,223,34)"/><text x="51.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.40%)</title><rect x="48" y="916" width="4" height="15" fill="rgb(214,197,32)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="932" width="4" height="15" fill="rgb(224,117,29)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="948" width="4" height="15" fill="rgb(236,129,30)"/><text x="51.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="964" width="4" height="15" fill="rgb(216,196,24)"/><text x="51.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="980" width="4" height="15" fill="rgb(238,226,40)"/><text x="51.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="996" width="4" height="15" fill="rgb(215,202,24)"/><text x="51.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1012" width="4" height="15" fill="rgb(213,53,16)"/><text x="51.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1028" width="4" height="15" fill="rgb(234,189,29)"/><text x="51.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1044" width="4" height="15" fill="rgb(223,129,36)"/><text x="51.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.40%)</title><rect x="48" y="1060" width="4" height="15" fill="rgb(218,150,32)"/><text x="51.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1076" width="4" height="15" fill="rgb(250,41,15)"/><text x="51.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1092" width="4" height="15" fill="rgb(254,113,2)"/><text x="51.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1108" width="4" height="15" fill="rgb(220,185,27)"/><text x="51.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1124" width="4" height="15" fill="rgb(231,188,25)"/><text x="51.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1140" width="4" height="15" fill="rgb(250,30,12)"/><text x="51.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.40%)</title><rect x="48" y="1156" width="4" height="15" fill="rgb(218,202,38)"/><text x="51.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1172" width="4" height="15" fill="rgb(217,183,42)"/><text x="51.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1188" width="4" height="15" fill="rgb(214,79,36)"/><text x="51.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="48" y="1204" width="4" height="15" fill="rgb(213,124,45)"/><text x="51.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1220" width="4" height="15" fill="rgb(237,15,10)"/><text x="51.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1236" width="4" height="15" fill="rgb(208,46,34)"/><text x="51.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="48" y="1252" width="4" height="15" fill="rgb(210,70,9)"/><text x="51.00" y="1262.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="52" y="1204" width="5" height="15" fill="rgb(226,171,21)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.44%)</title><rect x="10" y="68" width="52" height="15" fill="rgb(223,98,17)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.44%)</title><rect x="10" y="84" width="52" height="15" fill="rgb(220,198,31)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.44%)</title><rect x="10" y="100" width="52" height="15" fill="rgb(207,112,22)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.44%)</title><rect x="10" y="116" width="52" height="15" fill="rgb(227,159,20)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.44%)</title><rect x="10" y="132" width="52" height="15" fill="rgb(216,4,7)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_n_estimators5.py) (11 samples, 4.44%)</title><rect x="10" y="148" width="52" height="15" fill="rgb(223,0,39)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.44%)</title><rect x="10" y="164" width="52" height="15" fill="rgb(240,115,54)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.44%)</title><rect x="10" y="180" width="52" height="15" fill="rgb(248,107,39)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.63%)</title><rect x="19" y="196" width="43" height="15" fill="rgb(219,92,33)"/><text x="22.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.63%)</title><rect x="19" y="212" width="43" height="15" fill="rgb(245,141,43)"/><text x="22.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.63%)</title><rect x="19" y="228" width="43" height="15" fill="rgb(253,218,20)"/><text x="22.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.81%)</title><rect x="52" y="244" width="10" height="15" fill="rgb(246,130,0)"/><text x="55.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="260" width="10" height="15" fill="rgb(231,71,13)"/><text x="55.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="276" width="10" height="15" fill="rgb(243,179,15)"/><text x="55.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="292" width="10" height="15" fill="rgb(219,226,9)"/><text x="55.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="308" width="10" height="15" fill="rgb(241,96,26)"/><text x="55.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="324" width="10" height="15" fill="rgb(252,72,35)"/><text x="55.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="340" width="10" height="15" fill="rgb(217,75,35)"/><text x="55.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="356" width="10" height="15" fill="rgb(222,127,13)"/><text x="55.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (2 samples, 0.81%)</title><rect x="52" y="372" width="10" height="15" fill="rgb(227,44,26)"/><text x="55.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="388" width="10" height="15" fill="rgb(238,34,22)"/><text x="55.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="404" width="10" height="15" fill="rgb(238,36,20)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="420" width="10" height="15" fill="rgb(236,0,11)"/><text x="55.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="436" width="10" height="15" fill="rgb(210,227,21)"/><text x="55.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="452" width="10" height="15" fill="rgb(219,32,11)"/><text x="55.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="468" width="10" height="15" fill="rgb(231,14,4)"/><text x="55.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="484" width="10" height="15" fill="rgb(219,50,31)"/><text x="55.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (2 samples, 0.81%)</title><rect x="52" y="500" width="10" height="15" fill="rgb(232,83,39)"/><text x="55.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="516" width="10" height="15" fill="rgb(212,226,40)"/><text x="55.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="532" width="10" height="15" fill="rgb(249,115,29)"/><text x="55.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="548" width="10" height="15" fill="rgb(250,83,40)"/><text x="55.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="564" width="10" height="15" fill="rgb(246,27,9)"/><text x="55.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="580" width="10" height="15" fill="rgb(223,36,18)"/><text x="55.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="596" width="10" height="15" fill="rgb(216,161,49)"/><text x="55.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="612" width="10" height="15" fill="rgb(248,227,25)"/><text x="55.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (2 samples, 0.81%)</title><rect x="52" y="628" width="10" height="15" fill="rgb(227,203,12)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="644" width="10" height="15" fill="rgb(209,120,32)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="660" width="10" height="15" fill="rgb(223,77,5)"/><text x="55.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="676" width="10" height="15" fill="rgb(221,149,51)"/><text x="55.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="692" width="10" height="15" fill="rgb(245,41,48)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="708" width="10" height="15" fill="rgb(231,208,4)"/><text x="55.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="724" width="10" height="15" fill="rgb(247,224,50)"/><text x="55.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="740" width="10" height="15" fill="rgb(226,87,34)"/><text x="55.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="756" width="10" height="15" fill="rgb(211,89,40)"/><text x="55.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (2 samples, 0.81%)</title><rect x="52" y="772" width="10" height="15" fill="rgb(213,188,38)"/><text x="55.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="788" width="10" height="15" fill="rgb(236,191,40)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="804" width="10" height="15" fill="rgb(230,203,44)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="820" width="10" height="15" fill="rgb(226,71,31)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="836" width="10" height="15" fill="rgb(241,180,50)"/><text x="55.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="852" width="10" height="15" fill="rgb(229,39,18)"/><text x="55.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="868" width="10" height="15" fill="rgb(237,156,16)"/><text x="55.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="884" width="10" height="15" fill="rgb(210,125,25)"/><text x="55.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py) (2 samples, 0.81%)</title><rect x="52" y="900" width="10" height="15" fill="rgb(250,45,30)"/><text x="55.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="916" width="10" height="15" fill="rgb(247,108,20)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="932" width="10" height="15" fill="rgb(207,126,14)"/><text x="55.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="948" width="10" height="15" fill="rgb(227,81,27)"/><text x="55.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="964" width="10" height="15" fill="rgb(224,43,26)"/><text x="55.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="980" width="10" height="15" fill="rgb(227,120,42)"/><text x="55.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py) (2 samples, 0.81%)</title><rect x="52" y="996" width="10" height="15" fill="rgb(208,3,53)"/><text x="55.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1012" width="10" height="15" fill="rgb(220,122,33)"/><text x="55.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1028" width="10" height="15" fill="rgb(225,78,15)"/><text x="55.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1044" width="10" height="15" fill="rgb(229,189,35)"/><text x="55.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="1060" width="10" height="15" fill="rgb(214,217,7)"/><text x="55.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1076" width="10" height="15" fill="rgb(227,211,3)"/><text x="55.00" y="1086.50"></text></g><g><title>&lt;module&gt; (ntpath.py) (2 samples, 0.81%)</title><rect x="52" y="1092" width="10" height="15" fill="rgb(225,14,48)"/><text x="55.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1108" width="10" height="15" fill="rgb(220,105,2)"/><text x="55.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1124" width="10" height="15" fill="rgb(224,38,46)"/><text x="55.00" y="1134.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="52" y="1140" width="10" height="15" fill="rgb(234,184,26)"/><text x="55.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="1156" width="10" height="15" fill="rgb(224,64,50)"/><text x="55.00" y="1166.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="1172" width="10" height="15" fill="rgb(232,117,53)"/><text x="55.00" y="1182.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="52" y="1188" width="10" height="15" fill="rgb(241,55,45)"/><text x="55.00" y="1198.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1204" width="5" height="15" fill="rgb(221,114,1)"/><text x="60.00" y="1214.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.40%)</title><rect x="57" y="1220" width="5" height="15" fill="rgb(225,121,50)"/><text x="60.00" y="1230.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (2 samples, 0.81%)</title><rect x="62" y="68" width="9" height="15" fill="rgb(224,9,12)"/><text x="65.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (2 samples, 0.81%)</title><rect x="62" y="84" width="9" height="15" fill="rgb(210,159,13)"/><text x="65.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (2 samples, 0.81%)</title><rect x="62" y="100" width="9" height="15" fill="rgb(234,203,4)"/><text x="65.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.81%)</title><rect x="62" y="116" width="9" height="15" fill="rgb(205,187,18)"/><text x="65.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.81%)</title><rect x="62" y="132" width="9" height="15" fill="rgb(228,64,47)"/><text x="65.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.81%)</title><rect x="62" y="148" width="9" height="15" fill="rgb(240,148,35)"/><text x="65.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.81%)</title><rect x="62" y="164" width="9" height="15" fill="rgb(213,120,19)"/><text x="65.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (2 samples, 0.81%)</title><rect x="62" y="180" width="9" height="15" fill="rgb(239,5,13)"/><text x="65.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (2 samples, 0.81%)</title><rect x="62" y="196" width="9" height="15" fill="rgb(230,166,7)"/><text x="65.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.81%)</title><rect x="62" y="212" width="9" height="15" fill="rgb(248,80,47)"/><text x="65.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.81%)</title><rect x="62" y="228" width="9" height="15" fill="rgb(221,25,30)"/><text x="65.00" y="238.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.40%)</title><rect x="67" y="244" width="4" height="15" fill="rgb(210,211,16)"/><text x="70.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.40%)</title><rect x="67" y="260" width="4" height="15" fill="rgb(210,48,45)"/><text x="70.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="71" y="116" width="5" height="15" fill="rgb(240,160,3)"/><text x="74.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="71" y="132" width="5" height="15" fill="rgb(217,166,27)"/><text x="74.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="71" y="148" width="5" height="15" fill="rgb(222,167,33)"/><text x="74.00" y="158.50"></text></g><g><title>0x7fa237701ff9 (?) (1 samples, 0.40%)</title><rect x="81" y="212" width="5" height="15" fill="rgb(219,60,48)"/><text x="84.00" y="222.50"></text></g><g><title>0x7fa2376fcef6 (?) (1 samples, 0.40%)</title><rect x="81" y="228" width="5" height="15" fill="rgb(231,152,25)"/><text x="84.00" y="238.50"></text></g><g><title>0x7fa2376f1962 (?) (1 samples, 0.40%)</title><rect x="81" y="244" width="5" height="15" fill="rgb(239,90,36)"/><text x="84.00" y="254.50"></text></g><g><title>0x7fa2377257a7 (?) (1 samples, 0.40%)</title><rect x="81" y="260" width="5" height="15" fill="rgb(253,219,29)"/><text x="84.00" y="270.50"></text></g><g><title>0x7fa237725379 (?) (1 samples, 0.40%)</title><rect x="81" y="276" width="5" height="15" fill="rgb(211,35,7)"/><text x="84.00" y="286.50"></text></g><g><title>0x7fa237b838b8 (?) (1 samples, 0.40%)</title><rect x="81" y="292" width="5" height="15" fill="rgb(205,78,44)"/><text x="84.00" y="302.50"></text></g><g><title>0x7fa237b81c7f (?) (1 samples, 0.40%)</title><rect x="81" y="308" width="5" height="15" fill="rgb(227,100,14)"/><text x="84.00" y="318.50"></text></g><g><title>0x7fa237b9499c (?) (1 samples, 0.40%)</title><rect x="81" y="324" width="5" height="15" fill="rgb(210,24,18)"/><text x="84.00" y="334.50"></text></g><g><title>0x7fa2377c1c0e (?) (1 samples, 0.40%)</title><rect x="81" y="340" width="5" height="15" fill="rgb(211,119,48)"/><text x="84.00" y="350.50"></text></g><g><title>0x7fa2377ba6f8 (?) (1 samples, 0.40%)</title><rect x="81" y="356" width="5" height="15" fill="rgb(254,195,35)"/><text x="84.00" y="366.50"></text></g><g><title>0x7fa2377b9ae9 (?) (1 samples, 0.40%)</title><rect x="81" y="372" width="5" height="15" fill="rgb(209,124,4)"/><text x="84.00" y="382.50"></text></g><g><title>0x7fa2377b79a6 (?) (1 samples, 0.40%)</title><rect x="81" y="388" width="5" height="15" fill="rgb(241,14,22)"/><text x="84.00" y="398.50"></text></g><g><title>0x7fa2377b77c6 (?) (1 samples, 0.40%)</title><rect x="81" y="404" width="5" height="15" fill="rgb(249,128,43)"/><text x="84.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="81" y="420" width="5" height="15" fill="rgb(217,222,53)"/><text x="84.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="81" y="436" width="5" height="15" fill="rgb(227,44,45)"/><text x="84.00" y="446.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="86" y="340" width="4" height="15" fill="rgb(206,2,17)"/><text x="89.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="86" y="356" width="4" height="15" fill="rgb(251,219,37)"/><text x="89.00" y="366.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="90" y="340" width="5" height="15" fill="rgb(227,183,39)"/><text x="93.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="90" y="356" width="5" height="15" fill="rgb(253,104,25)"/><text x="93.00" y="366.50"></text></g><g><title>0x7fa2776c3991 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="90" y="372" width="5" height="15" fill="rgb(213,120,21)"/><text x="93.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="95" y="340" width="5" height="15" fill="rgb(213,202,35)"/><text x="98.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="95" y="356" width="5" height="15" fill="rgb(216,139,29)"/><text x="98.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="95" y="372" width="5" height="15" fill="rgb(241,72,44)"/><text x="98.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="95" y="388" width="5" height="15" fill="rgb(211,48,20)"/><text x="98.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="95" y="404" width="5" height="15" fill="rgb(247,82,49)"/><text x="98.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="95" y="420" width="5" height="15" fill="rgb(243,173,44)"/><text x="98.00" y="430.50"></text></g><g><title>0x7fa2776c5028 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="95" y="436" width="5" height="15" fill="rgb(209,45,30)"/><text x="98.00" y="446.50"></text></g><g><title>0x7fa2776c2b9b (libc-2.29.so) (1 samples, 0.40%)</title><rect x="95" y="452" width="5" height="15" fill="rgb(240,19,44)"/><text x="98.00" y="462.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="372" width="5" height="15" fill="rgb(254,31,52)"/><text x="103.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="388" width="5" height="15" fill="rgb(233,209,5)"/><text x="103.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="404" width="5" height="15" fill="rgb(219,121,8)"/><text x="103.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="420" width="5" height="15" fill="rgb(226,58,11)"/><text x="103.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="436" width="5" height="15" fill="rgb(228,175,28)"/><text x="103.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="452" width="5" height="15" fill="rgb(244,142,31)"/><text x="103.00" y="462.50"></text></g><g><title>0x7fa2776d26e9 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="100" y="468" width="5" height="15" fill="rgb(240,50,20)"/><text x="103.00" y="478.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="100" y="340" width="9" height="15" fill="rgb(250,223,16)"/><text x="103.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="100" y="356" width="9" height="15" fill="rgb(241,110,51)"/><text x="103.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="105" y="372" width="4" height="15" fill="rgb(222,224,48)"/><text x="108.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="105" y="388" width="4" height="15" fill="rgb(245,40,26)"/><text x="108.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_fill_insert (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="105" y="404" width="4" height="15" fill="rgb(223,74,7)"/><text x="108.00" y="414.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (9 samples, 3.63%)</title><rect x="71" y="68" width="43" height="15" fill="rgb(221,99,8)"/><text x="74.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (9 samples, 3.63%)</title><rect x="71" y="84" width="43" height="15" fill="rgb(245,73,36)"/><text x="74.00" y="94.50">setu..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (9 samples, 3.63%)</title><rect x="71" y="100" width="43" height="15" fill="rgb(208,116,5)"/><text x="74.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.23%)</title><rect x="76" y="116" width="38" height="15" fill="rgb(246,145,22)"/><text x="79.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.23%)</title><rect x="76" y="132" width="38" height="15" fill="rgb(232,68,29)"/><text x="79.00" y="142.50">&lt;la..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (8 samples, 3.23%)</title><rect x="76" y="148" width="38" height="15" fill="rgb(242,48,31)"/><text x="79.00" y="158.50">run..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (8 samples, 3.23%)</title><rect x="76" y="164" width="38" height="15" fill="rgb(237,39,49)"/><text x="79.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (7 samples, 2.82%)</title><rect x="81" y="180" width="33" height="15" fill="rgb(207,12,25)"/><text x="84.00" y="190.50">ru..</text></g><g><title>run (onnxruntime/capi/session.py) (7 samples, 2.82%)</title><rect x="81" y="196" width="33" height="15" fill="rgb(211,197,37)"/><text x="84.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="212" width="28" height="15" fill="rgb(248,144,35)"/><text x="89.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="228" width="28" height="15" fill="rgb(217,42,8)"/><text x="89.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="244" width="28" height="15" fill="rgb(239,182,36)"/><text x="89.00" y="254.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="260" width="28" height="15" fill="rgb(210,206,39)"/><text x="89.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="276" width="28" height="15" fill="rgb(215,44,26)"/><text x="89.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="292" width="28" height="15" fill="rgb(253,172,8)"/><text x="89.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="308" width="28" height="15" fill="rgb(231,185,50)"/><text x="89.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.42%)</title><rect x="86" y="324" width="28" height="15" fill="rgb(246,205,29)"/><text x="89.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="109" y="340" width="5" height="15" fill="rgb(211,62,53)"/><text x="112.00" y="350.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.81%)</title><rect x="219" y="196" width="9" height="15" fill="rgb(218,153,12)"/><text x="222.00" y="206.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.40%)</title><rect x="238" y="228" width="5" height="15" fill="rgb(231,161,29)"/><text x="241.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.40%)</title><rect x="238" y="244" width="5" height="15" fill="rgb(213,216,20)"/><text x="241.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.40%)</title><rect x="238" y="260" width="5" height="15" fill="rgb(250,83,35)"/><text x="241.00" y="270.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.40%)</title><rect x="243" y="228" width="4" height="15" fill="rgb(226,166,7)"/><text x="246.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.40%)</title><rect x="243" y="244" width="4" height="15" fill="rgb(236,3,16)"/><text x="246.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="247" y="260" width="5" height="15" fill="rgb(207,102,46)"/><text x="250.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="247" y="276" width="5" height="15" fill="rgb(209,202,17)"/><text x="250.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (4 samples, 1.61%)</title><rect x="238" y="212" width="19" height="15" fill="rgb(233,66,5)"/><text x="241.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.81%)</title><rect x="247" y="228" width="10" height="15" fill="rgb(240,215,10)"/><text x="250.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.81%)</title><rect x="247" y="244" width="10" height="15" fill="rgb(234,61,37)"/><text x="250.00" y="254.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.40%)</title><rect x="252" y="260" width="5" height="15" fill="rgb(249,18,0)"/><text x="255.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.40%)</title><rect x="257" y="212" width="5" height="15" fill="rgb(216,116,47)"/><text x="260.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.40%)</title><rect x="257" y="228" width="5" height="15" fill="rgb(232,150,41)"/><text x="260.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.40%)</title><rect x="257" y="244" width="5" height="15" fill="rgb(214,75,50)"/><text x="260.00" y="254.50"></text></g><g><title>0x7fa2776d974d (libc-2.29.so) (1 samples, 0.40%)</title><rect x="257" y="260" width="5" height="15" fill="rgb(245,97,54)"/><text x="260.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (4 samples, 1.61%)</title><rect x="262" y="212" width="19" height="15" fill="rgb(235,5,32)"/><text x="265.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="276" y="228" width="5" height="15" fill="rgb(249,71,23)"/><text x="279.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="276" y="244" width="5" height="15" fill="rgb(217,72,15)"/><text x="279.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="276" y="260" width="5" height="15" fill="rgb(230,118,11)"/><text x="279.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="276" y="276" width="5" height="15" fill="rgb(248,33,28)"/><text x="279.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (1 samples, 0.40%)</title><rect x="276" y="292" width="5" height="15" fill="rgb(239,204,12)"/><text x="279.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (1 samples, 0.40%)</title><rect x="276" y="308" width="5" height="15" fill="rgb(236,221,40)"/><text x="279.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (1 samples, 0.40%)</title><rect x="276" y="324" width="5" height="15" fill="rgb(206,194,15)"/><text x="279.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.40%)</title><rect x="276" y="340" width="5" height="15" fill="rgb(209,64,43)"/><text x="279.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="276" y="356" width="5" height="15" fill="rgb(239,61,40)"/><text x="279.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.40%)</title><rect x="276" y="372" width="5" height="15" fill="rgb(231,30,18)"/><text x="279.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="276" y="388" width="5" height="15" fill="rgb(223,14,28)"/><text x="279.00" y="398.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.40%)</title><rect x="276" y="404" width="5" height="15" fill="rgb(231,151,20)"/><text x="279.00" y="414.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="295" y="260" width="5" height="15" fill="rgb(207,178,50)"/><text x="298.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.40%)</title><rect x="295" y="276" width="5" height="15" fill="rgb(226,145,25)"/><text x="298.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.40%)</title><rect x="295" y="292" width="5" height="15" fill="rgb(229,189,46)"/><text x="298.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.40%)</title><rect x="295" y="308" width="5" height="15" fill="rgb(235,223,42)"/><text x="298.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.40%)</title><rect x="295" y="324" width="5" height="15" fill="rgb(220,146,49)"/><text x="298.00" y="334.50"></text></g><g><title>0x7fa2776b4ab0 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="295" y="340" width="5" height="15" fill="rgb(246,90,30)"/><text x="298.00" y="350.50"></text></g><g><title>0x7fa2776a8dd8 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="295" y="356" width="5" height="15" fill="rgb(212,182,6)"/><text x="298.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.40%)</title><rect x="300" y="340" width="5" height="15" fill="rgb(213,104,43)"/><text x="303.00" y="350.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (2 samples, 0.81%)</title><rect x="300" y="324" width="9" height="15" fill="rgb(219,139,48)"/><text x="303.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.40%)</title><rect x="305" y="340" width="4" height="15" fill="rgb(205,18,16)"/><text x="308.00" y="350.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.40%)</title><rect x="305" y="356" width="4" height="15" fill="rgb(254,51,4)"/><text x="308.00" y="366.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (1 samples, 0.40%)</title><rect x="309" y="324" width="5" height="15" fill="rgb(235,164,41)"/><text x="312.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (1 samples, 0.40%)</title><rect x="309" y="340" width="5" height="15" fill="rgb(247,121,15)"/><text x="312.00" y="350.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (7 samples, 2.82%)</title><rect x="285" y="228" width="34" height="15" fill="rgb(235,194,17)"/><text x="288.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (7 samples, 2.82%)</title><rect x="285" y="244" width="34" height="15" fill="rgb(207,133,9)"/><text x="288.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py) (4 samples, 1.61%)</title><rect x="300" y="260" width="19" height="15" fill="rgb(234,217,22)"/><text x="303.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.61%)</title><rect x="300" y="276" width="19" height="15" fill="rgb(246,151,13)"/><text x="303.00" y="286.50"></text></g><g><title>array_choose (methods.c) (4 samples, 1.61%)</title><rect x="300" y="292" width="19" height="15" fill="rgb(216,161,26)"/><text x="303.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c) (4 samples, 1.61%)</title><rect x="300" y="308" width="19" height="15" fill="rgb(223,53,5)"/><text x="303.00" y="318.50"></text></g><g><title>arraymultiter_dealloc (iterators.c) (1 samples, 0.40%)</title><rect x="314" y="324" width="5" height="15" fill="rgb(233,43,41)"/><text x="317.00" y="334.50"></text></g><g><title>0x7fa2776c3dfb (libc-2.29.so) (1 samples, 0.40%)</title><rect x="314" y="340" width="5" height="15" fill="rgb(246,179,12)"/><text x="317.00" y="350.50"></text></g><g><title>0x7fa2776c2aa0 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="314" y="356" width="5" height="15" fill="rgb(210,37,52)"/><text x="317.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (12 samples, 4.84%)</title><rect x="281" y="212" width="57" height="15" fill="rgb(221,39,15)"/><text x="284.00" y="222.50">_run (..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (4 samples, 1.61%)</title><rect x="319" y="228" width="19" height="15" fill="rgb(239,44,6)"/><text x="322.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.81%)</title><rect x="328" y="244" width="10" height="15" fill="rgb(205,185,53)"/><text x="331.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (2 samples, 0.81%)</title><rect x="328" y="260" width="10" height="15" fill="rgb(239,50,24)"/><text x="331.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="333" y="276" width="5" height="15" fill="rgb(214,170,8)"/><text x="336.00" y="286.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.40%)</title><rect x="338" y="244" width="5" height="15" fill="rgb(240,48,43)"/><text x="341.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.40%)</title><rect x="338" y="260" width="5" height="15" fill="rgb(235,134,15)"/><text x="341.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.40%)</title><rect x="338" y="276" width="5" height="15" fill="rgb(220,122,2)"/><text x="341.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.40%)</title><rect x="338" y="292" width="5" height="15" fill="rgb(215,215,4)"/><text x="341.00" y="302.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.40%)</title><rect x="338" y="308" width="5" height="15" fill="rgb(247,177,47)"/><text x="341.00" y="318.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.40%)</title><rect x="338" y="324" width="5" height="15" fill="rgb(231,27,1)"/><text x="341.00" y="334.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="343" y="260" width="4" height="15" fill="rgb(251,28,1)"/><text x="346.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="343" y="276" width="4" height="15" fill="rgb(246,115,36)"/><text x="346.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="343" y="292" width="4" height="15" fill="rgb(218,175,37)"/><text x="346.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="343" y="308" width="4" height="15" fill="rgb(214,39,17)"/><text x="346.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.40%)</title><rect x="357" y="276" width="5" height="15" fill="rgb(207,208,53)"/><text x="360.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="357" y="292" width="5" height="15" fill="rgb(227,211,9)"/><text x="360.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="357" y="308" width="5" height="15" fill="rgb(245,31,29)"/><text x="360.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (7 samples, 2.82%)</title><rect x="338" y="212" width="33" height="15" fill="rgb(228,11,16)"/><text x="341.00" y="222.50">_r..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (7 samples, 2.82%)</title><rect x="338" y="228" width="33" height="15" fill="rgb(241,69,7)"/><text x="341.00" y="238.50">_c..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (6 samples, 2.42%)</title><rect x="343" y="244" width="28" height="15" fill="rgb(210,117,3)"/><text x="346.00" y="254.50">t..</text></g><g><title>array_subscript (mapping.c) (5 samples, 2.02%)</title><rect x="347" y="260" width="24" height="15" fill="rgb(207,176,7)"/><text x="350.00" y="270.50">a..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (2 samples, 0.81%)</title><rect x="362" y="276" width="9" height="15" fill="rgb(254,61,46)"/><text x="365.00" y="286.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.81%)</title><rect x="362" y="292" width="9" height="15" fill="rgb(253,147,9)"/><text x="365.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.40%)</title><rect x="376" y="228" width="5" height="15" fill="rgb(253,163,11)"/><text x="379.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="376" y="244" width="5" height="15" fill="rgb(246,32,24)"/><text x="379.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="376" y="260" width="5" height="15" fill="rgb(218,37,9)"/><text x="379.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="376" y="276" width="5" height="15" fill="rgb(226,219,36)"/><text x="379.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="376" y="292" width="5" height="15" fill="rgb(208,133,33)"/><text x="379.00" y="302.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="381" y="276" width="4" height="15" fill="rgb(209,206,53)"/><text x="384.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="381" y="292" width="4" height="15" fill="rgb(216,172,35)"/><text x="384.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="381" y="308" width="4" height="15" fill="rgb(210,184,32)"/><text x="384.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="381" y="324" width="4" height="15" fill="rgb(251,2,48)"/><text x="384.00" y="334.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.40%)</title><rect x="385" y="276" width="5" height="15" fill="rgb(209,116,41)"/><text x="388.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.40%)</title><rect x="385" y="292" width="5" height="15" fill="rgb(213,22,7)"/><text x="388.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.40%)</title><rect x="385" y="308" width="5" height="15" fill="rgb(243,110,29)"/><text x="388.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.40%)</title><rect x="385" y="324" width="5" height="15" fill="rgb(238,159,8)"/><text x="388.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="385" y="340" width="5" height="15" fill="rgb(205,87,30)"/><text x="388.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.40%)</title><rect x="385" y="356" width="5" height="15" fill="rgb(241,68,10)"/><text x="388.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.40%)</title><rect x="385" y="372" width="5" height="15" fill="rgb(225,16,44)"/><text x="388.00" y="382.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.40%)</title><rect x="395" y="324" width="5" height="15" fill="rgb(241,120,32)"/><text x="398.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.40%)</title><rect x="395" y="340" width="5" height="15" fill="rgb(227,144,7)"/><text x="398.00" y="350.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.40%)</title><rect x="395" y="356" width="5" height="15" fill="rgb(243,97,1)"/><text x="398.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="395" y="372" width="5" height="15" fill="rgb(233,79,9)"/><text x="398.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="395" y="388" width="5" height="15" fill="rgb(248,135,42)"/><text x="398.00" y="398.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (5 samples, 2.02%)</title><rect x="381" y="260" width="23" height="15" fill="rgb(218,17,16)"/><text x="384.00" y="270.50">_..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (3 samples, 1.21%)</title><rect x="390" y="276" width="14" height="15" fill="rgb(246,123,32)"/><text x="393.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.21%)</title><rect x="390" y="292" width="14" height="15" fill="rgb(217,28,11)"/><text x="393.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (3 samples, 1.21%)</title><rect x="390" y="308" width="14" height="15" fill="rgb(215,193,21)"/><text x="393.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.40%)</title><rect x="400" y="324" width="4" height="15" fill="rgb(247,130,45)"/><text x="403.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (6 samples, 2.42%)</title><rect x="381" y="228" width="28" height="15" fill="rgb(210,149,54)"/><text x="384.00" y="238.50">_..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (6 samples, 2.42%)</title><rect x="381" y="244" width="28" height="15" fill="rgb(214,135,25)"/><text x="384.00" y="254.50">_..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="404" y="260" width="5" height="15" fill="rgb(241,20,30)"/><text x="407.00" y="270.50"></text></g><g><title>0x7fa2768e69c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="404" y="276" width="5" height="15" fill="rgb(219,223,36)"/><text x="407.00" y="286.50"></text></g><g><title>0x7fa23815c54f (?) (1 samples, 0.40%)</title><rect x="414" y="244" width="5" height="15" fill="rgb(249,78,29)"/><text x="417.00" y="254.50"></text></g><g><title>0x7fa23816265e (?) (1 samples, 0.40%)</title><rect x="414" y="260" width="5" height="15" fill="rgb(230,196,33)"/><text x="417.00" y="270.50"></text></g><g><title>0x7fa23816250f (?) (1 samples, 0.40%)</title><rect x="414" y="276" width="5" height="15" fill="rgb(240,69,13)"/><text x="417.00" y="286.50"></text></g><g><title>0x7fa238168d6c (?) (1 samples, 0.40%)</title><rect x="414" y="292" width="5" height="15" fill="rgb(245,150,35)"/><text x="417.00" y="302.50"></text></g><g><title>0x7fa2416c9ab9 (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="414" y="308" width="5" height="15" fill="rgb(251,203,16)"/><text x="417.00" y="318.50"></text></g><g><title>0x7fa2416caead (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="414" y="324" width="5" height="15" fill="rgb(254,116,48)"/><text x="417.00" y="334.50"></text></g><g><title>0x7fa2416caea0 (libgomp.so.1.0.0) (4 samples, 1.61%)</title><rect x="419" y="484" width="19" height="15" fill="rgb(240,0,43)"/><text x="422.00" y="494.50"></text></g><g><title>0x7fa2416caea9 (libgomp.so.1.0.0) (6 samples, 2.42%)</title><rect x="438" y="484" width="28" height="15" fill="rgb(207,190,43)"/><text x="441.00" y="494.50">0..</text></g><g><title>0x7fa2416caeab (libgomp.so.1.0.0) (12 samples, 4.84%)</title><rect x="466" y="484" width="57" height="15" fill="rgb(237,228,11)"/><text x="469.00" y="494.50">0x7fa2..</text></g><g><title>0x7fa2416c9ab9 (libgomp.so.1.0.0) (31 samples, 12.50%)</title><rect x="419" y="468" width="147" height="15" fill="rgb(247,169,51)"/><text x="422.00" y="478.50">0x7fa2416c9ab9 (li..</text></g><g><title>0x7fa2416caead (libgomp.so.1.0.0) (9 samples, 3.63%)</title><rect x="523" y="484" width="43" height="15" fill="rgb(248,154,28)"/><text x="526.00" y="494.50">0x7f..</text></g><g><title>0x7fa2416cacfb (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="566" y="500" width="5" height="15" fill="rgb(244,176,33)"/><text x="569.00" y="510.50"></text></g><g><title>0x7fa2416cacfd (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="571" y="500" width="5" height="15" fill="rgb(209,74,38)"/><text x="574.00" y="510.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (34 samples, 13.71%)</title><rect x="419" y="292" width="161" height="15" fill="rgb(240,41,46)"/><text x="422.00" y="302.50">pybind11::detail::ar..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (34 samples, 13.71%)</title><rect x="419" y="308" width="161" height="15" fill="rgb(250,112,3)"/><text x="422.00" y="318.50">pybind11::detail::ar..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (34 samples, 13.71%)</title><rect x="419" y="324" width="161" height="15" fill="rgb(235,88,34)"/><text x="422.00" y="334.50">pybind11::cpp_functi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (34 samples, 13.71%)</title><rect x="419" y="340" width="161" height="15" fill="rgb(226,28,32)"/><text x="422.00" y="350.50">pybind11::array_t&lt;fl..</text></g><g><title>pybind11::array::~array (numpy.h) (34 samples, 13.71%)</title><rect x="419" y="356" width="161" height="15" fill="rgb(218,149,4)"/><text x="422.00" y="366.50">pybind11::array::~ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (34 samples, 13.71%)</title><rect x="419" y="372" width="161" height="15" fill="rgb(222,16,37)"/><text x="422.00" y="382.50">pybind11::buffer::~b..</text></g><g><title>pybind11::object::~object (pytypes.h) (34 samples, 13.71%)</title><rect x="419" y="388" width="161" height="15" fill="rgb(207,83,27)"/><text x="422.00" y="398.50">pybind11::object::~o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (34 samples, 13.71%)</title><rect x="419" y="404" width="161" height="15" fill="rgb(223,205,6)"/><text x="422.00" y="414.50">pybind11::handle::de..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (34 samples, 13.71%)</title><rect x="419" y="420" width="161" height="15" fill="rgb(228,84,2)"/><text x="422.00" y="430.50">RuntimeTreeEnsembleR..</text></g><g><title>pybind11::array::size (numpy.h) (34 samples, 13.71%)</title><rect x="419" y="436" width="161" height="15" fill="rgb(236,187,17)"/><text x="422.00" y="446.50">pybind11::array::siz..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (34 samples, 13.71%)</title><rect x="419" y="452" width="161" height="15" fill="rgb(226,141,17)"/><text x="422.00" y="462.50">std::accumulate&lt;long..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 1.21%)</title><rect x="566" y="468" width="14" height="15" fill="rgb(208,227,17)"/><text x="569.00" y="478.50"></text></g><g><title>0x7fa2416c8daa (libgomp.so.1.0.0) (3 samples, 1.21%)</title><rect x="566" y="484" width="14" height="15" fill="rgb(220,48,8)"/><text x="569.00" y="494.50"></text></g><g><title>0x7fa2416cad6d (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="576" y="500" width="4" height="15" fill="rgb(206,221,9)"/><text x="579.00" y="510.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (99 samples, 39.92%)</title><rect x="114" y="100" width="471" height="15" fill="rgb(211,40,48)"/><text x="117.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (99 samples, 39.92%)</title><rect x="114" y="116" width="471" height="15" fill="rgb(220,134,3)"/><text x="117.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (99 samples, 39.92%)</title><rect x="114" y="132" width="471" height="15" fill="rgb(225,18,22)"/><text x="117.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (99 samples, 39.92%)</title><rect x="114" y="148" width="471" height="15" fill="rgb(212,168,29)"/><text x="117.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (99 samples, 39.92%)</title><rect x="114" y="164" width="471" height="15" fill="rgb(222,162,52)"/><text x="117.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (97 samples, 39.11%)</title><rect x="124" y="180" width="461" height="15" fill="rgb(232,50,40)"/><text x="127.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (75 samples, 30.24%)</title><rect x="228" y="196" width="357" height="15" fill="rgb(247,106,38)"/><text x="231.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 18.15%)</title><rect x="371" y="212" width="214" height="15" fill="rgb(215,7,36)"/><text x="374.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (37 samples, 14.92%)</title><rect x="409" y="228" width="176" height="15" fill="rgb(248,31,31)"/><text x="412.00" y="238.50">_run (mlprodict/onnxrt..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (35 samples, 14.11%)</title><rect x="419" y="244" width="166" height="15" fill="rgb(223,118,17)"/><text x="422.00" y="254.50">pybind11::cpp_functio..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (35 samples, 14.11%)</title><rect x="419" y="260" width="166" height="15" fill="rgb(252,141,50)"/><text x="422.00" y="270.50">void pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (35 samples, 14.11%)</title><rect x="419" y="276" width="166" height="15" fill="rgb(234,218,22)"/><text x="422.00" y="286.50">void pybind11::cpp_fu..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h) (1 samples, 0.40%)</title><rect x="580" y="292" width="5" height="15" fill="rgb(208,112,49)"/><text x="583.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h) (1 samples, 0.40%)</title><rect x="580" y="308" width="5" height="15" fill="rgb(222,120,11)"/><text x="583.00" y="318.50"></text></g><g><title>std::_Bit_reference::operator bool (stl_bvector.h) (1 samples, 0.40%)</title><rect x="580" y="324" width="5" height="15" fill="rgb(216,19,23)"/><text x="583.00" y="334.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (cast.h) (1 samples, 0.40%)</title><rect x="580" y="340" width="5" height="15" fill="rgb(233,202,48)"/><text x="583.00" y="350.50"></text></g><g><title>pybind11::detail::get_type_info (cast.h) (1 samples, 0.40%)</title><rect x="580" y="356" width="5" height="15" fill="rgb(228,96,0)"/><text x="583.00" y="366.50"></text></g><g><title>pybind11::detail::get_global_type_info (cast.h) (1 samples, 0.40%)</title><rect x="580" y="372" width="5" height="15" fill="rgb(212,134,9)"/><text x="583.00" y="382.50"></text></g><g><title>std::unordered_map&lt;std::type_index, pybind11::detail::type_info*, std::hash&lt;std::type_index&gt;, std::equal_to&lt;std::type_index&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt; &gt;::find (unordered_map.h) (1 samples, 0.40%)</title><rect x="580" y="388" width="5" height="15" fill="rgb(254,113,20)"/><text x="583.00" y="398.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (1 samples, 0.40%)</title><rect x="580" y="404" width="5" height="15" fill="rgb(240,26,28)"/><text x="583.00" y="414.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.40%)</title><rect x="580" y="420" width="5" height="15" fill="rgb(231,210,1)"/><text x="583.00" y="430.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::__detail::_Select1st, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.40%)</title><rect x="580" y="436" width="5" height="15" fill="rgb(232,21,19)"/><text x="583.00" y="446.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.40%)</title><rect x="580" y="452" width="5" height="15" fill="rgb(232,167,24)"/><text x="583.00" y="462.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="580" y="468" width="5" height="15" fill="rgb(220,192,44)"/><text x="583.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="585" y="404" width="5" height="15" fill="rgb(241,122,17)"/><text x="588.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="585" y="420" width="5" height="15" fill="rgb(231,50,24)"/><text x="588.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="585" y="436" width="5" height="15" fill="rgb(244,182,36)"/><text x="588.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="585" y="452" width="5" height="15" fill="rgb(252,85,14)"/><text x="588.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="585" y="468" width="5" height="15" fill="rgb(217,27,39)"/><text x="588.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.40%)</title><rect x="585" y="484" width="5" height="15" fill="rgb(230,123,54)"/><text x="588.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.40%)</title><rect x="585" y="500" width="5" height="15" fill="rgb(228,66,38)"/><text x="588.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="585" y="516" width="5" height="15" fill="rgb(230,56,52)"/><text x="588.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="585" y="532" width="5" height="15" fill="rgb(215,110,19)"/><text x="588.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="585" y="548" width="5" height="15" fill="rgb(227,125,13)"/><text x="588.00" y="558.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="585" y="564" width="5" height="15" fill="rgb(229,59,22)"/><text x="588.00" y="574.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="585" y="580" width="5" height="15" fill="rgb(223,36,34)"/><text x="588.00" y="590.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.548] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="585" y="596" width="5" height="15" fill="rgb(211,107,5)"/><text x="588.00" y="606.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="585" y="612" width="5" height="15" fill="rgb(228,158,39)"/><text x="588.00" y="622.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="585" y="628" width="5" height="15" fill="rgb(208,30,2)"/><text x="588.00" y="638.50"></text></g><g><title>0x7fa2776c58a4 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="585" y="644" width="5" height="15" fill="rgb(248,180,29)"/><text x="588.00" y="654.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (101 samples, 40.73%)</title><rect x="114" y="68" width="481" height="15" fill="rgb(249,101,10)"/><text x="117.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_n_estimators5..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (101 samples, 40.73%)</title><rect x="114" y="84" width="481" height="15" fill="rgb(243,53,1)"/><text x="117.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.81%)</title><rect x="585" y="100" width="10" height="15" fill="rgb(215,42,54)"/><text x="588.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.81%)</title><rect x="585" y="116" width="10" height="15" fill="rgb(226,28,46)"/><text x="588.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.81%)</title><rect x="585" y="132" width="10" height="15" fill="rgb(217,79,11)"/><text x="588.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.81%)</title><rect x="585" y="148" width="10" height="15" fill="rgb(235,43,24)"/><text x="588.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.81%)</title><rect x="585" y="164" width="10" height="15" fill="rgb(247,82,6)"/><text x="588.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.81%)</title><rect x="585" y="180" width="10" height="15" fill="rgb(205,105,26)"/><text x="588.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.81%)</title><rect x="585" y="196" width="10" height="15" fill="rgb(226,42,4)"/><text x="588.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="212" width="10" height="15" fill="rgb(253,106,25)"/><text x="588.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="228" width="10" height="15" fill="rgb(225,165,23)"/><text x="588.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="244" width="10" height="15" fill="rgb(243,202,9)"/><text x="588.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="585" y="260" width="10" height="15" fill="rgb(220,219,31)"/><text x="588.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="276" width="10" height="15" fill="rgb(209,92,29)"/><text x="588.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.81%)</title><rect x="585" y="292" width="10" height="15" fill="rgb(229,18,44)"/><text x="588.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="308" width="10" height="15" fill="rgb(239,147,37)"/><text x="588.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="324" width="10" height="15" fill="rgb(245,206,29)"/><text x="588.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="340" width="10" height="15" fill="rgb(234,19,11)"/><text x="588.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.81%)</title><rect x="585" y="356" width="10" height="15" fill="rgb(218,82,2)"/><text x="588.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="585" y="372" width="10" height="15" fill="rgb(210,192,16)"/><text x="588.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.81%)</title><rect x="585" y="388" width="10" height="15" fill="rgb(220,209,38)"/><text x="588.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.40%)</title><rect x="590" y="404" width="5" height="15" fill="rgb(216,48,20)"/><text x="593.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.40%)</title><rect x="590" y="420" width="5" height="15" fill="rgb(212,203,21)"/><text x="593.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.40%)</title><rect x="590" y="436" width="5" height="15" fill="rgb(240,21,28)"/><text x="593.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.40%)</title><rect x="590" y="452" width="5" height="15" fill="rgb(222,130,17)"/><text x="593.00" y="462.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.40%)</title><rect x="590" y="468" width="5" height="15" fill="rgb(232,10,48)"/><text x="593.00" y="478.50"></text></g><g><title>0x7fa251107d2e (?) (1 samples, 0.40%)</title><rect x="633" y="212" width="5" height="15" fill="rgb(206,108,45)"/><text x="636.00" y="222.50"></text></g><g><title>0x7fa251106fa6 (?) (1 samples, 0.40%)</title><rect x="633" y="228" width="5" height="15" fill="rgb(247,144,43)"/><text x="636.00" y="238.50"></text></g><g><title>0x7fa251116405 (?) (1 samples, 0.40%)</title><rect x="633" y="244" width="5" height="15" fill="rgb(224,66,17)"/><text x="636.00" y="254.50"></text></g><g><title>0x7fa2511152df (?) (1 samples, 0.40%)</title><rect x="633" y="260" width="5" height="15" fill="rgb(233,189,2)"/><text x="636.00" y="270.50"></text></g><g><title>0x7fa2510f9d04 (?) (1 samples, 0.40%)</title><rect x="633" y="276" width="5" height="15" fill="rgb(234,36,0)"/><text x="636.00" y="286.50"></text></g><g><title>0x7fa2510f9666 (?) (1 samples, 0.40%)</title><rect x="633" y="292" width="5" height="15" fill="rgb(239,118,3)"/><text x="636.00" y="302.50"></text></g><g><title>0x7fa2510ef2fd (?) (1 samples, 0.40%)</title><rect x="633" y="308" width="5" height="15" fill="rgb(229,153,19)"/><text x="636.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.40%)</title><rect x="633" y="324" width="5" height="15" fill="rgb(216,72,19)"/><text x="636.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.40%)</title><rect x="633" y="340" width="5" height="15" fill="rgb(229,111,15)"/><text x="636.00" y="350.50"></text></g><g><title>0x7fa251106f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="638" y="228" width="4" height="15" fill="rgb(206,46,6)"/><text x="641.00" y="238.50"></text></g><g><title>0x7fa2510f6d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="638" y="244" width="4" height="15" fill="rgb(216,46,36)"/><text x="641.00" y="254.50"></text></g><g><title>0x7fa2510e3bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="638" y="260" width="4" height="15" fill="rgb(253,224,6)"/><text x="641.00" y="270.50"></text></g><g><title>0x7fa2510ead60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="638" y="276" width="4" height="15" fill="rgb(242,173,39)"/><text x="641.00" y="286.50"></text></g><g><title>0x7fa251106f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="642" y="228" width="5" height="15" fill="rgb(217,94,49)"/><text x="645.00" y="238.50"></text></g><g><title>0x7fa2510ef2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.21%)</title><rect x="647" y="308" width="14" height="15" fill="rgb(247,188,51)"/><text x="650.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 1.21%)</title><rect x="647" y="324" width="14" height="15" fill="rgb(232,86,2)"/><text x="650.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.81%)</title><rect x="652" y="340" width="9" height="15" fill="rgb(218,8,27)"/><text x="655.00" y="350.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.40%)</title><rect x="657" y="356" width="4" height="15" fill="rgb(250,140,4)"/><text x="660.00" y="366.50"></text></g><g><title>0x7fa2511152df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.61%)</title><rect x="647" y="260" width="19" height="15" fill="rgb(236,47,42)"/><text x="650.00" y="270.50"></text></g><g><title>0x7fa2510f9d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.61%)</title><rect x="647" y="276" width="19" height="15" fill="rgb(221,95,33)"/><text x="650.00" y="286.50"></text></g><g><title>0x7fa2510f9666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.61%)</title><rect x="647" y="292" width="19" height="15" fill="rgb(230,160,1)"/><text x="650.00" y="302.50"></text></g><g><title>0x7fa2510ef317 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="661" y="308" width="5" height="15" fill="rgb(248,59,39)"/><text x="664.00" y="318.50"></text></g><g><title>0x7fa251115456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="666" y="260" width="5" height="15" fill="rgb(212,30,10)"/><text x="669.00" y="270.50"></text></g><g><title>0x7fa251115592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="671" y="260" width="5" height="15" fill="rgb(220,79,41)"/><text x="674.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="671" y="276" width="5" height="15" fill="rgb(234,59,12)"/><text x="674.00" y="286.50"></text></g><g><title>0x7fa251116405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.82%)</title><rect x="647" y="244" width="33" height="15" fill="rgb(226,178,53)"/><text x="650.00" y="254.50">0x..</text></g><g><title>0x7fa251115c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="676" y="260" width="4" height="15" fill="rgb(216,65,41)"/><text x="679.00" y="270.50"></text></g><g><title>0x7fa2510ed529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="676" y="276" width="4" height="15" fill="rgb(211,90,45)"/><text x="679.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.40%)</title><rect x="676" y="292" width="4" height="15" fill="rgb(235,28,30)"/><text x="679.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.40%)</title><rect x="676" y="308" width="4" height="15" fill="rgb(218,9,12)"/><text x="679.00" y="318.50"></text></g><g><title>0x7fa2510ea4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="680" y="276" width="5" height="15" fill="rgb(210,32,20)"/><text x="683.00" y="286.50"></text></g><g><title>0x7fa251106fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.63%)</title><rect x="647" y="228" width="43" height="15" fill="rgb(211,201,5)"/><text x="650.00" y="238.50">0x7f..</text></g><g><title>0x7fa251116540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="680" y="244" width="10" height="15" fill="rgb(218,218,48)"/><text x="683.00" y="254.50"></text></g><g><title>0x7fa2510eb2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.81%)</title><rect x="680" y="260" width="10" height="15" fill="rgb(244,19,20)"/><text x="683.00" y="270.50"></text></g><g><title>0x7fa2510ea570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="685" y="276" width="5" height="15" fill="rgb(246,222,38)"/><text x="688.00" y="286.50"></text></g><g><title>0x7fa25110705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="690" y="228" width="5" height="15" fill="rgb(238,226,31)"/><text x="693.00" y="238.50"></text></g><g><title>array_take (methods.c) (1 samples, 0.40%)</title><rect x="690" y="244" width="5" height="15" fill="rgb(245,153,33)"/><text x="693.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.40%)</title><rect x="690" y="260" width="5" height="15" fill="rgb(225,200,33)"/><text x="693.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.40%)</title><rect x="690" y="276" width="5" height="15" fill="rgb(235,12,29)"/><text x="693.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.40%)</title><rect x="690" y="292" width="5" height="15" fill="rgb(232,184,5)"/><text x="693.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.40%)</title><rect x="690" y="308" width="5" height="15" fill="rgb(214,48,3)"/><text x="693.00" y="318.50"></text></g><g><title>0x7fa25110713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="695" y="228" width="4" height="15" fill="rgb(253,189,30)"/><text x="698.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="695" y="244" width="4" height="15" fill="rgb(215,227,13)"/><text x="698.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="695" y="260" width="4" height="15" fill="rgb(214,205,2)"/><text x="698.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="695" y="276" width="4" height="15" fill="rgb(219,112,35)"/><text x="698.00" y="286.50"></text></g><g><title>0x7fa25110714c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="699" y="228" width="5" height="15" fill="rgb(209,133,46)"/><text x="702.00" y="238.50"></text></g><g><title>0x7fa25110714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="704" y="228" width="5" height="15" fill="rgb(249,168,27)"/><text x="707.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="704" y="244" width="5" height="15" fill="rgb(244,114,21)"/><text x="707.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="704" y="260" width="5" height="15" fill="rgb(219,115,41)"/><text x="707.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="704" y="276" width="5" height="15" fill="rgb(246,134,36)"/><text x="707.00" y="286.50"></text></g><g><title>0x7fa251107d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (16 samples, 6.45%)</title><rect x="638" y="212" width="76" height="15" fill="rgb(252,224,26)"/><text x="641.00" y="222.50">0x7fa251..</text></g><g><title>0x7fa251107328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="709" y="228" width="5" height="15" fill="rgb(211,40,6)"/><text x="712.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.40%)</title><rect x="709" y="244" width="5" height="15" fill="rgb(214,87,33)"/><text x="712.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.40%)</title><rect x="709" y="260" width="5" height="15" fill="rgb(223,165,38)"/><text x="712.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.40%)</title><rect x="709" y="276" width="5" height="15" fill="rgb(240,83,53)"/><text x="712.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="709" y="292" width="5" height="15" fill="rgb(254,100,31)"/><text x="712.00" y="302.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.81%)</title><rect x="752" y="244" width="9" height="15" fill="rgb(244,105,14)"/><text x="755.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.81%)</title><rect x="761" y="244" width="10" height="15" fill="rgb(215,84,46)"/><text x="764.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.81%)</title><rect x="776" y="260" width="9" height="15" fill="rgb(231,61,3)"/><text x="779.00" y="270.50"></text></g><g><title>0x7fa2776d9e7a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="780" y="276" width="5" height="15" fill="rgb(226,17,39)"/><text x="783.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 2.42%)</title><rect x="771" y="244" width="28" height="15" fill="rgb(216,109,17)"/><text x="774.00" y="254.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.21%)</title><rect x="785" y="260" width="14" height="15" fill="rgb(210,169,15)"/><text x="788.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="799" y="244" width="5" height="15" fill="rgb(235,211,24)"/><text x="802.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (7 samples, 2.82%)</title><rect x="804" y="244" width="33" height="15" fill="rgb(227,88,20)"/><text x="807.00" y="254.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 2.02%)</title><rect x="814" y="260" width="23" height="15" fill="rgb(218,221,52)"/><text x="817.00" y="270.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.40%)</title><rect x="833" y="276" width="4" height="15" fill="rgb(214,185,7)"/><text x="836.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.81%)</title><rect x="837" y="244" width="10" height="15" fill="rgb(234,76,36)"/><text x="840.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.81%)</title><rect x="837" y="260" width="10" height="15" fill="rgb(226,62,23)"/><text x="840.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="842" y="276" width="5" height="15" fill="rgb(230,108,13)"/><text x="845.00" y="286.50"></text></g><g><title>0x7fa2777a1130 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="842" y="292" width="5" height="15" fill="rgb(252,165,8)"/><text x="845.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (32 samples, 12.90%)</title><rect x="714" y="212" width="152" height="15" fill="rgb(221,60,12)"/><text x="717.00" y="222.50">_validate_X_predict..</text></g><g><title>check_array (sklearn/utils/validation.py) (32 samples, 12.90%)</title><rect x="714" y="228" width="152" height="15" fill="rgb(219,113,28)"/><text x="717.00" y="238.50">check_array (sklear..</text></g><g><title>simplefilter (warnings.py) (4 samples, 1.61%)</title><rect x="847" y="244" width="19" height="15" fill="rgb(208,51,19)"/><text x="850.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (3 samples, 1.21%)</title><rect x="852" y="260" width="14" height="15" fill="rgb(232,106,18)"/><text x="855.00" y="270.50"></text></g><g><title>0x7fa2776e412b (libc-2.29.so) (1 samples, 0.40%)</title><rect x="899" y="244" width="5" height="15" fill="rgb(222,206,10)"/><text x="902.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.81%)</title><rect x="904" y="244" width="10" height="15" fill="rgb(242,148,31)"/><text x="907.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 3.23%)</title><rect x="885" y="228" width="38" height="15" fill="rgb(231,156,26)"/><text x="888.00" y="238.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.81%)</title><rect x="914" y="244" width="9" height="15" fill="rgb(244,145,2)"/><text x="917.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (67 samples, 27.02%)</title><rect x="609" y="180" width="319" height="15" fill="rgb(244,49,10)"/><text x="612.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosti..</text></g><g><title>predict (sklearn/tree/_classes.py) (66 samples, 26.61%)</title><rect x="614" y="196" width="314" height="15" fill="rgb(230,38,19)"/><text x="617.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 5.24%)</title><rect x="866" y="212" width="62" height="15" fill="rgb(247,218,29)"/><text x="869.00" y="222.50">check_..</text></g><g><title>isclass (inspect.py) (1 samples, 0.40%)</title><rect x="923" y="228" width="5" height="15" fill="rgb(242,106,37)"/><text x="926.00" y="238.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.40%)</title><rect x="928" y="228" width="5" height="15" fill="rgb(240,147,49)"/><text x="931.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.40%)</title><rect x="928" y="244" width="5" height="15" fill="rgb(205,215,4)"/><text x="931.00" y="254.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.40%)</title><rect x="928" y="260" width="5" height="15" fill="rgb(243,132,13)"/><text x="931.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.40%)</title><rect x="928" y="276" width="5" height="15" fill="rgb(216,32,35)"/><text x="931.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.40%)</title><rect x="933" y="244" width="4" height="15" fill="rgb(246,147,35)"/><text x="936.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.40%)</title><rect x="933" y="260" width="4" height="15" fill="rgb(234,74,43)"/><text x="936.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 1.21%)</title><rect x="928" y="180" width="14" height="15" fill="rgb(209,102,18)"/><text x="931.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 1.21%)</title><rect x="928" y="196" width="14" height="15" fill="rgb(253,93,10)"/><text x="931.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 1.21%)</title><rect x="928" y="212" width="14" height="15" fill="rgb(221,69,25)"/><text x="931.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (2 samples, 0.81%)</title><rect x="933" y="228" width="9" height="15" fill="rgb(222,10,25)"/><text x="936.00" y="238.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.40%)</title><rect x="937" y="244" width="5" height="15" fill="rgb(236,45,15)"/><text x="940.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.21%)</title><rect x="942" y="180" width="14" height="15" fill="rgb(217,139,8)"/><text x="945.00" y="190.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.81%)</title><rect x="956" y="180" width="10" height="15" fill="rgb(228,217,45)"/><text x="959.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="961" y="196" width="5" height="15" fill="rgb(208,89,32)"/><text x="964.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="961" y="212" width="5" height="15" fill="rgb(216,26,17)"/><text x="964.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="961" y="228" width="5" height="15" fill="rgb(216,191,1)"/><text x="964.00" y="238.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.40%)</title><rect x="961" y="244" width="5" height="15" fill="rgb(253,26,34)"/><text x="964.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.40%)</title><rect x="961" y="260" width="5" height="15" fill="rgb(235,207,50)"/><text x="964.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.40%)</title><rect x="961" y="276" width="5" height="15" fill="rgb(250,103,26)"/><text x="964.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="966" y="212" width="5" height="15" fill="rgb(230,160,7)"/><text x="969.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="966" y="228" width="5" height="15" fill="rgb(218,119,32)"/><text x="969.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c) (2 samples, 0.81%)</title><rect x="966" y="180" width="9" height="15" fill="rgb(235,103,30)"/><text x="969.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.81%)</title><rect x="966" y="196" width="9" height="15" fill="rgb(206,121,25)"/><text x="969.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.40%)</title><rect x="971" y="212" width="4" height="15" fill="rgb(224,30,18)"/><text x="974.00" y="222.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 0.40%)</title><rect x="975" y="180" width="5" height="15" fill="rgb(218,55,51)"/><text x="978.00" y="190.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.40%)</title><rect x="980" y="212" width="5" height="15" fill="rgb(252,97,25)"/><text x="983.00" y="222.50"></text></g><g><title>0x7fa2768e57c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="980" y="228" width="5" height="15" fill="rgb(219,3,45)"/><text x="983.00" y="238.50"></text></g><g><title>array_multiply (number.c) (2 samples, 0.81%)</title><rect x="980" y="180" width="10" height="15" fill="rgb(208,61,25)"/><text x="983.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.81%)</title><rect x="980" y="196" width="10" height="15" fill="rgb(246,92,21)"/><text x="983.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="985" y="212" width="5" height="15" fill="rgb(232,224,44)"/><text x="988.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="985" y="228" width="5" height="15" fill="rgb(251,181,46)"/><text x="988.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="985" y="244" width="5" height="15" fill="rgb(214,154,38)"/><text x="988.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.40%)</title><rect x="985" y="260" width="5" height="15" fill="rgb(225,204,9)"/><text x="988.00" y="270.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.40%)</title><rect x="985" y="276" width="5" height="15" fill="rgb(217,69,8)"/><text x="988.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.40%)</title><rect x="985" y="292" width="5" height="15" fill="rgb(227,215,8)"/><text x="988.00" y="302.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 1.21%)</title><rect x="990" y="180" width="14" height="15" fill="rgb(227,160,42)"/><text x="993.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.21%)</title><rect x="990" y="196" width="14" height="15" fill="rgb(213,6,43)"/><text x="993.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (3 samples, 1.21%)</title><rect x="990" y="212" width="14" height="15" fill="rgb(248,31,47)"/><text x="993.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.81%)</title><rect x="994" y="228" width="10" height="15" fill="rgb(245,55,45)"/><text x="997.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.81%)</title><rect x="994" y="244" width="10" height="15" fill="rgb(226,183,45)"/><text x="997.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.81%)</title><rect x="994" y="260" width="10" height="15" fill="rgb(222,135,8)"/><text x="997.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.81%)</title><rect x="994" y="276" width="10" height="15" fill="rgb(246,129,53)"/><text x="997.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.81%)</title><rect x="994" y="292" width="10" height="15" fill="rgb(214,222,6)"/><text x="997.00" y="302.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (2 samples, 0.81%)</title><rect x="1009" y="196" width="9" height="15" fill="rgb(217,45,15)"/><text x="1012.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="1013" y="212" width="5" height="15" fill="rgb(218,77,35)"/><text x="1016.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="1013" y="228" width="5" height="15" fill="rgb(215,181,37)"/><text x="1016.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="1013" y="244" width="5" height="15" fill="rgb(232,209,2)"/><text x="1016.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1013" y="260" width="5" height="15" fill="rgb(233,113,46)"/><text x="1016.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1013" y="276" width="5" height="15" fill="rgb(208,36,12)"/><text x="1016.00" y="286.50"></text></g><g><title>_get_keywords (number.c) (1 samples, 0.40%)</title><rect x="1018" y="308" width="5" height="15" fill="rgb(219,155,25)"/><text x="1021.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1023" y="356" width="5" height="15" fill="rgb(244,202,21)"/><text x="1026.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1023" y="372" width="5" height="15" fill="rgb(208,140,30)"/><text x="1026.00" y="382.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1023" y="388" width="5" height="15" fill="rgb(221,47,30)"/><text x="1026.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.40%)</title><rect x="1023" y="404" width="5" height="15" fill="rgb(254,42,37)"/><text x="1026.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.40%)</title><rect x="1023" y="420" width="5" height="15" fill="rgb(243,150,44)"/><text x="1026.00" y="430.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="1023" y="436" width="5" height="15" fill="rgb(235,76,46)"/><text x="1026.00" y="446.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 1.21%)</title><rect x="1018" y="196" width="14" height="15" fill="rgb(222,212,32)"/><text x="1021.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.21%)</title><rect x="1018" y="212" width="14" height="15" fill="rgb(226,69,40)"/><text x="1021.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="1018" y="228" width="14" height="15" fill="rgb(210,60,21)"/><text x="1021.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="1018" y="244" width="14" height="15" fill="rgb(246,221,26)"/><text x="1021.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (3 samples, 1.21%)</title><rect x="1018" y="260" width="14" height="15" fill="rgb(234,128,4)"/><text x="1021.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (3 samples, 1.21%)</title><rect x="1018" y="276" width="14" height="15" fill="rgb(206,191,1)"/><text x="1021.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (3 samples, 1.21%)</title><rect x="1018" y="292" width="14" height="15" fill="rgb(231,16,14)"/><text x="1021.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1023" y="308" width="9" height="15" fill="rgb(231,21,25)"/><text x="1026.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1023" y="324" width="9" height="15" fill="rgb(231,25,36)"/><text x="1026.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1023" y="340" width="9" height="15" fill="rgb(221,79,11)"/><text x="1026.00" y="350.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="1028" y="356" width="4" height="15" fill="rgb(241,67,44)"/><text x="1031.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="1032" y="228" width="5" height="15" fill="rgb(244,222,41)"/><text x="1035.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1047" y="372" width="5" height="15" fill="rgb(213,120,28)"/><text x="1050.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1047" y="388" width="5" height="15" fill="rgb(240,197,45)"/><text x="1050.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1052" y="372" width="4" height="15" fill="rgb(224,56,36)"/><text x="1055.00" y="382.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.21%)</title><rect x="1047" y="340" width="14" height="15" fill="rgb(246,51,53)"/><text x="1050.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (3 samples, 1.21%)</title><rect x="1047" y="356" width="14" height="15" fill="rgb(217,177,13)"/><text x="1050.00" y="366.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.40%)</title><rect x="1056" y="372" width="5" height="15" fill="rgb(234,195,9)"/><text x="1059.00" y="382.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (4 samples, 1.61%)</title><rect x="1047" y="244" width="19" height="15" fill="rgb(228,107,12)"/><text x="1050.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.61%)</title><rect x="1047" y="260" width="19" height="15" fill="rgb(211,183,39)"/><text x="1050.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (4 samples, 1.61%)</title><rect x="1047" y="276" width="19" height="15" fill="rgb(225,215,11)"/><text x="1050.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (4 samples, 1.61%)</title><rect x="1047" y="292" width="19" height="15" fill="rgb(238,192,47)"/><text x="1050.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1047" y="308" width="19" height="15" fill="rgb(235,65,10)"/><text x="1050.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1047" y="324" width="19" height="15" fill="rgb(232,84,29)"/><text x="1050.00" y="334.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1061" y="340" width="5" height="15" fill="rgb(240,86,32)"/><text x="1064.00" y="350.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.40%)</title><rect x="1066" y="244" width="5" height="15" fill="rgb(217,221,34)"/><text x="1069.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1071" y="244" width="4" height="15" fill="rgb(248,36,27)"/><text x="1074.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1071" y="260" width="4" height="15" fill="rgb(234,1,4)"/><text x="1074.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1071" y="276" width="4" height="15" fill="rgb(211,88,18)"/><text x="1074.00" y="286.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.40%)</title><rect x="1071" y="292" width="4" height="15" fill="rgb(214,176,7)"/><text x="1074.00" y="302.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (2 samples, 0.81%)</title><rect x="1085" y="292" width="9" height="15" fill="rgb(233,126,7)"/><text x="1088.00" y="302.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (4 samples, 1.61%)</title><rect x="1080" y="260" width="19" height="15" fill="rgb(221,90,8)"/><text x="1083.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (3 samples, 1.21%)</title><rect x="1085" y="276" width="14" height="15" fill="rgb(230,131,41)"/><text x="1088.00" y="286.50"></text></g><g><title>ufunc_geterr (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1094" y="292" width="5" height="15" fill="rgb(213,67,47)"/><text x="1097.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (3 samples, 1.21%)</title><rect x="1099" y="260" width="14" height="15" fill="rgb(250,119,1)"/><text x="1102.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.81%)</title><rect x="1104" y="276" width="9" height="15" fill="rgb(230,112,20)"/><text x="1107.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (2 samples, 0.81%)</title><rect x="1104" y="292" width="9" height="15" fill="rgb(223,195,6)"/><text x="1107.00" y="302.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (20 samples, 8.06%)</title><rect x="1032" y="196" width="96" height="15" fill="rgb(235,81,13)"/><text x="1035.00" y="206.50">isclose (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (20 samples, 8.06%)</title><rect x="1032" y="212" width="96" height="15" fill="rgb(211,184,6)"/><text x="1035.00" y="222.50">array_imple..</text></g><g><title>isclose (numpy/core/numeric.py) (19 samples, 7.66%)</title><rect x="1037" y="228" width="91" height="15" fill="rgb(241,225,22)"/><text x="1040.00" y="238.50">isclose (n..</text></g><g><title>within_tol (numpy/core/numeric.py) (11 samples, 4.44%)</title><rect x="1075" y="244" width="53" height="15" fill="rgb(253,227,38)"/><text x="1078.00" y="254.50">withi..</text></g><g><title>array_multiply (number.c) (3 samples, 1.21%)</title><rect x="1113" y="260" width="15" height="15" fill="rgb(248,161,10)"/><text x="1116.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1123" y="276" width="5" height="15" fill="rgb(234,98,12)"/><text x="1126.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1123" y="292" width="5" height="15" fill="rgb(246,114,22)"/><text x="1126.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1123" y="308" width="5" height="15" fill="rgb(212,116,22)"/><text x="1126.00" y="318.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="1132" y="260" width="5" height="15" fill="rgb(210,69,0)"/><text x="1135.00" y="270.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (116 samples, 46.77%)</title><rect x="595" y="164" width="552" height="15" fill="rgb(215,0,29)"/><text x="598.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (30 samples, 12.10%)</title><rect x="1004" y="180" width="143" height="15" fill="rgb(231,14,22)"/><text x="1007.00" y="190.50">stable_cumsum (skl..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (4 samples, 1.61%)</title><rect x="1128" y="196" width="19" height="15" fill="rgb(215,69,11)"/><text x="1131.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.61%)</title><rect x="1128" y="212" width="19" height="15" fill="rgb(214,171,29)"/><text x="1131.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (4 samples, 1.61%)</title><rect x="1128" y="228" width="19" height="15" fill="rgb(226,97,2)"/><text x="1131.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 1.21%)</title><rect x="1132" y="244" width="15" height="15" fill="rgb(243,60,35)"/><text x="1135.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1137" y="260" width="10" height="15" fill="rgb(230,49,25)"/><text x="1140.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1137" y="276" width="10" height="15" fill="rgb(209,14,11)"/><text x="1140.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1137" y="292" width="10" height="15" fill="rgb(245,9,7)"/><text x="1140.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.81%)</title><rect x="1137" y="308" width="10" height="15" fill="rgb(221,19,37)"/><text x="1140.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.81%)</title><rect x="1137" y="324" width="10" height="15" fill="rgb(243,220,1)"/><text x="1140.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (2 samples, 0.81%)</title><rect x="1137" y="340" width="10" height="15" fill="rgb(213,186,34)"/><text x="1140.00" y="350.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (2 samples, 0.81%)</title><rect x="1137" y="356" width="10" height="15" fill="rgb(247,55,31)"/><text x="1140.00" y="366.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.40%)</title><rect x="1142" y="372" width="5" height="15" fill="rgb(210,223,11)"/><text x="1145.00" y="382.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.40%)</title><rect x="1161" y="196" width="5" height="15" fill="rgb(232,78,3)"/><text x="1164.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.40%)</title><rect x="1166" y="196" width="4" height="15" fill="rgb(216,143,16)"/><text x="1169.00" y="206.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (6 samples, 2.42%)</title><rect x="1147" y="164" width="28" height="15" fill="rgb(232,160,6)"/><text x="1150.00" y="174.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py) (5 samples, 2.02%)</title><rect x="1151" y="180" width="24" height="15" fill="rgb(209,54,48)"/><text x="1154.00" y="190.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="1170" y="196" width="5" height="15" fill="rgb(253,219,39)"/><text x="1173.00" y="206.50"></text></g><g><title>all (248 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(245,67,52)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (248 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(212,66,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (125 samples, 50.40%)</title><rect x="595" y="68" width="595" height="15" fill="rgb(253,97,41)"/><text x="598.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (125 samples, 50.40%)</title><rect x="595" y="84" width="595" height="15" fill="rgb(228,18,12)"/><text x="598.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.p..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py) (125 samples, 50.40%)</title><rect x="595" y="100" width="595" height="15" fill="rgb(236,94,49)"/><text x="598.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_n_estimators5_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 50.40%)</title><rect x="595" y="116" width="595" height="15" fill="rgb(211,74,36)"/><text x="598.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (125 samples, 50.40%)</title><rect x="595" y="132" width="595" height="15" fill="rgb(234,161,53)"/><text x="598.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (125 samples, 50.40%)</title><rect x="595" y="148" width="595" height="15" fill="rgb(245,94,3)"/><text x="598.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 1.21%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(223,204,6)"/><text x="1178.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.81%)</title><rect x="1180" y="180" width="10" height="15" fill="rgb(207,25,13)"/><text x="1183.00" y="190.50"></text></g></g></svg>