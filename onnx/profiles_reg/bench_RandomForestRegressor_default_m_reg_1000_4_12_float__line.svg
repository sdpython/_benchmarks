<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1958" onload="init(evt)" viewBox="0 0 1200 1958" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1958" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1941.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1941.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.26%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(245,208,40)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.26%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(206,170,43)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.26%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(231,28,32)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.26%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(226,88,35)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.26%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(233,152,44)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.26%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(230,51,50)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.26%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(221,118,5)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.26%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(215,161,44)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.26%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(207,153,16)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:75) (1 samples, 0.26%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(206,132,46)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.52%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(237,191,2)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.52%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(240,91,31)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.26%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(226,42,32)"/><text x="16.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.26%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(233,208,6)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.26%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(245,58,11)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.26%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(248,124,50)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.26%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(205,0,27)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.26%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(227,155,53)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.26%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(231,170,48)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.26%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(225,196,32)"/><text x="16.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.26%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(228,223,15)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.26%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(205,92,38)"/><text x="16.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.26%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(242,88,16)"/><text x="16.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.26%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(254,46,51)"/><text x="16.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.26%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(227,53,17)"/><text x="16.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:36) (1 samples, 0.26%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(222,90,6)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(241,22,7)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(218,225,3)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(238,108,34)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(207,34,10)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(236,48,4)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (email/parser.py:12) (1 samples, 0.26%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(236,174,34)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(252,171,10)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(238,218,47)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(242,57,37)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(211,142,33)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(228,198,15)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (email/feedparser.py:27) (1 samples, 0.26%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(220,90,21)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(230,13,38)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(239,101,49)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(239,137,2)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(216,2,11)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(242,32,26)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (email/_policybase.py:9) (1 samples, 0.26%)</title><rect x="16" y="1108" width="3" height="15" fill="rgb(212,87,38)"/><text x="19.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="1124" width="3" height="15" fill="rgb(235,192,26)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="1140" width="3" height="15" fill="rgb(245,200,13)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="1156" width="3" height="15" fill="rgb(207,216,16)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="1172" width="3" height="15" fill="rgb(239,183,44)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="1188" width="3" height="15" fill="rgb(214,207,39)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (email/utils.py:33) (1 samples, 0.26%)</title><rect x="16" y="1204" width="3" height="15" fill="rgb(239,190,50)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="1220" width="3" height="15" fill="rgb(243,98,6)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="1236" width="3" height="15" fill="rgb(206,127,9)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="1252" width="3" height="15" fill="rgb(243,20,40)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="16" y="1268" width="3" height="15" fill="rgb(244,83,51)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="16" y="1284" width="3" height="15" fill="rgb(232,0,40)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (email/_parseaddr.py:16) (1 samples, 0.26%)</title><rect x="16" y="1300" width="3" height="15" fill="rgb(216,218,33)"/><text x="19.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="16" y="1316" width="3" height="15" fill="rgb(223,68,37)"/><text x="19.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="16" y="1332" width="3" height="15" fill="rgb(218,108,51)"/><text x="19.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="16" y="1348" width="3" height="15" fill="rgb(242,131,33)"/><text x="19.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="16" y="1364" width="3" height="15" fill="rgb(243,204,0)"/><text x="19.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="16" y="1380" width="3" height="15" fill="rgb(244,222,8)"/><text x="19.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="16" y="1396" width="3" height="15" fill="rgb(233,166,34)"/><text x="19.00" y="1406.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (4 samples, 1.04%)</title><rect x="10" y="148" width="12" height="15" fill="rgb(211,40,43)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="164" width="12" height="15" fill="rgb(208,140,35)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.04%)</title><rect x="10" y="180" width="12" height="15" fill="rgb(229,159,6)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(250,227,25)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(237,156,50)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(252,38,7)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(230,177,26)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(237,110,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(223,197,6)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.04%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(244,192,54)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(248,24,19)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(253,75,5)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(210,184,14)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(231,100,44)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(245,61,0)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.04%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(213,79,34)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(216,22,9)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(240,24,34)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(235,153,52)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(238,14,35)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(222,76,27)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.04%)</title><rect x="10" y="484" width="12" height="15" fill="rgb(213,111,24)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="500" width="12" height="15" fill="rgb(245,81,13)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="10" y="516" width="12" height="15" fill="rgb(242,58,36)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="10" y="532" width="12" height="15" fill="rgb(251,4,3)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="10" y="548" width="12" height="15" fill="rgb(243,173,46)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="564" width="12" height="15" fill="rgb(227,136,15)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.04%)</title><rect x="10" y="580" width="12" height="15" fill="rgb(214,105,34)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="596" width="12" height="15" fill="rgb(245,165,39)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.04%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(249,62,23)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="628" width="12" height="15" fill="rgb(237,99,13)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="644" width="12" height="15" fill="rgb(253,198,39)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="10" y="660" width="12" height="15" fill="rgb(221,35,30)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="10" y="676" width="12" height="15" fill="rgb(205,41,47)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="10" y="692" width="12" height="15" fill="rgb(217,218,38)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="708" width="12" height="15" fill="rgb(229,107,19)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.04%)</title><rect x="10" y="724" width="12" height="15" fill="rgb(245,17,54)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.04%)</title><rect x="10" y="740" width="12" height="15" fill="rgb(211,101,1)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.04%)</title><rect x="10" y="756" width="12" height="15" fill="rgb(206,215,45)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.04%)</title><rect x="10" y="772" width="12" height="15" fill="rgb(229,132,31)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.04%)</title><rect x="10" y="788" width="12" height="15" fill="rgb(242,92,36)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.04%)</title><rect x="10" y="804" width="12" height="15" fill="rgb(252,206,50)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:57) (1 samples, 0.26%)</title><rect x="19" y="820" width="3" height="15" fill="rgb(227,202,29)"/><text x="22.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="19" y="836" width="3" height="15" fill="rgb(206,55,21)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(242,173,34)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(236,116,27)"/><text x="22.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:588) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(250,140,32)"/><text x="22.00" y="894.50"></text></g><g><title>_new_module (&lt;frozen importlib._bootstrap&gt;:36) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(250,101,47)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.26%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(221,116,33)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="22" y="788" width="3" height="15" fill="rgb(236,57,27)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="22" y="804" width="3" height="15" fill="rgb(226,222,30)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="22" y="820" width="3" height="15" fill="rgb(217,85,37)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="22" y="836" width="3" height="15" fill="rgb(214,208,50)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="22" y="852" width="3" height="15" fill="rgb(233,0,14)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:643) (1 samples, 0.26%)</title><rect x="22" y="868" width="3" height="15" fill="rgb(223,204,24)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="22" y="884" width="3" height="15" fill="rgb(250,160,36)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(214,181,30)"/><text x="25.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(215,209,8)"/><text x="25.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(206,151,44)"/><text x="25.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(217,181,6)"/><text x="25.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py:19) (1 samples, 0.26%)</title><rect x="22" y="964" width="3" height="15" fill="rgb(223,102,5)"/><text x="25.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="22" y="980" width="3" height="15" fill="rgb(243,92,28)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="22" y="996" width="3" height="15" fill="rgb(213,145,16)"/><text x="25.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="22" y="1012" width="3" height="15" fill="rgb(218,204,54)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="22" y="1028" width="3" height="15" fill="rgb(246,151,8)"/><text x="25.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="22" y="1044" width="3" height="15" fill="rgb(225,218,48)"/><text x="25.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="22" y="1060" width="3" height="15" fill="rgb(245,144,11)"/><text x="25.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="22" y="1076" width="3" height="15" fill="rgb(220,49,50)"/><text x="25.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py:83) (1 samples, 0.26%)</title><rect x="22" y="1092" width="3" height="15" fill="rgb(236,200,24)"/><text x="25.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="22" y="1108" width="3" height="15" fill="rgb(207,131,5)"/><text x="25.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="22" y="1124" width="3" height="15" fill="rgb(230,94,37)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="22" y="1140" width="3" height="15" fill="rgb(238,1,30)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="22" y="1156" width="3" height="15" fill="rgb(213,69,23)"/><text x="25.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="22" y="1172" width="3" height="15" fill="rgb(220,17,30)"/><text x="25.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="22" y="1188" width="3" height="15" fill="rgb(219,139,54)"/><text x="25.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="22" y="1204" width="3" height="15" fill="rgb(240,104,3)"/><text x="25.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:211) (1 samples, 0.26%)</title><rect x="22" y="1220" width="3" height="15" fill="rgb(237,107,37)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="22" y="1236" width="3" height="15" fill="rgb(247,196,21)"/><text x="25.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="22" y="1252" width="3" height="15" fill="rgb(253,72,46)"/><text x="25.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="22" y="1268" width="3" height="15" fill="rgb(249,105,50)"/><text x="25.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="22" y="1284" width="3" height="15" fill="rgb(242,15,47)"/><text x="25.00" y="1294.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.26%)</title><rect x="22" y="1300" width="3" height="15" fill="rgb(226,79,14)"/><text x="25.00" y="1310.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.26%)</title><rect x="22" y="1316" width="3" height="15" fill="rgb(221,8,18)"/><text x="25.00" y="1326.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (2 samples, 0.52%)</title><rect x="22" y="148" width="6" height="15" fill="rgb(249,14,33)"/><text x="25.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="164" width="6" height="15" fill="rgb(206,85,10)"/><text x="25.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.52%)</title><rect x="22" y="180" width="6" height="15" fill="rgb(213,53,17)"/><text x="25.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="196" width="6" height="15" fill="rgb(210,59,21)"/><text x="25.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="212" width="6" height="15" fill="rgb(211,143,6)"/><text x="25.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="22" y="228" width="6" height="15" fill="rgb(252,111,2)"/><text x="25.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="22" y="244" width="6" height="15" fill="rgb(225,150,49)"/><text x="25.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="22" y="260" width="6" height="15" fill="rgb(250,76,39)"/><text x="25.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="276" width="6" height="15" fill="rgb(205,155,1)"/><text x="25.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.52%)</title><rect x="22" y="292" width="6" height="15" fill="rgb(219,117,24)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="308" width="6" height="15" fill="rgb(207,189,35)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="22" y="324" width="6" height="15" fill="rgb(237,219,8)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="22" y="340" width="6" height="15" fill="rgb(218,169,5)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="22" y="356" width="6" height="15" fill="rgb(251,15,25)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="372" width="6" height="15" fill="rgb(222,35,42)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.52%)</title><rect x="22" y="388" width="6" height="15" fill="rgb(236,16,11)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="404" width="6" height="15" fill="rgb(205,167,35)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="22" y="420" width="6" height="15" fill="rgb(218,41,28)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="22" y="436" width="6" height="15" fill="rgb(245,1,15)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="22" y="452" width="6" height="15" fill="rgb(243,107,52)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="468" width="6" height="15" fill="rgb(250,142,51)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.52%)</title><rect x="22" y="484" width="6" height="15" fill="rgb(216,149,13)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="500" width="6" height="15" fill="rgb(209,45,28)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="22" y="516" width="6" height="15" fill="rgb(206,17,49)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="22" y="532" width="6" height="15" fill="rgb(212,207,4)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="22" y="548" width="6" height="15" fill="rgb(207,138,31)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="564" width="6" height="15" fill="rgb(245,50,50)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.52%)</title><rect x="22" y="580" width="6" height="15" fill="rgb(248,204,10)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="596" width="6" height="15" fill="rgb(254,55,7)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="22" y="612" width="6" height="15" fill="rgb(229,36,52)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="22" y="628" width="6" height="15" fill="rgb(240,65,33)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="22" y="644" width="6" height="15" fill="rgb(212,23,19)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="660" width="6" height="15" fill="rgb(232,19,29)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.52%)</title><rect x="22" y="676" width="6" height="15" fill="rgb(241,139,16)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="22" y="692" width="6" height="15" fill="rgb(209,88,18)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="22" y="708" width="6" height="15" fill="rgb(253,164,37)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="22" y="724" width="6" height="15" fill="rgb(221,97,52)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="22" y="740" width="6" height="15" fill="rgb(205,78,14)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="22" y="756" width="6" height="15" fill="rgb(224,177,22)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.26%)</title><rect x="25" y="772" width="3" height="15" fill="rgb(227,104,35)"/><text x="28.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="25" y="788" width="3" height="15" fill="rgb(213,42,54)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="804" width="3" height="15" fill="rgb(232,170,37)"/><text x="28.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="820" width="3" height="15" fill="rgb(240,171,28)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="836" width="3" height="15" fill="rgb(210,146,42)"/><text x="28.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="852" width="3" height="15" fill="rgb(232,98,0)"/><text x="28.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="868" width="3" height="15" fill="rgb(229,126,43)"/><text x="28.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="884" width="3" height="15" fill="rgb(221,222,43)"/><text x="28.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.26%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(210,29,40)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(225,186,32)"/><text x="28.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="932" width="3" height="15" fill="rgb(210,140,17)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="25" y="948" width="3" height="15" fill="rgb(206,30,30)"/><text x="28.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(243,80,40)"/><text x="28.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="25" y="980" width="3" height="15" fill="rgb(220,138,14)"/><text x="28.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="25" y="996" width="3" height="15" fill="rgb(233,185,2)"/><text x="28.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="25" y="1012" width="3" height="15" fill="rgb(207,11,35)"/><text x="28.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6982) (1 samples, 0.26%)</title><rect x="25" y="1028" width="3" height="15" fill="rgb(254,145,12)"/><text x="28.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.26%)</title><rect x="25" y="1044" width="3" height="15" fill="rgb(237,91,44)"/><text x="28.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:690) (1 samples, 0.26%)</title><rect x="25" y="1060" width="3" height="15" fill="rgb(213,150,30)"/><text x="28.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.26%)</title><rect x="28" y="244" width="3" height="15" fill="rgb(234,190,7)"/><text x="31.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="260" width="3" height="15" fill="rgb(223,177,12)"/><text x="31.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="276" width="3" height="15" fill="rgb(247,44,5)"/><text x="31.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="292" width="3" height="15" fill="rgb(229,86,7)"/><text x="31.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="308" width="3" height="15" fill="rgb(246,34,21)"/><text x="31.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="324" width="3" height="15" fill="rgb(238,80,37)"/><text x="31.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.26%)</title><rect x="28" y="340" width="3" height="15" fill="rgb(227,90,11)"/><text x="31.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="356" width="3" height="15" fill="rgb(229,46,31)"/><text x="31.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="28" y="372" width="3" height="15" fill="rgb(247,35,6)"/><text x="31.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="388" width="3" height="15" fill="rgb(213,55,33)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="404" width="3" height="15" fill="rgb(242,171,53)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="420" width="3" height="15" fill="rgb(237,140,28)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="436" width="3" height="15" fill="rgb(226,105,25)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="452" width="3" height="15" fill="rgb(218,175,23)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="468" width="3" height="15" fill="rgb(244,106,18)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.26%)</title><rect x="28" y="484" width="3" height="15" fill="rgb(240,13,2)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="500" width="3" height="15" fill="rgb(242,177,3)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="516" width="3" height="15" fill="rgb(206,86,33)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="532" width="3" height="15" fill="rgb(208,117,46)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="548" width="3" height="15" fill="rgb(254,96,12)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="564" width="3" height="15" fill="rgb(231,100,44)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.26%)</title><rect x="28" y="580" width="3" height="15" fill="rgb(222,214,6)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="596" width="3" height="15" fill="rgb(225,59,52)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="612" width="3" height="15" fill="rgb(205,143,42)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="628" width="3" height="15" fill="rgb(211,89,49)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="644" width="3" height="15" fill="rgb(221,85,48)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="660" width="3" height="15" fill="rgb(211,144,35)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.26%)</title><rect x="28" y="676" width="3" height="15" fill="rgb(241,102,14)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="692" width="3" height="15" fill="rgb(206,92,15)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="708" width="3" height="15" fill="rgb(214,21,16)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="724" width="3" height="15" fill="rgb(226,10,49)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="740" width="3" height="15" fill="rgb(209,101,19)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="756" width="3" height="15" fill="rgb(234,203,45)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.26%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(211,225,52)"/><text x="31.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(247,112,28)"/><text x="31.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(229,163,15)"/><text x="31.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(207,127,3)"/><text x="31.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(234,6,27)"/><text x="31.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(217,23,48)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.26%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(240,19,36)"/><text x="31.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(238,85,8)"/><text x="31.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(227,73,23)"/><text x="31.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(211,62,8)"/><text x="31.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(236,103,33)"/><text x="31.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(250,135,43)"/><text x="31.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:48) (1 samples, 0.26%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(220,18,1)"/><text x="31.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(235,133,23)"/><text x="31.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(206,223,42)"/><text x="31.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(222,19,8)"/><text x="31.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(229,180,48)"/><text x="31.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.26%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(239,159,44)"/><text x="31.00" y="1054.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.26%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(246,37,3)"/><text x="31.00" y="1070.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(235,11,44)"/><text x="31.00" y="1086.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.26%)</title><rect x="31" y="340" width="3" height="15" fill="rgb(240,9,34)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="31" y="356" width="3" height="15" fill="rgb(252,99,7)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="31" y="372" width="3" height="15" fill="rgb(218,19,7)"/><text x="34.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="31" y="388" width="3" height="15" fill="rgb(224,25,30)"/><text x="34.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="31" y="404" width="3" height="15" fill="rgb(253,15,4)"/><text x="34.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="31" y="420" width="3" height="15" fill="rgb(248,180,24)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:24) (1 samples, 0.26%)</title><rect x="31" y="436" width="3" height="15" fill="rgb(245,14,17)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="31" y="452" width="3" height="15" fill="rgb(249,163,13)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="31" y="468" width="3" height="15" fill="rgb(251,42,39)"/><text x="34.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="31" y="484" width="3" height="15" fill="rgb(217,173,43)"/><text x="34.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="31" y="500" width="3" height="15" fill="rgb(220,38,50)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="31" y="516" width="3" height="15" fill="rgb(220,87,22)"/><text x="34.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_openml.py:18) (1 samples, 0.26%)</title><rect x="31" y="532" width="3" height="15" fill="rgb(243,193,51)"/><text x="34.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="31" y="548" width="3" height="15" fill="rgb(228,124,29)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="31" y="564" width="3" height="15" fill="rgb(248,178,52)"/><text x="34.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="31" y="580" width="3" height="15" fill="rgb(226,23,42)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="31" y="596" width="3" height="15" fill="rgb(212,178,28)"/><text x="34.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="31" y="612" width="3" height="15" fill="rgb(228,113,11)"/><text x="34.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="31" y="628" width="3" height="15" fill="rgb(252,167,24)"/><text x="34.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="31" y="644" width="3" height="15" fill="rgb(254,14,7)"/><text x="34.00" y="654.50"></text></g><g><title>&lt;module&gt; (sklearn/externals/_arff.py:223) (1 samples, 0.26%)</title><rect x="31" y="660" width="3" height="15" fill="rgb(245,36,39)"/><text x="34.00" y="670.50"></text></g><g><title>_build_re_values (sklearn/externals/_arff.py:204) (1 samples, 0.26%)</title><rect x="31" y="676" width="3" height="15" fill="rgb(244,163,4)"/><text x="34.00" y="686.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.26%)</title><rect x="31" y="692" width="3" height="15" fill="rgb(250,129,19)"/><text x="34.00" y="702.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.26%)</title><rect x="31" y="708" width="3" height="15" fill="rgb(212,190,10)"/><text x="34.00" y="718.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.26%)</title><rect x="31" y="724" width="3" height="15" fill="rgb(214,97,41)"/><text x="34.00" y="734.50"></text></g><g><title>parse (sre_parse.py:938) (1 samples, 0.26%)</title><rect x="31" y="740" width="3" height="15" fill="rgb(226,22,11)"/><text x="34.00" y="750.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="31" y="756" width="3" height="15" fill="rgb(245,185,39)"/><text x="34.00" y="766.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="31" y="772" width="3" height="15" fill="rgb(219,2,16)"/><text x="34.00" y="782.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="31" y="788" width="3" height="15" fill="rgb(208,6,26)"/><text x="34.00" y="798.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(235,65,7)"/><text x="34.00" y="814.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(228,107,46)"/><text x="34.00" y="830.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.26%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(213,43,12)"/><text x="34.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.26%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(229,179,23)"/><text x="34.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:673) (1 samples, 0.26%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(224,50,6)"/><text x="34.00" y="878.50"></text></g><g><title>match (sre_parse.py:250) (1 samples, 0.26%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(219,65,44)"/><text x="34.00" y="894.50"></text></g><g><title>0x7fb2a79d540e (?) (1 samples, 0.26%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(225,70,27)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(247,114,51)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="948" width="3" height="15" fill="rgb(220,121,32)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="964" width="3" height="15" fill="rgb(251,134,27)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.26%)</title><rect x="34" y="980" width="3" height="15" fill="rgb(241,151,9)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="996" width="3" height="15" fill="rgb(220,162,11)"/><text x="37.00" y="1006.50"></text></g><g><title>0x7fb2a778ecd2 (?) (1 samples, 0.26%)</title><rect x="34" y="1012" width="3" height="15" fill="rgb(213,183,49)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="1028" width="3" height="15" fill="rgb(245,108,9)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="1044" width="3" height="15" fill="rgb(252,85,34)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="1060" width="3" height="15" fill="rgb(214,79,18)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.26%)</title><rect x="34" y="1076" width="3" height="15" fill="rgb(206,142,16)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="1092" width="3" height="15" fill="rgb(210,198,22)"/><text x="37.00" y="1102.50"></text></g><g><title>0x7fb2a6e840e5 (?) (1 samples, 0.26%)</title><rect x="34" y="1108" width="3" height="15" fill="rgb(243,229,31)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="1124" width="3" height="15" fill="rgb(206,45,49)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="34" y="1140" width="3" height="15" fill="rgb(214,158,22)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="34" y="1156" width="3" height="15" fill="rgb(237,198,1)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.26%)</title><rect x="34" y="1172" width="3" height="15" fill="rgb(232,47,50)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="34" y="1188" width="3" height="15" fill="rgb(206,64,38)"/><text x="37.00" y="1198.50"></text></g><g><title>0x7fb2a6c08e68 (?) (1 samples, 0.26%)</title><rect x="34" y="1204" width="3" height="15" fill="rgb(205,133,8)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="34" y="1220" width="3" height="15" fill="rgb(215,189,3)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.26%)</title><rect x="34" y="1236" width="3" height="15" fill="rgb(223,50,51)"/><text x="37.00" y="1246.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:898) (1 samples, 0.26%)</title><rect x="34" y="1252" width="3" height="15" fill="rgb(252,214,49)"/><text x="37.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:30) (3 samples, 0.78%)</title><rect x="34" y="628" width="9" height="15" fill="rgb(215,55,19)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="34" y="644" width="9" height="15" fill="rgb(237,113,7)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="34" y="660" width="9" height="15" fill="rgb(241,218,49)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="34" y="676" width="9" height="15" fill="rgb(250,75,3)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="34" y="692" width="9" height="15" fill="rgb(244,119,34)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="34" y="708" width="9" height="15" fill="rgb(205,68,32)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:3) (3 samples, 0.78%)</title><rect x="34" y="724" width="9" height="15" fill="rgb(238,8,45)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="34" y="740" width="9" height="15" fill="rgb(208,122,15)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="34" y="756" width="9" height="15" fill="rgb(247,83,46)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="34" y="772" width="9" height="15" fill="rgb(222,30,15)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="34" y="788" width="9" height="15" fill="rgb(237,96,17)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="34" y="804" width="9" height="15" fill="rgb(239,173,31)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:3) (3 samples, 0.78%)</title><rect x="34" y="820" width="9" height="15" fill="rgb(244,188,42)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="34" y="836" width="9" height="15" fill="rgb(213,198,25)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="34" y="852" width="9" height="15" fill="rgb(230,136,33)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="34" y="868" width="9" height="15" fill="rgb(211,16,30)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (3 samples, 0.78%)</title><rect x="34" y="884" width="9" height="15" fill="rgb(242,200,33)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="34" y="900" width="9" height="15" fill="rgb(234,229,21)"/><text x="37.00" y="910.50"></text></g><g><title>0x7fb2a79d540e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="916" width="6" height="15" fill="rgb(236,59,47)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="37" y="932" width="6" height="15" fill="rgb(254,160,28)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="37" y="948" width="6" height="15" fill="rgb(218,33,38)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="37" y="964" width="6" height="15" fill="rgb(206,114,25)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.52%)</title><rect x="37" y="980" width="6" height="15" fill="rgb(208,39,11)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="37" y="996" width="6" height="15" fill="rgb(206,82,8)"/><text x="40.00" y="1006.50"></text></g><g><title>0x7fb2a778ecd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1012" width="6" height="15" fill="rgb(214,124,8)"/><text x="40.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="37" y="1028" width="6" height="15" fill="rgb(233,203,45)"/><text x="40.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="37" y="1044" width="6" height="15" fill="rgb(242,72,35)"/><text x="40.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="37" y="1060" width="6" height="15" fill="rgb(238,82,29)"/><text x="40.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.52%)</title><rect x="37" y="1076" width="6" height="15" fill="rgb(211,162,20)"/><text x="40.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="37" y="1092" width="6" height="15" fill="rgb(213,208,25)"/><text x="40.00" y="1102.50"></text></g><g><title>0x7fb2a6e840e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1108" width="6" height="15" fill="rgb(226,33,17)"/><text x="40.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="37" y="1124" width="6" height="15" fill="rgb(240,18,12)"/><text x="40.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="37" y="1140" width="6" height="15" fill="rgb(248,6,14)"/><text x="40.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="37" y="1156" width="6" height="15" fill="rgb(236,164,40)"/><text x="40.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.52%)</title><rect x="37" y="1172" width="6" height="15" fill="rgb(225,69,43)"/><text x="40.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="37" y="1188" width="6" height="15" fill="rgb(254,146,13)"/><text x="40.00" y="1198.50"></text></g><g><title>0x7fb2a6c08e68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1204" width="6" height="15" fill="rgb(252,187,11)"/><text x="40.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="37" y="1220" width="6" height="15" fill="rgb(238,48,31)"/><text x="40.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="37" y="1236" width="6" height="15" fill="rgb(238,77,1)"/><text x="40.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="37" y="1252" width="6" height="15" fill="rgb(244,149,8)"/><text x="40.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.52%)</title><rect x="37" y="1268" width="6" height="15" fill="rgb(206,30,37)"/><text x="40.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="37" y="1284" width="6" height="15" fill="rgb(223,202,24)"/><text x="40.00" y="1294.50"></text></g><g><title>0x7fb2a69992fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1300" width="6" height="15" fill="rgb(251,113,8)"/><text x="40.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="37" y="1316" width="6" height="15" fill="rgb(253,129,1)"/><text x="40.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="37" y="1332" width="6" height="15" fill="rgb(241,61,35)"/><text x="40.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="37" y="1348" width="6" height="15" fill="rgb(209,127,37)"/><text x="40.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.52%)</title><rect x="37" y="1364" width="6" height="15" fill="rgb(214,39,0)"/><text x="40.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="37" y="1380" width="6" height="15" fill="rgb(213,211,25)"/><text x="40.00" y="1390.50"></text></g><g><title>0x7fb2a677d153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1396" width="6" height="15" fill="rgb(221,125,38)"/><text x="40.00" y="1406.50"></text></g><g><title>0x7fb2a677bc13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1412" width="6" height="15" fill="rgb(218,49,44)"/><text x="40.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="37" y="1428" width="6" height="15" fill="rgb(236,124,45)"/><text x="40.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="37" y="1444" width="6" height="15" fill="rgb(205,172,11)"/><text x="40.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="37" y="1460" width="6" height="15" fill="rgb(251,185,53)"/><text x="40.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (2 samples, 0.52%)</title><rect x="37" y="1476" width="6" height="15" fill="rgb(223,149,54)"/><text x="40.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="37" y="1492" width="6" height="15" fill="rgb(237,128,52)"/><text x="40.00" y="1502.50"></text></g><g><title>0x7fb2a6518181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1508" width="6" height="15" fill="rgb(234,134,35)"/><text x="40.00" y="1518.50"></text></g><g><title>0x7fb2a651b1c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1524" width="6" height="15" fill="rgb(215,1,0)"/><text x="40.00" y="1534.50"></text></g><g><title>0x7fb2a6547167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1540" width="6" height="15" fill="rgb(209,134,24)"/><text x="40.00" y="1550.50"></text></g><g><title>0x7fb2a6542b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1556" width="6" height="15" fill="rgb(212,194,31)"/><text x="40.00" y="1566.50"></text></g><g><title>0x7fb2a652607b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="37" y="1572" width="6" height="15" fill="rgb(230,53,7)"/><text x="40.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py:101) (2 samples, 0.52%)</title><rect x="37" y="1588" width="6" height="15" fill="rgb(209,194,12)"/><text x="40.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py:1104) (2 samples, 0.52%)</title><rect x="37" y="1604" width="6" height="15" fill="rgb(225,181,32)"/><text x="40.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py:114) (2 samples, 0.52%)</title><rect x="37" y="1620" width="6" height="15" fill="rgb(244,163,3)"/><text x="40.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py:108) (1 samples, 0.26%)</title><rect x="40" y="1636" width="3" height="15" fill="rgb(243,69,19)"/><text x="43.00" y="1646.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 1.30%)</title><rect x="34" y="532" width="15" height="15" fill="rgb(205,81,37)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.30%)</title><rect x="34" y="548" width="15" height="15" fill="rgb(230,5,46)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.30%)</title><rect x="34" y="564" width="15" height="15" fill="rgb(242,210,41)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.30%)</title><rect x="34" y="580" width="15" height="15" fill="rgb(220,74,35)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.30%)</title><rect x="34" y="596" width="15" height="15" fill="rgb(227,29,46)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.30%)</title><rect x="34" y="612" width="15" height="15" fill="rgb(230,31,38)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.52%)</title><rect x="43" y="628" width="6" height="15" fill="rgb(245,28,19)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="644" width="6" height="15" fill="rgb(216,109,9)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="660" width="6" height="15" fill="rgb(254,39,37)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="676" width="6" height="15" fill="rgb(225,198,29)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="692" width="6" height="15" fill="rgb(247,173,2)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="708" width="6" height="15" fill="rgb(252,163,52)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.52%)</title><rect x="43" y="724" width="6" height="15" fill="rgb(235,149,22)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="740" width="6" height="15" fill="rgb(227,201,35)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="756" width="6" height="15" fill="rgb(223,96,38)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="772" width="6" height="15" fill="rgb(222,32,11)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="788" width="6" height="15" fill="rgb(226,226,19)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="804" width="6" height="15" fill="rgb(248,8,5)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.52%)</title><rect x="43" y="820" width="6" height="15" fill="rgb(252,150,36)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="836" width="6" height="15" fill="rgb(237,42,26)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="852" width="6" height="15" fill="rgb(205,151,31)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="868" width="6" height="15" fill="rgb(215,171,51)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="884" width="6" height="15" fill="rgb(251,145,5)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="900" width="6" height="15" fill="rgb(230,59,48)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.52%)</title><rect x="43" y="916" width="6" height="15" fill="rgb(248,197,27)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="932" width="6" height="15" fill="rgb(217,75,15)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="948" width="6" height="15" fill="rgb(243,207,13)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="964" width="6" height="15" fill="rgb(223,110,30)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="980" width="6" height="15" fill="rgb(230,61,26)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="996" width="6" height="15" fill="rgb(225,42,39)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.52%)</title><rect x="43" y="1012" width="6" height="15" fill="rgb(254,218,1)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="1028" width="6" height="15" fill="rgb(222,228,19)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="1044" width="6" height="15" fill="rgb(230,34,25)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="1060" width="6" height="15" fill="rgb(216,134,27)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="1076" width="6" height="15" fill="rgb(210,39,51)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="1092" width="6" height="15" fill="rgb(249,96,19)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 0.52%)</title><rect x="43" y="1108" width="6" height="15" fill="rgb(223,141,23)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="1124" width="6" height="15" fill="rgb(250,112,46)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="1140" width="6" height="15" fill="rgb(222,1,12)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="1156" width="6" height="15" fill="rgb(219,171,7)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="1172" width="6" height="15" fill="rgb(245,50,34)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="1188" width="6" height="15" fill="rgb(222,82,8)"/><text x="46.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 0.52%)</title><rect x="43" y="1204" width="6" height="15" fill="rgb(221,81,1)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="1220" width="6" height="15" fill="rgb(214,204,23)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="1236" width="6" height="15" fill="rgb(251,121,26)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="1252" width="6" height="15" fill="rgb(207,21,46)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="1268" width="6" height="15" fill="rgb(230,62,27)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="1284" width="6" height="15" fill="rgb(252,146,31)"/><text x="46.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (2 samples, 0.52%)</title><rect x="43" y="1300" width="6" height="15" fill="rgb(250,154,47)"/><text x="46.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="1316" width="6" height="15" fill="rgb(213,151,54)"/><text x="46.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="1332" width="6" height="15" fill="rgb(222,132,49)"/><text x="46.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="1348" width="6" height="15" fill="rgb(243,61,34)"/><text x="46.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="43" y="1364" width="6" height="15" fill="rgb(215,112,32)"/><text x="46.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="43" y="1380" width="6" height="15" fill="rgb(216,188,36)"/><text x="46.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (2 samples, 0.52%)</title><rect x="43" y="1396" width="6" height="15" fill="rgb(222,73,39)"/><text x="46.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="43" y="1412" width="6" height="15" fill="rgb(245,161,28)"/><text x="46.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="43" y="1428" width="6" height="15" fill="rgb(251,79,16)"/><text x="46.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="43" y="1444" width="6" height="15" fill="rgb(247,48,39)"/><text x="46.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.52%)</title><rect x="43" y="1460" width="6" height="15" fill="rgb(236,211,16)"/><text x="46.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.52%)</title><rect x="43" y="1476" width="6" height="15" fill="rgb(217,59,8)"/><text x="46.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.52%)</title><rect x="43" y="1492" width="6" height="15" fill="rgb(236,109,11)"/><text x="46.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (6 samples, 1.55%)</title><rect x="34" y="436" width="18" height="15" fill="rgb(215,0,50)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.55%)</title><rect x="34" y="452" width="18" height="15" fill="rgb(248,174,0)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.55%)</title><rect x="34" y="468" width="18" height="15" fill="rgb(207,202,3)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.55%)</title><rect x="34" y="484" width="18" height="15" fill="rgb(213,68,4)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.55%)</title><rect x="34" y="500" width="18" height="15" fill="rgb(244,103,5)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.55%)</title><rect x="34" y="516" width="18" height="15" fill="rgb(214,103,26)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:16) (1 samples, 0.26%)</title><rect x="49" y="532" width="3" height="15" fill="rgb(220,163,54)"/><text x="52.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="49" y="548" width="3" height="15" fill="rgb(249,84,3)"/><text x="52.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="49" y="564" width="3" height="15" fill="rgb(207,167,20)"/><text x="52.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="49" y="580" width="3" height="15" fill="rgb(228,46,22)"/><text x="52.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="49" y="596" width="3" height="15" fill="rgb(247,38,9)"/><text x="52.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="49" y="612" width="3" height="15" fill="rgb(246,70,30)"/><text x="52.00" y="622.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_node.py:9) (1 samples, 0.26%)</title><rect x="49" y="628" width="3" height="15" fill="rgb(241,61,6)"/><text x="52.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="49" y="644" width="3" height="15" fill="rgb(249,11,53)"/><text x="52.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="49" y="660" width="3" height="15" fill="rgb(219,23,49)"/><text x="52.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="49" y="676" width="3" height="15" fill="rgb(215,119,17)"/><text x="52.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="49" y="692" width="3" height="15" fill="rgb(229,223,44)"/><text x="52.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.26%)</title><rect x="49" y="708" width="3" height="15" fill="rgb(254,2,21)"/><text x="52.00" y="718.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.26%)</title><rect x="49" y="724" width="3" height="15" fill="rgb(208,74,50)"/><text x="52.00" y="734.50"></text></g><g><title>__close (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="49" y="740" width="3" height="15" fill="rgb(251,104,10)"/><text x="52.00" y="750.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.26%)</title><rect x="52" y="1460" width="3" height="15" fill="rgb(218,66,7)"/><text x="55.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.26%)</title><rect x="52" y="1476" width="3" height="15" fill="rgb(228,218,9)"/><text x="55.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.26%)</title><rect x="52" y="1492" width="3" height="15" fill="rgb(237,156,15)"/><text x="55.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.26%)</title><rect x="52" y="1508" width="3" height="15" fill="rgb(218,102,12)"/><text x="55.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.26%)</title><rect x="52" y="1524" width="3" height="15" fill="rgb(211,14,53)"/><text x="55.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.26%)</title><rect x="52" y="1540" width="3" height="15" fill="rgb(231,104,29)"/><text x="55.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.26%)</title><rect x="52" y="1556" width="3" height="15" fill="rgb(240,33,19)"/><text x="55.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:87) (1 samples, 0.26%)</title><rect x="52" y="1572" width="3" height="15" fill="rgb(212,23,21)"/><text x="55.00" y="1582.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.26%)</title><rect x="55" y="1572" width="3" height="15" fill="rgb(249,6,54)"/><text x="58.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.26%)</title><rect x="55" y="1588" width="3" height="15" fill="rgb(225,216,19)"/><text x="58.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.26%)</title><rect x="55" y="1604" width="3" height="15" fill="rgb(243,13,54)"/><text x="58.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.26%)</title><rect x="55" y="1620" width="3" height="15" fill="rgb(209,98,28)"/><text x="58.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.26%)</title><rect x="55" y="1636" width="3" height="15" fill="rgb(240,210,28)"/><text x="58.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.26%)</title><rect x="55" y="1652" width="3" height="15" fill="rgb(211,43,24)"/><text x="58.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.26%)</title><rect x="55" y="1668" width="3" height="15" fill="rgb(220,9,16)"/><text x="58.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.26%)</title><rect x="55" y="1684" width="3" height="15" fill="rgb(252,158,50)"/><text x="58.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.26%)</title><rect x="55" y="1700" width="3" height="15" fill="rgb(224,158,31)"/><text x="58.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.26%)</title><rect x="55" y="1716" width="3" height="15" fill="rgb(218,155,34)"/><text x="58.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.26%)</title><rect x="55" y="1732" width="3" height="15" fill="rgb(212,159,14)"/><text x="58.00" y="1742.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.26%)</title><rect x="55" y="1748" width="3" height="15" fill="rgb(220,222,5)"/><text x="58.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.26%)</title><rect x="55" y="1764" width="3" height="15" fill="rgb(232,75,31)"/><text x="58.00" y="1774.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.26%)</title><rect x="55" y="1780" width="3" height="15" fill="rgb(213,227,18)"/><text x="58.00" y="1790.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.26%)</title><rect x="55" y="1796" width="3" height="15" fill="rgb(210,107,44)"/><text x="58.00" y="1806.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.26%)</title><rect x="55" y="1812" width="3" height="15" fill="rgb(248,88,8)"/><text x="58.00" y="1822.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.26%)</title><rect x="55" y="1828" width="3" height="15" fill="rgb(208,9,6)"/><text x="58.00" y="1838.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.26%)</title><rect x="55" y="1844" width="3" height="15" fill="rgb(220,122,23)"/><text x="58.00" y="1854.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.26%)</title><rect x="55" y="1860" width="3" height="15" fill="rgb(233,33,51)"/><text x="58.00" y="1870.50"></text></g><g><title>visit_If (jinja2/compiler.py:1157) (1 samples, 0.26%)</title><rect x="55" y="1876" width="3" height="15" fill="rgb(209,85,11)"/><text x="58.00" y="1886.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.26%)</title><rect x="55" y="1892" width="3" height="15" fill="rgb(241,180,54)"/><text x="58.00" y="1902.50"></text></g><g><title>new_func (jinja2/compiler.py:68) (1 samples, 0.26%)</title><rect x="55" y="1908" width="3" height="15" fill="rgb(221,109,12)"/><text x="58.00" y="1918.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:4) (17 samples, 4.40%)</title><rect x="10" y="52" width="51" height="15" fill="rgb(233,86,40)"/><text x="13.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 4.40%)</title><rect x="10" y="68" width="51" height="15" fill="rgb(254,199,15)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 4.40%)</title><rect x="10" y="84" width="51" height="15" fill="rgb(207,98,22)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 4.40%)</title><rect x="10" y="100" width="51" height="15" fill="rgb(214,225,0)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 4.40%)</title><rect x="10" y="116" width="51" height="15" fill="rgb(252,170,23)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 4.40%)</title><rect x="10" y="132" width="51" height="15" fill="rgb(251,216,33)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (11 samples, 2.85%)</title><rect x="28" y="148" width="33" height="15" fill="rgb(211,171,17)"/><text x="31.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (11 samples, 2.85%)</title><rect x="28" y="164" width="33" height="15" fill="rgb(225,168,27)"/><text x="31.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (11 samples, 2.85%)</title><rect x="28" y="180" width="33" height="15" fill="rgb(230,6,11)"/><text x="31.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (11 samples, 2.85%)</title><rect x="28" y="196" width="33" height="15" fill="rgb(233,117,17)"/><text x="31.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (11 samples, 2.85%)</title><rect x="28" y="212" width="33" height="15" fill="rgb(248,108,19)"/><text x="31.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (11 samples, 2.85%)</title><rect x="28" y="228" width="33" height="15" fill="rgb(224,180,53)"/><text x="31.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (10 samples, 2.59%)</title><rect x="31" y="244" width="30" height="15" fill="rgb(227,85,28)"/><text x="34.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.59%)</title><rect x="31" y="260" width="30" height="15" fill="rgb(218,153,53)"/><text x="34.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.59%)</title><rect x="31" y="276" width="30" height="15" fill="rgb(236,38,34)"/><text x="34.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.59%)</title><rect x="31" y="292" width="30" height="15" fill="rgb(207,92,8)"/><text x="34.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.59%)</title><rect x="31" y="308" width="30" height="15" fill="rgb(251,108,25)"/><text x="34.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.59%)</title><rect x="31" y="324" width="30" height="15" fill="rgb(234,69,24)"/><text x="34.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (9 samples, 2.33%)</title><rect x="34" y="340" width="27" height="15" fill="rgb(245,160,16)"/><text x="37.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.33%)</title><rect x="34" y="356" width="27" height="15" fill="rgb(223,142,14)"/><text x="37.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.33%)</title><rect x="34" y="372" width="27" height="15" fill="rgb(224,25,19)"/><text x="37.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.33%)</title><rect x="34" y="388" width="27" height="15" fill="rgb(233,152,1)"/><text x="37.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.33%)</title><rect x="34" y="404" width="27" height="15" fill="rgb(243,189,29)"/><text x="37.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.33%)</title><rect x="34" y="420" width="27" height="15" fill="rgb(208,37,1)"/><text x="37.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.78%)</title><rect x="52" y="436" width="9" height="15" fill="rgb(216,144,11)"/><text x="55.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="452" width="9" height="15" fill="rgb(235,69,8)"/><text x="55.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.78%)</title><rect x="52" y="468" width="9" height="15" fill="rgb(222,156,41)"/><text x="55.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="484" width="9" height="15" fill="rgb(226,23,50)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="500" width="9" height="15" fill="rgb(236,187,54)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="516" width="9" height="15" fill="rgb(238,158,23)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="532" width="9" height="15" fill="rgb(209,53,27)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="548" width="9" height="15" fill="rgb(211,210,19)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="564" width="9" height="15" fill="rgb(245,141,47)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.78%)</title><rect x="52" y="580" width="9" height="15" fill="rgb(243,24,54)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="596" width="9" height="15" fill="rgb(216,115,11)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="612" width="9" height="15" fill="rgb(234,27,21)"/><text x="55.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="628" width="9" height="15" fill="rgb(244,34,33)"/><text x="55.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="644" width="9" height="15" fill="rgb(205,44,53)"/><text x="55.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="660" width="9" height="15" fill="rgb(249,121,45)"/><text x="55.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.78%)</title><rect x="52" y="676" width="9" height="15" fill="rgb(253,212,18)"/><text x="55.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="692" width="9" height="15" fill="rgb(251,207,50)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="708" width="9" height="15" fill="rgb(224,109,35)"/><text x="55.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="724" width="9" height="15" fill="rgb(221,156,31)"/><text x="55.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="740" width="9" height="15" fill="rgb(225,79,14)"/><text x="55.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="756" width="9" height="15" fill="rgb(206,112,19)"/><text x="55.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.78%)</title><rect x="52" y="772" width="9" height="15" fill="rgb(222,222,6)"/><text x="55.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="788" width="9" height="15" fill="rgb(215,32,37)"/><text x="55.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="804" width="9" height="15" fill="rgb(215,1,47)"/><text x="55.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="820" width="9" height="15" fill="rgb(225,170,23)"/><text x="55.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="836" width="9" height="15" fill="rgb(216,170,30)"/><text x="55.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="852" width="9" height="15" fill="rgb(214,21,43)"/><text x="55.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.78%)</title><rect x="52" y="868" width="9" height="15" fill="rgb(240,0,54)"/><text x="55.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="884" width="9" height="15" fill="rgb(228,137,21)"/><text x="55.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.78%)</title><rect x="52" y="900" width="9" height="15" fill="rgb(213,213,37)"/><text x="55.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="916" width="9" height="15" fill="rgb(207,188,54)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="932" width="9" height="15" fill="rgb(244,63,37)"/><text x="55.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="948" width="9" height="15" fill="rgb(243,119,16)"/><text x="55.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="964" width="9" height="15" fill="rgb(208,195,54)"/><text x="55.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="980" width="9" height="15" fill="rgb(249,134,39)"/><text x="55.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="996" width="9" height="15" fill="rgb(221,207,25)"/><text x="55.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.78%)</title><rect x="52" y="1012" width="9" height="15" fill="rgb(235,193,13)"/><text x="55.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="1028" width="9" height="15" fill="rgb(214,3,45)"/><text x="55.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="1044" width="9" height="15" fill="rgb(229,19,35)"/><text x="55.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="1060" width="9" height="15" fill="rgb(210,85,9)"/><text x="55.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="1076" width="9" height="15" fill="rgb(216,27,27)"/><text x="55.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="1092" width="9" height="15" fill="rgb(249,68,1)"/><text x="55.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 0.78%)</title><rect x="52" y="1108" width="9" height="15" fill="rgb(222,109,35)"/><text x="55.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.78%)</title><rect x="52" y="1124" width="9" height="15" fill="rgb(207,209,27)"/><text x="55.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="1140" width="9" height="15" fill="rgb(213,173,9)"/><text x="55.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="1156" width="9" height="15" fill="rgb(219,97,6)"/><text x="55.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="1172" width="9" height="15" fill="rgb(232,162,44)"/><text x="55.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="1188" width="9" height="15" fill="rgb(251,171,18)"/><text x="55.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="1204" width="9" height="15" fill="rgb(227,75,17)"/><text x="55.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="1220" width="9" height="15" fill="rgb(232,107,5)"/><text x="55.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 0.78%)</title><rect x="52" y="1236" width="9" height="15" fill="rgb(239,181,32)"/><text x="55.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 0.78%)</title><rect x="52" y="1252" width="9" height="15" fill="rgb(208,183,48)"/><text x="55.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="1268" width="9" height="15" fill="rgb(221,16,18)"/><text x="55.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="1284" width="9" height="15" fill="rgb(209,187,11)"/><text x="55.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="1300" width="9" height="15" fill="rgb(244,24,50)"/><text x="55.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="1316" width="9" height="15" fill="rgb(242,95,31)"/><text x="55.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="1332" width="9" height="15" fill="rgb(254,95,50)"/><text x="55.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="1348" width="9" height="15" fill="rgb(219,80,38)"/><text x="55.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 0.78%)</title><rect x="52" y="1364" width="9" height="15" fill="rgb(248,7,44)"/><text x="55.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.78%)</title><rect x="52" y="1380" width="9" height="15" fill="rgb(211,199,51)"/><text x="55.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.78%)</title><rect x="52" y="1396" width="9" height="15" fill="rgb(241,121,46)"/><text x="55.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.78%)</title><rect x="52" y="1412" width="9" height="15" fill="rgb(212,102,2)"/><text x="55.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.78%)</title><rect x="52" y="1428" width="9" height="15" fill="rgb(247,141,22)"/><text x="55.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.78%)</title><rect x="52" y="1444" width="9" height="15" fill="rgb(242,100,21)"/><text x="55.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (2 samples, 0.52%)</title><rect x="55" y="1460" width="6" height="15" fill="rgb(243,6,26)"/><text x="58.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.52%)</title><rect x="55" y="1476" width="6" height="15" fill="rgb(240,126,42)"/><text x="58.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.52%)</title><rect x="55" y="1492" width="6" height="15" fill="rgb(207,59,0)"/><text x="58.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.52%)</title><rect x="55" y="1508" width="6" height="15" fill="rgb(223,145,38)"/><text x="58.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.52%)</title><rect x="55" y="1524" width="6" height="15" fill="rgb(238,205,1)"/><text x="58.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.52%)</title><rect x="55" y="1540" width="6" height="15" fill="rgb(247,118,42)"/><text x="58.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (2 samples, 0.52%)</title><rect x="55" y="1556" width="6" height="15" fill="rgb(238,12,4)"/><text x="58.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.26%)</title><rect x="58" y="1572" width="3" height="15" fill="rgb(247,112,33)"/><text x="61.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="58" y="1588" width="3" height="15" fill="rgb(220,11,52)"/><text x="61.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="58" y="1604" width="3" height="15" fill="rgb(236,30,38)"/><text x="61.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="58" y="1620" width="3" height="15" fill="rgb(206,214,17)"/><text x="61.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="58" y="1636" width="3" height="15" fill="rgb(219,169,13)"/><text x="61.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="58" y="1652" width="3" height="15" fill="rgb(209,196,49)"/><text x="61.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.26%)</title><rect x="58" y="1668" width="3" height="15" fill="rgb(222,18,9)"/><text x="61.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="58" y="1684" width="3" height="15" fill="rgb(230,154,18)"/><text x="61.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="58" y="1700" width="3" height="15" fill="rgb(236,199,29)"/><text x="61.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="58" y="1716" width="3" height="15" fill="rgb(233,100,44)"/><text x="61.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="58" y="1732" width="3" height="15" fill="rgb(233,85,49)"/><text x="61.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="58" y="1748" width="3" height="15" fill="rgb(249,224,13)"/><text x="61.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:22) (1 samples, 0.26%)</title><rect x="58" y="1764" width="3" height="15" fill="rgb(207,53,13)"/><text x="61.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="58" y="1780" width="3" height="15" fill="rgb(227,58,45)"/><text x="61.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="58" y="1796" width="3" height="15" fill="rgb(238,124,46)"/><text x="61.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="58" y="1812" width="3" height="15" fill="rgb(205,42,53)"/><text x="61.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="58" y="1828" width="3" height="15" fill="rgb(235,145,8)"/><text x="61.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="58" y="1844" width="3" height="15" fill="rgb(253,25,10)"/><text x="61.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py:30) (1 samples, 0.26%)</title><rect x="58" y="1860" width="3" height="15" fill="rgb(237,152,36)"/><text x="61.00" y="1870.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.26%)</title><rect x="58" y="1876" width="3" height="15" fill="rgb(206,228,19)"/><text x="61.00" y="1886.50"></text></g><g><title>_compile (re.py:294) (1 samples, 0.26%)</title><rect x="58" y="1892" width="3" height="15" fill="rgb(236,62,52)"/><text x="61.00" y="1902.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:151) (1 samples, 0.26%)</title><rect x="61" y="148" width="4" height="15" fill="rgb(217,214,11)"/><text x="64.00" y="158.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.26%)</title><rect x="61" y="164" width="4" height="15" fill="rgb(243,196,35)"/><text x="64.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.26%)</title><rect x="61" y="180" width="4" height="15" fill="rgb(241,44,28)"/><text x="64.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.26%)</title><rect x="61" y="196" width="4" height="15" fill="rgb(227,202,35)"/><text x="64.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.26%)</title><rect x="61" y="212" width="4" height="15" fill="rgb(207,147,25)"/><text x="64.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.26%)</title><rect x="61" y="228" width="4" height="15" fill="rgb(239,110,40)"/><text x="64.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.26%)</title><rect x="61" y="244" width="4" height="15" fill="rgb(228,99,41)"/><text x="64.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.26%)</title><rect x="61" y="260" width="4" height="15" fill="rgb(218,32,4)"/><text x="64.00" y="270.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (3 samples, 0.78%)</title><rect x="61" y="116" width="10" height="15" fill="rgb(251,141,47)"/><text x="64.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (3 samples, 0.78%)</title><rect x="61" y="132" width="10" height="15" fill="rgb(215,28,5)"/><text x="64.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (2 samples, 0.52%)</title><rect x="65" y="148" width="6" height="15" fill="rgb(219,39,7)"/><text x="68.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (2 samples, 0.52%)</title><rect x="65" y="164" width="6" height="15" fill="rgb(212,51,19)"/><text x="68.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.26%)</title><rect x="68" y="180" width="3" height="15" fill="rgb(217,210,5)"/><text x="71.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.26%)</title><rect x="68" y="196" width="3" height="15" fill="rgb(233,210,39)"/><text x="71.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.26%)</title><rect x="68" y="212" width="3" height="15" fill="rgb(209,185,32)"/><text x="71.00" y="222.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.26%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(232,162,46)"/><text x="71.00" y="238.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.26%)</title><rect x="68" y="244" width="3" height="15" fill="rgb(243,5,40)"/><text x="71.00" y="254.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.26%)</title><rect x="68" y="260" width="3" height="15" fill="rgb(220,112,34)"/><text x="71.00" y="270.50"></text></g><g><title>_signature_from_function (inspect.py:2195) (1 samples, 0.26%)</title><rect x="68" y="276" width="3" height="15" fill="rgb(213,63,48)"/><text x="71.00" y="286.50"></text></g><g><title>__init__ (inspect.py:2800) (1 samples, 0.26%)</title><rect x="68" y="292" width="3" height="15" fill="rgb(254,123,54)"/><text x="71.00" y="302.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.26%)</title><rect x="71" y="148" width="3" height="15" fill="rgb(224,80,26)"/><text x="74.00" y="158.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.26%)</title><rect x="71" y="164" width="3" height="15" fill="rgb(221,223,24)"/><text x="74.00" y="174.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5601) (1 samples, 0.26%)</title><rect x="74" y="452" width="3" height="15" fill="rgb(244,106,42)"/><text x="77.00" y="462.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.26%)</title><rect x="74" y="468" width="3" height="15" fill="rgb(239,7,15)"/><text x="77.00" y="478.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (1 samples, 0.26%)</title><rect x="74" y="484" width="3" height="15" fill="rgb(238,216,50)"/><text x="77.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3201) (1 samples, 0.26%)</title><rect x="74" y="500" width="3" height="15" fill="rgb(228,140,29)"/><text x="77.00" y="510.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.26%)</title><rect x="74" y="516" width="3" height="15" fill="rgb(254,100,25)"/><text x="77.00" y="526.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c:2612) (1 samples, 0.26%)</title><rect x="74" y="532" width="3" height="15" fill="rgb(234,172,18)"/><text x="77.00" y="542.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c:2859) (1 samples, 0.26%)</title><rect x="74" y="548" width="3" height="15" fill="rgb(230,104,54)"/><text x="77.00" y="558.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.26%)</title><rect x="74" y="564" width="3" height="15" fill="rgb(205,54,32)"/><text x="77.00" y="574.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.26%)</title><rect x="74" y="580" width="3" height="15" fill="rgb(208,33,52)"/><text x="77.00" y="590.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.26%)</title><rect x="74" y="596" width="3" height="15" fill="rgb(246,7,28)"/><text x="77.00" y="606.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.26%)</title><rect x="74" y="612" width="3" height="15" fill="rgb(217,16,40)"/><text x="77.00" y="622.50"></text></g><g><title>discover_dimensions (ctors.c:668) (1 samples, 0.26%)</title><rect x="74" y="628" width="3" height="15" fill="rgb(212,71,34)"/><text x="77.00" y="638.50"></text></g><g><title>MT19937___init__ (mt19937.c:2455) (2 samples, 0.52%)</title><rect x="74" y="356" width="6" height="15" fill="rgb(218,181,44)"/><text x="77.00" y="366.50"></text></g><g><title>__init__ (bit_generator.c:6998) (2 samples, 0.52%)</title><rect x="74" y="372" width="6" height="15" fill="rgb(252,218,18)"/><text x="77.00" y="382.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c:7160) (2 samples, 0.52%)</title><rect x="74" y="388" width="6" height="15" fill="rgb(227,1,38)"/><text x="77.00" y="398.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c:14242) (2 samples, 0.52%)</title><rect x="74" y="404" width="6" height="15" fill="rgb(250,115,12)"/><text x="77.00" y="414.50"></text></g><g><title>__init__ (bit_generator.c:4349) (2 samples, 0.52%)</title><rect x="74" y="420" width="6" height="15" fill="rgb(221,108,33)"/><text x="77.00" y="430.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c:4691) (2 samples, 0.52%)</title><rect x="74" y="436" width="6" height="15" fill="rgb(222,143,23)"/><text x="77.00" y="446.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5628) (1 samples, 0.26%)</title><rect x="77" y="452" width="3" height="15" fill="rgb(232,228,1)"/><text x="80.00" y="462.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.26%)</title><rect x="77" y="468" width="3" height="15" fill="rgb(232,52,29)"/><text x="80.00" y="478.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (1 samples, 0.26%)</title><rect x="77" y="484" width="3" height="15" fill="rgb(206,147,47)"/><text x="80.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3309) (1 samples, 0.26%)</title><rect x="77" y="500" width="3" height="15" fill="rgb(221,152,9)"/><text x="80.00" y="510.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.26%)</title><rect x="77" y="516" width="3" height="15" fill="rgb(224,25,2)"/><text x="80.00" y="526.50"></text></g><g><title>UINT_setitem (arraytypes.c.src:212) (1 samples, 0.26%)</title><rect x="80" y="436" width="3" height="15" fill="rgb(253,63,13)"/><text x="83.00" y="446.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (4 samples, 1.04%)</title><rect x="74" y="244" width="12" height="15" fill="rgb(222,81,46)"/><text x="77.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (4 samples, 1.04%)</title><rect x="74" y="260" width="12" height="15" fill="rgb(226,32,16)"/><text x="77.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (4 samples, 1.04%)</title><rect x="74" y="276" width="12" height="15" fill="rgb(219,153,21)"/><text x="77.00" y="286.50"></text></g><g><title>__init__ (mtrand.c:3210) (4 samples, 1.04%)</title><rect x="74" y="292" width="12" height="15" fill="rgb(228,113,5)"/><text x="77.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (4 samples, 1.04%)</title><rect x="74" y="308" width="12" height="15" fill="rgb(226,20,7)"/><text x="77.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (4 samples, 1.04%)</title><rect x="74" y="324" width="12" height="15" fill="rgb(220,203,40)"/><text x="77.00" y="334.50"></text></g><g><title>__init__ (mt19937.c:2381) (4 samples, 1.04%)</title><rect x="74" y="340" width="12" height="15" fill="rgb(247,93,16)"/><text x="77.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (2 samples, 0.52%)</title><rect x="80" y="356" width="6" height="15" fill="rgb(207,225,33)"/><text x="83.00" y="366.50"></text></g><g><title>inner (contextlib.py:74) (2 samples, 0.52%)</title><rect x="80" y="372" width="6" height="15" fill="rgb(212,201,11)"/><text x="83.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c:5779) (2 samples, 0.52%)</title><rect x="80" y="388" width="6" height="15" fill="rgb(220,136,24)"/><text x="83.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:6081) (2 samples, 0.52%)</title><rect x="80" y="404" width="6" height="15" fill="rgb(216,85,32)"/><text x="83.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c:1836) (2 samples, 0.52%)</title><rect x="80" y="420" width="6" height="15" fill="rgb(234,208,33)"/><text x="83.00" y="430.50"></text></g><g><title>UINT_setitem (arraytypes.c.src:216) (1 samples, 0.26%)</title><rect x="83" y="436" width="3" height="15" fill="rgb(238,223,23)"/><text x="86.00" y="446.50"></text></g><g><title>MyPyLong_AsUnsignedLong (arraytypes.c.src:143) (1 samples, 0.26%)</title><rect x="83" y="452" width="3" height="15" fill="rgb(250,60,16)"/><text x="86.00" y="462.50"></text></g><g><title>MT19937___init__ (mt19937.c:2455) (1 samples, 0.26%)</title><rect x="86" y="372" width="3" height="15" fill="rgb(224,128,45)"/><text x="89.00" y="382.50"></text></g><g><title>__init__ (bit_generator.c:6998) (1 samples, 0.26%)</title><rect x="86" y="388" width="3" height="15" fill="rgb(224,76,41)"/><text x="89.00" y="398.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c:7160) (1 samples, 0.26%)</title><rect x="86" y="404" width="3" height="15" fill="rgb(234,118,19)"/><text x="89.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c:14242) (1 samples, 0.26%)</title><rect x="86" y="420" width="3" height="15" fill="rgb(222,55,25)"/><text x="89.00" y="430.50"></text></g><g><title>__init__ (bit_generator.c:4349) (1 samples, 0.26%)</title><rect x="86" y="436" width="3" height="15" fill="rgb(229,7,21)"/><text x="89.00" y="446.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c:4691) (1 samples, 0.26%)</title><rect x="86" y="452" width="3" height="15" fill="rgb(239,103,5)"/><text x="89.00" y="462.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5601) (1 samples, 0.26%)</title><rect x="86" y="468" width="3" height="15" fill="rgb(243,129,6)"/><text x="89.00" y="478.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.26%)</title><rect x="86" y="484" width="3" height="15" fill="rgb(221,60,35)"/><text x="89.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (1 samples, 0.26%)</title><rect x="86" y="500" width="3" height="15" fill="rgb(232,145,7)"/><text x="89.00" y="510.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3201) (1 samples, 0.26%)</title><rect x="86" y="516" width="3" height="15" fill="rgb(205,202,37)"/><text x="89.00" y="526.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (1 samples, 0.26%)</title><rect x="86" y="532" width="3" height="15" fill="rgb(219,129,18)"/><text x="89.00" y="542.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c:2612) (1 samples, 0.26%)</title><rect x="86" y="548" width="3" height="15" fill="rgb(240,221,53)"/><text x="89.00" y="558.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c:2859) (1 samples, 0.26%)</title><rect x="86" y="564" width="3" height="15" fill="rgb(248,0,54)"/><text x="89.00" y="574.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1724) (1 samples, 0.26%)</title><rect x="86" y="580" width="3" height="15" fill="rgb(246,104,41)"/><text x="89.00" y="590.50"></text></g><g><title>inner (contextlib.py:73) (1 samples, 0.26%)</title><rect x="89" y="388" width="3" height="15" fill="rgb(213,130,15)"/><text x="92.00" y="398.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.26%)</title><rect x="89" y="404" width="3" height="15" fill="rgb(248,154,3)"/><text x="92.00" y="414.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.26%)</title><rect x="89" y="420" width="3" height="15" fill="rgb(250,203,45)"/><text x="92.00" y="430.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.26%)</title><rect x="89" y="436" width="3" height="15" fill="rgb(237,184,19)"/><text x="92.00" y="446.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:40) (11 samples, 2.85%)</title><rect x="61" y="52" width="34" height="15" fill="rgb(225,65,26)"/><text x="64.00" y="62.50">&lt;m..</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:11) (11 samples, 2.85%)</title><rect x="61" y="68" width="34" height="15" fill="rgb(226,164,4)"/><text x="64.00" y="78.50">st..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (11 samples, 2.85%)</title><rect x="61" y="84" width="34" height="15" fill="rgb(209,92,12)"/><text x="64.00" y="94.50">se..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (11 samples, 2.85%)</title><rect x="61" y="100" width="34" height="15" fill="rgb(218,134,32)"/><text x="64.00" y="110.50">se..</text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (8 samples, 2.07%)</title><rect x="71" y="116" width="24" height="15" fill="rgb(214,85,49)"/><text x="74.00" y="126.50">f..</text></g><g><title>__call__ (joblib/parallel.py:1006) (8 samples, 2.07%)</title><rect x="71" y="132" width="24" height="15" fill="rgb(244,16,45)"/><text x="74.00" y="142.50">_..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (7 samples, 1.81%)</title><rect x="74" y="148" width="21" height="15" fill="rgb(238,42,9)"/><text x="77.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (7 samples, 1.81%)</title><rect x="74" y="164" width="21" height="15" fill="rgb(214,8,50)"/><text x="77.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (7 samples, 1.81%)</title><rect x="74" y="180" width="21" height="15" fill="rgb(244,118,16)"/><text x="77.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (7 samples, 1.81%)</title><rect x="74" y="196" width="21" height="15" fill="rgb(232,43,48)"/><text x="77.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (7 samples, 1.81%)</title><rect x="74" y="212" width="21" height="15" fill="rgb(229,202,10)"/><text x="77.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (7 samples, 1.81%)</title><rect x="74" y="228" width="21" height="15" fill="rgb(238,59,26)"/><text x="77.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (3 samples, 0.78%)</title><rect x="86" y="244" width="9" height="15" fill="rgb(233,64,23)"/><text x="89.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (3 samples, 0.78%)</title><rect x="86" y="260" width="9" height="15" fill="rgb(222,154,39)"/><text x="89.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (3 samples, 0.78%)</title><rect x="86" y="276" width="9" height="15" fill="rgb(241,121,35)"/><text x="89.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (3 samples, 0.78%)</title><rect x="86" y="292" width="9" height="15" fill="rgb(230,210,7)"/><text x="89.00" y="302.50"></text></g><g><title>__init__ (mtrand.c:3210) (3 samples, 0.78%)</title><rect x="86" y="308" width="9" height="15" fill="rgb(222,72,13)"/><text x="89.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (3 samples, 0.78%)</title><rect x="86" y="324" width="9" height="15" fill="rgb(207,60,21)"/><text x="89.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (3 samples, 0.78%)</title><rect x="86" y="340" width="9" height="15" fill="rgb(229,35,18)"/><text x="89.00" y="350.50"></text></g><g><title>__init__ (mt19937.c:2381) (3 samples, 0.78%)</title><rect x="86" y="356" width="9" height="15" fill="rgb(254,66,13)"/><text x="89.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (2 samples, 0.52%)</title><rect x="89" y="372" width="6" height="15" fill="rgb(240,120,9)"/><text x="92.00" y="382.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.26%)</title><rect x="92" y="388" width="3" height="15" fill="rgb(240,51,8)"/><text x="95.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.26%)</title><rect x="92" y="404" width="3" height="15" fill="rgb(221,125,15)"/><text x="95.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c:6032) (1 samples, 0.26%)</title><rect x="92" y="420" width="3" height="15" fill="rgb(209,8,14)"/><text x="95.00" y="430.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c:17413) (1 samples, 0.26%)</title><rect x="92" y="436" width="3" height="15" fill="rgb(205,102,11)"/><text x="95.00" y="446.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (bit_generator.c:18196) (1 samples, 0.26%)</title><rect x="92" y="452" width="3" height="15" fill="rgb(239,22,32)"/><text x="95.00" y="462.50"></text></g><g><title>0x7fb2abf0c8a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="98" y="196" width="3" height="15" fill="rgb(234,122,49)"/><text x="101.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.26%)</title><rect x="98" y="212" width="3" height="15" fill="rgb(211,135,21)"/><text x="101.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1506) (1 samples, 0.26%)</title><rect x="98" y="228" width="3" height="15" fill="rgb(223,182,36)"/><text x="101.00" y="238.50"></text></g><g><title>__setstate__ (sklearn/base.py:320) (1 samples, 0.26%)</title><rect x="101" y="196" width="3" height="15" fill="rgb(253,78,45)"/><text x="104.00" y="206.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:168) (4 samples, 1.04%)</title><rect x="95" y="100" width="12" height="15" fill="rgb(228,208,23)"/><text x="98.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h:510) (4 samples, 1.04%)</title><rect x="95" y="116" width="12" height="15" fill="rgb(225,116,10)"/><text x="98.00" y="126.50"></text></g><g><title>_pickle_load_impl (_pickle.c:7333) (4 samples, 1.04%)</title><rect x="95" y="132" width="12" height="15" fill="rgb(250,148,25)"/><text x="98.00" y="142.50"></text></g><g><title>load (_pickle.c:6463) (4 samples, 1.04%)</title><rect x="95" y="148" width="12" height="15" fill="rgb(211,212,44)"/><text x="98.00" y="158.50"></text></g><g><title>load_build (_pickle.c:6203) (4 samples, 1.04%)</title><rect x="95" y="164" width="12" height="15" fill="rgb(211,214,44)"/><text x="98.00" y="174.50"></text></g><g><title>_Pickle_FastCall (_pickle.c:353) (4 samples, 1.04%)</title><rect x="95" y="180" width="12" height="15" fill="rgb(221,86,42)"/><text x="98.00" y="190.50"></text></g><g><title>array_setstate (methods.c:1927) (1 samples, 0.26%)</title><rect x="104" y="196" width="3" height="15" fill="rgb(211,94,39)"/><text x="107.00" y="206.50"></text></g><g><title>PyArray_IntpFromSequence (conversion_utils.c:985) (1 samples, 0.26%)</title><rect x="104" y="212" width="3" height="15" fill="rgb(246,205,26)"/><text x="107.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:974) (1 samples, 0.26%)</title><rect x="104" y="228" width="3" height="15" fill="rgb(231,149,4)"/><text x="107.00" y="238.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:25) (5 samples, 1.30%)</title><rect x="95" y="84" width="15" height="15" fill="rgb(254,57,13)"/><text x="98.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.26%)</title><rect x="107" y="100" width="3" height="15" fill="rgb(229,183,41)"/><text x="110.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.26%)</title><rect x="107" y="116" width="3" height="15" fill="rgb(216,29,16)"/><text x="110.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.26%)</title><rect x="107" y="132" width="3" height="15" fill="rgb(210,205,46)"/><text x="110.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.26%)</title><rect x="107" y="148" width="3" height="15" fill="rgb(209,124,48)"/><text x="110.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.26%)</title><rect x="107" y="164" width="3" height="15" fill="rgb(230,90,16)"/><text x="110.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.26%)</title><rect x="107" y="180" width="3" height="15" fill="rgb(242,80,14)"/><text x="110.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.26%)</title><rect x="107" y="196" width="3" height="15" fill="rgb(221,2,2)"/><text x="110.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:169) (1 samples, 0.26%)</title><rect x="107" y="212" width="3" height="15" fill="rgb(253,56,32)"/><text x="110.00" y="222.50"></text></g><g><title>0x7fb2abed7297 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="107" y="228" width="3" height="15" fill="rgb(254,55,3)"/><text x="110.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.26%)</title><rect x="110" y="180" width="3" height="15" fill="rgb(206,182,18)"/><text x="113.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.26%)</title><rect x="113" y="180" width="3" height="15" fill="rgb(253,164,17)"/><text x="116.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.26%)</title><rect x="113" y="196" width="3" height="15" fill="rgb(209,194,9)"/><text x="116.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (1 samples, 0.26%)</title><rect x="116" y="180" width="4" height="15" fill="rgb(212,116,52)"/><text x="119.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.26%)</title><rect x="116" y="196" width="4" height="15" fill="rgb(228,87,20)"/><text x="119.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.26%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(237,152,29)"/><text x="119.00" y="222.50"></text></g><g><title>0x7fb2abee7fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="120" y="324" width="3" height="15" fill="rgb(220,207,41)"/><text x="123.00" y="334.50"></text></g><g><title>0x7fb2abef7405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="120" y="340" width="3" height="15" fill="rgb(220,186,26)"/><text x="123.00" y="350.50"></text></g><g><title>0x7fb2abef6592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(221,135,6)"/><text x="123.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.26%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(218,35,2)"/><text x="123.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.26%)</title><rect x="120" y="388" width="3" height="15" fill="rgb(224,148,53)"/><text x="123.00" y="398.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.26%)</title><rect x="123" y="356" width="3" height="15" fill="rgb(209,26,33)"/><text x="126.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.26%)</title><rect x="123" y="372" width="3" height="15" fill="rgb(253,172,18)"/><text x="126.00" y="382.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:47) (11 samples, 2.85%)</title><rect x="95" y="52" width="34" height="15" fill="rgb(217,151,19)"/><text x="98.00" y="62.50">&lt;m..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:46) (11 samples, 2.85%)</title><rect x="95" y="68" width="34" height="15" fill="rgb(252,44,15)"/><text x="98.00" y="78.50">pr..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:26) (6 samples, 1.55%)</title><rect x="110" y="84" width="19" height="15" fill="rgb(237,66,6)"/><text x="113.00" y="94.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:18) (6 samples, 1.55%)</title><rect x="110" y="100" width="19" height="15" fill="rgb(238,208,50)"/><text x="113.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (6 samples, 1.55%)</title><rect x="110" y="116" width="19" height="15" fill="rgb(207,70,21)"/><text x="113.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (6 samples, 1.55%)</title><rect x="110" y="132" width="19" height="15" fill="rgb(227,86,2)"/><text x="113.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (6 samples, 1.55%)</title><rect x="110" y="148" width="19" height="15" fill="rgb(206,189,2)"/><text x="113.00" y="158.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (6 samples, 1.55%)</title><rect x="110" y="164" width="19" height="15" fill="rgb(216,112,20)"/><text x="113.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.78%)</title><rect x="120" y="180" width="9" height="15" fill="rgb(225,208,45)"/><text x="123.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.78%)</title><rect x="120" y="196" width="9" height="15" fill="rgb(209,63,26)"/><text x="123.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.78%)</title><rect x="120" y="212" width="9" height="15" fill="rgb(229,62,53)"/><text x="123.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.78%)</title><rect x="120" y="228" width="9" height="15" fill="rgb(237,65,1)"/><text x="123.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.78%)</title><rect x="120" y="244" width="9" height="15" fill="rgb(209,88,22)"/><text x="123.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.78%)</title><rect x="120" y="260" width="9" height="15" fill="rgb(251,181,5)"/><text x="123.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (3 samples, 0.78%)</title><rect x="120" y="276" width="9" height="15" fill="rgb(211,57,1)"/><text x="123.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (3 samples, 0.78%)</title><rect x="120" y="292" width="9" height="15" fill="rgb(234,202,13)"/><text x="123.00" y="302.50"></text></g><g><title>0x7fb2abee8d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.78%)</title><rect x="120" y="308" width="9" height="15" fill="rgb(233,163,41)"/><text x="123.00" y="318.50"></text></g><g><title>0x7fb2abee805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="123" y="324" width="6" height="15" fill="rgb(247,16,41)"/><text x="126.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.52%)</title><rect x="123" y="340" width="6" height="15" fill="rgb(212,222,53)"/><text x="126.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.26%)</title><rect x="126" y="356" width="3" height="15" fill="rgb(238,28,29)"/><text x="129.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="126" y="372" width="3" height="15" fill="rgb(211,121,38)"/><text x="129.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.26%)</title><rect x="126" y="388" width="3" height="15" fill="rgb(241,44,17)"/><text x="129.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.26%)</title><rect x="126" y="404" width="3" height="15" fill="rgb(213,112,37)"/><text x="129.00" y="414.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:36) (1 samples, 0.26%)</title><rect x="129" y="84" width="3" height="15" fill="rgb(248,189,40)"/><text x="132.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.26%)</title><rect x="129" y="100" width="3" height="15" fill="rgb(222,13,32)"/><text x="132.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.26%)</title><rect x="129" y="116" width="3" height="15" fill="rgb(226,174,8)"/><text x="132.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.26%)</title><rect x="129" y="132" width="3" height="15" fill="rgb(236,50,3)"/><text x="132.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.26%)</title><rect x="129" y="148" width="3" height="15" fill="rgb(231,86,52)"/><text x="132.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.26%)</title><rect x="129" y="164" width="3" height="15" fill="rgb(238,122,49)"/><text x="132.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.26%)</title><rect x="129" y="180" width="3" height="15" fill="rgb(213,6,28)"/><text x="132.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.26%)</title><rect x="129" y="196" width="3" height="15" fill="rgb(234,26,39)"/><text x="132.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.26%)</title><rect x="129" y="212" width="3" height="15" fill="rgb(237,37,34)"/><text x="132.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.26%)</title><rect x="129" y="228" width="3" height="15" fill="rgb(210,220,41)"/><text x="132.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="129" y="244" width="3" height="15" fill="rgb(237,57,30)"/><text x="132.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.26%)</title><rect x="129" y="260" width="3" height="15" fill="rgb(207,71,16)"/><text x="132.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.26%)</title><rect x="129" y="276" width="3" height="15" fill="rgb(214,203,24)"/><text x="132.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.26%)</title><rect x="129" y="292" width="3" height="15" fill="rgb(212,71,6)"/><text x="132.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:200) (1 samples, 0.26%)</title><rect x="129" y="308" width="3" height="15" fill="rgb(219,214,14)"/><text x="132.00" y="318.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.26%)</title><rect x="132" y="148" width="3" height="15" fill="rgb(237,197,36)"/><text x="135.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:185) (1 samples, 0.26%)</title><rect x="132" y="164" width="3" height="15" fill="rgb(215,98,34)"/><text x="135.00" y="174.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.26%)</title><rect x="135" y="148" width="3" height="15" fill="rgb(250,71,33)"/><text x="138.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:634) (1 samples, 0.26%)</title><rect x="135" y="164" width="3" height="15" fill="rgb(236,201,28)"/><text x="138.00" y="174.50"></text></g><g><title>__init__ (queue.py:49) (1 samples, 0.26%)</title><rect x="135" y="180" width="3" height="15" fill="rgb(239,21,21)"/><text x="138.00" y="190.50"></text></g><g><title>__init__ (threading.py:235) (1 samples, 0.26%)</title><rect x="135" y="196" width="3" height="15" fill="rgb(237,202,51)"/><text x="138.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.26%)</title><rect x="138" y="196" width="3" height="15" fill="rgb(250,89,15)"/><text x="141.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.52%)</title><rect x="138" y="164" width="6" height="15" fill="rgb(221,102,26)"/><text x="141.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.52%)</title><rect x="138" y="180" width="6" height="15" fill="rgb(210,99,20)"/><text x="141.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.26%)</title><rect x="141" y="196" width="3" height="15" fill="rgb(235,172,31)"/><text x="144.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.26%)</title><rect x="141" y="212" width="3" height="15" fill="rgb(244,139,8)"/><text x="144.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.26%)</title><rect x="141" y="228" width="3" height="15" fill="rgb(223,103,45)"/><text x="144.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.26%)</title><rect x="141" y="244" width="3" height="15" fill="rgb(207,99,15)"/><text x="144.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:782) (1 samples, 0.26%)</title><rect x="147" y="180" width="3" height="15" fill="rgb(206,191,31)"/><text x="150.00" y="190.50"></text></g><g><title>get (queue.py:164) (4 samples, 1.04%)</title><rect x="153" y="196" width="12" height="15" fill="rgb(218,145,51)"/><text x="156.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.52%)</title><rect x="159" y="212" width="6" height="15" fill="rgb(243,40,31)"/><text x="162.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.26%)</title><rect x="162" y="228" width="3" height="15" fill="rgb(245,92,1)"/><text x="165.00" y="238.50"></text></g><g><title>get (queue.py:167) (2 samples, 0.52%)</title><rect x="165" y="196" width="7" height="15" fill="rgb(206,40,10)"/><text x="168.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (9 samples, 2.33%)</title><rect x="150" y="180" width="28" height="15" fill="rgb(222,80,28)"/><text x="153.00" y="190.50">d..</text></g><g><title>get (queue.py:182) (2 samples, 0.52%)</title><rect x="172" y="196" width="6" height="15" fill="rgb(235,91,1)"/><text x="175.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.26%)</title><rect x="175" y="212" width="3" height="15" fill="rgb(253,97,50)"/><text x="178.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.26%)</title><rect x="187" y="228" width="3" height="15" fill="rgb(245,84,17)"/><text x="190.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (3 samples, 0.78%)</title><rect x="190" y="228" width="9" height="15" fill="rgb(215,67,28)"/><text x="193.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (1 samples, 0.26%)</title><rect x="199" y="228" width="3" height="15" fill="rgb(227,185,23)"/><text x="202.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.26%)</title><rect x="202" y="228" width="3" height="15" fill="rgb(231,129,33)"/><text x="205.00" y="238.50"></text></g><g><title>wraps (functools.py:78) (2 samples, 0.52%)</title><rect x="205" y="228" width="6" height="15" fill="rgb(241,187,29)"/><text x="208.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (13 samples, 3.37%)</title><rect x="178" y="180" width="39" height="15" fill="rgb(235,172,38)"/><text x="181.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (12 samples, 3.11%)</title><rect x="181" y="196" width="36" height="15" fill="rgb(215,226,41)"/><text x="184.00" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py:308) (11 samples, 2.85%)</title><rect x="184" y="212" width="33" height="15" fill="rgb(211,221,13)"/><text x="187.00" y="222.50">de..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.52%)</title><rect x="211" y="228" width="6" height="15" fill="rgb(251,30,15)"/><text x="214.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.26%)</title><rect x="217" y="180" width="3" height="15" fill="rgb(226,42,26)"/><text x="220.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (2 samples, 0.52%)</title><rect x="220" y="180" width="7" height="15" fill="rgb(234,67,46)"/><text x="223.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (2 samples, 0.52%)</title><rect x="227" y="180" width="6" height="15" fill="rgb(224,195,9)"/><text x="230.00" y="190.50"></text></g><g><title>0x7fb2d2582ee3 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="239" y="212" width="3" height="15" fill="rgb(243,35,1)"/><text x="242.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.52%)</title><rect x="242" y="212" width="6" height="15" fill="rgb(239,114,51)"/><text x="245.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (5 samples, 1.30%)</title><rect x="236" y="196" width="15" height="15" fill="rgb(217,70,16)"/><text x="239.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.26%)</title><rect x="248" y="212" width="3" height="15" fill="rgb(235,102,40)"/><text x="251.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.04%)</title><rect x="251" y="212" width="12" height="15" fill="rgb(249,212,53)"/><text x="254.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.26%)</title><rect x="260" y="228" width="3" height="15" fill="rgb(229,46,25)"/><text x="263.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:81) (1 samples, 0.26%)</title><rect x="263" y="212" width="3" height="15" fill="rgb(234,65,48)"/><text x="266.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.26%)</title><rect x="266" y="212" width="3" height="15" fill="rgb(245,190,6)"/><text x="269.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (14 samples, 3.63%)</title><rect x="233" y="180" width="42" height="15" fill="rgb(246,84,13)"/><text x="236.00" y="190.50">dis..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (8 samples, 2.07%)</title><rect x="251" y="196" width="24" height="15" fill="rgb(222,183,24)"/><text x="254.00" y="206.50">g..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.52%)</title><rect x="269" y="212" width="6" height="15" fill="rgb(248,13,43)"/><text x="272.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (3 samples, 0.78%)</title><rect x="275" y="180" width="10" height="15" fill="rgb(253,138,51)"/><text x="278.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (1 samples, 0.26%)</title><rect x="282" y="196" width="3" height="15" fill="rgb(211,89,9)"/><text x="285.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.26%)</title><rect x="288" y="196" width="3" height="15" fill="rgb(228,225,4)"/><text x="291.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.26%)</title><rect x="288" y="212" width="3" height="15" fill="rgb(222,108,3)"/><text x="291.00" y="222.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.26%)</title><rect x="297" y="212" width="3" height="15" fill="rgb(225,211,41)"/><text x="300.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.26%)</title><rect x="297" y="228" width="3" height="15" fill="rgb(239,210,9)"/><text x="300.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.26%)</title><rect x="297" y="244" width="3" height="15" fill="rgb(215,53,33)"/><text x="300.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (6 samples, 1.55%)</title><rect x="285" y="180" width="18" height="15" fill="rgb(228,57,26)"/><text x="288.00" y="190.50"></text></g><g><title>put (queue.py:151) (4 samples, 1.04%)</title><rect x="291" y="196" width="12" height="15" fill="rgb(253,180,5)"/><text x="294.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.26%)</title><rect x="300" y="212" width="3" height="15" fill="rgb(243,1,54)"/><text x="303.00" y="222.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.52%)</title><rect x="303" y="196" width="6" height="15" fill="rgb(250,147,9)"/><text x="306.00" y="206.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.26%)</title><rect x="309" y="196" width="3" height="15" fill="rgb(206,99,32)"/><text x="312.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.26%)</title><rect x="309" y="212" width="3" height="15" fill="rgb(214,202,32)"/><text x="312.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.26%)</title><rect x="309" y="228" width="3" height="15" fill="rgb(210,72,3)"/><text x="312.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (5 samples, 1.30%)</title><rect x="303" y="180" width="15" height="15" fill="rgb(206,20,1)"/><text x="306.00" y="190.50"></text></g><g><title>get (queue.py:182) (2 samples, 0.52%)</title><rect x="312" y="196" width="6" height="15" fill="rgb(218,31,51)"/><text x="315.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (3 samples, 0.78%)</title><rect x="321" y="196" width="9" height="15" fill="rgb(224,70,33)"/><text x="324.00" y="206.50"></text></g><g><title>0x4 (?) (1 samples, 0.26%)</title><rect x="327" y="212" width="3" height="15" fill="rgb(238,60,37)"/><text x="330.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.26%)</title><rect x="327" y="228" width="3" height="15" fill="rgb(247,127,38)"/><text x="330.00" y="238.50"></text></g><g><title>0x7fff5d320a09 ([vdso]) (1 samples, 0.26%)</title><rect x="327" y="244" width="3" height="15" fill="rgb(235,140,2)"/><text x="330.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.26%)</title><rect x="330" y="196" width="4" height="15" fill="rgb(230,183,2)"/><text x="333.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.26%)</title><rect x="334" y="196" width="3" height="15" fill="rgb(209,87,24)"/><text x="337.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (3 samples, 0.78%)</title><rect x="349" y="260" width="9" height="15" fill="rgb(227,161,36)"/><text x="352.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (7 samples, 1.81%)</title><rect x="343" y="244" width="21" height="15" fill="rgb(210,3,25)"/><text x="346.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:209) (2 samples, 0.52%)</title><rect x="358" y="260" width="6" height="15" fill="rgb(248,194,45)"/><text x="361.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.26%)</title><rect x="386" y="308" width="3" height="15" fill="rgb(254,176,1)"/><text x="389.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.26%)</title><rect x="389" y="308" width="3" height="15" fill="rgb(231,32,25)"/><text x="392.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.26%)</title><rect x="395" y="324" width="3" height="15" fill="rgb(228,46,12)"/><text x="398.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.26%)</title><rect x="416" y="340" width="3" height="15" fill="rgb(242,44,27)"/><text x="419.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.07%)</title><rect x="398" y="324" width="24" height="15" fill="rgb(248,2,43)"/><text x="401.00" y="334.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.26%)</title><rect x="419" y="340" width="3" height="15" fill="rgb(232,102,10)"/><text x="422.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (15 samples, 3.89%)</title><rect x="382" y="292" width="46" height="15" fill="rgb(210,62,52)"/><text x="385.00" y="302.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 3.11%)</title><rect x="392" y="308" width="36" height="15" fill="rgb(228,113,9)"/><text x="395.00" y="318.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.52%)</title><rect x="422" y="324" width="6" height="15" fill="rgb(212,176,35)"/><text x="425.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (2 samples, 0.52%)</title><rect x="428" y="292" width="6" height="15" fill="rgb(239,221,30)"/><text x="431.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (2 samples, 0.52%)</title><rect x="428" y="308" width="6" height="15" fill="rgb(248,35,53)"/><text x="431.00" y="318.50"></text></g><g><title>0x7fb2abee7f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="437" y="324" width="4" height="15" fill="rgb(232,159,54)"/><text x="440.00" y="334.50"></text></g><g><title>0x7fb2abed7d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="437" y="340" width="4" height="15" fill="rgb(224,3,11)"/><text x="440.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.26%)</title><rect x="437" y="356" width="4" height="15" fill="rgb(240,169,47)"/><text x="440.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.26%)</title><rect x="437" y="372" width="4" height="15" fill="rgb(253,161,29)"/><text x="440.00" y="382.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.26%)</title><rect x="441" y="372" width="3" height="15" fill="rgb(227,124,6)"/><text x="444.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.26%)</title><rect x="441" y="388" width="3" height="15" fill="rgb(226,72,36)"/><text x="444.00" y="398.50"></text></g><g><title>0x7fb2abef6225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="441" y="356" width="6" height="15" fill="rgb(253,218,25)"/><text x="444.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3248) (1 samples, 0.26%)</title><rect x="444" y="372" width="3" height="15" fill="rgb(244,4,13)"/><text x="447.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1473) (1 samples, 0.26%)</title><rect x="444" y="388" width="3" height="15" fill="rgb(226,185,15)"/><text x="447.00" y="398.50"></text></g><g><title>_buffer_format_string (buffer.c:237) (1 samples, 0.26%)</title><rect x="447" y="468" width="3" height="15" fill="rgb(208,70,43)"/><text x="450.00" y="478.50"></text></g><g><title>_buffer_format_string (buffer.c:360) (1 samples, 0.26%)</title><rect x="450" y="468" width="3" height="15" fill="rgb(248,7,50)"/><text x="453.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (3 samples, 0.78%)</title><rect x="447" y="436" width="9" height="15" fill="rgb(211,137,39)"/><text x="450.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (3 samples, 0.78%)</title><rect x="447" y="452" width="9" height="15" fill="rgb(226,41,1)"/><text x="450.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.26%)</title><rect x="453" y="468" width="3" height="15" fill="rgb(229,114,1)"/><text x="456.00" y="478.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.26%)</title><rect x="453" y="484" width="3" height="15" fill="rgb(253,196,29)"/><text x="456.00" y="494.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="453" y="500" width="3" height="15" fill="rgb(235,201,12)"/><text x="456.00" y="510.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.26%)</title><rect x="456" y="436" width="3" height="15" fill="rgb(227,205,36)"/><text x="459.00" y="446.50"></text></g><g><title>0x7fb2abedad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.30%)</title><rect x="447" y="372" width="15" height="15" fill="rgb(249,15,49)"/><text x="450.00" y="382.50"></text></g><g><title>0x7fb2abeda666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.30%)</title><rect x="447" y="388" width="15" height="15" fill="rgb(229,93,7)"/><text x="450.00" y="398.50"></text></g><g><title>0x7fb2abed02fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.30%)</title><rect x="447" y="404" width="15" height="15" fill="rgb(248,166,24)"/><text x="450.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (5 samples, 1.30%)</title><rect x="447" y="420" width="15" height="15" fill="rgb(214,28,53)"/><text x="450.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.26%)</title><rect x="459" y="436" width="3" height="15" fill="rgb(205,70,41)"/><text x="462.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.26%)</title><rect x="459" y="452" width="3" height="15" fill="rgb(220,211,37)"/><text x="462.00" y="462.50"></text></g><g><title>0x7fb2d24b393a (libc-2.29.so) (1 samples, 0.26%)</title><rect x="459" y="468" width="3" height="15" fill="rgb(217,1,19)"/><text x="462.00" y="478.50"></text></g><g><title>0x7fb2abef62df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.55%)</title><rect x="447" y="356" width="18" height="15" fill="rgb(209,3,0)"/><text x="450.00" y="366.50"></text></g><g><title>0x7fb2abedb00e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="462" y="372" width="3" height="15" fill="rgb(226,33,23)"/><text x="465.00" y="382.50"></text></g><g><title>0x7fb2abef6319 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="465" y="356" width="6" height="15" fill="rgb(210,15,47)"/><text x="468.00" y="366.50"></text></g><g><title>0x7fb2abef6511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="471" y="356" width="3" height="15" fill="rgb(237,115,2)"/><text x="474.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.26%)</title><rect x="474" y="372" width="3" height="15" fill="rgb(235,42,47)"/><text x="477.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="477" y="468" width="3" height="15" fill="rgb(220,54,41)"/><text x="480.00" y="478.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="480" y="468" width="3" height="15" fill="rgb(228,122,9)"/><text x="483.00" y="478.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (3 samples, 0.78%)</title><rect x="477" y="452" width="9" height="15" fill="rgb(226,26,38)"/><text x="480.00" y="462.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="483" y="468" width="3" height="15" fill="rgb(227,162,33)"/><text x="486.00" y="478.50"></text></g><g><title>0x7fb2d24a5d44 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="486" y="484" width="3" height="15" fill="rgb(211,121,53)"/><text x="489.00" y="494.50"></text></g><g><title>0x7fb2abef6592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.55%)</title><rect x="474" y="356" width="19" height="15" fill="rgb(236,228,5)"/><text x="477.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (5 samples, 1.30%)</title><rect x="477" y="372" width="16" height="15" fill="rgb(231,28,14)"/><text x="480.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (5 samples, 1.30%)</title><rect x="477" y="388" width="16" height="15" fill="rgb(241,56,43)"/><text x="480.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (5 samples, 1.30%)</title><rect x="477" y="404" width="16" height="15" fill="rgb(207,91,25)"/><text x="480.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (5 samples, 1.30%)</title><rect x="477" y="420" width="16" height="15" fill="rgb(231,31,0)"/><text x="480.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (5 samples, 1.30%)</title><rect x="477" y="436" width="16" height="15" fill="rgb(253,160,12)"/><text x="480.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.52%)</title><rect x="486" y="452" width="7" height="15" fill="rgb(222,75,34)"/><text x="489.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.52%)</title><rect x="486" y="468" width="7" height="15" fill="rgb(243,148,29)"/><text x="489.00" y="478.50"></text></g><g><title>0x7fb2d24c5103 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="489" y="484" width="4" height="15" fill="rgb(227,154,13)"/><text x="492.00" y="494.50"></text></g><g><title>0x7fb2abef6698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="493" y="356" width="3" height="15" fill="rgb(253,213,30)"/><text x="496.00" y="366.50"></text></g><g><title>0x7fb2abef669b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="496" y="356" width="3" height="15" fill="rgb(215,143,52)"/><text x="499.00" y="366.50"></text></g><g><title>0x7fb2abef66aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.78%)</title><rect x="499" y="356" width="9" height="15" fill="rgb(206,66,36)"/><text x="502.00" y="366.50"></text></g><g><title>0x7fb2abef66ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="508" y="356" width="6" height="15" fill="rgb(240,103,18)"/><text x="511.00" y="366.50"></text></g><g><title>0x7fb2abef66b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.55%)</title><rect x="514" y="356" width="18" height="15" fill="rgb(220,85,13)"/><text x="517.00" y="366.50"></text></g><g><title>0x7fb2abef66c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="532" y="356" width="3" height="15" fill="rgb(206,55,23)"/><text x="535.00" y="366.50"></text></g><g><title>0x7fb2abef66d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="535" y="356" width="6" height="15" fill="rgb(224,21,11)"/><text x="538.00" y="366.50"></text></g><g><title>0x7fb2abef66d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="541" y="356" width="3" height="15" fill="rgb(220,144,32)"/><text x="544.00" y="366.50"></text></g><g><title>0x7fb2abef6731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="544" y="356" width="4" height="15" fill="rgb(216,93,15)"/><text x="547.00" y="366.50"></text></g><g><title>0x7fb2abef67a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.78%)</title><rect x="548" y="356" width="9" height="15" fill="rgb(221,186,27)"/><text x="551.00" y="366.50"></text></g><g><title>0x7fb2abef67a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="557" y="356" width="3" height="15" fill="rgb(218,210,22)"/><text x="560.00" y="366.50"></text></g><g><title>0x7fb2abef67b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="560" y="356" width="3" height="15" fill="rgb(242,144,10)"/><text x="563.00" y="366.50"></text></g><g><title>0x7fb2abef68c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="563" y="356" width="3" height="15" fill="rgb(248,64,49)"/><text x="566.00" y="366.50"></text></g><g><title>0x7fb2abece529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="566" y="372" width="3" height="15" fill="rgb(216,205,14)"/><text x="569.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.26%)</title><rect x="566" y="388" width="3" height="15" fill="rgb(222,51,30)"/><text x="569.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.26%)</title><rect x="566" y="404" width="3" height="15" fill="rgb(211,57,20)"/><text x="569.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.26%)</title><rect x="566" y="420" width="3" height="15" fill="rgb(248,50,5)"/><text x="569.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (1 samples, 0.26%)</title><rect x="566" y="436" width="3" height="15" fill="rgb(246,206,15)"/><text x="569.00" y="446.50"></text></g><g><title>_append_char (buffer.c:128) (1 samples, 0.26%)</title><rect x="566" y="452" width="3" height="15" fill="rgb(214,140,26)"/><text x="569.00" y="462.50"></text></g><g><title>0x7fb2abef7405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (43 samples, 11.14%)</title><rect x="441" y="340" width="131" height="15" fill="rgb(213,177,22)"/><text x="444.00" y="350.50">0x7fb2abef7405 (..</text></g><g><title>0x7fb2abef6c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.52%)</title><rect x="566" y="356" width="6" height="15" fill="rgb(220,150,33)"/><text x="569.00" y="366.50"></text></g><g><title>0x7fb2abece5f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="569" y="372" width="3" height="15" fill="rgb(244,160,12)"/><text x="572.00" y="382.50"></text></g><g><title>0x7fb2abecdf24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="569" y="388" width="3" height="15" fill="rgb(210,219,31)"/><text x="572.00" y="398.50"></text></g><g><title>0x7fb2abee7fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (44 samples, 11.40%)</title><rect x="441" y="324" width="134" height="15" fill="rgb(230,30,9)"/><text x="444.00" y="334.50">0x7fb2abee7fa6 (..</text></g><g><title>0x7fb2abef7540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="572" y="340" width="3" height="15" fill="rgb(238,202,25)"/><text x="575.00" y="350.50"></text></g><g><title>0x7fb2abecc178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="572" y="356" width="3" height="15" fill="rgb(241,172,34)"/><text x="575.00" y="366.50"></text></g><g><title>0x7fb2abee8011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="575" y="324" width="3" height="15" fill="rgb(239,170,51)"/><text x="578.00" y="334.50"></text></g><g><title>0x7fb2d16c7dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="587" y="356" width="3" height="15" fill="rgb(254,151,22)"/><text x="590.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.26%)</title><rect x="590" y="356" width="3" height="15" fill="rgb(233,117,47)"/><text x="593.00" y="366.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="593" y="356" width="3" height="15" fill="rgb(237,166,14)"/><text x="596.00" y="366.50"></text></g><g><title>0x7fb2d2582d21 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="593" y="372" width="3" height="15" fill="rgb(219,229,22)"/><text x="596.00" y="382.50"></text></g><g><title>array_take (methods.c:138) (7 samples, 1.81%)</title><rect x="578" y="340" width="22" height="15" fill="rgb(228,17,37)"/><text x="581.00" y="350.50">a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(220,12,17)"/><text x="599.00" y="366.50"></text></g><g><title>0x7fb2abee805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.07%)</title><rect x="578" y="324" width="25" height="15" fill="rgb(208,78,28)"/><text x="581.00" y="334.50">0..</text></g><g><title>array_take (methods.c:145) (1 samples, 0.26%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(215,161,24)"/><text x="603.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.26%)</title><rect x="600" y="356" width="3" height="15" fill="rgb(245,225,19)"/><text x="603.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (1 samples, 0.26%)</title><rect x="600" y="372" width="3" height="15" fill="rgb(222,72,54)"/><text x="603.00" y="382.50"></text></g><g><title>0x7fb2abee814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(227,180,23)"/><text x="606.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.26%)</title><rect x="603" y="340" width="3" height="15" fill="rgb(238,15,47)"/><text x="606.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.26%)</title><rect x="603" y="356" width="3" height="15" fill="rgb(207,194,51)"/><text x="606.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.26%)</title><rect x="603" y="372" width="3" height="15" fill="rgb(249,116,36)"/><text x="606.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c:273) (1 samples, 0.26%)</title><rect x="603" y="388" width="3" height="15" fill="rgb(222,210,29)"/><text x="606.00" y="398.50"></text></g><g><title>0x7fb2d16c6380 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="603" y="404" width="3" height="15" fill="rgb(253,92,46)"/><text x="606.00" y="414.50"></text></g><g><title>0x7fb2abee81bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="606" y="324" width="3" height="15" fill="rgb(234,29,46)"/><text x="609.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.26%)</title><rect x="606" y="340" width="3" height="15" fill="rgb(218,98,38)"/><text x="609.00" y="350.50"></text></g><g><title>0x7fb2d24c5124 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="606" y="356" width="3" height="15" fill="rgb(211,136,27)"/><text x="609.00" y="366.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (58 samples, 15.03%)</title><rect x="434" y="292" width="178" height="15" fill="rgb(217,12,5)"/><text x="437.00" y="302.50">predict (sklearn/tree/_..</text></g><g><title>0x7fb2abee8d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (57 samples, 14.77%)</title><rect x="437" y="308" width="175" height="15" fill="rgb(222,46,47)"/><text x="440.00" y="318.50">0x7fb2abee8d2e (sklear..</text></g><g><title>0x7fb2abee8577 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="609" y="324" width="3" height="15" fill="rgb(230,154,28)"/><text x="612.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.26%)</title><rect x="612" y="292" width="3" height="15" fill="rgb(208,43,32)"/><text x="615.00" y="302.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (78 samples, 20.21%)</title><rect x="379" y="276" width="239" height="15" fill="rgb(240,75,51)"/><text x="382.00" y="286.50">_accumulate_prediction (sklearn..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.26%)</title><rect x="615" y="292" width="3" height="15" fill="rgb(206,209,31)"/><text x="618.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.26%)</title><rect x="615" y="308" width="3" height="15" fill="rgb(226,126,20)"/><text x="618.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.26%)</title><rect x="615" y="324" width="3" height="15" fill="rgb(240,53,4)"/><text x="618.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.26%)</title><rect x="621" y="308" width="3" height="15" fill="rgb(241,210,3)"/><text x="624.00" y="318.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1108) (1 samples, 0.26%)</title><rect x="621" y="324" width="3" height="15" fill="rgb(222,224,25)"/><text x="624.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.26%)</title><rect x="624" y="308" width="3" height="15" fill="rgb(227,11,47)"/><text x="627.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="624" y="324" width="3" height="15" fill="rgb(251,40,15)"/><text x="627.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1907) (1 samples, 0.26%)</title><rect x="624" y="340" width="3" height="15" fill="rgb(222,156,36)"/><text x="627.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.26%)</title><rect x="627" y="324" width="3" height="15" fill="rgb(246,84,51)"/><text x="630.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.26%)</title><rect x="627" y="340" width="3" height="15" fill="rgb(254,212,16)"/><text x="630.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.26%)</title><rect x="627" y="356" width="3" height="15" fill="rgb(247,55,49)"/><text x="630.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.26%)</title><rect x="627" y="372" width="3" height="15" fill="rgb(233,194,8)"/><text x="630.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:399) (1 samples, 0.26%)</title><rect x="627" y="388" width="3" height="15" fill="rgb(254,138,45)"/><text x="630.00" y="398.50"></text></g><g><title>sub_128 (npy_extint128.h:185) (1 samples, 0.26%)</title><rect x="627" y="404" width="3" height="15" fill="rgb(212,216,4)"/><text x="630.00" y="414.50"></text></g><g><title>add_128 (npy_extint128.h:149) (1 samples, 0.26%)</title><rect x="627" y="420" width="3" height="15" fill="rgb(221,172,11)"/><text x="630.00" y="430.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.26%)</title><rect x="630" y="388" width="3" height="15" fill="rgb(253,123,29)"/><text x="633.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.30%)</title><rect x="621" y="292" width="15" height="15" fill="rgb(238,71,12)"/><text x="624.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (3 samples, 0.78%)</title><rect x="627" y="308" width="9" height="15" fill="rgb(233,56,52)"/><text x="630.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.52%)</title><rect x="630" y="324" width="6" height="15" fill="rgb(253,86,52)"/><text x="633.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.52%)</title><rect x="630" y="340" width="6" height="15" fill="rgb(216,119,10)"/><text x="633.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.52%)</title><rect x="630" y="356" width="6" height="15" fill="rgb(238,121,45)"/><text x="633.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.52%)</title><rect x="630" y="372" width="6" height="15" fill="rgb(214,115,34)"/><text x="633.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.26%)</title><rect x="633" y="388" width="3" height="15" fill="rgb(233,89,0)"/><text x="636.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.26%)</title><rect x="633" y="404" width="3" height="15" fill="rgb(207,223,13)"/><text x="636.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.26%)</title><rect x="636" y="292" width="3" height="15" fill="rgb(206,208,47)"/><text x="639.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:467) (1 samples, 0.26%)</title><rect x="636" y="308" width="3" height="15" fill="rgb(221,18,7)"/><text x="639.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (8 samples, 2.07%)</title><rect x="618" y="276" width="24" height="15" fill="rgb(224,170,50)"/><text x="621.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4776) (1 samples, 0.26%)</title><rect x="639" y="292" width="3" height="15" fill="rgb(207,80,40)"/><text x="642.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (88 samples, 22.80%)</title><rect x="376" y="260" width="269" height="15" fill="rgb(232,33,18)"/><text x="379.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.26%)</title><rect x="642" y="276" width="3" height="15" fill="rgb(248,67,48)"/><text x="645.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.26%)</title><rect x="642" y="292" width="3" height="15" fill="rgb(216,74,30)"/><text x="645.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.26%)</title><rect x="642" y="308" width="3" height="15" fill="rgb(209,193,53)"/><text x="645.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.26%)</title><rect x="642" y="324" width="3" height="15" fill="rgb(205,76,12)"/><text x="645.00" y="334.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.26%)</title><rect x="642" y="340" width="3" height="15" fill="rgb(222,221,1)"/><text x="645.00" y="350.50"></text></g><g><title>0x7fb2d24a4f71 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="642" y="356" width="3" height="15" fill="rgb(228,192,38)"/><text x="645.00" y="366.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (103 samples, 26.68%)</title><rect x="340" y="212" width="315" height="15" fill="rgb(248,208,21)"/><text x="343.00" y="222.50">apply_async (joblib/_parallel_backends.py:..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (103 samples, 26.68%)</title><rect x="340" y="228" width="315" height="15" fill="rgb(217,219,17)"/><text x="343.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (95 samples, 24.61%)</title><rect x="364" y="244" width="291" height="15" fill="rgb(211,55,37)"/><text x="367.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (3 samples, 0.78%)</title><rect x="645" y="260" width="10" height="15" fill="rgb(247,157,17)"/><text x="648.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.26%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(240,23,51)"/><text x="654.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:202) (1 samples, 0.26%)</title><rect x="655" y="212" width="3" height="15" fill="rgb(238,157,49)"/><text x="658.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (2 samples, 0.52%)</title><rect x="661" y="228" width="6" height="15" fill="rgb(252,39,12)"/><text x="664.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.26%)</title><rect x="667" y="228" width="3" height="15" fill="rgb(232,2,4)"/><text x="670.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (2 samples, 0.52%)</title><rect x="670" y="228" width="6" height="15" fill="rgb(223,48,22)"/><text x="673.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.26%)</title><rect x="673" y="244" width="3" height="15" fill="rgb(233,101,28)"/><text x="676.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (178 samples, 46.11%)</title><rect x="144" y="164" width="544" height="15" fill="rgb(241,0,45)"/><text x="147.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (121 samples, 31.35%)</title><rect x="318" y="180" width="370" height="15" fill="rgb(238,124,47)"/><text x="321.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:753) (115 samples, 29.79%)</title><rect x="337" y="196" width="351" height="15" fill="rgb(236,58,0)"/><text x="340.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (10 samples, 2.59%)</title><rect x="658" y="212" width="30" height="15" fill="rgb(248,66,53)"/><text x="661.00" y="222.50">ap..</text></g><g><title>__call__ (joblib/parallel.py:338) (4 samples, 1.04%)</title><rect x="676" y="228" width="12" height="15" fill="rgb(226,109,23)"/><text x="679.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1015) (1 samples, 0.26%)</title><rect x="688" y="164" width="3" height="15" fill="rgb(253,190,44)"/><text x="691.00" y="174.50"></text></g><g><title>helper (contextlib.py:239) (1 samples, 0.26%)</title><rect x="688" y="180" width="3" height="15" fill="rgb(222,0,6)"/><text x="691.00" y="190.50"></text></g><g><title>__init__ (contextlib.py:82) (1 samples, 0.26%)</title><rect x="688" y="196" width="3" height="15" fill="rgb(217,9,35)"/><text x="691.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.26%)</title><rect x="691" y="164" width="3" height="15" fill="rgb(208,127,10)"/><text x="694.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.26%)</title><rect x="691" y="180" width="3" height="15" fill="rgb(246,39,28)"/><text x="694.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:54) (186 samples, 48.19%)</title><rect x="129" y="52" width="568" height="15" fill="rgb(227,112,47)"/><text x="132.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:53) (186 samples, 48.19%)</title><rect x="129" y="68" width="568" height="15" fill="rgb(240,149,29)"/><text x="132.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37) (185 samples, 47.93%)</title><rect x="132" y="84" width="565" height="15" fill="rgb(228,141,15)"/><text x="135.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31) (185 samples, 47.93%)</title><rect x="132" y="100" width="565" height="15" fill="rgb(232,92,5)"/><text x="135.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (185 samples, 47.93%)</title><rect x="132" y="116" width="565" height="15" fill="rgb(220,85,11)"/><text x="135.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (185 samples, 47.93%)</title><rect x="132" y="132" width="565" height="15" fill="rgb(206,140,43)"/><text x="135.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (183 samples, 47.41%)</title><rect x="138" y="148" width="559" height="15" fill="rgb(240,226,36)"/><text x="141.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:949) (1 samples, 0.26%)</title><rect x="694" y="164" width="3" height="15" fill="rgb(237,194,3)"/><text x="697.00" y="174.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:722) (1 samples, 0.26%)</title><rect x="694" y="180" width="3" height="15" fill="rgb(233,226,17)"/><text x="697.00" y="190.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:709) (1 samples, 0.26%)</title><rect x="694" y="196" width="3" height="15" fill="rgb(246,170,10)"/><text x="697.00" y="206.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:30) (1 samples, 0.26%)</title><rect x="697" y="100" width="3" height="15" fill="rgb(229,183,11)"/><text x="700.00" y="110.50"></text></g><g><title>0x7fb292f3d54f (?) (1 samples, 0.26%)</title><rect x="700" y="244" width="3" height="15" fill="rgb(253,78,14)"/><text x="703.00" y="254.50"></text></g><g><title>0x7fb292f4365e (?) (1 samples, 0.26%)</title><rect x="700" y="260" width="3" height="15" fill="rgb(220,90,0)"/><text x="703.00" y="270.50"></text></g><g><title>0x7fb292f4350f (?) (1 samples, 0.26%)</title><rect x="700" y="276" width="3" height="15" fill="rgb(207,158,36)"/><text x="703.00" y="286.50"></text></g><g><title>0x7fb292f49d6c (?) (1 samples, 0.26%)</title><rect x="700" y="292" width="3" height="15" fill="rgb(227,226,34)"/><text x="703.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="700" y="308" width="3" height="15" fill="rgb(217,36,48)"/><text x="703.00" y="318.50"></text></g><g><title>0x7fb292f2e27c (?) (1 samples, 0.26%)</title><rect x="700" y="324" width="3" height="15" fill="rgb(240,92,48)"/><text x="703.00" y="334.50"></text></g><g><title>0x7fb292f2d59d (?) (1 samples, 0.26%)</title><rect x="700" y="340" width="3" height="15" fill="rgb(214,216,13)"/><text x="703.00" y="350.50"></text></g><g><title>0x7fb29c46bea9 (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="703" y="484" width="3" height="15" fill="rgb(213,195,50)"/><text x="706.00" y="494.50"></text></g><g><title>0x7fb29c46beab (libgomp.so.1.0.0) (2 samples, 0.52%)</title><rect x="706" y="484" width="7" height="15" fill="rgb(227,138,2)"/><text x="709.00" y="494.50"></text></g><g><title>0x7fb29c46aab9 (libgomp.so.1.0.0) (4 samples, 1.04%)</title><rect x="703" y="468" width="13" height="15" fill="rgb(224,214,9)"/><text x="706.00" y="478.50"></text></g><g><title>0x7fb29c46bead (libgomp.so.1.0.0) (1 samples, 0.26%)</title><rect x="713" y="484" width="3" height="15" fill="rgb(250,147,48)"/><text x="716.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:471) (2 samples, 0.52%)</title><rect x="719" y="516" width="6" height="15" fill="rgb(242,16,33)"/><text x="722.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (2 samples, 0.52%)</title><rect x="725" y="516" width="6" height="15" fill="rgb(214,176,32)"/><text x="728.00" y="526.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1309) (1 samples, 0.26%)</title><rect x="731" y="548" width="3" height="15" fill="rgb(237,13,38)"/><text x="734.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:623) (1 samples, 0.26%)</title><rect x="731" y="564" width="3" height="15" fill="rgb(240,61,14)"/><text x="734.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1171) (1 samples, 0.26%)</title><rect x="731" y="580" width="3" height="15" fill="rgb(205,119,8)"/><text x="734.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (1 samples, 0.26%)</title><rect x="731" y="596" width="3" height="15" fill="rgb(231,84,6)"/><text x="734.00" y="606.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (3 samples, 0.78%)</title><rect x="734" y="580" width="9" height="15" fill="rgb(214,102,20)"/><text x="737.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1417) (3 samples, 0.78%)</title><rect x="743" y="580" width="9" height="15" fill="rgb(211,188,39)"/><text x="746.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (10 samples, 2.59%)</title><rect x="731" y="516" width="31" height="15" fill="rgb(253,21,26)"/><text x="734.00" y="526.50">Ru..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (10 samples, 2.59%)</title><rect x="731" y="532" width="31" height="15" fill="rgb(208,210,25)"/><text x="734.00" y="542.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (9 samples, 2.33%)</title><rect x="734" y="548" width="28" height="15" fill="rgb(212,178,3)"/><text x="737.00" y="558.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (9 samples, 2.33%)</title><rect x="734" y="564" width="28" height="15" fill="rgb(225,199,15)"/><text x="737.00" y="574.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (3 samples, 0.78%)</title><rect x="752" y="580" width="10" height="15" fill="rgb(232,111,45)"/><text x="755.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:560) (1 samples, 0.26%)</title><rect x="762" y="516" width="3" height="15" fill="rgb(244,22,15)"/><text x="765.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:61) (23 samples, 5.96%)</title><rect x="697" y="52" width="71" height="15" fill="rgb(229,221,9)"/><text x="700.00" y="62.50">&lt;module&gt;..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:60) (23 samples, 5.96%)</title><rect x="697" y="68" width="71" height="15" fill="rgb(219,5,24)"/><text x="700.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37) (23 samples, 5.96%)</title><rect x="697" y="84" width="71" height="15" fill="rgb(216,168,45)"/><text x="700.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31) (22 samples, 5.70%)</title><rect x="700" y="100" width="68" height="15" fill="rgb(244,223,14)"/><text x="703.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (22 samples, 5.70%)</title><rect x="700" y="116" width="68" height="15" fill="rgb(229,228,31)"/><text x="703.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (22 samples, 5.70%)</title><rect x="700" y="132" width="68" height="15" fill="rgb(235,119,47)"/><text x="703.00" y="142.50">&lt;lambda..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (22 samples, 5.70%)</title><rect x="700" y="148" width="68" height="15" fill="rgb(231,68,10)"/><text x="703.00" y="158.50">run (ml..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (22 samples, 5.70%)</title><rect x="700" y="164" width="68" height="15" fill="rgb(237,183,24)"/><text x="703.00" y="174.50">_run_se..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (22 samples, 5.70%)</title><rect x="700" y="180" width="68" height="15" fill="rgb(232,187,51)"/><text x="703.00" y="190.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (22 samples, 5.70%)</title><rect x="700" y="196" width="68" height="15" fill="rgb(215,8,8)"/><text x="703.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (22 samples, 5.70%)</title><rect x="700" y="212" width="68" height="15" fill="rgb(253,2,3)"/><text x="703.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (22 samples, 5.70%)</title><rect x="700" y="228" width="68" height="15" fill="rgb(232,158,33)"/><text x="703.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (21 samples, 5.44%)</title><rect x="703" y="244" width="65" height="15" fill="rgb(209,29,30)"/><text x="706.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (21 samples, 5.44%)</title><rect x="703" y="260" width="65" height="15" fill="rgb(251,122,0)"/><text x="706.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (21 samples, 5.44%)</title><rect x="703" y="276" width="65" height="15" fill="rgb(210,212,4)"/><text x="706.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (21 samples, 5.44%)</title><rect x="703" y="292" width="65" height="15" fill="rgb(254,187,48)"/><text x="706.00" y="302.50">pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (21 samples, 5.44%)</title><rect x="703" y="308" width="65" height="15" fill="rgb(206,101,14)"/><text x="706.00" y="318.50">pybind1..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (21 samples, 5.44%)</title><rect x="703" y="324" width="65" height="15" fill="rgb(214,213,53)"/><text x="706.00" y="334.50">pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (21 samples, 5.44%)</title><rect x="703" y="340" width="65" height="15" fill="rgb(226,23,30)"/><text x="706.00" y="350.50">pybind1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (21 samples, 5.44%)</title><rect x="703" y="356" width="65" height="15" fill="rgb(221,206,44)"/><text x="706.00" y="366.50">pybind1..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (21 samples, 5.44%)</title><rect x="703" y="372" width="65" height="15" fill="rgb(235,2,43)"/><text x="706.00" y="382.50">pybind1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (21 samples, 5.44%)</title><rect x="703" y="388" width="65" height="15" fill="rgb(219,148,7)"/><text x="706.00" y="398.50">pybind1..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (21 samples, 5.44%)</title><rect x="703" y="404" width="65" height="15" fill="rgb(240,81,2)"/><text x="706.00" y="414.50">pybind1..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (21 samples, 5.44%)</title><rect x="703" y="420" width="65" height="15" fill="rgb(215,132,33)"/><text x="706.00" y="430.50">Runtime..</text></g><g><title>pybind11::array::size (numpy.h:619) (21 samples, 5.44%)</title><rect x="703" y="436" width="65" height="15" fill="rgb(223,88,37)"/><text x="706.00" y="446.50">pybind1..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (21 samples, 5.44%)</title><rect x="703" y="452" width="65" height="15" fill="rgb(232,191,23)"/><text x="706.00" y="462.50">std::ac..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (17 samples, 4.40%)</title><rect x="716" y="468" width="52" height="15" fill="rgb(232,170,48)"/><text x="719.00" y="478.50">GOMP_..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (17 samples, 4.40%)</title><rect x="716" y="484" width="52" height="15" fill="rgb(253,86,29)"/><text x="719.00" y="494.50">Runti..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (16 samples, 4.15%)</title><rect x="719" y="500" width="49" height="15" fill="rgb(218,35,38)"/><text x="722.00" y="510.50">std:..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (1 samples, 0.26%)</title><rect x="765" y="516" width="3" height="15" fill="rgb(246,76,7)"/><text x="768.00" y="526.50"></text></g><g><title>0x7fb2924e2ff9 (?) (1 samples, 0.26%)</title><rect x="768" y="212" width="3" height="15" fill="rgb(207,1,12)"/><text x="771.00" y="222.50"></text></g><g><title>0x7fb2924ddef6 (?) (1 samples, 0.26%)</title><rect x="768" y="228" width="3" height="15" fill="rgb(225,188,25)"/><text x="771.00" y="238.50"></text></g><g><title>0x7fb2924d2962 (?) (1 samples, 0.26%)</title><rect x="768" y="244" width="3" height="15" fill="rgb(227,150,39)"/><text x="771.00" y="254.50"></text></g><g><title>0x7fb2925067a7 (?) (1 samples, 0.26%)</title><rect x="768" y="260" width="3" height="15" fill="rgb(222,203,25)"/><text x="771.00" y="270.50"></text></g><g><title>0x7fb292506379 (?) (1 samples, 0.26%)</title><rect x="768" y="276" width="3" height="15" fill="rgb(224,94,18)"/><text x="771.00" y="286.50"></text></g><g><title>0x7fb2929648b8 (?) (1 samples, 0.26%)</title><rect x="768" y="292" width="3" height="15" fill="rgb(214,16,14)"/><text x="771.00" y="302.50"></text></g><g><title>0x7fb292962c7f (?) (1 samples, 0.26%)</title><rect x="768" y="308" width="3" height="15" fill="rgb(251,215,24)"/><text x="771.00" y="318.50"></text></g><g><title>0x7fb29297599c (?) (1 samples, 0.26%)</title><rect x="768" y="324" width="3" height="15" fill="rgb(254,119,42)"/><text x="771.00" y="334.50"></text></g><g><title>0x7fb29269cdc2 (?) (1 samples, 0.26%)</title><rect x="768" y="340" width="3" height="15" fill="rgb(230,158,26)"/><text x="771.00" y="350.50"></text></g><g><title>0x7fb29269c668 (?) (1 samples, 0.26%)</title><rect x="768" y="356" width="3" height="15" fill="rgb(222,124,32)"/><text x="771.00" y="366.50"></text></g><g><title>all (386 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(237,112,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:68) (138 samples, 35.75%)</title><rect x="768" y="52" width="422" height="15" fill="rgb(245,119,36)"/><text x="771.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:67) (138 samples, 35.75%)</title><rect x="768" y="68" width="422" height="15" fill="rgb(236,75,49)"/><text x="771.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_reg_10..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37) (138 samples, 35.75%)</title><rect x="768" y="84" width="422" height="15" fill="rgb(219,140,5)"/><text x="771.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31) (138 samples, 35.75%)</title><rect x="768" y="100" width="422" height="15" fill="rgb(206,99,46)"/><text x="771.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_4..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (138 samples, 35.75%)</title><rect x="768" y="116" width="422" height="15" fill="rgb(245,188,29)"/><text x="771.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (138 samples, 35.75%)</title><rect x="768" y="132" width="422" height="15" fill="rgb(242,55,21)"/><text x="771.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (138 samples, 35.75%)</title><rect x="768" y="148" width="422" height="15" fill="rgb(220,207,25)"/><text x="771.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (138 samples, 35.75%)</title><rect x="768" y="164" width="422" height="15" fill="rgb(237,156,4)"/><text x="771.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:61..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (138 samples, 35.75%)</title><rect x="768" y="180" width="422" height="15" fill="rgb(238,205,51)"/><text x="771.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (138 samples, 35.75%)</title><rect x="768" y="196" width="422" height="15" fill="rgb(238,63,51)"/><text x="771.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="212" width="419" height="15" fill="rgb(211,174,11)"/><text x="774.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnx..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="228" width="419" height="15" fill="rgb(205,0,5)"/><text x="774.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyth..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="244" width="419" height="15" fill="rgb(218,130,28)"/><text x="774.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;):..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="260" width="419" height="15" fill="rgb(221,89,0)"/><text x="774.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="276" width="419" height="15" fill="rgb(229,193,6)"/><text x="774.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="292" width="419" height="15" fill="rgb(241,92,9)"/><text x="774.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="308" width="419" height="15" fill="rgb(218,173,11)"/><text x="774.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="324" width="419" height="15" fill="rgb(228,80,47)"/><text x="774.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/cap..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 35.49%)</title><rect x="771" y="340" width="419" height="15" fill="rgb(254,10,16)"/><text x="774.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 34.72%)</title><rect x="780" y="356" width="410" height="15" fill="rgb(230,179,47)"/><text x="783.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessT..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.52%)</title><rect x="1183" y="372" width="7" height="15" fill="rgb(251,81,28)"/><text x="1186.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(250,158,12)"/><text x="1189.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="1186" y="404" width="4" height="15" fill="rgb(211,215,1)"/><text x="1189.00" y="414.50"></text></g></g></svg>