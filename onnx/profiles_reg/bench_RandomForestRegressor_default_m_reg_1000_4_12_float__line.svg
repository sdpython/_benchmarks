<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1782" onload="init(evt)" viewBox="0 0 1200 1782" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1782" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1765.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1765.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:1) (1 samples, 0.23%)</title><rect x="10" y="148" width="2" height="15" fill="rgb(242,94,22)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="10" y="164" width="2" height="15" fill="rgb(252,76,9)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="10" y="180" width="2" height="15" fill="rgb(238,205,15)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="10" y="196" width="2" height="15" fill="rgb(228,6,45)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="10" y="212" width="2" height="15" fill="rgb(248,139,24)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="10" y="228" width="2" height="15" fill="rgb(236,204,44)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.23%)</title><rect x="10" y="244" width="2" height="15" fill="rgb(248,126,29)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="10" y="260" width="2" height="15" fill="rgb(225,108,5)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="10" y="276" width="2" height="15" fill="rgb(225,117,43)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="10" y="292" width="2" height="15" fill="rgb(225,102,19)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="10" y="308" width="2" height="15" fill="rgb(231,12,12)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="10" y="324" width="2" height="15" fill="rgb(238,4,40)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="10" y="340" width="2" height="15" fill="rgb(250,128,2)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="10" y="356" width="2" height="15" fill="rgb(205,181,0)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:13) (1 samples, 0.23%)</title><rect x="10" y="372" width="2" height="15" fill="rgb(229,205,50)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="10" y="388" width="2" height="15" fill="rgb(208,143,20)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="10" y="404" width="2" height="15" fill="rgb(224,79,32)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="10" y="420" width="2" height="15" fill="rgb(209,51,21)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="10" y="436" width="2" height="15" fill="rgb(211,164,13)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="10" y="452" width="2" height="15" fill="rgb(252,207,48)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/shape_base.py:179) (1 samples, 0.23%)</title><rect x="10" y="468" width="2" height="15" fill="rgb(254,89,30)"/><text x="13.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.23%)</title><rect x="10" y="484" width="2" height="15" fill="rgb(205,48,54)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:8) (1 samples, 0.23%)</title><rect x="12" y="292" width="3" height="15" fill="rgb(209,150,12)"/><text x="15.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="12" y="308" width="3" height="15" fill="rgb(246,162,13)"/><text x="15.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="12" y="324" width="3" height="15" fill="rgb(205,81,52)"/><text x="15.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.23%)</title><rect x="12" y="340" width="3" height="15" fill="rgb(230,177,54)"/><text x="15.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.23%)</title><rect x="12" y="356" width="3" height="15" fill="rgb(213,182,34)"/><text x="15.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.23%)</title><rect x="12" y="372" width="3" height="15" fill="rgb(225,137,44)"/><text x="15.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="12" y="388" width="3" height="15" fill="rgb(219,215,49)"/><text x="15.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="404" width="3" height="15" fill="rgb(207,194,33)"/><text x="15.00" y="414.50"></text></g><g><title>0x7f7295311995 (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="420" width="3" height="15" fill="rgb(233,151,9)"/><text x="15.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="436" width="3" height="15" fill="rgb(247,29,50)"/><text x="15.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="452" width="3" height="15" fill="rgb(228,181,14)"/><text x="15.00" y="462.50"></text></g><g><title>0x7f7295311258 (libdl-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="468" width="3" height="15" fill="rgb(247,175,18)"/><text x="15.00" y="478.50"></text></g><g><title>0x7f729535ed7a (ld-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="484" width="3" height="15" fill="rgb(224,171,7)"/><text x="15.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="500" width="3" height="15" fill="rgb(231,51,22)"/><text x="15.00" y="510.50"></text></g><g><title>0x7f729535f345 (ld-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="516" width="3" height="15" fill="rgb(217,215,22)"/><text x="15.00" y="526.50"></text></g><g><title>0x7f7295357fec (ld-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="532" width="3" height="15" fill="rgb(223,178,34)"/><text x="15.00" y="542.50"></text></g><g><title>0x7f729535656b (ld-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="548" width="3" height="15" fill="rgb(229,102,48)"/><text x="15.00" y="558.50"></text></g><g><title>0x7f7295355c0d (ld-2.29.so) (1 samples, 0.23%)</title><rect x="12" y="564" width="3" height="15" fill="rgb(247,31,33)"/><text x="15.00" y="574.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.23%)</title><rect x="15" y="852" width="3" height="15" fill="rgb(228,16,54)"/><text x="18.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.23%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(242,80,25)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.23%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(221,66,42)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.23%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(231,177,18)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.23%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(210,180,53)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.23%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(236,174,49)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(209,227,6)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(251,28,13)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.23%)</title><rect x="15" y="980" width="3" height="15" fill="rgb(242,26,3)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.23%)</title><rect x="15" y="996" width="3" height="15" fill="rgb(220,157,14)"/><text x="18.00" y="1006.50"></text></g><g><title>activate (pkg_resources/__init__.py:2780) (1 samples, 0.23%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(248,183,54)"/><text x="21.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py:2895) (1 samples, 0.23%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(247,30,4)"/><text x="21.00" y="910.50"></text></g><g><title>dirname (posixpath.py:157) (1 samples, 0.23%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(214,98,53)"/><text x="21.00" y="926.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.23%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(253,92,47)"/><text x="24.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.23%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(218,152,47)"/><text x="24.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.23%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(219,167,6)"/><text x="24.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.70%)</title><rect x="18" y="852" width="8" height="15" fill="rgb(234,102,48)"/><text x="21.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.70%)</title><rect x="18" y="868" width="8" height="15" fill="rgb(222,96,16)"/><text x="21.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.47%)</title><rect x="21" y="884" width="5" height="15" fill="rgb(217,146,47)"/><text x="24.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.47%)</title><rect x="21" y="900" width="5" height="15" fill="rgb(244,78,30)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.47%)</title><rect x="21" y="916" width="5" height="15" fill="rgb(248,61,26)"/><text x="24.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.47%)</title><rect x="21" y="932" width="5" height="15" fill="rgb(253,191,25)"/><text x="24.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.47%)</title><rect x="21" y="948" width="5" height="15" fill="rgb(233,188,40)"/><text x="24.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.23%)</title><rect x="23" y="964" width="3" height="15" fill="rgb(222,211,12)"/><text x="26.00" y="974.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.23%)</title><rect x="23" y="980" width="3" height="15" fill="rgb(253,154,3)"/><text x="26.00" y="990.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 1.17%)</title><rect x="15" y="820" width="14" height="15" fill="rgb(219,212,26)"/><text x="18.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 1.17%)</title><rect x="15" y="836" width="14" height="15" fill="rgb(245,204,21)"/><text x="18.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.23%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(240,97,10)"/><text x="29.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.23%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(208,149,11)"/><text x="29.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.23%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(216,144,10)"/><text x="29.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.23%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(229,145,48)"/><text x="29.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(223,154,17)"/><text x="29.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.23%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(210,155,36)"/><text x="29.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.23%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(246,35,29)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:200) (1 samples, 0.23%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(238,227,39)"/><text x="29.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.23%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(250,144,54)"/><text x="29.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.23%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(232,224,48)"/><text x="29.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(236,42,34)"/><text x="29.00" y="1022.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(246,120,47)"/><text x="29.00" y="1038.50"></text></g><g><title>0x7f729508b214 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(205,212,0)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (7 samples, 1.64%)</title><rect x="12" y="148" width="20" height="15" fill="rgb(235,13,54)"/><text x="15.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.64%)</title><rect x="12" y="164" width="20" height="15" fill="rgb(217,116,19)"/><text x="15.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 1.64%)</title><rect x="12" y="180" width="20" height="15" fill="rgb(234,138,19)"/><text x="15.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.64%)</title><rect x="12" y="196" width="20" height="15" fill="rgb(226,182,27)"/><text x="15.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.64%)</title><rect x="12" y="212" width="20" height="15" fill="rgb(238,186,35)"/><text x="15.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.64%)</title><rect x="12" y="228" width="20" height="15" fill="rgb(225,222,30)"/><text x="15.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.64%)</title><rect x="12" y="244" width="20" height="15" fill="rgb(242,172,28)"/><text x="15.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.64%)</title><rect x="12" y="260" width="20" height="15" fill="rgb(205,151,16)"/><text x="15.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.64%)</title><rect x="12" y="276" width="20" height="15" fill="rgb(238,152,25)"/><text x="15.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 1.41%)</title><rect x="15" y="292" width="17" height="15" fill="rgb(244,39,10)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="15" y="308" width="17" height="15" fill="rgb(231,32,19)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="15" y="324" width="17" height="15" fill="rgb(233,102,27)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="15" y="340" width="17" height="15" fill="rgb(221,115,15)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="15" y="356" width="17" height="15" fill="rgb(224,117,9)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="15" y="372" width="17" height="15" fill="rgb(248,205,43)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 1.41%)</title><rect x="15" y="388" width="17" height="15" fill="rgb(222,16,19)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="15" y="404" width="17" height="15" fill="rgb(230,160,31)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="15" y="420" width="17" height="15" fill="rgb(224,78,5)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="15" y="436" width="17" height="15" fill="rgb(232,172,13)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="15" y="452" width="17" height="15" fill="rgb(219,40,25)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="15" y="468" width="17" height="15" fill="rgb(228,159,31)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 1.41%)</title><rect x="15" y="484" width="17" height="15" fill="rgb(225,65,44)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="15" y="500" width="17" height="15" fill="rgb(206,137,40)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="15" y="516" width="17" height="15" fill="rgb(226,107,39)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="15" y="532" width="17" height="15" fill="rgb(244,65,27)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="15" y="548" width="17" height="15" fill="rgb(222,98,28)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="15" y="564" width="17" height="15" fill="rgb(245,161,21)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 1.41%)</title><rect x="15" y="580" width="17" height="15" fill="rgb(242,201,8)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="15" y="596" width="17" height="15" fill="rgb(246,130,48)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 1.41%)</title><rect x="15" y="612" width="17" height="15" fill="rgb(250,60,51)"/><text x="18.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="15" y="628" width="17" height="15" fill="rgb(209,110,21)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="15" y="644" width="17" height="15" fill="rgb(247,82,13)"/><text x="18.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="15" y="660" width="17" height="15" fill="rgb(212,110,26)"/><text x="18.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="15" y="676" width="17" height="15" fill="rgb(252,70,0)"/><text x="18.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="15" y="692" width="17" height="15" fill="rgb(226,196,23)"/><text x="18.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="15" y="708" width="17" height="15" fill="rgb(243,11,8)"/><text x="18.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 1.41%)</title><rect x="15" y="724" width="17" height="15" fill="rgb(240,103,46)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="15" y="740" width="17" height="15" fill="rgb(242,34,33)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="15" y="756" width="17" height="15" fill="rgb(205,87,26)"/><text x="18.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="15" y="772" width="17" height="15" fill="rgb(222,159,18)"/><text x="18.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="15" y="788" width="17" height="15" fill="rgb(244,97,3)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="15" y="804" width="17" height="15" fill="rgb(242,119,40)"/><text x="18.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.23%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(228,49,25)"/><text x="32.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(226,176,18)"/><text x="32.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(215,194,21)"/><text x="32.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(242,218,13)"/><text x="32.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(219,125,20)"/><text x="32.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(228,32,3)"/><text x="32.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.23%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(207,222,34)"/><text x="32.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(215,168,54)"/><text x="32.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="948" width="3" height="15" fill="rgb(240,106,36)"/><text x="32.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.23%)</title><rect x="29" y="964" width="3" height="15" fill="rgb(238,197,13)"/><text x="32.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.23%)</title><rect x="29" y="980" width="3" height="15" fill="rgb(249,83,47)"/><text x="32.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.23%)</title><rect x="29" y="996" width="3" height="15" fill="rgb(251,160,26)"/><text x="32.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="29" y="1012" width="3" height="15" fill="rgb(240,68,41)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(246,135,42)"/><text x="32.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(205,161,3)"/><text x="32.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(221,151,34)"/><text x="32.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(210,178,53)"/><text x="32.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.23%)</title><rect x="29" y="1092" width="3" height="15" fill="rgb(218,13,1)"/><text x="32.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5589) (1 samples, 0.23%)</title><rect x="29" y="1108" width="3" height="15" fill="rgb(206,38,54)"/><text x="32.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.23%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(211,181,12)"/><text x="32.00" y="1134.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.23%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(247,115,8)"/><text x="32.00" y="1150.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.23%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(244,187,3)"/><text x="32.00" y="1166.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.23%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(244,70,36)"/><text x="32.00" y="1182.50"></text></g><g><title>_code (sre_compile.py:604) (1 samples, 0.23%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(223,53,27)"/><text x="32.00" y="1198.50"></text></g><g><title>_compile_info (sre_compile.py:555) (1 samples, 0.23%)</title><rect x="29" y="1204" width="3" height="15" fill="rgb(206,75,48)"/><text x="32.00" y="1214.50"></text></g><g><title>_get_charset_prefix (sre_compile.py:494) (1 samples, 0.23%)</title><rect x="29" y="1220" width="3" height="15" fill="rgb(213,34,27)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="32" y="180" width="2" height="15" fill="rgb(238,79,49)"/><text x="35.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="196" width="2" height="15" fill="rgb(213,135,21)"/><text x="35.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="212" width="2" height="15" fill="rgb(233,71,49)"/><text x="35.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(211,45,21)"/><text x="35.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="244" width="2" height="15" fill="rgb(238,22,49)"/><text x="35.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="260" width="2" height="15" fill="rgb(206,95,51)"/><text x="35.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="276" width="2" height="15" fill="rgb(221,171,5)"/><text x="35.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.23%)</title><rect x="32" y="292" width="2" height="15" fill="rgb(225,74,7)"/><text x="35.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="308" width="2" height="15" fill="rgb(217,26,20)"/><text x="35.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="324" width="2" height="15" fill="rgb(206,14,20)"/><text x="35.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="340" width="2" height="15" fill="rgb(228,122,54)"/><text x="35.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="356" width="2" height="15" fill="rgb(245,202,24)"/><text x="35.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="372" width="2" height="15" fill="rgb(227,125,39)"/><text x="35.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.23%)</title><rect x="32" y="388" width="2" height="15" fill="rgb(220,71,41)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="404" width="2" height="15" fill="rgb(223,109,22)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="420" width="2" height="15" fill="rgb(239,115,0)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="436" width="2" height="15" fill="rgb(238,206,26)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="452" width="2" height="15" fill="rgb(231,111,24)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="468" width="2" height="15" fill="rgb(254,220,53)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.23%)</title><rect x="32" y="484" width="2" height="15" fill="rgb(246,221,40)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="500" width="2" height="15" fill="rgb(249,136,27)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="516" width="2" height="15" fill="rgb(227,48,4)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="532" width="2" height="15" fill="rgb(206,68,20)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="548" width="2" height="15" fill="rgb(208,85,11)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="564" width="2" height="15" fill="rgb(235,160,49)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.23%)</title><rect x="32" y="580" width="2" height="15" fill="rgb(220,41,41)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="596" width="2" height="15" fill="rgb(217,169,45)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="612" width="2" height="15" fill="rgb(227,33,5)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="628" width="2" height="15" fill="rgb(207,94,43)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="644" width="2" height="15" fill="rgb(206,206,8)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="660" width="2" height="15" fill="rgb(237,63,25)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.23%)</title><rect x="32" y="676" width="2" height="15" fill="rgb(216,51,37)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="692" width="2" height="15" fill="rgb(244,185,22)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="708" width="2" height="15" fill="rgb(206,228,37)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="724" width="2" height="15" fill="rgb(215,30,38)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="740" width="2" height="15" fill="rgb(221,146,38)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="756" width="2" height="15" fill="rgb(231,108,35)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.23%)</title><rect x="32" y="772" width="2" height="15" fill="rgb(213,70,35)"/><text x="35.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="32" y="788" width="2" height="15" fill="rgb(238,87,34)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="804" width="2" height="15" fill="rgb(227,66,20)"/><text x="35.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="820" width="2" height="15" fill="rgb(244,32,51)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="836" width="2" height="15" fill="rgb(253,188,33)"/><text x="35.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="852" width="2" height="15" fill="rgb(219,120,30)"/><text x="35.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="868" width="2" height="15" fill="rgb(247,38,39)"/><text x="35.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="884" width="2" height="15" fill="rgb(227,144,21)"/><text x="35.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.23%)</title><rect x="32" y="900" width="2" height="15" fill="rgb(212,37,11)"/><text x="35.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.23%)</title><rect x="32" y="916" width="2" height="15" fill="rgb(205,6,46)"/><text x="35.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="932" width="2" height="15" fill="rgb(248,9,14)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="32" y="948" width="2" height="15" fill="rgb(247,11,2)"/><text x="35.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="32" y="964" width="2" height="15" fill="rgb(252,168,37)"/><text x="35.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="32" y="980" width="2" height="15" fill="rgb(234,88,35)"/><text x="35.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="32" y="996" width="2" height="15" fill="rgb(245,119,2)"/><text x="35.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="32" y="1012" width="2" height="15" fill="rgb(214,49,24)"/><text x="35.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:6849) (1 samples, 0.23%)</title><rect x="32" y="1028" width="2" height="15" fill="rgb(226,32,7)"/><text x="35.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.23%)</title><rect x="32" y="1044" width="2" height="15" fill="rgb(252,46,48)"/><text x="35.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:732) (1 samples, 0.23%)</title><rect x="32" y="1060" width="2" height="15" fill="rgb(245,34,17)"/><text x="35.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py:64) (1 samples, 0.23%)</title><rect x="32" y="1076" width="2" height="15" fill="rgb(231,65,17)"/><text x="35.00" y="1086.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.23%)</title><rect x="32" y="1092" width="2" height="15" fill="rgb(205,212,54)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (2 samples, 0.47%)</title><rect x="32" y="148" width="5" height="15" fill="rgb(235,212,11)"/><text x="35.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="32" y="164" width="5" height="15" fill="rgb(219,98,45)"/><text x="35.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="34" y="180" width="3" height="15" fill="rgb(205,218,7)"/><text x="37.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="34" y="196" width="3" height="15" fill="rgb(206,126,0)"/><text x="37.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="34" y="212" width="3" height="15" fill="rgb(209,113,26)"/><text x="37.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="34" y="228" width="3" height="15" fill="rgb(230,91,1)"/><text x="37.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.23%)</title><rect x="34" y="244" width="3" height="15" fill="rgb(231,28,13)"/><text x="37.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="34" y="260" width="3" height="15" fill="rgb(213,156,34)"/><text x="37.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="34" y="276" width="3" height="15" fill="rgb(216,208,24)"/><text x="37.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="34" y="292" width="3" height="15" fill="rgb(224,6,3)"/><text x="37.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="34" y="308" width="3" height="15" fill="rgb(236,170,54)"/><text x="37.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="34" y="324" width="3" height="15" fill="rgb(215,185,23)"/><text x="37.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.23%)</title><rect x="34" y="340" width="3" height="15" fill="rgb(209,178,5)"/><text x="37.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="34" y="356" width="3" height="15" fill="rgb(252,45,45)"/><text x="37.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="34" y="372" width="3" height="15" fill="rgb(245,19,2)"/><text x="37.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="34" y="388" width="3" height="15" fill="rgb(226,173,29)"/><text x="37.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="34" y="404" width="3" height="15" fill="rgb(213,72,9)"/><text x="37.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="34" y="420" width="3" height="15" fill="rgb(211,92,17)"/><text x="37.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:80) (1 samples, 0.23%)</title><rect x="34" y="436" width="3" height="15" fill="rgb(252,119,51)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="34" y="452" width="3" height="15" fill="rgb(227,200,53)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="34" y="468" width="3" height="15" fill="rgb(214,156,47)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="34" y="484" width="3" height="15" fill="rgb(231,50,13)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="34" y="500" width="3" height="15" fill="rgb(235,215,39)"/><text x="37.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.23%)</title><rect x="34" y="516" width="3" height="15" fill="rgb(228,11,4)"/><text x="37.00" y="526.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:463) (1 samples, 0.23%)</title><rect x="34" y="532" width="3" height="15" fill="rgb(214,99,6)"/><text x="37.00" y="542.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;:53) (1 samples, 0.23%)</title><rect x="34" y="548" width="3" height="15" fill="rgb(213,201,44)"/><text x="37.00" y="558.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.23%)</title><rect x="37" y="244" width="3" height="15" fill="rgb(214,1,36)"/><text x="40.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="260" width="3" height="15" fill="rgb(223,59,28)"/><text x="40.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="276" width="3" height="15" fill="rgb(219,178,44)"/><text x="40.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="292" width="3" height="15" fill="rgb(214,58,9)"/><text x="40.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="308" width="3" height="15" fill="rgb(220,121,28)"/><text x="40.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="324" width="3" height="15" fill="rgb(219,133,15)"/><text x="40.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.23%)</title><rect x="37" y="340" width="3" height="15" fill="rgb(241,49,33)"/><text x="40.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="356" width="3" height="15" fill="rgb(206,217,27)"/><text x="40.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="37" y="372" width="3" height="15" fill="rgb(210,176,35)"/><text x="40.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="388" width="3" height="15" fill="rgb(219,37,25)"/><text x="40.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="404" width="3" height="15" fill="rgb(241,73,39)"/><text x="40.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="420" width="3" height="15" fill="rgb(213,23,10)"/><text x="40.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="436" width="3" height="15" fill="rgb(221,204,17)"/><text x="40.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="452" width="3" height="15" fill="rgb(244,105,41)"/><text x="40.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="468" width="3" height="15" fill="rgb(223,173,0)"/><text x="40.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.23%)</title><rect x="37" y="484" width="3" height="15" fill="rgb(214,36,50)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="500" width="3" height="15" fill="rgb(244,6,45)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="516" width="3" height="15" fill="rgb(247,6,24)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="532" width="3" height="15" fill="rgb(241,209,18)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="548" width="3" height="15" fill="rgb(253,182,35)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="564" width="3" height="15" fill="rgb(241,113,43)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.23%)</title><rect x="37" y="580" width="3" height="15" fill="rgb(216,134,3)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="596" width="3" height="15" fill="rgb(207,188,3)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="37" y="612" width="3" height="15" fill="rgb(231,107,0)"/><text x="40.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="628" width="3" height="15" fill="rgb(237,228,22)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="644" width="3" height="15" fill="rgb(236,219,54)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="660" width="3" height="15" fill="rgb(254,194,53)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="676" width="3" height="15" fill="rgb(222,136,47)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="692" width="3" height="15" fill="rgb(222,90,10)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="708" width="3" height="15" fill="rgb(208,25,39)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.23%)</title><rect x="37" y="724" width="3" height="15" fill="rgb(231,212,24)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="740" width="3" height="15" fill="rgb(250,153,16)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="756" width="3" height="15" fill="rgb(214,107,39)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="772" width="3" height="15" fill="rgb(225,168,9)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="788" width="3" height="15" fill="rgb(236,99,7)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="804" width="3" height="15" fill="rgb(217,149,49)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.23%)</title><rect x="37" y="820" width="3" height="15" fill="rgb(219,182,47)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="836" width="3" height="15" fill="rgb(230,203,41)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="852" width="3" height="15" fill="rgb(213,163,29)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="868" width="3" height="15" fill="rgb(248,184,11)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="884" width="3" height="15" fill="rgb(227,78,5)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(252,202,41)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.23%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(229,29,16)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="932" width="3" height="15" fill="rgb(240,147,46)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.23%)</title><rect x="37" y="948" width="3" height="15" fill="rgb(254,93,43)"/><text x="40.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="964" width="3" height="15" fill="rgb(235,218,26)"/><text x="40.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="980" width="3" height="15" fill="rgb(243,165,37)"/><text x="40.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="996" width="3" height="15" fill="rgb(214,221,18)"/><text x="40.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="1012" width="3" height="15" fill="rgb(206,217,52)"/><text x="40.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="1028" width="3" height="15" fill="rgb(242,65,33)"/><text x="40.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="1044" width="3" height="15" fill="rgb(249,198,15)"/><text x="40.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:11) (1 samples, 0.23%)</title><rect x="37" y="1060" width="3" height="15" fill="rgb(222,152,47)"/><text x="40.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="1076" width="3" height="15" fill="rgb(214,145,46)"/><text x="40.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="1092" width="3" height="15" fill="rgb(251,28,34)"/><text x="40.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="1108" width="3" height="15" fill="rgb(234,129,22)"/><text x="40.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="37" y="1124" width="3" height="15" fill="rgb(247,64,21)"/><text x="40.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="37" y="1140" width="3" height="15" fill="rgb(249,123,53)"/><text x="40.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py:6) (1 samples, 0.23%)</title><rect x="37" y="1156" width="3" height="15" fill="rgb(244,225,13)"/><text x="40.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="37" y="1172" width="3" height="15" fill="rgb(231,48,28)"/><text x="40.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="37" y="1188" width="3" height="15" fill="rgb(226,40,26)"/><text x="40.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="37" y="1204" width="3" height="15" fill="rgb(238,125,37)"/><text x="40.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="37" y="1220" width="3" height="15" fill="rgb(216,82,1)"/><text x="40.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.23%)</title><rect x="37" y="1236" width="3" height="15" fill="rgb(237,1,42)"/><text x="40.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.23%)</title><rect x="37" y="1252" width="3" height="15" fill="rgb(211,170,52)"/><text x="40.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.23%)</title><rect x="40" y="340" width="3" height="15" fill="rgb(233,23,48)"/><text x="43.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="356" width="3" height="15" fill="rgb(230,108,39)"/><text x="43.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="372" width="3" height="15" fill="rgb(230,65,4)"/><text x="43.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="388" width="3" height="15" fill="rgb(247,192,50)"/><text x="43.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="404" width="3" height="15" fill="rgb(247,77,1)"/><text x="43.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="420" width="3" height="15" fill="rgb(251,207,16)"/><text x="43.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:22) (1 samples, 0.23%)</title><rect x="40" y="436" width="3" height="15" fill="rgb(254,108,4)"/><text x="43.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="452" width="3" height="15" fill="rgb(223,154,25)"/><text x="43.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="468" width="3" height="15" fill="rgb(217,55,50)"/><text x="43.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="484" width="3" height="15" fill="rgb(218,30,34)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="500" width="3" height="15" fill="rgb(238,40,38)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="516" width="3" height="15" fill="rgb(225,79,5)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py:30) (1 samples, 0.23%)</title><rect x="40" y="532" width="3" height="15" fill="rgb(209,141,13)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="40" y="548" width="3" height="15" fill="rgb(245,125,14)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="40" y="564" width="3" height="15" fill="rgb(249,79,9)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="40" y="580" width="3" height="15" fill="rgb(244,65,34)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="40" y="596" width="3" height="15" fill="rgb(245,28,24)"/><text x="43.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="40" y="612" width="3" height="15" fill="rgb(228,214,24)"/><text x="43.00" y="622.50"></text></g><g><title>&lt;module&gt; (tarfile.py:310) (1 samples, 0.23%)</title><rect x="40" y="628" width="3" height="15" fill="rgb(250,173,49)"/><text x="43.00" y="638.50"></text></g><g><title>_LowLevelFile (tarfile.py:328) (1 samples, 0.23%)</title><rect x="40" y="644" width="3" height="15" fill="rgb(249,144,22)"/><text x="43.00" y="654.50"></text></g><g><title>NDFrame (pandas/core/generic.py:9297) (1 samples, 0.23%)</title><rect x="43" y="1124" width="3" height="15" fill="rgb(242,162,21)"/><text x="46.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.23%)</title><rect x="43" y="1140" width="3" height="15" fill="rgb(223,176,11)"/><text x="46.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.23%)</title><rect x="43" y="1156" width="3" height="15" fill="rgb(233,211,4)"/><text x="46.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.23%)</title><rect x="43" y="1172" width="3" height="15" fill="rgb(246,70,53)"/><text x="46.00" y="1182.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1188" width="3" height="15" fill="rgb(229,106,31)"/><text x="46.00" y="1198.50"></text></g><g><title>0x7f729508c276 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1204" width="3" height="15" fill="rgb(238,28,10)"/><text x="46.00" y="1214.50"></text></g><g><title>0x7f72950a9f67 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="43" y="1220" width="3" height="15" fill="rgb(253,105,46)"/><text x="46.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.47%)</title><rect x="43" y="436" width="5" height="15" fill="rgb(218,223,17)"/><text x="46.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="452" width="5" height="15" fill="rgb(244,68,38)"/><text x="46.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="468" width="5" height="15" fill="rgb(247,86,37)"/><text x="46.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="484" width="5" height="15" fill="rgb(214,197,31)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="500" width="5" height="15" fill="rgb(253,74,28)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="516" width="5" height="15" fill="rgb(220,1,25)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.47%)</title><rect x="43" y="532" width="5" height="15" fill="rgb(245,154,24)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="548" width="5" height="15" fill="rgb(214,70,39)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="564" width="5" height="15" fill="rgb(236,210,53)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="580" width="5" height="15" fill="rgb(210,145,29)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="596" width="5" height="15" fill="rgb(208,122,33)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="612" width="5" height="15" fill="rgb(220,83,8)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.47%)</title><rect x="43" y="628" width="5" height="15" fill="rgb(215,69,19)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="644" width="5" height="15" fill="rgb(212,176,3)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="660" width="5" height="15" fill="rgb(220,135,34)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="676" width="5" height="15" fill="rgb(240,74,52)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="692" width="5" height="15" fill="rgb(216,24,28)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="708" width="5" height="15" fill="rgb(230,166,38)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.47%)</title><rect x="43" y="724" width="5" height="15" fill="rgb(250,4,18)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="740" width="5" height="15" fill="rgb(216,218,14)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="756" width="5" height="15" fill="rgb(245,123,49)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="772" width="5" height="15" fill="rgb(246,62,24)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="788" width="5" height="15" fill="rgb(221,137,25)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="804" width="5" height="15" fill="rgb(221,111,51)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.47%)</title><rect x="43" y="820" width="5" height="15" fill="rgb(205,131,37)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="836" width="5" height="15" fill="rgb(237,171,51)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="852" width="5" height="15" fill="rgb(245,181,15)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="868" width="5" height="15" fill="rgb(247,172,0)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="884" width="5" height="15" fill="rgb(233,229,42)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="900" width="5" height="15" fill="rgb(235,141,45)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.47%)</title><rect x="43" y="916" width="5" height="15" fill="rgb(238,62,51)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="932" width="5" height="15" fill="rgb(247,149,41)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="948" width="5" height="15" fill="rgb(250,177,22)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="964" width="5" height="15" fill="rgb(208,51,52)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="980" width="5" height="15" fill="rgb(232,163,34)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="996" width="5" height="15" fill="rgb(212,120,50)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.47%)</title><rect x="43" y="1012" width="5" height="15" fill="rgb(208,114,0)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="43" y="1028" width="5" height="15" fill="rgb(251,187,41)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="43" y="1044" width="5" height="15" fill="rgb(226,162,48)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="43" y="1060" width="5" height="15" fill="rgb(222,206,26)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="43" y="1076" width="5" height="15" fill="rgb(206,29,30)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="43" y="1092" width="5" height="15" fill="rgb(222,224,20)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:123) (2 samples, 0.47%)</title><rect x="43" y="1108" width="5" height="15" fill="rgb(205,227,39)"/><text x="46.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py:9392) (1 samples, 0.23%)</title><rect x="46" y="1124" width="2" height="15" fill="rgb(209,125,16)"/><text x="49.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.23%)</title><rect x="46" y="1140" width="2" height="15" fill="rgb(246,131,0)"/><text x="49.00" y="1150.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.23%)</title><rect x="46" y="1156" width="2" height="15" fill="rgb(212,31,7)"/><text x="49.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.23%)</title><rect x="46" y="1172" width="2" height="15" fill="rgb(210,94,51)"/><text x="49.00" y="1182.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.23%)</title><rect x="46" y="1188" width="2" height="15" fill="rgb(253,165,8)"/><text x="49.00" y="1198.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.23%)</title><rect x="46" y="1204" width="2" height="15" fill="rgb(251,24,50)"/><text x="49.00" y="1214.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.23%)</title><rect x="48" y="1572" width="3" height="15" fill="rgb(251,192,15)"/><text x="51.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.23%)</title><rect x="48" y="1588" width="3" height="15" fill="rgb(244,196,24)"/><text x="51.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:40) (1 samples, 0.23%)</title><rect x="48" y="1604" width="3" height="15" fill="rgb(215,132,8)"/><text x="51.00" y="1614.50"></text></g><g><title>0x7f72833de3b1 (?) (1 samples, 0.23%)</title><rect x="48" y="1620" width="3" height="15" fill="rgb(221,166,53)"/><text x="51.00" y="1630.50"></text></g><g><title>0x7f72833de332 (?) (1 samples, 0.23%)</title><rect x="48" y="1636" width="3" height="15" fill="rgb(233,229,51)"/><text x="51.00" y="1646.50"></text></g><g><title>0x7f72834a3abb (?) (1 samples, 0.23%)</title><rect x="48" y="1652" width="3" height="15" fill="rgb(248,139,19)"/><text x="51.00" y="1662.50"></text></g><g><title>0x7f728348b5d8 (?) (1 samples, 0.23%)</title><rect x="48" y="1668" width="3" height="15" fill="rgb(245,63,34)"/><text x="51.00" y="1678.50"></text></g><g><title>0x7f72834883f5 (?) (1 samples, 0.23%)</title><rect x="48" y="1684" width="3" height="15" fill="rgb(225,71,44)"/><text x="51.00" y="1694.50"></text></g><g><title>0x7f728348eb2c (?) (1 samples, 0.23%)</title><rect x="48" y="1700" width="3" height="15" fill="rgb(220,5,40)"/><text x="51.00" y="1710.50"></text></g><g><title>0x7f728348d60d (?) (1 samples, 0.23%)</title><rect x="48" y="1716" width="3" height="15" fill="rgb(229,181,18)"/><text x="51.00" y="1726.50"></text></g><g><title>0x7f728348d4db (?) (1 samples, 0.23%)</title><rect x="48" y="1732" width="3" height="15" fill="rgb(236,150,3)"/><text x="51.00" y="1742.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.47%)</title><rect x="48" y="676" width="6" height="15" fill="rgb(244,39,23)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="692" width="6" height="15" fill="rgb(214,191,8)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="708" width="6" height="15" fill="rgb(218,144,38)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="724" width="6" height="15" fill="rgb(216,24,19)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="740" width="6" height="15" fill="rgb(232,215,13)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="756" width="6" height="15" fill="rgb(236,195,35)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.47%)</title><rect x="48" y="772" width="6" height="15" fill="rgb(214,74,50)"/><text x="51.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="788" width="6" height="15" fill="rgb(237,57,19)"/><text x="51.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="804" width="6" height="15" fill="rgb(227,112,31)"/><text x="51.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="820" width="6" height="15" fill="rgb(216,52,7)"/><text x="51.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="836" width="6" height="15" fill="rgb(224,191,25)"/><text x="51.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="852" width="6" height="15" fill="rgb(243,115,36)"/><text x="51.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.47%)</title><rect x="48" y="868" width="6" height="15" fill="rgb(215,144,44)"/><text x="51.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="884" width="6" height="15" fill="rgb(228,4,18)"/><text x="51.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.47%)</title><rect x="48" y="900" width="6" height="15" fill="rgb(253,82,42)"/><text x="51.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="916" width="6" height="15" fill="rgb(205,115,36)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="932" width="6" height="15" fill="rgb(208,58,23)"/><text x="51.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="948" width="6" height="15" fill="rgb(223,38,5)"/><text x="51.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="964" width="6" height="15" fill="rgb(237,33,34)"/><text x="51.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="980" width="6" height="15" fill="rgb(241,178,50)"/><text x="51.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="996" width="6" height="15" fill="rgb(248,190,14)"/><text x="51.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.47%)</title><rect x="48" y="1012" width="6" height="15" fill="rgb(229,142,48)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="1028" width="6" height="15" fill="rgb(243,84,31)"/><text x="51.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="1044" width="6" height="15" fill="rgb(226,57,29)"/><text x="51.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="1060" width="6" height="15" fill="rgb(214,226,48)"/><text x="51.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="1076" width="6" height="15" fill="rgb(238,148,54)"/><text x="51.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="1092" width="6" height="15" fill="rgb(248,223,27)"/><text x="51.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.47%)</title><rect x="48" y="1108" width="6" height="15" fill="rgb(221,212,48)"/><text x="51.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="48" y="1124" width="6" height="15" fill="rgb(220,225,36)"/><text x="51.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="1140" width="6" height="15" fill="rgb(210,176,1)"/><text x="51.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="1156" width="6" height="15" fill="rgb(214,146,40)"/><text x="51.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="1172" width="6" height="15" fill="rgb(246,7,40)"/><text x="51.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="1188" width="6" height="15" fill="rgb(229,59,23)"/><text x="51.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="1204" width="6" height="15" fill="rgb(222,61,0)"/><text x="51.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="1220" width="6" height="15" fill="rgb(254,201,0)"/><text x="51.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.47%)</title><rect x="48" y="1236" width="6" height="15" fill="rgb(216,89,50)"/><text x="51.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.47%)</title><rect x="48" y="1252" width="6" height="15" fill="rgb(226,75,45)"/><text x="51.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="1268" width="6" height="15" fill="rgb(231,114,9)"/><text x="51.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="1284" width="6" height="15" fill="rgb(208,123,53)"/><text x="51.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="1300" width="6" height="15" fill="rgb(233,81,44)"/><text x="51.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="1316" width="6" height="15" fill="rgb(221,187,13)"/><text x="51.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="1332" width="6" height="15" fill="rgb(232,84,43)"/><text x="51.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="1348" width="6" height="15" fill="rgb(235,135,27)"/><text x="51.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.47%)</title><rect x="48" y="1364" width="6" height="15" fill="rgb(253,89,31)"/><text x="51.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.47%)</title><rect x="48" y="1380" width="6" height="15" fill="rgb(216,107,34)"/><text x="51.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.47%)</title><rect x="48" y="1396" width="6" height="15" fill="rgb(235,133,4)"/><text x="51.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.47%)</title><rect x="48" y="1412" width="6" height="15" fill="rgb(215,19,31)"/><text x="51.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.47%)</title><rect x="48" y="1428" width="6" height="15" fill="rgb(232,222,46)"/><text x="51.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.47%)</title><rect x="48" y="1444" width="6" height="15" fill="rgb(216,179,15)"/><text x="51.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.47%)</title><rect x="48" y="1460" width="6" height="15" fill="rgb(235,132,2)"/><text x="51.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.47%)</title><rect x="48" y="1476" width="6" height="15" fill="rgb(245,185,1)"/><text x="51.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.47%)</title><rect x="48" y="1492" width="6" height="15" fill="rgb(246,187,8)"/><text x="51.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.47%)</title><rect x="48" y="1508" width="6" height="15" fill="rgb(212,0,11)"/><text x="51.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.47%)</title><rect x="48" y="1524" width="6" height="15" fill="rgb(214,63,24)"/><text x="51.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.47%)</title><rect x="48" y="1540" width="6" height="15" fill="rgb(216,162,12)"/><text x="51.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.47%)</title><rect x="48" y="1556" width="6" height="15" fill="rgb(205,182,34)"/><text x="51.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.23%)</title><rect x="51" y="1572" width="3" height="15" fill="rgb(209,51,5)"/><text x="54.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.23%)</title><rect x="51" y="1588" width="3" height="15" fill="rgb(220,87,15)"/><text x="54.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.23%)</title><rect x="51" y="1604" width="3" height="15" fill="rgb(242,214,43)"/><text x="54.00" y="1614.50"></text></g><g><title>0x7f72833d76b3 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="51" y="1620" width="3" height="15" fill="rgb(254,138,24)"/><text x="54.00" y="1630.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototype (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="51" y="1636" width="3" height="15" fill="rgb(221,3,17)"/><text x="54.00" y="1646.50"></text></g><g><title>google::protobuf::DynamicMessageFactory::GetPrototypeNoLock (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="51" y="1652" width="3" height="15" fill="rgb(226,87,26)"/><text x="54.00" y="1662.50"></text></g><g><title>google::protobuf::DescriptorPool::generated_pool (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="51" y="1668" width="3" height="15" fill="rgb(233,10,42)"/><text x="54.00" y="1678.50"></text></g><g><title>google::protobuf::internal::AssignDescriptors (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="51" y="1684" width="3" height="15" fill="rgb(228,219,12)"/><text x="54.00" y="1694.50"></text></g><g><title>__tls_get_addr (ld-2.29.so) (1 samples, 0.23%)</title><rect x="51" y="1700" width="3" height="15" fill="rgb(231,49,11)"/><text x="54.00" y="1710.50"></text></g><g><title>0x7f729535e4dc (ld-2.29.so) (1 samples, 0.23%)</title><rect x="51" y="1716" width="3" height="15" fill="rgb(238,55,17)"/><text x="54.00" y="1726.50"></text></g><g><title>0x7f729535e2d9 (ld-2.29.so) (1 samples, 0.23%)</title><rect x="51" y="1732" width="3" height="15" fill="rgb(212,215,43)"/><text x="54.00" y="1742.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:4) (17 samples, 3.99%)</title><rect x="10" y="52" width="47" height="15" fill="rgb(215,171,53)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (17 samples, 3.99%)</title><rect x="10" y="68" width="47" height="15" fill="rgb(241,35,26)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (17 samples, 3.99%)</title><rect x="10" y="84" width="47" height="15" fill="rgb(224,48,50)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (17 samples, 3.99%)</title><rect x="10" y="100" width="47" height="15" fill="rgb(234,29,42)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (17 samples, 3.99%)</title><rect x="10" y="116" width="47" height="15" fill="rgb(237,222,53)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (17 samples, 3.99%)</title><rect x="10" y="132" width="47" height="15" fill="rgb(238,83,14)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (7 samples, 1.64%)</title><rect x="37" y="148" width="20" height="15" fill="rgb(230,68,5)"/><text x="40.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 1.64%)</title><rect x="37" y="164" width="20" height="15" fill="rgb(212,101,8)"/><text x="40.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 1.64%)</title><rect x="37" y="180" width="20" height="15" fill="rgb(218,34,40)"/><text x="40.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 1.64%)</title><rect x="37" y="196" width="20" height="15" fill="rgb(208,43,11)"/><text x="40.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 1.64%)</title><rect x="37" y="212" width="20" height="15" fill="rgb(249,12,22)"/><text x="40.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 1.64%)</title><rect x="37" y="228" width="20" height="15" fill="rgb(247,189,45)"/><text x="40.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 1.41%)</title><rect x="40" y="244" width="17" height="15" fill="rgb(218,204,21)"/><text x="43.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 1.41%)</title><rect x="40" y="260" width="17" height="15" fill="rgb(252,163,11)"/><text x="43.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 1.41%)</title><rect x="40" y="276" width="17" height="15" fill="rgb(212,149,52)"/><text x="43.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 1.41%)</title><rect x="40" y="292" width="17" height="15" fill="rgb(251,197,19)"/><text x="43.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 1.41%)</title><rect x="40" y="308" width="17" height="15" fill="rgb(246,196,32)"/><text x="43.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 1.41%)</title><rect x="40" y="324" width="17" height="15" fill="rgb(242,118,18)"/><text x="43.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 1.17%)</title><rect x="43" y="340" width="14" height="15" fill="rgb(234,28,25)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.17%)</title><rect x="43" y="356" width="14" height="15" fill="rgb(241,138,17)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.17%)</title><rect x="43" y="372" width="14" height="15" fill="rgb(235,9,51)"/><text x="46.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.17%)</title><rect x="43" y="388" width="14" height="15" fill="rgb(237,100,2)"/><text x="46.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.17%)</title><rect x="43" y="404" width="14" height="15" fill="rgb(215,211,5)"/><text x="46.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.17%)</title><rect x="43" y="420" width="14" height="15" fill="rgb(215,219,31)"/><text x="46.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.70%)</title><rect x="48" y="436" width="9" height="15" fill="rgb(240,181,1)"/><text x="51.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.70%)</title><rect x="48" y="452" width="9" height="15" fill="rgb(251,121,36)"/><text x="51.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.70%)</title><rect x="48" y="468" width="9" height="15" fill="rgb(205,36,31)"/><text x="51.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.70%)</title><rect x="48" y="484" width="9" height="15" fill="rgb(221,107,43)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.70%)</title><rect x="48" y="500" width="9" height="15" fill="rgb(214,16,53)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.70%)</title><rect x="48" y="516" width="9" height="15" fill="rgb(210,40,50)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.70%)</title><rect x="48" y="532" width="9" height="15" fill="rgb(211,168,7)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.70%)</title><rect x="48" y="548" width="9" height="15" fill="rgb(227,59,17)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.70%)</title><rect x="48" y="564" width="9" height="15" fill="rgb(214,44,21)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.70%)</title><rect x="48" y="580" width="9" height="15" fill="rgb(240,146,28)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.70%)</title><rect x="48" y="596" width="9" height="15" fill="rgb(243,184,40)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.70%)</title><rect x="48" y="612" width="9" height="15" fill="rgb(214,152,16)"/><text x="51.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.70%)</title><rect x="48" y="628" width="9" height="15" fill="rgb(237,102,30)"/><text x="51.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.70%)</title><rect x="48" y="644" width="9" height="15" fill="rgb(252,22,4)"/><text x="51.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.70%)</title><rect x="48" y="660" width="9" height="15" fill="rgb(228,126,18)"/><text x="51.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:20) (1 samples, 0.23%)</title><rect x="54" y="676" width="3" height="15" fill="rgb(212,65,0)"/><text x="57.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="54" y="692" width="3" height="15" fill="rgb(210,118,26)"/><text x="57.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="54" y="708" width="3" height="15" fill="rgb(235,223,16)"/><text x="57.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="54" y="724" width="3" height="15" fill="rgb(220,212,34)"/><text x="57.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="54" y="740" width="3" height="15" fill="rgb(240,151,54)"/><text x="57.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="54" y="756" width="3" height="15" fill="rgb(254,180,28)"/><text x="57.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate_problems.py:57) (1 samples, 0.23%)</title><rect x="54" y="772" width="3" height="15" fill="rgb(227,168,44)"/><text x="57.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="54" y="788" width="3" height="15" fill="rgb(229,79,31)"/><text x="57.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="54" y="804" width="3" height="15" fill="rgb(215,22,1)"/><text x="57.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="54" y="820" width="3" height="15" fill="rgb(213,34,15)"/><text x="57.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.23%)</title><rect x="54" y="836" width="3" height="15" fill="rgb(252,205,12)"/><text x="57.00" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:827) (1 samples, 0.23%)</title><rect x="54" y="852" width="3" height="15" fill="rgb(234,133,51)"/><text x="57.00" y="862.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;:463) (1 samples, 0.23%)</title><rect x="54" y="868" width="3" height="15" fill="rgb(222,110,24)"/><text x="57.00" y="878.50"></text></g><g><title>_r_long (&lt;frozen importlib._bootstrap_external&gt;:53) (1 samples, 0.23%)</title><rect x="54" y="884" width="3" height="15" fill="rgb(224,26,54)"/><text x="57.00" y="894.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.23%)</title><rect x="57" y="164" width="2" height="15" fill="rgb(208,157,4)"/><text x="60.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.23%)</title><rect x="57" y="180" width="2" height="15" fill="rgb(244,43,30)"/><text x="60.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.23%)</title><rect x="57" y="196" width="2" height="15" fill="rgb(231,101,29)"/><text x="60.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.23%)</title><rect x="57" y="212" width="2" height="15" fill="rgb(231,129,51)"/><text x="60.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.23%)</title><rect x="57" y="228" width="2" height="15" fill="rgb(210,84,25)"/><text x="60.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.23%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(207,122,35)"/><text x="60.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.23%)</title><rect x="57" y="260" width="2" height="15" fill="rgb(241,109,37)"/><text x="60.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.23%)</title><rect x="57" y="276" width="2" height="15" fill="rgb(237,141,21)"/><text x="60.00" y="286.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (2 samples, 0.47%)</title><rect x="57" y="116" width="5" height="15" fill="rgb(253,53,16)"/><text x="60.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (2 samples, 0.47%)</title><rect x="57" y="132" width="5" height="15" fill="rgb(234,17,38)"/><text x="60.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (2 samples, 0.47%)</title><rect x="57" y="148" width="5" height="15" fill="rgb(253,10,15)"/><text x="60.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:77) (1 samples, 0.23%)</title><rect x="59" y="164" width="3" height="15" fill="rgb(216,223,6)"/><text x="62.00" y="174.50"></text></g><g><title>set_params (sklearn/base.py:227) (1 samples, 0.23%)</title><rect x="59" y="180" width="3" height="15" fill="rgb(248,200,21)"/><text x="62.00" y="190.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.23%)</title><rect x="59" y="196" width="3" height="15" fill="rgb(220,128,18)"/><text x="62.00" y="206.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.23%)</title><rect x="59" y="212" width="3" height="15" fill="rgb(243,36,13)"/><text x="62.00" y="222.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.23%)</title><rect x="59" y="228" width="3" height="15" fill="rgb(240,28,53)"/><text x="62.00" y="238.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.23%)</title><rect x="59" y="244" width="3" height="15" fill="rgb(235,198,40)"/><text x="62.00" y="254.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.23%)</title><rect x="59" y="260" width="3" height="15" fill="rgb(218,210,50)"/><text x="62.00" y="270.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.23%)</title><rect x="59" y="276" width="3" height="15" fill="rgb(213,56,27)"/><text x="62.00" y="286.50"></text></g><g><title>__init__ (inspect.py:2472) (1 samples, 0.23%)</title><rect x="59" y="292" width="3" height="15" fill="rgb(220,169,48)"/><text x="62.00" y="302.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:40) (3 samples, 0.70%)</title><rect x="57" y="52" width="8" height="15" fill="rgb(238,54,2)"/><text x="60.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:11) (3 samples, 0.70%)</title><rect x="57" y="68" width="8" height="15" fill="rgb(253,209,35)"/><text x="60.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (3 samples, 0.70%)</title><rect x="57" y="84" width="8" height="15" fill="rgb(224,26,39)"/><text x="60.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.70%)</title><rect x="57" y="100" width="8" height="15" fill="rgb(246,170,13)"/><text x="60.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (1 samples, 0.23%)</title><rect x="62" y="116" width="3" height="15" fill="rgb(229,171,42)"/><text x="65.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (1 samples, 0.23%)</title><rect x="62" y="132" width="3" height="15" fill="rgb(212,215,32)"/><text x="65.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.23%)</title><rect x="62" y="148" width="3" height="15" fill="rgb(225,68,6)"/><text x="65.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.23%)</title><rect x="62" y="164" width="3" height="15" fill="rgb(235,163,30)"/><text x="65.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.23%)</title><rect x="62" y="180" width="3" height="15" fill="rgb(238,44,17)"/><text x="65.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.23%)</title><rect x="62" y="196" width="3" height="15" fill="rgb(228,59,6)"/><text x="65.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.23%)</title><rect x="62" y="212" width="3" height="15" fill="rgb(208,133,35)"/><text x="65.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.23%)</title><rect x="62" y="228" width="3" height="15" fill="rgb(232,160,39)"/><text x="65.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (1 samples, 0.23%)</title><rect x="62" y="244" width="3" height="15" fill="rgb(236,221,33)"/><text x="65.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (1 samples, 0.23%)</title><rect x="62" y="260" width="3" height="15" fill="rgb(225,62,17)"/><text x="65.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (1 samples, 0.23%)</title><rect x="62" y="276" width="3" height="15" fill="rgb(235,161,47)"/><text x="65.00" y="286.50"></text></g><g><title>0x7f726eac1b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="62" y="292" width="3" height="15" fill="rgb(230,40,42)"/><text x="65.00" y="302.50"></text></g><g><title>0x7f726eaf310a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(209,25,0)"/><text x="65.00" y="318.50"></text></g><g><title>0x7f726ed1ed8c (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="62" y="324" width="3" height="15" fill="rgb(218,57,11)"/><text x="65.00" y="334.50"></text></g><g><title>0x7f726ed17d50 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="62" y="340" width="3" height="15" fill="rgb(226,4,1)"/><text x="65.00" y="350.50"></text></g><g><title>0x7f726ed17cc8 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="62" y="356" width="3" height="15" fill="rgb(253,208,3)"/><text x="65.00" y="366.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.23%)</title><rect x="65" y="228" width="3" height="15" fill="rgb(245,70,44)"/><text x="68.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:94) (1 samples, 0.23%)</title><rect x="65" y="244" width="3" height="15" fill="rgb(216,163,27)"/><text x="68.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="65" y="260" width="3" height="15" fill="rgb(212,32,42)"/><text x="68.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.23%)</title><rect x="65" y="276" width="3" height="15" fill="rgb(254,129,19)"/><text x="68.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.23%)</title><rect x="65" y="292" width="3" height="15" fill="rgb(230,92,43)"/><text x="68.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.23%)</title><rect x="65" y="308" width="3" height="15" fill="rgb(210,205,17)"/><text x="68.00" y="318.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:25) (2 samples, 0.47%)</title><rect x="65" y="84" width="5" height="15" fill="rgb(253,190,41)"/><text x="68.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.47%)</title><rect x="65" y="100" width="5" height="15" fill="rgb(216,215,19)"/><text x="68.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (2 samples, 0.47%)</title><rect x="65" y="116" width="5" height="15" fill="rgb(251,112,52)"/><text x="68.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (2 samples, 0.47%)</title><rect x="65" y="132" width="5" height="15" fill="rgb(211,158,16)"/><text x="68.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (2 samples, 0.47%)</title><rect x="65" y="148" width="5" height="15" fill="rgb(227,121,14)"/><text x="68.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (2 samples, 0.47%)</title><rect x="65" y="164" width="5" height="15" fill="rgb(217,49,22)"/><text x="68.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (2 samples, 0.47%)</title><rect x="65" y="180" width="5" height="15" fill="rgb(243,194,24)"/><text x="68.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (2 samples, 0.47%)</title><rect x="65" y="196" width="5" height="15" fill="rgb(228,13,46)"/><text x="68.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (2 samples, 0.47%)</title><rect x="65" y="212" width="5" height="15" fill="rgb(230,226,50)"/><text x="68.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:133) (1 samples, 0.23%)</title><rect x="68" y="228" width="2" height="15" fill="rgb(242,40,7)"/><text x="71.00" y="238.50"></text></g><g><title>array_flatten (methods.c:2424) (1 samples, 0.23%)</title><rect x="68" y="244" width="2" height="15" fill="rgb(207,102,21)"/><text x="71.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.23%)</title><rect x="70" y="180" width="3" height="15" fill="rgb(254,76,17)"/><text x="73.00" y="190.50"></text></g><g><title>update_wrapper (functools.py:60) (2 samples, 0.47%)</title><rect x="73" y="228" width="6" height="15" fill="rgb(232,172,15)"/><text x="76.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (3 samples, 0.70%)</title><rect x="73" y="180" width="9" height="15" fill="rgb(243,48,38)"/><text x="76.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (3 samples, 0.70%)</title><rect x="73" y="196" width="9" height="15" fill="rgb(243,186,18)"/><text x="76.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py:308) (3 samples, 0.70%)</title><rect x="73" y="212" width="9" height="15" fill="rgb(230,210,47)"/><text x="76.00" y="222.50"></text></g><g><title>wraps (functools.py:79) (1 samples, 0.23%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(206,7,1)"/><text x="82.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.23%)</title><rect x="82" y="196" width="2" height="15" fill="rgb(252,70,44)"/><text x="85.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.23%)</title><rect x="82" y="212" width="2" height="15" fill="rgb(222,182,22)"/><text x="85.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (2 samples, 0.47%)</title><rect x="82" y="180" width="5" height="15" fill="rgb(211,118,32)"/><text x="85.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (1 samples, 0.23%)</title><rect x="84" y="196" width="3" height="15" fill="rgb(209,193,21)"/><text x="87.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.23%)</title><rect x="84" y="212" width="3" height="15" fill="rgb(226,112,27)"/><text x="87.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (1 samples, 0.23%)</title><rect x="87" y="292" width="3" height="15" fill="rgb(222,107,35)"/><text x="90.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.23%)</title><rect x="87" y="308" width="3" height="15" fill="rgb(239,124,28)"/><text x="90.00" y="318.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:47) (10 samples, 2.35%)</title><rect x="65" y="52" width="28" height="15" fill="rgb(230,156,44)"/><text x="68.00" y="62.50">&lt;..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:46) (10 samples, 2.35%)</title><rect x="65" y="68" width="28" height="15" fill="rgb(216,141,4)"/><text x="68.00" y="78.50">p..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:26) (8 samples, 1.88%)</title><rect x="70" y="84" width="23" height="15" fill="rgb(234,221,18)"/><text x="73.00" y="94.50">s..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:18) (8 samples, 1.88%)</title><rect x="70" y="100" width="23" height="15" fill="rgb(227,93,7)"/><text x="73.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 1.88%)</title><rect x="70" y="116" width="23" height="15" fill="rgb(232,33,26)"/><text x="73.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (8 samples, 1.88%)</title><rect x="70" y="132" width="23" height="15" fill="rgb(250,155,48)"/><text x="73.00" y="142.50">&lt;..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (8 samples, 1.88%)</title><rect x="70" y="148" width="23" height="15" fill="rgb(230,79,11)"/><text x="73.00" y="158.50">p..</text></g><g><title>__call__ (joblib/parallel.py:1006) (8 samples, 1.88%)</title><rect x="70" y="164" width="23" height="15" fill="rgb(242,106,39)"/><text x="73.00" y="174.50">_..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.47%)</title><rect x="87" y="180" width="6" height="15" fill="rgb(227,78,4)"/><text x="90.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.47%)</title><rect x="87" y="196" width="6" height="15" fill="rgb(212,193,17)"/><text x="90.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.47%)</title><rect x="87" y="212" width="6" height="15" fill="rgb(215,181,16)"/><text x="90.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.47%)</title><rect x="87" y="228" width="6" height="15" fill="rgb(234,13,40)"/><text x="90.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.47%)</title><rect x="87" y="244" width="6" height="15" fill="rgb(252,78,29)"/><text x="90.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.47%)</title><rect x="87" y="260" width="6" height="15" fill="rgb(209,134,34)"/><text x="90.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.47%)</title><rect x="87" y="276" width="6" height="15" fill="rgb(238,202,26)"/><text x="90.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.23%)</title><rect x="90" y="292" width="3" height="15" fill="rgb(225,55,20)"/><text x="93.00" y="302.50"></text></g><g><title>0x7f726eacdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="90" y="308" width="3" height="15" fill="rgb(247,198,31)"/><text x="93.00" y="318.50"></text></g><g><title>0x7f726eaccfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="90" y="324" width="3" height="15" fill="rgb(205,198,34)"/><text x="93.00" y="334.50"></text></g><g><title>0x7f726eadc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="90" y="340" width="3" height="15" fill="rgb(228,78,18)"/><text x="93.00" y="350.50"></text></g><g><title>0x7f726eadbc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="90" y="356" width="3" height="15" fill="rgb(215,43,1)"/><text x="93.00" y="366.50"></text></g><g><title>0x7f726eab3529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="90" y="372" width="3" height="15" fill="rgb(251,161,53)"/><text x="93.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.23%)</title><rect x="90" y="388" width="3" height="15" fill="rgb(253,16,16)"/><text x="93.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.23%)</title><rect x="90" y="404" width="3" height="15" fill="rgb(227,189,34)"/><text x="93.00" y="414.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.23%)</title><rect x="93" y="148" width="2" height="15" fill="rgb(208,101,27)"/><text x="96.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:183) (1 samples, 0.23%)</title><rect x="93" y="164" width="2" height="15" fill="rgb(223,19,9)"/><text x="96.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.23%)</title><rect x="93" y="180" width="2" height="15" fill="rgb(223,71,3)"/><text x="96.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.23%)</title><rect x="93" y="196" width="2" height="15" fill="rgb(211,189,2)"/><text x="96.00" y="206.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.23%)</title><rect x="93" y="212" width="2" height="15" fill="rgb(251,114,30)"/><text x="96.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.23%)</title><rect x="93" y="228" width="2" height="15" fill="rgb(236,182,4)"/><text x="96.00" y="238.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.23%)</title><rect x="93" y="244" width="2" height="15" fill="rgb(224,182,47)"/><text x="96.00" y="254.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.23%)</title><rect x="95" y="148" width="3" height="15" fill="rgb(251,135,33)"/><text x="98.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:620) (1 samples, 0.23%)</title><rect x="95" y="164" width="3" height="15" fill="rgb(211,19,30)"/><text x="98.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.23%)</title><rect x="95" y="180" width="3" height="15" fill="rgb(245,127,50)"/><text x="98.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.23%)</title><rect x="95" y="196" width="3" height="15" fill="rgb(250,74,45)"/><text x="98.00" y="206.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.23%)</title><rect x="98" y="276" width="3" height="15" fill="rgb(219,134,18)"/><text x="101.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (1 samples, 0.23%)</title><rect x="98" y="292" width="3" height="15" fill="rgb(253,82,30)"/><text x="101.00" y="302.50"></text></g><g><title>0x7f726eacdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="98" y="308" width="3" height="15" fill="rgb(218,156,12)"/><text x="101.00" y="318.50"></text></g><g><title>0x7f726eaccfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="98" y="324" width="3" height="15" fill="rgb(240,88,25)"/><text x="101.00" y="334.50"></text></g><g><title>0x7f726eadc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="98" y="340" width="3" height="15" fill="rgb(231,129,25)"/><text x="101.00" y="350.50"></text></g><g><title>0x7f726eadb225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="98" y="356" width="3" height="15" fill="rgb(226,142,24)"/><text x="101.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3213) (1 samples, 0.23%)</title><rect x="98" y="372" width="3" height="15" fill="rgb(221,124,50)"/><text x="101.00" y="382.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.47%)</title><rect x="98" y="164" width="6" height="15" fill="rgb(206,210,15)"/><text x="101.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.47%)</title><rect x="98" y="180" width="6" height="15" fill="rgb(225,69,42)"/><text x="101.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.47%)</title><rect x="98" y="196" width="6" height="15" fill="rgb(228,8,48)"/><text x="101.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.47%)</title><rect x="98" y="212" width="6" height="15" fill="rgb(224,94,23)"/><text x="101.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.47%)</title><rect x="98" y="228" width="6" height="15" fill="rgb(207,162,44)"/><text x="101.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.47%)</title><rect x="98" y="244" width="6" height="15" fill="rgb(231,51,33)"/><text x="101.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.47%)</title><rect x="98" y="260" width="6" height="15" fill="rgb(252,69,12)"/><text x="101.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.23%)</title><rect x="101" y="276" width="3" height="15" fill="rgb(245,108,43)"/><text x="104.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="101" y="292" width="3" height="15" fill="rgb(231,210,21)"/><text x="104.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="101" y="308" width="3" height="15" fill="rgb(240,130,49)"/><text x="104.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.23%)</title><rect x="101" y="324" width="3" height="15" fill="rgb(214,49,7)"/><text x="104.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.23%)</title><rect x="101" y="340" width="3" height="15" fill="rgb(249,9,44)"/><text x="104.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.23%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(216,154,38)"/><text x="104.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:249) (1 samples, 0.23%)</title><rect x="101" y="372" width="3" height="15" fill="rgb(209,101,36)"/><text x="104.00" y="382.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.23%)</title><rect x="115" y="196" width="3" height="15" fill="rgb(246,213,13)"/><text x="118.00" y="206.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.23%)</title><rect x="118" y="196" width="2" height="15" fill="rgb(239,36,54)"/><text x="121.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.23%)</title><rect x="118" y="212" width="2" height="15" fill="rgb(217,152,19)"/><text x="121.00" y="222.50"></text></g><g><title>get (queue.py:167) (1 samples, 0.23%)</title><rect x="120" y="196" width="3" height="15" fill="rgb(249,142,15)"/><text x="123.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (5 samples, 1.17%)</title><rect x="112" y="180" width="14" height="15" fill="rgb(229,144,21)"/><text x="115.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.23%)</title><rect x="123" y="196" width="3" height="15" fill="rgb(229,225,52)"/><text x="126.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.23%)</title><rect x="123" y="212" width="3" height="15" fill="rgb(217,19,52)"/><text x="126.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.23%)</title><rect x="142" y="228" width="3" height="15" fill="rgb(252,112,31)"/><text x="145.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (2 samples, 0.47%)</title><rect x="145" y="228" width="6" height="15" fill="rgb(230,183,15)"/><text x="148.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (1 samples, 0.23%)</title><rect x="151" y="228" width="3" height="15" fill="rgb(211,225,18)"/><text x="154.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.23%)</title><rect x="154" y="228" width="2" height="15" fill="rgb(237,15,46)"/><text x="157.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (13 samples, 3.05%)</title><rect x="126" y="180" width="36" height="15" fill="rgb(215,200,53)"/><text x="129.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (9 samples, 2.11%)</title><rect x="137" y="196" width="25" height="15" fill="rgb(219,80,35)"/><text x="140.00" y="206.50">&lt;..</text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 1.88%)</title><rect x="140" y="212" width="22" height="15" fill="rgb(244,161,15)"/><text x="143.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.47%)</title><rect x="156" y="228" width="6" height="15" fill="rgb(235,112,20)"/><text x="159.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (2 samples, 0.47%)</title><rect x="162" y="180" width="5" height="15" fill="rgb(236,18,1)"/><text x="165.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (3 samples, 0.70%)</title><rect x="167" y="180" width="9" height="15" fill="rgb(223,13,29)"/><text x="170.00" y="190.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.47%)</title><rect x="187" y="212" width="5" height="15" fill="rgb(242,138,6)"/><text x="190.00" y="222.50"></text></g><g><title>0x7f729509a6d4 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="190" y="228" width="2" height="15" fill="rgb(214,210,22)"/><text x="193.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (6 samples, 1.41%)</title><rect x="178" y="196" width="17" height="15" fill="rgb(237,108,51)"/><text x="181.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.23%)</title><rect x="192" y="212" width="3" height="15" fill="rgb(227,51,32)"/><text x="195.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (1 samples, 0.23%)</title><rect x="206" y="228" width="3" height="15" fill="rgb(241,224,51)"/><text x="209.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (5 samples, 1.17%)</title><rect x="201" y="212" width="13" height="15" fill="rgb(230,142,49)"/><text x="204.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.47%)</title><rect x="209" y="228" width="5" height="15" fill="rgb(250,83,31)"/><text x="212.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.23%)</title><rect x="214" y="212" width="3" height="15" fill="rgb(237,7,4)"/><text x="217.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.23%)</title><rect x="217" y="212" width="3" height="15" fill="rgb(235,207,46)"/><text x="220.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (20 samples, 4.69%)</title><rect x="176" y="180" width="55" height="15" fill="rgb(219,142,16)"/><text x="179.00" y="190.50">dispa..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (13 samples, 3.05%)</title><rect x="195" y="196" width="36" height="15" fill="rgb(254,150,33)"/><text x="198.00" y="206.50">get..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (4 samples, 0.94%)</title><rect x="220" y="212" width="11" height="15" fill="rgb(233,210,27)"/><text x="223.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (2 samples, 0.47%)</title><rect x="234" y="196" width="5" height="15" fill="rgb(222,5,29)"/><text x="237.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.23%)</title><rect x="239" y="196" width="3" height="15" fill="rgb(206,14,0)"/><text x="242.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (5 samples, 1.17%)</title><rect x="231" y="180" width="14" height="15" fill="rgb(215,145,41)"/><text x="234.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:243) (1 samples, 0.23%)</title><rect x="242" y="196" width="3" height="15" fill="rgb(252,72,12)"/><text x="245.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.23%)</title><rect x="245" y="196" width="3" height="15" fill="rgb(244,147,22)"/><text x="248.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.23%)</title><rect x="245" y="212" width="3" height="15" fill="rgb(210,186,14)"/><text x="248.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.23%)</title><rect x="245" y="228" width="3" height="15" fill="rgb(229,216,53)"/><text x="248.00" y="238.50"></text></g><g><title>put (queue.py:133) (1 samples, 0.23%)</title><rect x="248" y="196" width="2" height="15" fill="rgb(214,153,51)"/><text x="251.00" y="206.50"></text></g><g><title>put (queue.py:149) (1 samples, 0.23%)</title><rect x="250" y="196" width="3" height="15" fill="rgb(237,84,22)"/><text x="253.00" y="206.50"></text></g><g><title>_put (queue.py:213) (1 samples, 0.23%)</title><rect x="250" y="212" width="3" height="15" fill="rgb(248,51,12)"/><text x="253.00" y="222.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.47%)</title><rect x="253" y="212" width="6" height="15" fill="rgb(207,199,9)"/><text x="256.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (2 samples, 0.47%)</title><rect x="253" y="228" width="6" height="15" fill="rgb(209,213,1)"/><text x="256.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.23%)</title><rect x="256" y="244" width="3" height="15" fill="rgb(242,183,19)"/><text x="259.00" y="254.50"></text></g><g><title>0x7f729509f786 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="256" y="260" width="3" height="15" fill="rgb(220,48,10)"/><text x="259.00" y="270.50"></text></g><g><title>notify (threading.py:347) (1 samples, 0.23%)</title><rect x="259" y="212" width="3" height="15" fill="rgb(228,213,30)"/><text x="262.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (10 samples, 2.35%)</title><rect x="245" y="180" width="28" height="15" fill="rgb(218,167,50)"/><text x="248.00" y="190.50">d..</text></g><g><title>put (queue.py:151) (7 samples, 1.64%)</title><rect x="253" y="196" width="20" height="15" fill="rgb(211,2,13)"/><text x="256.00" y="206.50"></text></g><g><title>notify (threading.py:348) (4 samples, 0.94%)</title><rect x="262" y="212" width="11" height="15" fill="rgb(211,65,1)"/><text x="265.00" y="222.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.47%)</title><rect x="278" y="196" width="6" height="15" fill="rgb(249,69,6)"/><text x="281.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.23%)</title><rect x="281" y="212" width="3" height="15" fill="rgb(206,132,14)"/><text x="284.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.23%)</title><rect x="281" y="228" width="3" height="15" fill="rgb(250,3,54)"/><text x="284.00" y="238.50"></text></g><g><title>0x7f729509f744 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="281" y="244" width="3" height="15" fill="rgb(243,180,12)"/><text x="284.00" y="254.50"></text></g><g><title>get (queue.py:166) (3 samples, 0.70%)</title><rect x="284" y="196" width="8" height="15" fill="rgb(213,161,47)"/><text x="287.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.23%)</title><rect x="289" y="212" width="3" height="15" fill="rgb(227,30,9)"/><text x="292.00" y="222.50"></text></g><g><title>get (queue.py:180) (1 samples, 0.23%)</title><rect x="292" y="196" width="3" height="15" fill="rgb(236,22,31)"/><text x="295.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.23%)</title><rect x="295" y="212" width="3" height="15" fill="rgb(237,171,39)"/><text x="298.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.23%)</title><rect x="295" y="228" width="3" height="15" fill="rgb(216,117,4)"/><text x="298.00" y="238.50"></text></g><g><title>get (queue.py:181) (3 samples, 0.70%)</title><rect x="295" y="196" width="8" height="15" fill="rgb(208,150,8)"/><text x="298.00" y="206.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.47%)</title><rect x="298" y="212" width="5" height="15" fill="rgb(225,164,44)"/><text x="301.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (12 samples, 2.82%)</title><rect x="273" y="180" width="33" height="15" fill="rgb(219,118,34)"/><text x="276.00" y="190.50">di..</text></g><g><title>get (queue.py:182) (1 samples, 0.23%)</title><rect x="303" y="196" width="3" height="15" fill="rgb(219,116,10)"/><text x="306.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (1 samples, 0.23%)</title><rect x="303" y="212" width="3" height="15" fill="rgb(206,218,20)"/><text x="306.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.23%)</title><rect x="306" y="180" width="3" height="15" fill="rgb(232,183,0)"/><text x="309.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (2 samples, 0.47%)</title><rect x="309" y="196" width="5" height="15" fill="rgb(213,191,34)"/><text x="312.00" y="206.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.23%)</title><rect x="311" y="212" width="3" height="15" fill="rgb(226,123,33)"/><text x="314.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.23%)</title><rect x="314" y="196" width="3" height="15" fill="rgb(214,162,44)"/><text x="317.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.23%)</title><rect x="314" y="212" width="3" height="15" fill="rgb(250,134,13)"/><text x="317.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.23%)</title><rect x="317" y="196" width="3" height="15" fill="rgb(251,193,41)"/><text x="320.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.23%)</title><rect x="328" y="260" width="3" height="15" fill="rgb(220,128,16)"/><text x="331.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:188) (2 samples, 0.47%)</title><rect x="331" y="260" width="5" height="15" fill="rgb(254,187,8)"/><text x="334.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.23%)</title><rect x="336" y="260" width="3" height="15" fill="rgb(215,190,42)"/><text x="339.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (7 samples, 1.64%)</title><rect x="325" y="244" width="20" height="15" fill="rgb(219,120,0)"/><text x="328.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:197) (2 samples, 0.47%)</title><rect x="339" y="260" width="6" height="15" fill="rgb(223,86,32)"/><text x="342.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (3 samples, 0.70%)</title><rect x="356" y="308" width="8" height="15" fill="rgb(206,158,43)"/><text x="359.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.23%)</title><rect x="367" y="324" width="3" height="15" fill="rgb(214,43,27)"/><text x="370.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.70%)</title><rect x="383" y="340" width="9" height="15" fill="rgb(238,99,38)"/><text x="386.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 2.58%)</title><rect x="370" y="324" width="30" height="15" fill="rgb(237,66,5)"/><text x="373.00" y="334.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.70%)</title><rect x="392" y="340" width="8" height="15" fill="rgb(250,224,0)"/><text x="395.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (18 samples, 4.23%)</title><rect x="356" y="292" width="50" height="15" fill="rgb(246,57,46)"/><text x="359.00" y="302.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 3.52%)</title><rect x="364" y="308" width="42" height="15" fill="rgb(217,85,34)"/><text x="367.00" y="318.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.47%)</title><rect x="400" y="324" width="6" height="15" fill="rgb(235,125,47)"/><text x="403.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (3 samples, 0.70%)</title><rect x="406" y="292" width="8" height="15" fill="rgb(226,24,4)"/><text x="409.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (3 samples, 0.70%)</title><rect x="406" y="308" width="8" height="15" fill="rgb(228,217,25)"/><text x="409.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.23%)</title><rect x="411" y="324" width="3" height="15" fill="rgb(209,194,21)"/><text x="414.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.23%)</title><rect x="417" y="388" width="2" height="15" fill="rgb(225,64,49)"/><text x="420.00" y="398.50"></text></g><g><title>0x7f726eadb225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="417" y="356" width="5" height="15" fill="rgb(220,100,11)"/><text x="420.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (2 samples, 0.47%)</title><rect x="417" y="372" width="5" height="15" fill="rgb(219,15,49)"/><text x="420.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.23%)</title><rect x="419" y="388" width="3" height="15" fill="rgb(209,22,33)"/><text x="422.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.23%)</title><rect x="419" y="404" width="3" height="15" fill="rgb(229,170,36)"/><text x="422.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.23%)</title><rect x="419" y="420" width="3" height="15" fill="rgb(233,106,6)"/><text x="422.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.23%)</title><rect x="422" y="436" width="3" height="15" fill="rgb(210,78,5)"/><text x="425.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.23%)</title><rect x="422" y="452" width="3" height="15" fill="rgb(213,78,48)"/><text x="425.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="422" y="468" width="3" height="15" fill="rgb(230,78,42)"/><text x="425.00" y="478.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.23%)</title><rect x="425" y="436" width="3" height="15" fill="rgb(233,187,27)"/><text x="428.00" y="446.50"></text></g><g><title>0x7f726eabfd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="422" y="372" width="9" height="15" fill="rgb(240,152,52)"/><text x="425.00" y="382.50"></text></g><g><title>0x7f726eabf666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="422" y="388" width="9" height="15" fill="rgb(207,65,17)"/><text x="425.00" y="398.50"></text></g><g><title>0x7f726eab52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="422" y="404" width="9" height="15" fill="rgb(215,57,23)"/><text x="425.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.70%)</title><rect x="422" y="420" width="9" height="15" fill="rgb(222,135,52)"/><text x="425.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.23%)</title><rect x="428" y="436" width="3" height="15" fill="rgb(218,114,11)"/><text x="431.00" y="446.50"></text></g><g><title>_buffer_info_cmp (buffer.c:610) (1 samples, 0.23%)</title><rect x="428" y="452" width="3" height="15" fill="rgb(252,98,37)"/><text x="431.00" y="462.50"></text></g><g><title>0x7f726eadb2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.94%)</title><rect x="422" y="356" width="11" height="15" fill="rgb(218,46,26)"/><text x="425.00" y="366.50"></text></g><g><title>0x7f726eabfe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="431" y="372" width="2" height="15" fill="rgb(245,37,19)"/><text x="434.00" y="382.50"></text></g><g><title>0x7f726eab3022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="431" y="388" width="2" height="15" fill="rgb(218,131,46)"/><text x="434.00" y="398.50"></text></g><g><title>0x7f729509f734 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="433" y="388" width="3" height="15" fill="rgb(220,93,3)"/><text x="436.00" y="398.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.47%)</title><rect x="433" y="372" width="6" height="15" fill="rgb(244,54,15)"/><text x="436.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.23%)</title><rect x="436" y="388" width="3" height="15" fill="rgb(216,120,9)"/><text x="439.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.23%)</title><rect x="436" y="404" width="3" height="15" fill="rgb(244,174,45)"/><text x="439.00" y="414.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.23%)</title><rect x="436" y="420" width="3" height="15" fill="rgb(232,180,39)"/><text x="439.00" y="430.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.23%)</title><rect x="436" y="436" width="3" height="15" fill="rgb(249,193,45)"/><text x="439.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.23%)</title><rect x="439" y="420" width="3" height="15" fill="rgb(216,130,25)"/><text x="442.00" y="430.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.23%)</title><rect x="439" y="436" width="3" height="15" fill="rgb(246,49,18)"/><text x="442.00" y="446.50"></text></g><g><title>0x7f729508b2a3 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="444" y="484" width="3" height="15" fill="rgb(223,191,49)"/><text x="447.00" y="494.50"></text></g><g><title>0x7f72950aa103 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="447" y="484" width="3" height="15" fill="rgb(251,132,17)"/><text x="450.00" y="494.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (4 samples, 0.94%)</title><rect x="442" y="420" width="11" height="15" fill="rgb(242,35,26)"/><text x="445.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (4 samples, 0.94%)</title><rect x="442" y="436" width="11" height="15" fill="rgb(217,133,0)"/><text x="445.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (4 samples, 0.94%)</title><rect x="442" y="452" width="11" height="15" fill="rgb(239,42,49)"/><text x="445.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (4 samples, 0.94%)</title><rect x="442" y="468" width="11" height="15" fill="rgb(212,71,25)"/><text x="445.00" y="478.50"></text></g><g><title>0x7f72950aa120 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="450" y="484" width="3" height="15" fill="rgb(241,141,12)"/><text x="453.00" y="494.50"></text></g><g><title>0x7f726eadb592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.88%)</title><rect x="433" y="356" width="22" height="15" fill="rgb(215,44,51)"/><text x="436.00" y="366.50">0..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (6 samples, 1.41%)</title><rect x="439" y="372" width="16" height="15" fill="rgb(253,177,21)"/><text x="442.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (6 samples, 1.41%)</title><rect x="439" y="388" width="16" height="15" fill="rgb(222,193,14)"/><text x="442.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (6 samples, 1.41%)</title><rect x="439" y="404" width="16" height="15" fill="rgb(248,228,54)"/><text x="442.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.23%)</title><rect x="453" y="420" width="2" height="15" fill="rgb(227,216,50)"/><text x="456.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.23%)</title><rect x="453" y="436" width="2" height="15" fill="rgb(206,206,8)"/><text x="456.00" y="446.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.23%)</title><rect x="453" y="452" width="2" height="15" fill="rgb(209,35,47)"/><text x="456.00" y="462.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:115) (1 samples, 0.23%)</title><rect x="453" y="468" width="2" height="15" fill="rgb(207,90,7)"/><text x="456.00" y="478.50"></text></g><g><title>0x7f726eadb687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="455" y="356" width="3" height="15" fill="rgb(212,222,37)"/><text x="458.00" y="366.50"></text></g><g><title>0x7f726eadb698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="458" y="356" width="3" height="15" fill="rgb(220,90,48)"/><text x="461.00" y="366.50"></text></g><g><title>0x7f726eadb69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="461" y="356" width="3" height="15" fill="rgb(247,10,8)"/><text x="464.00" y="366.50"></text></g><g><title>0x7f726eadb6a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="464" y="356" width="3" height="15" fill="rgb(217,142,42)"/><text x="467.00" y="366.50"></text></g><g><title>0x7f726eadb6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="467" y="356" width="2" height="15" fill="rgb(249,39,33)"/><text x="470.00" y="366.50"></text></g><g><title>0x7f726eadb6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="469" y="356" width="3" height="15" fill="rgb(218,8,41)"/><text x="472.00" y="366.50"></text></g><g><title>0x7f726eadb6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.64%)</title><rect x="472" y="356" width="19" height="15" fill="rgb(205,99,31)"/><text x="475.00" y="366.50"></text></g><g><title>0x7f726eadb6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.70%)</title><rect x="491" y="356" width="9" height="15" fill="rgb(240,87,12)"/><text x="494.00" y="366.50"></text></g><g><title>0x7f726eadb6cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="500" y="356" width="3" height="15" fill="rgb(218,201,0)"/><text x="503.00" y="366.50"></text></g><g><title>0x7f726eadb6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="503" y="356" width="5" height="15" fill="rgb(205,185,4)"/><text x="506.00" y="366.50"></text></g><g><title>0x7f726eadb7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="508" y="356" width="3" height="15" fill="rgb(227,8,44)"/><text x="511.00" y="366.50"></text></g><g><title>0x7f726eadb8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="511" y="356" width="3" height="15" fill="rgb(228,149,2)"/><text x="514.00" y="366.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.23%)</title><rect x="514" y="404" width="2" height="15" fill="rgb(209,26,34)"/><text x="517.00" y="414.50"></text></g><g><title>0x7f726eadc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (37 samples, 8.69%)</title><rect x="417" y="340" width="102" height="15" fill="rgb(212,95,28)"/><text x="420.00" y="350.50">0x7f726eadc4..</text></g><g><title>0x7f726eadbc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="514" y="356" width="5" height="15" fill="rgb(239,174,43)"/><text x="517.00" y="366.50"></text></g><g><title>0x7f726eab3529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="514" y="372" width="5" height="15" fill="rgb(242,201,10)"/><text x="517.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.47%)</title><rect x="514" y="388" width="5" height="15" fill="rgb(220,8,37)"/><text x="517.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.23%)</title><rect x="516" y="404" width="3" height="15" fill="rgb(239,34,22)"/><text x="519.00" y="414.50"></text></g><g><title>0x7f726eaccfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (38 samples, 8.92%)</title><rect x="417" y="324" width="105" height="15" fill="rgb(209,22,48)"/><text x="420.00" y="334.50">0x7f726eaccf..</text></g><g><title>0x7f726eadc540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="519" y="340" width="3" height="15" fill="rgb(228,136,26)"/><text x="522.00" y="350.50"></text></g><g><title>0x7f726eab12f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="519" y="356" width="3" height="15" fill="rgb(206,59,27)"/><text x="522.00" y="366.50"></text></g><g><title>0x7f726eab0530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="519" y="372" width="3" height="15" fill="rgb(213,117,4)"/><text x="522.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.23%)</title><rect x="519" y="388" width="3" height="15" fill="rgb(232,206,0)"/><text x="522.00" y="398.50"></text></g><g><title>0x7f729509f757 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="527" y="356" width="3" height="15" fill="rgb(234,67,13)"/><text x="530.00" y="366.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.23%)</title><rect x="530" y="356" width="3" height="15" fill="rgb(242,77,44)"/><text x="533.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.23%)</title><rect x="530" y="372" width="3" height="15" fill="rgb(220,51,30)"/><text x="533.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.23%)</title><rect x="530" y="388" width="3" height="15" fill="rgb(232,226,53)"/><text x="533.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.23%)</title><rect x="533" y="356" width="3" height="15" fill="rgb(232,185,54)"/><text x="536.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:629) (1 samples, 0.23%)</title><rect x="533" y="372" width="3" height="15" fill="rgb(229,143,43)"/><text x="536.00" y="382.50"></text></g><g><title>array_take (methods.c:138) (7 samples, 1.64%)</title><rect x="522" y="340" width="19" height="15" fill="rgb(223,79,3)"/><text x="525.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.47%)</title><rect x="536" y="356" width="5" height="15" fill="rgb(248,197,38)"/><text x="539.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.23%)</title><rect x="541" y="372" width="3" height="15" fill="rgb(244,222,34)"/><text x="544.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.47%)</title><rect x="541" y="356" width="6" height="15" fill="rgb(249,160,4)"/><text x="544.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.23%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(214,88,54)"/><text x="547.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.23%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(217,192,45)"/><text x="547.00" y="398.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.70%)</title><rect x="541" y="340" width="9" height="15" fill="rgb(249,54,51)"/><text x="544.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.23%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(232,76,31)"/><text x="550.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.23%)</title><rect x="547" y="372" width="3" height="15" fill="rgb(215,86,24)"/><text x="550.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.23%)</title><rect x="547" y="388" width="3" height="15" fill="rgb(230,12,26)"/><text x="550.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.23%)</title><rect x="547" y="404" width="3" height="15" fill="rgb(234,159,12)"/><text x="550.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.23%)</title><rect x="547" y="420" width="3" height="15" fill="rgb(247,87,4)"/><text x="550.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.23%)</title><rect x="547" y="436" width="3" height="15" fill="rgb(219,65,49)"/><text x="550.00" y="446.50"></text></g><g><title>0x7f726eacd05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 2.58%)</title><rect x="522" y="324" width="30" height="15" fill="rgb(254,144,17)"/><text x="525.00" y="334.50">0x..</text></g><g><title>array_take (methods.c:147) (1 samples, 0.23%)</title><rect x="550" y="340" width="2" height="15" fill="rgb(209,117,54)"/><text x="553.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:849) (1 samples, 0.23%)</title><rect x="550" y="356" width="2" height="15" fill="rgb(243,15,39)"/><text x="553.00" y="366.50"></text></g><g><title>0x7f726eacd05d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="552" y="324" width="3" height="15" fill="rgb(224,47,1)"/><text x="555.00" y="334.50"></text></g><g><title>0x7f726eacd13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="555" y="324" width="3" height="15" fill="rgb(209,107,21)"/><text x="558.00" y="334.50"></text></g><g><title>array_free (arrayobject.c:1776) (1 samples, 0.23%)</title><rect x="555" y="340" width="3" height="15" fill="rgb(224,110,29)"/><text x="558.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.23%)</title><rect x="558" y="340" width="3" height="15" fill="rgb(208,153,23)"/><text x="561.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.23%)</title><rect x="558" y="356" width="3" height="15" fill="rgb(250,32,10)"/><text x="561.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.23%)</title><rect x="558" y="372" width="3" height="15" fill="rgb(214,206,14)"/><text x="561.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.23%)</title><rect x="558" y="388" width="3" height="15" fill="rgb(239,139,2)"/><text x="561.00" y="398.50"></text></g><g><title>0x7f7295089965 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="558" y="404" width="3" height="15" fill="rgb(228,164,2)"/><text x="561.00" y="414.50"></text></g><g><title>0x7f726eacd14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.47%)</title><rect x="558" y="324" width="5" height="15" fill="rgb(225,137,11)"/><text x="561.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.23%)</title><rect x="561" y="340" width="2" height="15" fill="rgb(234,217,35)"/><text x="564.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.23%)</title><rect x="561" y="356" width="2" height="15" fill="rgb(251,184,50)"/><text x="564.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.23%)</title><rect x="561" y="372" width="2" height="15" fill="rgb(231,183,10)"/><text x="564.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.23%)</title><rect x="561" y="388" width="2" height="15" fill="rgb(249,105,51)"/><text x="564.00" y="398.50"></text></g><g><title>0x7f7295089e60 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="561" y="404" width="2" height="15" fill="rgb(212,77,0)"/><text x="564.00" y="414.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (55 samples, 12.91%)</title><rect x="414" y="292" width="152" height="15" fill="rgb(240,19,28)"/><text x="417.00" y="302.50">predict (sklearn/tr..</text></g><g><title>0x7f726eacdd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (54 samples, 12.68%)</title><rect x="417" y="308" width="149" height="15" fill="rgb(211,133,45)"/><text x="420.00" y="318.50">0x7f726eacdd2e (skl..</text></g><g><title>0x7f726eacd18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="563" y="324" width="3" height="15" fill="rgb(224,131,44)"/><text x="566.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.23%)</title><rect x="566" y="292" width="3" height="15" fill="rgb(222,126,2)"/><text x="569.00" y="302.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.23%)</title><rect x="569" y="292" width="3" height="15" fill="rgb(242,148,12)"/><text x="572.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.23%)</title><rect x="569" y="308" width="3" height="15" fill="rgb(245,63,26)"/><text x="572.00" y="318.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:908) (1 samples, 0.23%)</title><rect x="575" y="340" width="2" height="15" fill="rgb(223,110,4)"/><text x="578.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.47%)</title><rect x="575" y="308" width="5" height="15" fill="rgb(224,9,47)"/><text x="578.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:491) (2 samples, 0.47%)</title><rect x="575" y="324" width="5" height="15" fill="rgb(250,91,13)"/><text x="578.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.23%)</title><rect x="577" y="340" width="3" height="15" fill="rgb(229,89,21)"/><text x="580.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.23%)</title><rect x="577" y="356" width="3" height="15" fill="rgb(230,24,19)"/><text x="580.00" y="366.50"></text></g><g><title>0x7f72942ac0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="577" y="372" width="3" height="15" fill="rgb(240,142,52)"/><text x="580.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.23%)</title><rect x="580" y="308" width="3" height="15" fill="rgb(247,213,12)"/><text x="583.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:934) (1 samples, 0.23%)</title><rect x="580" y="324" width="3" height="15" fill="rgb(215,11,26)"/><text x="583.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (84 samples, 19.72%)</title><rect x="353" y="276" width="233" height="15" fill="rgb(209,34,41)"/><text x="356.00" y="286.50">_accumulate_prediction (sklear..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (5 samples, 1.17%)</title><rect x="572" y="292" width="14" height="15" fill="rgb(205,201,3)"/><text x="575.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1714) (1 samples, 0.23%)</title><rect x="583" y="308" width="3" height="15" fill="rgb(221,103,53)"/><text x="586.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.23%)</title><rect x="586" y="276" width="2" height="15" fill="rgb(231,142,46)"/><text x="589.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.23%)</title><rect x="591" y="308" width="3" height="15" fill="rgb(248,4,9)"/><text x="594.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.23%)</title><rect x="591" y="324" width="3" height="15" fill="rgb(254,13,20)"/><text x="594.00" y="334.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:255) (1 samples, 0.23%)</title><rect x="591" y="340" width="3" height="15" fill="rgb(251,29,0)"/><text x="594.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (2 samples, 0.47%)</title><rect x="594" y="308" width="6" height="15" fill="rgb(248,111,16)"/><text x="597.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (2 samples, 0.47%)</title><rect x="594" y="324" width="6" height="15" fill="rgb(241,120,27)"/><text x="597.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.23%)</title><rect x="600" y="308" width="2" height="15" fill="rgb(212,64,25)"/><text x="603.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:303) (1 samples, 0.23%)</title><rect x="600" y="324" width="2" height="15" fill="rgb(245,128,50)"/><text x="603.00" y="334.50"></text></g><g><title>0x7f72942ac4f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="602" y="388" width="3" height="15" fill="rgb(239,153,16)"/><text x="605.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.47%)</title><rect x="602" y="356" width="6" height="15" fill="rgb(235,3,53)"/><text x="605.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 0.47%)</title><rect x="602" y="372" width="6" height="15" fill="rgb(251,137,38)"/><text x="605.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.23%)</title><rect x="605" y="388" width="3" height="15" fill="rgb(217,51,32)"/><text x="608.00" y="398.50"></text></g><g><title>0x7f72950417a5 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="605" y="404" width="3" height="15" fill="rgb(241,130,15)"/><text x="608.00" y="414.50"></text></g><g><title>0x7f7295041a6f (libc-2.29.so) (1 samples, 0.23%)</title><rect x="605" y="420" width="3" height="15" fill="rgb(233,172,50)"/><text x="608.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.70%)</title><rect x="602" y="324" width="9" height="15" fill="rgb(208,147,24)"/><text x="605.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.70%)</title><rect x="602" y="340" width="9" height="15" fill="rgb(234,58,23)"/><text x="605.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.23%)</title><rect x="608" y="356" width="3" height="15" fill="rgb(234,53,41)"/><text x="611.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.23%)</title><rect x="608" y="372" width="3" height="15" fill="rgb(230,56,13)"/><text x="611.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.23%)</title><rect x="608" y="388" width="3" height="15" fill="rgb(218,189,23)"/><text x="611.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.23%)</title><rect x="608" y="404" width="3" height="15" fill="rgb(237,96,7)"/><text x="611.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.23%)</title><rect x="608" y="420" width="3" height="15" fill="rgb(207,14,6)"/><text x="611.00" y="430.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1371) (1 samples, 0.23%)</title><rect x="611" y="340" width="2" height="15" fill="rgb(229,170,6)"/><text x="614.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.23%)</title><rect x="613" y="356" width="3" height="15" fill="rgb(230,180,34)"/><text x="616.00" y="366.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:600) (1 samples, 0.23%)</title><rect x="616" y="388" width="3" height="15" fill="rgb(216,114,30)"/><text x="619.00" y="398.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (12 samples, 2.82%)</title><rect x="588" y="276" width="34" height="15" fill="rgb(207,21,38)"/><text x="591.00" y="286.50">_a..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.58%)</title><rect x="591" y="292" width="31" height="15" fill="rgb(246,131,35)"/><text x="594.00" y="302.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.64%)</title><rect x="602" y="308" width="20" height="15" fill="rgb(245,100,44)"/><text x="605.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (4 samples, 0.94%)</title><rect x="611" y="324" width="11" height="15" fill="rgb(223,224,40)"/><text x="614.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (3 samples, 0.70%)</title><rect x="613" y="340" width="9" height="15" fill="rgb(231,4,8)"/><text x="616.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.47%)</title><rect x="616" y="356" width="6" height="15" fill="rgb(243,208,42)"/><text x="619.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.47%)</title><rect x="616" y="372" width="6" height="15" fill="rgb(227,183,31)"/><text x="619.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.23%)</title><rect x="619" y="388" width="3" height="15" fill="rgb(225,64,38)"/><text x="622.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.23%)</title><rect x="619" y="404" width="3" height="15" fill="rgb(240,142,21)"/><text x="622.00" y="414.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.23%)</title><rect x="622" y="276" width="2" height="15" fill="rgb(233,25,1)"/><text x="625.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (100 samples, 23.47%)</title><rect x="353" y="260" width="277" height="15" fill="rgb(227,204,48)"/><text x="356.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (2 samples, 0.47%)</title><rect x="624" y="276" width="6" height="15" fill="rgb(211,10,0)"/><text x="627.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (2 samples, 0.47%)</title><rect x="624" y="292" width="6" height="15" fill="rgb(251,186,26)"/><text x="627.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c:147) (2 samples, 0.47%)</title><rect x="624" y="308" width="6" height="15" fill="rgb(234,28,4)"/><text x="627.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (2 samples, 0.47%)</title><rect x="624" y="324" width="6" height="15" fill="rgb(236,50,8)"/><text x="627.00" y="334.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (2 samples, 0.47%)</title><rect x="624" y="340" width="6" height="15" fill="rgb(234,109,47)"/><text x="627.00" y="350.50"></text></g><g><title>0x7f7295089b87 (libc-2.29.so) (1 samples, 0.23%)</title><rect x="627" y="356" width="3" height="15" fill="rgb(250,76,34)"/><text x="630.00" y="366.50"></text></g><g><title>__exit__ (joblib/parallel.py:214) (1 samples, 0.23%)</title><rect x="630" y="260" width="3" height="15" fill="rgb(234,107,8)"/><text x="633.00" y="270.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (114 samples, 26.76%)</title><rect x="320" y="212" width="316" height="15" fill="rgb(212,224,9)"/><text x="323.00" y="222.50">apply_async (joblib/_parallel_backends.py:..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (114 samples, 26.76%)</title><rect x="320" y="228" width="316" height="15" fill="rgb(219,228,35)"/><text x="323.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (105 samples, 24.65%)</title><rect x="345" y="244" width="291" height="15" fill="rgb(226,68,16)"/><text x="348.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.23%)</title><rect x="633" y="260" width="3" height="15" fill="rgb(210,76,15)"/><text x="636.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.23%)</title><rect x="633" y="276" width="3" height="15" fill="rgb(249,228,51)"/><text x="636.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (2 samples, 0.47%)</title><rect x="636" y="228" width="5" height="15" fill="rgb(240,204,9)"/><text x="639.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (1 samples, 0.23%)</title><rect x="641" y="228" width="3" height="15" fill="rgb(253,176,25)"/><text x="644.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (1 samples, 0.23%)</title><rect x="644" y="228" width="3" height="15" fill="rgb(252,84,54)"/><text x="647.00" y="238.50"></text></g><g><title>print_progress (joblib/parallel.py:854) (1 samples, 0.23%)</title><rect x="644" y="244" width="3" height="15" fill="rgb(240,60,23)"/><text x="647.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (119 samples, 27.93%)</title><rect x="320" y="196" width="329" height="15" fill="rgb(227,67,20)"/><text x="323.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (5 samples, 1.17%)</title><rect x="636" y="212" width="13" height="15" fill="rgb(216,12,5)"/><text x="639.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.23%)</title><rect x="647" y="228" width="2" height="15" fill="rgb(207,66,11)"/><text x="650.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (125 samples, 29.34%)</title><rect x="309" y="180" width="346" height="15" fill="rgb(226,9,40)"/><text x="312.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.47%)</title><rect x="649" y="196" width="6" height="15" fill="rgb(205,117,3)"/><text x="652.00" y="206.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.23%)</title><rect x="652" y="212" width="3" height="15" fill="rgb(209,33,30)"/><text x="655.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (202 samples, 47.42%)</title><rect x="104" y="164" width="559" height="15" fill="rgb(230,75,2)"/><text x="107.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (3 samples, 0.70%)</title><rect x="655" y="180" width="8" height="15" fill="rgb(205,4,1)"/><text x="658.00" y="190.50"></text></g><g><title>PyThread_release_lock (python3.7) (2 samples, 0.47%)</title><rect x="658" y="196" width="5" height="15" fill="rgb(205,69,7)"/><text x="661.00" y="206.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (2 samples, 0.47%)</title><rect x="658" y="212" width="5" height="15" fill="rgb(241,49,14)"/><text x="661.00" y="222.50"></text></g><g><title>retrieve (joblib/parallel.py:896) (1 samples, 0.23%)</title><rect x="663" y="180" width="3" height="15" fill="rgb(215,219,40)"/><text x="666.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (207 samples, 48.59%)</title><rect x="98" y="148" width="574" height="15" fill="rgb(212,144,40)"/><text x="101.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (3 samples, 0.70%)</title><rect x="663" y="164" width="9" height="15" fill="rgb(205,205,52)"/><text x="666.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (2 samples, 0.47%)</title><rect x="666" y="180" width="6" height="15" fill="rgb(239,194,20)"/><text x="669.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:54) (210 samples, 49.30%)</title><rect x="93" y="52" width="581" height="15" fill="rgb(210,83,42)"/><text x="96.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:53) (210 samples, 49.30%)</title><rect x="93" y="68" width="581" height="15" fill="rgb(216,227,37)"/><text x="96.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37) (210 samples, 49.30%)</title><rect x="93" y="84" width="581" height="15" fill="rgb(220,122,23)"/><text x="96.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31) (210 samples, 49.30%)</title><rect x="93" y="100" width="581" height="15" fill="rgb(234,41,26)"/><text x="96.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (210 samples, 49.30%)</title><rect x="93" y="116" width="581" height="15" fill="rgb(244,55,37)"/><text x="96.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (210 samples, 49.30%)</title><rect x="93" y="132" width="581" height="15" fill="rgb(254,140,44)"/><text x="96.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.23%)</title><rect x="672" y="148" width="2" height="15" fill="rgb(246,185,22)"/><text x="675.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.23%)</title><rect x="672" y="164" width="2" height="15" fill="rgb(244,25,41)"/><text x="675.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.23%)</title><rect x="672" y="180" width="2" height="15" fill="rgb(207,160,44)"/><text x="675.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.23%)</title><rect x="672" y="196" width="2" height="15" fill="rgb(232,61,15)"/><text x="675.00" y="206.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.23%)</title><rect x="672" y="212" width="2" height="15" fill="rgb(209,79,8)"/><text x="675.00" y="222.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src:766) (1 samples, 0.23%)</title><rect x="672" y="228" width="2" height="15" fill="rgb(205,0,29)"/><text x="675.00" y="238.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.23%)</title><rect x="672" y="244" width="2" height="15" fill="rgb(215,125,52)"/><text x="675.00" y="254.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:36) (1 samples, 0.23%)</title><rect x="674" y="84" width="3" height="15" fill="rgb(230,61,13)"/><text x="677.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.23%)</title><rect x="674" y="100" width="3" height="15" fill="rgb(235,84,23)"/><text x="677.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.23%)</title><rect x="674" y="116" width="3" height="15" fill="rgb(211,160,20)"/><text x="677.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.23%)</title><rect x="674" y="132" width="3" height="15" fill="rgb(238,12,48)"/><text x="677.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.23%)</title><rect x="674" y="148" width="3" height="15" fill="rgb(232,81,42)"/><text x="677.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.23%)</title><rect x="674" y="164" width="3" height="15" fill="rgb(232,101,10)"/><text x="677.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.23%)</title><rect x="674" y="180" width="3" height="15" fill="rgb(213,56,26)"/><text x="677.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.23%)</title><rect x="674" y="196" width="3" height="15" fill="rgb(205,220,38)"/><text x="677.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="674" y="212" width="3" height="15" fill="rgb(223,224,20)"/><text x="677.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="674" y="228" width="3" height="15" fill="rgb(209,34,49)"/><text x="677.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="674" y="244" width="3" height="15" fill="rgb(205,58,27)"/><text x="677.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="674" y="260" width="3" height="15" fill="rgb(219,221,45)"/><text x="677.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="674" y="276" width="3" height="15" fill="rgb(235,219,45)"/><text x="677.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.23%)</title><rect x="674" y="292" width="3" height="15" fill="rgb(233,130,27)"/><text x="677.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.23%)</title><rect x="674" y="308" width="3" height="15" fill="rgb(230,44,33)"/><text x="677.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.23%)</title><rect x="674" y="324" width="3" height="15" fill="rgb(230,133,51)"/><text x="677.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.23%)</title><rect x="674" y="340" width="3" height="15" fill="rgb(252,204,20)"/><text x="677.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.23%)</title><rect x="674" y="356" width="3" height="15" fill="rgb(250,140,41)"/><text x="677.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.23%)</title><rect x="674" y="372" width="3" height="15" fill="rgb(232,84,2)"/><text x="677.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.23%)</title><rect x="674" y="388" width="3" height="15" fill="rgb(223,207,49)"/><text x="677.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.23%)</title><rect x="674" y="404" width="3" height="15" fill="rgb(210,116,23)"/><text x="677.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.23%)</title><rect x="674" y="420" width="3" height="15" fill="rgb(212,115,36)"/><text x="677.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.23%)</title><rect x="674" y="436" width="3" height="15" fill="rgb(247,97,21)"/><text x="677.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.23%)</title><rect x="674" y="452" width="3" height="15" fill="rgb(219,20,38)"/><text x="677.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:48) (1 samples, 0.23%)</title><rect x="674" y="468" width="3" height="15" fill="rgb(213,33,14)"/><text x="677.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.23%)</title><rect x="674" y="484" width="3" height="15" fill="rgb(205,216,1)"/><text x="677.00" y="494.50"></text></g><g><title>type_mapping (mlprodict/onnxrt/doc/doc_helper.py:29) (1 samples, 0.23%)</title><rect x="674" y="500" width="3" height="15" fill="rgb(237,27,7)"/><text x="677.00" y="510.50"></text></g><g><title>0x7f7255b6254f (?) (1 samples, 0.23%)</title><rect x="677" y="244" width="3" height="15" fill="rgb(207,105,25)"/><text x="680.00" y="254.50"></text></g><g><title>0x7f7255b6865e (?) (1 samples, 0.23%)</title><rect x="677" y="260" width="3" height="15" fill="rgb(235,68,24)"/><text x="680.00" y="270.50"></text></g><g><title>0x7f7255b6850f (?) (1 samples, 0.23%)</title><rect x="677" y="276" width="3" height="15" fill="rgb(253,61,48)"/><text x="680.00" y="286.50"></text></g><g><title>0x7f7255b6ed6c (?) (1 samples, 0.23%)</title><rect x="677" y="292" width="3" height="15" fill="rgb(253,84,27)"/><text x="680.00" y="302.50"></text></g><g><title>0x7f725f045cff (?) (1 samples, 0.23%)</title><rect x="677" y="308" width="3" height="15" fill="rgb(208,26,24)"/><text x="680.00" y="318.50"></text></g><g><title>0x7f7255b5327c (?) (1 samples, 0.23%)</title><rect x="677" y="324" width="3" height="15" fill="rgb(244,28,43)"/><text x="680.00" y="334.50"></text></g><g><title>0x7f7255b530e1 (?) (1 samples, 0.23%)</title><rect x="677" y="340" width="3" height="15" fill="rgb(240,72,36)"/><text x="680.00" y="350.50"></text></g><g><title>0x7f725f04fab9 (libgomp.so.1.0.0) (1 samples, 0.23%)</title><rect x="680" y="468" width="3" height="15" fill="rgb(210,26,40)"/><text x="683.00" y="478.50"></text></g><g><title>0x7f725f050ea9 (libgomp.so.1.0.0) (1 samples, 0.23%)</title><rect x="680" y="484" width="3" height="15" fill="rgb(237,194,13)"/><text x="683.00" y="494.50"></text></g><g><title>0x7f725f04edaa (libgomp.so.1.0.0) (1 samples, 0.23%)</title><rect x="683" y="484" width="2" height="15" fill="rgb(232,119,44)"/><text x="686.00" y="494.50"></text></g><g><title>0x7f725f050cfb (libgomp.so.1.0.0) (1 samples, 0.23%)</title><rect x="683" y="500" width="2" height="15" fill="rgb(248,223,48)"/><text x="686.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:460) (1 samples, 0.23%)</title><rect x="685" y="516" width="3" height="15" fill="rgb(249,116,29)"/><text x="688.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (2 samples, 0.47%)</title><rect x="688" y="516" width="6" height="15" fill="rgb(218,72,34)"/><text x="691.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.23%)</title><rect x="691" y="532" width="3" height="15" fill="rgb(236,171,35)"/><text x="694.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (3 samples, 0.70%)</title><rect x="694" y="580" width="8" height="15" fill="rgb(245,178,6)"/><text x="697.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1417) (1 samples, 0.23%)</title><rect x="702" y="580" width="3" height="15" fill="rgb(214,223,46)"/><text x="705.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (2 samples, 0.47%)</title><rect x="705" y="580" width="5" height="15" fill="rgb(213,17,44)"/><text x="708.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (8 samples, 1.88%)</title><rect x="694" y="516" width="22" height="15" fill="rgb(233,212,50)"/><text x="697.00" y="526.50">R..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (8 samples, 1.88%)</title><rect x="694" y="532" width="22" height="15" fill="rgb(253,114,25)"/><text x="697.00" y="542.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (8 samples, 1.88%)</title><rect x="694" y="548" width="22" height="15" fill="rgb(234,76,19)"/><text x="697.00" y="558.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (8 samples, 1.88%)</title><rect x="694" y="564" width="22" height="15" fill="rgb(245,2,42)"/><text x="697.00" y="574.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1423) (2 samples, 0.47%)</title><rect x="710" y="580" width="6" height="15" fill="rgb(206,183,9)"/><text x="713.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:619) (1 samples, 0.23%)</title><rect x="713" y="596" width="3" height="15" fill="rgb(237,29,40)"/><text x="716.00" y="606.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1178) (1 samples, 0.23%)</title><rect x="713" y="612" width="3" height="15" fill="rgb(247,171,4)"/><text x="716.00" y="622.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (1 samples, 0.23%)</title><rect x="713" y="628" width="3" height="15" fill="rgb(218,73,51)"/><text x="716.00" y="638.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (2 samples, 0.47%)</title><rect x="716" y="516" width="5" height="15" fill="rgb(212,195,0)"/><text x="719.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:61) (19 samples, 4.46%)</title><rect x="674" y="52" width="53" height="15" fill="rgb(226,133,36)"/><text x="677.00" y="62.50">&lt;modu..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:60) (19 samples, 4.46%)</title><rect x="674" y="68" width="53" height="15" fill="rgb(234,25,38)"/><text x="677.00" y="78.50">profi..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37) (18 samples, 4.23%)</title><rect x="677" y="84" width="50" height="15" fill="rgb(232,171,27)"/><text x="680.00" y="94.50">setup..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31) (18 samples, 4.23%)</title><rect x="677" y="100" width="50" height="15" fill="rgb(243,193,14)"/><text x="680.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (18 samples, 4.23%)</title><rect x="677" y="116" width="50" height="15" fill="rgb(227,22,40)"/><text x="680.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (18 samples, 4.23%)</title><rect x="677" y="132" width="50" height="15" fill="rgb(217,15,17)"/><text x="680.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (18 samples, 4.23%)</title><rect x="677" y="148" width="50" height="15" fill="rgb(218,60,54)"/><text x="680.00" y="158.50">run (..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (18 samples, 4.23%)</title><rect x="677" y="164" width="50" height="15" fill="rgb(246,47,6)"/><text x="680.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (18 samples, 4.23%)</title><rect x="677" y="180" width="50" height="15" fill="rgb(238,196,47)"/><text x="680.00" y="190.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (18 samples, 4.23%)</title><rect x="677" y="196" width="50" height="15" fill="rgb(233,213,7)"/><text x="680.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (18 samples, 4.23%)</title><rect x="677" y="212" width="50" height="15" fill="rgb(242,48,11)"/><text x="680.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (18 samples, 4.23%)</title><rect x="677" y="228" width="50" height="15" fill="rgb(220,157,34)"/><text x="680.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (17 samples, 3.99%)</title><rect x="680" y="244" width="47" height="15" fill="rgb(241,192,49)"/><text x="683.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (17 samples, 3.99%)</title><rect x="680" y="260" width="47" height="15" fill="rgb(240,215,2)"/><text x="683.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (17 samples, 3.99%)</title><rect x="680" y="276" width="47" height="15" fill="rgb(239,226,33)"/><text x="683.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (17 samples, 3.99%)</title><rect x="680" y="292" width="47" height="15" fill="rgb(246,134,10)"/><text x="683.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (17 samples, 3.99%)</title><rect x="680" y="308" width="47" height="15" fill="rgb(254,126,3)"/><text x="683.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (17 samples, 3.99%)</title><rect x="680" y="324" width="47" height="15" fill="rgb(212,33,42)"/><text x="683.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (17 samples, 3.99%)</title><rect x="680" y="340" width="47" height="15" fill="rgb(211,179,8)"/><text x="683.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (17 samples, 3.99%)</title><rect x="680" y="356" width="47" height="15" fill="rgb(219,169,7)"/><text x="683.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (17 samples, 3.99%)</title><rect x="680" y="372" width="47" height="15" fill="rgb(238,76,12)"/><text x="683.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (17 samples, 3.99%)</title><rect x="680" y="388" width="47" height="15" fill="rgb(213,162,18)"/><text x="683.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (17 samples, 3.99%)</title><rect x="680" y="404" width="47" height="15" fill="rgb(219,31,21)"/><text x="683.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (17 samples, 3.99%)</title><rect x="680" y="420" width="47" height="15" fill="rgb(236,164,12)"/><text x="683.00" y="430.50">Runt..</text></g><g><title>pybind11::array::size (numpy.h:619) (17 samples, 3.99%)</title><rect x="680" y="436" width="47" height="15" fill="rgb(219,96,53)"/><text x="683.00" y="446.50">pybi..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (17 samples, 3.99%)</title><rect x="680" y="452" width="47" height="15" fill="rgb(226,178,35)"/><text x="683.00" y="462.50">std:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (16 samples, 3.76%)</title><rect x="683" y="468" width="44" height="15" fill="rgb(218,12,19)"/><text x="686.00" y="478.50">GOMP..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (15 samples, 3.52%)</title><rect x="685" y="484" width="42" height="15" fill="rgb(206,10,51)"/><text x="688.00" y="494.50">Run..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (15 samples, 3.52%)</title><rect x="685" y="500" width="42" height="15" fill="rgb(242,215,44)"/><text x="688.00" y="510.50">std..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:608) (2 samples, 0.47%)</title><rect x="721" y="516" width="6" height="15" fill="rgb(244,192,37)"/><text x="724.00" y="526.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:36) (1 samples, 0.23%)</title><rect x="727" y="84" width="3" height="15" fill="rgb(223,99,40)"/><text x="730.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.23%)</title><rect x="727" y="100" width="3" height="15" fill="rgb(242,80,48)"/><text x="730.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.23%)</title><rect x="727" y="116" width="3" height="15" fill="rgb(242,85,39)"/><text x="730.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.23%)</title><rect x="727" y="132" width="3" height="15" fill="rgb(217,110,18)"/><text x="730.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.23%)</title><rect x="727" y="148" width="3" height="15" fill="rgb(219,172,35)"/><text x="730.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.23%)</title><rect x="727" y="164" width="3" height="15" fill="rgb(239,128,37)"/><text x="730.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.23%)</title><rect x="727" y="180" width="3" height="15" fill="rgb(248,106,43)"/><text x="730.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.23%)</title><rect x="727" y="196" width="3" height="15" fill="rgb(254,47,41)"/><text x="730.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.23%)</title><rect x="727" y="212" width="3" height="15" fill="rgb(215,144,19)"/><text x="730.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.23%)</title><rect x="727" y="228" width="3" height="15" fill="rgb(231,183,42)"/><text x="730.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.23%)</title><rect x="727" y="244" width="3" height="15" fill="rgb(213,37,20)"/><text x="730.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.23%)</title><rect x="727" y="260" width="3" height="15" fill="rgb(222,26,21)"/><text x="730.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.23%)</title><rect x="727" y="276" width="3" height="15" fill="rgb(215,157,1)"/><text x="730.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py:136) (1 samples, 0.23%)</title><rect x="727" y="292" width="3" height="15" fill="rgb(210,227,54)"/><text x="730.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py:204) (1 samples, 0.23%)</title><rect x="727" y="308" width="3" height="15" fill="rgb(252,191,25)"/><text x="730.00" y="318.50"></text></g><g><title>0x7f72550c7ff9 (?) (1 samples, 0.23%)</title><rect x="730" y="212" width="2" height="15" fill="rgb(228,23,52)"/><text x="733.00" y="222.50"></text></g><g><title>0x7f72550c2ef6 (?) (1 samples, 0.23%)</title><rect x="730" y="228" width="2" height="15" fill="rgb(243,212,32)"/><text x="733.00" y="238.50"></text></g><g><title>0x7f72550b7962 (?) (1 samples, 0.23%)</title><rect x="730" y="244" width="2" height="15" fill="rgb(249,74,29)"/><text x="733.00" y="254.50"></text></g><g><title>0x7f72550eb7a7 (?) (1 samples, 0.23%)</title><rect x="730" y="260" width="2" height="15" fill="rgb(214,40,28)"/><text x="733.00" y="270.50"></text></g><g><title>0x7f72550eb379 (?) (1 samples, 0.23%)</title><rect x="730" y="276" width="2" height="15" fill="rgb(218,213,48)"/><text x="733.00" y="286.50"></text></g><g><title>0x7f72555498b8 (?) (1 samples, 0.23%)</title><rect x="730" y="292" width="2" height="15" fill="rgb(235,75,30)"/><text x="733.00" y="302.50"></text></g><g><title>0x7f7255547c7f (?) (1 samples, 0.23%)</title><rect x="730" y="308" width="2" height="15" fill="rgb(237,25,51)"/><text x="733.00" y="318.50"></text></g><g><title>0x7f725555a99c (?) (1 samples, 0.23%)</title><rect x="730" y="324" width="2" height="15" fill="rgb(217,211,30)"/><text x="733.00" y="334.50"></text></g><g><title>0x7f7255281dc2 (?) (1 samples, 0.23%)</title><rect x="730" y="340" width="2" height="15" fill="rgb(218,216,40)"/><text x="733.00" y="350.50"></text></g><g><title>0x7f72552814ba (?) (1 samples, 0.23%)</title><rect x="730" y="356" width="2" height="15" fill="rgb(217,148,36)"/><text x="733.00" y="366.50"></text></g><g><title>0x7f725508ec40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="744" y="356" width="2" height="15" fill="rgb(209,4,33)"/><text x="747.00" y="366.50"></text></g><g><title>0x7f729508991e (libc-2.29.so) (1 samples, 0.23%)</title><rect x="746" y="356" width="3" height="15" fill="rgb(250,169,45)"/><text x="749.00" y="366.50"></text></g><g><title>0x7f725508e930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1178" y="388" width="3" height="15" fill="rgb(232,84,31)"/><text x="1181.00" y="398.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (157 samples, 36.85%)</title><rect x="749" y="356" width="435" height="15" fill="rgb(216,166,8)"/><text x="752.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeN..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.47%)</title><rect x="1178" y="372" width="6" height="15" fill="rgb(253,152,10)"/><text x="1181.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1181" y="388" width="3" height="15" fill="rgb(247,38,11)"/><text x="1184.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1181" y="404" width="3" height="15" fill="rgb(215,7,21)"/><text x="1184.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1181" y="420" width="3" height="15" fill="rgb(227,15,15)"/><text x="1184.00" y="430.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1184" y="356" width="3" height="15" fill="rgb(244,165,35)"/><text x="1187.00" y="366.50"></text></g><g><title>0x7f72950a9dbf (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1184" y="372" width="3" height="15" fill="rgb(224,18,0)"/><text x="1187.00" y="382.50"></text></g><g><title>all (426 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(250,105,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:68) (167 samples, 39.20%)</title><rect x="727" y="52" width="463" height="15" fill="rgb(239,19,51)"/><text x="730.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1000_4_12_f..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:67) (167 samples, 39.20%)</title><rect x="727" y="68" width="463" height="15" fill="rgb(210,184,22)"/><text x="730.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_m_reg_1000_4_1..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:37) (166 samples, 38.97%)</title><rect x="730" y="84" width="460" height="15" fill="rgb(229,149,16)"/><text x="733.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1000_..</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_float_.py:31) (166 samples, 38.97%)</title><rect x="730" y="100" width="460" height="15" fill="rgb(224,2,7)"/><text x="733.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1000_4_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (166 samples, 38.97%)</title><rect x="730" y="116" width="460" height="15" fill="rgb(243,228,44)"/><text x="733.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (166 samples, 38.97%)</title><rect x="730" y="132" width="460" height="15" fill="rgb(250,27,51)"/><text x="733.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (166 samples, 38.97%)</title><rect x="730" y="148" width="460" height="15" fill="rgb(208,200,45)"/><text x="733.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (166 samples, 38.97%)</title><rect x="730" y="164" width="460" height="15" fill="rgb(254,130,47)"/><text x="733.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (166 samples, 38.97%)</title><rect x="730" y="180" width="460" height="15" fill="rgb(211,135,47)"/><text x="733.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (166 samples, 38.97%)</title><rect x="730" y="196" width="460" height="15" fill="rgb(246,118,54)"/><text x="733.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="212" width="458" height="15" fill="rgb(229,25,8)"/><text x="735.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxrunti..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="228" width="458" height="15" fill="rgb(253,64,15)"/><text x="735.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::a..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="244" width="458" height="15" fill="rgb(217,141,31)"/><text x="735.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lam..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="260" width="458" height="15" fill="rgb(228,133,1)"/><text x="735.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="276" width="458" height="15" fill="rgb(209,203,26)"/><text x="735.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="292" width="458" height="15" fill="rgb(231,61,21)"/><text x="735.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="308" width="458" height="15" fill="rgb(237,17,30)"/><text x="735.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="324" width="458" height="15" fill="rgb(228,113,45)"/><text x="735.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onn..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 38.73%)</title><rect x="732" y="340" width="458" height="15" fill="rgb(218,177,41)"/><text x="735.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxru..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.23%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(232,156,1)"/><text x="1190.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.23%)</title><rect x="1187" y="372" width="3" height="15" fill="rgb(242,68,11)"/><text x="1190.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.23%)</title><rect x="1187" y="388" width="3" height="15" fill="rgb(235,54,16)"/><text x="1190.00" y="398.50"></text></g></g></svg>