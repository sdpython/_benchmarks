<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>add (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(231,26,2)"/><text x="13.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(242,187,14)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(212,87,51)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(234,22,11)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(222,104,34)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(243,89,44)"/><text x="17.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (5 samples, 2.01%)</title><rect x="10" y="868" width="23" height="15" fill="rgb(239,223,4)"/><text x="13.00" y="878.50">_..</text></g><g><title>__init__ (pkg_resources/__init__.py) (5 samples, 2.01%)</title><rect x="10" y="884" width="23" height="15" fill="rgb(207,65,46)"/><text x="13.00" y="894.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 2.01%)</title><rect x="10" y="900" width="23" height="15" fill="rgb(221,151,40)"/><text x="13.00" y="910.50">a..</text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.61%)</title><rect x="14" y="916" width="19" height="15" fill="rgb(217,29,30)"/><text x="17.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="19" y="932" width="14" height="15" fill="rgb(205,119,37)"/><text x="22.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.80%)</title><rect x="24" y="948" width="9" height="15" fill="rgb(237,147,2)"/><text x="27.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.80%)</title><rect x="24" y="964" width="9" height="15" fill="rgb(212,49,48)"/><text x="27.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="28" y="980" width="5" height="15" fill="rgb(233,113,34)"/><text x="31.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="28" y="996" width="5" height="15" fill="rgb(215,177,10)"/><text x="31.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.80%)</title><rect x="33" y="900" width="10" height="15" fill="rgb(226,147,52)"/><text x="36.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.80%)</title><rect x="33" y="916" width="10" height="15" fill="rgb(251,23,32)"/><text x="36.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="38" y="932" width="5" height="15" fill="rgb(247,178,49)"/><text x="41.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="38" y="948" width="5" height="15" fill="rgb(219,164,54)"/><text x="41.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.40%)</title><rect x="38" y="964" width="5" height="15" fill="rgb(224,216,24)"/><text x="41.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.40%)</title><rect x="38" y="980" width="5" height="15" fill="rgb(240,77,42)"/><text x="41.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.40%)</title><rect x="38" y="996" width="5" height="15" fill="rgb(248,135,54)"/><text x="41.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.40%)</title><rect x="38" y="1012" width="5" height="15" fill="rgb(214,183,11)"/><text x="41.00" y="1022.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 3.21%)</title><rect x="10" y="292" width="37" height="15" fill="rgb(238,106,10)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="308" width="37" height="15" fill="rgb(213,196,46)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="324" width="37" height="15" fill="rgb(215,204,49)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="340" width="37" height="15" fill="rgb(224,143,52)"/><text x="13.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.21%)</title><rect x="10" y="356" width="37" height="15" fill="rgb(233,111,54)"/><text x="13.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="372" width="37" height="15" fill="rgb(240,106,23)"/><text x="13.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 3.21%)</title><rect x="10" y="388" width="37" height="15" fill="rgb(208,135,44)"/><text x="13.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="404" width="37" height="15" fill="rgb(241,15,26)"/><text x="13.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="420" width="37" height="15" fill="rgb(215,223,48)"/><text x="13.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="436" width="37" height="15" fill="rgb(240,56,19)"/><text x="13.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.21%)</title><rect x="10" y="452" width="37" height="15" fill="rgb(225,152,16)"/><text x="13.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="468" width="37" height="15" fill="rgb(211,2,34)"/><text x="13.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 3.21%)</title><rect x="10" y="484" width="37" height="15" fill="rgb(218,177,6)"/><text x="13.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="500" width="37" height="15" fill="rgb(212,119,25)"/><text x="13.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="516" width="37" height="15" fill="rgb(214,7,53)"/><text x="13.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="532" width="37" height="15" fill="rgb(210,21,47)"/><text x="13.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.21%)</title><rect x="10" y="548" width="37" height="15" fill="rgb(241,153,36)"/><text x="13.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="564" width="37" height="15" fill="rgb(229,42,41)"/><text x="13.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 3.21%)</title><rect x="10" y="580" width="37" height="15" fill="rgb(226,174,17)"/><text x="13.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="596" width="37" height="15" fill="rgb(221,111,47)"/><text x="13.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="612" width="37" height="15" fill="rgb(246,115,48)"/><text x="13.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="628" width="37" height="15" fill="rgb(207,53,46)"/><text x="13.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="644" width="37" height="15" fill="rgb(237,199,5)"/><text x="13.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="660" width="37" height="15" fill="rgb(248,208,28)"/><text x="13.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="676" width="37" height="15" fill="rgb(230,209,2)"/><text x="13.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.21%)</title><rect x="10" y="692" width="37" height="15" fill="rgb(249,30,2)"/><text x="13.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="708" width="37" height="15" fill="rgb(237,83,9)"/><text x="13.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 3.21%)</title><rect x="10" y="724" width="37" height="15" fill="rgb(220,182,19)"/><text x="13.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="740" width="37" height="15" fill="rgb(233,20,43)"/><text x="13.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="756" width="37" height="15" fill="rgb(232,151,8)"/><text x="13.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="772" width="37" height="15" fill="rgb(217,144,46)"/><text x="13.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.21%)</title><rect x="10" y="788" width="37" height="15" fill="rgb(209,227,43)"/><text x="13.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.21%)</title><rect x="10" y="804" width="37" height="15" fill="rgb(246,41,47)"/><text x="13.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 3.21%)</title><rect x="10" y="820" width="37" height="15" fill="rgb(253,14,27)"/><text x="13.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 3.21%)</title><rect x="10" y="836" width="37" height="15" fill="rgb(210,149,41)"/><text x="13.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 3.21%)</title><rect x="10" y="852" width="37" height="15" fill="rgb(251,118,20)"/><text x="13.00" y="862.50">_in..</text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="33" y="868" width="14" height="15" fill="rgb(235,24,10)"/><text x="36.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.20%)</title><rect x="33" y="884" width="14" height="15" fill="rgb(211,142,51)"/><text x="36.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.40%)</title><rect x="43" y="900" width="4" height="15" fill="rgb(221,34,35)"/><text x="46.00" y="910.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.40%)</title><rect x="43" y="916" width="4" height="15" fill="rgb(236,160,12)"/><text x="46.00" y="926.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="788" width="5" height="15" fill="rgb(227,193,22)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="804" width="5" height="15" fill="rgb(237,4,25)"/><text x="50.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="820" width="5" height="15" fill="rgb(236,125,24)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="836" width="5" height="15" fill="rgb(210,160,14)"/><text x="50.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="852" width="5" height="15" fill="rgb(235,57,54)"/><text x="50.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="868" width="5" height="15" fill="rgb(212,106,20)"/><text x="50.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="884" width="5" height="15" fill="rgb(209,129,6)"/><text x="50.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.40%)</title><rect x="47" y="900" width="5" height="15" fill="rgb(239,23,25)"/><text x="50.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="916" width="5" height="15" fill="rgb(245,190,6)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="932" width="5" height="15" fill="rgb(238,210,50)"/><text x="50.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="948" width="5" height="15" fill="rgb(216,72,30)"/><text x="50.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="964" width="5" height="15" fill="rgb(218,110,45)"/><text x="50.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="980" width="5" height="15" fill="rgb(246,105,9)"/><text x="50.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.40%)</title><rect x="47" y="996" width="5" height="15" fill="rgb(211,176,22)"/><text x="50.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1012" width="5" height="15" fill="rgb(236,141,7)"/><text x="50.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1028" width="5" height="15" fill="rgb(250,178,45)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1044" width="5" height="15" fill="rgb(249,84,10)"/><text x="50.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1060" width="5" height="15" fill="rgb(218,172,42)"/><text x="50.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1076" width="5" height="15" fill="rgb(251,98,49)"/><text x="50.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1092" width="5" height="15" fill="rgb(254,141,17)"/><text x="50.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1108" width="5" height="15" fill="rgb(254,99,50)"/><text x="50.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.40%)</title><rect x="47" y="1124" width="5" height="15" fill="rgb(247,202,33)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1140" width="5" height="15" fill="rgb(245,208,48)"/><text x="50.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1156" width="5" height="15" fill="rgb(254,54,18)"/><text x="50.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1172" width="5" height="15" fill="rgb(213,188,22)"/><text x="50.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1188" width="5" height="15" fill="rgb(217,78,47)"/><text x="50.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1204" width="5" height="15" fill="rgb(220,126,34)"/><text x="50.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.40%)</title><rect x="47" y="1220" width="5" height="15" fill="rgb(250,186,37)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1236" width="5" height="15" fill="rgb(238,130,24)"/><text x="50.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1252" width="5" height="15" fill="rgb(251,50,38)"/><text x="50.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1268" width="5" height="15" fill="rgb(239,187,39)"/><text x="50.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1284" width="5" height="15" fill="rgb(214,147,42)"/><text x="50.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1300" width="5" height="15" fill="rgb(220,181,24)"/><text x="50.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.40%)</title><rect x="47" y="1316" width="5" height="15" fill="rgb(206,17,5)"/><text x="50.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1332" width="5" height="15" fill="rgb(219,57,10)"/><text x="50.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1348" width="5" height="15" fill="rgb(215,12,2)"/><text x="50.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1364" width="5" height="15" fill="rgb(236,77,13)"/><text x="50.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1380" width="5" height="15" fill="rgb(225,107,34)"/><text x="50.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1396" width="5" height="15" fill="rgb(251,118,54)"/><text x="50.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.40%)</title><rect x="47" y="1412" width="5" height="15" fill="rgb(245,26,43)"/><text x="50.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1428" width="5" height="15" fill="rgb(232,223,7)"/><text x="50.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1444" width="5" height="15" fill="rgb(227,38,41)"/><text x="50.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1460" width="5" height="15" fill="rgb(228,155,35)"/><text x="50.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1476" width="5" height="15" fill="rgb(246,44,43)"/><text x="50.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1492" width="5" height="15" fill="rgb(244,6,38)"/><text x="50.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.40%)</title><rect x="47" y="1508" width="5" height="15" fill="rgb(220,53,52)"/><text x="50.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1524" width="5" height="15" fill="rgb(238,160,33)"/><text x="50.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1540" width="5" height="15" fill="rgb(227,56,20)"/><text x="50.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1556" width="5" height="15" fill="rgb(220,194,20)"/><text x="50.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1572" width="5" height="15" fill="rgb(222,9,9)"/><text x="50.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1588" width="5" height="15" fill="rgb(252,104,24)"/><text x="50.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/dsolve/__init__.py) (1 samples, 0.40%)</title><rect x="47" y="1604" width="5" height="15" fill="rgb(228,84,38)"/><text x="50.00" y="1614.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1620" width="5" height="15" fill="rgb(210,151,6)"/><text x="50.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1636" width="5" height="15" fill="rgb(213,105,7)"/><text x="50.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1652" width="5" height="15" fill="rgb(211,31,42)"/><text x="50.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1668" width="5" height="15" fill="rgb(217,13,51)"/><text x="50.00" y="1678.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="47" y="1684" width="5" height="15" fill="rgb(216,157,38)"/><text x="50.00" y="1694.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1700" width="5" height="15" fill="rgb(213,221,49)"/><text x="50.00" y="1710.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1716" width="5" height="15" fill="rgb(237,150,46)"/><text x="50.00" y="1726.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1732" width="5" height="15" fill="rgb(215,0,33)"/><text x="50.00" y="1742.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1748" width="5" height="15" fill="rgb(232,1,48)"/><text x="50.00" y="1758.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="47" y="1764" width="5" height="15" fill="rgb(245,117,10)"/><text x="50.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.02%)</title><rect x="10" y="196" width="47" height="15" fill="rgb(227,228,38)"/><text x="13.00" y="206.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.02%)</title><rect x="10" y="212" width="47" height="15" fill="rgb(245,209,3)"/><text x="13.00" y="222.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.02%)</title><rect x="10" y="228" width="47" height="15" fill="rgb(232,25,35)"/><text x="13.00" y="238.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.02%)</title><rect x="10" y="244" width="47" height="15" fill="rgb(234,10,13)"/><text x="13.00" y="254.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.02%)</title><rect x="10" y="260" width="47" height="15" fill="rgb(241,92,11)"/><text x="13.00" y="270.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.02%)</title><rect x="10" y="276" width="47" height="15" fill="rgb(205,213,44)"/><text x="13.00" y="286.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.80%)</title><rect x="47" y="292" width="10" height="15" fill="rgb(235,58,52)"/><text x="50.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="308" width="10" height="15" fill="rgb(223,3,46)"/><text x="50.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="324" width="10" height="15" fill="rgb(217,164,8)"/><text x="50.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="340" width="10" height="15" fill="rgb(215,50,38)"/><text x="50.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="47" y="356" width="10" height="15" fill="rgb(231,178,38)"/><text x="50.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="372" width="10" height="15" fill="rgb(250,71,8)"/><text x="50.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.80%)</title><rect x="47" y="388" width="10" height="15" fill="rgb(248,15,18)"/><text x="50.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="404" width="10" height="15" fill="rgb(209,77,25)"/><text x="50.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="420" width="10" height="15" fill="rgb(240,121,47)"/><text x="50.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="436" width="10" height="15" fill="rgb(219,229,19)"/><text x="50.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="47" y="452" width="10" height="15" fill="rgb(222,61,43)"/><text x="50.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="468" width="10" height="15" fill="rgb(227,138,37)"/><text x="50.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.80%)</title><rect x="47" y="484" width="10" height="15" fill="rgb(241,113,14)"/><text x="50.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="500" width="10" height="15" fill="rgb(238,203,35)"/><text x="50.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="516" width="10" height="15" fill="rgb(214,47,5)"/><text x="50.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="532" width="10" height="15" fill="rgb(235,149,49)"/><text x="50.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="47" y="548" width="10" height="15" fill="rgb(210,211,25)"/><text x="50.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="564" width="10" height="15" fill="rgb(234,155,27)"/><text x="50.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.80%)</title><rect x="47" y="580" width="10" height="15" fill="rgb(215,48,31)"/><text x="50.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="596" width="10" height="15" fill="rgb(241,175,8)"/><text x="50.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="612" width="10" height="15" fill="rgb(228,178,35)"/><text x="50.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="628" width="10" height="15" fill="rgb(212,42,42)"/><text x="50.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="47" y="644" width="10" height="15" fill="rgb(220,107,34)"/><text x="50.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="660" width="10" height="15" fill="rgb(206,202,46)"/><text x="50.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.80%)</title><rect x="47" y="676" width="10" height="15" fill="rgb(251,158,16)"/><text x="50.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="692" width="10" height="15" fill="rgb(219,212,3)"/><text x="50.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="708" width="10" height="15" fill="rgb(243,117,5)"/><text x="50.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="724" width="10" height="15" fill="rgb(215,158,40)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="47" y="740" width="10" height="15" fill="rgb(235,212,31)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="47" y="756" width="10" height="15" fill="rgb(248,90,37)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.80%)</title><rect x="47" y="772" width="10" height="15" fill="rgb(211,90,46)"/><text x="50.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.40%)</title><rect x="52" y="788" width="5" height="15" fill="rgb(242,85,5)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="484" width="5" height="15" fill="rgb(227,87,45)"/><text x="60.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="500" width="5" height="15" fill="rgb(224,59,1)"/><text x="60.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="516" width="5" height="15" fill="rgb(214,32,24)"/><text x="60.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="532" width="5" height="15" fill="rgb(247,228,10)"/><text x="60.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="548" width="5" height="15" fill="rgb(252,181,13)"/><text x="60.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="564" width="5" height="15" fill="rgb(223,157,13)"/><text x="60.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.40%)</title><rect x="57" y="580" width="5" height="15" fill="rgb(244,116,25)"/><text x="60.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="596" width="5" height="15" fill="rgb(243,229,40)"/><text x="60.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="612" width="5" height="15" fill="rgb(222,179,39)"/><text x="60.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="628" width="5" height="15" fill="rgb(207,214,23)"/><text x="60.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="644" width="5" height="15" fill="rgb(207,180,13)"/><text x="60.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="660" width="5" height="15" fill="rgb(248,6,12)"/><text x="60.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.40%)</title><rect x="57" y="676" width="5" height="15" fill="rgb(209,115,27)"/><text x="60.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="692" width="5" height="15" fill="rgb(248,81,50)"/><text x="60.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="708" width="5" height="15" fill="rgb(210,229,52)"/><text x="60.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="724" width="5" height="15" fill="rgb(218,77,38)"/><text x="60.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="740" width="5" height="15" fill="rgb(243,86,30)"/><text x="60.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="756" width="5" height="15" fill="rgb(220,150,38)"/><text x="60.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.40%)</title><rect x="57" y="772" width="5" height="15" fill="rgb(219,79,45)"/><text x="60.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="788" width="5" height="15" fill="rgb(249,77,20)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="804" width="5" height="15" fill="rgb(217,201,47)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="820" width="5" height="15" fill="rgb(233,74,19)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="836" width="5" height="15" fill="rgb(215,162,1)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="852" width="5" height="15" fill="rgb(216,75,16)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.40%)</title><rect x="57" y="868" width="5" height="15" fill="rgb(212,136,12)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="884" width="5" height="15" fill="rgb(252,109,17)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="900" width="5" height="15" fill="rgb(249,34,39)"/><text x="60.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="916" width="5" height="15" fill="rgb(219,55,27)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="932" width="5" height="15" fill="rgb(249,36,52)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="948" width="5" height="15" fill="rgb(251,0,53)"/><text x="60.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="964" width="5" height="15" fill="rgb(220,38,35)"/><text x="60.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="980" width="5" height="15" fill="rgb(230,71,24)"/><text x="60.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="996" width="5" height="15" fill="rgb(242,178,7)"/><text x="60.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.40%)</title><rect x="57" y="1012" width="5" height="15" fill="rgb(219,158,14)"/><text x="60.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1028" width="5" height="15" fill="rgb(242,182,46)"/><text x="60.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1044" width="5" height="15" fill="rgb(208,221,44)"/><text x="60.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1060" width="5" height="15" fill="rgb(211,31,18)"/><text x="60.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1076" width="5" height="15" fill="rgb(231,143,47)"/><text x="60.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1092" width="5" height="15" fill="rgb(229,171,29)"/><text x="60.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.40%)</title><rect x="57" y="1108" width="5" height="15" fill="rgb(238,39,33)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1124" width="5" height="15" fill="rgb(206,11,43)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1140" width="5" height="15" fill="rgb(237,17,24)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1156" width="5" height="15" fill="rgb(250,43,23)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1172" width="5" height="15" fill="rgb(212,140,2)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1188" width="5" height="15" fill="rgb(237,192,29)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.40%)</title><rect x="57" y="1204" width="5" height="15" fill="rgb(239,50,33)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1220" width="5" height="15" fill="rgb(254,7,9)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1236" width="5" height="15" fill="rgb(234,18,51)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1252" width="5" height="15" fill="rgb(232,122,18)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1268" width="5" height="15" fill="rgb(215,52,12)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1284" width="5" height="15" fill="rgb(252,113,29)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/__init__.py) (1 samples, 0.40%)</title><rect x="57" y="1300" width="5" height="15" fill="rgb(224,111,11)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1316" width="5" height="15" fill="rgb(214,62,50)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1332" width="5" height="15" fill="rgb(213,106,3)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1348" width="5" height="15" fill="rgb(248,143,4)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1364" width="5" height="15" fill="rgb(207,171,17)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1380" width="5" height="15" fill="rgb(210,84,42)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_gaussian_mixture.py) (1 samples, 0.40%)</title><rect x="57" y="1396" width="5" height="15" fill="rgb(214,65,8)"/><text x="60.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1412" width="5" height="15" fill="rgb(233,97,44)"/><text x="60.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1428" width="5" height="15" fill="rgb(234,212,24)"/><text x="60.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1444" width="5" height="15" fill="rgb(240,30,48)"/><text x="60.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1460" width="5" height="15" fill="rgb(208,202,10)"/><text x="60.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1476" width="5" height="15" fill="rgb(230,182,9)"/><text x="60.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/mixture/_base.py) (1 samples, 0.40%)</title><rect x="57" y="1492" width="5" height="15" fill="rgb(208,222,31)"/><text x="60.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1508" width="5" height="15" fill="rgb(205,222,44)"/><text x="60.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1524" width="5" height="15" fill="rgb(251,151,38)"/><text x="60.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1540" width="5" height="15" fill="rgb(211,209,50)"/><text x="60.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1556" width="5" height="15" fill="rgb(214,101,41)"/><text x="60.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1572" width="5" height="15" fill="rgb(247,18,30)"/><text x="60.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1588" width="5" height="15" fill="rgb(249,44,29)"/><text x="60.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1604" width="5" height="15" fill="rgb(235,26,8)"/><text x="60.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/__init__.py) (1 samples, 0.40%)</title><rect x="57" y="1620" width="5" height="15" fill="rgb(206,175,32)"/><text x="60.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1636" width="5" height="15" fill="rgb(233,206,38)"/><text x="60.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1652" width="5" height="15" fill="rgb(235,10,26)"/><text x="60.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1668" width="5" height="15" fill="rgb(252,181,38)"/><text x="60.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1684" width="5" height="15" fill="rgb(219,49,24)"/><text x="60.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1700" width="5" height="15" fill="rgb(211,98,47)"/><text x="60.00" y="1710.50"></text></g><g><title>&lt;module&gt; (sklearn/cluster/_spectral.py) (1 samples, 0.40%)</title><rect x="57" y="1716" width="5" height="15" fill="rgb(217,194,26)"/><text x="60.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1732" width="5" height="15" fill="rgb(221,36,11)"/><text x="60.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1748" width="5" height="15" fill="rgb(222,97,47)"/><text x="60.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1764" width="5" height="15" fill="rgb(225,132,18)"/><text x="60.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1780" width="5" height="15" fill="rgb(214,3,16)"/><text x="60.00" y="1790.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1796" width="5" height="15" fill="rgb(211,202,3)"/><text x="60.00" y="1806.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/__init__.py) (1 samples, 0.40%)</title><rect x="57" y="1812" width="5" height="15" fill="rgb(220,150,11)"/><text x="60.00" y="1822.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1828" width="5" height="15" fill="rgb(214,213,53)"/><text x="60.00" y="1838.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1844" width="5" height="15" fill="rgb(220,144,30)"/><text x="60.00" y="1854.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1860" width="5" height="15" fill="rgb(226,205,51)"/><text x="60.00" y="1870.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="57" y="1876" width="5" height="15" fill="rgb(252,32,9)"/><text x="60.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1892" width="5" height="15" fill="rgb(226,24,27)"/><text x="60.00" y="1902.50"></text></g><g><title>&lt;module&gt; (sklearn/manifold/_isomap.py) (1 samples, 0.40%)</title><rect x="57" y="1908" width="5" height="15" fill="rgb(245,95,2)"/><text x="60.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1924" width="5" height="15" fill="rgb(235,205,25)"/><text x="60.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1940" width="5" height="15" fill="rgb(234,48,6)"/><text x="60.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1956" width="5" height="15" fill="rgb(220,48,42)"/><text x="60.00" y="1966.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="57" y="1972" width="5" height="15" fill="rgb(211,49,45)"/><text x="60.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.80%)</title><rect x="57" y="340" width="9" height="15" fill="rgb(230,0,36)"/><text x="60.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="356" width="9" height="15" fill="rgb(224,71,35)"/><text x="60.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="372" width="9" height="15" fill="rgb(212,67,34)"/><text x="60.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="388" width="9" height="15" fill="rgb(209,5,9)"/><text x="60.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.80%)</title><rect x="57" y="404" width="9" height="15" fill="rgb(232,143,53)"/><text x="60.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="420" width="9" height="15" fill="rgb(233,217,45)"/><text x="60.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (2 samples, 0.80%)</title><rect x="57" y="436" width="9" height="15" fill="rgb(236,46,16)"/><text x="60.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="452" width="9" height="15" fill="rgb(226,206,11)"/><text x="60.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.80%)</title><rect x="57" y="468" width="9" height="15" fill="rgb(222,225,48)"/><text x="60.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="484" width="4" height="15" fill="rgb(232,215,33)"/><text x="65.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="500" width="4" height="15" fill="rgb(252,149,45)"/><text x="65.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="516" width="4" height="15" fill="rgb(207,123,20)"/><text x="65.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.40%)</title><rect x="62" y="532" width="4" height="15" fill="rgb(206,193,26)"/><text x="65.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="548" width="4" height="15" fill="rgb(254,23,38)"/><text x="65.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="564" width="4" height="15" fill="rgb(214,136,49)"/><text x="65.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="580" width="4" height="15" fill="rgb(217,141,12)"/><text x="65.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="596" width="4" height="15" fill="rgb(220,129,34)"/><text x="65.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="612" width="4" height="15" fill="rgb(225,140,45)"/><text x="65.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.40%)</title><rect x="62" y="628" width="4" height="15" fill="rgb(233,70,14)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="644" width="4" height="15" fill="rgb(236,197,19)"/><text x="65.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="660" width="4" height="15" fill="rgb(223,88,26)"/><text x="65.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="676" width="4" height="15" fill="rgb(248,73,4)"/><text x="65.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="692" width="4" height="15" fill="rgb(209,46,22)"/><text x="65.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="708" width="4" height="15" fill="rgb(226,54,49)"/><text x="65.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.40%)</title><rect x="62" y="724" width="4" height="15" fill="rgb(248,32,2)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="740" width="4" height="15" fill="rgb(233,14,20)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="756" width="4" height="15" fill="rgb(217,91,2)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="772" width="4" height="15" fill="rgb(214,89,40)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="788" width="4" height="15" fill="rgb(207,203,24)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="804" width="4" height="15" fill="rgb(236,180,53)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.40%)</title><rect x="62" y="820" width="4" height="15" fill="rgb(237,188,14)"/><text x="65.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="836" width="4" height="15" fill="rgb(211,161,24)"/><text x="65.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="852" width="4" height="15" fill="rgb(225,227,10)"/><text x="65.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="868" width="4" height="15" fill="rgb(250,52,31)"/><text x="65.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="884" width="4" height="15" fill="rgb(224,67,25)"/><text x="65.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="900" width="4" height="15" fill="rgb(222,176,23)"/><text x="65.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.40%)</title><rect x="62" y="916" width="4" height="15" fill="rgb(250,226,18)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="932" width="4" height="15" fill="rgb(247,135,8)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="948" width="4" height="15" fill="rgb(224,41,45)"/><text x="65.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="964" width="4" height="15" fill="rgb(228,184,4)"/><text x="65.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="980" width="4" height="15" fill="rgb(233,171,16)"/><text x="65.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="996" width="4" height="15" fill="rgb(228,79,3)"/><text x="65.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.40%)</title><rect x="62" y="1012" width="4" height="15" fill="rgb(207,2,19)"/><text x="65.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1028" width="4" height="15" fill="rgb(226,84,37)"/><text x="65.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1044" width="4" height="15" fill="rgb(230,224,51)"/><text x="65.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1060" width="4" height="15" fill="rgb(215,203,17)"/><text x="65.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1076" width="4" height="15" fill="rgb(248,62,26)"/><text x="65.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1092" width="4" height="15" fill="rgb(207,82,51)"/><text x="65.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.40%)</title><rect x="62" y="1108" width="4" height="15" fill="rgb(217,86,35)"/><text x="65.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1124" width="4" height="15" fill="rgb(236,95,6)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1140" width="4" height="15" fill="rgb(211,31,43)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1156" width="4" height="15" fill="rgb(226,128,0)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1172" width="4" height="15" fill="rgb(238,211,42)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1188" width="4" height="15" fill="rgb(219,205,15)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.40%)</title><rect x="62" y="1204" width="4" height="15" fill="rgb(251,180,6)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1220" width="4" height="15" fill="rgb(236,46,24)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1236" width="4" height="15" fill="rgb(240,226,27)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1252" width="4" height="15" fill="rgb(238,167,44)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1268" width="4" height="15" fill="rgb(212,219,38)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1284" width="4" height="15" fill="rgb(217,209,35)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.40%)</title><rect x="62" y="1300" width="4" height="15" fill="rgb(254,155,13)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1316" width="4" height="15" fill="rgb(225,140,17)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1332" width="4" height="15" fill="rgb(231,169,38)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1348" width="4" height="15" fill="rgb(207,87,31)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1364" width="4" height="15" fill="rgb(248,167,8)"/><text x="65.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1380" width="4" height="15" fill="rgb(253,129,32)"/><text x="65.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.40%)</title><rect x="62" y="1396" width="4" height="15" fill="rgb(232,116,31)"/><text x="65.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1412" width="4" height="15" fill="rgb(224,79,31)"/><text x="65.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1428" width="4" height="15" fill="rgb(247,181,4)"/><text x="65.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="62" y="1444" width="4" height="15" fill="rgb(227,149,19)"/><text x="65.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1460" width="4" height="15" fill="rgb(244,65,29)"/><text x="65.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1476" width="4" height="15" fill="rgb(222,139,22)"/><text x="65.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="62" y="1492" width="4" height="15" fill="rgb(217,217,15)"/><text x="65.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (3 samples, 1.20%)</title><rect x="57" y="244" width="14" height="15" fill="rgb(247,124,53)"/><text x="60.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="57" y="260" width="14" height="15" fill="rgb(220,187,41)"/><text x="60.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="57" y="276" width="14" height="15" fill="rgb(228,55,11)"/><text x="60.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="57" y="292" width="14" height="15" fill="rgb(253,138,16)"/><text x="60.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.20%)</title><rect x="57" y="308" width="14" height="15" fill="rgb(216,163,1)"/><text x="60.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.20%)</title><rect x="57" y="324" width="14" height="15" fill="rgb(207,97,48)"/><text x="60.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.40%)</title><rect x="66" y="340" width="5" height="15" fill="rgb(251,58,0)"/><text x="69.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="356" width="5" height="15" fill="rgb(211,44,13)"/><text x="69.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="372" width="5" height="15" fill="rgb(211,227,14)"/><text x="69.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="388" width="5" height="15" fill="rgb(236,140,33)"/><text x="69.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="404" width="5" height="15" fill="rgb(208,97,4)"/><text x="69.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="420" width="5" height="15" fill="rgb(205,67,12)"/><text x="69.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="436" width="5" height="15" fill="rgb(254,92,11)"/><text x="69.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="452" width="5" height="15" fill="rgb(222,103,15)"/><text x="69.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="468" width="5" height="15" fill="rgb(225,162,51)"/><text x="69.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.40%)</title><rect x="66" y="484" width="5" height="15" fill="rgb(234,170,51)"/><text x="69.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="500" width="5" height="15" fill="rgb(228,104,49)"/><text x="69.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="516" width="5" height="15" fill="rgb(220,226,2)"/><text x="69.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="532" width="5" height="15" fill="rgb(216,195,22)"/><text x="69.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="548" width="5" height="15" fill="rgb(215,107,47)"/><text x="69.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="564" width="5" height="15" fill="rgb(222,225,43)"/><text x="69.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.40%)</title><rect x="66" y="580" width="5" height="15" fill="rgb(215,28,4)"/><text x="69.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="596" width="5" height="15" fill="rgb(205,173,35)"/><text x="69.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="612" width="5" height="15" fill="rgb(243,111,27)"/><text x="69.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="628" width="5" height="15" fill="rgb(229,95,8)"/><text x="69.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="644" width="5" height="15" fill="rgb(244,183,45)"/><text x="69.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="660" width="5" height="15" fill="rgb(214,25,30)"/><text x="69.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.40%)</title><rect x="66" y="676" width="5" height="15" fill="rgb(220,167,19)"/><text x="69.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="692" width="5" height="15" fill="rgb(211,44,41)"/><text x="69.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="708" width="5" height="15" fill="rgb(239,154,39)"/><text x="69.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="724" width="5" height="15" fill="rgb(246,152,18)"/><text x="69.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="66" y="740" width="5" height="15" fill="rgb(218,61,16)"/><text x="69.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="66" y="756" width="5" height="15" fill="rgb(216,86,21)"/><text x="69.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.40%)</title><rect x="66" y="772" width="5" height="15" fill="rgb(223,172,36)"/><text x="69.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.40%)</title><rect x="66" y="788" width="5" height="15" fill="rgb(226,191,0)"/><text x="69.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.40%)</title><rect x="66" y="804" width="5" height="15" fill="rgb(240,60,21)"/><text x="69.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.40%)</title><rect x="66" y="820" width="5" height="15" fill="rgb(237,201,39)"/><text x="69.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="66" y="836" width="5" height="15" fill="rgb(231,60,13)"/><text x="69.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="66" y="852" width="5" height="15" fill="rgb(228,1,13)"/><text x="69.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="66" y="868" width="5" height="15" fill="rgb(210,188,22)"/><text x="69.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.40%)</title><rect x="66" y="884" width="5" height="15" fill="rgb(219,22,2)"/><text x="69.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.40%)</title><rect x="66" y="900" width="5" height="15" fill="rgb(213,8,13)"/><text x="69.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.62%)</title><rect x="10" y="68" width="66" height="15" fill="rgb(208,31,18)"/><text x="13.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.62%)</title><rect x="10" y="84" width="66" height="15" fill="rgb(250,214,38)"/><text x="13.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.62%)</title><rect x="10" y="100" width="66" height="15" fill="rgb(232,172,29)"/><text x="13.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 5.62%)</title><rect x="10" y="116" width="66" height="15" fill="rgb(246,173,30)"/><text x="13.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.62%)</title><rect x="10" y="132" width="66" height="15" fill="rgb(245,226,2)"/><text x="13.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py) (14 samples, 5.62%)</title><rect x="10" y="148" width="66" height="15" fill="rgb(213,28,7)"/><text x="13.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.62%)</title><rect x="10" y="164" width="66" height="15" fill="rgb(228,141,35)"/><text x="13.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 5.62%)</title><rect x="10" y="180" width="66" height="15" fill="rgb(238,77,43)"/><text x="13.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.61%)</title><rect x="57" y="196" width="19" height="15" fill="rgb(246,172,38)"/><text x="60.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.61%)</title><rect x="57" y="212" width="19" height="15" fill="rgb(252,86,2)"/><text x="60.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.61%)</title><rect x="57" y="228" width="19" height="15" fill="rgb(211,104,9)"/><text x="60.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.40%)</title><rect x="71" y="244" width="5" height="15" fill="rgb(250,119,45)"/><text x="74.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="260" width="5" height="15" fill="rgb(210,161,20)"/><text x="74.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="276" width="5" height="15" fill="rgb(222,152,11)"/><text x="74.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="292" width="5" height="15" fill="rgb(215,111,23)"/><text x="74.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="308" width="5" height="15" fill="rgb(228,73,39)"/><text x="74.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="324" width="5" height="15" fill="rgb(244,77,36)"/><text x="74.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="71" y="340" width="5" height="15" fill="rgb(218,192,49)"/><text x="74.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="356" width="5" height="15" fill="rgb(216,104,17)"/><text x="74.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.40%)</title><rect x="71" y="372" width="5" height="15" fill="rgb(213,21,6)"/><text x="74.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="388" width="5" height="15" fill="rgb(213,15,26)"/><text x="74.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="404" width="5" height="15" fill="rgb(226,167,7)"/><text x="74.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="420" width="5" height="15" fill="rgb(243,193,0)"/><text x="74.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="436" width="5" height="15" fill="rgb(239,73,20)"/><text x="74.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="452" width="5" height="15" fill="rgb(253,182,9)"/><text x="74.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="71" y="468" width="5" height="15" fill="rgb(245,178,14)"/><text x="74.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="484" width="5" height="15" fill="rgb(223,83,35)"/><text x="74.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.40%)</title><rect x="71" y="500" width="5" height="15" fill="rgb(232,26,15)"/><text x="74.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="516" width="5" height="15" fill="rgb(224,212,21)"/><text x="74.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="532" width="5" height="15" fill="rgb(244,140,3)"/><text x="74.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="548" width="5" height="15" fill="rgb(235,39,33)"/><text x="74.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="71" y="564" width="5" height="15" fill="rgb(252,19,50)"/><text x="74.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="580" width="5" height="15" fill="rgb(218,23,12)"/><text x="74.00" y="590.50"></text></g><g><title>0x7f5448691585 (?) (1 samples, 0.40%)</title><rect x="71" y="596" width="5" height="15" fill="rgb(211,64,7)"/><text x="74.00" y="606.50"></text></g><g><title>0x7f5448697075 (?) (1 samples, 0.40%)</title><rect x="71" y="612" width="5" height="15" fill="rgb(230,216,26)"/><text x="74.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="628" width="5" height="15" fill="rgb(250,95,35)"/><text x="74.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="644" width="5" height="15" fill="rgb(214,69,50)"/><text x="74.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="660" width="5" height="15" fill="rgb(206,121,34)"/><text x="74.00" y="670.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="676" width="5" height="15" fill="rgb(237,104,11)"/><text x="74.00" y="686.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="71" y="692" width="5" height="15" fill="rgb(226,65,16)"/><text x="74.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="71" y="708" width="5" height="15" fill="rgb(241,215,54)"/><text x="74.00" y="718.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="724" width="5" height="15" fill="rgb(228,108,15)"/><text x="74.00" y="734.50"></text></g><g><title>0x7f5456052995 (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="740" width="5" height="15" fill="rgb(215,19,44)"/><text x="74.00" y="750.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="756" width="5" height="15" fill="rgb(241,200,8)"/><text x="74.00" y="766.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="772" width="5" height="15" fill="rgb(227,109,32)"/><text x="74.00" y="782.50"></text></g><g><title>0x7f5456052258 (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="788" width="5" height="15" fill="rgb(213,198,6)"/><text x="74.00" y="798.50"></text></g><g><title>0x7f545609fd7a (ld-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="804" width="5" height="15" fill="rgb(244,209,19)"/><text x="74.00" y="814.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="820" width="5" height="15" fill="rgb(235,108,2)"/><text x="74.00" y="830.50"></text></g><g><title>0x7f54560a0345 (ld-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="836" width="5" height="15" fill="rgb(250,158,44)"/><text x="74.00" y="846.50"></text></g><g><title>0x7f5456098fec (ld-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="852" width="5" height="15" fill="rgb(242,6,30)"/><text x="74.00" y="862.50"></text></g><g><title>0x7f545609756b (ld-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="868" width="5" height="15" fill="rgb(226,183,43)"/><text x="74.00" y="878.50"></text></g><g><title>0x7f5456096c8d (ld-2.29.so) (1 samples, 0.40%)</title><rect x="71" y="884" width="5" height="15" fill="rgb(238,146,28)"/><text x="74.00" y="894.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (1 samples, 0.40%)</title><rect x="76" y="68" width="5" height="15" fill="rgb(239,208,45)"/><text x="79.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (1 samples, 0.40%)</title><rect x="76" y="84" width="5" height="15" fill="rgb(237,138,6)"/><text x="79.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="76" y="100" width="5" height="15" fill="rgb(209,45,0)"/><text x="79.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.40%)</title><rect x="76" y="116" width="5" height="15" fill="rgb(217,101,54)"/><text x="79.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.40%)</title><rect x="76" y="132" width="5" height="15" fill="rgb(239,89,8)"/><text x="79.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="148" width="5" height="15" fill="rgb(238,121,53)"/><text x="79.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="164" width="5" height="15" fill="rgb(240,162,50)"/><text x="79.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="180" width="5" height="15" fill="rgb(236,200,34)"/><text x="79.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="196" width="5" height="15" fill="rgb(211,50,46)"/><text x="79.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="212" width="5" height="15" fill="rgb(220,213,20)"/><text x="79.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="228" width="5" height="15" fill="rgb(224,119,41)"/><text x="79.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="244" width="5" height="15" fill="rgb(224,179,17)"/><text x="79.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="260" width="5" height="15" fill="rgb(253,214,46)"/><text x="79.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="276" width="5" height="15" fill="rgb(238,64,32)"/><text x="79.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="76" y="292" width="5" height="15" fill="rgb(206,146,33)"/><text x="79.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="76" y="308" width="5" height="15" fill="rgb(205,86,50)"/><text x="79.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py) (1 samples, 0.40%)</title><rect x="76" y="324" width="5" height="15" fill="rgb(246,34,13)"/><text x="79.00" y="334.50"></text></g><g><title>_load_lib (lightgbm/basic.py) (1 samples, 0.40%)</title><rect x="76" y="340" width="5" height="15" fill="rgb(211,107,45)"/><text x="79.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="356" width="5" height="15" fill="rgb(219,173,23)"/><text x="79.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py) (1 samples, 0.40%)</title><rect x="76" y="372" width="5" height="15" fill="rgb(246,87,52)"/><text x="79.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c) (1 samples, 0.40%)</title><rect x="76" y="388" width="5" height="15" fill="rgb(236,147,24)"/><text x="79.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="404" width="5" height="15" fill="rgb(234,150,17)"/><text x="79.00" y="414.50"></text></g><g><title>0x7f5456052995 (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="420" width="5" height="15" fill="rgb(205,82,10)"/><text x="79.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="436" width="5" height="15" fill="rgb(216,161,11)"/><text x="79.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="452" width="5" height="15" fill="rgb(209,172,33)"/><text x="79.00" y="462.50"></text></g><g><title>0x7f5456052258 (libdl-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="468" width="5" height="15" fill="rgb(252,119,23)"/><text x="79.00" y="478.50"></text></g><g><title>0x7f545609fd7a (ld-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="484" width="5" height="15" fill="rgb(231,142,30)"/><text x="79.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="500" width="5" height="15" fill="rgb(211,159,29)"/><text x="79.00" y="510.50"></text></g><g><title>0x7f54560a0345 (ld-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="516" width="5" height="15" fill="rgb(243,175,36)"/><text x="79.00" y="526.50"></text></g><g><title>0x7f5456098fec (ld-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="532" width="5" height="15" fill="rgb(234,7,9)"/><text x="79.00" y="542.50"></text></g><g><title>0x7f545609756b (ld-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="548" width="5" height="15" fill="rgb(241,43,44)"/><text x="79.00" y="558.50"></text></g><g><title>0x7f5456096b6f (ld-2.29.so) (1 samples, 0.40%)</title><rect x="76" y="564" width="5" height="15" fill="rgb(247,4,3)"/><text x="79.00" y="574.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.40%)</title><rect x="90" y="180" width="5" height="15" fill="rgb(243,194,15)"/><text x="93.00" y="190.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="340" width="4" height="15" fill="rgb(249,93,17)"/><text x="103.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="356" width="4" height="15" fill="rgb(240,62,12)"/><text x="103.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="372" width="4" height="15" fill="rgb(223,76,13)"/><text x="103.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="388" width="4" height="15" fill="rgb(241,97,12)"/><text x="103.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="404" width="4" height="15" fill="rgb(236,176,53)"/><text x="103.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="420" width="4" height="15" fill="rgb(251,40,47)"/><text x="103.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="436" width="4" height="15" fill="rgb(232,20,20)"/><text x="103.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="452" width="4" height="15" fill="rgb(245,79,48)"/><text x="103.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="100" y="468" width="4" height="15" fill="rgb(246,154,1)"/><text x="103.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="100" y="484" width="4" height="15" fill="rgb(253,229,26)"/><text x="103.00" y="494.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="100" y="500" width="4" height="15" fill="rgb(219,53,49)"/><text x="103.00" y="510.50"></text></g><g><title>0x7f5455dcc80d (libc-2.29.so) (1 samples, 0.40%)</title><rect x="100" y="516" width="4" height="15" fill="rgb(219,119,17)"/><text x="103.00" y="526.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="104" y="340" width="5" height="15" fill="rgb(245,207,41)"/><text x="107.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="104" y="356" width="5" height="15" fill="rgb(240,197,44)"/><text x="107.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="104" y="372" width="5" height="15" fill="rgb(205,54,34)"/><text x="107.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="104" y="388" width="5" height="15" fill="rgb(236,146,33)"/><text x="107.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="104" y="404" width="5" height="15" fill="rgb(236,43,31)"/><text x="107.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="104" y="420" width="5" height="15" fill="rgb(215,27,26)"/><text x="107.00" y="430.50"></text></g><g><title>0x7f5455dcc028 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="104" y="436" width="5" height="15" fill="rgb(207,72,6)"/><text x="107.00" y="446.50"></text></g><g><title>0x7f5455dc9b9b (libc-2.29.so) (1 samples, 0.40%)</title><rect x="104" y="452" width="5" height="15" fill="rgb(247,136,22)"/><text x="107.00" y="462.50"></text></g><g><title>0x7f5455dca96a (libc-2.29.so) (1 samples, 0.40%)</title><rect x="114" y="356" width="4" height="15" fill="rgb(218,121,32)"/><text x="117.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.61%)</title><rect x="109" y="340" width="19" height="15" fill="rgb(236,156,49)"/><text x="112.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="118" y="356" width="10" height="15" fill="rgb(239,63,24)"/><text x="121.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="118" y="372" width="10" height="15" fill="rgb(217,18,25)"/><text x="121.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="118" y="388" width="10" height="15" fill="rgb(206,20,13)"/><text x="121.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="118" y="404" width="10" height="15" fill="rgb(222,147,36)"/><text x="121.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="118" y="420" width="10" height="15" fill="rgb(217,26,46)"/><text x="121.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.80%)</title><rect x="118" y="436" width="10" height="15" fill="rgb(217,26,20)"/><text x="121.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="123" y="452" width="5" height="15" fill="rgb(206,94,46)"/><text x="126.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="123" y="468" width="5" height="15" fill="rgb(223,93,52)"/><text x="126.00" y="478.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.81%)</title><rect x="100" y="260" width="33" height="15" fill="rgb(220,38,44)"/><text x="103.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.81%)</title><rect x="100" y="276" width="33" height="15" fill="rgb(225,25,0)"/><text x="103.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.81%)</title><rect x="100" y="292" width="33" height="15" fill="rgb(241,112,30)"/><text x="103.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.81%)</title><rect x="100" y="308" width="33" height="15" fill="rgb(244,225,49)"/><text x="103.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.81%)</title><rect x="100" y="324" width="33" height="15" fill="rgb(213,93,49)"/><text x="103.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="128" y="340" width="5" height="15" fill="rgb(253,110,12)"/><text x="131.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="128" y="356" width="5" height="15" fill="rgb(253,142,54)"/><text x="131.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="128" y="372" width="5" height="15" fill="rgb(250,168,36)"/><text x="131.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="128" y="388" width="5" height="15" fill="rgb(244,217,23)"/><text x="131.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="128" y="404" width="5" height="15" fill="rgb(244,11,12)"/><text x="131.00" y="414.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (12 samples, 4.82%)</title><rect x="81" y="100" width="56" height="15" fill="rgb(246,43,27)"/><text x="84.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 4.82%)</title><rect x="81" y="116" width="56" height="15" fill="rgb(215,143,22)"/><text x="84.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 4.82%)</title><rect x="81" y="132" width="56" height="15" fill="rgb(221,21,22)"/><text x="84.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (11 samples, 4.42%)</title><rect x="85" y="148" width="52" height="15" fill="rgb(214,74,15)"/><text x="88.00" y="158.50">run (..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (10 samples, 4.02%)</title><rect x="90" y="164" width="47" height="15" fill="rgb(235,171,12)"/><text x="93.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (9 samples, 3.61%)</title><rect x="95" y="180" width="42" height="15" fill="rgb(253,127,17)"/><text x="98.00" y="190.50">run..</text></g><g><title>run (onnxruntime/capi/session.py) (8 samples, 3.21%)</title><rect x="100" y="196" width="37" height="15" fill="rgb(248,218,37)"/><text x="103.00" y="206.50">run..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.21%)</title><rect x="100" y="212" width="37" height="15" fill="rgb(237,165,18)"/><text x="103.00" y="222.50">pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.21%)</title><rect x="100" y="228" width="37" height="15" fill="rgb(228,0,46)"/><text x="103.00" y="238.50">voi..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 3.21%)</title><rect x="100" y="244" width="37" height="15" fill="rgb(231,135,13)"/><text x="103.00" y="254.50">onn..</text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="133" y="260" width="4" height="15" fill="rgb(218,78,42)"/><text x="136.00" y="270.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (13 samples, 5.22%)</title><rect x="81" y="68" width="61" height="15" fill="rgb(247,0,50)"/><text x="84.00" y="78.50">profil..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (13 samples, 5.22%)</title><rect x="81" y="84" width="61" height="15" fill="rgb(217,219,49)"/><text x="84.00" y="94.50">setup_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="137" y="100" width="5" height="15" fill="rgb(242,189,33)"/><text x="140.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="137" y="116" width="5" height="15" fill="rgb(232,218,41)"/><text x="140.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="137" y="132" width="5" height="15" fill="rgb(214,42,32)"/><text x="140.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.40%)</title><rect x="137" y="148" width="5" height="15" fill="rgb(247,37,5)"/><text x="140.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.40%)</title><rect x="137" y="164" width="5" height="15" fill="rgb(210,15,49)"/><text x="140.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="180" width="5" height="15" fill="rgb(245,106,8)"/><text x="140.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="196" width="5" height="15" fill="rgb(252,108,10)"/><text x="140.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="212" width="5" height="15" fill="rgb(237,159,19)"/><text x="140.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="137" y="228" width="5" height="15" fill="rgb(212,121,44)"/><text x="140.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="244" width="5" height="15" fill="rgb(220,84,50)"/><text x="140.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.40%)</title><rect x="137" y="260" width="5" height="15" fill="rgb(247,193,29)"/><text x="140.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="276" width="5" height="15" fill="rgb(239,178,46)"/><text x="140.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="292" width="5" height="15" fill="rgb(210,66,5)"/><text x="140.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="308" width="5" height="15" fill="rgb(246,148,1)"/><text x="140.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="137" y="324" width="5" height="15" fill="rgb(211,22,28)"/><text x="140.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="340" width="5" height="15" fill="rgb(228,147,13)"/><text x="140.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.40%)</title><rect x="137" y="356" width="5" height="15" fill="rgb(228,214,49)"/><text x="140.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="372" width="5" height="15" fill="rgb(225,15,17)"/><text x="140.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="388" width="5" height="15" fill="rgb(236,53,46)"/><text x="140.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="404" width="5" height="15" fill="rgb(215,120,11)"/><text x="140.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="137" y="420" width="5" height="15" fill="rgb(238,52,3)"/><text x="140.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="436" width="5" height="15" fill="rgb(226,147,49)"/><text x="140.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.40%)</title><rect x="137" y="452" width="5" height="15" fill="rgb(233,47,51)"/><text x="140.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="468" width="5" height="15" fill="rgb(205,96,54)"/><text x="140.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="484" width="5" height="15" fill="rgb(246,108,21)"/><text x="140.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="500" width="5" height="15" fill="rgb(247,23,18)"/><text x="140.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="516" width="5" height="15" fill="rgb(236,224,38)"/><text x="140.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.40%)</title><rect x="137" y="532" width="5" height="15" fill="rgb(221,199,6)"/><text x="140.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="137" y="548" width="5" height="15" fill="rgb(213,161,52)"/><text x="140.00" y="558.50"></text></g><g><title>0x7f5415e10af0 (?) (1 samples, 0.40%)</title><rect x="137" y="564" width="5" height="15" fill="rgb(213,82,24)"/><text x="140.00" y="574.50"></text></g><g><title>0x7f5415e231d2 (?) (1 samples, 0.40%)</title><rect x="137" y="580" width="5" height="15" fill="rgb(228,190,37)"/><text x="140.00" y="590.50"></text></g><g><title>0x7f5415e227b8 (?) (1 samples, 0.40%)</title><rect x="137" y="596" width="5" height="15" fill="rgb(246,157,2)"/><text x="140.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="137" y="612" width="5" height="15" fill="rgb(226,14,7)"/><text x="140.00" y="622.50"></text></g><g><title>0x7f5415e20926 (?) (1 samples, 0.40%)</title><rect x="137" y="628" width="5" height="15" fill="rgb(248,49,0)"/><text x="140.00" y="638.50"></text></g><g><title>0x7f5415e1ed57 (?) (1 samples, 0.40%)</title><rect x="137" y="644" width="5" height="15" fill="rgb(247,132,27)"/><text x="140.00" y="654.50"></text></g><g><title>0x7f541638dbe4 (?) (1 samples, 0.40%)</title><rect x="137" y="660" width="5" height="15" fill="rgb(239,177,42)"/><text x="140.00" y="670.50"></text></g><g><title>0x7f5455dca90e (libc-2.29.so) (1 samples, 0.40%)</title><rect x="137" y="676" width="5" height="15" fill="rgb(223,43,15)"/><text x="140.00" y="686.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.40%)</title><rect x="199" y="196" width="5" height="15" fill="rgb(253,126,42)"/><text x="202.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.40%)</title><rect x="218" y="228" width="5" height="15" fill="rgb(243,121,6)"/><text x="221.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.40%)</title><rect x="223" y="228" width="4" height="15" fill="rgb(250,154,38)"/><text x="226.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.40%)</title><rect x="223" y="244" width="4" height="15" fill="rgb(213,23,6)"/><text x="226.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.40%)</title><rect x="223" y="260" width="4" height="15" fill="rgb(238,114,45)"/><text x="226.00" y="270.50"></text></g><g><title>PyArray_View (convert.c) (1 samples, 0.40%)</title><rect x="223" y="276" width="4" height="15" fill="rgb(206,74,31)"/><text x="226.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.80%)</title><rect x="227" y="260" width="10" height="15" fill="rgb(213,123,47)"/><text x="230.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (2 samples, 0.80%)</title><rect x="227" y="276" width="10" height="15" fill="rgb(251,39,49)"/><text x="230.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.40%)</title><rect x="232" y="292" width="5" height="15" fill="rgb(220,123,26)"/><text x="235.00" y="302.50"></text></g><g><title>NpyIter_CreateCompatibleStrides (nditer_api.c) (1 samples, 0.40%)</title><rect x="237" y="260" width="5" height="15" fill="rgb(253,35,28)"/><text x="240.00" y="270.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="242" y="260" width="4" height="15" fill="rgb(209,220,52)"/><text x="245.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="242" y="276" width="4" height="15" fill="rgb(254,223,45)"/><text x="245.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (5 samples, 2.01%)</title><rect x="227" y="244" width="24" height="15" fill="rgb(224,135,45)"/><text x="230.00" y="254.50">P..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="246" y="260" width="5" height="15" fill="rgb(209,158,21)"/><text x="249.00" y="270.50"></text></g><g><title>0x7f5455dcbdb0 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="246" y="276" width="5" height="15" fill="rgb(223,6,49)"/><text x="249.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (10 samples, 4.02%)</title><rect x="209" y="212" width="47" height="15" fill="rgb(248,147,10)"/><text x="212.00" y="222.50">_run..</text></g><g><title>array_subscript (mapping.c) (6 samples, 2.41%)</title><rect x="227" y="228" width="29" height="15" fill="rgb(234,195,51)"/><text x="230.00" y="238.50">ar..</text></g><g><title>prepare_index (mapping.c) (1 samples, 0.40%)</title><rect x="251" y="244" width="5" height="15" fill="rgb(233,203,34)"/><text x="254.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.40%)</title><rect x="251" y="260" width="5" height="15" fill="rgb(211,73,23)"/><text x="254.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.40%)</title><rect x="251" y="276" width="5" height="15" fill="rgb(238,152,40)"/><text x="254.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.40%)</title><rect x="251" y="292" width="5" height="15" fill="rgb(209,190,46)"/><text x="254.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.80%)</title><rect x="256" y="212" width="9" height="15" fill="rgb(239,207,2)"/><text x="259.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.40%)</title><rect x="261" y="228" width="4" height="15" fill="rgb(207,209,47)"/><text x="264.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.40%)</title><rect x="261" y="244" width="4" height="15" fill="rgb(229,43,15)"/><text x="264.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.40%)</title><rect x="261" y="260" width="4" height="15" fill="rgb(233,118,22)"/><text x="264.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (3 samples, 1.20%)</title><rect x="265" y="212" width="15" height="15" fill="rgb(206,66,3)"/><text x="268.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 1.20%)</title><rect x="265" y="228" width="15" height="15" fill="rgb(228,37,10)"/><text x="268.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.20%)</title><rect x="265" y="244" width="15" height="15" fill="rgb(228,70,27)"/><text x="268.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 1.20%)</title><rect x="265" y="260" width="15" height="15" fill="rgb(248,10,23)"/><text x="268.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.80%)</title><rect x="270" y="276" width="10" height="15" fill="rgb(214,200,15)"/><text x="273.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (2 samples, 0.80%)</title><rect x="270" y="292" width="10" height="15" fill="rgb(213,93,8)"/><text x="273.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (1 samples, 0.40%)</title><rect x="275" y="308" width="5" height="15" fill="rgb(206,122,54)"/><text x="278.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (1 samples, 0.40%)</title><rect x="275" y="324" width="5" height="15" fill="rgb(229,104,2)"/><text x="278.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (1 samples, 0.40%)</title><rect x="275" y="340" width="5" height="15" fill="rgb(212,153,22)"/><text x="278.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="275" y="356" width="5" height="15" fill="rgb(246,226,4)"/><text x="278.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.40%)</title><rect x="275" y="372" width="5" height="15" fill="rgb(219,212,46)"/><text x="278.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.40%)</title><rect x="275" y="388" width="5" height="15" fill="rgb(237,216,26)"/><text x="278.00" y="398.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="280" y="260" width="4" height="15" fill="rgb(222,37,5)"/><text x="283.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.40%)</title><rect x="280" y="276" width="4" height="15" fill="rgb(238,43,4)"/><text x="283.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.40%)</title><rect x="280" y="292" width="4" height="15" fill="rgb(251,35,15)"/><text x="283.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.40%)</title><rect x="280" y="308" width="4" height="15" fill="rgb(239,133,22)"/><text x="283.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.40%)</title><rect x="280" y="324" width="4" height="15" fill="rgb(211,23,50)"/><text x="283.00" y="334.50"></text></g><g><title>0x7f5455dbbab0 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="280" y="340" width="4" height="15" fill="rgb(225,226,25)"/><text x="283.00" y="350.50"></text></g><g><title>0x7f5455daeb01 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="280" y="356" width="4" height="15" fill="rgb(221,40,45)"/><text x="283.00" y="366.50"></text></g><g><title>0x7f5455de0950 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="280" y="372" width="4" height="15" fill="rgb(237,32,43)"/><text x="283.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="284" y="324" width="10" height="15" fill="rgb(219,227,42)"/><text x="287.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.80%)</title><rect x="284" y="340" width="10" height="15" fill="rgb(245,7,7)"/><text x="287.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.80%)</title><rect x="284" y="356" width="10" height="15" fill="rgb(252,75,3)"/><text x="287.00" y="366.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (4 samples, 1.61%)</title><rect x="280" y="228" width="19" height="15" fill="rgb(238,220,14)"/><text x="283.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.61%)</title><rect x="280" y="244" width="19" height="15" fill="rgb(218,120,37)"/><text x="283.00" y="254.50"></text></g><g><title>choose (numpy/core/fromnumeric.py) (3 samples, 1.20%)</title><rect x="284" y="260" width="15" height="15" fill="rgb(209,80,9)"/><text x="287.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 1.20%)</title><rect x="284" y="276" width="15" height="15" fill="rgb(213,138,20)"/><text x="287.00" y="286.50"></text></g><g><title>array_choose (methods.c) (3 samples, 1.20%)</title><rect x="284" y="292" width="15" height="15" fill="rgb(219,3,14)"/><text x="287.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c) (3 samples, 1.20%)</title><rect x="284" y="308" width="15" height="15" fill="rgb(236,69,2)"/><text x="287.00" y="318.50"></text></g><g><title>arraymultiter_dealloc (iterators.c) (1 samples, 0.40%)</title><rect x="294" y="324" width="5" height="15" fill="rgb(224,57,51)"/><text x="297.00" y="334.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="308" y="260" width="5" height="15" fill="rgb(237,211,19)"/><text x="311.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (8 samples, 3.21%)</title><rect x="280" y="212" width="38" height="15" fill="rgb(226,149,11)"/><text x="283.00" y="222.50">_ru..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (4 samples, 1.61%)</title><rect x="299" y="228" width="19" height="15" fill="rgb(238,78,48)"/><text x="302.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.80%)</title><rect x="308" y="244" width="10" height="15" fill="rgb(209,227,15)"/><text x="311.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="313" y="260" width="5" height="15" fill="rgb(231,54,40)"/><text x="316.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="313" y="276" width="5" height="15" fill="rgb(231,10,21)"/><text x="316.00" y="286.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.40%)</title><rect x="318" y="244" width="4" height="15" fill="rgb(232,57,50)"/><text x="321.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.40%)</title><rect x="318" y="260" width="4" height="15" fill="rgb(217,146,42)"/><text x="321.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="322" y="244" width="5" height="15" fill="rgb(209,43,48)"/><text x="325.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="322" y="260" width="5" height="15" fill="rgb(226,102,15)"/><text x="325.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="322" y="276" width="5" height="15" fill="rgb(242,153,18)"/><text x="325.00" y="286.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.80%)</title><rect x="327" y="260" width="9" height="15" fill="rgb(216,154,41)"/><text x="330.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.80%)</title><rect x="327" y="276" width="9" height="15" fill="rgb(226,23,28)"/><text x="330.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="332" y="292" width="4" height="15" fill="rgb(216,205,33)"/><text x="335.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.40%)</title><rect x="332" y="308" width="4" height="15" fill="rgb(238,34,53)"/><text x="335.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.40%)</title><rect x="332" y="324" width="4" height="15" fill="rgb(231,11,6)"/><text x="335.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.40%)</title><rect x="332" y="340" width="4" height="15" fill="rgb(237,228,6)"/><text x="335.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.40%)</title><rect x="332" y="356" width="4" height="15" fill="rgb(246,162,53)"/><text x="335.00" y="366.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (1 samples, 0.40%)</title><rect x="332" y="372" width="4" height="15" fill="rgb(207,43,41)"/><text x="335.00" y="382.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.40%)</title><rect x="332" y="388" width="4" height="15" fill="rgb(242,108,22)"/><text x="335.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="332" y="404" width="4" height="15" fill="rgb(205,209,5)"/><text x="335.00" y="414.50"></text></g><g><title>0x7f5455dcc700 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="332" y="420" width="4" height="15" fill="rgb(211,163,23)"/><text x="335.00" y="430.50"></text></g><g><title>0x7f5455dc9ae2 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="332" y="436" width="4" height="15" fill="rgb(215,90,20)"/><text x="335.00" y="446.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="336" y="260" width="5" height="15" fill="rgb(254,189,35)"/><text x="339.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="336" y="276" width="5" height="15" fill="rgb(237,199,32)"/><text x="339.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (6 samples, 2.41%)</title><rect x="318" y="212" width="28" height="15" fill="rgb(252,86,31)"/><text x="321.00" y="222.50">_..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (6 samples, 2.41%)</title><rect x="318" y="228" width="28" height="15" fill="rgb(211,173,52)"/><text x="321.00" y="238.50">_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (4 samples, 1.61%)</title><rect x="327" y="244" width="19" height="15" fill="rgb(207,58,51)"/><text x="330.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.40%)</title><rect x="341" y="260" width="5" height="15" fill="rgb(230,137,39)"/><text x="344.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.40%)</title><rect x="341" y="276" width="5" height="15" fill="rgb(207,216,36)"/><text x="344.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="341" y="292" width="5" height="15" fill="rgb(247,157,13)"/><text x="344.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="341" y="308" width="5" height="15" fill="rgb(224,159,42)"/><text x="344.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.40%)</title><rect x="341" y="324" width="5" height="15" fill="rgb(237,60,30)"/><text x="344.00" y="334.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.40%)</title><rect x="341" y="340" width="5" height="15" fill="rgb(221,33,50)"/><text x="344.00" y="350.50"></text></g><g><title>npy_uint_alignment (array_assign.c) (1 samples, 0.40%)</title><rect x="341" y="356" width="5" height="15" fill="rgb(253,102,30)"/><text x="344.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="346" y="212" width="5" height="15" fill="rgb(214,129,24)"/><text x="349.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="346" y="228" width="5" height="15" fill="rgb(233,172,5)"/><text x="349.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="346" y="244" width="5" height="15" fill="rgb(238,4,8)"/><text x="349.00" y="254.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.40%)</title><rect x="351" y="212" width="4" height="15" fill="rgb(227,142,28)"/><text x="354.00" y="222.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.40%)</title><rect x="355" y="244" width="5" height="15" fill="rgb(241,216,26)"/><text x="358.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.40%)</title><rect x="360" y="260" width="5" height="15" fill="rgb(238,119,8)"/><text x="363.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.40%)</title><rect x="360" y="276" width="5" height="15" fill="rgb(253,223,49)"/><text x="363.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.40%)</title><rect x="360" y="292" width="5" height="15" fill="rgb(235,76,51)"/><text x="363.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="360" y="308" width="5" height="15" fill="rgb(209,1,45)"/><text x="363.00" y="318.50"></text></g><g><title>0x7f5455ea9004 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="360" y="324" width="5" height="15" fill="rgb(213,177,17)"/><text x="363.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (3 samples, 1.20%)</title><rect x="355" y="228" width="15" height="15" fill="rgb(213,133,46)"/><text x="358.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.80%)</title><rect x="360" y="244" width="10" height="15" fill="rgb(239,209,6)"/><text x="363.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="365" y="260" width="5" height="15" fill="rgb(205,48,36)"/><text x="368.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.40%)</title><rect x="365" y="276" width="5" height="15" fill="rgb(217,125,43)"/><text x="368.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.40%)</title><rect x="365" y="292" width="5" height="15" fill="rgb(215,99,43)"/><text x="368.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="365" y="308" width="5" height="15" fill="rgb(230,77,37)"/><text x="368.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.40%)</title><rect x="365" y="324" width="5" height="15" fill="rgb(249,163,43)"/><text x="368.00" y="334.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (2 samples, 0.80%)</title><rect x="379" y="308" width="10" height="15" fill="rgb(248,19,30)"/><text x="382.00" y="318.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (5 samples, 2.01%)</title><rect x="370" y="276" width="23" height="15" fill="rgb(225,164,48)"/><text x="373.00" y="286.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.61%)</title><rect x="374" y="292" width="19" height="15" fill="rgb(232,201,26)"/><text x="377.00" y="302.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="389" y="308" width="4" height="15" fill="rgb(208,176,34)"/><text x="392.00" y="318.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="389" y="324" width="4" height="15" fill="rgb(250,157,9)"/><text x="392.00" y="334.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.40%)</title><rect x="389" y="340" width="4" height="15" fill="rgb(251,87,30)"/><text x="392.00" y="350.50"></text></g><g><title>_is_basic_python_type (get_attr_string.h) (1 samples, 0.40%)</title><rect x="389" y="356" width="4" height="15" fill="rgb(233,9,44)"/><text x="392.00" y="366.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (7 samples, 2.81%)</title><rect x="370" y="260" width="33" height="15" fill="rgb(248,205,15)"/><text x="373.00" y="270.50">_a..</text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (2 samples, 0.80%)</title><rect x="393" y="276" width="10" height="15" fill="rgb(227,137,15)"/><text x="396.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.40%)</title><rect x="398" y="292" width="5" height="15" fill="rgb(217,175,8)"/><text x="401.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.40%)</title><rect x="398" y="308" width="5" height="15" fill="rgb(210,125,26)"/><text x="401.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (8 samples, 3.21%)</title><rect x="370" y="228" width="38" height="15" fill="rgb(210,100,27)"/><text x="373.00" y="238.50">_ru..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (8 samples, 3.21%)</title><rect x="370" y="244" width="38" height="15" fill="rgb(252,71,43)"/><text x="373.00" y="254.50">_ru..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="403" y="260" width="5" height="15" fill="rgb(223,58,28)"/><text x="406.00" y="270.50"></text></g><g><title>0x7f541686354f (?) (1 samples, 0.40%)</title><rect x="408" y="244" width="4" height="15" fill="rgb(212,211,7)"/><text x="411.00" y="254.50"></text></g><g><title>0x7f541686965e (?) (1 samples, 0.40%)</title><rect x="408" y="260" width="4" height="15" fill="rgb(252,127,15)"/><text x="411.00" y="270.50"></text></g><g><title>0x7f5416869483 (?) (1 samples, 0.40%)</title><rect x="408" y="276" width="4" height="15" fill="rgb(233,173,6)"/><text x="411.00" y="286.50"></text></g><g><title>0x7f541684e1e1 (?) (1 samples, 0.40%)</title><rect x="408" y="292" width="4" height="15" fill="rgb(227,151,51)"/><text x="411.00" y="302.50"></text></g><g><title>0x7f541685e3b6 (?) (1 samples, 0.40%)</title><rect x="408" y="308" width="4" height="15" fill="rgb(237,195,15)"/><text x="411.00" y="318.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="408" y="324" width="4" height="15" fill="rgb(234,78,18)"/><text x="411.00" y="334.50"></text></g><g><title>0x7f541fdd1ea0 (libgomp.so.1.0.0) (1 samples, 0.40%)</title><rect x="412" y="484" width="5" height="15" fill="rgb(208,2,22)"/><text x="415.00" y="494.50"></text></g><g><title>0x7f541fdd1ea9 (libgomp.so.1.0.0) (6 samples, 2.41%)</title><rect x="417" y="484" width="28" height="15" fill="rgb(226,96,41)"/><text x="420.00" y="494.50">0..</text></g><g><title>0x7f541fdd1eab (libgomp.so.1.0.0) (10 samples, 4.02%)</title><rect x="445" y="484" width="48" height="15" fill="rgb(216,93,35)"/><text x="448.00" y="494.50">0x7f..</text></g><g><title>0x7f541fdd0ab9 (libgomp.so.1.0.0) (25 samples, 10.04%)</title><rect x="412" y="468" width="119" height="15" fill="rgb(235,96,5)"/><text x="415.00" y="478.50">0x7f541fdd0ab9..</text></g><g><title>0x7f541fdd1ead (libgomp.so.1.0.0) (8 samples, 3.21%)</title><rect x="493" y="484" width="38" height="15" fill="rgb(244,11,14)"/><text x="496.00" y="494.50">0x7..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (84 samples, 33.73%)</title><rect x="142" y="164" width="398" height="15" fill="rgb(208,29,30)"/><text x="145.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (83 samples, 33.33%)</title><rect x="147" y="180" width="393" height="15" fill="rgb(250,102,23)"/><text x="150.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (71 samples, 28.51%)</title><rect x="204" y="196" width="336" height="15" fill="rgb(226,201,9)"/><text x="207.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (39 samples, 15.66%)</title><rect x="355" y="212" width="185" height="15" fill="rgb(229,195,51)"/><text x="358.00" y="222.50">run (mlprodict/onnxrt/op..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (28 samples, 11.24%)</title><rect x="408" y="228" width="132" height="15" fill="rgb(254,8,38)"/><text x="411.00" y="238.50">_run (mlprodict/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (27 samples, 10.84%)</title><rect x="412" y="244" width="128" height="15" fill="rgb(209,64,50)"/><text x="415.00" y="254.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (27 samples, 10.84%)</title><rect x="412" y="260" width="128" height="15" fill="rgb(238,22,45)"/><text x="415.00" y="270.50">void pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (27 samples, 10.84%)</title><rect x="412" y="276" width="128" height="15" fill="rgb(242,5,34)"/><text x="415.00" y="286.50">void pybind11::c..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (27 samples, 10.84%)</title><rect x="412" y="292" width="128" height="15" fill="rgb(246,212,20)"/><text x="415.00" y="302.50">pybind11::detail..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (27 samples, 10.84%)</title><rect x="412" y="308" width="128" height="15" fill="rgb(213,206,22)"/><text x="415.00" y="318.50">pybind11::detail..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (27 samples, 10.84%)</title><rect x="412" y="324" width="128" height="15" fill="rgb(232,33,28)"/><text x="415.00" y="334.50">pybind11::cpp_fu..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (27 samples, 10.84%)</title><rect x="412" y="340" width="128" height="15" fill="rgb(207,223,4)"/><text x="415.00" y="350.50">pybind11::array_..</text></g><g><title>pybind11::array::~array (numpy.h) (27 samples, 10.84%)</title><rect x="412" y="356" width="128" height="15" fill="rgb(213,202,41)"/><text x="415.00" y="366.50">pybind11::array:..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (27 samples, 10.84%)</title><rect x="412" y="372" width="128" height="15" fill="rgb(252,63,43)"/><text x="415.00" y="382.50">pybind11::buffer..</text></g><g><title>pybind11::object::~object (pytypes.h) (27 samples, 10.84%)</title><rect x="412" y="388" width="128" height="15" fill="rgb(233,5,2)"/><text x="415.00" y="398.50">pybind11::object..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (27 samples, 10.84%)</title><rect x="412" y="404" width="128" height="15" fill="rgb(239,154,0)"/><text x="415.00" y="414.50">pybind11::handle..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (27 samples, 10.84%)</title><rect x="412" y="420" width="128" height="15" fill="rgb(243,188,31)"/><text x="415.00" y="430.50">RuntimeTreeEnsem..</text></g><g><title>pybind11::array::size (numpy.h) (27 samples, 10.84%)</title><rect x="412" y="436" width="128" height="15" fill="rgb(238,118,39)"/><text x="415.00" y="446.50">pybind11::array:..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (27 samples, 10.84%)</title><rect x="412" y="452" width="128" height="15" fill="rgb(232,32,41)"/><text x="415.00" y="462.50">std::accumulate&lt;..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.80%)</title><rect x="531" y="468" width="9" height="15" fill="rgb(230,168,29)"/><text x="534.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (2 samples, 0.80%)</title><rect x="531" y="484" width="9" height="15" fill="rgb(242,166,15)"/><text x="534.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (2 samples, 0.80%)</title><rect x="531" y="500" width="9" height="15" fill="rgb(214,153,49)"/><text x="534.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (2 samples, 0.80%)</title><rect x="531" y="516" width="9" height="15" fill="rgb(217,106,23)"/><text x="534.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator[] (stl_vector.h) (1 samples, 0.40%)</title><rect x="536" y="532" width="4" height="15" fill="rgb(216,174,24)"/><text x="539.00" y="542.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="540" y="180" width="5" height="15" fill="rgb(251,30,45)"/><text x="543.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.40%)</title><rect x="540" y="196" width="5" height="15" fill="rgb(244,145,16)"/><text x="543.00" y="206.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (86 samples, 34.54%)</title><rect x="142" y="68" width="408" height="15" fill="rgb(246,5,53)"/><text x="145.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (86 samples, 34.54%)</title><rect x="142" y="84" width="408" height="15" fill="rgb(239,39,45)"/><text x="145.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (86 samples, 34.54%)</title><rect x="142" y="100" width="408" height="15" fill="rgb(206,84,23)"/><text x="145.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_est..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (86 samples, 34.54%)</title><rect x="142" y="116" width="408" height="15" fill="rgb(245,167,38)"/><text x="145.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (86 samples, 34.54%)</title><rect x="142" y="132" width="408" height="15" fill="rgb(218,97,10)"/><text x="145.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (86 samples, 34.54%)</title><rect x="142" y="148" width="408" height="15" fill="rgb(218,129,13)"/><text x="145.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="540" y="164" width="10" height="15" fill="rgb(212,32,12)"/><text x="543.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="545" y="180" width="5" height="15" fill="rgb(216,154,2)"/><text x="548.00" y="190.50"></text></g><g><title>0x7f542f80ed24 (?) (1 samples, 0.40%)</title><rect x="592" y="212" width="5" height="15" fill="rgb(206,180,28)"/><text x="595.00" y="222.50"></text></g><g><title>0x7f542f81bf32 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="597" y="260" width="10" height="15" fill="rgb(232,174,50)"/><text x="600.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.40%)</title><rect x="611" y="292" width="5" height="15" fill="rgb(220,212,19)"/><text x="614.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.40%)</title><rect x="611" y="308" width="5" height="15" fill="rgb(222,56,13)"/><text x="614.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="611" y="324" width="5" height="15" fill="rgb(209,64,21)"/><text x="614.00" y="334.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="611" y="340" width="5" height="15" fill="rgb(242,89,7)"/><text x="614.00" y="350.50"></text></g><g><title>0x7f542f81c225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.20%)</title><rect x="607" y="260" width="14" height="15" fill="rgb(207,177,35)"/><text x="610.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (3 samples, 1.20%)</title><rect x="607" y="276" width="14" height="15" fill="rgb(245,202,49)"/><text x="610.00" y="286.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="616" y="292" width="5" height="15" fill="rgb(242,181,52)"/><text x="619.00" y="302.50"></text></g><g><title>0x7f542f800666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="621" y="292" width="5" height="15" fill="rgb(232,173,33)"/><text x="624.00" y="302.50"></text></g><g><title>0x7f542f7f62fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="621" y="308" width="5" height="15" fill="rgb(225,132,29)"/><text x="624.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.40%)</title><rect x="621" y="324" width="5" height="15" fill="rgb(217,5,24)"/><text x="624.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.40%)</title><rect x="621" y="340" width="5" height="15" fill="rgb(216,57,24)"/><text x="624.00" y="350.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.40%)</title><rect x="621" y="356" width="5" height="15" fill="rgb(224,18,18)"/><text x="624.00" y="366.50"></text></g><g><title>0x7f542f81c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="621" y="260" width="9" height="15" fill="rgb(242,7,19)"/><text x="624.00" y="270.50"></text></g><g><title>0x7f542f800d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="621" y="276" width="9" height="15" fill="rgb(240,0,21)"/><text x="624.00" y="286.50"></text></g><g><title>0x7f542f8006fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="626" y="292" width="4" height="15" fill="rgb(247,1,0)"/><text x="629.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.40%)</title><rect x="630" y="292" width="5" height="15" fill="rgb(248,209,49)"/><text x="633.00" y="302.50"></text></g><g><title>0x7f542f81c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.20%)</title><rect x="630" y="260" width="15" height="15" fill="rgb(214,4,25)"/><text x="633.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (3 samples, 1.20%)</title><rect x="630" y="276" width="15" height="15" fill="rgb(218,82,32)"/><text x="633.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.80%)</title><rect x="635" y="292" width="10" height="15" fill="rgb(206,186,12)"/><text x="638.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.80%)</title><rect x="635" y="308" width="10" height="15" fill="rgb(248,214,25)"/><text x="638.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.80%)</title><rect x="635" y="324" width="10" height="15" fill="rgb(213,167,1)"/><text x="638.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="635" y="340" width="10" height="15" fill="rgb(248,92,1)"/><text x="638.00" y="350.50"></text></g><g><title>0x7f542f80dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 4.42%)</title><rect x="597" y="228" width="52" height="15" fill="rgb(248,25,38)"/><text x="600.00" y="238.50">0x7f5..</text></g><g><title>0x7f542f81d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 4.42%)</title><rect x="597" y="244" width="52" height="15" fill="rgb(224,23,40)"/><text x="600.00" y="254.50">0x7f5..</text></g><g><title>0x7f542f81cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="645" y="260" width="4" height="15" fill="rgb(250,36,42)"/><text x="648.00" y="270.50"></text></g><g><title>0x7f542f7f4529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="645" y="276" width="4" height="15" fill="rgb(224,151,35)"/><text x="648.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.40%)</title><rect x="645" y="292" width="4" height="15" fill="rgb(251,28,54)"/><text x="648.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.40%)</title><rect x="645" y="308" width="4" height="15" fill="rgb(225,221,35)"/><text x="648.00" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.40%)</title><rect x="645" y="324" width="4" height="15" fill="rgb(228,0,47)"/><text x="648.00" y="334.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.40%)</title><rect x="645" y="340" width="4" height="15" fill="rgb(238,210,28)"/><text x="648.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.40%)</title><rect x="649" y="260" width="5" height="15" fill="rgb(242,200,49)"/><text x="652.00" y="270.50"></text></g><g><title>0x7f542f80e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="649" y="228" width="10" height="15" fill="rgb(247,177,49)"/><text x="652.00" y="238.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.80%)</title><rect x="649" y="244" width="10" height="15" fill="rgb(236,77,16)"/><text x="652.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.40%)</title><rect x="654" y="260" width="5" height="15" fill="rgb(228,215,14)"/><text x="657.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.40%)</title><rect x="654" y="276" width="5" height="15" fill="rgb(206,216,5)"/><text x="657.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="654" y="292" width="5" height="15" fill="rgb(210,65,45)"/><text x="657.00" y="302.50"></text></g><g><title>0x7f542f80e13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="659" y="228" width="9" height="15" fill="rgb(215,177,28)"/><text x="662.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="659" y="244" width="9" height="15" fill="rgb(207,195,1)"/><text x="662.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="663" y="260" width="5" height="15" fill="rgb(240,161,37)"/><text x="666.00" y="270.50"></text></g><g><title>0x7f5454fec7c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="663" y="276" width="5" height="15" fill="rgb(238,21,22)"/><text x="666.00" y="286.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.40%)</title><rect x="668" y="260" width="5" height="15" fill="rgb(220,57,25)"/><text x="671.00" y="270.50"></text></g><g><title>0x7f542f80ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 6.83%)</title><rect x="597" y="212" width="81" height="15" fill="rgb(217,34,34)"/><text x="600.00" y="222.50">0x7f542f8..</text></g><g><title>0x7f542f80e328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.80%)</title><rect x="668" y="228" width="10" height="15" fill="rgb(251,45,53)"/><text x="671.00" y="238.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.80%)</title><rect x="668" y="244" width="10" height="15" fill="rgb(217,87,45)"/><text x="671.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.40%)</title><rect x="673" y="260" width="5" height="15" fill="rgb(219,171,6)"/><text x="676.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.40%)</title><rect x="673" y="276" width="5" height="15" fill="rgb(223,203,23)"/><text x="676.00" y="286.50"></text></g><g><title>_fix_unknown_dimension (shape.c) (1 samples, 0.40%)</title><rect x="673" y="292" width="5" height="15" fill="rgb(216,49,42)"/><text x="676.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.40%)</title><rect x="678" y="212" width="4" height="15" fill="rgb(217,78,42)"/><text x="681.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 0.80%)</title><rect x="744" y="244" width="10" height="15" fill="rgb(232,33,29)"/><text x="747.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 1.20%)</title><rect x="754" y="244" width="14" height="15" fill="rgb(230,133,2)"/><text x="757.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.40%)</title><rect x="768" y="244" width="4" height="15" fill="rgb(205,131,27)"/><text x="771.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="782" y="260" width="5" height="15" fill="rgb(250,157,3)"/><text x="785.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.40%)</title><rect x="787" y="260" width="4" height="15" fill="rgb(213,140,21)"/><text x="790.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (5 samples, 2.01%)</title><rect x="772" y="244" width="24" height="15" fill="rgb(225,190,38)"/><text x="775.00" y="254.50">_..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.40%)</title><rect x="791" y="260" width="5" height="15" fill="rgb(218,132,20)"/><text x="794.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="796" y="244" width="5" height="15" fill="rgb(213,65,22)"/><text x="799.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (11 samples, 4.42%)</title><rect x="801" y="244" width="52" height="15" fill="rgb(212,75,1)"/><text x="804.00" y="254.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (5 samples, 2.01%)</title><rect x="829" y="260" width="24" height="15" fill="rgb(210,53,38)"/><text x="832.00" y="270.50">_..</text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.80%)</title><rect x="844" y="276" width="9" height="15" fill="rgb(238,143,25)"/><text x="847.00" y="286.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.40%)</title><rect x="853" y="244" width="5" height="15" fill="rgb(225,118,26)"/><text x="856.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.40%)</title><rect x="853" y="260" width="5" height="15" fill="rgb(253,223,3)"/><text x="856.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.40%)</title><rect x="853" y="276" width="5" height="15" fill="rgb(232,209,41)"/><text x="856.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="853" y="292" width="5" height="15" fill="rgb(208,199,16)"/><text x="856.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.40%)</title><rect x="853" y="308" width="5" height="15" fill="rgb(225,76,26)"/><text x="856.00" y="318.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.80%)</title><rect x="858" y="244" width="9" height="15" fill="rgb(228,195,45)"/><text x="861.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.40%)</title><rect x="863" y="260" width="4" height="15" fill="rgb(223,16,44)"/><text x="866.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="863" y="276" width="4" height="15" fill="rgb(221,149,8)"/><text x="866.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (40 samples, 16.06%)</title><rect x="682" y="212" width="190" height="15" fill="rgb(217,142,50)"/><text x="685.00" y="222.50">_validate_X_predict (skl..</text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 14.46%)</title><rect x="701" y="228" width="171" height="15" fill="rgb(231,119,8)"/><text x="704.00" y="238.50">check_array (sklearn/u..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.40%)</title><rect x="867" y="244" width="5" height="15" fill="rgb(222,228,18)"/><text x="870.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.40%)</title><rect x="867" y="260" width="5" height="15" fill="rgb(240,132,34)"/><text x="870.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.40%)</title><rect x="872" y="212" width="5" height="15" fill="rgb(253,48,52)"/><text x="875.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (4 samples, 1.61%)</title><rect x="900" y="228" width="19" height="15" fill="rgb(210,125,22)"/><text x="903.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.40%)</title><rect x="915" y="244" width="4" height="15" fill="rgb(242,94,20)"/><text x="918.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 4.02%)</title><rect x="877" y="212" width="47" height="15" fill="rgb(229,31,3)"/><text x="880.00" y="222.50">chec..</text></g><g><title>isclass (inspect.py) (1 samples, 0.40%)</title><rect x="919" y="228" width="5" height="15" fill="rgb(237,110,35)"/><text x="922.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (78 samples, 31.33%)</title><rect x="559" y="180" width="370" height="15" fill="rgb(246,190,37)"/><text x="562.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (77 samples, 30.92%)</title><rect x="564" y="196" width="365" height="15" fill="rgb(252,150,6)"/><text x="567.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.40%)</title><rect x="924" y="212" width="5" height="15" fill="rgb(225,229,33)"/><text x="927.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (1 samples, 0.40%)</title><rect x="929" y="228" width="5" height="15" fill="rgb(210,117,50)"/><text x="932.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (1 samples, 0.40%)</title><rect x="929" y="244" width="5" height="15" fill="rgb(253,8,25)"/><text x="932.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.80%)</title><rect x="929" y="180" width="9" height="15" fill="rgb(209,44,23)"/><text x="932.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.80%)</title><rect x="929" y="196" width="9" height="15" fill="rgb(212,143,7)"/><text x="932.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.80%)</title><rect x="929" y="212" width="9" height="15" fill="rgb(243,198,46)"/><text x="932.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.40%)</title><rect x="934" y="228" width="4" height="15" fill="rgb(222,215,15)"/><text x="937.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.20%)</title><rect x="938" y="180" width="15" height="15" fill="rgb(205,34,22)"/><text x="941.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.40%)</title><rect x="948" y="196" width="5" height="15" fill="rgb(228,104,41)"/><text x="951.00" y="206.50"></text></g><g><title>PyArray_DescrFromObject (ctors.c) (1 samples, 0.40%)</title><rect x="953" y="212" width="4" height="15" fill="rgb(246,19,2)"/><text x="956.00" y="222.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.40%)</title><rect x="953" y="228" width="4" height="15" fill="rgb(234,147,36)"/><text x="956.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.40%)</title><rect x="953" y="244" width="4" height="15" fill="rgb(252,14,54)"/><text x="956.00" y="254.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.40%)</title><rect x="953" y="260" width="4" height="15" fill="rgb(248,221,23)"/><text x="956.00" y="270.50"></text></g><g><title>array_arange (multiarraymodule.c) (2 samples, 0.80%)</title><rect x="953" y="180" width="9" height="15" fill="rgb(221,45,9)"/><text x="956.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (2 samples, 0.80%)</title><rect x="953" y="196" width="9" height="15" fill="rgb(247,51,53)"/><text x="956.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.40%)</title><rect x="957" y="212" width="5" height="15" fill="rgb(220,115,41)"/><text x="960.00" y="222.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.40%)</title><rect x="962" y="180" width="5" height="15" fill="rgb(247,22,3)"/><text x="965.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="962" y="196" width="5" height="15" fill="rgb(243,60,52)"/><text x="965.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="962" y="212" width="5" height="15" fill="rgb(212,45,32)"/><text x="965.00" y="222.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.40%)</title><rect x="962" y="228" width="5" height="15" fill="rgb(216,171,26)"/><text x="965.00" y="238.50"></text></g><g><title>array_richcompare (arrayobject.c) (1 samples, 0.40%)</title><rect x="967" y="180" width="5" height="15" fill="rgb(224,20,0)"/><text x="970.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="967" y="196" width="5" height="15" fill="rgb(231,121,25)"/><text x="970.00" y="206.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.40%)</title><rect x="972" y="196" width="4" height="15" fill="rgb(216,20,50)"/><text x="975.00" y="206.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="972" y="212" width="4" height="15" fill="rgb(254,31,3)"/><text x="975.00" y="222.50"></text></g><g><title>0x7f5455dcbdb0 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="972" y="228" width="4" height="15" fill="rgb(242,155,10)"/><text x="975.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 1.20%)</title><rect x="972" y="180" width="14" height="15" fill="rgb(220,4,12)"/><text x="975.00" y="190.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (2 samples, 0.80%)</title><rect x="976" y="196" width="10" height="15" fill="rgb(236,20,40)"/><text x="979.00" y="206.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.80%)</title><rect x="976" y="212" width="10" height="15" fill="rgb(238,147,38)"/><text x="979.00" y="222.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (3 samples, 1.20%)</title><rect x="986" y="196" width="14" height="15" fill="rgb(229,36,13)"/><text x="989.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 1.20%)</title><rect x="986" y="212" width="14" height="15" fill="rgb(225,51,1)"/><text x="989.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (3 samples, 1.20%)</title><rect x="986" y="228" width="14" height="15" fill="rgb(239,42,54)"/><text x="989.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.80%)</title><rect x="990" y="244" width="10" height="15" fill="rgb(229,70,40)"/><text x="993.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.40%)</title><rect x="995" y="260" width="5" height="15" fill="rgb(216,70,13)"/><text x="998.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="995" y="276" width="5" height="15" fill="rgb(243,126,31)"/><text x="998.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.40%)</title><rect x="995" y="292" width="5" height="15" fill="rgb(208,99,34)"/><text x="998.00" y="302.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.80%)</title><rect x="1000" y="196" width="9" height="15" fill="rgb(243,209,20)"/><text x="1003.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.40%)</title><rect x="1005" y="212" width="4" height="15" fill="rgb(216,67,4)"/><text x="1008.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.40%)</title><rect x="1005" y="228" width="4" height="15" fill="rgb(238,77,31)"/><text x="1008.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="1005" y="244" width="4" height="15" fill="rgb(224,188,47)"/><text x="1008.00" y="254.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.40%)</title><rect x="1014" y="340" width="5" height="15" fill="rgb(215,168,45)"/><text x="1017.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1024" y="356" width="4" height="15" fill="rgb(212,57,7)"/><text x="1027.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1024" y="372" width="4" height="15" fill="rgb(212,124,43)"/><text x="1027.00" y="382.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (5 samples, 2.01%)</title><rect x="1009" y="196" width="24" height="15" fill="rgb(206,148,35)"/><text x="1012.00" y="206.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 2.01%)</title><rect x="1009" y="212" width="24" height="15" fill="rgb(243,153,40)"/><text x="1012.00" y="222.50">a..</text></g><g><title>cumsum (numpy/core/fromnumeric.py) (5 samples, 2.01%)</title><rect x="1009" y="228" width="24" height="15" fill="rgb(224,69,18)"/><text x="1012.00" y="238.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 2.01%)</title><rect x="1009" y="244" width="24" height="15" fill="rgb(254,213,50)"/><text x="1012.00" y="254.50">_..</text></g><g><title>array_cumsum (methods.c) (5 samples, 2.01%)</title><rect x="1009" y="260" width="24" height="15" fill="rgb(217,7,52)"/><text x="1012.00" y="270.50">a..</text></g><g><title>PyArray_CumSum (calculation.c) (5 samples, 2.01%)</title><rect x="1009" y="276" width="24" height="15" fill="rgb(228,119,29)"/><text x="1012.00" y="286.50">P..</text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (5 samples, 2.01%)</title><rect x="1009" y="292" width="24" height="15" fill="rgb(206,202,9)"/><text x="1012.00" y="302.50">P..</text></g><g><title>ufunc_accumulate (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1014" y="308" width="19" height="15" fill="rgb(239,122,52)"/><text x="1017.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1014" y="324" width="19" height="15" fill="rgb(222,159,49)"/><text x="1017.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (3 samples, 1.20%)</title><rect x="1019" y="340" width="14" height="15" fill="rgb(224,173,32)"/><text x="1022.00" y="350.50"></text></g><g><title>get_binary_op_function (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1028" y="356" width="5" height="15" fill="rgb(240,35,25)"/><text x="1031.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.40%)</title><rect x="1038" y="228" width="5" height="15" fill="rgb(218,145,5)"/><text x="1041.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.40%)</title><rect x="1038" y="244" width="5" height="15" fill="rgb(239,90,49)"/><text x="1041.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1052" y="372" width="5" height="15" fill="rgb(248,73,29)"/><text x="1055.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1052" y="388" width="5" height="15" fill="rgb(211,167,54)"/><text x="1055.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1057" y="372" width="5" height="15" fill="rgb(248,191,39)"/><text x="1060.00" y="382.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.40%)</title><rect x="1062" y="372" width="4" height="15" fill="rgb(243,135,45)"/><text x="1065.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.40%)</title><rect x="1062" y="388" width="4" height="15" fill="rgb(206,216,18)"/><text x="1065.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.40%)</title><rect x="1062" y="404" width="4" height="15" fill="rgb(229,18,41)"/><text x="1065.00" y="414.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.40%)</title><rect x="1062" y="420" width="4" height="15" fill="rgb(242,71,45)"/><text x="1065.00" y="430.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (6 samples, 2.41%)</title><rect x="1043" y="244" width="28" height="15" fill="rgb(220,152,2)"/><text x="1046.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.41%)</title><rect x="1043" y="260" width="28" height="15" fill="rgb(221,59,9)"/><text x="1046.00" y="270.50">a..</text></g><g><title>all (numpy/core/fromnumeric.py) (6 samples, 2.41%)</title><rect x="1043" y="276" width="28" height="15" fill="rgb(237,18,11)"/><text x="1046.00" y="286.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 2.01%)</title><rect x="1047" y="292" width="24" height="15" fill="rgb(240,199,4)"/><text x="1050.00" y="302.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1052" y="308" width="19" height="15" fill="rgb(205,146,26)"/><text x="1055.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1052" y="324" width="19" height="15" fill="rgb(245,193,24)"/><text x="1055.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 1.61%)</title><rect x="1052" y="340" width="19" height="15" fill="rgb(212,228,19)"/><text x="1055.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.61%)</title><rect x="1052" y="356" width="19" height="15" fill="rgb(244,55,21)"/><text x="1055.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.40%)</title><rect x="1066" y="372" width="5" height="15" fill="rgb(224,157,24)"/><text x="1069.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.40%)</title><rect x="1066" y="388" width="5" height="15" fill="rgb(250,156,30)"/><text x="1069.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.40%)</title><rect x="1066" y="404" width="5" height="15" fill="rgb(240,72,50)"/><text x="1069.00" y="414.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (1 samples, 0.40%)</title><rect x="1071" y="244" width="5" height="15" fill="rgb(211,124,53)"/><text x="1074.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1076" y="244" width="5" height="15" fill="rgb(211,65,9)"/><text x="1079.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.40%)</title><rect x="1076" y="260" width="5" height="15" fill="rgb(252,24,7)"/><text x="1079.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.40%)</title><rect x="1076" y="276" width="5" height="15" fill="rgb(229,119,12)"/><text x="1079.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.40%)</title><rect x="1076" y="292" width="5" height="15" fill="rgb(245,191,0)"/><text x="1079.00" y="302.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py) (1 samples, 0.40%)</title><rect x="1085" y="260" width="5" height="15" fill="rgb(254,104,42)"/><text x="1088.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1090" y="308" width="5" height="15" fill="rgb(226,105,29)"/><text x="1093.00" y="318.50"></text></g><g><title>array_add (number.c) (2 samples, 0.80%)</title><rect x="1090" y="260" width="9" height="15" fill="rgb(227,186,36)"/><text x="1093.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.80%)</title><rect x="1090" y="276" width="9" height="15" fill="rgb(223,218,51)"/><text x="1093.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.80%)</title><rect x="1090" y="292" width="9" height="15" fill="rgb(212,164,52)"/><text x="1093.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.40%)</title><rect x="1095" y="308" width="4" height="15" fill="rgb(242,97,11)"/><text x="1098.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.40%)</title><rect x="1095" y="324" width="4" height="15" fill="rgb(213,103,48)"/><text x="1098.00" y="334.50"></text></g><g><title>array_subtract (number.c) (3 samples, 1.20%)</title><rect x="1099" y="260" width="15" height="15" fill="rgb(222,14,7)"/><text x="1102.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1109" y="276" width="5" height="15" fill="rgb(247,75,15)"/><text x="1112.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1109" y="292" width="5" height="15" fill="rgb(214,139,16)"/><text x="1112.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1109" y="308" width="5" height="15" fill="rgb(221,52,11)"/><text x="1112.00" y="318.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1114" y="292" width="4" height="15" fill="rgb(235,162,13)"/><text x="1117.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.40%)</title><rect x="1114" y="308" width="4" height="15" fill="rgb(239,224,20)"/><text x="1117.00" y="318.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (19 samples, 7.63%)</title><rect x="1033" y="196" width="90" height="15" fill="rgb(248,154,30)"/><text x="1036.00" y="206.50">isclose (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (18 samples, 7.23%)</title><rect x="1038" y="212" width="85" height="15" fill="rgb(238,100,14)"/><text x="1041.00" y="222.50">array_impl..</text></g><g><title>isclose (numpy/core/numeric.py) (17 samples, 6.83%)</title><rect x="1043" y="228" width="80" height="15" fill="rgb(225,56,46)"/><text x="1046.00" y="238.50">isclose (..</text></g><g><title>within_tol (numpy/core/numeric.py) (9 samples, 3.61%)</title><rect x="1081" y="244" width="42" height="15" fill="rgb(213,172,0)"/><text x="1084.00" y="254.50">wit..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.80%)</title><rect x="1114" y="260" width="9" height="15" fill="rgb(210,180,53)"/><text x="1117.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.80%)</title><rect x="1114" y="276" width="9" height="15" fill="rgb(233,67,26)"/><text x="1117.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.40%)</title><rect x="1118" y="292" width="5" height="15" fill="rgb(214,3,49)"/><text x="1121.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.40%)</title><rect x="1118" y="308" width="5" height="15" fill="rgb(228,12,41)"/><text x="1121.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.40%)</title><rect x="1133" y="324" width="4" height="15" fill="rgb(207,200,17)"/><text x="1136.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (125 samples, 50.20%)</title><rect x="550" y="164" width="592" height="15" fill="rgb(245,143,22)"/><text x="553.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (33 samples, 13.25%)</title><rect x="986" y="180" width="156" height="15" fill="rgb(220,96,26)"/><text x="989.00" y="190.50">stable_cumsum (sklea..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (4 samples, 1.61%)</title><rect x="1123" y="196" width="19" height="15" fill="rgb(250,204,16)"/><text x="1126.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.61%)</title><rect x="1123" y="212" width="19" height="15" fill="rgb(251,193,23)"/><text x="1126.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (4 samples, 1.61%)</title><rect x="1123" y="228" width="19" height="15" fill="rgb(249,26,36)"/><text x="1126.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (3 samples, 1.20%)</title><rect x="1128" y="244" width="14" height="15" fill="rgb(210,139,7)"/><text x="1131.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.20%)</title><rect x="1128" y="260" width="14" height="15" fill="rgb(226,187,45)"/><text x="1131.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.20%)</title><rect x="1128" y="276" width="14" height="15" fill="rgb(224,171,29)"/><text x="1131.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.80%)</title><rect x="1133" y="292" width="9" height="15" fill="rgb(239,8,32)"/><text x="1136.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.80%)</title><rect x="1133" y="308" width="9" height="15" fill="rgb(207,18,10)"/><text x="1136.00" y="318.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.40%)</title><rect x="1137" y="324" width="5" height="15" fill="rgb(252,186,45)"/><text x="1140.00" y="334.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="1152" y="196" width="4" height="15" fill="rgb(222,76,50)"/><text x="1155.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.80%)</title><rect x="1156" y="196" width="10" height="15" fill="rgb(221,67,54)"/><text x="1159.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.40%)</title><rect x="1161" y="212" width="5" height="15" fill="rgb(249,157,34)"/><text x="1164.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.40%)</title><rect x="1161" y="228" width="5" height="15" fill="rgb(207,119,28)"/><text x="1164.00" y="238.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (6 samples, 2.41%)</title><rect x="1142" y="164" width="29" height="15" fill="rgb(235,81,49)"/><text x="1145.00" y="174.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py) (5 samples, 2.01%)</title><rect x="1147" y="180" width="24" height="15" fill="rgb(214,63,0)"/><text x="1150.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.40%)</title><rect x="1166" y="196" width="5" height="15" fill="rgb(244,105,49)"/><text x="1169.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 53.01%)</title><rect x="550" y="132" width="625" height="15" fill="rgb(225,56,22)"/><text x="553.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (132 samples, 53.01%)</title><rect x="550" y="148" width="625" height="15" fill="rgb(237,168,34)"/><text x="553.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="1171" y="164" width="4" height="15" fill="rgb(233,189,5)"/><text x="1174.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.40%)</title><rect x="1171" y="180" width="4" height="15" fill="rgb(219,145,15)"/><text x="1174.00" y="190.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (134 samples, 53.82%)</title><rect x="550" y="100" width="635" height="15" fill="rgb(244,101,46)"/><text x="553.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (134 samples, 53.82%)</title><rect x="550" y="116" width="635" height="15" fill="rgb(225,134,27)"/><text x="553.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.80%)</title><rect x="1175" y="132" width="10" height="15" fill="rgb(236,219,12)"/><text x="1178.00" y="142.50"></text></g><g><title>all (249 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(208,26,45)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (249 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(237,101,11)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (135 samples, 54.22%)</title><rect x="550" y="68" width="640" height="15" fill="rgb(228,173,49)"/><text x="553.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (135 samples, 54.22%)</title><rect x="550" y="84" width="640" height="15" fill="rgb(232,52,35)"/><text x="553.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="1185" y="100" width="5" height="15" fill="rgb(236,32,30)"/><text x="1188.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="1185" y="116" width="5" height="15" fill="rgb(216,18,46)"/><text x="1188.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.40%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(208,106,5)"/><text x="1188.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.40%)</title><rect x="1185" y="148" width="5" height="15" fill="rgb(207,142,46)"/><text x="1188.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.40%)</title><rect x="1185" y="164" width="5" height="15" fill="rgb(213,133,50)"/><text x="1188.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.40%)</title><rect x="1185" y="180" width="5" height="15" fill="rgb(214,20,4)"/><text x="1188.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_regressor (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.40%)</title><rect x="1185" y="196" width="5" height="15" fill="rgb(234,158,44)"/><text x="1188.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.40%)</title><rect x="1185" y="212" width="5" height="15" fill="rgb(244,51,28)"/><text x="1188.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.40%)</title><rect x="1185" y="228" width="5" height="15" fill="rgb(235,175,30)"/><text x="1188.00" y="238.50"></text></g></g></svg>