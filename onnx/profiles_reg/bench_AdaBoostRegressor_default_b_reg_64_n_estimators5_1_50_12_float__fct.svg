<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(236,5,27)"/><text x="13.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(206,165,14)"/><text x="13.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.28%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(205,88,44)"/><text x="13.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.28%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(217,128,35)"/><text x="13.00" y="958.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.28%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(240,61,46)"/><text x="13.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(206,31,48)"/><text x="16.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(215,86,26)"/><text x="16.00" y="958.50"></text></g><g><title>sub (re.py) (1 samples, 0.28%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(239,16,53)"/><text x="16.00" y="974.50"></text></g><g><title>_compile (re.py) (1 samples, 0.28%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(243,39,0)"/><text x="16.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.83%)</title><rect x="10" y="836" width="9" height="15" fill="rgb(231,36,0)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.83%)</title><rect x="10" y="852" width="9" height="15" fill="rgb(213,156,24)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.83%)</title><rect x="10" y="868" width="9" height="15" fill="rgb(240,215,37)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.83%)</title><rect x="10" y="884" width="9" height="15" fill="rgb(229,211,11)"/><text x="13.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.55%)</title><rect x="13" y="900" width="6" height="15" fill="rgb(248,145,45)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.55%)</title><rect x="13" y="916" width="6" height="15" fill="rgb(210,107,26)"/><text x="16.00" y="926.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.28%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(205,134,17)"/><text x="19.00" y="942.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.28%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(218,106,6)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.10%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(241,16,29)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(216,92,40)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(216,68,39)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(237,89,42)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(223,161,31)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(244,84,6)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.10%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(254,227,1)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(207,144,41)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(214,103,45)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(246,35,30)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(216,189,43)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(246,132,43)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.10%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(232,37,53)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(235,219,21)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(229,129,10)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(217,106,40)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(245,77,22)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(212,18,34)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.10%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(228,209,43)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(206,59,21)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(243,201,16)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(245,216,31)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(224,123,51)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(224,122,20)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(210,111,28)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(243,135,42)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(215,5,17)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.10%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(244,131,28)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(248,166,8)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(239,70,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(251,217,18)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(243,131,2)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(217,221,17)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.10%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(206,184,22)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(223,222,35)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(209,96,24)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(240,61,47)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="19" y="884" width="4" height="15" fill="rgb(234,26,23)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(220,179,2)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.28%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(214,192,42)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(240,86,34)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(211,160,6)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="964" width="4" height="15" fill="rgb(216,122,32)"/><text x="22.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(251,3,48)"/><text x="22.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.28%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(239,223,24)"/><text x="22.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="1012" width="4" height="15" fill="rgb(214,3,22)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="1028" width="4" height="15" fill="rgb(225,107,54)"/><text x="22.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="1044" width="4" height="15" fill="rgb(251,15,9)"/><text x="22.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="19" y="1060" width="4" height="15" fill="rgb(247,69,11)"/><text x="22.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="1076" width="4" height="15" fill="rgb(235,185,54)"/><text x="22.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1092" width="4" height="15" fill="rgb(229,82,14)"/><text x="22.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1108" width="4" height="15" fill="rgb(230,44,22)"/><text x="22.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1124" width="4" height="15" fill="rgb(228,100,0)"/><text x="22.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1140" width="4" height="15" fill="rgb(231,93,21)"/><text x="22.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1156" width="4" height="15" fill="rgb(207,35,8)"/><text x="22.00" y="1166.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1172" width="4" height="15" fill="rgb(237,26,46)"/><text x="22.00" y="1182.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1188" width="4" height="15" fill="rgb(224,17,34)"/><text x="22.00" y="1198.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1204" width="4" height="15" fill="rgb(251,55,17)"/><text x="22.00" y="1214.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1220" width="4" height="15" fill="rgb(209,162,49)"/><text x="22.00" y="1230.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.28%)</title><rect x="19" y="1236" width="4" height="15" fill="rgb(252,209,9)"/><text x="22.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="532" width="3" height="15" fill="rgb(243,194,36)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="548" width="3" height="15" fill="rgb(218,125,30)"/><text x="26.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="564" width="3" height="15" fill="rgb(239,188,38)"/><text x="26.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="580" width="3" height="15" fill="rgb(238,207,22)"/><text x="26.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="596" width="3" height="15" fill="rgb(244,170,54)"/><text x="26.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="612" width="3" height="15" fill="rgb(245,91,15)"/><text x="26.00" y="622.50"></text></g><g><title>&lt;module&gt; (scipy/__init__.py) (1 samples, 0.28%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(229,92,24)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(225,229,33)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(235,138,4)"/><text x="26.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(253,197,27)"/><text x="26.00" y="686.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.28%)</title><rect x="26" y="580" width="3" height="15" fill="rgb(244,71,0)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="596" width="3" height="15" fill="rgb(212,35,26)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="612" width="3" height="15" fill="rgb(247,150,40)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="628" width="3" height="15" fill="rgb(224,90,24)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="644" width="3" height="15" fill="rgb(246,204,37)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="660" width="3" height="15" fill="rgb(206,208,12)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csr.py) (1 samples, 0.28%)</title><rect x="26" y="676" width="3" height="15" fill="rgb(248,216,22)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="692" width="3" height="15" fill="rgb(222,71,5)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="708" width="3" height="15" fill="rgb(239,181,11)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="724" width="3" height="15" fill="rgb(242,199,38)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="740" width="3" height="15" fill="rgb(233,194,3)"/><text x="29.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="756" width="3" height="15" fill="rgb(241,141,46)"/><text x="29.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="772" width="3" height="15" fill="rgb(232,31,6)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="500" width="9" height="15" fill="rgb(240,226,4)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="23" y="516" width="9" height="15" fill="rgb(248,145,37)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="26" y="532" width="6" height="15" fill="rgb(215,182,21)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="26" y="548" width="6" height="15" fill="rgb(254,146,26)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="26" y="564" width="6" height="15" fill="rgb(215,179,28)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.28%)</title><rect x="29" y="580" width="3" height="15" fill="rgb(217,26,8)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(209,112,8)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(236,202,27)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(223,103,46)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="644" width="3" height="15" fill="rgb(242,42,53)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="660" width="3" height="15" fill="rgb(254,145,47)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.28%)</title><rect x="29" y="676" width="3" height="15" fill="rgb(229,92,15)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="692" width="3" height="15" fill="rgb(229,189,45)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="708" width="3" height="15" fill="rgb(221,215,35)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="724" width="3" height="15" fill="rgb(211,124,54)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="740" width="3" height="15" fill="rgb(218,171,4)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="756" width="3" height="15" fill="rgb(222,139,28)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.28%)</title><rect x="29" y="772" width="3" height="15" fill="rgb(222,5,25)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(252,115,28)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="804" width="3" height="15" fill="rgb(219,113,37)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(207,140,54)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(237,152,4)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(234,45,14)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (1 samples, 0.28%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(211,221,2)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(250,55,54)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(220,194,51)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(239,79,44)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(230,111,28)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="948" width="3" height="15" fill="rgb(238,106,39)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/special/basic.py) (1 samples, 0.28%)</title><rect x="29" y="964" width="3" height="15" fill="rgb(223,10,44)"/><text x="32.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="980" width="3" height="15" fill="rgb(239,182,25)"/><text x="32.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="996" width="3" height="15" fill="rgb(219,16,4)"/><text x="32.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1012" width="3" height="15" fill="rgb(225,29,32)"/><text x="32.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(236,51,41)"/><text x="32.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(215,57,41)"/><text x="32.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(227,210,41)"/><text x="32.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(207,185,47)"/><text x="32.00" y="1086.50"></text></g><g><title>&lt;module&gt; (scipy/special/orthogonal.py) (1 samples, 0.28%)</title><rect x="29" y="1092" width="3" height="15" fill="rgb(253,126,53)"/><text x="32.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1108" width="3" height="15" fill="rgb(224,44,48)"/><text x="32.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(220,2,19)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(244,172,53)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(246,32,19)"/><text x="32.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(225,12,16)"/><text x="32.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(241,34,2)"/><text x="32.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1204" width="3" height="15" fill="rgb(236,136,49)"/><text x="32.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py) (1 samples, 0.28%)</title><rect x="29" y="1220" width="3" height="15" fill="rgb(217,89,27)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1236" width="3" height="15" fill="rgb(215,46,18)"/><text x="32.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1252" width="3" height="15" fill="rgb(210,174,20)"/><text x="32.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1268" width="3" height="15" fill="rgb(223,63,50)"/><text x="32.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="1284" width="3" height="15" fill="rgb(246,98,27)"/><text x="32.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1300" width="3" height="15" fill="rgb(248,207,39)"/><text x="32.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/basic.py) (1 samples, 0.28%)</title><rect x="29" y="1316" width="3" height="15" fill="rgb(232,200,18)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1332" width="3" height="15" fill="rgb(227,140,13)"/><text x="32.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1348" width="3" height="15" fill="rgb(226,149,33)"/><text x="32.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1364" width="3" height="15" fill="rgb(230,142,51)"/><text x="32.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="29" y="1380" width="3" height="15" fill="rgb(254,2,8)"/><text x="32.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="29" y="1396" width="3" height="15" fill="rgb(242,32,46)"/><text x="32.00" y="1406.50"></text></g><g><title>0x7f7e4a25e03a (?) (1 samples, 0.28%)</title><rect x="29" y="1412" width="3" height="15" fill="rgb(243,4,11)"/><text x="32.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="10" y="196" width="26" height="15" fill="rgb(228,226,24)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="10" y="212" width="26" height="15" fill="rgb(221,203,44)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="10" y="228" width="26" height="15" fill="rgb(228,201,8)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="10" y="244" width="26" height="15" fill="rgb(205,28,28)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.20%)</title><rect x="10" y="260" width="26" height="15" fill="rgb(240,117,5)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="10" y="276" width="26" height="15" fill="rgb(253,113,35)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.10%)</title><rect x="23" y="292" width="13" height="15" fill="rgb(210,57,43)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="308" width="13" height="15" fill="rgb(221,174,17)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="324" width="13" height="15" fill="rgb(222,76,23)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="340" width="13" height="15" fill="rgb(206,150,30)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="23" y="356" width="13" height="15" fill="rgb(220,68,31)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="372" width="13" height="15" fill="rgb(234,114,42)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.10%)</title><rect x="23" y="388" width="13" height="15" fill="rgb(232,128,28)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="404" width="13" height="15" fill="rgb(247,216,42)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="420" width="13" height="15" fill="rgb(220,24,30)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="436" width="13" height="15" fill="rgb(244,217,24)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.10%)</title><rect x="23" y="452" width="13" height="15" fill="rgb(231,210,38)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.10%)</title><rect x="23" y="468" width="13" height="15" fill="rgb(208,166,43)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.10%)</title><rect x="23" y="484" width="13" height="15" fill="rgb(228,141,7)"/><text x="26.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(217,91,17)"/><text x="35.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(248,106,26)"/><text x="35.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(206,127,28)"/><text x="35.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(251,145,41)"/><text x="35.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(205,102,54)"/><text x="35.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(231,36,31)"/><text x="35.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(227,34,45)"/><text x="35.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.28%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(214,160,31)"/><text x="35.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(217,127,36)"/><text x="35.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(213,49,34)"/><text x="35.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(242,78,38)"/><text x="35.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(229,15,34)"/><text x="35.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(241,80,30)"/><text x="35.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.28%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(243,211,5)"/><text x="35.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(254,65,29)"/><text x="35.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(215,100,53)"/><text x="35.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(209,28,47)"/><text x="35.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(207,137,53)"/><text x="35.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(254,49,27)"/><text x="35.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.28%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(241,111,54)"/><text x="35.00" y="814.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(247,32,41)"/><text x="35.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(212,63,42)"/><text x="35.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(205,35,31)"/><text x="35.00" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(248,116,8)"/><text x="35.00" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(219,84,15)"/><text x="35.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(223,193,39)"/><text x="35.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="916" width="4" height="15" fill="rgb(232,108,6)"/><text x="35.00" y="926.50"></text></g><g><title>&lt;module&gt; (joblib/hashing.py) (1 samples, 0.28%)</title><rect x="32" y="932" width="4" height="15" fill="rgb(253,124,48)"/><text x="35.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="948" width="4" height="15" fill="rgb(230,161,53)"/><text x="35.00" y="958.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="32" y="964" width="4" height="15" fill="rgb(240,3,25)"/><text x="35.00" y="974.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(244,135,31)"/><text x="39.00" y="542.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(217,181,25)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(254,93,11)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(237,172,50)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(252,63,11)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(244,181,8)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(210,21,18)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.28%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(223,17,7)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(210,109,40)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(215,64,10)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1252" width="3" height="15" fill="rgb(224,4,48)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="39" y="1268" width="3" height="15" fill="rgb(240,77,9)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="1284" width="3" height="15" fill="rgb(250,122,16)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.28%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(249,128,13)"/><text x="42.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.28%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(253,191,13)"/><text x="42.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.28%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(244,221,38)"/><text x="42.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.28%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(220,171,34)"/><text x="42.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.28%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(253,203,2)"/><text x="42.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.28%)</title><rect x="39" y="1380" width="3" height="15" fill="rgb(235,190,2)"/><text x="42.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.28%)</title><rect x="39" y="1396" width="3" height="15" fill="rgb(240,40,5)"/><text x="42.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.28%)</title><rect x="39" y="1412" width="3" height="15" fill="rgb(207,191,43)"/><text x="42.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.28%)</title><rect x="39" y="1428" width="3" height="15" fill="rgb(236,107,32)"/><text x="42.00" y="1438.50"></text></g><g><title>__get__ (types.py) (1 samples, 0.28%)</title><rect x="39" y="1444" width="3" height="15" fill="rgb(225,159,11)"/><text x="42.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="36" y="484" width="9" height="15" fill="rgb(224,108,46)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="36" y="500" width="9" height="15" fill="rgb(243,101,42)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="36" y="516" width="9" height="15" fill="rgb(248,68,19)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="532" width="6" height="15" fill="rgb(246,16,1)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="548" width="6" height="15" fill="rgb(225,16,5)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="564" width="6" height="15" fill="rgb(206,108,21)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.55%)</title><rect x="39" y="580" width="6" height="15" fill="rgb(220,12,42)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="596" width="6" height="15" fill="rgb(215,178,31)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="612" width="6" height="15" fill="rgb(237,129,29)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="628" width="6" height="15" fill="rgb(248,1,4)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="644" width="6" height="15" fill="rgb(250,111,7)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="660" width="6" height="15" fill="rgb(205,141,44)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.55%)</title><rect x="39" y="676" width="6" height="15" fill="rgb(213,43,18)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="692" width="6" height="15" fill="rgb(234,94,48)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="708" width="6" height="15" fill="rgb(243,50,22)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="724" width="6" height="15" fill="rgb(252,125,53)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="740" width="6" height="15" fill="rgb(242,229,21)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="756" width="6" height="15" fill="rgb(226,60,13)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.55%)</title><rect x="39" y="772" width="6" height="15" fill="rgb(219,52,27)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="788" width="6" height="15" fill="rgb(215,80,22)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="804" width="6" height="15" fill="rgb(225,26,39)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="820" width="6" height="15" fill="rgb(245,28,4)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="836" width="6" height="15" fill="rgb(246,174,1)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="852" width="6" height="15" fill="rgb(216,15,8)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.55%)</title><rect x="39" y="868" width="6" height="15" fill="rgb(231,51,42)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="884" width="6" height="15" fill="rgb(230,105,43)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="900" width="6" height="15" fill="rgb(214,134,29)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="916" width="6" height="15" fill="rgb(208,94,1)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="932" width="6" height="15" fill="rgb(235,88,39)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="948" width="6" height="15" fill="rgb(249,94,26)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="964" width="6" height="15" fill="rgb(254,201,15)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="980" width="6" height="15" fill="rgb(231,195,31)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="996" width="6" height="15" fill="rgb(212,8,54)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.55%)</title><rect x="39" y="1012" width="6" height="15" fill="rgb(211,200,15)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1028" width="6" height="15" fill="rgb(254,223,10)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1044" width="6" height="15" fill="rgb(249,107,28)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1060" width="6" height="15" fill="rgb(246,199,27)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="39" y="1076" width="6" height="15" fill="rgb(225,214,23)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="39" y="1092" width="6" height="15" fill="rgb(208,45,13)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.55%)</title><rect x="39" y="1108" width="6" height="15" fill="rgb(233,41,12)"/><text x="42.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1124" width="3" height="15" fill="rgb(232,36,18)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1140" width="3" height="15" fill="rgb(214,113,12)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1156" width="3" height="15" fill="rgb(235,86,34)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1172" width="3" height="15" fill="rgb(253,51,20)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1188" width="3" height="15" fill="rgb(249,178,1)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="42" y="1204" width="3" height="15" fill="rgb(227,83,45)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1220" width="3" height="15" fill="rgb(208,44,5)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.28%)</title><rect x="42" y="1236" width="3" height="15" fill="rgb(254,100,37)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1252" width="3" height="15" fill="rgb(221,7,14)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1268" width="3" height="15" fill="rgb(240,111,20)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1284" width="3" height="15" fill="rgb(253,203,22)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1300" width="3" height="15" fill="rgb(214,199,16)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1316" width="3" height="15" fill="rgb(249,181,0)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="42" y="1332" width="3" height="15" fill="rgb(225,99,49)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1348" width="3" height="15" fill="rgb(231,155,39)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.28%)</title><rect x="42" y="1364" width="3" height="15" fill="rgb(253,206,7)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1380" width="3" height="15" fill="rgb(212,2,44)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1396" width="3" height="15" fill="rgb(248,156,12)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1412" width="3" height="15" fill="rgb(226,177,30)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="42" y="1428" width="3" height="15" fill="rgb(239,146,0)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="42" y="1444" width="3" height="15" fill="rgb(236,84,46)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.28%)</title><rect x="42" y="1460" width="3" height="15" fill="rgb(223,21,35)"/><text x="45.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.28%)</title><rect x="42" y="1476" width="3" height="15" fill="rgb(236,29,3)"/><text x="45.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.28%)</title><rect x="42" y="1492" width="3" height="15" fill="rgb(254,111,35)"/><text x="45.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.28%)</title><rect x="42" y="1508" width="3" height="15" fill="rgb(228,153,21)"/><text x="45.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.28%)</title><rect x="42" y="1524" width="3" height="15" fill="rgb(234,213,45)"/><text x="45.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="42" y="1540" width="3" height="15" fill="rgb(246,45,20)"/><text x="45.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="42" y="1556" width="3" height="15" fill="rgb(240,134,44)"/><text x="45.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.28%)</title><rect x="42" y="1572" width="3" height="15" fill="rgb(250,119,23)"/><text x="45.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.28%)</title><rect x="42" y="1588" width="3" height="15" fill="rgb(229,162,32)"/><text x="45.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="772" width="4" height="15" fill="rgb(222,79,16)"/><text x="48.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="788" width="4" height="15" fill="rgb(236,87,10)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="804" width="4" height="15" fill="rgb(243,103,46)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="820" width="4" height="15" fill="rgb(226,30,7)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="45" y="836" width="4" height="15" fill="rgb(209,54,36)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="852" width="4" height="15" fill="rgb(214,180,26)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.28%)</title><rect x="45" y="868" width="4" height="15" fill="rgb(222,56,43)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="884" width="4" height="15" fill="rgb(229,131,8)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="900" width="4" height="15" fill="rgb(247,92,50)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="916" width="4" height="15" fill="rgb(224,3,11)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="45" y="932" width="4" height="15" fill="rgb(206,216,52)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="948" width="4" height="15" fill="rgb(242,53,27)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimes.py) (1 samples, 0.28%)</title><rect x="45" y="964" width="4" height="15" fill="rgb(249,139,33)"/><text x="48.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="980" width="4" height="15" fill="rgb(249,170,31)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="996" width="4" height="15" fill="rgb(231,77,1)"/><text x="48.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1012" width="4" height="15" fill="rgb(232,143,51)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1028" width="4" height="15" fill="rgb(210,30,1)"/><text x="48.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1044" width="4" height="15" fill="rgb(251,12,18)"/><text x="48.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="45" y="1060" width="4" height="15" fill="rgb(229,115,38)"/><text x="48.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1076" width="4" height="15" fill="rgb(206,192,13)"/><text x="48.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/datetimelike.py) (1 samples, 0.28%)</title><rect x="45" y="1092" width="4" height="15" fill="rgb(247,198,9)"/><text x="48.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1108" width="4" height="15" fill="rgb(212,148,2)"/><text x="48.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(217,58,52)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(230,123,31)"/><text x="48.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(242,49,17)"/><text x="48.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(243,136,47)"/><text x="48.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(233,80,13)"/><text x="48.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(215,120,12)"/><text x="48.00" y="1214.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/frequencies.py) (1 samples, 0.28%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(231,94,20)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(237,61,32)"/><text x="48.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(223,209,52)"/><text x="48.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(224,133,39)"/><text x="48.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="45" y="1284" width="4" height="15" fill="rgb(216,124,29)"/><text x="48.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1300" width="4" height="15" fill="rgb(217,19,13)"/><text x="48.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/tseries/offsets.py) (1 samples, 0.28%)</title><rect x="45" y="1316" width="4" height="15" fill="rgb(231,95,45)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1332" width="4" height="15" fill="rgb(254,24,49)"/><text x="48.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1348" width="4" height="15" fill="rgb(250,97,5)"/><text x="48.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1364" width="4" height="15" fill="rgb(251,26,8)"/><text x="48.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="45" y="1380" width="4" height="15" fill="rgb(246,147,49)"/><text x="48.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="45" y="1396" width="4" height="15" fill="rgb(231,129,1)"/><text x="48.00" y="1406.50"></text></g><g><title>&lt;module&gt; (pandas/core/tools/datetimes.py) (1 samples, 0.28%)</title><rect x="45" y="1412" width="4" height="15" fill="rgb(254,189,25)"/><text x="48.00" y="1422.50"></text></g><g><title>Series (pandas/core/series.py) (1 samples, 0.28%)</title><rect x="49" y="1124" width="3" height="15" fill="rgb(234,173,53)"/><text x="52.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.28%)</title><rect x="49" y="1140" width="3" height="15" fill="rgb(216,56,5)"/><text x="52.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.28%)</title><rect x="49" y="1156" width="3" height="15" fill="rgb(230,44,30)"/><text x="52.00" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 0.28%)</title><rect x="49" y="1172" width="3" height="15" fill="rgb(225,212,6)"/><text x="52.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.28%)</title><rect x="49" y="1188" width="3" height="15" fill="rgb(228,108,3)"/><text x="52.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.28%)</title><rect x="49" y="1204" width="3" height="15" fill="rgb(219,213,1)"/><text x="52.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="49" y="1220" width="3" height="15" fill="rgb(245,160,52)"/><text x="52.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.83%)</title><rect x="45" y="724" width="10" height="15" fill="rgb(211,183,0)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="45" y="740" width="10" height="15" fill="rgb(238,151,42)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="45" y="756" width="10" height="15" fill="rgb(251,180,16)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="772" width="6" height="15" fill="rgb(237,6,17)"/><text x="52.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="49" y="788" width="6" height="15" fill="rgb(251,40,51)"/><text x="52.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="804" width="6" height="15" fill="rgb(221,27,49)"/><text x="52.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.55%)</title><rect x="49" y="820" width="6" height="15" fill="rgb(207,205,40)"/><text x="52.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="836" width="6" height="15" fill="rgb(229,187,35)"/><text x="52.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="852" width="6" height="15" fill="rgb(236,138,18)"/><text x="52.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="868" width="6" height="15" fill="rgb(245,182,49)"/><text x="52.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="49" y="884" width="6" height="15" fill="rgb(228,75,17)"/><text x="52.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="900" width="6" height="15" fill="rgb(236,74,7)"/><text x="52.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.55%)</title><rect x="49" y="916" width="6" height="15" fill="rgb(215,205,0)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="932" width="6" height="15" fill="rgb(229,93,35)"/><text x="52.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="948" width="6" height="15" fill="rgb(244,60,8)"/><text x="52.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="964" width="6" height="15" fill="rgb(247,113,25)"/><text x="52.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="49" y="980" width="6" height="15" fill="rgb(221,29,18)"/><text x="52.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="996" width="6" height="15" fill="rgb(249,197,32)"/><text x="52.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.55%)</title><rect x="49" y="1012" width="6" height="15" fill="rgb(226,76,17)"/><text x="52.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="1028" width="6" height="15" fill="rgb(221,69,29)"/><text x="52.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="1044" width="6" height="15" fill="rgb(239,186,36)"/><text x="52.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="1060" width="6" height="15" fill="rgb(210,141,50)"/><text x="52.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="49" y="1076" width="6" height="15" fill="rgb(222,144,28)"/><text x="52.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="49" y="1092" width="6" height="15" fill="rgb(254,91,42)"/><text x="52.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.55%)</title><rect x="49" y="1108" width="6" height="15" fill="rgb(238,16,44)"/><text x="52.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1124" width="3" height="15" fill="rgb(229,118,6)"/><text x="55.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1140" width="3" height="15" fill="rgb(237,48,44)"/><text x="55.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1156" width="3" height="15" fill="rgb(252,111,53)"/><text x="55.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1172" width="3" height="15" fill="rgb(238,145,31)"/><text x="55.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1188" width="3" height="15" fill="rgb(214,105,29)"/><text x="55.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.28%)</title><rect x="52" y="1204" width="3" height="15" fill="rgb(246,137,45)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1220" width="3" height="15" fill="rgb(211,222,16)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1236" width="3" height="15" fill="rgb(251,149,41)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1252" width="3" height="15" fill="rgb(222,5,31)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1268" width="3" height="15" fill="rgb(232,134,35)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1284" width="3" height="15" fill="rgb(248,46,0)"/><text x="55.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.28%)</title><rect x="52" y="1300" width="3" height="15" fill="rgb(249,209,40)"/><text x="55.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1316" width="3" height="15" fill="rgb(213,61,41)"/><text x="55.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1332" width="3" height="15" fill="rgb(254,90,19)"/><text x="55.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1348" width="3" height="15" fill="rgb(237,185,24)"/><text x="55.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1364" width="3" height="15" fill="rgb(230,125,37)"/><text x="55.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1380" width="3" height="15" fill="rgb(235,134,27)"/><text x="55.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.28%)</title><rect x="52" y="1396" width="3" height="15" fill="rgb(254,88,45)"/><text x="55.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1412" width="3" height="15" fill="rgb(209,204,52)"/><text x="55.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1428" width="3" height="15" fill="rgb(211,75,10)"/><text x="55.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1444" width="3" height="15" fill="rgb(226,18,13)"/><text x="55.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1460" width="3" height="15" fill="rgb(221,119,8)"/><text x="55.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1476" width="3" height="15" fill="rgb(207,74,47)"/><text x="55.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.28%)</title><rect x="52" y="1492" width="3" height="15" fill="rgb(221,150,1)"/><text x="55.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1508" width="3" height="15" fill="rgb(231,209,7)"/><text x="55.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1524" width="3" height="15" fill="rgb(223,71,46)"/><text x="55.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1540" width="3" height="15" fill="rgb(248,108,43)"/><text x="55.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1556" width="3" height="15" fill="rgb(244,35,44)"/><text x="55.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1572" width="3" height="15" fill="rgb(215,2,12)"/><text x="55.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.28%)</title><rect x="52" y="1588" width="3" height="15" fill="rgb(250,99,40)"/><text x="55.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1604" width="3" height="15" fill="rgb(210,23,40)"/><text x="55.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1620" width="3" height="15" fill="rgb(231,194,7)"/><text x="55.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1636" width="3" height="15" fill="rgb(220,30,7)"/><text x="55.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1652" width="3" height="15" fill="rgb(208,17,38)"/><text x="55.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1668" width="3" height="15" fill="rgb(224,11,15)"/><text x="55.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.28%)</title><rect x="52" y="1684" width="3" height="15" fill="rgb(216,100,11)"/><text x="55.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1700" width="3" height="15" fill="rgb(220,214,36)"/><text x="55.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1716" width="3" height="15" fill="rgb(210,70,46)"/><text x="55.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1732" width="3" height="15" fill="rgb(233,191,13)"/><text x="55.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1748" width="3" height="15" fill="rgb(219,176,41)"/><text x="55.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1764" width="3" height="15" fill="rgb(212,215,31)"/><text x="55.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.28%)</title><rect x="52" y="1780" width="3" height="15" fill="rgb(225,196,11)"/><text x="55.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1796" width="3" height="15" fill="rgb(250,64,38)"/><text x="55.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1812" width="3" height="15" fill="rgb(214,88,22)"/><text x="55.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1828" width="3" height="15" fill="rgb(248,72,54)"/><text x="55.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1844" width="3" height="15" fill="rgb(211,217,0)"/><text x="55.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1860" width="3" height="15" fill="rgb(208,76,30)"/><text x="55.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.28%)</title><rect x="52" y="1876" width="3" height="15" fill="rgb(221,56,48)"/><text x="55.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1892" width="3" height="15" fill="rgb(242,214,7)"/><text x="55.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1908" width="3" height="15" fill="rgb(215,30,33)"/><text x="55.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1924" width="3" height="15" fill="rgb(230,97,16)"/><text x="55.00" y="1934.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1940" width="3" height="15" fill="rgb(220,73,51)"/><text x="55.00" y="1950.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1956" width="3" height="15" fill="rgb(227,164,47)"/><text x="55.00" y="1966.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="1972" width="3" height="15" fill="rgb(225,160,23)"/><text x="55.00" y="1982.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="1988" width="3" height="15" fill="rgb(253,117,6)"/><text x="55.00" y="1998.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.20%)</title><rect x="36" y="340" width="26" height="15" fill="rgb(218,117,54)"/><text x="39.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="36" y="356" width="26" height="15" fill="rgb(213,212,46)"/><text x="39.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="36" y="372" width="26" height="15" fill="rgb(241,102,17)"/><text x="39.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="36" y="388" width="26" height="15" fill="rgb(249,135,52)"/><text x="39.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.20%)</title><rect x="36" y="404" width="26" height="15" fill="rgb(208,134,2)"/><text x="39.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="36" y="420" width="26" height="15" fill="rgb(218,78,20)"/><text x="39.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 2.20%)</title><rect x="36" y="436" width="26" height="15" fill="rgb(221,128,53)"/><text x="39.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="36" y="452" width="26" height="15" fill="rgb(213,5,19)"/><text x="39.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.20%)</title><rect x="36" y="468" width="26" height="15" fill="rgb(219,226,7)"/><text x="39.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="484" width="17" height="15" fill="rgb(205,223,1)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.38%)</title><rect x="45" y="500" width="17" height="15" fill="rgb(212,184,25)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="516" width="17" height="15" fill="rgb(228,202,8)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 1.38%)</title><rect x="45" y="532" width="17" height="15" fill="rgb(232,91,39)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="548" width="17" height="15" fill="rgb(223,55,36)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="564" width="17" height="15" fill="rgb(212,11,28)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="580" width="17" height="15" fill="rgb(219,100,52)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.38%)</title><rect x="45" y="596" width="17" height="15" fill="rgb(237,102,15)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="612" width="17" height="15" fill="rgb(252,191,46)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 1.38%)</title><rect x="45" y="628" width="17" height="15" fill="rgb(239,5,10)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="644" width="17" height="15" fill="rgb(251,27,54)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="660" width="17" height="15" fill="rgb(222,37,5)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="676" width="17" height="15" fill="rgb(245,223,30)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.38%)</title><rect x="45" y="692" width="17" height="15" fill="rgb(251,146,10)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.38%)</title><rect x="45" y="708" width="17" height="15" fill="rgb(229,95,54)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pytz/__init__.py) (2 samples, 0.55%)</title><rect x="55" y="724" width="7" height="15" fill="rgb(246,62,49)"/><text x="58.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="58" y="740" width="4" height="15" fill="rgb(250,182,37)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="58" y="756" width="4" height="15" fill="rgb(245,222,17)"/><text x="61.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="58" y="772" width="4" height="15" fill="rgb(226,34,6)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="58" y="788" width="4" height="15" fill="rgb(231,1,54)"/><text x="61.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="58" y="804" width="4" height="15" fill="rgb(229,26,10)"/><text x="61.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="58" y="820" width="4" height="15" fill="rgb(254,205,39)"/><text x="61.00" y="830.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.28%)</title><rect x="62" y="868" width="3" height="15" fill="rgb(229,130,37)"/><text x="65.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="884" width="3" height="15" fill="rgb(205,101,19)"/><text x="65.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="900" width="3" height="15" fill="rgb(250,229,44)"/><text x="65.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="916" width="3" height="15" fill="rgb(248,156,37)"/><text x="65.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="62" y="932" width="3" height="15" fill="rgb(214,176,12)"/><text x="65.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="948" width="3" height="15" fill="rgb(226,134,46)"/><text x="65.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.28%)</title><rect x="62" y="964" width="3" height="15" fill="rgb(234,32,33)"/><text x="65.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="980" width="3" height="15" fill="rgb(248,199,27)"/><text x="65.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="996" width="3" height="15" fill="rgb(211,106,20)"/><text x="65.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1012" width="3" height="15" fill="rgb(230,156,15)"/><text x="65.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="62" y="1028" width="3" height="15" fill="rgb(240,210,29)"/><text x="65.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1044" width="3" height="15" fill="rgb(251,171,10)"/><text x="65.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py) (1 samples, 0.28%)</title><rect x="62" y="1060" width="3" height="15" fill="rgb(222,46,20)"/><text x="65.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1076" width="3" height="15" fill="rgb(249,14,5)"/><text x="65.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1092" width="3" height="15" fill="rgb(207,212,16)"/><text x="65.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1108" width="3" height="15" fill="rgb(241,81,33)"/><text x="65.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="62" y="1124" width="3" height="15" fill="rgb(223,63,6)"/><text x="65.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1140" width="3" height="15" fill="rgb(212,47,4)"/><text x="65.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py) (1 samples, 0.28%)</title><rect x="62" y="1156" width="3" height="15" fill="rgb(236,158,39)"/><text x="65.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1172" width="3" height="15" fill="rgb(250,138,34)"/><text x="65.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1188" width="3" height="15" fill="rgb(253,217,23)"/><text x="65.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="62" y="1204" width="3" height="15" fill="rgb(206,147,8)"/><text x="65.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="62" y="1220" width="3" height="15" fill="rgb(229,65,10)"/><text x="65.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="62" y="1236" width="3" height="15" fill="rgb(217,72,48)"/><text x="65.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="62" y="1252" width="3" height="15" fill="rgb(235,119,25)"/><text x="65.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.96%)</title><rect x="10" y="68" width="58" height="15" fill="rgb(230,116,49)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.96%)</title><rect x="10" y="84" width="58" height="15" fill="rgb(219,128,38)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.96%)</title><rect x="10" y="100" width="58" height="15" fill="rgb(241,27,17)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 4.96%)</title><rect x="10" y="116" width="58" height="15" fill="rgb(224,211,44)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.96%)</title><rect x="10" y="132" width="58" height="15" fill="rgb(215,168,33)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py) (18 samples, 4.96%)</title><rect x="10" y="148" width="58" height="15" fill="rgb(210,155,37)"/><text x="13.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.96%)</title><rect x="10" y="164" width="58" height="15" fill="rgb(207,162,53)"/><text x="13.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 4.96%)</title><rect x="10" y="180" width="58" height="15" fill="rgb(211,38,28)"/><text x="13.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.75%)</title><rect x="36" y="196" width="32" height="15" fill="rgb(230,96,46)"/><text x="39.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.75%)</title><rect x="36" y="212" width="32" height="15" fill="rgb(218,187,39)"/><text x="39.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.75%)</title><rect x="36" y="228" width="32" height="15" fill="rgb(206,123,49)"/><text x="39.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.75%)</title><rect x="36" y="244" width="32" height="15" fill="rgb(213,105,49)"/><text x="39.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.75%)</title><rect x="36" y="260" width="32" height="15" fill="rgb(225,75,8)"/><text x="39.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.75%)</title><rect x="36" y="276" width="32" height="15" fill="rgb(239,68,12)"/><text x="39.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.75%)</title><rect x="36" y="292" width="32" height="15" fill="rgb(225,55,15)"/><text x="39.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.75%)</title><rect x="36" y="308" width="32" height="15" fill="rgb(232,33,11)"/><text x="39.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.75%)</title><rect x="36" y="324" width="32" height="15" fill="rgb(217,144,50)"/><text x="39.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.55%)</title><rect x="62" y="340" width="6" height="15" fill="rgb(219,142,52)"/><text x="65.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="356" width="6" height="15" fill="rgb(216,190,20)"/><text x="65.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="372" width="6" height="15" fill="rgb(234,72,35)"/><text x="65.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="388" width="6" height="15" fill="rgb(243,191,43)"/><text x="65.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="404" width="6" height="15" fill="rgb(224,21,41)"/><text x="65.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="420" width="6" height="15" fill="rgb(247,211,17)"/><text x="65.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="436" width="6" height="15" fill="rgb(242,3,35)"/><text x="65.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="62" y="452" width="6" height="15" fill="rgb(244,35,12)"/><text x="65.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="468" width="6" height="15" fill="rgb(253,9,25)"/><text x="65.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.55%)</title><rect x="62" y="484" width="6" height="15" fill="rgb(238,63,52)"/><text x="65.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="500" width="6" height="15" fill="rgb(223,52,24)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="516" width="6" height="15" fill="rgb(211,128,33)"/><text x="65.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="532" width="6" height="15" fill="rgb(221,67,27)"/><text x="65.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="62" y="548" width="6" height="15" fill="rgb(212,181,47)"/><text x="65.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="564" width="6" height="15" fill="rgb(205,218,32)"/><text x="65.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.55%)</title><rect x="62" y="580" width="6" height="15" fill="rgb(253,52,8)"/><text x="65.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="596" width="6" height="15" fill="rgb(210,22,8)"/><text x="65.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="612" width="6" height="15" fill="rgb(231,178,19)"/><text x="65.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="628" width="6" height="15" fill="rgb(240,8,38)"/><text x="65.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="62" y="644" width="6" height="15" fill="rgb(214,166,6)"/><text x="65.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="660" width="6" height="15" fill="rgb(211,1,18)"/><text x="65.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.55%)</title><rect x="62" y="676" width="6" height="15" fill="rgb(233,54,51)"/><text x="65.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="692" width="6" height="15" fill="rgb(233,102,5)"/><text x="65.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="708" width="6" height="15" fill="rgb(208,217,52)"/><text x="65.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="724" width="6" height="15" fill="rgb(252,8,21)"/><text x="65.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="62" y="740" width="6" height="15" fill="rgb(252,84,12)"/><text x="65.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="756" width="6" height="15" fill="rgb(245,220,46)"/><text x="65.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.55%)</title><rect x="62" y="772" width="6" height="15" fill="rgb(231,32,47)"/><text x="65.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="788" width="6" height="15" fill="rgb(238,46,25)"/><text x="65.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="804" width="6" height="15" fill="rgb(227,224,33)"/><text x="65.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="820" width="6" height="15" fill="rgb(205,198,25)"/><text x="65.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.55%)</title><rect x="62" y="836" width="6" height="15" fill="rgb(230,115,1)"/><text x="65.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="62" y="852" width="6" height="15" fill="rgb(254,172,43)"/><text x="65.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.28%)</title><rect x="65" y="868" width="3" height="15" fill="rgb(239,168,50)"/><text x="68.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="884" width="3" height="15" fill="rgb(241,93,26)"/><text x="68.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="900" width="3" height="15" fill="rgb(233,184,25)"/><text x="68.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="916" width="3" height="15" fill="rgb(210,224,0)"/><text x="68.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="65" y="932" width="3" height="15" fill="rgb(221,141,9)"/><text x="68.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="948" width="3" height="15" fill="rgb(230,133,9)"/><text x="68.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.28%)</title><rect x="65" y="964" width="3" height="15" fill="rgb(209,4,42)"/><text x="68.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="980" width="3" height="15" fill="rgb(241,111,30)"/><text x="68.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="996" width="3" height="15" fill="rgb(213,112,2)"/><text x="68.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1012" width="3" height="15" fill="rgb(234,64,53)"/><text x="68.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="65" y="1028" width="3" height="15" fill="rgb(230,102,21)"/><text x="68.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1044" width="3" height="15" fill="rgb(232,200,27)"/><text x="68.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.28%)</title><rect x="65" y="1060" width="3" height="15" fill="rgb(235,158,45)"/><text x="68.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1076" width="3" height="15" fill="rgb(210,67,2)"/><text x="68.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1092" width="3" height="15" fill="rgb(221,18,11)"/><text x="68.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1108" width="3" height="15" fill="rgb(241,29,21)"/><text x="68.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1124" width="3" height="15" fill="rgb(245,224,50)"/><text x="68.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1140" width="3" height="15" fill="rgb(212,61,29)"/><text x="68.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1156" width="3" height="15" fill="rgb(244,205,30)"/><text x="68.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="65" y="1172" width="3" height="15" fill="rgb(205,205,6)"/><text x="68.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1188" width="3" height="15" fill="rgb(253,141,20)"/><text x="68.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.28%)</title><rect x="65" y="1204" width="3" height="15" fill="rgb(211,187,36)"/><text x="68.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1220" width="3" height="15" fill="rgb(233,12,15)"/><text x="68.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1236" width="3" height="15" fill="rgb(230,112,50)"/><text x="68.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1252" width="3" height="15" fill="rgb(224,99,29)"/><text x="68.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="65" y="1268" width="3" height="15" fill="rgb(224,188,37)"/><text x="68.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1284" width="3" height="15" fill="rgb(243,21,0)"/><text x="68.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.28%)</title><rect x="65" y="1300" width="3" height="15" fill="rgb(226,75,3)"/><text x="68.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1316" width="3" height="15" fill="rgb(223,149,3)"/><text x="68.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1332" width="3" height="15" fill="rgb(218,203,17)"/><text x="68.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1348" width="3" height="15" fill="rgb(226,209,46)"/><text x="68.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="65" y="1364" width="3" height="15" fill="rgb(244,70,44)"/><text x="68.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="65" y="1380" width="3" height="15" fill="rgb(226,47,39)"/><text x="68.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.28%)</title><rect x="65" y="1396" width="3" height="15" fill="rgb(219,213,50)"/><text x="68.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.28%)</title><rect x="65" y="1412" width="3" height="15" fill="rgb(224,131,0)"/><text x="68.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.28%)</title><rect x="65" y="1428" width="3" height="15" fill="rgb(213,151,51)"/><text x="68.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.28%)</title><rect x="65" y="1444" width="3" height="15" fill="rgb(251,13,53)"/><text x="68.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="65" y="1460" width="3" height="15" fill="rgb(209,25,37)"/><text x="68.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="65" y="1476" width="3" height="15" fill="rgb(215,188,48)"/><text x="68.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="65" y="1492" width="3" height="15" fill="rgb(232,216,52)"/><text x="68.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="65" y="1508" width="3" height="15" fill="rgb(240,17,1)"/><text x="68.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="65" y="1524" width="3" height="15" fill="rgb(247,179,41)"/><text x="68.00" y="1534.50"></text></g><g><title>__setitem__ (sre_parse.py) (1 samples, 0.28%)</title><rect x="65" y="1540" width="3" height="15" fill="rgb(234,151,6)"/><text x="68.00" y="1550.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (1 samples, 0.28%)</title><rect x="68" y="68" width="3" height="15" fill="rgb(239,135,3)"/><text x="71.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (1 samples, 0.28%)</title><rect x="68" y="84" width="3" height="15" fill="rgb(228,105,53)"/><text x="71.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (1 samples, 0.28%)</title><rect x="68" y="100" width="3" height="15" fill="rgb(217,166,39)"/><text x="71.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="68" y="116" width="3" height="15" fill="rgb(252,123,7)"/><text x="71.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="68" y="132" width="3" height="15" fill="rgb(209,25,36)"/><text x="71.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.28%)</title><rect x="68" y="148" width="3" height="15" fill="rgb(244,135,29)"/><text x="71.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.28%)</title><rect x="68" y="164" width="3" height="15" fill="rgb(240,64,13)"/><text x="71.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (1 samples, 0.28%)</title><rect x="68" y="180" width="3" height="15" fill="rgb(215,53,50)"/><text x="71.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.28%)</title><rect x="68" y="196" width="3" height="15" fill="rgb(225,108,23)"/><text x="71.00" y="206.50"></text></g><g><title>0x7f7e42fe8d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="68" y="212" width="3" height="15" fill="rgb(220,109,49)"/><text x="71.00" y="222.50"></text></g><g><title>0x7f7e42fe7fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(214,61,37)"/><text x="71.00" y="238.50"></text></g><g><title>0x7f7e42ff7405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="68" y="244" width="3" height="15" fill="rgb(232,114,24)"/><text x="71.00" y="254.50"></text></g><g><title>0x7f7e42ff6592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="68" y="260" width="3" height="15" fill="rgb(236,198,40)"/><text x="71.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="68" y="276" width="3" height="15" fill="rgb(237,191,6)"/><text x="71.00" y="286.50"></text></g><g><title>0x7f7e295e2ff9 (?) (1 samples, 0.28%)</title><rect x="81" y="212" width="3" height="15" fill="rgb(218,55,8)"/><text x="84.00" y="222.50"></text></g><g><title>0x7f7e295ddef6 (?) (1 samples, 0.28%)</title><rect x="81" y="228" width="3" height="15" fill="rgb(252,162,45)"/><text x="84.00" y="238.50"></text></g><g><title>0x7f7e295d2962 (?) (1 samples, 0.28%)</title><rect x="81" y="244" width="3" height="15" fill="rgb(239,98,17)"/><text x="84.00" y="254.50"></text></g><g><title>0x7f7e296067a7 (?) (1 samples, 0.28%)</title><rect x="81" y="260" width="3" height="15" fill="rgb(219,197,53)"/><text x="84.00" y="270.50"></text></g><g><title>0x7f7e29606379 (?) (1 samples, 0.28%)</title><rect x="81" y="276" width="3" height="15" fill="rgb(209,64,2)"/><text x="84.00" y="286.50"></text></g><g><title>0x7f7e29a648b8 (?) (1 samples, 0.28%)</title><rect x="81" y="292" width="3" height="15" fill="rgb(251,177,24)"/><text x="84.00" y="302.50"></text></g><g><title>0x7f7e29a62c7f (?) (1 samples, 0.28%)</title><rect x="81" y="308" width="3" height="15" fill="rgb(214,210,29)"/><text x="84.00" y="318.50"></text></g><g><title>0x7f7e29a7599c (?) (1 samples, 0.28%)</title><rect x="81" y="324" width="3" height="15" fill="rgb(222,219,20)"/><text x="84.00" y="334.50"></text></g><g><title>0x7f7e29877988 (?) (1 samples, 0.28%)</title><rect x="81" y="340" width="3" height="15" fill="rgb(245,149,43)"/><text x="84.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="81" y="356" width="3" height="15" fill="rgb(219,55,7)"/><text x="84.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="81" y="372" width="3" height="15" fill="rgb(216,34,44)"/><text x="84.00" y="382.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.28%)</title><rect x="84" y="212" width="4" height="15" fill="rgb(245,57,38)"/><text x="87.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="84" y="228" width="4" height="15" fill="rgb(244,56,1)"/><text x="87.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="84" y="244" width="4" height="15" fill="rgb(254,141,10)"/><text x="87.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="84" y="260" width="4" height="15" fill="rgb(209,204,48)"/><text x="87.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="94" y="292" width="3" height="15" fill="rgb(225,174,40)"/><text x="97.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="94" y="308" width="3" height="15" fill="rgb(237,203,19)"/><text x="97.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="97" y="292" width="4" height="15" fill="rgb(234,2,0)"/><text x="100.00" y="302.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="101" y="340" width="3" height="15" fill="rgb(246,16,33)"/><text x="104.00" y="350.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="101" y="356" width="3" height="15" fill="rgb(228,175,38)"/><text x="104.00" y="366.50"></text></g><g><title>onnxruntime::SliceIterator&lt;float&gt;::SliceIterator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="101" y="372" width="3" height="15" fill="rgb(224,109,45)"/><text x="104.00" y="382.50"></text></g><g><title>onnxruntime::SliceSkips::SliceSkips (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="101" y="388" width="3" height="15" fill="rgb(238,122,16)"/><text x="104.00" y="398.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="101" y="404" width="3" height="15" fill="rgb(226,224,4)"/><text x="104.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="101" y="420" width="3" height="15" fill="rgb(214,164,18)"/><text x="104.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="101" y="436" width="3" height="15" fill="rgb(237,69,32)"/><text x="104.00" y="446.50"></text></g><g><title>0x7f7e695a5c38 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="101" y="452" width="3" height="15" fill="rgb(252,83,0)"/><text x="104.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="104" y="340" width="3" height="15" fill="rgb(249,96,24)"/><text x="107.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="104" y="356" width="3" height="15" fill="rgb(248,204,37)"/><text x="107.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="104" y="372" width="3" height="15" fill="rgb(243,97,16)"/><text x="107.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="104" y="388" width="3" height="15" fill="rgb(212,51,11)"/><text x="107.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="107" y="452" width="3" height="15" fill="rgb(237,229,54)"/><text x="110.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="107" y="468" width="3" height="15" fill="rgb(207,142,22)"/><text x="110.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="107" y="484" width="3" height="15" fill="rgb(247,64,13)"/><text x="110.00" y="494.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="340" width="7" height="15" fill="rgb(235,157,8)"/><text x="110.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="356" width="7" height="15" fill="rgb(254,55,52)"/><text x="110.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="372" width="7" height="15" fill="rgb(218,190,27)"/><text x="110.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="388" width="7" height="15" fill="rgb(205,94,3)"/><text x="110.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="404" width="7" height="15" fill="rgb(252,199,24)"/><text x="110.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="420" width="7" height="15" fill="rgb(247,96,25)"/><text x="110.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="107" y="436" width="7" height="15" fill="rgb(217,98,41)"/><text x="110.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="110" y="452" width="4" height="15" fill="rgb(222,167,7)"/><text x="113.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="110" y="468" width="4" height="15" fill="rgb(226,57,50)"/><text x="113.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="110" y="484" width="4" height="15" fill="rgb(237,162,45)"/><text x="113.00" y="494.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="114" y="340" width="3" height="15" fill="rgb(208,113,44)"/><text x="117.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="114" y="356" width="3" height="15" fill="rgb(236,4,6)"/><text x="117.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::TraceFree (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="114" y="372" width="3" height="15" fill="rgb(236,56,14)"/><text x="117.00" y="382.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="117" y="340" width="3" height="15" fill="rgb(220,186,39)"/><text x="120.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="117" y="356" width="3" height="15" fill="rgb(208,80,35)"/><text x="120.00" y="366.50"></text></g><g><title>onnxruntime::TBroadcaster&lt;float, float&gt;::TBroadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="117" y="372" width="3" height="15" fill="rgb(232,120,18)"/><text x="120.00" y="382.50"></text></g><g><title>onnxruntime::Broadcaster::Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="117" y="388" width="3" height="15" fill="rgb(246,142,53)"/><text x="120.00" y="398.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (16 samples, 4.41%)</title><rect x="71" y="100" width="52" height="15" fill="rgb(236,149,5)"/><text x="74.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (16 samples, 4.41%)</title><rect x="71" y="116" width="52" height="15" fill="rgb(236,91,45)"/><text x="74.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (16 samples, 4.41%)</title><rect x="71" y="132" width="52" height="15" fill="rgb(225,223,12)"/><text x="74.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (16 samples, 4.41%)</title><rect x="71" y="148" width="52" height="15" fill="rgb(230,78,5)"/><text x="74.00" y="158.50">run (..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (15 samples, 4.13%)</title><rect x="75" y="164" width="48" height="15" fill="rgb(229,111,28)"/><text x="78.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (14 samples, 3.86%)</title><rect x="78" y="180" width="45" height="15" fill="rgb(250,33,31)"/><text x="81.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py) (14 samples, 3.86%)</title><rect x="78" y="196" width="45" height="15" fill="rgb(207,12,9)"/><text x="81.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.03%)</title><rect x="88" y="212" width="35" height="15" fill="rgb(236,33,11)"/><text x="91.00" y="222.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 3.03%)</title><rect x="88" y="228" width="35" height="15" fill="rgb(247,225,23)"/><text x="91.00" y="238.50">vo..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.75%)</title><rect x="91" y="244" width="32" height="15" fill="rgb(208,175,50)"/><text x="94.00" y="254.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 2.75%)</title><rect x="91" y="260" width="32" height="15" fill="rgb(252,9,19)"/><text x="94.00" y="270.50">on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.48%)</title><rect x="94" y="276" width="29" height="15" fill="rgb(249,127,13)"/><text x="97.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.93%)</title><rect x="101" y="292" width="22" height="15" fill="rgb(252,45,47)"/><text x="104.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.93%)</title><rect x="101" y="308" width="22" height="15" fill="rgb(209,41,28)"/><text x="104.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.93%)</title><rect x="101" y="324" width="22" height="15" fill="rgb(214,137,51)"/><text x="104.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="340" width="3" height="15" fill="rgb(251,102,6)"/><text x="123.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="356" width="3" height="15" fill="rgb(244,106,2)"/><text x="123.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="372" width="3" height="15" fill="rgb(219,212,27)"/><text x="123.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="388" width="3" height="15" fill="rgb(243,19,30)"/><text x="123.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="404" width="3" height="15" fill="rgb(230,49,19)"/><text x="123.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="420" width="3" height="15" fill="rgb(237,59,29)"/><text x="123.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="436" width="3" height="15" fill="rgb(219,194,2)"/><text x="123.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="452" width="3" height="15" fill="rgb(231,110,7)"/><text x="123.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="120" y="468" width="3" height="15" fill="rgb(227,66,19)"/><text x="123.00" y="478.50"></text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (17 samples, 4.68%)</title><rect x="71" y="68" width="56" height="15" fill="rgb(211,90,10)"/><text x="74.00" y="78.50">profi..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (17 samples, 4.68%)</title><rect x="71" y="84" width="56" height="15" fill="rgb(234,94,43)"/><text x="74.00" y="94.50">setup..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="123" y="100" width="4" height="15" fill="rgb(242,97,28)"/><text x="126.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="123" y="116" width="4" height="15" fill="rgb(251,141,36)"/><text x="126.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="123" y="132" width="4" height="15" fill="rgb(224,184,41)"/><text x="126.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="123" y="148" width="4" height="15" fill="rgb(216,3,47)"/><text x="126.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="123" y="164" width="4" height="15" fill="rgb(220,138,15)"/><text x="126.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="180" width="4" height="15" fill="rgb(224,161,30)"/><text x="126.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="196" width="4" height="15" fill="rgb(223,78,15)"/><text x="126.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="212" width="4" height="15" fill="rgb(228,209,26)"/><text x="126.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="123" y="228" width="4" height="15" fill="rgb(205,123,16)"/><text x="126.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="244" width="4" height="15" fill="rgb(227,103,30)"/><text x="126.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.28%)</title><rect x="123" y="260" width="4" height="15" fill="rgb(238,135,53)"/><text x="126.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="276" width="4" height="15" fill="rgb(209,199,43)"/><text x="126.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="292" width="4" height="15" fill="rgb(248,38,41)"/><text x="126.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="308" width="4" height="15" fill="rgb(242,153,18)"/><text x="126.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="123" y="324" width="4" height="15" fill="rgb(240,168,3)"/><text x="126.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="340" width="4" height="15" fill="rgb(236,142,13)"/><text x="126.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.28%)</title><rect x="123" y="356" width="4" height="15" fill="rgb(228,204,25)"/><text x="126.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="372" width="4" height="15" fill="rgb(215,85,32)"/><text x="126.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="388" width="4" height="15" fill="rgb(210,0,52)"/><text x="126.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="404" width="4" height="15" fill="rgb(210,108,31)"/><text x="126.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="123" y="420" width="4" height="15" fill="rgb(231,134,9)"/><text x="126.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="436" width="4" height="15" fill="rgb(251,118,45)"/><text x="126.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (1 samples, 0.28%)</title><rect x="123" y="452" width="4" height="15" fill="rgb(218,169,47)"/><text x="126.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="468" width="4" height="15" fill="rgb(235,127,26)"/><text x="126.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="484" width="4" height="15" fill="rgb(243,14,24)"/><text x="126.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="500" width="4" height="15" fill="rgb(236,130,1)"/><text x="126.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="516" width="4" height="15" fill="rgb(241,13,40)"/><text x="126.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="123" y="532" width="4" height="15" fill="rgb(224,218,26)"/><text x="126.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="123" y="548" width="4" height="15" fill="rgb(233,104,28)"/><text x="126.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="564" width="4" height="15" fill="rgb(233,156,8)"/><text x="126.00" y="574.50"></text></g><g><title>0x7f7e6982c995 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="580" width="4" height="15" fill="rgb(216,16,44)"/><text x="126.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="596" width="4" height="15" fill="rgb(221,65,26)"/><text x="126.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="612" width="4" height="15" fill="rgb(208,66,4)"/><text x="126.00" y="622.50"></text></g><g><title>0x7f7e6982c258 (libdl-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="628" width="4" height="15" fill="rgb(209,16,30)"/><text x="126.00" y="638.50"></text></g><g><title>0x7f7e69879d7a (ld-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="644" width="4" height="15" fill="rgb(253,74,28)"/><text x="126.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="660" width="4" height="15" fill="rgb(236,138,49)"/><text x="126.00" y="670.50"></text></g><g><title>0x7f7e6987a345 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="676" width="4" height="15" fill="rgb(237,215,12)"/><text x="126.00" y="686.50"></text></g><g><title>0x7f7e69872fec (ld-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="692" width="4" height="15" fill="rgb(232,123,3)"/><text x="126.00" y="702.50"></text></g><g><title>0x7f7e6987156b (ld-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="708" width="4" height="15" fill="rgb(223,212,52)"/><text x="126.00" y="718.50"></text></g><g><title>0x7f7e69870966 (ld-2.29.so) (1 samples, 0.28%)</title><rect x="123" y="724" width="4" height="15" fill="rgb(230,82,31)"/><text x="126.00" y="734.50"></text></g><g><title>0x7f7e695c5124 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="143" y="180" width="3" height="15" fill="rgb(244,219,11)"/><text x="146.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="198" y="228" width="3" height="15" fill="rgb(223,161,37)"/><text x="201.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.28%)</title><rect x="201" y="244" width="4" height="15" fill="rgb(215,30,21)"/><text x="204.00" y="254.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.55%)</title><rect x="201" y="228" width="7" height="15" fill="rgb(253,104,36)"/><text x="204.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.28%)</title><rect x="205" y="244" width="3" height="15" fill="rgb(248,31,31)"/><text x="208.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.28%)</title><rect x="205" y="260" width="3" height="15" fill="rgb(230,46,22)"/><text x="208.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="205" y="276" width="3" height="15" fill="rgb(235,5,42)"/><text x="208.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.28%)</title><rect x="205" y="292" width="3" height="15" fill="rgb(253,143,3)"/><text x="208.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="211" y="260" width="3" height="15" fill="rgb(241,155,49)"/><text x="214.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 0.83%)</title><rect x="211" y="244" width="10" height="15" fill="rgb(205,138,13)"/><text x="214.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (2 samples, 0.55%)</title><rect x="214" y="260" width="7" height="15" fill="rgb(219,97,33)"/><text x="217.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (2 samples, 0.55%)</title><rect x="214" y="276" width="7" height="15" fill="rgb(238,30,3)"/><text x="217.00" y="286.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.28%)</title><rect x="218" y="292" width="3" height="15" fill="rgb(213,91,42)"/><text x="221.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="221" y="244" width="3" height="15" fill="rgb(234,81,33)"/><text x="224.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="221" y="260" width="3" height="15" fill="rgb(224,50,16)"/><text x="224.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="221" y="276" width="3" height="15" fill="rgb(235,217,31)"/><text x="224.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (10 samples, 2.75%)</title><rect x="195" y="212" width="32" height="15" fill="rgb(227,165,4)"/><text x="198.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (6 samples, 1.65%)</title><rect x="208" y="228" width="19" height="15" fill="rgb(233,150,31)"/><text x="211.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.28%)</title><rect x="224" y="244" width="3" height="15" fill="rgb(217,0,48)"/><text x="227.00" y="254.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="224" y="260" width="3" height="15" fill="rgb(215,213,15)"/><text x="227.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="224" y="276" width="3" height="15" fill="rgb(232,219,52)"/><text x="227.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="224" y="292" width="3" height="15" fill="rgb(214,10,3)"/><text x="227.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.28%)</title><rect x="227" y="212" width="4" height="15" fill="rgb(223,14,4)"/><text x="230.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (1 samples, 0.28%)</title><rect x="227" y="228" width="4" height="15" fill="rgb(229,126,4)"/><text x="230.00" y="238.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.28%)</title><rect x="227" y="244" width="4" height="15" fill="rgb(245,165,30)"/><text x="230.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.28%)</title><rect x="227" y="260" width="4" height="15" fill="rgb(250,41,47)"/><text x="230.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="227" y="276" width="4" height="15" fill="rgb(233,165,5)"/><text x="230.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="227" y="292" width="4" height="15" fill="rgb(223,40,23)"/><text x="230.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="227" y="308" width="4" height="15" fill="rgb(246,59,53)"/><text x="230.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="227" y="324" width="4" height="15" fill="rgb(220,40,40)"/><text x="230.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="227" y="340" width="4" height="15" fill="rgb(242,142,49)"/><text x="230.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_concat.py) (1 samples, 0.28%)</title><rect x="231" y="212" width="3" height="15" fill="rgb(221,223,48)"/><text x="234.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (mlprodict/onnxrt/ops_cpu/op_concat.py) (1 samples, 0.28%)</title><rect x="231" y="228" width="3" height="15" fill="rgb(222,208,27)"/><text x="234.00" y="238.50"></text></g><g><title>_preprocess (mlprodict/onnxrt/ops_cpu/op_concat.py) (1 samples, 0.28%)</title><rect x="231" y="244" width="3" height="15" fill="rgb(209,94,3)"/><text x="234.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="234" y="228" width="3" height="15" fill="rgb(238,23,7)"/><text x="237.00" y="238.50"></text></g><g><title>_cumsum_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.28%)</title><rect x="240" y="244" width="4" height="15" fill="rgb(239,32,27)"/><text x="243.00" y="254.50"></text></g><g><title>PyArray_PyIntAsInt (conversion_utils.c) (1 samples, 0.28%)</title><rect x="250" y="372" width="3" height="15" fill="rgb(214,152,11)"/><text x="253.00" y="382.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.28%)</title><rect x="250" y="388" width="3" height="15" fill="rgb(248,194,47)"/><text x="253.00" y="398.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.28%)</title><rect x="250" y="404" width="3" height="15" fill="rgb(231,35,9)"/><text x="253.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py) (7 samples, 1.93%)</title><rect x="234" y="212" width="23" height="15" fill="rgb(232,187,45)"/><text x="237.00" y="222.50">_..</text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (6 samples, 1.65%)</title><rect x="237" y="228" width="20" height="15" fill="rgb(212,166,26)"/><text x="240.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.10%)</title><rect x="244" y="244" width="13" height="15" fill="rgb(246,50,48)"/><text x="247.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (4 samples, 1.10%)</title><rect x="244" y="260" width="13" height="15" fill="rgb(231,53,26)"/><text x="247.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.10%)</title><rect x="244" y="276" width="13" height="15" fill="rgb(231,89,52)"/><text x="247.00" y="286.50"></text></g><g><title>array_cumsum (methods.c) (4 samples, 1.10%)</title><rect x="244" y="292" width="13" height="15" fill="rgb(246,14,30)"/><text x="247.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c) (4 samples, 1.10%)</title><rect x="244" y="308" width="13" height="15" fill="rgb(232,167,50)"/><text x="247.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (4 samples, 1.10%)</title><rect x="244" y="324" width="13" height="15" fill="rgb(228,59,54)"/><text x="247.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (4 samples, 1.10%)</title><rect x="244" y="340" width="13" height="15" fill="rgb(219,218,52)"/><text x="247.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 1.10%)</title><rect x="244" y="356" width="13" height="15" fill="rgb(206,134,25)"/><text x="247.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (1 samples, 0.28%)</title><rect x="253" y="372" width="4" height="15" fill="rgb(221,17,41)"/><text x="256.00" y="382.50"></text></g><g><title>0x7f7e695a4998 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="279" y="276" width="4" height="15" fill="rgb(247,126,47)"/><text x="282.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.55%)</title><rect x="279" y="260" width="7" height="15" fill="rgb(206,65,21)"/><text x="282.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="283" y="276" width="3" height="15" fill="rgb(224,116,3)"/><text x="286.00" y="286.50"></text></g><g><title>0x7f7e6968374e (libc-2.29.so) (1 samples, 0.28%)</title><rect x="292" y="276" width="4" height="15" fill="rgb(247,166,12)"/><text x="295.00" y="286.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.28%)</title><rect x="299" y="308" width="3" height="15" fill="rgb(230,222,22)"/><text x="302.00" y="318.50"></text></g><g><title>array_iter_base_init (iterators.c) (1 samples, 0.28%)</title><rect x="302" y="372" width="3" height="15" fill="rgb(234,20,30)"/><text x="305.00" y="382.50"></text></g><g><title>0x7f7e695a5e90 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="305" y="388" width="4" height="15" fill="rgb(249,180,49)"/><text x="308.00" y="398.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c) (3 samples, 0.83%)</title><rect x="302" y="324" width="10" height="15" fill="rgb(248,229,4)"/><text x="305.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c) (3 samples, 0.83%)</title><rect x="302" y="340" width="10" height="15" fill="rgb(227,211,54)"/><text x="305.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c) (3 samples, 0.83%)</title><rect x="302" y="356" width="10" height="15" fill="rgb(246,228,39)"/><text x="305.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.55%)</title><rect x="305" y="372" width="7" height="15" fill="rgb(232,183,8)"/><text x="308.00" y="382.50"></text></g><g><title>0x7f7e695a66df (libc-2.29.so) (1 samples, 0.28%)</title><rect x="309" y="388" width="3" height="15" fill="rgb(205,133,41)"/><text x="312.00" y="398.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;) (16 samples, 4.41%)</title><rect x="263" y="228" width="52" height="15" fill="rgb(205,226,2)"/><text x="266.00" y="238.50">choos..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (13 samples, 3.58%)</title><rect x="273" y="244" width="42" height="15" fill="rgb(245,12,14)"/><text x="276.00" y="254.50">arr..</text></g><g><title>choose (numpy/core/fromnumeric.py) (9 samples, 2.48%)</title><rect x="286" y="260" width="29" height="15" fill="rgb(234,75,5)"/><text x="289.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 1.65%)</title><rect x="296" y="276" width="19" height="15" fill="rgb(248,161,24)"/><text x="299.00" y="286.50"></text></g><g><title>array_choose (methods.c) (6 samples, 1.65%)</title><rect x="296" y="292" width="19" height="15" fill="rgb(251,228,44)"/><text x="299.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c) (4 samples, 1.10%)</title><rect x="302" y="308" width="13" height="15" fill="rgb(241,43,3)"/><text x="305.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="312" y="324" width="3" height="15" fill="rgb(252,220,28)"/><text x="315.00" y="334.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.28%)</title><rect x="312" y="340" width="3" height="15" fill="rgb(212,217,24)"/><text x="315.00" y="350.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.28%)</title><rect x="312" y="356" width="3" height="15" fill="rgb(206,94,4)"/><text x="315.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (22 samples, 6.06%)</title><rect x="257" y="212" width="71" height="15" fill="rgb(222,198,9)"/><text x="260.00" y="222.50">_run (ml..</text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;) (4 samples, 1.10%)</title><rect x="315" y="228" width="13" height="15" fill="rgb(243,48,30)"/><text x="318.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.10%)</title><rect x="315" y="244" width="13" height="15" fill="rgb(207,134,34)"/><text x="318.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py) (3 samples, 0.83%)</title><rect x="318" y="260" width="10" height="15" fill="rgb(222,212,18)"/><text x="321.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.55%)</title><rect x="322" y="276" width="6" height="15" fill="rgb(218,203,14)"/><text x="325.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c) (1 samples, 0.28%)</title><rect x="325" y="292" width="3" height="15" fill="rgb(209,127,50)"/><text x="328.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c) (1 samples, 0.28%)</title><rect x="325" y="308" width="3" height="15" fill="rgb(211,154,1)"/><text x="328.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.28%)</title><rect x="325" y="324" width="3" height="15" fill="rgb(219,103,19)"/><text x="328.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="325" y="340" width="3" height="15" fill="rgb(221,44,12)"/><text x="328.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="325" y="356" width="3" height="15" fill="rgb(210,126,29)"/><text x="328.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.28%)</title><rect x="325" y="372" width="3" height="15" fill="rgb(221,170,1)"/><text x="328.00" y="382.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="325" y="388" width="3" height="15" fill="rgb(238,90,37)"/><text x="328.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (3 samples, 0.83%)</title><rect x="328" y="212" width="10" height="15" fill="rgb(244,119,9)"/><text x="331.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.55%)</title><rect x="331" y="228" width="7" height="15" fill="rgb(231,5,17)"/><text x="334.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.55%)</title><rect x="331" y="244" width="7" height="15" fill="rgb(222,178,8)"/><text x="334.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.55%)</title><rect x="331" y="260" width="7" height="15" fill="rgb(234,95,47)"/><text x="334.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.55%)</title><rect x="331" y="276" width="7" height="15" fill="rgb(220,158,7)"/><text x="334.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.28%)</title><rect x="335" y="292" width="3" height="15" fill="rgb(249,57,2)"/><text x="338.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.28%)</title><rect x="335" y="308" width="3" height="15" fill="rgb(238,54,18)"/><text x="338.00" y="318.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.28%)</title><rect x="338" y="244" width="3" height="15" fill="rgb(231,192,8)"/><text x="341.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.28%)</title><rect x="338" y="260" width="3" height="15" fill="rgb(221,91,45)"/><text x="341.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.28%)</title><rect x="338" y="276" width="3" height="15" fill="rgb(228,130,0)"/><text x="341.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.28%)</title><rect x="338" y="292" width="3" height="15" fill="rgb(251,135,29)"/><text x="341.00" y="302.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.55%)</title><rect x="344" y="260" width="7" height="15" fill="rgb(251,207,17)"/><text x="347.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="348" y="276" width="3" height="15" fill="rgb(230,70,30)"/><text x="351.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="354" y="292" width="3" height="15" fill="rgb(229,60,49)"/><text x="357.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="354" y="308" width="3" height="15" fill="rgb(209,133,22)"/><text x="357.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.55%)</title><rect x="354" y="276" width="7" height="15" fill="rgb(253,196,4)"/><text x="357.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="357" y="292" width="4" height="15" fill="rgb(243,220,36)"/><text x="360.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 2.20%)</title><rect x="338" y="212" width="26" height="15" fill="rgb(243,106,13)"/><text x="341.00" y="222.50">_..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (8 samples, 2.20%)</title><rect x="338" y="228" width="26" height="15" fill="rgb(240,35,17)"/><text x="341.00" y="238.50">_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (7 samples, 1.93%)</title><rect x="341" y="244" width="23" height="15" fill="rgb(220,214,36)"/><text x="344.00" y="254.50">t..</text></g><g><title>array_subscript (mapping.c) (4 samples, 1.10%)</title><rect x="351" y="260" width="13" height="15" fill="rgb(254,91,32)"/><text x="354.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.28%)</title><rect x="361" y="276" width="3" height="15" fill="rgb(244,216,41)"/><text x="364.00" y="286.50"></text></g><g><title>array_size_get (getset.c) (1 samples, 0.28%)</title><rect x="364" y="244" width="3" height="15" fill="rgb(226,216,13)"/><text x="367.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="364" y="260" width="3" height="15" fill="rgb(238,168,53)"/><text x="367.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.28%)</title><rect x="367" y="260" width="3" height="15" fill="rgb(222,211,17)"/><text x="370.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.28%)</title><rect x="367" y="276" width="3" height="15" fill="rgb(216,213,33)"/><text x="370.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.28%)</title><rect x="367" y="292" width="3" height="15" fill="rgb(251,14,43)"/><text x="370.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="367" y="308" width="3" height="15" fill="rgb(209,0,40)"/><text x="370.00" y="318.50"></text></g><g><title>0x7f7e69682151 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="367" y="324" width="3" height="15" fill="rgb(206,42,17)"/><text x="370.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="374" y="276" width="3" height="15" fill="rgb(224,143,2)"/><text x="377.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.28%)</title><rect x="374" y="292" width="3" height="15" fill="rgb(226,0,10)"/><text x="377.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.28%)</title><rect x="374" y="308" width="3" height="15" fill="rgb(210,29,10)"/><text x="377.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (5 samples, 1.38%)</title><rect x="364" y="228" width="16" height="15" fill="rgb(206,215,50)"/><text x="367.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.10%)</title><rect x="367" y="244" width="13" height="15" fill="rgb(218,72,39)"/><text x="370.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.83%)</title><rect x="370" y="260" width="10" height="15" fill="rgb(221,180,41)"/><text x="373.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="377" y="276" width="3" height="15" fill="rgb(210,87,28)"/><text x="380.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="377" y="292" width="3" height="15" fill="rgb(248,31,32)"/><text x="380.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(211,193,7)"/><text x="380.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.28%)</title><rect x="377" y="324" width="3" height="15" fill="rgb(225,24,48)"/><text x="380.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="377" y="340" width="3" height="15" fill="rgb(219,161,20)"/><text x="380.00" y="350.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="377" y="356" width="3" height="15" fill="rgb(209,124,32)"/><text x="380.00" y="366.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (2 samples, 0.55%)</title><rect x="387" y="276" width="6" height="15" fill="rgb(249,87,24)"/><text x="390.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.55%)</title><rect x="387" y="292" width="6" height="15" fill="rgb(214,184,19)"/><text x="390.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (2 samples, 0.55%)</title><rect x="387" y="308" width="6" height="15" fill="rgb(245,74,25)"/><text x="390.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.55%)</title><rect x="387" y="324" width="6" height="15" fill="rgb(212,21,41)"/><text x="390.00" y="334.50"></text></g><g><title>array_argmin (methods.c) (2 samples, 0.55%)</title><rect x="387" y="340" width="6" height="15" fill="rgb(215,25,31)"/><text x="390.00" y="350.50"></text></g><g><title>0x7f7e695ba782 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="390" y="356" width="3" height="15" fill="rgb(217,123,28)"/><text x="393.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (5 samples, 1.38%)</title><rect x="380" y="228" width="16" height="15" fill="rgb(205,30,53)"/><text x="383.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (5 samples, 1.38%)</title><rect x="380" y="244" width="16" height="15" fill="rgb(220,204,24)"/><text x="383.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (4 samples, 1.10%)</title><rect x="383" y="260" width="13" height="15" fill="rgb(215,221,53)"/><text x="386.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;) (1 samples, 0.28%)</title><rect x="393" y="276" width="3" height="15" fill="rgb(228,119,32)"/><text x="396.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="393" y="292" width="3" height="15" fill="rgb(210,194,26)"/><text x="396.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py) (1 samples, 0.28%)</title><rect x="393" y="308" width="3" height="15" fill="rgb(244,41,43)"/><text x="396.00" y="318.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (1 samples, 0.28%)</title><rect x="393" y="324" width="3" height="15" fill="rgb(234,92,49)"/><text x="396.00" y="334.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="393" y="340" width="3" height="15" fill="rgb(254,88,17)"/><text x="396.00" y="350.50"></text></g><g><title>0x7f7e2a03d54f (?) (1 samples, 0.28%)</title><rect x="396" y="244" width="4" height="15" fill="rgb(245,154,4)"/><text x="399.00" y="254.50"></text></g><g><title>0x7f7e2a04365e (?) (1 samples, 0.28%)</title><rect x="396" y="260" width="4" height="15" fill="rgb(242,137,21)"/><text x="399.00" y="270.50"></text></g><g><title>0x7f7e2a04350f (?) (1 samples, 0.28%)</title><rect x="396" y="276" width="4" height="15" fill="rgb(242,114,20)"/><text x="399.00" y="286.50"></text></g><g><title>0x7f7e2a049d6c (?) (1 samples, 0.28%)</title><rect x="396" y="292" width="4" height="15" fill="rgb(219,164,46)"/><text x="399.00" y="302.50"></text></g><g><title>0x7f7e335aaab9 (?) (1 samples, 0.28%)</title><rect x="396" y="308" width="4" height="15" fill="rgb(239,172,53)"/><text x="399.00" y="318.50"></text></g><g><title>0x7f7e335abea9 (?) (1 samples, 0.28%)</title><rect x="396" y="324" width="4" height="15" fill="rgb(232,25,50)"/><text x="399.00" y="334.50"></text></g><g><title>0x7f7e335abea0 (libgomp.so.1.0.0) (4 samples, 1.10%)</title><rect x="400" y="484" width="13" height="15" fill="rgb(221,99,27)"/><text x="403.00" y="494.50"></text></g><g><title>0x7f7e335abea9 (libgomp.so.1.0.0) (18 samples, 4.96%)</title><rect x="413" y="484" width="58" height="15" fill="rgb(251,120,28)"/><text x="416.00" y="494.50">0x7f7e..</text></g><g><title>0x7f7e335abeab (libgomp.so.1.0.0) (12 samples, 3.31%)</title><rect x="471" y="484" width="39" height="15" fill="rgb(240,150,7)"/><text x="474.00" y="494.50">0x7..</text></g><g><title>0x7f7e335aaab9 (libgomp.so.1.0.0) (48 samples, 13.22%)</title><rect x="400" y="468" width="156" height="15" fill="rgb(211,12,54)"/><text x="403.00" y="478.50">0x7f7e335aaab9 (libg..</text></g><g><title>0x7f7e335abead (libgomp.so.1.0.0) (14 samples, 3.86%)</title><rect x="510" y="484" width="46" height="15" fill="rgb(232,136,36)"/><text x="513.00" y="494.50">0x7f..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (133 samples, 36.64%)</title><rect x="127" y="100" width="432" height="15" fill="rgb(252,29,50)"/><text x="130.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimat..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 36.36%)</title><rect x="130" y="116" width="429" height="15" fill="rgb(245,103,8)"/><text x="133.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 36.36%)</title><rect x="130" y="132" width="429" height="15" fill="rgb(247,55,45)"/><text x="133.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (131 samples, 36.09%)</title><rect x="133" y="148" width="426" height="15" fill="rgb(223,53,13)"/><text x="136.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (130 samples, 35.81%)</title><rect x="136" y="164" width="423" height="15" fill="rgb(237,5,44)"/><text x="139.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (127 samples, 34.99%)</title><rect x="146" y="180" width="413" height="15" fill="rgb(245,185,11)"/><text x="149.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (113 samples, 31.13%)</title><rect x="192" y="196" width="367" height="15" fill="rgb(244,117,8)"/><text x="195.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (60 samples, 16.53%)</title><rect x="364" y="212" width="195" height="15" fill="rgb(235,26,25)"/><text x="367.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (50 samples, 13.77%)</title><rect x="396" y="228" width="163" height="15" fill="rgb(233,199,12)"/><text x="399.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (49 samples, 13.50%)</title><rect x="400" y="244" width="159" height="15" fill="rgb(215,116,10)"/><text x="403.00" y="254.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (49 samples, 13.50%)</title><rect x="400" y="260" width="159" height="15" fill="rgb(227,46,5)"/><text x="403.00" y="270.50">void pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (49 samples, 13.50%)</title><rect x="400" y="276" width="159" height="15" fill="rgb(246,190,15)"/><text x="403.00" y="286.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (49 samples, 13.50%)</title><rect x="400" y="292" width="159" height="15" fill="rgb(239,15,21)"/><text x="403.00" y="302.50">pybind11::detail::ar..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (49 samples, 13.50%)</title><rect x="400" y="308" width="159" height="15" fill="rgb(212,170,29)"/><text x="403.00" y="318.50">pybind11::detail::ar..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (49 samples, 13.50%)</title><rect x="400" y="324" width="159" height="15" fill="rgb(242,107,43)"/><text x="403.00" y="334.50">pybind11::cpp_functi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (49 samples, 13.50%)</title><rect x="400" y="340" width="159" height="15" fill="rgb(225,52,48)"/><text x="403.00" y="350.50">pybind11::array_t&lt;fl..</text></g><g><title>pybind11::array::~array (numpy.h) (49 samples, 13.50%)</title><rect x="400" y="356" width="159" height="15" fill="rgb(241,44,13)"/><text x="403.00" y="366.50">pybind11::array::~ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (49 samples, 13.50%)</title><rect x="400" y="372" width="159" height="15" fill="rgb(247,156,1)"/><text x="403.00" y="382.50">pybind11::buffer::~b..</text></g><g><title>pybind11::object::~object (pytypes.h) (49 samples, 13.50%)</title><rect x="400" y="388" width="159" height="15" fill="rgb(249,31,9)"/><text x="403.00" y="398.50">pybind11::object::~o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (49 samples, 13.50%)</title><rect x="400" y="404" width="159" height="15" fill="rgb(227,149,30)"/><text x="403.00" y="414.50">pybind11::handle::de..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (49 samples, 13.50%)</title><rect x="400" y="420" width="159" height="15" fill="rgb(223,169,1)"/><text x="403.00" y="430.50">RuntimeTreeEnsembleR..</text></g><g><title>pybind11::array::size (numpy.h) (49 samples, 13.50%)</title><rect x="400" y="436" width="159" height="15" fill="rgb(237,60,10)"/><text x="403.00" y="446.50">pybind11::array::siz..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (49 samples, 13.50%)</title><rect x="400" y="452" width="159" height="15" fill="rgb(237,50,51)"/><text x="403.00" y="462.50">std::accumulate&lt;long..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="556" y="468" width="3" height="15" fill="rgb(235,40,41)"/><text x="559.00" y="478.50"></text></g><g><title>0x7f7e335a9daa (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="556" y="484" width="3" height="15" fill="rgb(220,197,13)"/><text x="559.00" y="494.50"></text></g><g><title>0x7f7e335abd6d (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="556" y="500" width="3" height="15" fill="rgb(232,22,28)"/><text x="559.00" y="510.50"></text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (134 samples, 36.91%)</title><rect x="127" y="68" width="435" height="15" fill="rgb(205,143,0)"/><text x="130.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_es..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (134 samples, 36.91%)</title><rect x="127" y="84" width="435" height="15" fill="rgb(245,37,53)"/><text x="130.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_e..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="559" y="100" width="3" height="15" fill="rgb(231,0,1)"/><text x="562.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="559" y="116" width="3" height="15" fill="rgb(216,49,33)"/><text x="562.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="559" y="132" width="3" height="15" fill="rgb(218,155,3)"/><text x="562.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="559" y="148" width="3" height="15" fill="rgb(229,54,23)"/><text x="562.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="559" y="164" width="3" height="15" fill="rgb(218,149,9)"/><text x="562.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.28%)</title><rect x="559" y="180" width="3" height="15" fill="rgb(229,18,19)"/><text x="562.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.28%)</title><rect x="559" y="196" width="3" height="15" fill="rgb(239,204,37)"/><text x="562.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="212" width="3" height="15" fill="rgb(205,139,26)"/><text x="562.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="228" width="3" height="15" fill="rgb(235,197,49)"/><text x="562.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="244" width="3" height="15" fill="rgb(245,220,48)"/><text x="562.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="559" y="260" width="3" height="15" fill="rgb(248,163,44)"/><text x="562.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="276" width="3" height="15" fill="rgb(236,135,38)"/><text x="562.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.28%)</title><rect x="559" y="292" width="3" height="15" fill="rgb(238,106,22)"/><text x="562.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="308" width="3" height="15" fill="rgb(212,56,45)"/><text x="562.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="324" width="3" height="15" fill="rgb(226,190,1)"/><text x="562.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="340" width="3" height="15" fill="rgb(230,39,28)"/><text x="562.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="559" y="356" width="3" height="15" fill="rgb(227,214,14)"/><text x="562.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="372" width="3" height="15" fill="rgb(249,89,21)"/><text x="562.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.28%)</title><rect x="559" y="388" width="3" height="15" fill="rgb(213,177,13)"/><text x="562.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="404" width="3" height="15" fill="rgb(230,39,18)"/><text x="562.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="420" width="3" height="15" fill="rgb(232,207,7)"/><text x="562.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="436" width="3" height="15" fill="rgb(233,169,5)"/><text x="562.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="559" y="452" width="3" height="15" fill="rgb(224,201,35)"/><text x="562.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="559" y="468" width="3" height="15" fill="rgb(243,0,2)"/><text x="562.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.28%)</title><rect x="559" y="484" width="3" height="15" fill="rgb(250,64,14)"/><text x="562.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.28%)</title><rect x="559" y="500" width="3" height="15" fill="rgb(210,21,12)"/><text x="562.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="559" y="516" width="3" height="15" fill="rgb(207,203,14)"/><text x="562.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="559" y="532" width="3" height="15" fill="rgb(229,126,12)"/><text x="562.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="559" y="548" width="3" height="15" fill="rgb(229,221,19)"/><text x="562.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="559" y="564" width="3" height="15" fill="rgb(223,216,39)"/><text x="562.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="559" y="580" width="3" height="15" fill="rgb(243,173,28)"/><text x="562.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.28%)</title><rect x="559" y="596" width="3" height="15" fill="rgb(254,64,4)"/><text x="562.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="559" y="612" width="3" height="15" fill="rgb(206,213,47)"/><text x="562.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="559" y="628" width="3" height="15" fill="rgb(247,5,16)"/><text x="562.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.28%)</title><rect x="559" y="644" width="3" height="15" fill="rgb(254,114,29)"/><text x="562.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py) (1 samples, 0.28%)</title><rect x="559" y="660" width="3" height="15" fill="rgb(234,162,37)"/><text x="562.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="676" width="3" height="15" fill="rgb(207,98,5)"/><text x="562.00" y="686.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="692" width="3" height="15" fill="rgb(223,138,11)"/><text x="562.00" y="702.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="708" width="3" height="15" fill="rgb(235,49,47)"/><text x="562.00" y="718.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="724" width="3" height="15" fill="rgb(240,55,8)"/><text x="562.00" y="734.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="740" width="3" height="15" fill="rgb(253,61,41)"/><text x="562.00" y="750.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="756" width="3" height="15" fill="rgb(222,46,16)"/><text x="562.00" y="766.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.28%)</title><rect x="559" y="772" width="3" height="15" fill="rgb(215,166,33)"/><text x="562.00" y="782.50"></text></g><g><title>0x7f7e42fda62c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="588" y="292" width="3" height="15" fill="rgb(232,194,32)"/><text x="591.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="591" y="340" width="4" height="15" fill="rgb(214,99,37)"/><text x="594.00" y="350.50"></text></g><g><title>0x7f7e42fdad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.65%)</title><rect x="588" y="276" width="20" height="15" fill="rgb(213,148,28)"/><text x="591.00" y="286.50"></text></g><g><title>0x7f7e42fda666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.38%)</title><rect x="591" y="292" width="17" height="15" fill="rgb(238,176,13)"/><text x="594.00" y="302.50"></text></g><g><title>0x7f7e42fd02fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.38%)</title><rect x="591" y="308" width="17" height="15" fill="rgb(244,90,49)"/><text x="594.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 1.38%)</title><rect x="591" y="324" width="17" height="15" fill="rgb(221,68,21)"/><text x="594.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.10%)</title><rect x="595" y="340" width="13" height="15" fill="rgb(232,191,43)"/><text x="598.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.55%)</title><rect x="601" y="356" width="7" height="15" fill="rgb(243,201,29)"/><text x="604.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.28%)</title><rect x="604" y="372" width="4" height="15" fill="rgb(225,83,36)"/><text x="607.00" y="382.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.28%)</title><rect x="604" y="388" width="4" height="15" fill="rgb(221,71,36)"/><text x="607.00" y="398.50"></text></g><g><title>0x7f7e42fcdf4c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="608" y="292" width="3" height="15" fill="rgb(233,40,12)"/><text x="611.00" y="302.50"></text></g><g><title>0x7f7e42ff62df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.20%)</title><rect x="588" y="260" width="26" height="15" fill="rgb(215,0,45)"/><text x="591.00" y="270.50">0..</text></g><g><title>0x7f7e42fdae72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="608" y="276" width="6" height="15" fill="rgb(220,160,43)"/><text x="611.00" y="286.50"></text></g><g><title>0x7f7e42fce2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="611" y="292" width="3" height="15" fill="rgb(242,14,11)"/><text x="614.00" y="302.50"></text></g><g><title>0x7f7e42fcda73 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="611" y="308" width="3" height="15" fill="rgb(239,229,19)"/><text x="614.00" y="318.50"></text></g><g><title>0x7f7e42ff6592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="614" y="260" width="7" height="15" fill="rgb(239,89,52)"/><text x="617.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.55%)</title><rect x="614" y="276" width="7" height="15" fill="rgb(213,33,34)"/><text x="617.00" y="286.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.28%)</title><rect x="617" y="292" width="4" height="15" fill="rgb(244,36,24)"/><text x="620.00" y="302.50"></text></g><g><title>0x7f7e42ff6644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="621" y="260" width="3" height="15" fill="rgb(207,30,15)"/><text x="624.00" y="270.50"></text></g><g><title>0x7f7e42ff68c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="624" y="260" width="3" height="15" fill="rgb(239,149,32)"/><text x="627.00" y="270.50"></text></g><g><title>0x7f7e42fe7fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.58%)</title><rect x="588" y="228" width="42" height="15" fill="rgb(254,202,36)"/><text x="591.00" y="238.50">0x7..</text></g><g><title>0x7f7e42ff7405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 3.58%)</title><rect x="588" y="244" width="42" height="15" fill="rgb(234,44,11)"/><text x="591.00" y="254.50">0x7..</text></g><g><title>0x7f7e42ff6c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="627" y="260" width="3" height="15" fill="rgb(247,218,34)"/><text x="630.00" y="270.50"></text></g><g><title>0x7f7e42fce529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="627" y="276" width="3" height="15" fill="rgb(242,92,13)"/><text x="630.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.28%)</title><rect x="627" y="292" width="3" height="15" fill="rgb(225,140,51)"/><text x="630.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.28%)</title><rect x="627" y="308" width="3" height="15" fill="rgb(205,16,25)"/><text x="630.00" y="318.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.28%)</title><rect x="630" y="260" width="4" height="15" fill="rgb(229,119,15)"/><text x="633.00" y="270.50"></text></g><g><title>0x7f7e42fe805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="630" y="228" width="7" height="15" fill="rgb(208,24,37)"/><text x="633.00" y="238.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.55%)</title><rect x="630" y="244" width="7" height="15" fill="rgb(252,18,39)"/><text x="633.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.28%)</title><rect x="634" y="260" width="3" height="15" fill="rgb(238,172,9)"/><text x="637.00" y="270.50"></text></g><g><title>0x7f7e69682d2f (libc-2.29.so) (1 samples, 0.28%)</title><rect x="634" y="276" width="3" height="15" fill="rgb(246,162,33)"/><text x="637.00" y="286.50"></text></g><g><title>0x7f7e42fe813a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="637" y="228" width="3" height="15" fill="rgb(207,166,1)"/><text x="640.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="637" y="244" width="3" height="15" fill="rgb(235,217,6)"/><text x="640.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="637" y="260" width="3" height="15" fill="rgb(238,141,40)"/><text x="640.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="637" y="276" width="3" height="15" fill="rgb(239,170,48)"/><text x="640.00" y="286.50"></text></g><g><title>0x7f7e42fe814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.10%)</title><rect x="640" y="228" width="13" height="15" fill="rgb(225,106,27)"/><text x="643.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (4 samples, 1.10%)</title><rect x="640" y="244" width="13" height="15" fill="rgb(222,37,13)"/><text x="643.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.83%)</title><rect x="643" y="260" width="10" height="15" fill="rgb(212,102,21)"/><text x="646.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.83%)</title><rect x="643" y="276" width="10" height="15" fill="rgb(238,48,35)"/><text x="646.00" y="286.50"></text></g><g><title>0x7f7e42fe8d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (21 samples, 5.79%)</title><rect x="588" y="212" width="68" height="15" fill="rgb(231,145,8)"/><text x="591.00" y="222.50">0x7f7e4..</text></g><g><title>0x7f7e42fe855e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="653" y="228" width="3" height="15" fill="rgb(252,21,0)"/><text x="656.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.83%)</title><rect x="718" y="244" width="10" height="15" fill="rgb(233,174,43)"/><text x="721.00" y="254.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.55%)</title><rect x="728" y="244" width="6" height="15" fill="rgb(252,173,1)"/><text x="731.00" y="254.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.28%)</title><rect x="734" y="244" width="4" height="15" fill="rgb(238,113,40)"/><text x="737.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.55%)</title><rect x="760" y="260" width="7" height="15" fill="rgb(211,221,35)"/><text x="763.00" y="270.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.55%)</title><rect x="767" y="260" width="6" height="15" fill="rgb(234,199,38)"/><text x="770.00" y="270.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="773" y="260" width="10" height="15" fill="rgb(225,140,51)"/><text x="776.00" y="270.50"></text></g><g><title>0x7f7e695b56d0 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="780" y="276" width="3" height="15" fill="rgb(241,53,44)"/><text x="783.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (15 samples, 4.13%)</title><rect x="738" y="244" width="48" height="15" fill="rgb(230,22,5)"/><text x="741.00" y="254.50">_ass..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.28%)</title><rect x="783" y="260" width="3" height="15" fill="rgb(217,81,11)"/><text x="786.00" y="270.50"></text></g><g><title>0x7f7e695bab89 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="809" y="260" width="3" height="15" fill="rgb(232,1,52)"/><text x="812.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="812" y="260" width="4" height="15" fill="rgb(223,30,38)"/><text x="815.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 3.31%)</title><rect x="786" y="244" width="39" height="15" fill="rgb(211,163,19)"/><text x="789.00" y="254.50">_nu..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.83%)</title><rect x="816" y="260" width="9" height="15" fill="rgb(228,216,22)"/><text x="819.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.83%)</title><rect x="816" y="276" width="9" height="15" fill="rgb(235,157,53)"/><text x="819.00" y="286.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 1.10%)</title><rect x="825" y="244" width="13" height="15" fill="rgb(247,15,28)"/><text x="828.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.55%)</title><rect x="832" y="260" width="6" height="15" fill="rgb(246,87,27)"/><text x="835.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="835" y="276" width="3" height="15" fill="rgb(215,60,23)"/><text x="838.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (62 samples, 17.08%)</title><rect x="656" y="228" width="202" height="15" fill="rgb(206,12,8)"/><text x="659.00" y="238.50">check_array (sklearn/utils..</text></g><g><title>simplefilter (warnings.py) (6 samples, 1.65%)</title><rect x="838" y="244" width="20" height="15" fill="rgb(222,112,11)"/><text x="841.00" y="254.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 1.65%)</title><rect x="838" y="260" width="20" height="15" fill="rgb(222,29,19)"/><text x="841.00" y="270.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (63 samples, 17.36%)</title><rect x="656" y="212" width="205" height="15" fill="rgb(207,133,4)"/><text x="659.00" y="222.50">_validate_X_predict (sklea..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.28%)</title><rect x="858" y="228" width="3" height="15" fill="rgb(241,45,36)"/><text x="861.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.28%)</title><rect x="861" y="212" width="3" height="15" fill="rgb(233,15,50)"/><text x="864.00" y="222.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.28%)</title><rect x="861" y="228" width="3" height="15" fill="rgb(214,199,29)"/><text x="864.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="861" y="244" width="3" height="15" fill="rgb(244,146,25)"/><text x="864.00" y="254.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.83%)</title><rect x="897" y="244" width="10" height="15" fill="rgb(235,164,49)"/><text x="900.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 4.13%)</title><rect x="864" y="212" width="49" height="15" fill="rgb(242,120,6)"/><text x="867.00" y="222.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 3.58%)</title><rect x="871" y="228" width="42" height="15" fill="rgb(253,145,31)"/><text x="874.00" y="238.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.55%)</title><rect x="907" y="244" width="6" height="15" fill="rgb(213,159,45)"/><text x="910.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (104 samples, 28.65%)</title><rect x="578" y="180" width="338" height="15" fill="rgb(226,158,27)"/><text x="581.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting..</text></g><g><title>predict (sklearn/tree/_classes.py) (103 samples, 28.37%)</title><rect x="582" y="196" width="334" height="15" fill="rgb(230,34,24)"/><text x="585.00" y="206.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.28%)</title><rect x="913" y="212" width="3" height="15" fill="rgb(216,205,46)"/><text x="916.00" y="222.50"></text></g><g><title>array_item_asarray (mapping.c) (1 samples, 0.28%)</title><rect x="920" y="260" width="3" height="15" fill="rgb(243,182,48)"/><text x="923.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.28%)</title><rect x="920" y="276" width="3" height="15" fill="rgb(238,223,19)"/><text x="923.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="920" y="292" width="3" height="15" fill="rgb(222,224,19)"/><text x="923.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="920" y="308" width="3" height="15" fill="rgb(230,49,42)"/><text x="923.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="920" y="324" width="3" height="15" fill="rgb(236,132,1)"/><text x="923.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.28%)</title><rect x="920" y="340" width="3" height="15" fill="rgb(229,9,32)"/><text x="923.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 1.10%)</title><rect x="916" y="180" width="13" height="15" fill="rgb(247,187,47)"/><text x="919.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (3 samples, 0.83%)</title><rect x="920" y="196" width="9" height="15" fill="rgb(239,105,14)"/><text x="923.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c) (3 samples, 0.83%)</title><rect x="920" y="212" width="9" height="15" fill="rgb(222,127,13)"/><text x="923.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (3 samples, 0.83%)</title><rect x="920" y="228" width="9" height="15" fill="rgb(212,144,2)"/><text x="923.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c) (3 samples, 0.83%)</title><rect x="920" y="244" width="9" height="15" fill="rgb(217,86,28)"/><text x="923.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c) (2 samples, 0.55%)</title><rect x="923" y="260" width="6" height="15" fill="rgb(231,68,37)"/><text x="926.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.55%)</title><rect x="923" y="276" width="6" height="15" fill="rgb(220,175,29)"/><text x="926.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.28%)</title><rect x="926" y="292" width="3" height="15" fill="rgb(213,195,54)"/><text x="929.00" y="302.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="926" y="308" width="3" height="15" fill="rgb(220,221,24)"/><text x="929.00" y="318.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.65%)</title><rect x="929" y="180" width="20" height="15" fill="rgb(207,72,25)"/><text x="932.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.55%)</title><rect x="942" y="196" width="7" height="15" fill="rgb(230,77,4)"/><text x="945.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.28%)</title><rect x="946" y="212" width="3" height="15" fill="rgb(223,224,32)"/><text x="949.00" y="222.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (3 samples, 0.83%)</title><rect x="949" y="212" width="10" height="15" fill="rgb(247,108,54)"/><text x="952.00" y="222.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (4 samples, 1.10%)</title><rect x="949" y="180" width="13" height="15" fill="rgb(248,208,29)"/><text x="952.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.10%)</title><rect x="949" y="196" width="13" height="15" fill="rgb(215,81,25)"/><text x="952.00" y="206.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="959" y="212" width="3" height="15" fill="rgb(205,143,2)"/><text x="962.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="962" y="212" width="3" height="15" fill="rgb(219,125,10)"/><text x="965.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="962" y="228" width="3" height="15" fill="rgb(248,87,51)"/><text x="965.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="962" y="244" width="3" height="15" fill="rgb(242,137,4)"/><text x="965.00" y="254.50"></text></g><g><title>array_arange (multiarraymodule.c) (4 samples, 1.10%)</title><rect x="962" y="180" width="13" height="15" fill="rgb(213,158,28)"/><text x="965.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (4 samples, 1.10%)</title><rect x="962" y="196" width="13" height="15" fill="rgb(219,48,14)"/><text x="965.00" y="206.50"></text></g><g><title>_calc_length (ctors.c) (3 samples, 0.83%)</title><rect x="965" y="212" width="10" height="15" fill="rgb(218,58,24)"/><text x="968.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="975" y="180" width="3" height="15" fill="rgb(207,114,4)"/><text x="978.00" y="190.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.28%)</title><rect x="975" y="196" width="3" height="15" fill="rgb(218,90,6)"/><text x="978.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.28%)</title><rect x="975" y="212" width="3" height="15" fill="rgb(248,147,23)"/><text x="978.00" y="222.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.28%)</title><rect x="978" y="180" width="3" height="15" fill="rgb(219,61,18)"/><text x="981.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="978" y="196" width="3" height="15" fill="rgb(214,121,39)"/><text x="981.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="978" y="212" width="3" height="15" fill="rgb(216,181,13)"/><text x="981.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="978" y="228" width="3" height="15" fill="rgb(213,135,33)"/><text x="981.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="978" y="244" width="3" height="15" fill="rgb(229,180,7)"/><text x="981.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="978" y="260" width="3" height="15" fill="rgb(252,167,1)"/><text x="981.00" y="270.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.28%)</title><rect x="978" y="276" width="3" height="15" fill="rgb(234,216,3)"/><text x="981.00" y="286.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="981" y="228" width="4" height="15" fill="rgb(245,186,7)"/><text x="984.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="981" y="244" width="4" height="15" fill="rgb(241,21,18)"/><text x="984.00" y="254.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.28%)</title><rect x="985" y="276" width="3" height="15" fill="rgb(249,160,42)"/><text x="988.00" y="286.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.28%)</title><rect x="985" y="292" width="3" height="15" fill="rgb(215,144,4)"/><text x="988.00" y="302.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.28%)</title><rect x="985" y="308" width="3" height="15" fill="rgb(226,156,21)"/><text x="988.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.55%)</title><rect x="988" y="276" width="6" height="15" fill="rgb(235,157,11)"/><text x="991.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c) (5 samples, 1.38%)</title><rect x="981" y="180" width="17" height="15" fill="rgb(231,165,48)"/><text x="984.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.38%)</title><rect x="981" y="196" width="17" height="15" fill="rgb(232,142,53)"/><text x="984.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.38%)</title><rect x="981" y="212" width="17" height="15" fill="rgb(249,74,25)"/><text x="984.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.10%)</title><rect x="985" y="228" width="13" height="15" fill="rgb(221,128,21)"/><text x="988.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.10%)</title><rect x="985" y="244" width="13" height="15" fill="rgb(249,147,1)"/><text x="988.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.10%)</title><rect x="985" y="260" width="13" height="15" fill="rgb(222,84,5)"/><text x="988.00" y="270.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.28%)</title><rect x="994" y="276" width="4" height="15" fill="rgb(241,212,5)"/><text x="997.00" y="286.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (1 samples, 0.28%)</title><rect x="1001" y="196" width="3" height="15" fill="rgb(214,224,44)"/><text x="1004.00" y="206.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="1001" y="212" width="3" height="15" fill="rgb(246,225,32)"/><text x="1004.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="1001" y="228" width="3" height="15" fill="rgb(220,49,13)"/><text x="1004.00" y="238.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.28%)</title><rect x="1004" y="212" width="3" height="15" fill="rgb(226,97,18)"/><text x="1007.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.55%)</title><rect x="1004" y="196" width="7" height="15" fill="rgb(226,110,4)"/><text x="1007.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1007" y="212" width="4" height="15" fill="rgb(254,150,35)"/><text x="1010.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1007" y="228" width="4" height="15" fill="rgb(225,84,3)"/><text x="1010.00" y="238.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1007" y="244" width="4" height="15" fill="rgb(227,212,14)"/><text x="1010.00" y="254.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1007" y="260" width="4" height="15" fill="rgb(233,95,13)"/><text x="1010.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="1007" y="276" width="4" height="15" fill="rgb(223,3,40)"/><text x="1010.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="1007" y="292" width="4" height="15" fill="rgb(237,124,45)"/><text x="1010.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1007" y="308" width="4" height="15" fill="rgb(252,201,1)"/><text x="1010.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1007" y="324" width="4" height="15" fill="rgb(207,62,22)"/><text x="1010.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 1.38%)</title><rect x="998" y="180" width="16" height="15" fill="rgb(229,105,10)"/><text x="1001.00" y="190.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.28%)</title><rect x="1011" y="196" width="3" height="15" fill="rgb(212,143,51)"/><text x="1014.00" y="206.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (3 samples, 0.83%)</title><rect x="1017" y="196" width="10" height="15" fill="rgb(207,135,33)"/><text x="1020.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.83%)</title><rect x="1017" y="212" width="10" height="15" fill="rgb(237,34,52)"/><text x="1020.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (3 samples, 0.83%)</title><rect x="1017" y="228" width="10" height="15" fill="rgb(252,210,21)"/><text x="1020.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (2 samples, 0.55%)</title><rect x="1020" y="244" width="7" height="15" fill="rgb(254,16,28)"/><text x="1023.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1020" y="260" width="7" height="15" fill="rgb(216,185,15)"/><text x="1023.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1020" y="276" width="7" height="15" fill="rgb(248,78,44)"/><text x="1023.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1020" y="292" width="7" height="15" fill="rgb(252,57,10)"/><text x="1023.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.55%)</title><rect x="1020" y="308" width="7" height="15" fill="rgb(243,174,13)"/><text x="1023.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.55%)</title><rect x="1020" y="324" width="7" height="15" fill="rgb(208,93,20)"/><text x="1023.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.28%)</title><rect x="1024" y="340" width="3" height="15" fill="rgb(209,213,3)"/><text x="1027.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.28%)</title><rect x="1024" y="356" width="3" height="15" fill="rgb(219,89,39)"/><text x="1027.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.28%)</title><rect x="1027" y="356" width="3" height="15" fill="rgb(234,15,9)"/><text x="1030.00" y="366.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (2 samples, 0.55%)</title><rect x="1027" y="196" width="6" height="15" fill="rgb(254,174,30)"/><text x="1030.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.55%)</title><rect x="1027" y="212" width="6" height="15" fill="rgb(229,105,12)"/><text x="1030.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py) (2 samples, 0.55%)</title><rect x="1027" y="228" width="6" height="15" fill="rgb(242,183,21)"/><text x="1030.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (2 samples, 0.55%)</title><rect x="1027" y="244" width="6" height="15" fill="rgb(239,74,11)"/><text x="1030.00" y="254.50"></text></g><g><title>array_cumsum (methods.c) (2 samples, 0.55%)</title><rect x="1027" y="260" width="6" height="15" fill="rgb(240,222,19)"/><text x="1030.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c) (2 samples, 0.55%)</title><rect x="1027" y="276" width="6" height="15" fill="rgb(234,227,5)"/><text x="1030.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (2 samples, 0.55%)</title><rect x="1027" y="292" width="6" height="15" fill="rgb(211,225,23)"/><text x="1030.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1027" y="308" width="6" height="15" fill="rgb(214,130,1)"/><text x="1030.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1027" y="324" width="6" height="15" fill="rgb(244,78,53)"/><text x="1030.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1027" y="340" width="6" height="15" fill="rgb(228,209,48)"/><text x="1030.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1030" y="356" width="3" height="15" fill="rgb(252,217,2)"/><text x="1033.00" y="366.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1030" y="372" width="3" height="15" fill="rgb(232,160,14)"/><text x="1033.00" y="382.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.83%)</title><rect x="1046" y="244" width="10" height="15" fill="rgb(232,143,38)"/><text x="1049.00" y="254.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.28%)</title><rect x="1053" y="260" width="3" height="15" fill="rgb(244,14,12)"/><text x="1056.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.28%)</title><rect x="1066" y="356" width="3" height="15" fill="rgb(232,51,35)"/><text x="1069.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c) (1 samples, 0.28%)</title><rect x="1066" y="372" width="3" height="15" fill="rgb(216,128,28)"/><text x="1069.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c) (1 samples, 0.28%)</title><rect x="1066" y="388" width="3" height="15" fill="rgb(247,48,41)"/><text x="1069.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="1066" y="404" width="3" height="15" fill="rgb(235,98,6)"/><text x="1069.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="1066" y="420" width="3" height="15" fill="rgb(207,175,18)"/><text x="1069.00" y="430.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;) (6 samples, 1.65%)</title><rect x="1056" y="244" width="20" height="15" fill="rgb(239,228,51)"/><text x="1059.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.65%)</title><rect x="1056" y="260" width="20" height="15" fill="rgb(225,108,51)"/><text x="1059.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py) (6 samples, 1.65%)</title><rect x="1056" y="276" width="20" height="15" fill="rgb(207,222,5)"/><text x="1059.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 1.38%)</title><rect x="1059" y="292" width="17" height="15" fill="rgb(234,103,47)"/><text x="1062.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.83%)</title><rect x="1066" y="308" width="10" height="15" fill="rgb(213,157,20)"/><text x="1069.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 0.83%)</title><rect x="1066" y="324" width="10" height="15" fill="rgb(251,132,46)"/><text x="1069.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 0.83%)</title><rect x="1066" y="340" width="10" height="15" fill="rgb(230,161,54)"/><text x="1069.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1069" y="356" width="7" height="15" fill="rgb(229,162,42)"/><text x="1072.00" y="366.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="1072" y="372" width="4" height="15" fill="rgb(215,163,9)"/><text x="1075.00" y="382.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="1072" y="388" width="4" height="15" fill="rgb(224,24,45)"/><text x="1075.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.28%)</title><rect x="1076" y="292" width="3" height="15" fill="rgb(230,42,46)"/><text x="1079.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="1076" y="308" width="3" height="15" fill="rgb(216,8,25)"/><text x="1079.00" y="318.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="1076" y="324" width="3" height="15" fill="rgb(228,185,21)"/><text x="1079.00" y="334.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (2 samples, 0.55%)</title><rect x="1076" y="244" width="6" height="15" fill="rgb(252,24,44)"/><text x="1079.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.55%)</title><rect x="1076" y="260" width="6" height="15" fill="rgb(247,45,9)"/><text x="1079.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c) (2 samples, 0.55%)</title><rect x="1076" y="276" width="6" height="15" fill="rgb(229,87,17)"/><text x="1079.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="1079" y="292" width="3" height="15" fill="rgb(248,129,13)"/><text x="1082.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="1079" y="308" width="3" height="15" fill="rgb(226,125,34)"/><text x="1082.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="1079" y="324" width="3" height="15" fill="rgb(223,190,51)"/><text x="1082.00" y="334.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1082" y="324" width="3" height="15" fill="rgb(220,14,6)"/><text x="1085.00" y="334.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="1082" y="340" width="3" height="15" fill="rgb(239,225,21)"/><text x="1085.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.55%)</title><rect x="1082" y="292" width="7" height="15" fill="rgb(222,152,1)"/><text x="1085.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.55%)</title><rect x="1082" y="308" width="7" height="15" fill="rgb(233,83,12)"/><text x="1085.00" y="318.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.28%)</title><rect x="1085" y="324" width="4" height="15" fill="rgb(222,207,27)"/><text x="1088.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.83%)</title><rect x="1082" y="276" width="10" height="15" fill="rgb(241,75,49)"/><text x="1085.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1089" y="292" width="3" height="15" fill="rgb(246,205,49)"/><text x="1092.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src) (1 samples, 0.28%)</title><rect x="1089" y="308" width="3" height="15" fill="rgb(209,146,22)"/><text x="1092.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (5 samples, 1.38%)</title><rect x="1082" y="244" width="16" height="15" fill="rgb(254,113,22)"/><text x="1085.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (5 samples, 1.38%)</title><rect x="1082" y="260" width="16" height="15" fill="rgb(235,17,14)"/><text x="1085.00" y="270.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.55%)</title><rect x="1092" y="276" width="6" height="15" fill="rgb(251,149,19)"/><text x="1095.00" y="286.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (1 samples, 0.28%)</title><rect x="1105" y="260" width="3" height="15" fill="rgb(243,55,53)"/><text x="1108.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.28%)</title><rect x="1105" y="276" width="3" height="15" fill="rgb(211,139,40)"/><text x="1108.00" y="286.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py) (2 samples, 0.55%)</title><rect x="1108" y="260" width="7" height="15" fill="rgb(251,64,23)"/><text x="1111.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (2 samples, 0.55%)</title><rect x="1108" y="276" width="7" height="15" fill="rgb(217,190,29)"/><text x="1111.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py) (2 samples, 0.55%)</title><rect x="1108" y="292" width="7" height="15" fill="rgb(226,183,39)"/><text x="1111.00" y="302.50"></text></g><g><title>array_add (number.c) (1 samples, 0.28%)</title><rect x="1115" y="260" width="3" height="15" fill="rgb(254,74,2)"/><text x="1118.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1115" y="276" width="3" height="15" fill="rgb(230,103,7)"/><text x="1118.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1115" y="292" width="3" height="15" fill="rgb(252,142,26)"/><text x="1118.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="1115" y="308" width="3" height="15" fill="rgb(242,214,45)"/><text x="1118.00" y="318.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.28%)</title><rect x="1115" y="324" width="3" height="15" fill="rgb(233,163,28)"/><text x="1118.00" y="334.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.28%)</title><rect x="1115" y="340" width="3" height="15" fill="rgb(245,25,1)"/><text x="1118.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1118" y="292" width="3" height="15" fill="rgb(234,108,8)"/><text x="1121.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1118" y="308" width="3" height="15" fill="rgb(234,190,43)"/><text x="1121.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.28%)</title><rect x="1118" y="324" width="3" height="15" fill="rgb(241,167,11)"/><text x="1121.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.28%)</title><rect x="1118" y="340" width="3" height="15" fill="rgb(213,39,31)"/><text x="1121.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (1 samples, 0.28%)</title><rect x="1118" y="356" width="3" height="15" fill="rgb(216,185,49)"/><text x="1121.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="1118" y="372" width="3" height="15" fill="rgb(215,169,2)"/><text x="1121.00" y="382.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (28 samples, 7.71%)</title><rect x="1033" y="196" width="91" height="15" fill="rgb(230,60,43)"/><text x="1036.00" y="206.50">isclose (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (27 samples, 7.44%)</title><rect x="1037" y="212" width="87" height="15" fill="rgb(247,131,5)"/><text x="1040.00" y="222.50">array_impl..</text></g><g><title>isclose (numpy/core/numeric.py) (27 samples, 7.44%)</title><rect x="1037" y="228" width="87" height="15" fill="rgb(251,108,19)"/><text x="1040.00" y="238.50">isclose (n..</text></g><g><title>within_tol (numpy/core/numeric.py) (8 samples, 2.20%)</title><rect x="1098" y="244" width="26" height="15" fill="rgb(237,198,30)"/><text x="1101.00" y="254.50">w..</text></g><g><title>array_multiply (number.c) (2 samples, 0.55%)</title><rect x="1118" y="260" width="6" height="15" fill="rgb(215,158,23)"/><text x="1121.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1118" y="276" width="6" height="15" fill="rgb(253,56,34)"/><text x="1121.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="1121" y="292" width="3" height="15" fill="rgb(241,11,29)"/><text x="1124.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py) (1 samples, 0.28%)</title><rect x="1137" y="260" width="4" height="15" fill="rgb(247,28,10)"/><text x="1140.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.28%)</title><rect x="1141" y="276" width="3" height="15" fill="rgb(227,69,42)"/><text x="1144.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.28%)</title><rect x="1141" y="292" width="3" height="15" fill="rgb(235,120,51)"/><text x="1144.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.28%)</title><rect x="1141" y="308" width="3" height="15" fill="rgb(217,117,52)"/><text x="1144.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.28%)</title><rect x="1141" y="324" width="3" height="15" fill="rgb(253,37,13)"/><text x="1144.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.28%)</title><rect x="1141" y="340" width="3" height="15" fill="rgb(237,94,12)"/><text x="1144.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (177 samples, 48.76%)</title><rect x="575" y="164" width="575" height="15" fill="rgb(253,186,20)"/><text x="578.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (42 samples, 11.57%)</title><rect x="1014" y="180" width="136" height="15" fill="rgb(232,33,46)"/><text x="1017.00" y="190.50">stable_cumsum (sk..</text></g><g><title>sum (&lt;__array_function__ internals&gt;) (8 samples, 2.20%)</title><rect x="1124" y="196" width="26" height="15" fill="rgb(223,118,3)"/><text x="1127.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.65%)</title><rect x="1131" y="212" width="19" height="15" fill="rgb(237,67,17)"/><text x="1134.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py) (6 samples, 1.65%)</title><rect x="1131" y="228" width="19" height="15" fill="rgb(230,115,54)"/><text x="1134.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 1.38%)</title><rect x="1134" y="244" width="16" height="15" fill="rgb(207,30,8)"/><text x="1137.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.83%)</title><rect x="1141" y="260" width="9" height="15" fill="rgb(254,177,21)"/><text x="1144.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1144" y="276" width="6" height="15" fill="rgb(212,222,33)"/><text x="1147.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.55%)</title><rect x="1144" y="292" width="6" height="15" fill="rgb(209,167,12)"/><text x="1147.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.55%)</title><rect x="1144" y="308" width="6" height="15" fill="rgb(240,38,53)"/><text x="1147.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (2 samples, 0.55%)</title><rect x="1144" y="324" width="6" height="15" fill="rgb(251,164,6)"/><text x="1147.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.55%)</title><rect x="1144" y="340" width="6" height="15" fill="rgb(214,165,17)"/><text x="1147.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (2 samples, 0.55%)</title><rect x="1144" y="356" width="6" height="15" fill="rgb(209,32,14)"/><text x="1147.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="1147" y="372" width="3" height="15" fill="rgb(227,214,22)"/><text x="1150.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="1147" y="388" width="3" height="15" fill="rgb(217,191,39)"/><text x="1150.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="1147" y="404" width="3" height="15" fill="rgb(234,132,51)"/><text x="1150.00" y="414.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.28%)</title><rect x="1160" y="196" width="3" height="15" fill="rgb(250,173,30)"/><text x="1163.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.28%)</title><rect x="1163" y="196" width="4" height="15" fill="rgb(214,114,13)"/><text x="1166.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.28%)</title><rect x="1167" y="196" width="3" height="15" fill="rgb(244,56,10)"/><text x="1170.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="1167" y="212" width="3" height="15" fill="rgb(236,65,37)"/><text x="1170.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 1.10%)</title><rect x="1170" y="196" width="13" height="15" fill="rgb(240,47,32)"/><text x="1173.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (2 samples, 0.55%)</title><rect x="1176" y="212" width="7" height="15" fill="rgb(228,108,4)"/><text x="1179.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.28%)</title><rect x="1180" y="228" width="3" height="15" fill="rgb(243,22,2)"/><text x="1183.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.28%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(243,195,2)"/><text x="1186.00" y="206.50"></text></g><g><title>all (363 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(219,6,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (363 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(224,53,46)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (193 samples, 53.17%)</title><rect x="562" y="68" width="628" height="15" fill="rgb(243,225,47)"/><text x="565.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (193 samples, 53.17%)</title><rect x="562" y="84" width="628" height="15" fill="rgb(254,129,26)"/><text x="565.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.p..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py) (193 samples, 53.17%)</title><rect x="562" y="100" width="628" height="15" fill="rgb(210,17,24)"/><text x="565.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (191 samples, 52.62%)</title><rect x="569" y="116" width="621" height="15" fill="rgb(246,137,49)"/><text x="572.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (191 samples, 52.62%)</title><rect x="569" y="132" width="621" height="15" fill="rgb(233,64,7)"/><text x="572.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (191 samples, 52.62%)</title><rect x="569" y="148" width="621" height="15" fill="rgb(252,27,36)"/><text x="572.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py)</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py) (12 samples, 3.31%)</title><rect x="1150" y="164" width="40" height="15" fill="rgb(241,111,44)"/><text x="1153.00" y="174.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py) (12 samples, 3.31%)</title><rect x="1150" y="180" width="40" height="15" fill="rgb(233,164,17)"/><text x="1153.00" y="190.50">che..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.28%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(244,32,14)"/><text x="1189.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.28%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(245,83,45)"/><text x="1189.00" y="222.50"></text></g></g></svg>