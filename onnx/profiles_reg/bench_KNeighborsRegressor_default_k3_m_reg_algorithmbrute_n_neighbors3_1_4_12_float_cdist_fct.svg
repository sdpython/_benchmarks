<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1942" onload="init(evt)" viewBox="0 0 1200 1942" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1942" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1925.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1925.00"> </text><g id="frames"><g><title>0x7f449bd96b1c (libc-2.29.so) (2 samples, 0.90%)</title><rect x="10" y="52" width="10" height="15" fill="rgb(208,80,48)"/><text x="13.00" y="62.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="292" width="6" height="15" fill="rgb(211,20,7)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="308" width="6" height="15" fill="rgb(234,194,0)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="324" width="6" height="15" fill="rgb(232,153,43)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="340" width="6" height="15" fill="rgb(224,49,41)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="20" y="356" width="6" height="15" fill="rgb(228,86,43)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="372" width="6" height="15" fill="rgb(217,7,35)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (1 samples, 0.45%)</title><rect x="20" y="388" width="6" height="15" fill="rgb(244,30,15)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="404" width="6" height="15" fill="rgb(227,200,2)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="420" width="6" height="15" fill="rgb(235,18,50)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="436" width="6" height="15" fill="rgb(225,83,28)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="20" y="452" width="6" height="15" fill="rgb(251,79,41)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="468" width="6" height="15" fill="rgb(245,29,6)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (1 samples, 0.45%)</title><rect x="20" y="484" width="6" height="15" fill="rgb(213,152,6)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="500" width="6" height="15" fill="rgb(222,3,36)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="516" width="6" height="15" fill="rgb(216,143,8)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="532" width="6" height="15" fill="rgb(225,120,9)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="20" y="548" width="6" height="15" fill="rgb(229,201,33)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="564" width="6" height="15" fill="rgb(219,101,54)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (1 samples, 0.45%)</title><rect x="20" y="580" width="6" height="15" fill="rgb(252,189,38)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="596" width="6" height="15" fill="rgb(234,13,0)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="612" width="6" height="15" fill="rgb(207,28,52)"/><text x="23.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="628" width="6" height="15" fill="rgb(250,225,50)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="644" width="6" height="15" fill="rgb(252,136,13)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="660" width="6" height="15" fill="rgb(234,21,2)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="676" width="6" height="15" fill="rgb(213,84,6)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="20" y="692" width="6" height="15" fill="rgb(244,16,3)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="708" width="6" height="15" fill="rgb(224,13,41)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="724" width="6" height="15" fill="rgb(214,146,21)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="740" width="6" height="15" fill="rgb(232,129,49)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="756" width="6" height="15" fill="rgb(245,217,19)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="772" width="6" height="15" fill="rgb(212,104,16)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="20" y="788" width="6" height="15" fill="rgb(209,9,49)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="20" y="804" width="6" height="15" fill="rgb(239,105,17)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="820" width="6" height="15" fill="rgb(208,218,17)"/><text x="23.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="836" width="6" height="15" fill="rgb(219,207,11)"/><text x="23.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="852" width="6" height="15" fill="rgb(227,217,8)"/><text x="23.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(207,41,52)"/><text x="23.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(246,167,47)"/><text x="23.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(247,188,47)"/><text x="23.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(248,23,54)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="628" width="5" height="15" fill="rgb(254,163,6)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="644" width="5" height="15" fill="rgb(215,168,13)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="660" width="5" height="15" fill="rgb(214,137,24)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="676" width="5" height="15" fill="rgb(232,41,7)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="26" y="692" width="5" height="15" fill="rgb(220,207,38)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="708" width="5" height="15" fill="rgb(243,31,53)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (distutils/__init__.py) (1 samples, 0.45%)</title><rect x="26" y="724" width="5" height="15" fill="rgb(253,152,11)"/><text x="29.00" y="734.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="740" width="5" height="15" fill="rgb(214,60,47)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="756" width="5" height="15" fill="rgb(233,103,0)"/><text x="29.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="772" width="5" height="15" fill="rgb(212,104,29)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="788" width="5" height="15" fill="rgb(223,95,50)"/><text x="29.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="804" width="5" height="15" fill="rgb(217,143,47)"/><text x="29.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="26" y="820" width="5" height="15" fill="rgb(212,153,9)"/><text x="29.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="26" y="836" width="5" height="15" fill="rgb(242,62,23)"/><text x="29.00" y="846.50"></text></g><g><title>&lt;module&gt; (distutils/dist.py) (1 samples, 0.45%)</title><rect x="26" y="852" width="5" height="15" fill="rgb(209,93,20)"/><text x="29.00" y="862.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="26" y="868" width="5" height="15" fill="rgb(205,229,20)"/><text x="29.00" y="878.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="26" y="884" width="5" height="15" fill="rgb(218,43,22)"/><text x="29.00" y="894.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="26" y="900" width="5" height="15" fill="rgb(223,47,26)"/><text x="29.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(252,99,21)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(207,184,2)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(219,179,10)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(236,213,36)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(252,63,53)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(209,171,50)"/><text x="34.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(221,99,43)"/><text x="34.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(208,187,32)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(225,55,9)"/><text x="34.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(242,190,49)"/><text x="34.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(228,72,41)"/><text x="34.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(236,22,8)"/><text x="34.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(238,165,12)"/><text x="34.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.45%)</title><rect x="31" y="1124" width="5" height="15" fill="rgb(251,119,26)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1140" width="5" height="15" fill="rgb(248,93,28)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1156" width="5" height="15" fill="rgb(217,198,11)"/><text x="34.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1172" width="5" height="15" fill="rgb(209,195,41)"/><text x="34.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1188" width="5" height="15" fill="rgb(253,203,40)"/><text x="34.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1204" width="5" height="15" fill="rgb(240,181,33)"/><text x="34.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.45%)</title><rect x="31" y="1220" width="5" height="15" fill="rgb(218,6,52)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1236" width="5" height="15" fill="rgb(208,87,34)"/><text x="34.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1252" width="5" height="15" fill="rgb(239,99,5)"/><text x="34.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1268" width="5" height="15" fill="rgb(234,209,20)"/><text x="34.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1284" width="5" height="15" fill="rgb(234,3,43)"/><text x="34.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1300" width="5" height="15" fill="rgb(249,60,29)"/><text x="34.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.45%)</title><rect x="31" y="1316" width="5" height="15" fill="rgb(242,42,53)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1332" width="5" height="15" fill="rgb(219,63,37)"/><text x="34.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1348" width="5" height="15" fill="rgb(207,23,50)"/><text x="34.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1364" width="5" height="15" fill="rgb(233,59,13)"/><text x="34.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1380" width="5" height="15" fill="rgb(235,129,23)"/><text x="34.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1396" width="5" height="15" fill="rgb(237,40,17)"/><text x="34.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.45%)</title><rect x="31" y="1412" width="5" height="15" fill="rgb(214,84,32)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1428" width="5" height="15" fill="rgb(232,150,41)"/><text x="34.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1444" width="5" height="15" fill="rgb(215,228,0)"/><text x="34.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1460" width="5" height="15" fill="rgb(205,89,48)"/><text x="34.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1476" width="5" height="15" fill="rgb(209,54,35)"/><text x="34.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1492" width="5" height="15" fill="rgb(219,161,21)"/><text x="34.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.45%)</title><rect x="31" y="1508" width="5" height="15" fill="rgb(214,129,54)"/><text x="34.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1524" width="5" height="15" fill="rgb(226,54,16)"/><text x="34.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1540" width="5" height="15" fill="rgb(208,113,4)"/><text x="34.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1556" width="5" height="15" fill="rgb(238,206,26)"/><text x="34.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1572" width="5" height="15" fill="rgb(219,156,29)"/><text x="34.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1588" width="5" height="15" fill="rgb(228,83,12)"/><text x="34.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/__init__.py) (1 samples, 0.45%)</title><rect x="31" y="1604" width="5" height="15" fill="rgb(227,135,29)"/><text x="34.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1620" width="5" height="15" fill="rgb(211,73,34)"/><text x="34.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1636" width="5" height="15" fill="rgb(225,71,11)"/><text x="34.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1652" width="5" height="15" fill="rgb(236,193,46)"/><text x="34.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1668" width="5" height="15" fill="rgb(245,26,17)"/><text x="34.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1684" width="5" height="15" fill="rgb(233,104,18)"/><text x="34.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/isolve/iterative.py) (1 samples, 0.45%)</title><rect x="31" y="1700" width="5" height="15" fill="rgb(224,0,21)"/><text x="34.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1716" width="5" height="15" fill="rgb(254,61,26)"/><text x="34.00" y="1726.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1732" width="5" height="15" fill="rgb(238,228,38)"/><text x="34.00" y="1742.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1748" width="5" height="15" fill="rgb(211,75,17)"/><text x="34.00" y="1758.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1764" width="5" height="15" fill="rgb(245,76,7)"/><text x="34.00" y="1774.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1780" width="5" height="15" fill="rgb(236,19,44)"/><text x="34.00" y="1790.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/_threadsafety.py) (1 samples, 0.45%)</title><rect x="31" y="1796" width="5" height="15" fill="rgb(228,227,14)"/><text x="34.00" y="1806.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1812" width="5" height="15" fill="rgb(211,44,30)"/><text x="34.00" y="1822.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1828" width="5" height="15" fill="rgb(236,226,34)"/><text x="34.00" y="1838.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1844" width="5" height="15" fill="rgb(226,135,6)"/><text x="34.00" y="1854.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="31" y="1860" width="5" height="15" fill="rgb(227,67,40)"/><text x="34.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="31" y="1876" width="5" height="15" fill="rgb(234,206,41)"/><text x="34.00" y="1886.50"></text></g><g><title>&lt;module&gt; (scipy/_lib/decorator.py) (1 samples, 0.45%)</title><rect x="31" y="1892" width="5" height="15" fill="rgb(218,167,40)"/><text x="34.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="26" y="500" width="16" height="15" fill="rgb(240,188,32)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="26" y="516" width="16" height="15" fill="rgb(209,128,34)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="26" y="532" width="16" height="15" fill="rgb(248,130,0)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="26" y="548" width="16" height="15" fill="rgb(238,6,26)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="26" y="564" width="16" height="15" fill="rgb(230,159,24)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 1.36%)</title><rect x="26" y="580" width="16" height="15" fill="rgb(230,17,27)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="26" y="596" width="16" height="15" fill="rgb(236,200,28)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="26" y="612" width="16" height="15" fill="rgb(219,209,20)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="628" width="11" height="15" fill="rgb(242,152,32)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="31" y="644" width="11" height="15" fill="rgb(237,119,49)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="660" width="11" height="15" fill="rgb(247,194,47)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.90%)</title><rect x="31" y="676" width="11" height="15" fill="rgb(206,228,10)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="692" width="11" height="15" fill="rgb(231,87,37)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="708" width="11" height="15" fill="rgb(228,84,2)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="724" width="11" height="15" fill="rgb(240,13,41)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="31" y="740" width="11" height="15" fill="rgb(248,1,48)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="756" width="11" height="15" fill="rgb(235,39,25)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.90%)</title><rect x="31" y="772" width="11" height="15" fill="rgb(213,202,31)"/><text x="34.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="788" width="11" height="15" fill="rgb(243,61,1)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="804" width="11" height="15" fill="rgb(230,79,21)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="820" width="11" height="15" fill="rgb(248,36,10)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="836" width="11" height="15" fill="rgb(231,175,36)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="852" width="11" height="15" fill="rgb(246,178,36)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="31" y="868" width="11" height="15" fill="rgb(212,123,22)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="31" y="884" width="11" height="15" fill="rgb(212,202,45)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.90%)</title><rect x="31" y="900" width="11" height="15" fill="rgb(206,96,44)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="916" width="6" height="15" fill="rgb(242,106,11)"/><text x="39.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="932" width="6" height="15" fill="rgb(241,175,11)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="948" width="6" height="15" fill="rgb(220,138,8)"/><text x="39.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="964" width="6" height="15" fill="rgb(254,132,17)"/><text x="39.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="980" width="6" height="15" fill="rgb(253,36,13)"/><text x="39.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="36" y="996" width="6" height="15" fill="rgb(226,201,17)"/><text x="39.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="36" y="1012" width="6" height="15" fill="rgb(229,84,11)"/><text x="39.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.45%)</title><rect x="36" y="1028" width="6" height="15" fill="rgb(219,61,53)"/><text x="39.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="36" y="1044" width="6" height="15" fill="rgb(223,175,27)"/><text x="39.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="36" y="1060" width="6" height="15" fill="rgb(224,114,37)"/><text x="39.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.45%)</title><rect x="36" y="1076" width="6" height="15" fill="rgb(206,48,28)"/><text x="39.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.45%)</title><rect x="36" y="1092" width="6" height="15" fill="rgb(235,59,24)"/><text x="39.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="20" y="196" width="27" height="15" fill="rgb(215,56,14)"/><text x="23.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="20" y="212" width="27" height="15" fill="rgb(239,52,44)"/><text x="23.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="20" y="228" width="27" height="15" fill="rgb(244,4,30)"/><text x="23.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="20" y="244" width="27" height="15" fill="rgb(249,159,30)"/><text x="23.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.26%)</title><rect x="20" y="260" width="27" height="15" fill="rgb(253,8,37)"/><text x="23.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.26%)</title><rect x="20" y="276" width="27" height="15" fill="rgb(229,150,0)"/><text x="23.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.81%)</title><rect x="26" y="292" width="21" height="15" fill="rgb(216,170,42)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="308" width="21" height="15" fill="rgb(237,64,31)"/><text x="29.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="324" width="21" height="15" fill="rgb(253,104,41)"/><text x="29.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="340" width="21" height="15" fill="rgb(208,75,17)"/><text x="29.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="26" y="356" width="21" height="15" fill="rgb(221,70,15)"/><text x="29.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="372" width="21" height="15" fill="rgb(243,115,34)"/><text x="29.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.81%)</title><rect x="26" y="388" width="21" height="15" fill="rgb(233,142,43)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="404" width="21" height="15" fill="rgb(216,223,31)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="420" width="21" height="15" fill="rgb(252,215,45)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="436" width="21" height="15" fill="rgb(229,138,32)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="26" y="452" width="21" height="15" fill="rgb(249,159,13)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="26" y="468" width="21" height="15" fill="rgb(235,86,23)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.81%)</title><rect x="26" y="484" width="21" height="15" fill="rgb(235,5,5)"/><text x="29.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="500" width="5" height="15" fill="rgb(223,117,20)"/><text x="45.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="516" width="5" height="15" fill="rgb(242,60,41)"/><text x="45.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="532" width="5" height="15" fill="rgb(229,23,48)"/><text x="45.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="548" width="5" height="15" fill="rgb(235,156,22)"/><text x="45.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="564" width="5" height="15" fill="rgb(225,97,51)"/><text x="45.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="580" width="5" height="15" fill="rgb(251,36,38)"/><text x="45.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="596" width="5" height="15" fill="rgb(230,9,8)"/><text x="45.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.45%)</title><rect x="42" y="612" width="5" height="15" fill="rgb(218,217,47)"/><text x="45.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="628" width="5" height="15" fill="rgb(249,169,24)"/><text x="45.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="644" width="5" height="15" fill="rgb(233,135,48)"/><text x="45.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="660" width="5" height="15" fill="rgb(206,6,36)"/><text x="45.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="676" width="5" height="15" fill="rgb(223,55,19)"/><text x="45.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="692" width="5" height="15" fill="rgb(248,63,6)"/><text x="45.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.45%)</title><rect x="42" y="708" width="5" height="15" fill="rgb(207,224,33)"/><text x="45.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="724" width="5" height="15" fill="rgb(223,173,36)"/><text x="45.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="740" width="5" height="15" fill="rgb(234,190,2)"/><text x="45.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="756" width="5" height="15" fill="rgb(217,217,27)"/><text x="45.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="772" width="5" height="15" fill="rgb(231,20,47)"/><text x="45.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="788" width="5" height="15" fill="rgb(222,59,44)"/><text x="45.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="42" y="804" width="5" height="15" fill="rgb(212,55,44)"/><text x="45.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="820" width="5" height="15" fill="rgb(242,153,25)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="836" width="5" height="15" fill="rgb(252,23,25)"/><text x="45.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="852" width="5" height="15" fill="rgb(216,194,39)"/><text x="45.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="868" width="5" height="15" fill="rgb(212,215,38)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="884" width="5" height="15" fill="rgb(245,47,46)"/><text x="45.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="42" y="900" width="5" height="15" fill="rgb(207,128,10)"/><text x="45.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(211,35,51)"/><text x="45.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(232,30,29)"/><text x="45.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(246,162,12)"/><text x="45.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(221,111,13)"/><text x="45.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="980" width="5" height="15" fill="rgb(211,135,33)"/><text x="45.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.45%)</title><rect x="42" y="996" width="5" height="15" fill="rgb(244,91,33)"/><text x="45.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1012" width="5" height="15" fill="rgb(229,108,44)"/><text x="45.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(248,205,41)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(224,55,43)"/><text x="45.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(250,184,38)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(232,77,1)"/><text x="45.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(245,138,45)"/><text x="45.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(236,73,15)"/><text x="45.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1124" width="5" height="15" fill="rgb(252,100,15)"/><text x="45.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.45%)</title><rect x="42" y="1140" width="5" height="15" fill="rgb(252,43,42)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1156" width="5" height="15" fill="rgb(220,179,33)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1172" width="5" height="15" fill="rgb(243,65,42)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1188" width="5" height="15" fill="rgb(223,110,25)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1204" width="5" height="15" fill="rgb(247,72,38)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1220" width="5" height="15" fill="rgb(238,6,32)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py) (1 samples, 0.45%)</title><rect x="42" y="1236" width="5" height="15" fill="rgb(205,8,29)"/><text x="45.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1252" width="5" height="15" fill="rgb(230,40,48)"/><text x="45.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1268" width="5" height="15" fill="rgb(250,183,24)"/><text x="45.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1284" width="5" height="15" fill="rgb(214,154,10)"/><text x="45.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1300" width="5" height="15" fill="rgb(218,117,52)"/><text x="45.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1316" width="5" height="15" fill="rgb(249,33,42)"/><text x="45.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py) (1 samples, 0.45%)</title><rect x="42" y="1332" width="5" height="15" fill="rgb(207,111,6)"/><text x="45.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1348" width="5" height="15" fill="rgb(245,213,31)"/><text x="45.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1364" width="5" height="15" fill="rgb(211,174,30)"/><text x="45.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1380" width="5" height="15" fill="rgb(218,172,45)"/><text x="45.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1396" width="5" height="15" fill="rgb(252,40,21)"/><text x="45.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1412" width="5" height="15" fill="rgb(219,59,29)"/><text x="45.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py) (1 samples, 0.45%)</title><rect x="42" y="1428" width="5" height="15" fill="rgb(224,74,13)"/><text x="45.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1444" width="5" height="15" fill="rgb(253,118,34)"/><text x="45.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1460" width="5" height="15" fill="rgb(245,67,18)"/><text x="45.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="42" y="1476" width="5" height="15" fill="rgb(236,26,40)"/><text x="45.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1492" width="5" height="15" fill="rgb(239,33,21)"/><text x="45.00" y="1502.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1508" width="5" height="15" fill="rgb(211,199,35)"/><text x="45.00" y="1518.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="42" y="1524" width="5" height="15" fill="rgb(245,117,2)"/><text x="45.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="436" width="5" height="15" fill="rgb(233,101,25)"/><text x="50.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="452" width="5" height="15" fill="rgb(250,70,23)"/><text x="50.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="468" width="5" height="15" fill="rgb(254,67,14)"/><text x="50.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="484" width="5" height="15" fill="rgb(209,165,40)"/><text x="50.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="500" width="5" height="15" fill="rgb(233,140,17)"/><text x="50.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="516" width="5" height="15" fill="rgb(220,18,35)"/><text x="50.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="532" width="5" height="15" fill="rgb(227,7,1)"/><text x="50.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="548" width="5" height="15" fill="rgb(209,103,5)"/><text x="50.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="564" width="5" height="15" fill="rgb(224,225,6)"/><text x="50.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="580" width="5" height="15" fill="rgb(242,175,18)"/><text x="50.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="596" width="5" height="15" fill="rgb(223,180,44)"/><text x="50.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="612" width="5" height="15" fill="rgb(217,6,39)"/><text x="50.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="628" width="5" height="15" fill="rgb(229,228,49)"/><text x="50.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="644" width="5" height="15" fill="rgb(215,144,52)"/><text x="50.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="660" width="5" height="15" fill="rgb(228,180,5)"/><text x="50.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.45%)</title><rect x="47" y="676" width="5" height="15" fill="rgb(210,58,40)"/><text x="50.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="692" width="5" height="15" fill="rgb(210,83,35)"/><text x="50.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="708" width="5" height="15" fill="rgb(247,96,2)"/><text x="50.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="724" width="5" height="15" fill="rgb(238,203,40)"/><text x="50.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="740" width="5" height="15" fill="rgb(212,45,26)"/><text x="50.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="756" width="5" height="15" fill="rgb(229,104,19)"/><text x="50.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="772" width="5" height="15" fill="rgb(240,152,7)"/><text x="50.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="788" width="5" height="15" fill="rgb(223,10,38)"/><text x="50.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="804" width="5" height="15" fill="rgb(242,29,12)"/><text x="50.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="820" width="5" height="15" fill="rgb(207,26,48)"/><text x="50.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="836" width="5" height="15" fill="rgb(207,137,53)"/><text x="50.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="852" width="5" height="15" fill="rgb(232,157,47)"/><text x="50.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.45%)</title><rect x="47" y="868" width="5" height="15" fill="rgb(228,68,10)"/><text x="50.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="884" width="5" height="15" fill="rgb(212,59,19)"/><text x="50.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="900" width="5" height="15" fill="rgb(232,175,32)"/><text x="50.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="916" width="5" height="15" fill="rgb(214,227,20)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="932" width="5" height="15" fill="rgb(240,20,25)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="948" width="5" height="15" fill="rgb(247,196,30)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="964" width="5" height="15" fill="rgb(219,52,42)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="980" width="5" height="15" fill="rgb(220,45,5)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="996" width="5" height="15" fill="rgb(240,76,35)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="1012" width="5" height="15" fill="rgb(234,25,42)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1028" width="5" height="15" fill="rgb(242,188,11)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1044" width="5" height="15" fill="rgb(205,9,32)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1060" width="5" height="15" fill="rgb(233,68,0)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1076" width="5" height="15" fill="rgb(206,115,16)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1092" width="5" height="15" fill="rgb(234,152,42)"/><text x="50.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.45%)</title><rect x="47" y="1108" width="5" height="15" fill="rgb(215,42,15)"/><text x="50.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1124" width="5" height="15" fill="rgb(229,179,18)"/><text x="50.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1140" width="5" height="15" fill="rgb(242,123,5)"/><text x="50.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1156" width="5" height="15" fill="rgb(222,130,44)"/><text x="50.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1172" width="5" height="15" fill="rgb(252,78,40)"/><text x="50.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1188" width="5" height="15" fill="rgb(242,73,16)"/><text x="50.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1204" width="5" height="15" fill="rgb(218,40,47)"/><text x="50.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1220" width="5" height="15" fill="rgb(216,119,42)"/><text x="50.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.45%)</title><rect x="47" y="1236" width="5" height="15" fill="rgb(246,54,21)"/><text x="50.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1252" width="5" height="15" fill="rgb(228,34,34)"/><text x="50.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1268" width="5" height="15" fill="rgb(234,106,35)"/><text x="50.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1284" width="5" height="15" fill="rgb(229,190,19)"/><text x="50.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1300" width="5" height="15" fill="rgb(212,131,3)"/><text x="50.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1316" width="5" height="15" fill="rgb(251,207,6)"/><text x="50.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1332" width="5" height="15" fill="rgb(226,198,6)"/><text x="50.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1348" width="5" height="15" fill="rgb(228,41,53)"/><text x="50.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.45%)</title><rect x="47" y="1364" width="5" height="15" fill="rgb(224,82,18)"/><text x="50.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1380" width="5" height="15" fill="rgb(252,4,13)"/><text x="50.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1396" width="5" height="15" fill="rgb(223,128,50)"/><text x="50.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1412" width="5" height="15" fill="rgb(228,37,6)"/><text x="50.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="47" y="1428" width="5" height="15" fill="rgb(246,144,18)"/><text x="50.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="47" y="1444" width="5" height="15" fill="rgb(215,51,48)"/><text x="50.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.45%)</title><rect x="47" y="1460" width="5" height="15" fill="rgb(238,108,19)"/><text x="50.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.45%)</title><rect x="47" y="1476" width="5" height="15" fill="rgb(222,11,12)"/><text x="50.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.45%)</title><rect x="47" y="1492" width="5" height="15" fill="rgb(241,229,16)"/><text x="50.00" y="1502.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="47" y="1508" width="5" height="15" fill="rgb(249,128,36)"/><text x="50.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="47" y="340" width="11" height="15" fill="rgb(233,13,27)"/><text x="50.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="47" y="356" width="11" height="15" fill="rgb(224,60,0)"/><text x="50.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="47" y="372" width="11" height="15" fill="rgb(233,156,36)"/><text x="50.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="47" y="388" width="11" height="15" fill="rgb(211,136,11)"/><text x="50.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="47" y="404" width="11" height="15" fill="rgb(239,191,49)"/><text x="50.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="47" y="420" width="11" height="15" fill="rgb(224,193,0)"/><text x="50.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.45%)</title><rect x="52" y="436" width="6" height="15" fill="rgb(253,193,16)"/><text x="55.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="452" width="6" height="15" fill="rgb(213,80,41)"/><text x="55.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="468" width="6" height="15" fill="rgb(212,202,45)"/><text x="55.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="484" width="6" height="15" fill="rgb(233,157,30)"/><text x="55.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="500" width="6" height="15" fill="rgb(213,158,39)"/><text x="55.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="516" width="6" height="15" fill="rgb(206,12,47)"/><text x="55.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.45%)</title><rect x="52" y="532" width="6" height="15" fill="rgb(219,1,13)"/><text x="55.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="548" width="6" height="15" fill="rgb(211,11,28)"/><text x="55.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="564" width="6" height="15" fill="rgb(251,109,1)"/><text x="55.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="580" width="6" height="15" fill="rgb(245,13,29)"/><text x="55.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="596" width="6" height="15" fill="rgb(225,142,18)"/><text x="55.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="612" width="6" height="15" fill="rgb(231,193,51)"/><text x="55.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.45%)</title><rect x="52" y="628" width="6" height="15" fill="rgb(206,134,21)"/><text x="55.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="644" width="6" height="15" fill="rgb(216,19,3)"/><text x="55.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="660" width="6" height="15" fill="rgb(236,56,2)"/><text x="55.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="676" width="6" height="15" fill="rgb(244,3,51)"/><text x="55.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="692" width="6" height="15" fill="rgb(254,2,31)"/><text x="55.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="708" width="6" height="15" fill="rgb(251,194,48)"/><text x="55.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.45%)</title><rect x="52" y="724" width="6" height="15" fill="rgb(250,113,9)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="740" width="6" height="15" fill="rgb(254,162,12)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="756" width="6" height="15" fill="rgb(224,7,46)"/><text x="55.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="772" width="6" height="15" fill="rgb(223,153,31)"/><text x="55.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="788" width="6" height="15" fill="rgb(225,2,2)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="804" width="6" height="15" fill="rgb(226,126,41)"/><text x="55.00" y="814.50"></text></g><g><title>&lt;module&gt; (email/message.py) (1 samples, 0.45%)</title><rect x="52" y="820" width="6" height="15" fill="rgb(246,7,25)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="836" width="6" height="15" fill="rgb(222,47,3)"/><text x="55.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="852" width="6" height="15" fill="rgb(239,99,11)"/><text x="55.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="868" width="6" height="15" fill="rgb(235,166,26)"/><text x="55.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="884" width="6" height="15" fill="rgb(242,41,50)"/><text x="55.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="900" width="6" height="15" fill="rgb(243,156,26)"/><text x="55.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="916" width="6" height="15" fill="rgb(208,149,30)"/><text x="55.00" y="926.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.45%)</title><rect x="58" y="580" width="5" height="15" fill="rgb(220,104,37)"/><text x="61.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="596" width="5" height="15" fill="rgb(225,17,24)"/><text x="61.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="612" width="5" height="15" fill="rgb(230,179,54)"/><text x="61.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="628" width="5" height="15" fill="rgb(225,227,53)"/><text x="61.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="644" width="5" height="15" fill="rgb(243,187,14)"/><text x="61.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="660" width="5" height="15" fill="rgb(254,84,46)"/><text x="61.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="676" width="5" height="15" fill="rgb(216,166,41)"/><text x="61.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="692" width="5" height="15" fill="rgb(239,164,52)"/><text x="61.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="708" width="5" height="15" fill="rgb(234,170,35)"/><text x="61.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.45%)</title><rect x="58" y="724" width="5" height="15" fill="rgb(245,164,52)"/><text x="61.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="740" width="5" height="15" fill="rgb(210,90,10)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="756" width="5" height="15" fill="rgb(224,126,15)"/><text x="61.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="772" width="5" height="15" fill="rgb(227,83,48)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="788" width="5" height="15" fill="rgb(247,107,11)"/><text x="61.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="804" width="5" height="15" fill="rgb(249,211,40)"/><text x="61.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.45%)</title><rect x="58" y="820" width="5" height="15" fill="rgb(210,114,46)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="836" width="5" height="15" fill="rgb(244,156,0)"/><text x="61.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="852" width="5" height="15" fill="rgb(213,80,23)"/><text x="61.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="868" width="5" height="15" fill="rgb(227,220,15)"/><text x="61.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="884" width="5" height="15" fill="rgb(211,145,0)"/><text x="61.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="900" width="5" height="15" fill="rgb(234,103,52)"/><text x="61.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.45%)</title><rect x="58" y="916" width="5" height="15" fill="rgb(223,0,12)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="932" width="5" height="15" fill="rgb(234,218,38)"/><text x="61.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="948" width="5" height="15" fill="rgb(228,157,51)"/><text x="61.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="964" width="5" height="15" fill="rgb(225,50,38)"/><text x="61.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="980" width="5" height="15" fill="rgb(220,94,33)"/><text x="61.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="996" width="5" height="15" fill="rgb(244,2,37)"/><text x="61.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1012" width="5" height="15" fill="rgb(215,187,10)"/><text x="61.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="1028" width="5" height="15" fill="rgb(219,48,7)"/><text x="61.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1044" width="5" height="15" fill="rgb(244,206,27)"/><text x="61.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.45%)</title><rect x="58" y="1060" width="5" height="15" fill="rgb(233,30,42)"/><text x="61.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1076" width="5" height="15" fill="rgb(226,184,3)"/><text x="61.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1092" width="5" height="15" fill="rgb(250,33,14)"/><text x="61.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1108" width="5" height="15" fill="rgb(236,160,38)"/><text x="61.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="1124" width="5" height="15" fill="rgb(247,33,6)"/><text x="61.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1140" width="5" height="15" fill="rgb(231,25,26)"/><text x="61.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.45%)</title><rect x="58" y="1156" width="5" height="15" fill="rgb(217,148,4)"/><text x="61.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1172" width="5" height="15" fill="rgb(209,146,36)"/><text x="61.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1188" width="5" height="15" fill="rgb(233,40,41)"/><text x="61.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="58" y="1204" width="5" height="15" fill="rgb(243,198,45)"/><text x="61.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="1220" width="5" height="15" fill="rgb(217,62,40)"/><text x="61.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="1236" width="5" height="15" fill="rgb(230,168,52)"/><text x="61.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="58" y="1252" width="5" height="15" fill="rgb(221,195,5)"/><text x="61.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (4 samples, 1.81%)</title><rect x="47" y="244" width="21" height="15" fill="rgb(222,113,47)"/><text x="50.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="47" y="260" width="21" height="15" fill="rgb(240,151,48)"/><text x="50.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="47" y="276" width="21" height="15" fill="rgb(247,24,51)"/><text x="50.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="47" y="292" width="21" height="15" fill="rgb(222,179,12)"/><text x="50.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.81%)</title><rect x="47" y="308" width="21" height="15" fill="rgb(246,40,24)"/><text x="50.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.81%)</title><rect x="47" y="324" width="21" height="15" fill="rgb(209,69,49)"/><text x="50.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.90%)</title><rect x="58" y="340" width="10" height="15" fill="rgb(251,205,54)"/><text x="61.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="356" width="10" height="15" fill="rgb(218,93,12)"/><text x="61.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="372" width="10" height="15" fill="rgb(237,106,14)"/><text x="61.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="388" width="10" height="15" fill="rgb(241,76,9)"/><text x="61.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="404" width="10" height="15" fill="rgb(215,79,22)"/><text x="61.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="420" width="10" height="15" fill="rgb(247,135,10)"/><text x="61.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="436" width="10" height="15" fill="rgb(238,133,41)"/><text x="61.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="58" y="452" width="10" height="15" fill="rgb(228,15,27)"/><text x="61.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="468" width="10" height="15" fill="rgb(238,87,19)"/><text x="61.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.90%)</title><rect x="58" y="484" width="10" height="15" fill="rgb(247,125,7)"/><text x="61.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="500" width="10" height="15" fill="rgb(237,45,45)"/><text x="61.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="516" width="10" height="15" fill="rgb(212,164,35)"/><text x="61.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="532" width="10" height="15" fill="rgb(237,70,26)"/><text x="61.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="58" y="548" width="10" height="15" fill="rgb(205,97,23)"/><text x="61.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="58" y="564" width="10" height="15" fill="rgb(240,185,21)"/><text x="61.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.45%)</title><rect x="63" y="580" width="5" height="15" fill="rgb(235,47,52)"/><text x="66.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="596" width="5" height="15" fill="rgb(223,60,51)"/><text x="66.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="612" width="5" height="15" fill="rgb(228,40,0)"/><text x="66.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="628" width="5" height="15" fill="rgb(251,129,53)"/><text x="66.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="63" y="644" width="5" height="15" fill="rgb(206,49,39)"/><text x="66.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="660" width="5" height="15" fill="rgb(213,208,7)"/><text x="66.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.45%)</title><rect x="63" y="676" width="5" height="15" fill="rgb(228,220,18)"/><text x="66.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="692" width="5" height="15" fill="rgb(228,167,52)"/><text x="66.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="708" width="5" height="15" fill="rgb(250,12,13)"/><text x="66.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="724" width="5" height="15" fill="rgb(214,190,39)"/><text x="66.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="63" y="740" width="5" height="15" fill="rgb(234,170,48)"/><text x="66.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="756" width="5" height="15" fill="rgb(235,154,46)"/><text x="66.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.45%)</title><rect x="63" y="772" width="5" height="15" fill="rgb(246,181,10)"/><text x="66.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="788" width="5" height="15" fill="rgb(219,59,40)"/><text x="66.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="804" width="5" height="15" fill="rgb(245,170,15)"/><text x="66.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="820" width="5" height="15" fill="rgb(246,9,11)"/><text x="66.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="836" width="5" height="15" fill="rgb(252,86,37)"/><text x="66.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="852" width="5" height="15" fill="rgb(243,134,8)"/><text x="66.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="63" y="868" width="5" height="15" fill="rgb(245,222,52)"/><text x="66.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="884" width="5" height="15" fill="rgb(220,196,6)"/><text x="66.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.45%)</title><rect x="63" y="900" width="5" height="15" fill="rgb(223,158,3)"/><text x="66.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="916" width="5" height="15" fill="rgb(243,51,27)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="932" width="5" height="15" fill="rgb(206,3,2)"/><text x="66.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="948" width="5" height="15" fill="rgb(234,200,7)"/><text x="66.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="63" y="964" width="5" height="15" fill="rgb(214,193,3)"/><text x="66.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="980" width="5" height="15" fill="rgb(216,25,50)"/><text x="66.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.45%)</title><rect x="63" y="996" width="5" height="15" fill="rgb(253,29,8)"/><text x="66.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1012" width="5" height="15" fill="rgb(244,118,22)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1028" width="5" height="15" fill="rgb(212,13,28)"/><text x="66.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1044" width="5" height="15" fill="rgb(212,143,4)"/><text x="66.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="63" y="1060" width="5" height="15" fill="rgb(227,209,20)"/><text x="66.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1076" width="5" height="15" fill="rgb(215,25,34)"/><text x="66.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.45%)</title><rect x="63" y="1092" width="5" height="15" fill="rgb(246,33,36)"/><text x="66.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1108" width="5" height="15" fill="rgb(226,81,4)"/><text x="66.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1124" width="5" height="15" fill="rgb(222,161,38)"/><text x="66.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1140" width="5" height="15" fill="rgb(222,217,35)"/><text x="66.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1156" width="5" height="15" fill="rgb(231,26,31)"/><text x="66.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1172" width="5" height="15" fill="rgb(246,203,46)"/><text x="66.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="63" y="1188" width="5" height="15" fill="rgb(233,172,48)"/><text x="66.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="63" y="1204" width="5" height="15" fill="rgb(239,111,28)"/><text x="66.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py) (1 samples, 0.45%)</title><rect x="63" y="1220" width="5" height="15" fill="rgb(239,71,39)"/><text x="66.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="63" y="1236" width="5" height="15" fill="rgb(213,142,5)"/><text x="66.00" y="1246.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="63" y="1252" width="5" height="15" fill="rgb(220,94,19)"/><text x="66.00" y="1262.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="63" y="1268" width="5" height="15" fill="rgb(253,2,48)"/><text x="66.00" y="1278.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1284" width="5" height="15" fill="rgb(221,211,2)"/><text x="66.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1300" width="5" height="15" fill="rgb(238,152,45)"/><text x="66.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1316" width="5" height="15" fill="rgb(235,10,2)"/><text x="66.00" y="1326.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1332" width="5" height="15" fill="rgb(239,183,22)"/><text x="66.00" y="1342.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1348" width="5" height="15" fill="rgb(237,89,48)"/><text x="66.00" y="1358.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1364" width="5" height="15" fill="rgb(242,194,39)"/><text x="66.00" y="1374.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.45%)</title><rect x="63" y="1380" width="5" height="15" fill="rgb(246,153,12)"/><text x="66.00" y="1390.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.45%)</title><rect x="68" y="372" width="6" height="15" fill="rgb(244,89,50)"/><text x="71.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="68" y="388" width="6" height="15" fill="rgb(214,176,12)"/><text x="71.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="68" y="404" width="6" height="15" fill="rgb(209,143,1)"/><text x="71.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="68" y="420" width="6" height="15" fill="rgb(240,18,31)"/><text x="71.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="68" y="436" width="6" height="15" fill="rgb(227,78,8)"/><text x="71.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="68" y="452" width="6" height="15" fill="rgb(241,97,50)"/><text x="71.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="68" y="468" width="6" height="15" fill="rgb(212,3,19)"/><text x="71.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="68" y="484" width="6" height="15" fill="rgb(253,210,50)"/><text x="71.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="68" y="500" width="6" height="15" fill="rgb(218,54,10)"/><text x="71.00" y="510.50"></text></g><g><title>&lt;module&gt; (numpy/lib/arraysetops.py) (1 samples, 0.45%)</title><rect x="74" y="468" width="5" height="15" fill="rgb(234,151,22)"/><text x="77.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.45%)</title><rect x="74" y="484" width="5" height="15" fill="rgb(240,5,15)"/><text x="77.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 1.36%)</title><rect x="68" y="244" width="16" height="15" fill="rgb(225,107,8)"/><text x="71.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="68" y="260" width="16" height="15" fill="rgb(245,186,27)"/><text x="71.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="68" y="276" width="16" height="15" fill="rgb(250,176,5)"/><text x="71.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="68" y="292" width="16" height="15" fill="rgb(221,8,4)"/><text x="71.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="68" y="308" width="16" height="15" fill="rgb(235,105,53)"/><text x="71.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="68" y="324" width="16" height="15" fill="rgb(245,84,4)"/><text x="71.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="68" y="340" width="16" height="15" fill="rgb(233,180,12)"/><text x="71.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="68" y="356" width="16" height="15" fill="rgb(208,83,42)"/><text x="71.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.90%)</title><rect x="74" y="372" width="10" height="15" fill="rgb(233,5,44)"/><text x="77.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="388" width="10" height="15" fill="rgb(247,184,27)"/><text x="77.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="404" width="10" height="15" fill="rgb(234,99,6)"/><text x="77.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="420" width="10" height="15" fill="rgb(228,142,27)"/><text x="77.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="74" y="436" width="10" height="15" fill="rgb(231,157,52)"/><text x="77.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="74" y="452" width="10" height="15" fill="rgb(235,112,16)"/><text x="77.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.45%)</title><rect x="79" y="468" width="5" height="15" fill="rgb(228,37,1)"/><text x="82.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="484" width="5" height="15" fill="rgb(224,225,34)"/><text x="82.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="500" width="5" height="15" fill="rgb(239,52,4)"/><text x="82.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="516" width="5" height="15" fill="rgb(206,200,18)"/><text x="82.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="532" width="5" height="15" fill="rgb(243,146,14)"/><text x="82.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="548" width="5" height="15" fill="rgb(225,177,24)"/><text x="82.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.45%)</title><rect x="79" y="564" width="5" height="15" fill="rgb(219,204,46)"/><text x="82.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="580" width="5" height="15" fill="rgb(217,159,35)"/><text x="82.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="596" width="5" height="15" fill="rgb(212,138,39)"/><text x="82.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="612" width="5" height="15" fill="rgb(252,42,50)"/><text x="82.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="628" width="5" height="15" fill="rgb(213,11,20)"/><text x="82.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="644" width="5" height="15" fill="rgb(244,143,3)"/><text x="82.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.45%)</title><rect x="79" y="660" width="5" height="15" fill="rgb(216,25,19)"/><text x="82.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="676" width="5" height="15" fill="rgb(205,2,3)"/><text x="82.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="692" width="5" height="15" fill="rgb(216,181,23)"/><text x="82.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="708" width="5" height="15" fill="rgb(248,203,23)"/><text x="82.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="724" width="5" height="15" fill="rgb(219,94,13)"/><text x="82.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="740" width="5" height="15" fill="rgb(243,22,51)"/><text x="82.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.45%)</title><rect x="79" y="756" width="5" height="15" fill="rgb(218,87,1)"/><text x="82.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="772" width="5" height="15" fill="rgb(234,176,13)"/><text x="82.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="788" width="5" height="15" fill="rgb(209,91,13)"/><text x="82.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="804" width="5" height="15" fill="rgb(207,224,45)"/><text x="82.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="820" width="5" height="15" fill="rgb(213,131,25)"/><text x="82.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="836" width="5" height="15" fill="rgb(231,160,26)"/><text x="82.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.45%)</title><rect x="79" y="852" width="5" height="15" fill="rgb(209,156,15)"/><text x="82.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="868" width="5" height="15" fill="rgb(226,148,3)"/><text x="82.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="884" width="5" height="15" fill="rgb(233,118,41)"/><text x="82.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="900" width="5" height="15" fill="rgb(223,137,0)"/><text x="82.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="79" y="916" width="5" height="15" fill="rgb(227,221,48)"/><text x="82.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="79" y="932" width="5" height="15" fill="rgb(212,53,21)"/><text x="82.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.45%)</title><rect x="79" y="948" width="5" height="15" fill="rgb(252,228,13)"/><text x="82.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.45%)</title><rect x="79" y="964" width="5" height="15" fill="rgb(254,200,22)"/><text x="82.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="20" y="68" width="70" height="15" fill="rgb(252,6,27)"/><text x="23.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="20" y="84" width="70" height="15" fill="rgb(238,148,32)"/><text x="23.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="20" y="100" width="70" height="15" fill="rgb(233,172,40)"/><text x="23.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.88%)</title><rect x="20" y="116" width="70" height="15" fill="rgb(230,73,8)"/><text x="23.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="20" y="132" width="70" height="15" fill="rgb(227,117,54)"/><text x="23.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py) (13 samples, 5.88%)</title><rect x="20" y="148" width="70" height="15" fill="rgb(216,43,44)"/><text x="23.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="20" y="164" width="70" height="15" fill="rgb(226,209,21)"/><text x="23.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.88%)</title><rect x="20" y="180" width="70" height="15" fill="rgb(230,55,25)"/><text x="23.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.62%)</title><rect x="47" y="196" width="43" height="15" fill="rgb(211,42,2)"/><text x="50.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.62%)</title><rect x="47" y="212" width="43" height="15" fill="rgb(246,22,11)"/><text x="50.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.62%)</title><rect x="47" y="228" width="43" height="15" fill="rgb(241,222,14)"/><text x="50.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.45%)</title><rect x="84" y="244" width="6" height="15" fill="rgb(231,15,48)"/><text x="87.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="260" width="6" height="15" fill="rgb(226,12,14)"/><text x="87.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="276" width="6" height="15" fill="rgb(213,6,35)"/><text x="87.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="292" width="6" height="15" fill="rgb(227,143,8)"/><text x="87.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="308" width="6" height="15" fill="rgb(246,21,34)"/><text x="87.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="324" width="6" height="15" fill="rgb(253,60,4)"/><text x="87.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.45%)</title><rect x="84" y="340" width="6" height="15" fill="rgb(237,150,37)"/><text x="87.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="356" width="6" height="15" fill="rgb(214,116,7)"/><text x="87.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="372" width="6" height="15" fill="rgb(253,43,44)"/><text x="87.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="388" width="6" height="15" fill="rgb(249,138,49)"/><text x="87.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="404" width="6" height="15" fill="rgb(225,174,43)"/><text x="87.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="420" width="6" height="15" fill="rgb(232,179,21)"/><text x="87.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.45%)</title><rect x="84" y="436" width="6" height="15" fill="rgb(219,51,42)"/><text x="87.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="452" width="6" height="15" fill="rgb(206,87,21)"/><text x="87.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="468" width="6" height="15" fill="rgb(247,163,22)"/><text x="87.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="484" width="6" height="15" fill="rgb(226,82,5)"/><text x="87.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="500" width="6" height="15" fill="rgb(224,20,26)"/><text x="87.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="516" width="6" height="15" fill="rgb(221,28,41)"/><text x="87.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.45%)</title><rect x="84" y="532" width="6" height="15" fill="rgb(222,133,41)"/><text x="87.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="548" width="6" height="15" fill="rgb(251,205,44)"/><text x="87.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="564" width="6" height="15" fill="rgb(238,168,48)"/><text x="87.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="580" width="6" height="15" fill="rgb(235,112,54)"/><text x="87.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="596" width="6" height="15" fill="rgb(243,217,14)"/><text x="87.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="612" width="6" height="15" fill="rgb(210,63,34)"/><text x="87.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.45%)</title><rect x="84" y="628" width="6" height="15" fill="rgb(217,174,0)"/><text x="87.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="644" width="6" height="15" fill="rgb(235,7,0)"/><text x="87.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="660" width="6" height="15" fill="rgb(206,132,28)"/><text x="87.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="676" width="6" height="15" fill="rgb(241,229,30)"/><text x="87.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="692" width="6" height="15" fill="rgb(209,164,34)"/><text x="87.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="708" width="6" height="15" fill="rgb(247,90,39)"/><text x="87.00" y="718.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_stochastic_gradient.py) (1 samples, 0.45%)</title><rect x="84" y="724" width="6" height="15" fill="rgb(224,185,7)"/><text x="87.00" y="734.50"></text></g><g><title>BaseSGD (sklearn/linear_model/_stochastic_gradient.py) (1 samples, 0.45%)</title><rect x="84" y="740" width="6" height="15" fill="rgb(229,34,30)"/><text x="87.00" y="750.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (1 samples, 0.45%)</title><rect x="90" y="100" width="5" height="15" fill="rgb(239,170,35)"/><text x="93.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="90" y="116" width="5" height="15" fill="rgb(209,136,49)"/><text x="93.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="90" y="132" width="5" height="15" fill="rgb(207,16,3)"/><text x="93.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py) (1 samples, 0.45%)</title><rect x="90" y="148" width="5" height="15" fill="rgb(215,198,26)"/><text x="93.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (1 samples, 0.45%)</title><rect x="90" y="164" width="5" height="15" fill="rgb(226,107,7)"/><text x="93.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (1 samples, 0.45%)</title><rect x="90" y="180" width="5" height="15" fill="rgb(236,126,38)"/><text x="93.00" y="190.50"></text></g><g><title>0x7f4490877a28 (?) (1 samples, 0.45%)</title><rect x="95" y="388" width="5" height="15" fill="rgb(223,209,5)"/><text x="98.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="404" width="5" height="15" fill="rgb(217,171,8)"/><text x="98.00" y="414.50"></text></g><g><title>0x7f449c01e995 (libdl-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="420" width="5" height="15" fill="rgb(215,66,21)"/><text x="98.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="436" width="5" height="15" fill="rgb(230,55,16)"/><text x="98.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="452" width="5" height="15" fill="rgb(212,76,41)"/><text x="98.00" y="462.50"></text></g><g><title>0x7f449c01e258 (libdl-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="468" width="5" height="15" fill="rgb(213,117,19)"/><text x="98.00" y="478.50"></text></g><g><title>0x7f449c06bd7a (ld-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="484" width="5" height="15" fill="rgb(238,161,34)"/><text x="98.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="500" width="5" height="15" fill="rgb(212,190,31)"/><text x="98.00" y="510.50"></text></g><g><title>0x7f449c06c345 (ld-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="516" width="5" height="15" fill="rgb(205,190,29)"/><text x="98.00" y="526.50"></text></g><g><title>0x7f449c064fec (ld-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="532" width="5" height="15" fill="rgb(249,182,3)"/><text x="98.00" y="542.50"></text></g><g><title>0x7f449c063487 (ld-2.29.so) (1 samples, 0.45%)</title><rect x="95" y="548" width="5" height="15" fill="rgb(222,140,48)"/><text x="98.00" y="558.50"></text></g><g><title>0x7f449c062952 (ld-2.29.so) (1 samples, 0.45%)</title><rect x="100" y="564" width="6" height="15" fill="rgb(224,98,4)"/><text x="103.00" y="574.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (4 samples, 1.81%)</title><rect x="90" y="68" width="21" height="15" fill="rgb(208,31,28)"/><text x="93.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (4 samples, 1.81%)</title><rect x="90" y="84" width="21" height="15" fill="rgb(221,224,38)"/><text x="93.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.36%)</title><rect x="95" y="100" width="16" height="15" fill="rgb(227,162,54)"/><text x="98.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (3 samples, 1.36%)</title><rect x="95" y="116" width="16" height="15" fill="rgb(223,94,39)"/><text x="98.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (3 samples, 1.36%)</title><rect x="95" y="132" width="16" height="15" fill="rgb(229,153,39)"/><text x="98.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="148" width="16" height="15" fill="rgb(249,110,46)"/><text x="98.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="164" width="16" height="15" fill="rgb(238,164,46)"/><text x="98.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="180" width="16" height="15" fill="rgb(213,113,44)"/><text x="98.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="95" y="196" width="16" height="15" fill="rgb(215,109,31)"/><text x="98.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="212" width="16" height="15" fill="rgb(242,132,33)"/><text x="98.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (3 samples, 1.36%)</title><rect x="95" y="228" width="16" height="15" fill="rgb(207,194,35)"/><text x="98.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="244" width="16" height="15" fill="rgb(222,19,45)"/><text x="98.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="260" width="16" height="15" fill="rgb(215,12,7)"/><text x="98.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="276" width="16" height="15" fill="rgb(222,165,24)"/><text x="98.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.36%)</title><rect x="95" y="292" width="16" height="15" fill="rgb(205,97,46)"/><text x="98.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.36%)</title><rect x="95" y="308" width="16" height="15" fill="rgb(209,175,33)"/><text x="98.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (3 samples, 1.36%)</title><rect x="95" y="324" width="16" height="15" fill="rgb(245,77,22)"/><text x="98.00" y="334.50"></text></g><g><title>_load_lib (xgboost/core.py) (3 samples, 1.36%)</title><rect x="95" y="340" width="16" height="15" fill="rgb(217,174,6)"/><text x="98.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py) (3 samples, 1.36%)</title><rect x="95" y="356" width="16" height="15" fill="rgb(239,8,39)"/><text x="98.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py) (3 samples, 1.36%)</title><rect x="95" y="372" width="16" height="15" fill="rgb(250,128,40)"/><text x="98.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c) (2 samples, 0.90%)</title><rect x="100" y="388" width="11" height="15" fill="rgb(213,57,47)"/><text x="103.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="404" width="11" height="15" fill="rgb(235,61,20)"/><text x="103.00" y="414.50"></text></g><g><title>0x7f449c01e995 (libdl-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="420" width="11" height="15" fill="rgb(224,72,29)"/><text x="103.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="436" width="11" height="15" fill="rgb(254,133,11)"/><text x="103.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="452" width="11" height="15" fill="rgb(212,17,3)"/><text x="103.00" y="462.50"></text></g><g><title>0x7f449c01e258 (libdl-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="468" width="11" height="15" fill="rgb(218,24,14)"/><text x="103.00" y="478.50"></text></g><g><title>0x7f449c06bd7a (ld-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="484" width="11" height="15" fill="rgb(231,85,54)"/><text x="103.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="500" width="11" height="15" fill="rgb(209,128,54)"/><text x="103.00" y="510.50"></text></g><g><title>0x7f449c06c345 (ld-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="516" width="11" height="15" fill="rgb(221,102,24)"/><text x="103.00" y="526.50"></text></g><g><title>0x7f449c064fec (ld-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="532" width="11" height="15" fill="rgb(238,16,21)"/><text x="103.00" y="542.50"></text></g><g><title>0x7f449c06356b (ld-2.29.so) (2 samples, 0.90%)</title><rect x="100" y="548" width="11" height="15" fill="rgb(220,215,7)"/><text x="103.00" y="558.50"></text></g><g><title>0x7f449c062c10 (ld-2.29.so) (1 samples, 0.45%)</title><rect x="106" y="564" width="5" height="15" fill="rgb(245,222,35)"/><text x="109.00" y="574.50"></text></g><g><title>0x7f445bdc9ff9 (?) (1 samples, 0.45%)</title><rect x="132" y="212" width="6" height="15" fill="rgb(234,148,45)"/><text x="135.00" y="222.50"></text></g><g><title>0x7f445bdc4fa0 (?) (1 samples, 0.45%)</title><rect x="132" y="228" width="6" height="15" fill="rgb(250,103,34)"/><text x="135.00" y="238.50"></text></g><g><title>0x7f449bd96d07 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="132" y="244" width="6" height="15" fill="rgb(244,179,0)"/><text x="135.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="138" y="260" width="5" height="15" fill="rgb(213,190,14)"/><text x="141.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="143" y="292" width="5" height="15" fill="rgb(228,29,5)"/><text x="146.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="143" y="308" width="5" height="15" fill="rgb(205,172,33)"/><text x="146.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="143" y="324" width="5" height="15" fill="rgb(219,139,22)"/><text x="146.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="143" y="340" width="5" height="15" fill="rgb(244,88,48)"/><text x="146.00" y="350.50"></text></g><g><title>0x7f449bd97c48 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="143" y="356" width="5" height="15" fill="rgb(246,123,4)"/><text x="146.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="148" y="340" width="6" height="15" fill="rgb(239,61,13)"/><text x="151.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="148" y="356" width="6" height="15" fill="rgb(254,89,32)"/><text x="151.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="148" y="372" width="6" height="15" fill="rgb(219,128,16)"/><text x="151.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="148" y="388" width="6" height="15" fill="rgb(217,161,15)"/><text x="151.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="154" y="340" width="5" height="15" fill="rgb(213,3,4)"/><text x="157.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="154" y="356" width="5" height="15" fill="rgb(213,83,34)"/><text x="157.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="154" y="372" width="5" height="15" fill="rgb(249,70,50)"/><text x="157.00" y="382.50"></text></g><g><title>onnxruntime::Shape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="159" y="340" width="5" height="15" fill="rgb(235,114,8)"/><text x="162.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="159" y="356" width="5" height="15" fill="rgb(237,29,9)"/><text x="162.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.98%)</title><rect x="138" y="244" width="58" height="15" fill="rgb(241,18,12)"/><text x="141.00" y="254.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.52%)</title><rect x="143" y="260" width="53" height="15" fill="rgb(214,206,22)"/><text x="146.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.52%)</title><rect x="143" y="276" width="53" height="15" fill="rgb(211,229,8)"/><text x="146.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.07%)</title><rect x="148" y="292" width="48" height="15" fill="rgb(232,134,46)"/><text x="151.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.07%)</title><rect x="148" y="308" width="48" height="15" fill="rgb(238,173,28)"/><text x="151.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.07%)</title><rect x="148" y="324" width="48" height="15" fill="rgb(249,152,50)"/><text x="151.00" y="334.50">onnx..</text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.71%)</title><rect x="164" y="340" width="32" height="15" fill="rgb(239,96,47)"/><text x="167.00" y="350.50">on..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.26%)</title><rect x="170" y="356" width="26" height="15" fill="rgb(236,208,37)"/><text x="173.00" y="366.50">o..</text></g><g><title>0x7f449bf68dd0 (libm-2.29.so) (1 samples, 0.45%)</title><rect x="191" y="372" width="5" height="15" fill="rgb(250,39,52)"/><text x="194.00" y="382.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (17 samples, 7.69%)</title><rect x="111" y="68" width="91" height="15" fill="rgb(209,222,9)"/><text x="114.00" y="78.50">profile_or..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (17 samples, 7.69%)</title><rect x="111" y="84" width="91" height="15" fill="rgb(224,36,50)"/><text x="114.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (17 samples, 7.69%)</title><rect x="111" y="100" width="91" height="15" fill="rgb(250,184,14)"/><text x="114.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (17 samples, 7.69%)</title><rect x="111" y="116" width="91" height="15" fill="rgb(246,81,14)"/><text x="114.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (17 samples, 7.69%)</title><rect x="111" y="132" width="91" height="15" fill="rgb(236,163,10)"/><text x="114.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (15 samples, 6.79%)</title><rect x="122" y="148" width="80" height="15" fill="rgb(224,48,9)"/><text x="125.00" y="158.50">run (mlpr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (15 samples, 6.79%)</title><rect x="122" y="164" width="80" height="15" fill="rgb(239,137,6)"/><text x="125.00" y="174.50">_run_whol..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (13 samples, 5.88%)</title><rect x="132" y="180" width="70" height="15" fill="rgb(221,175,20)"/><text x="135.00" y="190.50">run (ml..</text></g><g><title>run (onnxruntime/capi/session.py) (13 samples, 5.88%)</title><rect x="132" y="196" width="70" height="15" fill="rgb(233,191,10)"/><text x="135.00" y="206.50">run (on..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 5.43%)</title><rect x="138" y="212" width="64" height="15" fill="rgb(241,172,41)"/><text x="141.00" y="222.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 5.43%)</title><rect x="138" y="228" width="64" height="15" fill="rgb(245,103,41)"/><text x="141.00" y="238.50">void py..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="196" y="244" width="6" height="15" fill="rgb(220,147,20)"/><text x="199.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="196" y="260" width="6" height="15" fill="rgb(247,121,11)"/><text x="199.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="196" y="276" width="6" height="15" fill="rgb(223,99,42)"/><text x="199.00" y="286.50"></text></g><g><title>0x7f449bdb6dae (libc-2.29.so) (1 samples, 0.45%)</title><rect x="196" y="292" width="6" height="15" fill="rgb(208,173,21)"/><text x="199.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.45%)</title><rect x="271" y="228" width="5" height="15" fill="rgb(244,28,5)"/><text x="274.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.45%)</title><rect x="282" y="244" width="5" height="15" fill="rgb(222,101,21)"/><text x="285.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.45%)</title><rect x="282" y="260" width="5" height="15" fill="rgb(236,147,16)"/><text x="285.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.45%)</title><rect x="282" y="276" width="5" height="15" fill="rgb(229,4,20)"/><text x="285.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (7 samples, 3.17%)</title><rect x="255" y="212" width="37" height="15" fill="rgb(212,122,24)"/><text x="258.00" y="222.50">_ru..</text></g><g><title>array_subscript (mapping.c) (3 samples, 1.36%)</title><rect x="276" y="228" width="16" height="15" fill="rgb(206,126,11)"/><text x="279.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="287" y="244" width="5" height="15" fill="rgb(213,157,7)"/><text x="290.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.45%)</title><rect x="287" y="260" width="5" height="15" fill="rgb(224,204,30)"/><text x="290.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.45%)</title><rect x="292" y="276" width="6" height="15" fill="rgb(254,28,54)"/><text x="295.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.45%)</title><rect x="292" y="292" width="6" height="15" fill="rgb(225,152,13)"/><text x="295.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.90%)</title><rect x="292" y="212" width="11" height="15" fill="rgb(249,130,7)"/><text x="295.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (2 samples, 0.90%)</title><rect x="292" y="228" width="11" height="15" fill="rgb(251,115,31)"/><text x="295.00" y="238.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.90%)</title><rect x="292" y="244" width="11" height="15" fill="rgb(210,73,6)"/><text x="295.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.90%)</title><rect x="292" y="260" width="11" height="15" fill="rgb(209,44,2)"/><text x="295.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.45%)</title><rect x="298" y="276" width="5" height="15" fill="rgb(236,141,24)"/><text x="301.00" y="286.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.45%)</title><rect x="298" y="292" width="5" height="15" fill="rgb(254,64,45)"/><text x="301.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py) (5 samples, 2.26%)</title><rect x="303" y="212" width="27" height="15" fill="rgb(245,63,25)"/><text x="306.00" y="222.50">_..</text></g><g><title>prod (&lt;__array_function__ internals&gt;) (5 samples, 2.26%)</title><rect x="303" y="228" width="27" height="15" fill="rgb(215,193,20)"/><text x="306.00" y="238.50">p..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 2.26%)</title><rect x="303" y="244" width="27" height="15" fill="rgb(205,224,43)"/><text x="306.00" y="254.50">a..</text></g><g><title>prod (numpy/core/fromnumeric.py) (5 samples, 2.26%)</title><rect x="303" y="260" width="27" height="15" fill="rgb(248,49,13)"/><text x="306.00" y="270.50">p..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (5 samples, 2.26%)</title><rect x="303" y="276" width="27" height="15" fill="rgb(226,83,11)"/><text x="306.00" y="286.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.45%)</title><rect x="325" y="292" width="5" height="15" fill="rgb(224,194,5)"/><text x="328.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="325" y="308" width="5" height="15" fill="rgb(234,198,25)"/><text x="328.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.45%)</title><rect x="325" y="324" width="5" height="15" fill="rgb(209,181,35)"/><text x="328.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.45%)</title><rect x="325" y="340" width="5" height="15" fill="rgb(209,174,7)"/><text x="328.00" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (1 samples, 0.45%)</title><rect x="330" y="212" width="5" height="15" fill="rgb(241,224,3)"/><text x="333.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.45%)</title><rect x="330" y="228" width="5" height="15" fill="rgb(253,78,42)"/><text x="333.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="330" y="244" width="5" height="15" fill="rgb(213,163,14)"/><text x="333.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py) (1 samples, 0.45%)</title><rect x="335" y="212" width="6" height="15" fill="rgb(231,0,51)"/><text x="338.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="335" y="228" width="6" height="15" fill="rgb(249,20,11)"/><text x="338.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="335" y="244" width="6" height="15" fill="rgb(222,181,7)"/><text x="338.00" y="254.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (2 samples, 0.90%)</title><rect x="357" y="260" width="10" height="15" fill="rgb(218,94,18)"/><text x="360.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.90%)</title><rect x="357" y="276" width="10" height="15" fill="rgb(234,107,3)"/><text x="360.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="362" y="292" width="5" height="15" fill="rgb(215,160,6)"/><text x="365.00" y="302.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="367" y="292" width="6" height="15" fill="rgb(235,32,5)"/><text x="370.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="367" y="308" width="6" height="15" fill="rgb(212,176,38)"/><text x="370.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.45%)</title><rect x="367" y="324" width="6" height="15" fill="rgb(218,117,51)"/><text x="370.00" y="334.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (2 samples, 0.90%)</title><rect x="367" y="260" width="11" height="15" fill="rgb(240,21,36)"/><text x="370.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.90%)</title><rect x="367" y="276" width="11" height="15" fill="rgb(225,174,23)"/><text x="370.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="373" y="292" width="5" height="15" fill="rgb(241,184,53)"/><text x="376.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.07%)</title><rect x="341" y="212" width="48" height="15" fill="rgb(242,87,24)"/><text x="344.00" y="222.50">_run..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (9 samples, 4.07%)</title><rect x="341" y="228" width="48" height="15" fill="rgb(228,21,34)"/><text x="344.00" y="238.50">_com..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (6 samples, 2.71%)</title><rect x="357" y="244" width="32" height="15" fill="rgb(237,13,13)"/><text x="360.00" y="254.50">to..</text></g><g><title>array_subscript (mapping.c) (2 samples, 0.90%)</title><rect x="378" y="260" width="11" height="15" fill="rgb(211,34,5)"/><text x="381.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.90%)</title><rect x="378" y="276" width="11" height="15" fill="rgb(223,211,20)"/><text x="381.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="378" y="292" width="11" height="15" fill="rgb(241,153,11)"/><text x="381.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="378" y="308" width="11" height="15" fill="rgb(205,172,15)"/><text x="381.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.45%)</title><rect x="383" y="324" width="6" height="15" fill="rgb(242,22,47)"/><text x="386.00" y="334.50"></text></g><g><title>array_astype (methods.c) (1 samples, 0.45%)</title><rect x="389" y="244" width="5" height="15" fill="rgb(229,75,16)"/><text x="392.00" y="254.50"></text></g><g><title>0x7f4478fbc710 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="410" y="260" width="5" height="15" fill="rgb(242,179,21)"/><text x="413.00" y="270.50"></text></g><g><title>_filter_deprecated_kwargs (scipy/spatial/distance.py) (1 samples, 0.45%)</title><rect x="415" y="260" width="6" height="15" fill="rgb(250,23,8)"/><text x="418.00" y="270.50"></text></g><g><title>_select_weighted_metric (scipy/spatial/distance.py) (1 samples, 0.45%)</title><rect x="421" y="260" width="5" height="15" fill="rgb(239,181,9)"/><text x="424.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (9 samples, 4.07%)</title><rect x="389" y="228" width="48" height="15" fill="rgb(223,157,12)"/><text x="392.00" y="238.50">_run..</text></g><g><title>cdist (scipy/spatial/distance.py) (8 samples, 3.62%)</title><rect x="394" y="244" width="43" height="15" fill="rgb(239,88,37)"/><text x="397.00" y="254.50">cdis..</text></g><g><title>callable (scipy/_lib/six.py) (2 samples, 0.90%)</title><rect x="426" y="260" width="11" height="15" fill="rgb(215,50,34)"/><text x="429.00" y="270.50"></text></g><g><title>&lt;genexpr&gt; (scipy/_lib/six.py) (1 samples, 0.45%)</title><rect x="431" y="276" width="6" height="15" fill="rgb(240,80,5)"/><text x="434.00" y="286.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py) (1 samples, 0.45%)</title><rect x="463" y="308" width="6" height="15" fill="rgb(222,68,22)"/><text x="466.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.45%)</title><rect x="463" y="324" width="6" height="15" fill="rgb(206,90,21)"/><text x="466.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.45%)</title><rect x="469" y="356" width="5" height="15" fill="rgb(212,21,0)"/><text x="472.00" y="366.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.45%)</title><rect x="469" y="372" width="5" height="15" fill="rgb(249,132,49)"/><text x="472.00" y="382.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.45%)</title><rect x="469" y="388" width="5" height="15" fill="rgb(228,221,33)"/><text x="472.00" y="398.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.90%)</title><rect x="469" y="308" width="10" height="15" fill="rgb(226,190,20)"/><text x="472.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.90%)</title><rect x="469" y="324" width="10" height="15" fill="rgb(228,25,23)"/><text x="472.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.90%)</title><rect x="469" y="340" width="10" height="15" fill="rgb(240,81,3)"/><text x="472.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="474" y="356" width="5" height="15" fill="rgb(212,6,39)"/><text x="477.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.45%)</title><rect x="474" y="372" width="5" height="15" fill="rgb(222,219,33)"/><text x="477.00" y="382.50"></text></g><g><title>0x7f449bd96902 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="474" y="388" width="5" height="15" fill="rgb(248,153,22)"/><text x="477.00" y="398.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.45%)</title><rect x="485" y="356" width="5" height="15" fill="rgb(234,154,10)"/><text x="488.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.45%)</title><rect x="485" y="372" width="5" height="15" fill="rgb(220,199,12)"/><text x="488.00" y="382.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (55 samples, 24.89%)</title><rect x="202" y="68" width="293" height="15" fill="rgb(206,162,36)"/><text x="205.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (55 samples, 24.89%)</title><rect x="202" y="84" width="293" height="15" fill="rgb(243,200,52)"/><text x="205.00" y="94.50">setup_profile (bench_KNeighborsRegresso..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (55 samples, 24.89%)</title><rect x="202" y="100" width="293" height="15" fill="rgb(214,33,30)"/><text x="205.00" y="110.50">profile (bench_KNeighborsRegressor_defa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (55 samples, 24.89%)</title><rect x="202" y="116" width="293" height="15" fill="rgb(237,229,24)"/><text x="205.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (55 samples, 24.89%)</title><rect x="202" y="132" width="293" height="15" fill="rgb(224,152,7)"/><text x="205.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/commo..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (54 samples, 24.43%)</title><rect x="207" y="148" width="288" height="15" fill="rgb(246,217,18)"/><text x="210.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.p..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (54 samples, 24.43%)</title><rect x="207" y="164" width="288" height="15" fill="rgb(235,202,44)"/><text x="210.00" y="174.50">_run_sequence_runtime (mlprodict/onnxr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (52 samples, 23.53%)</title><rect x="218" y="180" width="277" height="15" fill="rgb(218,201,38)"/><text x="221.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 20.36%)</title><rect x="255" y="196" width="240" height="15" fill="rgb(229,66,20)"/><text x="258.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (20 samples, 9.05%)</title><rect x="389" y="212" width="106" height="15" fill="rgb(206,130,20)"/><text x="392.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (11 samples, 4.98%)</title><rect x="437" y="228" width="58" height="15" fill="rgb(245,69,0)"/><text x="440.00" y="238.50">_run (..</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (11 samples, 4.98%)</title><rect x="437" y="244" width="58" height="15" fill="rgb(224,112,37)"/><text x="440.00" y="254.50">mean (..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 4.52%)</title><rect x="442" y="260" width="53" height="15" fill="rgb(229,205,53)"/><text x="445.00" y="270.50">array..</text></g><g><title>mean (numpy/core/fromnumeric.py) (10 samples, 4.52%)</title><rect x="442" y="276" width="53" height="15" fill="rgb(254,31,8)"/><text x="445.00" y="286.50">mean ..</text></g><g><title>_mean (numpy/core/_methods.py) (9 samples, 4.07%)</title><rect x="447" y="292" width="48" height="15" fill="rgb(220,169,5)"/><text x="450.00" y="302.50">_mea..</text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 1.36%)</title><rect x="479" y="308" width="16" height="15" fill="rgb(252,160,38)"/><text x="482.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 1.36%)</title><rect x="479" y="324" width="16" height="15" fill="rgb(251,28,39)"/><text x="482.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (3 samples, 1.36%)</title><rect x="479" y="340" width="16" height="15" fill="rgb(246,22,36)"/><text x="482.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.45%)</title><rect x="490" y="356" width="5" height="15" fill="rgb(233,117,16)"/><text x="493.00" y="366.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.45%)</title><rect x="506" y="164" width="5" height="15" fill="rgb(232,177,19)"/><text x="509.00" y="174.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.45%)</title><rect x="506" y="180" width="5" height="15" fill="rgb(231,35,34)"/><text x="509.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.45%)</title><rect x="506" y="196" width="5" height="15" fill="rgb(225,201,39)"/><text x="509.00" y="206.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.90%)</title><rect x="511" y="196" width="11" height="15" fill="rgb(219,3,53)"/><text x="514.00" y="206.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.45%)</title><rect x="517" y="212" width="5" height="15" fill="rgb(210,141,4)"/><text x="520.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 1.36%)</title><rect x="511" y="180" width="16" height="15" fill="rgb(244,217,32)"/><text x="514.00" y="190.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.45%)</title><rect x="522" y="196" width="5" height="15" fill="rgb(235,149,4)"/><text x="525.00" y="206.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.45%)</title><rect x="522" y="212" width="5" height="15" fill="rgb(227,79,27)"/><text x="525.00" y="222.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.45%)</title><rect x="522" y="228" width="5" height="15" fill="rgb(214,62,28)"/><text x="525.00" y="238.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.45%)</title><rect x="527" y="180" width="6" height="15" fill="rgb(223,89,44)"/><text x="530.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.45%)</title><rect x="527" y="196" width="6" height="15" fill="rgb(213,47,18)"/><text x="530.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="527" y="212" width="6" height="15" fill="rgb(246,44,49)"/><text x="530.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="527" y="228" width="6" height="15" fill="rgb(248,182,36)"/><text x="530.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 2.26%)</title><rect x="511" y="164" width="27" height="15" fill="rgb(254,198,3)"/><text x="514.00" y="174.50">a..</text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.45%)</title><rect x="533" y="180" width="5" height="15" fill="rgb(227,61,24)"/><text x="536.00" y="190.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.45%)</title><rect x="559" y="180" width="6" height="15" fill="rgb(211,56,50)"/><text x="562.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="565" y="180" width="10" height="15" fill="rgb(225,120,30)"/><text x="568.00" y="190.50"></text></g><g><title>0x7f449bdace7a (libc-2.29.so) (1 samples, 0.45%)</title><rect x="570" y="196" width="5" height="15" fill="rgb(211,215,40)"/><text x="573.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="575" y="180" width="6" height="15" fill="rgb(216,188,9)"/><text x="578.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="581" y="180" width="5" height="15" fill="rgb(251,87,20)"/><text x="584.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (2 samples, 0.90%)</title><rect x="586" y="180" width="11" height="15" fill="rgb(230,37,18)"/><text x="589.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.45%)</title><rect x="591" y="196" width="6" height="15" fill="rgb(254,33,40)"/><text x="594.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (13 samples, 5.88%)</title><rect x="538" y="164" width="70" height="15" fill="rgb(231,116,48)"/><text x="541.00" y="174.50">check_a..</text></g><g><title>simplefilter (warnings.py) (2 samples, 0.90%)</title><rect x="597" y="180" width="11" height="15" fill="rgb(235,118,44)"/><text x="600.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.90%)</title><rect x="597" y="196" width="11" height="15" fill="rgb(205,152,37)"/><text x="600.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.45%)</title><rect x="624" y="196" width="5" height="15" fill="rgb(213,58,41)"/><text x="627.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.45%)</title><rect x="629" y="196" width="5" height="15" fill="rgb(230,150,18)"/><text x="632.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="634" y="196" width="6" height="15" fill="rgb(248,142,35)"/><text x="637.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="640" y="196" width="5" height="15" fill="rgb(205,219,0)"/><text x="643.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.45%)</title><rect x="640" y="212" width="5" height="15" fill="rgb(237,112,12)"/><text x="643.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.45%)</title><rect x="640" y="228" width="5" height="15" fill="rgb(234,168,54)"/><text x="643.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (6 samples, 2.71%)</title><rect x="618" y="180" width="32" height="15" fill="rgb(215,43,40)"/><text x="621.00" y="190.50">ch..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.45%)</title><rect x="645" y="196" width="5" height="15" fill="rgb(216,71,0)"/><text x="648.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="650" y="180" width="11" height="15" fill="rgb(209,111,14)"/><text x="653.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="656" y="196" width="5" height="15" fill="rgb(233,229,36)"/><text x="659.00" y="206.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.45%)</title><rect x="656" y="212" width="5" height="15" fill="rgb(219,172,11)"/><text x="659.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (2 samples, 0.90%)</title><rect x="661" y="180" width="11" height="15" fill="rgb(252,149,38)"/><text x="664.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.90%)</title><rect x="661" y="196" width="11" height="15" fill="rgb(238,90,8)"/><text x="664.00" y="206.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (4 samples, 1.81%)</title><rect x="677" y="196" width="21" height="15" fill="rgb(230,180,45)"/><text x="680.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (3 samples, 1.36%)</title><rect x="682" y="212" width="16" height="15" fill="rgb(252,228,42)"/><text x="685.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="688" y="228" width="10" height="15" fill="rgb(239,164,9)"/><text x="691.00" y="238.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (5 samples, 2.26%)</title><rect x="720" y="212" width="26" height="15" fill="rgb(229,38,17)"/><text x="723.00" y="222.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 1.81%)</title><rect x="725" y="228" width="21" height="15" fill="rgb(208,158,12)"/><text x="728.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (4 samples, 1.81%)</title><rect x="725" y="244" width="21" height="15" fill="rgb(246,193,20)"/><text x="728.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (4 samples, 1.81%)</title><rect x="725" y="260" width="21" height="15" fill="rgb(230,207,22)"/><text x="728.00" y="270.50"></text></g><g><title>array_argpartition (methods.c) (3 samples, 1.36%)</title><rect x="730" y="276" width="16" height="15" fill="rgb(245,174,29)"/><text x="733.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (2 samples, 0.90%)</title><rect x="736" y="292" width="10" height="15" fill="rgb(245,102,19)"/><text x="739.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (2 samples, 0.90%)</title><rect x="736" y="308" width="10" height="15" fill="rgb(251,21,25)"/><text x="739.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src) (1 samples, 0.45%)</title><rect x="741" y="324" width="5" height="15" fill="rgb(224,162,40)"/><text x="744.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src) (1 samples, 0.45%)</title><rect x="741" y="340" width="5" height="15" fill="rgb(223,19,12)"/><text x="744.00" y="350.50"></text></g><g><title>DOUBLE_LT (npysort_common.h) (1 samples, 0.45%)</title><rect x="741" y="356" width="5" height="15" fill="rgb(217,20,49)"/><text x="744.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="746" y="212" width="6" height="15" fill="rgb(224,179,29)"/><text x="749.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="746" y="228" width="6" height="15" fill="rgb(240,175,3)"/><text x="749.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="746" y="244" width="6" height="15" fill="rgb(233,175,18)"/><text x="749.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="752" y="212" width="5" height="15" fill="rgb(244,124,50)"/><text x="755.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="752" y="228" width="5" height="15" fill="rgb(214,188,13)"/><text x="755.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="752" y="244" width="5" height="15" fill="rgb(248,108,27)"/><text x="755.00" y="254.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (1 samples, 0.45%)</title><rect x="757" y="228" width="5" height="15" fill="rgb(206,91,23)"/><text x="760.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="762" y="276" width="6" height="15" fill="rgb(213,200,33)"/><text x="765.00" y="286.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c) (1 samples, 0.45%)</title><rect x="768" y="276" width="5" height="15" fill="rgb(205,79,33)"/><text x="771.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.45%)</title><rect x="773" y="276" width="5" height="15" fill="rgb(220,1,32)"/><text x="776.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.45%)</title><rect x="773" y="292" width="5" height="15" fill="rgb(217,37,49)"/><text x="776.00" y="302.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (4 samples, 1.81%)</title><rect x="762" y="244" width="22" height="15" fill="rgb(240,86,23)"/><text x="765.00" y="254.50">N..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.81%)</title><rect x="762" y="260" width="22" height="15" fill="rgb(247,197,21)"/><text x="765.00" y="270.50">N..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.45%)</title><rect x="778" y="276" width="6" height="15" fill="rgb(246,50,21)"/><text x="781.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (5 samples, 2.26%)</title><rect x="762" y="228" width="27" height="15" fill="rgb(223,69,42)"/><text x="765.00" y="238.50">P..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="784" y="244" width="5" height="15" fill="rgb(239,129,11)"/><text x="787.00" y="254.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.45%)</title><rect x="789" y="228" width="5" height="15" fill="rgb(218,52,50)"/><text x="792.00" y="238.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.45%)</title><rect x="789" y="244" width="5" height="15" fill="rgb(244,30,30)"/><text x="792.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (2 samples, 0.90%)</title><rect x="794" y="228" width="11" height="15" fill="rgb(250,28,13)"/><text x="797.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.90%)</title><rect x="794" y="244" width="11" height="15" fill="rgb(209,77,28)"/><text x="797.00" y="254.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (2 samples, 0.90%)</title><rect x="794" y="260" width="11" height="15" fill="rgb(210,202,14)"/><text x="797.00" y="270.50"></text></g><g><title>multi_DECREF (mapping.c) (1 samples, 0.45%)</title><rect x="805" y="244" width="5" height="15" fill="rgb(225,11,35)"/><text x="808.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (11 samples, 4.98%)</title><rect x="757" y="212" width="59" height="15" fill="rgb(247,142,4)"/><text x="760.00" y="222.50">array_..</text></g><g><title>prepare_index (mapping.c) (2 samples, 0.90%)</title><rect x="805" y="228" width="11" height="15" fill="rgb(254,51,29)"/><text x="808.00" y="238.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.45%)</title><rect x="810" y="244" width="6" height="15" fill="rgb(220,64,40)"/><text x="813.00" y="254.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (23 samples, 10.41%)</title><rect x="698" y="196" width="123" height="15" fill="rgb(229,157,11)"/><text x="701.00" y="206.50">_kneighbors_red..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="816" y="212" width="5" height="15" fill="rgb(228,102,4)"/><text x="819.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="816" y="228" width="5" height="15" fill="rgb(234,181,42)"/><text x="819.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.45%)</title><rect x="816" y="244" width="5" height="15" fill="rgb(207,194,4)"/><text x="819.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="821" y="196" width="16" height="15" fill="rgb(243,139,39)"/><text x="824.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.45%)</title><rect x="832" y="212" width="5" height="15" fill="rgb(247,84,39)"/><text x="835.00" y="222.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py) (2 samples, 0.90%)</title><rect x="837" y="196" width="11" height="15" fill="rgb(238,212,36)"/><text x="840.00" y="206.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py) (2 samples, 0.90%)</title><rect x="848" y="244" width="10" height="15" fill="rgb(253,222,38)"/><text x="851.00" y="254.50"></text></g><g><title>in_main_thread (joblib/_parallel_backends.py) (2 samples, 0.90%)</title><rect x="848" y="260" width="10" height="15" fill="rgb(205,12,51)"/><text x="851.00" y="270.50"></text></g><g><title>current_thread (threading.py) (1 samples, 0.45%)</title><rect x="853" y="276" width="5" height="15" fill="rgb(216,181,10)"/><text x="856.00" y="286.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (4 samples, 1.81%)</title><rect x="848" y="228" width="21" height="15" fill="rgb(227,179,27)"/><text x="851.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.90%)</title><rect x="858" y="244" width="11" height="15" fill="rgb(233,85,16)"/><text x="861.00" y="254.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="864" y="260" width="5" height="15" fill="rgb(209,116,25)"/><text x="867.00" y="270.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.45%)</title><rect x="890" y="308" width="6" height="15" fill="rgb(231,123,12)"/><text x="893.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.45%)</title><rect x="890" y="324" width="6" height="15" fill="rgb(222,122,21)"/><text x="893.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.45%)</title><rect x="890" y="340" width="6" height="15" fill="rgb(210,107,17)"/><text x="893.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.45%)</title><rect x="890" y="356" width="6" height="15" fill="rgb(228,54,26)"/><text x="893.00" y="366.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c) (1 samples, 0.45%)</title><rect x="890" y="372" width="6" height="15" fill="rgb(235,53,25)"/><text x="893.00" y="382.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.90%)</title><rect x="890" y="292" width="11" height="15" fill="rgb(212,149,49)"/><text x="893.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="896" y="308" width="5" height="15" fill="rgb(229,215,44)"/><text x="899.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="896" y="324" width="5" height="15" fill="rgb(227,27,2)"/><text x="899.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="896" y="340" width="5" height="15" fill="rgb(228,97,8)"/><text x="899.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="901" y="292" width="6" height="15" fill="rgb(227,173,2)"/><text x="904.00" y="302.50"></text></g><g><title>array_multiply (number.c) (4 samples, 1.81%)</title><rect x="890" y="244" width="22" height="15" fill="rgb(245,130,11)"/><text x="893.00" y="254.50">a..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.81%)</title><rect x="890" y="260" width="22" height="15" fill="rgb(251,47,13)"/><text x="893.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.81%)</title><rect x="890" y="276" width="22" height="15" fill="rgb(236,74,28)"/><text x="893.00" y="286.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.45%)</title><rect x="907" y="292" width="5" height="15" fill="rgb(247,207,33)"/><text x="910.00" y="302.50"></text></g><g><title>_return_float_dtype (sklearn/metrics/pairwise.py) (1 samples, 0.45%)</title><rect x="912" y="260" width="5" height="15" fill="rgb(249,164,13)"/><text x="915.00" y="270.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.45%)</title><rect x="955" y="276" width="5" height="15" fill="rgb(227,1,27)"/><text x="958.00" y="286.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.90%)</title><rect x="960" y="276" width="11" height="15" fill="rgb(230,123,37)"/><text x="963.00" y="286.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.45%)</title><rect x="971" y="276" width="5" height="15" fill="rgb(209,214,50)"/><text x="974.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="976" y="276" width="16" height="15" fill="rgb(237,173,12)"/><text x="979.00" y="286.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="987" y="292" width="5" height="15" fill="rgb(236,155,15)"/><text x="990.00" y="302.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.45%)</title><rect x="997" y="292" width="6" height="15" fill="rgb(208,137,30)"/><text x="1000.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 1.36%)</title><rect x="992" y="276" width="16" height="15" fill="rgb(240,30,30)"/><text x="995.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.45%)</title><rect x="1003" y="292" width="5" height="15" fill="rgb(215,7,25)"/><text x="1006.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.45%)</title><rect x="1003" y="308" width="5" height="15" fill="rgb(243,98,43)"/><text x="1006.00" y="318.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (19 samples, 8.60%)</title><rect x="912" y="244" width="101" height="15" fill="rgb(253,29,2)"/><text x="915.00" y="254.50">check_pairwi..</text></g><g><title>check_array (sklearn/utils/validation.py) (18 samples, 8.14%)</title><rect x="917" y="260" width="96" height="15" fill="rgb(244,63,50)"/><text x="920.00" y="270.50">check_array..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.45%)</title><rect x="1008" y="276" width="5" height="15" fill="rgb(224,41,44)"/><text x="1011.00" y="286.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.45%)</title><rect x="1008" y="292" width="5" height="15" fill="rgb(239,221,31)"/><text x="1011.00" y="302.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (2 samples, 0.90%)</title><rect x="1013" y="244" width="11" height="15" fill="rgb(221,216,33)"/><text x="1016.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="1019" y="260" width="5" height="15" fill="rgb(215,179,47)"/><text x="1022.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="1019" y="276" width="5" height="15" fill="rgb(224,183,36)"/><text x="1022.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (1 samples, 0.45%)</title><rect x="1019" y="292" width="5" height="15" fill="rgb(250,191,54)"/><text x="1022.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1019" y="308" width="5" height="15" fill="rgb(249,72,17)"/><text x="1022.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (1 samples, 0.45%)</title><rect x="1019" y="324" width="5" height="15" fill="rgb(244,159,42)"/><text x="1022.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src) (1 samples, 0.45%)</title><rect x="1019" y="340" width="5" height="15" fill="rgb(226,183,9)"/><text x="1022.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src) (1 samples, 0.45%)</title><rect x="1019" y="356" width="5" height="15" fill="rgb(213,185,23)"/><text x="1022.00" y="366.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (2 samples, 0.90%)</title><rect x="1024" y="244" width="11" height="15" fill="rgb(225,137,49)"/><text x="1027.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 0.90%)</title><rect x="1024" y="260" width="11" height="15" fill="rgb(225,201,32)"/><text x="1027.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.90%)</title><rect x="1024" y="276" width="11" height="15" fill="rgb(250,220,45)"/><text x="1027.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (2 samples, 0.90%)</title><rect x="1024" y="292" width="11" height="15" fill="rgb(251,133,39)"/><text x="1027.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.45%)</title><rect x="1029" y="308" width="6" height="15" fill="rgb(207,17,30)"/><text x="1032.00" y="318.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.45%)</title><rect x="1029" y="324" width="6" height="15" fill="rgb(233,13,12)"/><text x="1032.00" y="334.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.45%)</title><rect x="1029" y="340" width="6" height="15" fill="rgb(211,54,51)"/><text x="1032.00" y="350.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="1035" y="276" width="5" height="15" fill="rgb(217,185,8)"/><text x="1038.00" y="286.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.45%)</title><rect x="1040" y="276" width="5" height="15" fill="rgb(217,176,7)"/><text x="1043.00" y="286.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.45%)</title><rect x="1051" y="324" width="5" height="15" fill="rgb(229,133,4)"/><text x="1054.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1051" y="340" width="5" height="15" fill="rgb(253,94,7)"/><text x="1054.00" y="350.50"></text></g><g><title>0x7f449bd4e7a5 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1051" y="356" width="5" height="15" fill="rgb(252,212,6)"/><text x="1054.00" y="366.50"></text></g><g><title>0x7f449bd4ea37 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1051" y="372" width="5" height="15" fill="rgb(244,44,5)"/><text x="1054.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.45%)</title><rect x="1056" y="340" width="5" height="15" fill="rgb(214,66,2)"/><text x="1059.00" y="350.50"></text></g><g><title>floordiv_128_64 (npy_extint128.h) (1 samples, 0.45%)</title><rect x="1056" y="356" width="5" height="15" fill="rgb(254,172,25)"/><text x="1059.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h) (1 samples, 0.45%)</title><rect x="1056" y="372" width="5" height="15" fill="rgb(236,193,52)"/><text x="1059.00" y="382.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 1.36%)</title><rect x="1051" y="292" width="16" height="15" fill="rgb(212,113,4)"/><text x="1054.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 1.36%)</title><rect x="1051" y="308" width="16" height="15" fill="rgb(239,202,25)"/><text x="1054.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (2 samples, 0.90%)</title><rect x="1056" y="324" width="11" height="15" fill="rgb(216,45,53)"/><text x="1059.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1061" y="340" width="6" height="15" fill="rgb(224,79,3)"/><text x="1064.00" y="350.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (76 samples, 34.39%)</title><rect x="672" y="180" width="405" height="15" fill="rgb(246,4,20)"/><text x="675.00" y="190.50">pairwise_distances_chunked (sklearn/metrics/pairwise.py)</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (43 samples, 19.46%)</title><rect x="848" y="196" width="229" height="15" fill="rgb(229,152,25)"/><text x="851.00" y="206.50">pairwise_distances (sklearn/me..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (43 samples, 19.46%)</title><rect x="848" y="212" width="229" height="15" fill="rgb(235,183,41)"/><text x="851.00" y="222.50">_parallel_pairwise (sklearn/me..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (39 samples, 17.65%)</title><rect x="869" y="228" width="208" height="15" fill="rgb(254,197,41)"/><text x="872.00" y="238.50">euclidean_distances (sklear..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 3.62%)</title><rect x="1035" y="244" width="42" height="15" fill="rgb(242,6,14)"/><text x="1038.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (8 samples, 3.62%)</title><rect x="1035" y="260" width="42" height="15" fill="rgb(251,199,36)"/><text x="1038.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (6 samples, 2.71%)</title><rect x="1045" y="276" width="32" height="15" fill="rgb(224,117,3)"/><text x="1048.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.90%)</title><rect x="1067" y="292" width="10" height="15" fill="rgb(211,90,35)"/><text x="1070.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (2 samples, 0.90%)</title><rect x="1067" y="308" width="10" height="15" fill="rgb(234,122,7)"/><text x="1070.00" y="318.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.45%)</title><rect x="1072" y="324" width="5" height="15" fill="rgb(209,19,5)"/><text x="1075.00" y="334.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;) (3 samples, 1.36%)</title><rect x="1088" y="228" width="16" height="15" fill="rgb(226,47,53)"/><text x="1091.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.90%)</title><rect x="1093" y="244" width="11" height="15" fill="rgb(243,91,1)"/><text x="1096.00" y="254.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py) (2 samples, 0.90%)</title><rect x="1093" y="260" width="11" height="15" fill="rgb(240,69,16)"/><text x="1096.00" y="270.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py) (2 samples, 0.90%)</title><rect x="1093" y="276" width="11" height="15" fill="rgb(233,13,10)"/><text x="1096.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1099" y="292" width="5" height="15" fill="rgb(239,117,1)"/><text x="1102.00" y="302.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (94 samples, 42.53%)</title><rect x="608" y="164" width="501" height="15" fill="rgb(248,136,16)"/><text x="611.00" y="174.50">kneighbors (sklearn/neighbors/_base.py)</text></g><g><title>vstack (&lt;__array_function__ internals&gt;) (6 samples, 2.71%)</title><rect x="1077" y="180" width="32" height="15" fill="rgb(232,65,6)"/><text x="1080.00" y="190.50">vs..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 2.71%)</title><rect x="1077" y="196" width="32" height="15" fill="rgb(236,229,26)"/><text x="1080.00" y="206.50">ar..</text></g><g><title>vstack (numpy/core/shape_base.py) (6 samples, 2.71%)</title><rect x="1077" y="212" width="32" height="15" fill="rgb(232,17,28)"/><text x="1080.00" y="222.50">vs..</text></g><g><title>concatenate (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="1104" y="228" width="5" height="15" fill="rgb(234,67,38)"/><text x="1107.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="1104" y="244" width="5" height="15" fill="rgb(205,26,4)"/><text x="1107.00" y="254.50"></text></g><g><title>array_concatenate (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1104" y="260" width="5" height="15" fill="rgb(244,1,49)"/><text x="1107.00" y="270.50"></text></g><g><title>0x7f449bdac757 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1104" y="276" width="5" height="15" fill="rgb(232,92,21)"/><text x="1107.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.45%)</title><rect x="1125" y="276" width="6" height="15" fill="rgb(224,27,30)"/><text x="1128.00" y="286.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.45%)</title><rect x="1125" y="292" width="6" height="15" fill="rgb(228,217,19)"/><text x="1128.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="1125" y="308" width="6" height="15" fill="rgb(245,179,45)"/><text x="1128.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 1.36%)</title><rect x="1120" y="244" width="16" height="15" fill="rgb(251,129,33)"/><text x="1123.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 1.36%)</title><rect x="1120" y="260" width="16" height="15" fill="rgb(209,186,21)"/><text x="1123.00" y="270.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1131" y="276" width="5" height="15" fill="rgb(213,101,6)"/><text x="1134.00" y="286.50"></text></g><g><title>PyArray_CastingConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="1131" y="292" width="5" height="15" fill="rgb(252,97,27)"/><text x="1134.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 1.81%)</title><rect x="1120" y="228" width="21" height="15" fill="rgb(247,217,35)"/><text x="1123.00" y="238.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1136" y="244" width="5" height="15" fill="rgb(216,50,25)"/><text x="1139.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.90%)</title><rect x="1141" y="244" width="11" height="15" fill="rgb(217,75,36)"/><text x="1144.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.90%)</title><rect x="1141" y="260" width="11" height="15" fill="rgb(230,2,18)"/><text x="1144.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.90%)</title><rect x="1141" y="276" width="11" height="15" fill="rgb(251,84,37)"/><text x="1144.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.90%)</title><rect x="1141" y="292" width="11" height="15" fill="rgb(223,214,15)"/><text x="1144.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.90%)</title><rect x="1141" y="308" width="11" height="15" fill="rgb(252,169,44)"/><text x="1144.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.45%)</title><rect x="1163" y="260" width="5" height="15" fill="rgb(222,18,11)"/><text x="1166.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.90%)</title><rect x="1168" y="308" width="11" height="15" fill="rgb(227,175,47)"/><text x="1171.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.36%)</title><rect x="1168" y="292" width="16" height="15" fill="rgb(239,169,0)"/><text x="1171.00" y="302.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.45%)</title><rect x="1179" y="308" width="5" height="15" fill="rgb(218,211,12)"/><text x="1182.00" y="318.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.45%)</title><rect x="1179" y="324" width="5" height="15" fill="rgb(218,142,0)"/><text x="1182.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.45%)</title><rect x="1179" y="340" width="5" height="15" fill="rgb(242,191,44)"/><text x="1182.00" y="350.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.45%)</title><rect x="1179" y="356" width="5" height="15" fill="rgb(250,166,11)"/><text x="1182.00" y="366.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,72,35)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (219 samples, 99.10%)</title><rect x="20" y="52" width="1170" height="15" fill="rgb(235,63,15)"/><text x="23.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py)</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (130 samples, 58.82%)</title><rect x="495" y="68" width="695" height="15" fill="rgb(222,219,21)"/><text x="498.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (130 samples, 58.82%)</title><rect x="495" y="84" width="695" height="15" fill="rgb(252,94,46)"/><text x="498.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_flo..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdist.py) (130 samples, 58.82%)</title><rect x="495" y="100" width="695" height="15" fill="rgb(242,179,2)"/><text x="498.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_4_12_float_cdi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 58.82%)</title><rect x="495" y="116" width="695" height="15" fill="rgb(239,24,3)"/><text x="498.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (130 samples, 58.82%)</title><rect x="495" y="132" width="695" height="15" fill="rgb(226,205,47)"/><text x="498.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neighbors/_regression.py) (129 samples, 58.37%)</title><rect x="501" y="148" width="689" height="15" fill="rgb(238,12,44)"/><text x="504.00" y="158.50">predict (sklearn/neighbors/_regression.py)</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (15 samples, 6.79%)</title><rect x="1109" y="164" width="81" height="15" fill="rgb(218,212,22)"/><text x="1112.00" y="174.50">mean (&lt;__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (15 samples, 6.79%)</title><rect x="1109" y="180" width="81" height="15" fill="rgb(207,25,31)"/><text x="1112.00" y="190.50">array_imp..</text></g><g><title>mean (numpy/core/fromnumeric.py) (15 samples, 6.79%)</title><rect x="1109" y="196" width="81" height="15" fill="rgb(226,207,31)"/><text x="1112.00" y="206.50">mean (num..</text></g><g><title>_mean (numpy/core/_methods.py) (14 samples, 6.33%)</title><rect x="1115" y="212" width="75" height="15" fill="rgb(234,211,35)"/><text x="1118.00" y="222.50">_mean (n..</text></g><g><title>ufunc_reduce (ufunc_object.c) (9 samples, 4.07%)</title><rect x="1141" y="228" width="49" height="15" fill="rgb(221,155,2)"/><text x="1144.00" y="238.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (7 samples, 3.17%)</title><rect x="1152" y="244" width="38" height="15" fill="rgb(211,137,38)"/><text x="1155.00" y="254.50">PyU..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 1.81%)</title><rect x="1168" y="260" width="22" height="15" fill="rgb(235,13,46)"/><text x="1171.00" y="270.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 1.81%)</title><rect x="1168" y="276" width="22" height="15" fill="rgb(240,126,51)"/><text x="1171.00" y="286.50">P..</text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.45%)</title><rect x="1184" y="292" width="6" height="15" fill="rgb(224,21,12)"/><text x="1187.00" y="302.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.45%)</title><rect x="1184" y="308" width="6" height="15" fill="rgb(248,40,19)"/><text x="1187.00" y="318.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="1184" y="324" width="6" height="15" fill="rgb(230,18,13)"/><text x="1187.00" y="334.50"></text></g></g></svg>