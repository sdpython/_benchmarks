<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>0x7ff2644b32cd (?) (1 samples, 0.45%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(247,135,17)"/><text x="13.00" y="606.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(241,165,8)"/><text x="18.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(240,102,42)"/><text x="18.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(242,148,46)"/><text x="18.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(218,128,27)"/><text x="18.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(243,143,35)"/><text x="18.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(234,142,44)"/><text x="18.00" y="958.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.45%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(248,151,48)"/><text x="18.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.89%)</title><rect x="15" y="836" width="10" height="15" fill="rgb(220,94,25)"/><text x="18.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.89%)</title><rect x="15" y="852" width="10" height="15" fill="rgb(215,194,16)"/><text x="18.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="868" width="5" height="15" fill="rgb(252,82,22)"/><text x="23.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="20" y="884" width="5" height="15" fill="rgb(233,78,6)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.45%)</title><rect x="25" y="916" width="6" height="15" fill="rgb(253,29,1)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.45%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(245,159,48)"/><text x="34.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(248,12,25)"/><text x="34.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(219,206,21)"/><text x="34.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(243,44,16)"/><text x="34.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(252,51,5)"/><text x="34.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(211,26,2)"/><text x="34.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(238,143,33)"/><text x="34.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(249,222,5)"/><text x="34.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(217,42,31)"/><text x="34.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(229,113,3)"/><text x="34.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(210,65,37)"/><text x="34.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(249,142,28)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 2.68%)</title><rect x="10" y="292" width="31" height="15" fill="rgb(220,199,23)"/><text x="13.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="308" width="31" height="15" fill="rgb(213,209,20)"/><text x="13.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="324" width="31" height="15" fill="rgb(227,141,15)"/><text x="13.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="340" width="31" height="15" fill="rgb(233,222,14)"/><text x="13.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="10" y="356" width="31" height="15" fill="rgb(243,85,11)"/><text x="13.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="372" width="31" height="15" fill="rgb(246,172,13)"/><text x="13.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 2.68%)</title><rect x="10" y="388" width="31" height="15" fill="rgb(219,223,33)"/><text x="13.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="404" width="31" height="15" fill="rgb(220,164,10)"/><text x="13.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="420" width="31" height="15" fill="rgb(220,79,42)"/><text x="13.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="436" width="31" height="15" fill="rgb(220,192,33)"/><text x="13.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="10" y="452" width="31" height="15" fill="rgb(215,140,0)"/><text x="13.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="468" width="31" height="15" fill="rgb(253,145,21)"/><text x="13.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 2.68%)</title><rect x="10" y="484" width="31" height="15" fill="rgb(250,20,10)"/><text x="13.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="500" width="31" height="15" fill="rgb(220,188,19)"/><text x="13.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="516" width="31" height="15" fill="rgb(238,177,51)"/><text x="13.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="532" width="31" height="15" fill="rgb(241,144,7)"/><text x="13.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="10" y="548" width="31" height="15" fill="rgb(231,170,6)"/><text x="13.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="10" y="564" width="31" height="15" fill="rgb(210,22,19)"/><text x="13.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 2.68%)</title><rect x="10" y="580" width="31" height="15" fill="rgb(213,43,9)"/><text x="13.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="596" width="26" height="15" fill="rgb(217,110,31)"/><text x="18.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="612" width="26" height="15" fill="rgb(237,216,11)"/><text x="18.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="628" width="26" height="15" fill="rgb(242,132,34)"/><text x="18.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="644" width="26" height="15" fill="rgb(206,30,17)"/><text x="18.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="660" width="26" height="15" fill="rgb(220,199,31)"/><text x="18.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="676" width="26" height="15" fill="rgb(221,187,24)"/><text x="18.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="15" y="692" width="26" height="15" fill="rgb(212,158,13)"/><text x="18.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="708" width="26" height="15" fill="rgb(252,72,44)"/><text x="18.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 2.23%)</title><rect x="15" y="724" width="26" height="15" fill="rgb(206,109,21)"/><text x="18.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="740" width="26" height="15" fill="rgb(214,106,54)"/><text x="18.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="756" width="26" height="15" fill="rgb(238,59,23)"/><text x="18.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="772" width="26" height="15" fill="rgb(229,21,30)"/><text x="18.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="15" y="788" width="26" height="15" fill="rgb(209,150,19)"/><text x="18.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="15" y="804" width="26" height="15" fill="rgb(216,226,40)"/><text x="18.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 2.23%)</title><rect x="15" y="820" width="26" height="15" fill="rgb(211,27,53)"/><text x="18.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="25" y="836" width="16" height="15" fill="rgb(240,94,36)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="25" y="852" width="16" height="15" fill="rgb(234,150,29)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="25" y="868" width="16" height="15" fill="rgb(218,25,25)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.34%)</title><rect x="25" y="884" width="16" height="15" fill="rgb(214,223,19)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="25" y="900" width="16" height="15" fill="rgb(253,97,33)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="36" y="916" width="5" height="15" fill="rgb(228,81,39)"/><text x="39.00" y="926.50"></text></g><g><title>Version (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="36" y="932" width="5" height="15" fill="rgb(242,166,1)"/><text x="39.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="36" y="948" width="5" height="15" fill="rgb(230,9,51)"/><text x="39.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="36" y="964" width="5" height="15" fill="rgb(206,217,15)"/><text x="39.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="36" y="980" width="5" height="15" fill="rgb(248,121,20)"/><text x="39.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="996" width="5" height="15" fill="rgb(243,85,22)"/><text x="39.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="1012" width="5" height="15" fill="rgb(252,6,28)"/><text x="39.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="1028" width="5" height="15" fill="rgb(254,205,25)"/><text x="39.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="1044" width="5" height="15" fill="rgb(215,130,3)"/><text x="39.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="1060" width="5" height="15" fill="rgb(238,66,37)"/><text x="39.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="1076" width="5" height="15" fill="rgb(225,145,52)"/><text x="39.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="36" y="1092" width="5" height="15" fill="rgb(213,180,18)"/><text x="39.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.12%)</title><rect x="10" y="196" width="36" height="15" fill="rgb(245,157,20)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.12%)</title><rect x="10" y="212" width="36" height="15" fill="rgb(210,18,27)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.12%)</title><rect x="10" y="228" width="36" height="15" fill="rgb(230,114,48)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.12%)</title><rect x="10" y="244" width="36" height="15" fill="rgb(236,138,9)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 3.12%)</title><rect x="10" y="260" width="36" height="15" fill="rgb(215,180,3)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.12%)</title><rect x="10" y="276" width="36" height="15" fill="rgb(213,156,12)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.45%)</title><rect x="41" y="292" width="5" height="15" fill="rgb(230,117,15)"/><text x="44.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="308" width="5" height="15" fill="rgb(229,25,1)"/><text x="44.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="324" width="5" height="15" fill="rgb(206,177,24)"/><text x="44.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="340" width="5" height="15" fill="rgb(208,173,11)"/><text x="44.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="356" width="5" height="15" fill="rgb(226,182,26)"/><text x="44.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="372" width="5" height="15" fill="rgb(208,119,15)"/><text x="44.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.45%)</title><rect x="41" y="388" width="5" height="15" fill="rgb(239,178,15)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="404" width="5" height="15" fill="rgb(209,83,54)"/><text x="44.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="420" width="5" height="15" fill="rgb(237,221,39)"/><text x="44.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="436" width="5" height="15" fill="rgb(230,70,31)"/><text x="44.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="452" width="5" height="15" fill="rgb(228,196,36)"/><text x="44.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="468" width="5" height="15" fill="rgb(236,87,25)"/><text x="44.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.45%)</title><rect x="41" y="484" width="5" height="15" fill="rgb(210,67,6)"/><text x="44.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="500" width="5" height="15" fill="rgb(246,217,39)"/><text x="44.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="516" width="5" height="15" fill="rgb(250,89,11)"/><text x="44.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="532" width="5" height="15" fill="rgb(252,180,42)"/><text x="44.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="548" width="5" height="15" fill="rgb(234,51,24)"/><text x="44.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="564" width="5" height="15" fill="rgb(227,104,9)"/><text x="44.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.45%)</title><rect x="41" y="580" width="5" height="15" fill="rgb(254,82,18)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="596" width="5" height="15" fill="rgb(217,142,36)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="612" width="5" height="15" fill="rgb(224,163,20)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="628" width="5" height="15" fill="rgb(232,3,45)"/><text x="44.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="644" width="5" height="15" fill="rgb(235,63,51)"/><text x="44.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="660" width="5" height="15" fill="rgb(242,111,19)"/><text x="44.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.45%)</title><rect x="41" y="676" width="5" height="15" fill="rgb(237,89,47)"/><text x="44.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="692" width="5" height="15" fill="rgb(230,100,9)"/><text x="44.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="708" width="5" height="15" fill="rgb(209,190,14)"/><text x="44.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="41" y="724" width="5" height="15" fill="rgb(211,202,41)"/><text x="44.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="740" width="5" height="15" fill="rgb(247,219,9)"/><text x="44.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="756" width="5" height="15" fill="rgb(247,221,19)"/><text x="44.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="41" y="772" width="5" height="15" fill="rgb(224,194,31)"/><text x="44.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1124" width="6" height="15" fill="rgb(235,116,2)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1140" width="6" height="15" fill="rgb(237,79,21)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1156" width="6" height="15" fill="rgb(254,119,33)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="46" y="1172" width="6" height="15" fill="rgb(210,227,25)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1188" width="6" height="15" fill="rgb(239,192,53)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.45%)</title><rect x="46" y="1204" width="6" height="15" fill="rgb(212,27,27)"/><text x="49.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1220" width="6" height="15" fill="rgb(245,169,1)"/><text x="49.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1236" width="6" height="15" fill="rgb(240,31,49)"/><text x="49.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1252" width="6" height="15" fill="rgb(233,154,12)"/><text x="49.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="46" y="1268" width="6" height="15" fill="rgb(217,43,10)"/><text x="49.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="46" y="1284" width="6" height="15" fill="rgb(208,31,21)"/><text x="49.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.45%)</title><rect x="46" y="1300" width="6" height="15" fill="rgb(215,222,2)"/><text x="49.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.45%)</title><rect x="46" y="1316" width="6" height="15" fill="rgb(251,125,1)"/><text x="49.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.45%)</title><rect x="46" y="1332" width="6" height="15" fill="rgb(244,107,29)"/><text x="49.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.45%)</title><rect x="46" y="1348" width="6" height="15" fill="rgb(231,96,53)"/><text x="49.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.45%)</title><rect x="46" y="1364" width="6" height="15" fill="rgb(210,107,28)"/><text x="49.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.45%)</title><rect x="46" y="1380" width="6" height="15" fill="rgb(232,154,32)"/><text x="49.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1476" width="5" height="15" fill="rgb(226,166,44)"/><text x="55.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1492" width="5" height="15" fill="rgb(247,44,47)"/><text x="55.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1508" width="5" height="15" fill="rgb(224,128,46)"/><text x="55.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="1524" width="5" height="15" fill="rgb(233,47,49)"/><text x="55.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1540" width="5" height="15" fill="rgb(234,167,16)"/><text x="55.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.45%)</title><rect x="52" y="1556" width="5" height="15" fill="rgb(246,91,17)"/><text x="55.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.45%)</title><rect x="52" y="1572" width="5" height="15" fill="rgb(236,140,30)"/><text x="55.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1588" width="5" height="15" fill="rgb(209,47,12)"/><text x="55.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1604" width="5" height="15" fill="rgb(232,102,51)"/><text x="55.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1620" width="5" height="15" fill="rgb(205,90,22)"/><text x="55.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="1636" width="5" height="15" fill="rgb(205,75,23)"/><text x="55.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1652" width="5" height="15" fill="rgb(235,144,36)"/><text x="55.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.45%)</title><rect x="52" y="1668" width="5" height="15" fill="rgb(215,192,42)"/><text x="55.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1684" width="5" height="15" fill="rgb(227,129,18)"/><text x="55.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1700" width="5" height="15" fill="rgb(212,152,14)"/><text x="55.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1716" width="5" height="15" fill="rgb(224,183,50)"/><text x="55.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="1732" width="5" height="15" fill="rgb(244,2,5)"/><text x="55.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1748" width="5" height="15" fill="rgb(231,214,9)"/><text x="55.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="52" y="1764" width="5" height="15" fill="rgb(226,156,53)"/><text x="55.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1780" width="5" height="15" fill="rgb(237,224,20)"/><text x="55.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1796" width="5" height="15" fill="rgb(253,145,25)"/><text x="55.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1812" width="5" height="15" fill="rgb(237,228,19)"/><text x="55.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="1828" width="5" height="15" fill="rgb(233,66,15)"/><text x="55.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="1844" width="5" height="15" fill="rgb(231,15,27)"/><text x="55.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1860" width="5" height="15" fill="rgb(239,53,22)"/><text x="55.00" y="1870.50"></text></g><g><title>CodeGenerator (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1876" width="5" height="15" fill="rgb(214,216,6)"/><text x="55.00" y="1886.50"></text></g><g><title>optimizeconst (jinja2/compiler.py) (1 samples, 0.45%)</title><rect x="52" y="1892" width="5" height="15" fill="rgb(222,85,31)"/><text x="55.00" y="1902.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.45%)</title><rect x="57" y="1492" width="5" height="15" fill="rgb(242,1,30)"/><text x="60.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.45%)</title><rect x="57" y="1508" width="5" height="15" fill="rgb(213,103,22)"/><text x="60.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.45%)</title><rect x="57" y="1524" width="5" height="15" fill="rgb(217,132,14)"/><text x="60.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.45%)</title><rect x="57" y="1540" width="5" height="15" fill="rgb(239,65,36)"/><text x="60.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.45%)</title><rect x="57" y="1556" width="5" height="15" fill="rgb(211,47,48)"/><text x="60.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.45%)</title><rect x="57" y="1572" width="5" height="15" fill="rgb(239,105,23)"/><text x="60.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.45%)</title><rect x="57" y="1588" width="5" height="15" fill="rgb(240,1,12)"/><text x="60.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.45%)</title><rect x="57" y="1604" width="5" height="15" fill="rgb(216,175,11)"/><text x="60.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="484" width="21" height="15" fill="rgb(208,148,8)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="500" width="21" height="15" fill="rgb(244,131,11)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="516" width="21" height="15" fill="rgb(206,209,53)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="532" width="21" height="15" fill="rgb(252,145,2)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="46" y="548" width="21" height="15" fill="rgb(230,136,49)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="564" width="21" height="15" fill="rgb(228,69,38)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.79%)</title><rect x="46" y="580" width="21" height="15" fill="rgb(208,214,52)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="596" width="21" height="15" fill="rgb(247,218,10)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="612" width="21" height="15" fill="rgb(225,95,38)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="628" width="21" height="15" fill="rgb(244,44,54)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="46" y="644" width="21" height="15" fill="rgb(205,215,10)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="660" width="21" height="15" fill="rgb(218,32,31)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.79%)</title><rect x="46" y="676" width="21" height="15" fill="rgb(208,27,16)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="692" width="21" height="15" fill="rgb(254,138,26)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="708" width="21" height="15" fill="rgb(208,71,1)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="724" width="21" height="15" fill="rgb(245,16,18)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="46" y="740" width="21" height="15" fill="rgb(247,188,27)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="756" width="21" height="15" fill="rgb(234,146,46)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.79%)</title><rect x="46" y="772" width="21" height="15" fill="rgb(218,209,39)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="788" width="21" height="15" fill="rgb(226,178,17)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="804" width="21" height="15" fill="rgb(246,184,7)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="820" width="21" height="15" fill="rgb(242,135,15)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="46" y="836" width="21" height="15" fill="rgb(214,197,7)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="852" width="21" height="15" fill="rgb(246,156,43)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.79%)</title><rect x="46" y="868" width="21" height="15" fill="rgb(207,103,25)"/><text x="49.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="884" width="21" height="15" fill="rgb(229,80,52)"/><text x="49.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="900" width="21" height="15" fill="rgb(208,135,38)"/><text x="49.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="916" width="21" height="15" fill="rgb(210,97,24)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="932" width="21" height="15" fill="rgb(226,102,2)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="948" width="21" height="15" fill="rgb(252,136,54)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="964" width="21" height="15" fill="rgb(233,51,18)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="46" y="980" width="21" height="15" fill="rgb(248,157,52)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="996" width="21" height="15" fill="rgb(225,8,40)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.79%)</title><rect x="46" y="1012" width="21" height="15" fill="rgb(238,55,14)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="1028" width="21" height="15" fill="rgb(234,58,40)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="1044" width="21" height="15" fill="rgb(246,158,0)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="1060" width="21" height="15" fill="rgb(242,3,33)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="46" y="1076" width="21" height="15" fill="rgb(242,132,12)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="46" y="1092" width="21" height="15" fill="rgb(209,71,51)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.79%)</title><rect x="46" y="1108" width="21" height="15" fill="rgb(219,38,10)"/><text x="49.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1124" width="15" height="15" fill="rgb(224,96,51)"/><text x="55.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1140" width="15" height="15" fill="rgb(222,10,17)"/><text x="55.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1156" width="15" height="15" fill="rgb(207,22,18)"/><text x="55.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1172" width="15" height="15" fill="rgb(213,19,2)"/><text x="55.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1188" width="15" height="15" fill="rgb(219,229,21)"/><text x="55.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.34%)</title><rect x="52" y="1204" width="15" height="15" fill="rgb(214,82,26)"/><text x="55.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1220" width="15" height="15" fill="rgb(232,123,26)"/><text x="55.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.34%)</title><rect x="52" y="1236" width="15" height="15" fill="rgb(217,32,44)"/><text x="55.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1252" width="15" height="15" fill="rgb(211,106,22)"/><text x="55.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1268" width="15" height="15" fill="rgb(218,42,46)"/><text x="55.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1284" width="15" height="15" fill="rgb(253,111,15)"/><text x="55.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1300" width="15" height="15" fill="rgb(219,40,30)"/><text x="55.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1316" width="15" height="15" fill="rgb(236,43,52)"/><text x="55.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.34%)</title><rect x="52" y="1332" width="15" height="15" fill="rgb(250,58,8)"/><text x="55.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1348" width="15" height="15" fill="rgb(227,88,36)"/><text x="55.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.34%)</title><rect x="52" y="1364" width="15" height="15" fill="rgb(252,125,20)"/><text x="55.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1380" width="15" height="15" fill="rgb(245,148,21)"/><text x="55.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1396" width="15" height="15" fill="rgb(231,29,6)"/><text x="55.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1412" width="15" height="15" fill="rgb(212,76,50)"/><text x="55.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.34%)</title><rect x="52" y="1428" width="15" height="15" fill="rgb(238,93,54)"/><text x="55.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.34%)</title><rect x="52" y="1444" width="15" height="15" fill="rgb(236,89,51)"/><text x="55.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.34%)</title><rect x="52" y="1460" width="15" height="15" fill="rgb(252,47,9)"/><text x="55.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.89%)</title><rect x="57" y="1476" width="10" height="15" fill="rgb(238,153,23)"/><text x="60.00" y="1486.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="62" y="1492" width="5" height="15" fill="rgb(249,78,11)"/><text x="65.00" y="1502.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="62" y="1508" width="5" height="15" fill="rgb(243,216,48)"/><text x="65.00" y="1518.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema, &gt;::dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="62" y="1524" width="5" height="15" fill="rgb(238,41,15)"/><text x="65.00" y="1534.50"></text></g><g><title>onnx::OpSchema::~OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="62" y="1540" width="5" height="15" fill="rgb(221,185,52)"/><text x="65.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.45%)</title><rect x="67" y="1108" width="6" height="15" fill="rgb(234,120,15)"/><text x="70.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.45%)</title><rect x="67" y="1124" width="6" height="15" fill="rgb(210,166,32)"/><text x="70.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.45%)</title><rect x="67" y="1140" width="6" height="15" fill="rgb(206,161,49)"/><text x="70.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.45%)</title><rect x="67" y="1156" width="6" height="15" fill="rgb(232,28,14)"/><text x="70.00" y="1166.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.45%)</title><rect x="67" y="1172" width="6" height="15" fill="rgb(240,104,13)"/><text x="70.00" y="1182.50"></text></g><g><title>linspace (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="73" y="1828" width="5" height="15" fill="rgb(207,209,49)"/><text x="76.00" y="1838.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="73" y="1844" width="5" height="15" fill="rgb(218,112,12)"/><text x="76.00" y="1854.50"></text></g><g><title>linspace (numpy/core/function_base.py) (1 samples, 0.45%)</title><rect x="73" y="1860" width="5" height="15" fill="rgb(241,169,39)"/><text x="76.00" y="1870.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="73" y="1876" width="5" height="15" fill="rgb(207,145,44)"/><text x="76.00" y="1886.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="73" y="1892" width="5" height="15" fill="rgb(206,163,43)"/><text x="76.00" y="1902.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="73" y="1908" width="5" height="15" fill="rgb(207,162,1)"/><text x="76.00" y="1918.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="73" y="1924" width="5" height="15" fill="rgb(208,196,40)"/><text x="76.00" y="1934.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.45%)</title><rect x="73" y="1940" width="5" height="15" fill="rgb(227,132,52)"/><text x="76.00" y="1950.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.45%)</title><rect x="73" y="1956" width="5" height="15" fill="rgb(243,139,34)"/><text x="76.00" y="1966.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (4 samples, 1.79%)</title><rect x="73" y="1684" width="21" height="15" fill="rgb(227,9,38)"/><text x="76.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="73" y="1700" width="21" height="15" fill="rgb(230,123,34)"/><text x="76.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="73" y="1716" width="21" height="15" fill="rgb(224,123,46)"/><text x="76.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="73" y="1732" width="21" height="15" fill="rgb(206,32,52)"/><text x="76.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="73" y="1748" width="21" height="15" fill="rgb(231,186,35)"/><text x="76.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="73" y="1764" width="21" height="15" fill="rgb(230,121,10)"/><text x="76.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (4 samples, 1.79%)</title><rect x="73" y="1780" width="21" height="15" fill="rgb(246,72,19)"/><text x="76.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py) (4 samples, 1.79%)</title><rect x="73" y="1796" width="21" height="15" fill="rgb(205,159,27)"/><text x="76.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py) (4 samples, 1.79%)</title><rect x="73" y="1812" width="21" height="15" fill="rgb(209,133,42)"/><text x="76.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py) (3 samples, 1.34%)</title><rect x="78" y="1828" width="16" height="15" fill="rgb(215,53,10)"/><text x="81.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py) (2 samples, 0.89%)</title><rect x="83" y="1844" width="11" height="15" fill="rgb(232,76,18)"/><text x="86.00" y="1854.50"></text></g><g><title>array_item (mapping.c) (2 samples, 0.89%)</title><rect x="83" y="1860" width="11" height="15" fill="rgb(230,200,34)"/><text x="86.00" y="1870.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.45%)</title><rect x="89" y="1876" width="5" height="15" fill="rgb(208,10,14)"/><text x="92.00" y="1886.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="89" y="1892" width="5" height="15" fill="rgb(209,190,42)"/><text x="92.00" y="1902.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="89" y="1908" width="5" height="15" fill="rgb(210,94,54)"/><text x="92.00" y="1918.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 4.46%)</title><rect x="46" y="436" width="53" height="15" fill="rgb(247,61,14)"/><text x="49.00" y="446.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.46%)</title><rect x="46" y="452" width="53" height="15" fill="rgb(237,131,44)"/><text x="49.00" y="462.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.46%)</title><rect x="46" y="468" width="53" height="15" fill="rgb(232,40,23)"/><text x="49.00" y="478.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="484" width="32" height="15" fill="rgb(237,111,15)"/><text x="70.00" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="500" width="32" height="15" fill="rgb(220,111,22)"/><text x="70.00" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="516" width="32" height="15" fill="rgb(224,174,29)"/><text x="70.00" y="526.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 2.68%)</title><rect x="67" y="532" width="32" height="15" fill="rgb(212,40,48)"/><text x="70.00" y="542.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="548" width="32" height="15" fill="rgb(245,183,42)"/><text x="70.00" y="558.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="564" width="32" height="15" fill="rgb(245,166,52)"/><text x="70.00" y="574.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="580" width="32" height="15" fill="rgb(252,139,32)"/><text x="70.00" y="590.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="596" width="32" height="15" fill="rgb(250,81,39)"/><text x="70.00" y="606.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="612" width="32" height="15" fill="rgb(236,151,12)"/><text x="70.00" y="622.50">_c..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 2.68%)</title><rect x="67" y="628" width="32" height="15" fill="rgb(211,118,44)"/><text x="70.00" y="638.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="644" width="32" height="15" fill="rgb(218,100,13)"/><text x="70.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="660" width="32" height="15" fill="rgb(253,176,8)"/><text x="70.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="676" width="32" height="15" fill="rgb(226,150,32)"/><text x="70.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="692" width="32" height="15" fill="rgb(215,28,32)"/><text x="70.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="708" width="32" height="15" fill="rgb(250,45,21)"/><text x="70.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (6 samples, 2.68%)</title><rect x="67" y="724" width="32" height="15" fill="rgb(227,150,40)"/><text x="70.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="740" width="32" height="15" fill="rgb(234,223,7)"/><text x="70.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="756" width="32" height="15" fill="rgb(205,94,39)"/><text x="70.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="772" width="32" height="15" fill="rgb(215,136,42)"/><text x="70.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="788" width="32" height="15" fill="rgb(252,72,16)"/><text x="70.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="804" width="32" height="15" fill="rgb(232,138,12)"/><text x="70.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (6 samples, 2.68%)</title><rect x="67" y="820" width="32" height="15" fill="rgb(232,118,44)"/><text x="70.00" y="830.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="836" width="32" height="15" fill="rgb(223,159,51)"/><text x="70.00" y="846.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="852" width="32" height="15" fill="rgb(249,73,31)"/><text x="70.00" y="862.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="868" width="32" height="15" fill="rgb(214,19,15)"/><text x="70.00" y="878.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="884" width="32" height="15" fill="rgb(228,149,29)"/><text x="70.00" y="894.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="900" width="32" height="15" fill="rgb(237,138,41)"/><text x="70.00" y="910.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (6 samples, 2.68%)</title><rect x="67" y="916" width="32" height="15" fill="rgb(250,131,2)"/><text x="70.00" y="926.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="932" width="32" height="15" fill="rgb(209,161,21)"/><text x="70.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="948" width="32" height="15" fill="rgb(244,120,39)"/><text x="70.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="964" width="32" height="15" fill="rgb(236,132,41)"/><text x="70.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="980" width="32" height="15" fill="rgb(207,144,23)"/><text x="70.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="996" width="32" height="15" fill="rgb(226,144,52)"/><text x="70.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (6 samples, 2.68%)</title><rect x="67" y="1012" width="32" height="15" fill="rgb(209,28,9)"/><text x="70.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="1028" width="32" height="15" fill="rgb(217,94,3)"/><text x="70.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="1044" width="32" height="15" fill="rgb(225,207,41)"/><text x="70.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="1060" width="32" height="15" fill="rgb(252,191,6)"/><text x="70.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.68%)</title><rect x="67" y="1076" width="32" height="15" fill="rgb(224,222,6)"/><text x="70.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.68%)</title><rect x="67" y="1092" width="32" height="15" fill="rgb(233,160,42)"/><text x="70.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/series.py) (5 samples, 2.23%)</title><rect x="73" y="1108" width="26" height="15" fill="rgb(240,7,12)"/><text x="76.00" y="1118.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1124" width="26" height="15" fill="rgb(251,11,36)"/><text x="76.00" y="1134.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1140" width="26" height="15" fill="rgb(239,95,9)"/><text x="76.00" y="1150.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1156" width="26" height="15" fill="rgb(244,8,17)"/><text x="76.00" y="1166.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="73" y="1172" width="26" height="15" fill="rgb(232,89,22)"/><text x="76.00" y="1182.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1188" width="26" height="15" fill="rgb(246,191,0)"/><text x="76.00" y="1198.50">_..</text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (5 samples, 2.23%)</title><rect x="73" y="1204" width="26" height="15" fill="rgb(232,34,28)"/><text x="76.00" y="1214.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1220" width="26" height="15" fill="rgb(252,67,50)"/><text x="76.00" y="1230.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1236" width="26" height="15" fill="rgb(236,82,6)"/><text x="76.00" y="1246.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1252" width="26" height="15" fill="rgb(234,201,22)"/><text x="76.00" y="1262.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="73" y="1268" width="26" height="15" fill="rgb(238,99,40)"/><text x="76.00" y="1278.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1284" width="26" height="15" fill="rgb(223,208,25)"/><text x="76.00" y="1294.50">_..</text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (5 samples, 2.23%)</title><rect x="73" y="1300" width="26" height="15" fill="rgb(227,190,54)"/><text x="76.00" y="1310.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1316" width="26" height="15" fill="rgb(214,84,25)"/><text x="76.00" y="1326.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1332" width="26" height="15" fill="rgb(208,22,22)"/><text x="76.00" y="1342.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1348" width="26" height="15" fill="rgb(228,106,4)"/><text x="76.00" y="1358.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="73" y="1364" width="26" height="15" fill="rgb(234,204,3)"/><text x="76.00" y="1374.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1380" width="26" height="15" fill="rgb(219,40,27)"/><text x="76.00" y="1390.50">_..</text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (5 samples, 2.23%)</title><rect x="73" y="1396" width="26" height="15" fill="rgb(205,129,21)"/><text x="76.00" y="1406.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1412" width="26" height="15" fill="rgb(247,187,29)"/><text x="76.00" y="1422.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1428" width="26" height="15" fill="rgb(217,132,40)"/><text x="76.00" y="1438.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1444" width="26" height="15" fill="rgb(250,12,28)"/><text x="76.00" y="1454.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="73" y="1460" width="26" height="15" fill="rgb(222,129,23)"/><text x="76.00" y="1470.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1476" width="26" height="15" fill="rgb(245,202,47)"/><text x="76.00" y="1486.50">_..</text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (5 samples, 2.23%)</title><rect x="73" y="1492" width="26" height="15" fill="rgb(242,62,4)"/><text x="76.00" y="1502.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1508" width="26" height="15" fill="rgb(251,83,32)"/><text x="76.00" y="1518.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1524" width="26" height="15" fill="rgb(212,177,24)"/><text x="76.00" y="1534.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1540" width="26" height="15" fill="rgb(250,2,16)"/><text x="76.00" y="1550.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="73" y="1556" width="26" height="15" fill="rgb(242,167,28)"/><text x="76.00" y="1566.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1572" width="26" height="15" fill="rgb(251,35,52)"/><text x="76.00" y="1582.50">_..</text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (5 samples, 2.23%)</title><rect x="73" y="1588" width="26" height="15" fill="rgb(223,124,29)"/><text x="76.00" y="1598.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1604" width="26" height="15" fill="rgb(234,208,21)"/><text x="76.00" y="1614.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1620" width="26" height="15" fill="rgb(240,173,28)"/><text x="76.00" y="1630.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1636" width="26" height="15" fill="rgb(242,155,43)"/><text x="76.00" y="1646.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.23%)</title><rect x="73" y="1652" width="26" height="15" fill="rgb(208,11,21)"/><text x="76.00" y="1662.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.23%)</title><rect x="73" y="1668" width="26" height="15" fill="rgb(222,56,19)"/><text x="76.00" y="1678.50">_..</text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.45%)</title><rect x="94" y="1684" width="5" height="15" fill="rgb(251,192,6)"/><text x="97.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1700" width="5" height="15" fill="rgb(233,19,24)"/><text x="97.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1716" width="5" height="15" fill="rgb(222,201,49)"/><text x="97.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1732" width="5" height="15" fill="rgb(248,111,46)"/><text x="97.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="94" y="1748" width="5" height="15" fill="rgb(241,188,33)"/><text x="97.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1764" width="5" height="15" fill="rgb(207,43,7)"/><text x="97.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.45%)</title><rect x="94" y="1780" width="5" height="15" fill="rgb(251,220,19)"/><text x="97.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1796" width="5" height="15" fill="rgb(244,197,33)"/><text x="97.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1812" width="5" height="15" fill="rgb(212,48,33)"/><text x="97.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1828" width="5" height="15" fill="rgb(216,11,7)"/><text x="97.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="94" y="1844" width="5" height="15" fill="rgb(237,35,24)"/><text x="97.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1860" width="5" height="15" fill="rgb(230,125,35)"/><text x="97.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.45%)</title><rect x="94" y="1876" width="5" height="15" fill="rgb(243,84,49)"/><text x="97.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1892" width="5" height="15" fill="rgb(224,26,45)"/><text x="97.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1908" width="5" height="15" fill="rgb(237,53,27)"/><text x="97.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1924" width="5" height="15" fill="rgb(234,212,36)"/><text x="97.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="94" y="1940" width="5" height="15" fill="rgb(237,202,12)"/><text x="97.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1956" width="5" height="15" fill="rgb(229,223,46)"/><text x="97.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.45%)</title><rect x="94" y="1972" width="5" height="15" fill="rgb(216,95,0)"/><text x="97.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="1988" width="5" height="15" fill="rgb(231,61,27)"/><text x="97.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="2004" width="5" height="15" fill="rgb(207,202,0)"/><text x="97.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="2020" width="5" height="15" fill="rgb(244,204,11)"/><text x="97.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="2036" width="5" height="15" fill="rgb(246,0,24)"/><text x="97.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="2052" width="5" height="15" fill="rgb(248,135,28)"/><text x="97.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="94" y="2068" width="5" height="15" fill="rgb(242,110,35)"/><text x="97.00" y="2078.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="94" y="2084" width="5" height="15" fill="rgb(215,138,25)"/><text x="97.00" y="2094.50"></text></g><g><title>&lt;module&gt; (matplotlib/afm.py) (1 samples, 0.45%)</title><rect x="94" y="2100" width="5" height="15" fill="rgb(206,147,10)"/><text x="97.00" y="2110.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.45%)</title><rect x="94" y="2116" width="5" height="15" fill="rgb(254,151,41)"/><text x="97.00" y="2126.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 4.91%)</title><rect x="46" y="340" width="58" height="15" fill="rgb(240,151,1)"/><text x="49.00" y="350.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.91%)</title><rect x="46" y="356" width="58" height="15" fill="rgb(236,207,1)"/><text x="49.00" y="366.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.91%)</title><rect x="46" y="372" width="58" height="15" fill="rgb(245,88,32)"/><text x="49.00" y="382.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.91%)</title><rect x="46" y="388" width="58" height="15" fill="rgb(213,154,37)"/><text x="49.00" y="398.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.91%)</title><rect x="46" y="404" width="58" height="15" fill="rgb(209,167,48)"/><text x="49.00" y="414.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.91%)</title><rect x="46" y="420" width="58" height="15" fill="rgb(238,33,48)"/><text x="49.00" y="430.50">_call_..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.45%)</title><rect x="99" y="436" width="5" height="15" fill="rgb(213,171,17)"/><text x="102.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="452" width="5" height="15" fill="rgb(210,143,15)"/><text x="102.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="468" width="5" height="15" fill="rgb(215,208,36)"/><text x="102.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="484" width="5" height="15" fill="rgb(245,210,40)"/><text x="102.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="99" y="500" width="5" height="15" fill="rgb(234,110,54)"/><text x="102.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="516" width="5" height="15" fill="rgb(225,121,50)"/><text x="102.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.45%)</title><rect x="99" y="532" width="5" height="15" fill="rgb(208,72,8)"/><text x="102.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="548" width="5" height="15" fill="rgb(239,49,2)"/><text x="102.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="564" width="5" height="15" fill="rgb(230,118,37)"/><text x="102.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="580" width="5" height="15" fill="rgb(249,50,36)"/><text x="102.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="99" y="596" width="5" height="15" fill="rgb(251,167,20)"/><text x="102.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="612" width="5" height="15" fill="rgb(253,215,7)"/><text x="102.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.45%)</title><rect x="99" y="628" width="5" height="15" fill="rgb(229,111,35)"/><text x="102.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="644" width="5" height="15" fill="rgb(229,145,12)"/><text x="102.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="660" width="5" height="15" fill="rgb(224,22,35)"/><text x="102.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="676" width="5" height="15" fill="rgb(234,76,8)"/><text x="102.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="692" width="5" height="15" fill="rgb(215,73,49)"/><text x="102.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="708" width="5" height="15" fill="rgb(229,177,32)"/><text x="102.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="99" y="724" width="5" height="15" fill="rgb(209,227,5)"/><text x="102.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="99" y="740" width="5" height="15" fill="rgb(234,183,40)"/><text x="102.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="99" y="756" width="5" height="15" fill="rgb(219,167,48)"/><text x="102.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="99" y="772" width="5" height="15" fill="rgb(237,179,29)"/><text x="102.00" y="782.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="99" y="788" width="5" height="15" fill="rgb(228,112,53)"/><text x="102.00" y="798.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.45%)</title><rect x="104" y="580" width="6" height="15" fill="rgb(254,74,26)"/><text x="107.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="104" y="596" width="6" height="15" fill="rgb(245,72,32)"/><text x="107.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="104" y="612" width="6" height="15" fill="rgb(218,208,3)"/><text x="107.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="104" y="628" width="6" height="15" fill="rgb(247,148,49)"/><text x="107.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="104" y="644" width="6" height="15" fill="rgb(213,223,10)"/><text x="107.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="104" y="660" width="6" height="15" fill="rgb(250,172,36)"/><text x="107.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="104" y="676" width="6" height="15" fill="rgb(223,101,21)"/><text x="107.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.93%)</title><rect x="10" y="68" width="105" height="15" fill="rgb(213,179,2)"/><text x="13.00" y="78.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.93%)</title><rect x="10" y="84" width="105" height="15" fill="rgb(252,75,16)"/><text x="13.00" y="94.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.93%)</title><rect x="10" y="100" width="105" height="15" fill="rgb(248,41,17)"/><text x="13.00" y="110.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 8.93%)</title><rect x="10" y="116" width="105" height="15" fill="rgb(225,9,34)"/><text x="13.00" y="126.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.93%)</title><rect x="10" y="132" width="105" height="15" fill="rgb(210,201,35)"/><text x="13.00" y="142.50">_call_with_f..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (20 samples, 8.93%)</title><rect x="10" y="148" width="105" height="15" fill="rgb(252,166,52)"/><text x="13.00" y="158.50">&lt;module&gt; (pr..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.93%)</title><rect x="10" y="164" width="105" height="15" fill="rgb(231,98,38)"/><text x="13.00" y="174.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.93%)</title><rect x="10" y="180" width="105" height="15" fill="rgb(219,65,26)"/><text x="13.00" y="190.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.80%)</title><rect x="46" y="196" width="69" height="15" fill="rgb(236,112,11)"/><text x="49.00" y="206.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.80%)</title><rect x="46" y="212" width="69" height="15" fill="rgb(247,135,31)"/><text x="49.00" y="222.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.80%)</title><rect x="46" y="228" width="69" height="15" fill="rgb(224,224,17)"/><text x="49.00" y="238.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 5.80%)</title><rect x="46" y="244" width="69" height="15" fill="rgb(213,27,21)"/><text x="49.00" y="254.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.80%)</title><rect x="46" y="260" width="69" height="15" fill="rgb(205,55,33)"/><text x="49.00" y="270.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.80%)</title><rect x="46" y="276" width="69" height="15" fill="rgb(240,156,47)"/><text x="49.00" y="286.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.80%)</title><rect x="46" y="292" width="69" height="15" fill="rgb(229,155,46)"/><text x="49.00" y="302.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 5.80%)</title><rect x="46" y="308" width="69" height="15" fill="rgb(250,223,22)"/><text x="49.00" y="318.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 5.80%)</title><rect x="46" y="324" width="69" height="15" fill="rgb(233,115,43)"/><text x="49.00" y="334.50">_call_w..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.89%)</title><rect x="104" y="340" width="11" height="15" fill="rgb(245,161,41)"/><text x="107.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="356" width="11" height="15" fill="rgb(229,64,13)"/><text x="107.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="372" width="11" height="15" fill="rgb(247,136,17)"/><text x="107.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="388" width="11" height="15" fill="rgb(214,3,2)"/><text x="107.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="404" width="11" height="15" fill="rgb(218,145,35)"/><text x="107.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="420" width="11" height="15" fill="rgb(241,88,52)"/><text x="107.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="436" width="11" height="15" fill="rgb(207,2,24)"/><text x="107.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.89%)</title><rect x="104" y="452" width="11" height="15" fill="rgb(218,69,45)"/><text x="107.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="468" width="11" height="15" fill="rgb(249,169,4)"/><text x="107.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.89%)</title><rect x="104" y="484" width="11" height="15" fill="rgb(225,203,1)"/><text x="107.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="500" width="11" height="15" fill="rgb(229,117,17)"/><text x="107.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="516" width="11" height="15" fill="rgb(236,196,28)"/><text x="107.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="532" width="11" height="15" fill="rgb(238,18,1)"/><text x="107.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.89%)</title><rect x="104" y="548" width="11" height="15" fill="rgb(206,190,9)"/><text x="107.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="104" y="564" width="11" height="15" fill="rgb(254,126,16)"/><text x="107.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.45%)</title><rect x="110" y="580" width="5" height="15" fill="rgb(237,78,39)"/><text x="113.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="596" width="5" height="15" fill="rgb(242,169,12)"/><text x="113.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="612" width="5" height="15" fill="rgb(243,170,49)"/><text x="113.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="628" width="5" height="15" fill="rgb(244,25,31)"/><text x="113.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="644" width="5" height="15" fill="rgb(237,88,9)"/><text x="113.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="660" width="5" height="15" fill="rgb(208,32,36)"/><text x="113.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.45%)</title><rect x="110" y="676" width="5" height="15" fill="rgb(251,9,43)"/><text x="113.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="692" width="5" height="15" fill="rgb(235,226,19)"/><text x="113.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="708" width="5" height="15" fill="rgb(233,40,42)"/><text x="113.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="724" width="5" height="15" fill="rgb(253,125,50)"/><text x="113.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="740" width="5" height="15" fill="rgb(243,96,31)"/><text x="113.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="756" width="5" height="15" fill="rgb(208,51,42)"/><text x="113.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.45%)</title><rect x="110" y="772" width="5" height="15" fill="rgb(210,190,23)"/><text x="113.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="788" width="5" height="15" fill="rgb(243,22,21)"/><text x="113.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="804" width="5" height="15" fill="rgb(230,24,12)"/><text x="113.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="820" width="5" height="15" fill="rgb(252,138,42)"/><text x="113.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="836" width="5" height="15" fill="rgb(210,183,31)"/><text x="113.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="852" width="5" height="15" fill="rgb(218,114,50)"/><text x="113.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="868" width="5" height="15" fill="rgb(208,125,12)"/><text x="113.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="884" width="5" height="15" fill="rgb(232,84,48)"/><text x="113.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.45%)</title><rect x="110" y="900" width="5" height="15" fill="rgb(212,16,52)"/><text x="113.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="916" width="5" height="15" fill="rgb(219,166,25)"/><text x="113.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="932" width="5" height="15" fill="rgb(237,195,45)"/><text x="113.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="948" width="5" height="15" fill="rgb(251,79,53)"/><text x="113.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="964" width="5" height="15" fill="rgb(226,50,26)"/><text x="113.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="980" width="5" height="15" fill="rgb(214,89,19)"/><text x="113.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="996" width="5" height="15" fill="rgb(239,159,47)"/><text x="113.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="1012" width="5" height="15" fill="rgb(245,222,30)"/><text x="113.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1028" width="5" height="15" fill="rgb(224,129,54)"/><text x="113.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.45%)</title><rect x="110" y="1044" width="5" height="15" fill="rgb(244,96,28)"/><text x="113.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1060" width="5" height="15" fill="rgb(214,5,53)"/><text x="113.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1076" width="5" height="15" fill="rgb(226,145,15)"/><text x="113.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1092" width="5" height="15" fill="rgb(206,120,35)"/><text x="113.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1108" width="5" height="15" fill="rgb(244,164,29)"/><text x="113.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1124" width="5" height="15" fill="rgb(234,121,44)"/><text x="113.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="1140" width="5" height="15" fill="rgb(245,188,14)"/><text x="113.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1156" width="5" height="15" fill="rgb(248,61,34)"/><text x="113.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.45%)</title><rect x="110" y="1172" width="5" height="15" fill="rgb(223,224,51)"/><text x="113.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1188" width="5" height="15" fill="rgb(250,111,42)"/><text x="113.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1204" width="5" height="15" fill="rgb(241,172,34)"/><text x="113.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1220" width="5" height="15" fill="rgb(237,87,30)"/><text x="113.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1236" width="5" height="15" fill="rgb(206,28,16)"/><text x="113.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1252" width="5" height="15" fill="rgb(222,81,40)"/><text x="113.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="1268" width="5" height="15" fill="rgb(224,1,30)"/><text x="113.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1284" width="5" height="15" fill="rgb(222,42,28)"/><text x="113.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py) (1 samples, 0.45%)</title><rect x="110" y="1300" width="5" height="15" fill="rgb(212,191,52)"/><text x="113.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1316" width="5" height="15" fill="rgb(214,144,19)"/><text x="113.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1332" width="5" height="15" fill="rgb(230,49,25)"/><text x="113.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1348" width="5" height="15" fill="rgb(214,229,13)"/><text x="113.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="1364" width="5" height="15" fill="rgb(214,181,40)"/><text x="113.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1380" width="5" height="15" fill="rgb(251,187,37)"/><text x="113.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py) (1 samples, 0.45%)</title><rect x="110" y="1396" width="5" height="15" fill="rgb(232,129,43)"/><text x="113.00" y="1406.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1412" width="5" height="15" fill="rgb(235,65,21)"/><text x="113.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1428" width="5" height="15" fill="rgb(240,45,54)"/><text x="113.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1444" width="5" height="15" fill="rgb(237,150,39)"/><text x="113.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1460" width="5" height="15" fill="rgb(233,24,1)"/><text x="113.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1476" width="5" height="15" fill="rgb(213,209,45)"/><text x="113.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="1492" width="5" height="15" fill="rgb(220,215,7)"/><text x="113.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="1508" width="5" height="15" fill="rgb(229,63,26)"/><text x="113.00" y="1518.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/ed25519.py) (1 samples, 0.45%)</title><rect x="110" y="1524" width="5" height="15" fill="rgb(251,1,39)"/><text x="113.00" y="1534.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.45%)</title><rect x="110" y="1540" width="5" height="15" fill="rgb(247,83,53)"/><text x="113.00" y="1550.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.45%)</title><rect x="110" y="1556" width="5" height="15" fill="rgb(222,6,41)"/><text x="113.00" y="1566.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.45%)</title><rect x="131" y="308" width="5" height="15" fill="rgb(207,59,53)"/><text x="134.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (3 samples, 1.34%)</title><rect x="131" y="292" width="15" height="15" fill="rgb(217,19,43)"/><text x="134.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (2 samples, 0.89%)</title><rect x="136" y="308" width="10" height="15" fill="rgb(246,5,27)"/><text x="139.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (2 samples, 0.89%)</title><rect x="136" y="324" width="10" height="15" fill="rgb(221,166,39)"/><text x="139.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.45%)</title><rect x="141" y="340" width="5" height="15" fill="rgb(220,10,14)"/><text x="144.00" y="350.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (5 samples, 2.23%)</title><rect x="125" y="276" width="27" height="15" fill="rgb(244,114,18)"/><text x="128.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="146" y="292" width="6" height="15" fill="rgb(210,45,37)"/><text x="149.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="146" y="308" width="6" height="15" fill="rgb(205,167,53)"/><text x="149.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="146" y="324" width="6" height="15" fill="rgb(216,178,47)"/><text x="149.00" y="334.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="146" y="340" width="6" height="15" fill="rgb(235,107,43)"/><text x="149.00" y="350.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.45%)</title><rect x="146" y="356" width="6" height="15" fill="rgb(251,12,31)"/><text x="149.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (6 samples, 2.68%)</title><rect x="125" y="260" width="32" height="15" fill="rgb(235,158,41)"/><text x="128.00" y="270.50">&lt;l..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="152" y="276" width="5" height="15" fill="rgb(219,89,36)"/><text x="155.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="152" y="292" width="5" height="15" fill="rgb(232,138,30)"/><text x="155.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="152" y="308" width="5" height="15" fill="rgb(235,164,11)"/><text x="155.00" y="318.50"></text></g><g><title>_dispatch (joblib/parallel.py) (9 samples, 4.02%)</title><rect x="115" y="196" width="47" height="15" fill="rgb(254,152,13)"/><text x="118.00" y="206.50">_dis..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (8 samples, 3.57%)</title><rect x="120" y="212" width="42" height="15" fill="rgb(226,86,15)"/><text x="123.00" y="222.50">app..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (8 samples, 3.57%)</title><rect x="120" y="228" width="42" height="15" fill="rgb(213,131,22)"/><text x="123.00" y="238.50">__i..</text></g><g><title>__call__ (joblib/parallel.py) (8 samples, 3.57%)</title><rect x="120" y="244" width="42" height="15" fill="rgb(228,205,11)"/><text x="123.00" y="254.50">__c..</text></g><g><title>__exit__ (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="157" y="260" width="5" height="15" fill="rgb(236,93,1)"/><text x="160.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="157" y="276" width="5" height="15" fill="rgb(249,40,25)"/><text x="160.00" y="286.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (10 samples, 4.46%)</title><rect x="115" y="68" width="53" height="15" fill="rgb(244,92,17)"/><text x="118.00" y="78.50">profi..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (10 samples, 4.46%)</title><rect x="115" y="84" width="53" height="15" fill="rgb(230,126,29)"/><text x="118.00" y="94.50">setup..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (10 samples, 4.46%)</title><rect x="115" y="100" width="53" height="15" fill="rgb(217,170,4)"/><text x="118.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 4.46%)</title><rect x="115" y="116" width="53" height="15" fill="rgb(224,141,21)"/><text x="118.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 4.46%)</title><rect x="115" y="132" width="53" height="15" fill="rgb(253,179,29)"/><text x="118.00" y="142.50">&lt;lamb..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (10 samples, 4.46%)</title><rect x="115" y="148" width="53" height="15" fill="rgb(233,104,11)"/><text x="118.00" y="158.50">predi..</text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 4.46%)</title><rect x="115" y="164" width="53" height="15" fill="rgb(241,169,5)"/><text x="118.00" y="174.50">__cal..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (10 samples, 4.46%)</title><rect x="115" y="180" width="53" height="15" fill="rgb(247,7,38)"/><text x="118.00" y="190.50">dispa..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="162" y="196" width="6" height="15" fill="rgb(238,169,46)"/><text x="165.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="162" y="212" width="6" height="15" fill="rgb(209,13,20)"/><text x="165.00" y="222.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.45%)</title><rect x="168" y="68" width="5" height="15" fill="rgb(214,98,21)"/><text x="171.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.45%)</title><rect x="168" y="84" width="5" height="15" fill="rgb(251,222,23)"/><text x="171.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="168" y="100" width="5" height="15" fill="rgb(226,211,25)"/><text x="171.00" y="110.50"></text></g><g><title>_pickle_load (_pickle.c.h) (1 samples, 0.45%)</title><rect x="168" y="116" width="5" height="15" fill="rgb(234,213,54)"/><text x="171.00" y="126.50"></text></g><g><title>Unpickler_dealloc (_pickle.c) (1 samples, 0.45%)</title><rect x="168" y="132" width="5" height="15" fill="rgb(251,81,28)"/><text x="171.00" y="142.50"></text></g><g><title>_Unpickler_MemoCleanup (_pickle.c) (1 samples, 0.45%)</title><rect x="168" y="148" width="5" height="15" fill="rgb(232,66,17)"/><text x="171.00" y="158.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.45%)</title><rect x="173" y="68" width="5" height="15" fill="rgb(254,7,52)"/><text x="176.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.45%)</title><rect x="173" y="84" width="5" height="15" fill="rgb(227,6,13)"/><text x="176.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="173" y="100" width="5" height="15" fill="rgb(212,5,12)"/><text x="176.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="173" y="116" width="5" height="15" fill="rgb(234,23,53)"/><text x="176.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="173" y="132" width="5" height="15" fill="rgb(234,159,9)"/><text x="176.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.45%)</title><rect x="173" y="148" width="5" height="15" fill="rgb(232,157,5)"/><text x="176.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.45%)</title><rect x="173" y="164" width="5" height="15" fill="rgb(232,155,46)"/><text x="176.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.45%)</title><rect x="173" y="180" width="5" height="15" fill="rgb(246,197,7)"/><text x="176.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.45%)</title><rect x="173" y="196" width="5" height="15" fill="rgb(232,100,32)"/><text x="176.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.45%)</title><rect x="173" y="212" width="5" height="15" fill="rgb(242,162,49)"/><text x="176.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="173" y="228" width="5" height="15" fill="rgb(240,188,47)"/><text x="176.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="173" y="244" width="5" height="15" fill="rgb(223,13,2)"/><text x="176.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="173" y="260" width="5" height="15" fill="rgb(245,186,44)"/><text x="176.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="173" y="276" width="5" height="15" fill="rgb(214,169,54)"/><text x="176.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="173" y="292" width="5" height="15" fill="rgb(232,87,38)"/><text x="176.00" y="302.50"></text></g><g><title>0x7ff276241fd3 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="178" y="164" width="5" height="15" fill="rgb(223,146,6)"/><text x="181.00" y="174.50"></text></g><g><title>0x7ff276184120 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="299" y="196" width="6" height="15" fill="rgb(244,172,52)"/><text x="302.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (10 samples, 4.46%)</title><rect x="305" y="196" width="52" height="15" fill="rgb(228,9,27)"/><text x="308.00" y="206.50">&lt;gene..</text></g><g><title>delayed (joblib/parallel.py) (8 samples, 3.57%)</title><rect x="315" y="212" width="42" height="15" fill="rgb(242,181,47)"/><text x="318.00" y="222.50">del..</text></g><g><title>update_wrapper (functools.py) (7 samples, 3.12%)</title><rect x="320" y="228" width="37" height="15" fill="rgb(205,202,6)"/><text x="323.00" y="238.50">upd..</text></g><g><title>0x7ff2761841f2 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="352" y="244" width="5" height="15" fill="rgb(238,111,11)"/><text x="355.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py) (5 samples, 2.23%)</title><rect x="357" y="196" width="27" height="15" fill="rgb(222,26,2)"/><text x="360.00" y="206.50">_..</text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="431" y="212" width="5" height="15" fill="rgb(233,8,37)"/><text x="434.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="436" y="228" width="21" height="15" fill="rgb(219,87,17)"/><text x="439.00" y="238.50"></text></g><g><title>0x7ff276179757 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="489" y="308" width="5" height="15" fill="rgb(216,100,43)"/><text x="492.00" y="318.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.89%)</title><rect x="489" y="292" width="10" height="15" fill="rgb(242,69,51)"/><text x="492.00" y="302.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.45%)</title><rect x="494" y="308" width="5" height="15" fill="rgb(213,123,15)"/><text x="497.00" y="318.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="494" y="324" width="5" height="15" fill="rgb(253,74,29)"/><text x="497.00" y="334.50"></text></g><g><title>0x7ff24fb96d11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="526" y="340" width="5" height="15" fill="rgb(214,13,47)"/><text x="529.00" y="350.50"></text></g><g><title>0x7ff24fba6f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="526" y="324" width="10" height="15" fill="rgb(230,111,12)"/><text x="529.00" y="334.50"></text></g><g><title>0x7ff24fb96d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="531" y="340" width="5" height="15" fill="rgb(231,177,9)"/><text x="534.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.45%)</title><rect x="531" y="356" width="5" height="15" fill="rgb(238,177,50)"/><text x="534.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="531" y="372" width="5" height="15" fill="rgb(229,59,8)"/><text x="534.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.45%)</title><rect x="531" y="388" width="5" height="15" fill="rgb(243,122,18)"/><text x="534.00" y="398.50"></text></g><g><title>0x7ff24fbb5225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="536" y="356" width="11" height="15" fill="rgb(209,42,52)"/><text x="539.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (2 samples, 0.89%)</title><rect x="536" y="372" width="11" height="15" fill="rgb(220,65,44)"/><text x="539.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.89%)</title><rect x="536" y="388" width="11" height="15" fill="rgb(209,6,15)"/><text x="539.00" y="398.50"></text></g><g><title>0x7ff24fb995d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="547" y="388" width="5" height="15" fill="rgb(233,223,33)"/><text x="550.00" y="398.50"></text></g><g><title>0x7ff24fb81c10 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="547" y="404" width="5" height="15" fill="rgb(250,21,36)"/><text x="550.00" y="414.50"></text></g><g><title>0x7ff24fb8f10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="552" y="404" width="5" height="15" fill="rgb(246,221,4)"/><text x="555.00" y="414.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.45%)</title><rect x="563" y="452" width="5" height="15" fill="rgb(214,193,46)"/><text x="566.00" y="462.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.45%)</title><rect x="568" y="452" width="5" height="15" fill="rgb(208,11,15)"/><text x="571.00" y="462.50"></text></g><g><title>0x7ff276163998 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="568" y="468" width="5" height="15" fill="rgb(234,15,9)"/><text x="571.00" y="478.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.45%)</title><rect x="573" y="468" width="5" height="15" fill="rgb(237,143,38)"/><text x="576.00" y="478.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.45%)</title><rect x="573" y="484" width="5" height="15" fill="rgb(239,6,13)"/><text x="576.00" y="494.50"></text></g><g><title>0x7ff24fb8f2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.23%)</title><rect x="557" y="404" width="27" height="15" fill="rgb(245,11,9)"/><text x="560.00" y="414.50">0..</text></g><g><title>array_getbuffer (buffer.c) (5 samples, 2.23%)</title><rect x="557" y="420" width="27" height="15" fill="rgb(226,102,24)"/><text x="560.00" y="430.50">a..</text></g><g><title>_buffer_get_info (buffer.c) (5 samples, 2.23%)</title><rect x="557" y="436" width="27" height="15" fill="rgb(232,171,26)"/><text x="560.00" y="446.50">_..</text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.89%)</title><rect x="573" y="452" width="11" height="15" fill="rgb(231,126,6)"/><text x="576.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="578" y="468" width="6" height="15" fill="rgb(210,36,53)"/><text x="581.00" y="478.50"></text></g><g><title>0x7ff24fbb52df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.57%)</title><rect x="547" y="356" width="42" height="15" fill="rgb(223,179,28)"/><text x="550.00" y="366.50">0x7..</text></g><g><title>0x7ff24fb99d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.57%)</title><rect x="547" y="372" width="42" height="15" fill="rgb(238,144,28)"/><text x="550.00" y="382.50">0x7..</text></g><g><title>0x7ff24fb99666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.12%)</title><rect x="552" y="388" width="37" height="15" fill="rgb(220,120,5)"/><text x="555.00" y="398.50">0x7..</text></g><g><title>0x7ff24fb8f467 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="584" y="404" width="5" height="15" fill="rgb(253,169,41)"/><text x="587.00" y="414.50"></text></g><g><title>0x7ff24fbb5456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="589" y="356" width="5" height="15" fill="rgb(238,99,8)"/><text x="592.00" y="366.50"></text></g><g><title>0x7ff24fbb553e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="594" y="356" width="11" height="15" fill="rgb(226,75,29)"/><text x="597.00" y="366.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.45%)</title><rect x="610" y="388" width="5" height="15" fill="rgb(231,107,16)"/><text x="613.00" y="398.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.89%)</title><rect x="615" y="388" width="11" height="15" fill="rgb(239,156,54)"/><text x="618.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (2 samples, 0.89%)</title><rect x="615" y="404" width="11" height="15" fill="rgb(222,87,30)"/><text x="618.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="621" y="420" width="5" height="15" fill="rgb(213,135,23)"/><text x="624.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.45%)</title><rect x="621" y="436" width="5" height="15" fill="rgb(241,221,17)"/><text x="624.00" y="446.50"></text></g><g><title>0x7ff24fbb5592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.23%)</title><rect x="605" y="356" width="26" height="15" fill="rgb(217,210,30)"/><text x="608.00" y="366.50">0..</text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 2.23%)</title><rect x="605" y="372" width="26" height="15" fill="rgb(230,117,5)"/><text x="608.00" y="382.50">a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="626" y="388" width="5" height="15" fill="rgb(209,62,43)"/><text x="629.00" y="398.50"></text></g><g><title>0x7ff24fbb5644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="631" y="356" width="5" height="15" fill="rgb(215,110,22)"/><text x="634.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="631" y="372" width="5" height="15" fill="rgb(249,218,34)"/><text x="634.00" y="382.50"></text></g><g><title>0x7ff24fbb592f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="636" y="356" width="11" height="15" fill="rgb(247,190,11)"/><text x="639.00" y="366.50"></text></g><g><title>0x7ff24fb8aa05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="636" y="372" width="11" height="15" fill="rgb(220,219,29)"/><text x="639.00" y="382.50"></text></g><g><title>0x7ff24fbb6405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (22 samples, 9.82%)</title><rect x="536" y="340" width="116" height="15" fill="rgb(227,28,51)"/><text x="539.00" y="350.50">0x7ff24fbb6405..</text></g><g><title>0x7ff24fbb5c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="647" y="356" width="5" height="15" fill="rgb(240,112,35)"/><text x="650.00" y="366.50"></text></g><g><title>0x7ff24fb8d529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="647" y="372" width="5" height="15" fill="rgb(218,155,19)"/><text x="650.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.45%)</title><rect x="647" y="388" width="5" height="15" fill="rgb(228,191,17)"/><text x="650.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.45%)</title><rect x="647" y="404" width="5" height="15" fill="rgb(221,97,32)"/><text x="650.00" y="414.50"></text></g><g><title>0x7ff24fb8b152 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="652" y="356" width="5" height="15" fill="rgb(250,227,37)"/><text x="655.00" y="366.50"></text></g><g><title>0x7ff24fba6fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (24 samples, 10.71%)</title><rect x="536" y="324" width="127" height="15" fill="rgb(235,1,27)"/><text x="539.00" y="334.50">0x7ff24fba6fa6 ..</text></g><g><title>0x7ff24fbb6540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="652" y="340" width="11" height="15" fill="rgb(226,165,46)"/><text x="655.00" y="350.50"></text></g><g><title>0x7ff24fb8b2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="657" y="356" width="6" height="15" fill="rgb(207,200,15)"/><text x="660.00" y="366.50"></text></g><g><title>0x7ff24fb8a4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="657" y="372" width="6" height="15" fill="rgb(232,115,51)"/><text x="660.00" y="382.50"></text></g><g><title>0x7ff24fba6fb2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="663" y="324" width="5" height="15" fill="rgb(224,183,26)"/><text x="666.00" y="334.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="679" y="356" width="5" height="15" fill="rgb(217,42,48)"/><text x="682.00" y="366.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.89%)</title><rect x="684" y="356" width="10" height="15" fill="rgb(222,121,14)"/><text x="687.00" y="366.50"></text></g><g><title>0x7ff24fba705a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.68%)</title><rect x="668" y="324" width="32" height="15" fill="rgb(216,160,44)"/><text x="671.00" y="334.50">0x..</text></g><g><title>array_take (methods.c) (6 samples, 2.68%)</title><rect x="668" y="340" width="32" height="15" fill="rgb(241,30,6)"/><text x="671.00" y="350.50">ar..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="694" y="356" width="6" height="15" fill="rgb(249,219,25)"/><text x="697.00" y="366.50"></text></g><g><title>0x7ff24fba713a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="700" y="324" width="10" height="15" fill="rgb(220,79,18)"/><text x="703.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.89%)</title><rect x="700" y="340" width="10" height="15" fill="rgb(209,49,39)"/><text x="703.00" y="350.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.45%)</title><rect x="705" y="356" width="5" height="15" fill="rgb(250,154,33)"/><text x="708.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.45%)</title><rect x="705" y="372" width="5" height="15" fill="rgb(235,137,7)"/><text x="708.00" y="382.50"></text></g><g><title>0x7ff24fba714f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="710" y="324" width="5" height="15" fill="rgb(230,190,8)"/><text x="713.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="710" y="340" width="5" height="15" fill="rgb(251,34,14)"/><text x="713.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.45%)</title><rect x="710" y="356" width="5" height="15" fill="rgb(221,140,38)"/><text x="713.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.45%)</title><rect x="710" y="372" width="5" height="15" fill="rgb(208,134,45)"/><text x="713.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.45%)</title><rect x="710" y="388" width="5" height="15" fill="rgb(215,210,50)"/><text x="713.00" y="398.50"></text></g><g><title>0x7ff276163991 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="710" y="404" width="5" height="15" fill="rgb(227,102,48)"/><text x="713.00" y="414.50"></text></g><g><title>0x7ff24fba72b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="715" y="324" width="6" height="15" fill="rgb(244,227,49)"/><text x="718.00" y="334.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.45%)</title><rect x="721" y="356" width="5" height="15" fill="rgb(238,52,33)"/><text x="724.00" y="366.50"></text></g><g><title>0x7ff276179734 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="721" y="372" width="5" height="15" fill="rgb(249,46,46)"/><text x="724.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.45%)</title><rect x="726" y="356" width="5" height="15" fill="rgb(210,219,54)"/><text x="729.00" y="366.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.45%)</title><rect x="726" y="372" width="5" height="15" fill="rgb(254,14,22)"/><text x="729.00" y="382.50"></text></g><g><title>0x7ff24fba7d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (40 samples, 17.86%)</title><rect x="526" y="308" width="210" height="15" fill="rgb(209,137,16)"/><text x="529.00" y="318.50">0x7ff24fba7d2e (sklearn/tre..</text></g><g><title>0x7ff24fba7328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="721" y="324" width="15" height="15" fill="rgb(205,167,8)"/><text x="724.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 1.34%)</title><rect x="721" y="340" width="15" height="15" fill="rgb(252,136,22)"/><text x="724.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.45%)</title><rect x="731" y="356" width="5" height="15" fill="rgb(224,74,38)"/><text x="734.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.45%)</title><rect x="731" y="372" width="5" height="15" fill="rgb(250,59,1)"/><text x="734.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="731" y="388" width="5" height="15" fill="rgb(205,38,11)"/><text x="734.00" y="398.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.45%)</title><rect x="731" y="404" width="5" height="15" fill="rgb(230,89,40)"/><text x="734.00" y="414.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.89%)</title><rect x="736" y="308" width="11" height="15" fill="rgb(210,131,28)"/><text x="739.00" y="318.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.45%)</title><rect x="742" y="324" width="5" height="15" fill="rgb(244,77,26)"/><text x="745.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.45%)</title><rect x="747" y="308" width="5" height="15" fill="rgb(206,2,30)"/><text x="750.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.45%)</title><rect x="747" y="324" width="5" height="15" fill="rgb(209,75,52)"/><text x="750.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.89%)</title><rect x="821" y="340" width="10" height="15" fill="rgb(247,117,35)"/><text x="824.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (17 samples, 7.59%)</title><rect x="752" y="308" width="90" height="15" fill="rgb(224,30,2)"/><text x="755.00" y="318.50">check_is_f..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 5.80%)</title><rect x="773" y="324" width="69" height="15" fill="rgb(251,202,16)"/><text x="776.00" y="334.50">&lt;listco..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.89%)</title><rect x="831" y="340" width="11" height="15" fill="rgb(222,72,14)"/><text x="834.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (66 samples, 29.46%)</title><rect x="499" y="292" width="348" height="15" fill="rgb(244,49,35)"/><text x="502.00" y="302.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.45%)</title><rect x="842" y="308" width="5" height="15" fill="rgb(215,100,51)"/><text x="845.00" y="318.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="858" y="340" width="5" height="15" fill="rgb(206,138,42)"/><text x="861.00" y="350.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.45%)</title><rect x="863" y="340" width="5" height="15" fill="rgb(208,188,24)"/><text x="866.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="873" y="372" width="6" height="15" fill="rgb(217,42,24)"/><text x="876.00" y="382.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.45%)</title><rect x="879" y="372" width="5" height="15" fill="rgb(212,21,21)"/><text x="882.00" y="382.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.45%)</title><rect x="884" y="372" width="5" height="15" fill="rgb(247,143,35)"/><text x="887.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.79%)</title><rect x="873" y="356" width="22" height="15" fill="rgb(239,151,14)"/><text x="876.00" y="366.50">N..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.45%)</title><rect x="889" y="372" width="6" height="15" fill="rgb(247,61,32)"/><text x="892.00" y="382.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.45%)</title><rect x="889" y="388" width="6" height="15" fill="rgb(220,212,8)"/><text x="892.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.45%)</title><rect x="895" y="356" width="5" height="15" fill="rgb(241,39,50)"/><text x="898.00" y="366.50"></text></g><g><title>0x7ff2753869c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="895" y="372" width="5" height="15" fill="rgb(218,88,6)"/><text x="898.00" y="382.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.45%)</title><rect x="900" y="356" width="5" height="15" fill="rgb(205,96,36)"/><text x="903.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (11 samples, 4.91%)</title><rect x="852" y="308" width="58" height="15" fill="rgb(236,196,0)"/><text x="855.00" y="318.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (10 samples, 4.46%)</title><rect x="858" y="324" width="52" height="15" fill="rgb(205,180,41)"/><text x="861.00" y="334.50">execu..</text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 3.57%)</title><rect x="868" y="340" width="42" height="15" fill="rgb(243,4,28)"/><text x="871.00" y="350.50">ite..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.45%)</title><rect x="905" y="356" width="5" height="15" fill="rgb(248,136,10)"/><text x="908.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (81 samples, 36.16%)</title><rect x="489" y="276" width="427" height="15" fill="rgb(220,100,46)"/><text x="492.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 5.80%)</title><rect x="847" y="292" width="69" height="15" fill="rgb(226,81,45)"/><text x="850.00" y="302.50">ufunc_g..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.45%)</title><rect x="910" y="308" width="6" height="15" fill="rgb(209,211,6)"/><text x="913.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (83 samples, 37.05%)</title><rect x="484" y="260" width="437" height="15" fill="rgb(246,84,43)"/><text x="487.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="916" y="276" width="5" height="15" fill="rgb(206,163,52)"/><text x="919.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.45%)</title><rect x="916" y="292" width="5" height="15" fill="rgb(232,106,22)"/><text x="919.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.45%)</title><rect x="916" y="308" width="5" height="15" fill="rgb(245,33,26)"/><text x="919.00" y="318.50"></text></g><g><title>_dispatch (joblib/parallel.py) (107 samples, 47.77%)</title><rect x="384" y="196" width="563" height="15" fill="rgb(246,165,43)"/><text x="387.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (97 samples, 43.30%)</title><rect x="436" y="212" width="511" height="15" fill="rgb(254,228,23)"/><text x="439.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (93 samples, 41.52%)</title><rect x="457" y="228" width="490" height="15" fill="rgb(209,46,44)"/><text x="460.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (93 samples, 41.52%)</title><rect x="457" y="244" width="490" height="15" fill="rgb(246,152,5)"/><text x="460.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (5 samples, 2.23%)</title><rect x="921" y="260" width="26" height="15" fill="rgb(221,216,36)"/><text x="924.00" y="270.50">_..</text></g><g><title>__exit__ (threading.py) (1 samples, 0.45%)</title><rect x="984" y="212" width="5" height="15" fill="rgb(245,48,51)"/><text x="987.00" y="222.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.45%)</title><rect x="989" y="212" width="6" height="15" fill="rgb(236,23,40)"/><text x="992.00" y="222.50"></text></g><g><title>get (queue.py) (12 samples, 5.36%)</title><rect x="947" y="196" width="63" height="15" fill="rgb(216,126,19)"/><text x="950.00" y="206.50">get (q..</text></g><g><title>notify (threading.py) (3 samples, 1.34%)</title><rect x="995" y="212" width="15" height="15" fill="rgb(239,129,16)"/><text x="998.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (7 samples, 3.12%)</title><rect x="1031" y="212" width="37" height="15" fill="rgb(215,13,45)"/><text x="1034.00" y="222.50">_ha..</text></g><g><title>get_active_backend (joblib/parallel.py) (7 samples, 3.12%)</title><rect x="1068" y="212" width="37" height="15" fill="rgb(229,150,24)"/><text x="1071.00" y="222.50">get..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 1.34%)</title><rect x="1089" y="228" width="16" height="15" fill="rgb(205,27,45)"/><text x="1092.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (20 samples, 8.93%)</title><rect x="1010" y="196" width="106" height="15" fill="rgb(220,220,21)"/><text x="1013.00" y="206.50">get_nested_b..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.89%)</title><rect x="1105" y="212" width="11" height="15" fill="rgb(208,121,17)"/><text x="1108.00" y="222.50"></text></g><g><title>_put (queue.py) (1 samples, 0.45%)</title><rect x="1126" y="212" width="6" height="15" fill="rgb(238,16,23)"/><text x="1129.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (180 samples, 80.36%)</title><rect x="189" y="180" width="948" height="15" fill="rgb(232,24,12)"/><text x="192.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (4 samples, 1.79%)</title><rect x="1116" y="196" width="21" height="15" fill="rgb(207,34,48)"/><text x="1119.00" y="206.50"></text></g><g><title>notify (threading.py) (1 samples, 0.45%)</title><rect x="1132" y="212" width="5" height="15" fill="rgb(208,9,5)"/><text x="1135.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (185 samples, 82.59%)</title><rect x="183" y="164" width="975" height="15" fill="rgb(221,173,17)"/><text x="186.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="1137" y="180" width="21" height="15" fill="rgb(214,47,1)"/><text x="1140.00" y="190.50"></text></g><g><title>get (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="1153" y="196" width="5" height="15" fill="rgb(213,134,23)"/><text x="1156.00" y="206.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.45%)</title><rect x="1158" y="164" width="5" height="15" fill="rgb(213,141,18)"/><text x="1161.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1158" y="180" width="5" height="15" fill="rgb(234,143,7)"/><text x="1161.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1158" y="196" width="5" height="15" fill="rgb(210,48,50)"/><text x="1161.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1158" y="212" width="5" height="15" fill="rgb(216,188,1)"/><text x="1161.00" y="222.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1158" y="228" width="5" height="15" fill="rgb(238,153,30)"/><text x="1161.00" y="238.50"></text></g><g><title>PyArray_STRIDE (ndarraytypes.h) (1 samples, 0.45%)</title><rect x="1158" y="244" width="5" height="15" fill="rgb(249,115,17)"/><text x="1161.00" y="254.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (188 samples, 83.93%)</title><rect x="178" y="100" width="990" height="15" fill="rgb(253,175,46)"/><text x="181.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (188 samples, 83.93%)</title><rect x="178" y="116" width="990" height="15" fill="rgb(252,44,49)"/><text x="181.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (188 samples, 83.93%)</title><rect x="178" y="132" width="990" height="15" fill="rgb(223,74,26)"/><text x="181.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (188 samples, 83.93%)</title><rect x="178" y="148" width="990" height="15" fill="rgb(207,16,25)"/><text x="181.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (1 samples, 0.45%)</title><rect x="1163" y="164" width="5" height="15" fill="rgb(238,164,23)"/><text x="1166.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.45%)</title><rect x="1163" y="180" width="5" height="15" fill="rgb(232,68,36)"/><text x="1166.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="1163" y="196" width="5" height="15" fill="rgb(234,174,3)"/><text x="1166.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="1163" y="212" width="5" height="15" fill="rgb(206,17,54)"/><text x="1166.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="1163" y="228" width="5" height="15" fill="rgb(210,118,2)"/><text x="1166.00" y="238.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (189 samples, 84.38%)</title><rect x="178" y="68" width="996" height="15" fill="rgb(205,47,44)"/><text x="181.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (189 samples, 84.38%)</title><rect x="178" y="84" width="996" height="15" fill="rgb(227,221,41)"/><text x="181.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1168" y="100" width="6" height="15" fill="rgb(208,32,29)"/><text x="1171.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1168" y="116" width="6" height="15" fill="rgb(223,146,40)"/><text x="1171.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1168" y="132" width="6" height="15" fill="rgb(246,70,11)"/><text x="1171.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.45%)</title><rect x="1168" y="148" width="6" height="15" fill="rgb(221,196,43)"/><text x="1171.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.45%)</title><rect x="1168" y="164" width="6" height="15" fill="rgb(252,198,24)"/><text x="1171.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.45%)</title><rect x="1168" y="180" width="6" height="15" fill="rgb(213,215,23)"/><text x="1171.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.45%)</title><rect x="1168" y="196" width="6" height="15" fill="rgb(231,181,20)"/><text x="1171.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.45%)</title><rect x="1168" y="212" width="6" height="15" fill="rgb(217,31,37)"/><text x="1171.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="1168" y="228" width="6" height="15" fill="rgb(231,128,40)"/><text x="1171.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1168" y="244" width="6" height="15" fill="rgb(240,131,34)"/><text x="1171.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="1168" y="260" width="6" height="15" fill="rgb(247,98,30)"/><text x="1171.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="1168" y="276" width="6" height="15" fill="rgb(231,115,14)"/><text x="1171.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.45%)</title><rect x="1168" y="292" width="6" height="15" fill="rgb(222,1,15)"/><text x="1171.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.45%)</title><rect x="1168" y="308" width="6" height="15" fill="rgb(248,0,22)"/><text x="1171.00" y="318.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (1 samples, 0.45%)</title><rect x="1174" y="260" width="5" height="15" fill="rgb(253,142,45)"/><text x="1177.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="1174" y="276" width="5" height="15" fill="rgb(237,98,33)"/><text x="1177.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.45%)</title><rect x="1174" y="292" width="5" height="15" fill="rgb(228,178,19)"/><text x="1177.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.45%)</title><rect x="1174" y="308" width="5" height="15" fill="rgb(216,55,42)"/><text x="1177.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.45%)</title><rect x="1174" y="324" width="5" height="15" fill="rgb(242,157,37)"/><text x="1177.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.45%)</title><rect x="1174" y="340" width="5" height="15" fill="rgb(216,131,54)"/><text x="1177.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.45%)</title><rect x="1174" y="356" width="5" height="15" fill="rgb(230,165,36)"/><text x="1177.00" y="366.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (223 samples, 99.55%)</title><rect x="10" y="52" width="1174" height="15" fill="rgb(215,57,40)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1_50_12_float_.py) (2 samples, 0.89%)</title><rect x="1174" y="68" width="10" height="15" fill="rgb(214,153,50)"/><text x="1177.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py) (2 samples, 0.89%)</title><rect x="1174" y="84" width="10" height="15" fill="rgb(252,193,26)"/><text x="1177.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.89%)</title><rect x="1174" y="100" width="10" height="15" fill="rgb(234,31,19)"/><text x="1177.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (2 samples, 0.89%)</title><rect x="1174" y="116" width="10" height="15" fill="rgb(231,62,16)"/><text x="1177.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.89%)</title><rect x="1174" y="132" width="10" height="15" fill="rgb(248,26,37)"/><text x="1177.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (2 samples, 0.89%)</title><rect x="1174" y="148" width="10" height="15" fill="rgb(209,51,13)"/><text x="1177.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (2 samples, 0.89%)</title><rect x="1174" y="164" width="10" height="15" fill="rgb(242,188,6)"/><text x="1177.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (2 samples, 0.89%)</title><rect x="1174" y="180" width="10" height="15" fill="rgb(224,110,51)"/><text x="1177.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.89%)</title><rect x="1174" y="196" width="10" height="15" fill="rgb(225,119,33)"/><text x="1177.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.89%)</title><rect x="1174" y="212" width="10" height="15" fill="rgb(231,30,37)"/><text x="1177.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (2 samples, 0.89%)</title><rect x="1174" y="228" width="10" height="15" fill="rgb(234,26,42)"/><text x="1177.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (2 samples, 0.89%)</title><rect x="1174" y="244" width="10" height="15" fill="rgb(250,33,7)"/><text x="1177.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.45%)</title><rect x="1179" y="260" width="5" height="15" fill="rgb(227,95,47)"/><text x="1182.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.45%)</title><rect x="1179" y="276" width="5" height="15" fill="rgb(215,162,20)"/><text x="1182.00" y="286.50"></text></g><g><title>0x7ff24fb9bb11 (?) (1 samples, 0.45%)</title><rect x="1179" y="292" width="5" height="15" fill="rgb(207,145,28)"/><text x="1182.00" y="302.50"></text></g><g><title>0x7ff24fbcd10a (?) (1 samples, 0.45%)</title><rect x="1179" y="308" width="5" height="15" fill="rgb(228,106,41)"/><text x="1182.00" y="318.50"></text></g><g><title>0x7ff24fdf8d8c (?) (1 samples, 0.45%)</title><rect x="1179" y="324" width="5" height="15" fill="rgb(245,16,1)"/><text x="1182.00" y="334.50"></text></g><g><title>0x7ff24fdf1d03 (?) (1 samples, 0.45%)</title><rect x="1179" y="340" width="5" height="15" fill="rgb(245,46,31)"/><text x="1182.00" y="350.50"></text></g><g><title>all (224 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,82,32)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.45%)</title><rect x="1184" y="52" width="6" height="15" fill="rgb(218,166,16)"/><text x="1187.00" y="62.50"></text></g></g></svg>