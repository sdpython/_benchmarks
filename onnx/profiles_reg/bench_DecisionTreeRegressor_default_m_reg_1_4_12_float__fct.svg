<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1558" onload="init(evt)" viewBox="0 0 1200 1558" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1558" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1541.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1541.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(212,68,13)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(225,127,16)"/><text x="13.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(234,20,5)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(239,118,33)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(230,70,3)"/><text x="13.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(225,90,11)"/><text x="13.00" y="958.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.57%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(250,99,8)"/><text x="13.00" y="974.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="16" y="868" width="7" height="15" fill="rgb(227,162,39)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="16" y="884" width="7" height="15" fill="rgb(216,219,48)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="16" y="900" width="7" height="15" fill="rgb(217,136,24)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="16" y="916" width="7" height="15" fill="rgb(233,202,52)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="16" y="932" width="7" height="15" fill="rgb(222,156,46)"/><text x="19.00" y="942.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.57%)</title><rect x="16" y="948" width="7" height="15" fill="rgb(216,145,9)"/><text x="19.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.57%)</title><rect x="16" y="964" width="7" height="15" fill="rgb(241,125,51)"/><text x="19.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.57%)</title><rect x="16" y="980" width="7" height="15" fill="rgb(231,229,23)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.70%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(213,216,3)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(228,57,20)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(247,50,22)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(222,228,53)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.70%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(205,156,15)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(241,30,14)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.70%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(219,65,42)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(248,228,24)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(254,134,50)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(244,76,33)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.70%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(231,111,22)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(238,26,51)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.70%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(234,53,2)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(213,13,28)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(225,68,50)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(212,7,27)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.70%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(242,167,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(222,0,41)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.70%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(225,39,40)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(245,198,37)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(249,30,37)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(238,107,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(250,159,16)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(212,225,38)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(228,195,30)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.70%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(241,190,53)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(243,225,30)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.70%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(218,124,20)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(240,171,3)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(208,205,28)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(211,67,2)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.70%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(211,225,33)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(242,106,48)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.70%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(245,171,10)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.70%)</title><rect x="10" y="836" width="20" height="15" fill="rgb(208,148,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.70%)</title><rect x="10" y="852" width="20" height="15" fill="rgb(254,164,44)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="23" y="868" width="7" height="15" fill="rgb(229,78,22)"/><text x="26.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="23" y="884" width="7" height="15" fill="rgb(224,9,8)"/><text x="26.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="23" y="900" width="7" height="15" fill="rgb(231,124,35)"/><text x="26.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="23" y="916" width="7" height="15" fill="rgb(252,121,37)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.57%)</title><rect x="23" y="932" width="7" height="15" fill="rgb(225,57,24)"/><text x="26.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.57%)</title><rect x="23" y="948" width="7" height="15" fill="rgb(245,104,7)"/><text x="26.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.57%)</title><rect x="23" y="964" width="7" height="15" fill="rgb(249,158,18)"/><text x="26.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.57%)</title><rect x="23" y="980" width="7" height="15" fill="rgb(238,216,5)"/><text x="26.00" y="990.50"></text></g><g><title>0x7f3fe0d4b933 (?) (1 samples, 0.57%)</title><rect x="30" y="964" width="6" height="15" fill="rgb(244,108,0)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="10" y="196" width="33" height="15" fill="rgb(217,55,42)"/><text x="13.00" y="206.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="10" y="212" width="33" height="15" fill="rgb(206,169,27)"/><text x="13.00" y="222.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="10" y="228" width="33" height="15" fill="rgb(229,139,21)"/><text x="13.00" y="238.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="10" y="244" width="33" height="15" fill="rgb(216,174,41)"/><text x="13.00" y="254.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.84%)</title><rect x="10" y="260" width="33" height="15" fill="rgb(253,28,21)"/><text x="13.00" y="270.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="10" y="276" width="33" height="15" fill="rgb(219,102,38)"/><text x="13.00" y="286.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 1.14%)</title><rect x="30" y="292" width="13" height="15" fill="rgb(237,77,49)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="308" width="13" height="15" fill="rgb(254,126,9)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="324" width="13" height="15" fill="rgb(226,198,30)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="340" width="13" height="15" fill="rgb(206,128,5)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="356" width="13" height="15" fill="rgb(216,7,9)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="372" width="13" height="15" fill="rgb(248,187,3)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 1.14%)</title><rect x="30" y="388" width="13" height="15" fill="rgb(230,142,46)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="404" width="13" height="15" fill="rgb(241,214,13)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="420" width="13" height="15" fill="rgb(251,17,40)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="436" width="13" height="15" fill="rgb(218,209,18)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="452" width="13" height="15" fill="rgb(227,35,42)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="468" width="13" height="15" fill="rgb(208,149,7)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 1.14%)</title><rect x="30" y="484" width="13" height="15" fill="rgb(206,228,41)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="500" width="13" height="15" fill="rgb(214,199,29)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="516" width="13" height="15" fill="rgb(216,216,24)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="532" width="13" height="15" fill="rgb(239,54,2)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="548" width="13" height="15" fill="rgb(232,119,51)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="564" width="13" height="15" fill="rgb(212,214,24)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 1.14%)</title><rect x="30" y="580" width="13" height="15" fill="rgb(243,191,12)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="596" width="13" height="15" fill="rgb(240,20,36)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="612" width="13" height="15" fill="rgb(227,72,53)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="628" width="13" height="15" fill="rgb(232,82,37)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="644" width="13" height="15" fill="rgb(244,109,45)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="660" width="13" height="15" fill="rgb(244,186,34)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 1.14%)</title><rect x="30" y="676" width="13" height="15" fill="rgb(220,148,38)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="692" width="13" height="15" fill="rgb(223,86,24)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="708" width="13" height="15" fill="rgb(211,4,54)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="724" width="13" height="15" fill="rgb(217,175,29)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="740" width="13" height="15" fill="rgb(246,202,52)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="756" width="13" height="15" fill="rgb(254,6,13)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 1.14%)</title><rect x="30" y="772" width="13" height="15" fill="rgb(219,91,39)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="788" width="13" height="15" fill="rgb(210,116,23)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="804" width="13" height="15" fill="rgb(249,191,52)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="820" width="13" height="15" fill="rgb(212,129,2)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="836" width="13" height="15" fill="rgb(213,3,2)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="852" width="13" height="15" fill="rgb(235,150,23)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py) (2 samples, 1.14%)</title><rect x="30" y="868" width="13" height="15" fill="rgb(238,169,21)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="884" width="13" height="15" fill="rgb(243,176,47)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="900" width="13" height="15" fill="rgb(218,0,34)"/><text x="33.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="916" width="13" height="15" fill="rgb(248,30,13)"/><text x="33.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="30" y="932" width="13" height="15" fill="rgb(226,49,29)"/><text x="33.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="30" y="948" width="13" height="15" fill="rgb(237,18,12)"/><text x="33.00" y="958.50"></text></g><g><title>0x7f3fe0d4b933 (scipy/special/_ufuncs.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="36" y="964" width="7" height="15" fill="rgb(232,13,49)"/><text x="39.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1124" width="7" height="15" fill="rgb(214,4,20)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1140" width="7" height="15" fill="rgb(205,60,39)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1156" width="7" height="15" fill="rgb(222,73,41)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="43" y="1172" width="7" height="15" fill="rgb(219,199,7)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1188" width="7" height="15" fill="rgb(240,204,24)"/><text x="46.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.57%)</title><rect x="43" y="1204" width="7" height="15" fill="rgb(253,38,17)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1220" width="7" height="15" fill="rgb(238,159,16)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1236" width="7" height="15" fill="rgb(222,215,53)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1252" width="7" height="15" fill="rgb(216,189,19)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="43" y="1268" width="7" height="15" fill="rgb(253,215,41)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="43" y="1284" width="7" height="15" fill="rgb(216,225,39)"/><text x="46.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.57%)</title><rect x="43" y="1300" width="7" height="15" fill="rgb(224,13,9)"/><text x="46.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.57%)</title><rect x="43" y="1316" width="7" height="15" fill="rgb(209,212,0)"/><text x="46.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.57%)</title><rect x="43" y="1332" width="7" height="15" fill="rgb(252,117,23)"/><text x="46.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.57%)</title><rect x="43" y="1348" width="7" height="15" fill="rgb(251,93,26)"/><text x="46.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.57%)</title><rect x="43" y="1364" width="7" height="15" fill="rgb(207,6,9)"/><text x="46.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.57%)</title><rect x="43" y="1380" width="7" height="15" fill="rgb(222,196,19)"/><text x="46.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="484" width="13" height="15" fill="rgb(235,102,53)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="500" width="13" height="15" fill="rgb(241,123,47)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="516" width="13" height="15" fill="rgb(235,47,41)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="532" width="13" height="15" fill="rgb(229,221,42)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="43" y="548" width="13" height="15" fill="rgb(250,179,31)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="564" width="13" height="15" fill="rgb(234,205,51)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 1.14%)</title><rect x="43" y="580" width="13" height="15" fill="rgb(212,1,19)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="596" width="13" height="15" fill="rgb(239,60,28)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="612" width="13" height="15" fill="rgb(232,131,32)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="628" width="13" height="15" fill="rgb(208,229,38)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="43" y="644" width="13" height="15" fill="rgb(243,160,25)"/><text x="46.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="660" width="13" height="15" fill="rgb(208,92,50)"/><text x="46.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 1.14%)</title><rect x="43" y="676" width="13" height="15" fill="rgb(215,146,15)"/><text x="46.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="692" width="13" height="15" fill="rgb(242,59,24)"/><text x="46.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="708" width="13" height="15" fill="rgb(208,60,28)"/><text x="46.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="724" width="13" height="15" fill="rgb(238,120,8)"/><text x="46.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="43" y="740" width="13" height="15" fill="rgb(210,28,9)"/><text x="46.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="756" width="13" height="15" fill="rgb(252,142,36)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 1.14%)</title><rect x="43" y="772" width="13" height="15" fill="rgb(239,25,40)"/><text x="46.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="788" width="13" height="15" fill="rgb(229,121,19)"/><text x="46.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="804" width="13" height="15" fill="rgb(243,56,38)"/><text x="46.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="820" width="13" height="15" fill="rgb(213,63,7)"/><text x="46.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="43" y="836" width="13" height="15" fill="rgb(211,10,47)"/><text x="46.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="852" width="13" height="15" fill="rgb(209,64,31)"/><text x="46.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 1.14%)</title><rect x="43" y="868" width="13" height="15" fill="rgb(219,221,35)"/><text x="46.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="884" width="13" height="15" fill="rgb(208,197,49)"/><text x="46.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="900" width="13" height="15" fill="rgb(206,57,24)"/><text x="46.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="916" width="13" height="15" fill="rgb(222,111,0)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="932" width="13" height="15" fill="rgb(242,120,26)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="948" width="13" height="15" fill="rgb(218,142,31)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="964" width="13" height="15" fill="rgb(208,10,2)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="43" y="980" width="13" height="15" fill="rgb(220,43,7)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="996" width="13" height="15" fill="rgb(214,198,31)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 1.14%)</title><rect x="43" y="1012" width="13" height="15" fill="rgb(234,212,13)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="1028" width="13" height="15" fill="rgb(226,72,4)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="1044" width="13" height="15" fill="rgb(224,202,14)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="1060" width="13" height="15" fill="rgb(253,3,11)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="43" y="1076" width="13" height="15" fill="rgb(253,144,50)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="43" y="1092" width="13" height="15" fill="rgb(224,100,54)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 1.14%)</title><rect x="43" y="1108" width="13" height="15" fill="rgb(220,158,40)"/><text x="46.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1124" width="6" height="15" fill="rgb(215,50,44)"/><text x="53.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1140" width="6" height="15" fill="rgb(233,212,54)"/><text x="53.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1156" width="6" height="15" fill="rgb(206,68,24)"/><text x="53.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1172" width="6" height="15" fill="rgb(250,46,1)"/><text x="53.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1188" width="6" height="15" fill="rgb(206,92,40)"/><text x="53.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="50" y="1204" width="6" height="15" fill="rgb(248,14,11)"/><text x="53.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1220" width="6" height="15" fill="rgb(212,131,45)"/><text x="53.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.57%)</title><rect x="50" y="1236" width="6" height="15" fill="rgb(228,159,16)"/><text x="53.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1252" width="6" height="15" fill="rgb(223,164,3)"/><text x="53.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1268" width="6" height="15" fill="rgb(211,5,26)"/><text x="53.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1284" width="6" height="15" fill="rgb(239,4,41)"/><text x="53.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1300" width="6" height="15" fill="rgb(241,67,38)"/><text x="53.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1316" width="6" height="15" fill="rgb(253,116,36)"/><text x="53.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="50" y="1332" width="6" height="15" fill="rgb(231,66,14)"/><text x="53.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1348" width="6" height="15" fill="rgb(236,28,14)"/><text x="53.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.57%)</title><rect x="50" y="1364" width="6" height="15" fill="rgb(210,23,20)"/><text x="53.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1380" width="6" height="15" fill="rgb(250,23,31)"/><text x="53.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1396" width="6" height="15" fill="rgb(235,58,6)"/><text x="53.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1412" width="6" height="15" fill="rgb(210,60,40)"/><text x="53.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="50" y="1428" width="6" height="15" fill="rgb(207,96,43)"/><text x="53.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="50" y="1444" width="6" height="15" fill="rgb(218,226,25)"/><text x="53.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.57%)</title><rect x="50" y="1460" width="6" height="15" fill="rgb(253,221,5)"/><text x="53.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.57%)</title><rect x="50" y="1476" width="6" height="15" fill="rgb(230,77,9)"/><text x="53.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.57%)</title><rect x="50" y="1492" width="6" height="15" fill="rgb(218,29,48)"/><text x="53.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.57%)</title><rect x="50" y="1508" width="6" height="15" fill="rgb(251,154,45)"/><text x="53.00" y="1518.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.70%)</title><rect x="43" y="340" width="20" height="15" fill="rgb(246,162,5)"/><text x="46.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="43" y="356" width="20" height="15" fill="rgb(225,8,5)"/><text x="46.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="43" y="372" width="20" height="15" fill="rgb(250,160,43)"/><text x="46.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="43" y="388" width="20" height="15" fill="rgb(229,157,48)"/><text x="46.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.70%)</title><rect x="43" y="404" width="20" height="15" fill="rgb(237,63,20)"/><text x="46.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="43" y="420" width="20" height="15" fill="rgb(234,84,36)"/><text x="46.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 1.70%)</title><rect x="43" y="436" width="20" height="15" fill="rgb(224,23,10)"/><text x="46.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="43" y="452" width="20" height="15" fill="rgb(227,161,35)"/><text x="46.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.70%)</title><rect x="43" y="468" width="20" height="15" fill="rgb(244,95,15)"/><text x="46.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="484" width="7" height="15" fill="rgb(221,143,54)"/><text x="59.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="500" width="7" height="15" fill="rgb(227,113,46)"/><text x="59.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="516" width="7" height="15" fill="rgb(211,195,41)"/><text x="59.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.57%)</title><rect x="56" y="532" width="7" height="15" fill="rgb(205,44,35)"/><text x="59.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="548" width="7" height="15" fill="rgb(221,80,15)"/><text x="59.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="564" width="7" height="15" fill="rgb(247,202,26)"/><text x="59.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="580" width="7" height="15" fill="rgb(240,25,54)"/><text x="59.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="596" width="7" height="15" fill="rgb(209,113,50)"/><text x="59.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="612" width="7" height="15" fill="rgb(239,25,32)"/><text x="59.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.57%)</title><rect x="56" y="628" width="7" height="15" fill="rgb(238,186,7)"/><text x="59.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="644" width="7" height="15" fill="rgb(209,82,49)"/><text x="59.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="660" width="7" height="15" fill="rgb(246,154,36)"/><text x="59.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="676" width="7" height="15" fill="rgb(235,78,9)"/><text x="59.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="692" width="7" height="15" fill="rgb(230,141,34)"/><text x="59.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="708" width="7" height="15" fill="rgb(228,119,38)"/><text x="59.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.57%)</title><rect x="56" y="724" width="7" height="15" fill="rgb(212,73,27)"/><text x="59.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="740" width="7" height="15" fill="rgb(252,118,45)"/><text x="59.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="756" width="7" height="15" fill="rgb(251,223,22)"/><text x="59.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="772" width="7" height="15" fill="rgb(241,50,40)"/><text x="59.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="788" width="7" height="15" fill="rgb(205,105,45)"/><text x="59.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="804" width="7" height="15" fill="rgb(239,153,11)"/><text x="59.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.57%)</title><rect x="56" y="820" width="7" height="15" fill="rgb(217,198,45)"/><text x="59.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="836" width="7" height="15" fill="rgb(211,198,23)"/><text x="59.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="852" width="7" height="15" fill="rgb(229,158,29)"/><text x="59.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="868" width="7" height="15" fill="rgb(213,5,12)"/><text x="59.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="884" width="7" height="15" fill="rgb(244,61,43)"/><text x="59.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="900" width="7" height="15" fill="rgb(206,214,41)"/><text x="59.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.57%)</title><rect x="56" y="916" width="7" height="15" fill="rgb(220,80,4)"/><text x="59.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="932" width="7" height="15" fill="rgb(249,112,0)"/><text x="59.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="948" width="7" height="15" fill="rgb(232,70,7)"/><text x="59.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="964" width="7" height="15" fill="rgb(246,144,22)"/><text x="59.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="980" width="7" height="15" fill="rgb(213,67,22)"/><text x="59.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="996" width="7" height="15" fill="rgb(211,129,12)"/><text x="59.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.57%)</title><rect x="56" y="1012" width="7" height="15" fill="rgb(222,146,30)"/><text x="59.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="1028" width="7" height="15" fill="rgb(247,203,38)"/><text x="59.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="1044" width="7" height="15" fill="rgb(209,138,44)"/><text x="59.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="1060" width="7" height="15" fill="rgb(216,106,54)"/><text x="59.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="56" y="1076" width="7" height="15" fill="rgb(220,106,42)"/><text x="59.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="56" y="1092" width="7" height="15" fill="rgb(229,22,54)"/><text x="59.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.57%)</title><rect x="56" y="1108" width="7" height="15" fill="rgb(235,69,4)"/><text x="59.00" y="1118.50"></text></g><g><title>Series (pandas/core/series.py) (1 samples, 0.57%)</title><rect x="56" y="1124" width="7" height="15" fill="rgb(247,192,11)"/><text x="59.00" y="1134.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 2.84%)</title><rect x="43" y="244" width="34" height="15" fill="rgb(239,39,6)"/><text x="46.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="43" y="260" width="34" height="15" fill="rgb(239,28,14)"/><text x="46.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="43" y="276" width="34" height="15" fill="rgb(239,47,45)"/><text x="46.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="43" y="292" width="34" height="15" fill="rgb(223,216,25)"/><text x="46.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.84%)</title><rect x="43" y="308" width="34" height="15" fill="rgb(245,114,34)"/><text x="46.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.84%)</title><rect x="43" y="324" width="34" height="15" fill="rgb(248,130,30)"/><text x="46.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 1.14%)</title><rect x="63" y="340" width="14" height="15" fill="rgb(249,138,20)"/><text x="66.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="356" width="14" height="15" fill="rgb(236,78,8)"/><text x="66.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="372" width="14" height="15" fill="rgb(245,50,47)"/><text x="66.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="388" width="14" height="15" fill="rgb(219,206,0)"/><text x="66.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="404" width="14" height="15" fill="rgb(229,122,38)"/><text x="66.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="420" width="14" height="15" fill="rgb(220,34,44)"/><text x="66.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="436" width="14" height="15" fill="rgb(216,222,26)"/><text x="66.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="452" width="14" height="15" fill="rgb(214,73,29)"/><text x="66.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="468" width="14" height="15" fill="rgb(211,122,37)"/><text x="66.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 1.14%)</title><rect x="63" y="484" width="14" height="15" fill="rgb(207,26,33)"/><text x="66.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="500" width="14" height="15" fill="rgb(220,106,34)"/><text x="66.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="516" width="14" height="15" fill="rgb(224,183,0)"/><text x="66.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="532" width="14" height="15" fill="rgb(210,221,29)"/><text x="66.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="548" width="14" height="15" fill="rgb(230,193,38)"/><text x="66.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="564" width="14" height="15" fill="rgb(237,228,20)"/><text x="66.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 1.14%)</title><rect x="63" y="580" width="14" height="15" fill="rgb(219,0,3)"/><text x="66.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="596" width="14" height="15" fill="rgb(217,176,46)"/><text x="66.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="612" width="14" height="15" fill="rgb(231,167,33)"/><text x="66.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="628" width="14" height="15" fill="rgb(249,110,34)"/><text x="66.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="644" width="14" height="15" fill="rgb(220,106,31)"/><text x="66.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="660" width="14" height="15" fill="rgb(216,119,3)"/><text x="66.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="676" width="14" height="15" fill="rgb(249,88,18)"/><text x="66.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="692" width="14" height="15" fill="rgb(243,88,41)"/><text x="66.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="708" width="14" height="15" fill="rgb(210,142,20)"/><text x="66.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (2 samples, 1.14%)</title><rect x="63" y="724" width="14" height="15" fill="rgb(237,92,11)"/><text x="66.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="740" width="14" height="15" fill="rgb(224,185,28)"/><text x="66.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="756" width="14" height="15" fill="rgb(213,33,31)"/><text x="66.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="772" width="14" height="15" fill="rgb(206,19,3)"/><text x="66.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="788" width="14" height="15" fill="rgb(242,218,36)"/><text x="66.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="804" width="14" height="15" fill="rgb(251,138,0)"/><text x="66.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (2 samples, 1.14%)</title><rect x="63" y="820" width="14" height="15" fill="rgb(208,32,0)"/><text x="66.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="836" width="14" height="15" fill="rgb(210,177,16)"/><text x="66.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="852" width="14" height="15" fill="rgb(239,49,47)"/><text x="66.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="868" width="14" height="15" fill="rgb(249,93,0)"/><text x="66.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="884" width="14" height="15" fill="rgb(232,10,9)"/><text x="66.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="900" width="14" height="15" fill="rgb(246,103,6)"/><text x="66.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (2 samples, 1.14%)</title><rect x="63" y="916" width="14" height="15" fill="rgb(210,163,46)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="932" width="14" height="15" fill="rgb(210,187,11)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="948" width="14" height="15" fill="rgb(226,60,47)"/><text x="66.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="964" width="14" height="15" fill="rgb(251,116,54)"/><text x="66.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="980" width="14" height="15" fill="rgb(253,37,17)"/><text x="66.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="996" width="14" height="15" fill="rgb(227,210,16)"/><text x="66.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="1012" width="14" height="15" fill="rgb(250,53,49)"/><text x="66.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="1028" width="14" height="15" fill="rgb(245,79,8)"/><text x="66.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="1044" width="14" height="15" fill="rgb(243,184,30)"/><text x="66.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (2 samples, 1.14%)</title><rect x="63" y="1060" width="14" height="15" fill="rgb(221,139,20)"/><text x="66.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="1076" width="14" height="15" fill="rgb(236,128,10)"/><text x="66.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="1092" width="14" height="15" fill="rgb(232,86,21)"/><text x="66.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.14%)</title><rect x="63" y="1108" width="14" height="15" fill="rgb(245,210,28)"/><text x="66.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="1124" width="14" height="15" fill="rgb(213,202,39)"/><text x="66.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="1140" width="14" height="15" fill="rgb(238,166,22)"/><text x="66.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.14%)</title><rect x="63" y="1156" width="14" height="15" fill="rgb(240,60,50)"/><text x="66.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 6.25%)</title><rect x="10" y="68" width="73" height="15" fill="rgb(222,98,17)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 6.25%)</title><rect x="10" y="84" width="73" height="15" fill="rgb(239,91,1)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 6.25%)</title><rect x="10" y="100" width="73" height="15" fill="rgb(208,215,16)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 6.25%)</title><rect x="10" y="116" width="73" height="15" fill="rgb(220,209,51)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 6.25%)</title><rect x="10" y="132" width="73" height="15" fill="rgb(227,86,38)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (11 samples, 6.25%)</title><rect x="10" y="148" width="73" height="15" fill="rgb(245,67,50)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 6.25%)</title><rect x="10" y="164" width="73" height="15" fill="rgb(208,141,45)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 6.25%)</title><rect x="10" y="180" width="73" height="15" fill="rgb(215,218,3)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.41%)</title><rect x="43" y="196" width="40" height="15" fill="rgb(220,29,11)"/><text x="46.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.41%)</title><rect x="43" y="212" width="40" height="15" fill="rgb(222,93,13)"/><text x="46.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.41%)</title><rect x="43" y="228" width="40" height="15" fill="rgb(246,211,3)"/><text x="46.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.57%)</title><rect x="77" y="244" width="6" height="15" fill="rgb(237,17,0)"/><text x="80.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="260" width="6" height="15" fill="rgb(215,194,6)"/><text x="80.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="276" width="6" height="15" fill="rgb(227,191,26)"/><text x="80.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="292" width="6" height="15" fill="rgb(219,66,51)"/><text x="80.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="308" width="6" height="15" fill="rgb(253,199,45)"/><text x="80.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="324" width="6" height="15" fill="rgb(205,97,38)"/><text x="80.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="77" y="340" width="6" height="15" fill="rgb(233,74,20)"/><text x="80.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="356" width="6" height="15" fill="rgb(211,145,54)"/><text x="80.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.57%)</title><rect x="77" y="372" width="6" height="15" fill="rgb(209,24,24)"/><text x="80.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="388" width="6" height="15" fill="rgb(206,28,24)"/><text x="80.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="404" width="6" height="15" fill="rgb(233,76,15)"/><text x="80.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="420" width="6" height="15" fill="rgb(244,145,6)"/><text x="80.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="77" y="436" width="6" height="15" fill="rgb(248,187,30)"/><text x="80.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="452" width="6" height="15" fill="rgb(223,81,47)"/><text x="80.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.57%)</title><rect x="77" y="468" width="6" height="15" fill="rgb(249,52,25)"/><text x="80.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="484" width="6" height="15" fill="rgb(232,112,49)"/><text x="80.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="500" width="6" height="15" fill="rgb(241,24,54)"/><text x="80.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="77" y="516" width="6" height="15" fill="rgb(251,64,22)"/><text x="80.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="77" y="532" width="6" height="15" fill="rgb(217,87,31)"/><text x="80.00" y="542.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="77" y="548" width="6" height="15" fill="rgb(219,22,42)"/><text x="80.00" y="558.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="77" y="564" width="6" height="15" fill="rgb(252,82,49)"/><text x="80.00" y="574.50"></text></g><g><title>profile0 (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (1 samples, 0.57%)</title><rect x="83" y="100" width="7" height="15" fill="rgb(243,206,39)"/><text x="86.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.57%)</title><rect x="83" y="116" width="7" height="15" fill="rgb(227,178,23)"/><text x="86.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.57%)</title><rect x="83" y="132" width="7" height="15" fill="rgb(209,57,44)"/><text x="86.00" y="142.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.57%)</title><rect x="83" y="148" width="7" height="15" fill="rgb(226,75,31)"/><text x="86.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.57%)</title><rect x="83" y="164" width="7" height="15" fill="rgb(214,28,50)"/><text x="86.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.57%)</title><rect x="83" y="180" width="7" height="15" fill="rgb(215,183,21)"/><text x="86.00" y="190.50"></text></g><g><title>profile0_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (2 samples, 1.14%)</title><rect x="83" y="68" width="14" height="15" fill="rgb(211,213,11)"/><text x="86.00" y="78.50"></text></g><g><title>setup_profile0 (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (2 samples, 1.14%)</title><rect x="83" y="84" width="14" height="15" fill="rgb(245,12,8)"/><text x="86.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.57%)</title><rect x="90" y="100" width="7" height="15" fill="rgb(219,150,24)"/><text x="93.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.57%)</title><rect x="90" y="116" width="7" height="15" fill="rgb(206,2,36)"/><text x="93.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.57%)</title><rect x="90" y="132" width="7" height="15" fill="rgb(237,134,13)"/><text x="93.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="148" width="7" height="15" fill="rgb(239,64,51)"/><text x="93.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="164" width="7" height="15" fill="rgb(236,157,20)"/><text x="93.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="180" width="7" height="15" fill="rgb(226,151,44)"/><text x="93.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="90" y="196" width="7" height="15" fill="rgb(210,155,37)"/><text x="93.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="212" width="7" height="15" fill="rgb(239,224,51)"/><text x="93.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.57%)</title><rect x="90" y="228" width="7" height="15" fill="rgb(238,149,36)"/><text x="93.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="244" width="7" height="15" fill="rgb(226,163,8)"/><text x="93.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="260" width="7" height="15" fill="rgb(241,155,39)"/><text x="93.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="276" width="7" height="15" fill="rgb(208,205,33)"/><text x="93.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.57%)</title><rect x="90" y="292" width="7" height="15" fill="rgb(251,220,5)"/><text x="93.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="90" y="308" width="7" height="15" fill="rgb(213,227,52)"/><text x="93.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (1 samples, 0.57%)</title><rect x="90" y="324" width="7" height="15" fill="rgb(236,167,13)"/><text x="93.00" y="334.50"></text></g><g><title>_load_lib (xgboost/core.py) (1 samples, 0.57%)</title><rect x="90" y="340" width="7" height="15" fill="rgb(211,166,10)"/><text x="93.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py) (1 samples, 0.57%)</title><rect x="90" y="356" width="7" height="15" fill="rgb(222,95,5)"/><text x="93.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py) (1 samples, 0.57%)</title><rect x="90" y="372" width="7" height="15" fill="rgb(250,212,11)"/><text x="93.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c) (1 samples, 0.57%)</title><rect x="90" y="388" width="7" height="15" fill="rgb(241,65,18)"/><text x="93.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="404" width="7" height="15" fill="rgb(251,127,31)"/><text x="93.00" y="414.50"></text></g><g><title>0x7f3ff5d09995 (libdl-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="420" width="7" height="15" fill="rgb(249,33,3)"/><text x="93.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="436" width="7" height="15" fill="rgb(227,184,30)"/><text x="93.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="452" width="7" height="15" fill="rgb(240,74,27)"/><text x="93.00" y="462.50"></text></g><g><title>0x7f3ff5d09258 (libdl-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="468" width="7" height="15" fill="rgb(239,186,43)"/><text x="93.00" y="478.50"></text></g><g><title>0x7f3ff5d56d7a (ld-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="484" width="7" height="15" fill="rgb(221,166,19)"/><text x="93.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="500" width="7" height="15" fill="rgb(219,170,9)"/><text x="93.00" y="510.50"></text></g><g><title>0x7f3ff5d57345 (ld-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="516" width="7" height="15" fill="rgb(214,74,33)"/><text x="93.00" y="526.50"></text></g><g><title>0x7f3ff5d4ff75 (ld-2.29.so) (1 samples, 0.57%)</title><rect x="90" y="532" width="7" height="15" fill="rgb(211,210,18)"/><text x="93.00" y="542.50"></text></g><g><title>0x7f3fb5b400e0 (?) (1 samples, 0.57%)</title><rect x="170" y="228" width="7" height="15" fill="rgb(240,56,26)"/><text x="173.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.70%)</title><rect x="164" y="212" width="20" height="15" fill="rgb(219,81,39)"/><text x="167.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="177" y="228" width="7" height="15" fill="rgb(230,164,54)"/><text x="180.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="177" y="244" width="7" height="15" fill="rgb(229,218,10)"/><text x="180.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="177" y="260" width="7" height="15" fill="rgb(250,9,26)"/><text x="180.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="177" y="276" width="7" height="15" fill="rgb(248,105,51)"/><text x="180.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="177" y="292" width="7" height="15" fill="rgb(250,136,36)"/><text x="180.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.57%)</title><rect x="191" y="260" width="6" height="15" fill="rgb(235,106,31)"/><text x="194.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="204" y="292" width="13" height="15" fill="rgb(236,48,44)"/><text x="207.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="211" y="308" width="6" height="15" fill="rgb(225,229,15)"/><text x="214.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="217" y="292" width="7" height="15" fill="rgb(223,161,5)"/><text x="220.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.57%)</title><rect x="217" y="308" width="7" height="15" fill="rgb(206,85,30)"/><text x="220.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.57%)</title><rect x="217" y="324" width="7" height="15" fill="rgb(218,105,20)"/><text x="220.00" y="334.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="231" y="340" width="13" height="15" fill="rgb(249,222,21)"/><text x="234.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="231" y="356" width="13" height="15" fill="rgb(208,96,52)"/><text x="234.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="231" y="372" width="13" height="15" fill="rgb(229,203,16)"/><text x="234.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="244" y="340" width="7" height="15" fill="rgb(220,71,25)"/><text x="247.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="258" y="468" width="6" height="15" fill="rgb(227,90,52)"/><text x="261.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="258" y="484" width="6" height="15" fill="rgb(241,120,20)"/><text x="261.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="258" y="500" width="6" height="15" fill="rgb(229,46,11)"/><text x="261.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.57%)</title><rect x="258" y="516" width="6" height="15" fill="rgb(214,73,44)"/><text x="261.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="356" width="13" height="15" fill="rgb(253,227,25)"/><text x="261.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="372" width="13" height="15" fill="rgb(211,90,34)"/><text x="261.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="388" width="13" height="15" fill="rgb(239,67,12)"/><text x="261.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="404" width="13" height="15" fill="rgb(209,137,14)"/><text x="261.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="420" width="13" height="15" fill="rgb(205,212,8)"/><text x="261.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="436" width="13" height="15" fill="rgb(217,11,53)"/><text x="261.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="258" y="452" width="13" height="15" fill="rgb(246,16,7)"/><text x="261.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="264" y="468" width="7" height="15" fill="rgb(241,228,43)"/><text x="267.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="264" y="484" width="7" height="15" fill="rgb(226,102,27)"/><text x="267.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.82%)</title><rect x="197" y="260" width="81" height="15" fill="rgb(206,154,19)"/><text x="200.00" y="270.50">onnxrunti..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.82%)</title><rect x="197" y="276" width="81" height="15" fill="rgb(243,163,30)"/><text x="200.00" y="286.50">onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.55%)</title><rect x="224" y="292" width="54" height="15" fill="rgb(211,186,31)"/><text x="227.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.55%)</title><rect x="224" y="308" width="54" height="15" fill="rgb(254,68,9)"/><text x="227.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.55%)</title><rect x="224" y="324" width="54" height="15" fill="rgb(252,120,31)"/><text x="227.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 2.27%)</title><rect x="251" y="340" width="27" height="15" fill="rgb(205,62,37)"/><text x="254.00" y="350.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="271" y="356" width="7" height="15" fill="rgb(217,40,33)"/><text x="274.00" y="366.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="271" y="372" width="7" height="15" fill="rgb(235,34,36)"/><text x="274.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="271" y="388" width="7" height="15" fill="rgb(236,77,40)"/><text x="274.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.57%)</title><rect x="271" y="404" width="7" height="15" fill="rgb(206,87,35)"/><text x="274.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.57%)</title><rect x="271" y="420" width="7" height="15" fill="rgb(235,157,8)"/><text x="274.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="278" y="276" width="6" height="15" fill="rgb(234,174,14)"/><text x="281.00" y="286.50"></text></g><g><title>0x7f3fb5b06930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="278" y="292" width="6" height="15" fill="rgb(228,149,19)"/><text x="281.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="278" y="260" width="13" height="15" fill="rgb(239,126,30)"/><text x="281.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.57%)</title><rect x="284" y="276" width="7" height="15" fill="rgb(252,32,34)"/><text x="287.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 9.66%)</title><rect x="191" y="244" width="114" height="15" fill="rgb(236,27,38)"/><text x="194.00" y="254.50">onnxruntime::p..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.14%)</title><rect x="291" y="260" width="14" height="15" fill="rgb(229,180,25)"/><text x="294.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 1.14%)</title><rect x="291" y="276" width="14" height="15" fill="rgb(246,64,42)"/><text x="294.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.14%)</title><rect x="291" y="292" width="14" height="15" fill="rgb(228,120,19)"/><text x="294.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (2 samples, 1.14%)</title><rect x="291" y="308" width="14" height="15" fill="rgb(222,181,20)"/><text x="294.00" y="318.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (32 samples, 18.18%)</title><rect x="97" y="68" width="214" height="15" fill="rgb(214,193,23)"/><text x="100.00" y="78.50">profile_ort (bench_DecisionT..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (32 samples, 18.18%)</title><rect x="97" y="84" width="214" height="15" fill="rgb(237,43,6)"/><text x="100.00" y="94.50">setup_profile (bench_Decisio..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (32 samples, 18.18%)</title><rect x="97" y="100" width="214" height="15" fill="rgb(242,98,33)"/><text x="100.00" y="110.50">profile (bench_DecisionTreeR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (32 samples, 18.18%)</title><rect x="97" y="116" width="214" height="15" fill="rgb(251,121,0)"/><text x="100.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (31 samples, 17.61%)</title><rect x="103" y="132" width="208" height="15" fill="rgb(205,17,9)"/><text x="106.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (30 samples, 17.05%)</title><rect x="110" y="148" width="201" height="15" fill="rgb(207,191,17)"/><text x="113.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (29 samples, 16.48%)</title><rect x="117" y="164" width="194" height="15" fill="rgb(206,127,9)"/><text x="120.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (26 samples, 14.77%)</title><rect x="137" y="180" width="174" height="15" fill="rgb(251,57,49)"/><text x="140.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py) (26 samples, 14.77%)</title><rect x="137" y="196" width="174" height="15" fill="rgb(248,7,8)"/><text x="140.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 10.80%)</title><rect x="184" y="212" width="127" height="15" fill="rgb(229,18,21)"/><text x="187.00" y="222.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 10.80%)</title><rect x="184" y="228" width="127" height="15" fill="rgb(226,31,47)"/><text x="187.00" y="238.50">void pybind11::..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.57%)</title><rect x="305" y="244" width="6" height="15" fill="rgb(232,190,32)"/><text x="308.00" y="254.50"></text></g><g><title>0x7f3fb655a54f (?) (1 samples, 0.57%)</title><rect x="318" y="244" width="7" height="15" fill="rgb(205,143,21)"/><text x="321.00" y="254.50"></text></g><g><title>0x7f3fb656065e (?) (1 samples, 0.57%)</title><rect x="318" y="260" width="7" height="15" fill="rgb(253,142,41)"/><text x="321.00" y="270.50"></text></g><g><title>0x7f3fb656050f (?) (1 samples, 0.57%)</title><rect x="318" y="276" width="7" height="15" fill="rgb(207,176,40)"/><text x="321.00" y="286.50"></text></g><g><title>0x7f3fb6566d6c (?) (1 samples, 0.57%)</title><rect x="318" y="292" width="7" height="15" fill="rgb(228,143,42)"/><text x="321.00" y="302.50"></text></g><g><title>0x7f3fbfa87ab9 (libgomp.so.1.0.0) (1 samples, 0.57%)</title><rect x="318" y="308" width="7" height="15" fill="rgb(239,166,1)"/><text x="321.00" y="318.50"></text></g><g><title>0x7f3fbfa88ead (libgomp.so.1.0.0) (1 samples, 0.57%)</title><rect x="318" y="324" width="7" height="15" fill="rgb(226,201,53)"/><text x="321.00" y="334.50"></text></g><g><title>0x7f3fbfa88ea0 (libgomp.so.1.0.0) (2 samples, 1.14%)</title><rect x="325" y="484" width="13" height="15" fill="rgb(221,111,13)"/><text x="328.00" y="494.50"></text></g><g><title>0x7f3fbfa88ea9 (libgomp.so.1.0.0) (8 samples, 4.55%)</title><rect x="338" y="484" width="54" height="15" fill="rgb(242,71,37)"/><text x="341.00" y="494.50">0x7f3..</text></g><g><title>0x7f3fbfa88eab (libgomp.so.1.0.0) (9 samples, 5.11%)</title><rect x="392" y="484" width="60" height="15" fill="rgb(247,170,49)"/><text x="395.00" y="494.50">0x7f3f..</text></g><g><title>0x7f3fbfa87ab9 (libgomp.so.1.0.0) (22 samples, 12.50%)</title><rect x="325" y="468" width="147" height="15" fill="rgb(209,18,44)"/><text x="328.00" y="478.50">0x7f3fbfa87ab9 (li..</text></g><g><title>0x7f3fbfa88ead (libgomp.so.1.0.0) (3 samples, 1.70%)</title><rect x="452" y="484" width="20" height="15" fill="rgb(239,123,1)"/><text x="455.00" y="494.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (25 samples, 14.20%)</title><rect x="311" y="68" width="168" height="15" fill="rgb(210,31,15)"/><text x="314.00" y="78.50">profile_pyrt (bench_D..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (25 samples, 14.20%)</title><rect x="311" y="84" width="168" height="15" fill="rgb(219,229,8)"/><text x="314.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (25 samples, 14.20%)</title><rect x="311" y="100" width="168" height="15" fill="rgb(244,181,43)"/><text x="314.00" y="110.50">profile (bench_Decisi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 14.20%)</title><rect x="311" y="116" width="168" height="15" fill="rgb(205,128,14)"/><text x="314.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 14.20%)</title><rect x="311" y="132" width="168" height="15" fill="rgb(209,78,36)"/><text x="314.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (25 samples, 14.20%)</title><rect x="311" y="148" width="168" height="15" fill="rgb(215,30,2)"/><text x="314.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (25 samples, 14.20%)</title><rect x="311" y="164" width="168" height="15" fill="rgb(221,211,32)"/><text x="314.00" y="174.50">_run_sequence_runtime..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (25 samples, 14.20%)</title><rect x="311" y="180" width="168" height="15" fill="rgb(205,100,49)"/><text x="314.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 14.20%)</title><rect x="311" y="196" width="168" height="15" fill="rgb(209,103,25)"/><text x="314.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (24 samples, 13.64%)</title><rect x="318" y="212" width="161" height="15" fill="rgb(216,189,51)"/><text x="321.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (24 samples, 13.64%)</title><rect x="318" y="228" width="161" height="15" fill="rgb(221,118,33)"/><text x="321.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (23 samples, 13.07%)</title><rect x="325" y="244" width="154" height="15" fill="rgb(220,62,26)"/><text x="328.00" y="254.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (23 samples, 13.07%)</title><rect x="325" y="260" width="154" height="15" fill="rgb(247,100,24)"/><text x="328.00" y="270.50">void pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (23 samples, 13.07%)</title><rect x="325" y="276" width="154" height="15" fill="rgb(213,127,51)"/><text x="328.00" y="286.50">void pybind11::cpp_..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (23 samples, 13.07%)</title><rect x="325" y="292" width="154" height="15" fill="rgb(220,139,29)"/><text x="328.00" y="302.50">pybind11::detail::a..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (23 samples, 13.07%)</title><rect x="325" y="308" width="154" height="15" fill="rgb(224,150,10)"/><text x="328.00" y="318.50">pybind11::detail::a..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (23 samples, 13.07%)</title><rect x="325" y="324" width="154" height="15" fill="rgb(242,167,39)"/><text x="328.00" y="334.50">pybind11::cpp_funct..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (23 samples, 13.07%)</title><rect x="325" y="340" width="154" height="15" fill="rgb(209,192,34)"/><text x="328.00" y="350.50">pybind11::array_t&lt;f..</text></g><g><title>pybind11::array::~array (numpy.h) (23 samples, 13.07%)</title><rect x="325" y="356" width="154" height="15" fill="rgb(243,5,13)"/><text x="328.00" y="366.50">pybind11::array::~a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (23 samples, 13.07%)</title><rect x="325" y="372" width="154" height="15" fill="rgb(224,208,39)"/><text x="328.00" y="382.50">pybind11::buffer::~..</text></g><g><title>pybind11::object::~object (pytypes.h) (23 samples, 13.07%)</title><rect x="325" y="388" width="154" height="15" fill="rgb(238,157,18)"/><text x="328.00" y="398.50">pybind11::object::~..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (23 samples, 13.07%)</title><rect x="325" y="404" width="154" height="15" fill="rgb(249,66,47)"/><text x="328.00" y="414.50">pybind11::handle::d..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (23 samples, 13.07%)</title><rect x="325" y="420" width="154" height="15" fill="rgb(242,69,54)"/><text x="328.00" y="430.50">RuntimeTreeEnsemble..</text></g><g><title>pybind11::array::size (numpy.h) (23 samples, 13.07%)</title><rect x="325" y="436" width="154" height="15" fill="rgb(231,78,35)"/><text x="328.00" y="446.50">pybind11::array::si..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (23 samples, 13.07%)</title><rect x="325" y="452" width="154" height="15" fill="rgb(237,90,33)"/><text x="328.00" y="462.50">std::accumulate&lt;lon..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.57%)</title><rect x="472" y="468" width="7" height="15" fill="rgb(224,131,16)"/><text x="475.00" y="478.50"></text></g><g><title>0x7f3fbfa86daa (libgomp.so.1.0.0) (1 samples, 0.57%)</title><rect x="472" y="484" width="7" height="15" fill="rgb(242,36,28)"/><text x="475.00" y="494.50"></text></g><g><title>0x7f3fbfa88cf9 (libgomp.so.1.0.0) (1 samples, 0.57%)</title><rect x="472" y="500" width="7" height="15" fill="rgb(218,50,53)"/><text x="475.00" y="510.50"></text></g><g><title>0x7f3fd00edd2e (?) (1 samples, 0.57%)</title><rect x="546" y="164" width="7" height="15" fill="rgb(206,170,45)"/><text x="549.00" y="174.50"></text></g><g><title>0x7f3fd00ed05a (?) (1 samples, 0.57%)</title><rect x="546" y="180" width="7" height="15" fill="rgb(231,47,11)"/><text x="549.00" y="190.50"></text></g><g><title>array_take (methods.c) (1 samples, 0.57%)</title><rect x="546" y="196" width="7" height="15" fill="rgb(251,169,40)"/><text x="549.00" y="206.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.57%)</title><rect x="546" y="212" width="7" height="15" fill="rgb(220,98,20)"/><text x="549.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.57%)</title><rect x="553" y="244" width="6" height="15" fill="rgb(213,31,52)"/><text x="556.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.57%)</title><rect x="553" y="260" width="6" height="15" fill="rgb(216,61,44)"/><text x="556.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.57%)</title><rect x="553" y="276" width="6" height="15" fill="rgb(246,155,16)"/><text x="556.00" y="286.50"></text></g><g><title>0x7f3fd00ecf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="553" y="180" width="13" height="15" fill="rgb(222,172,46)"/><text x="556.00" y="190.50"></text></g><g><title>0x7f3fd00dcd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="553" y="196" width="13" height="15" fill="rgb(228,125,36)"/><text x="556.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 1.14%)</title><rect x="553" y="212" width="13" height="15" fill="rgb(247,132,37)"/><text x="556.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.14%)</title><rect x="553" y="228" width="13" height="15" fill="rgb(234,98,22)"/><text x="556.00" y="238.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.57%)</title><rect x="559" y="244" width="7" height="15" fill="rgb(218,32,11)"/><text x="562.00" y="254.50"></text></g><g><title>0x7f3fd00fb1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="566" y="212" width="7" height="15" fill="rgb(224,225,39)"/><text x="569.00" y="222.50"></text></g><g><title>0x7f3fd00fb225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="573" y="212" width="6" height="15" fill="rgb(210,162,6)"/><text x="576.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.57%)</title><rect x="573" y="228" width="6" height="15" fill="rgb(221,211,26)"/><text x="576.00" y="238.50"></text></g><g><title>0x7f3ff4ca40a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="573" y="244" width="6" height="15" fill="rgb(242,226,31)"/><text x="576.00" y="254.50"></text></g><g><title>0x7f3fd00dfd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="579" y="228" width="7" height="15" fill="rgb(247,93,47)"/><text x="582.00" y="238.50"></text></g><g><title>0x7f3fd00df666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="579" y="244" width="7" height="15" fill="rgb(238,41,17)"/><text x="582.00" y="254.50"></text></g><g><title>0x7f3fd00d52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="579" y="260" width="7" height="15" fill="rgb(219,139,52)"/><text x="582.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.57%)</title><rect x="579" y="276" width="7" height="15" fill="rgb(217,182,46)"/><text x="582.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.57%)</title><rect x="579" y="292" width="7" height="15" fill="rgb(219,35,22)"/><text x="582.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.57%)</title><rect x="579" y="308" width="7" height="15" fill="rgb(239,86,50)"/><text x="582.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.57%)</title><rect x="579" y="324" width="7" height="15" fill="rgb(249,131,21)"/><text x="582.00" y="334.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.57%)</title><rect x="579" y="340" width="7" height="15" fill="rgb(217,118,42)"/><text x="582.00" y="350.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.57%)</title><rect x="579" y="356" width="7" height="15" fill="rgb(210,118,20)"/><text x="582.00" y="366.50"></text></g><g><title>0x7f3fd00fb2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="579" y="212" width="14" height="15" fill="rgb(222,41,35)"/><text x="582.00" y="222.50"></text></g><g><title>0x7f3fd00dfe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="586" y="228" width="7" height="15" fill="rgb(237,98,4)"/><text x="589.00" y="238.50"></text></g><g><title>0x7f3fd00d32bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="586" y="244" width="7" height="15" fill="rgb(252,166,10)"/><text x="589.00" y="254.50"></text></g><g><title>0x7f3fd00d2df8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="586" y="260" width="7" height="15" fill="rgb(236,140,21)"/><text x="589.00" y="270.50"></text></g><g><title>0x7f3fd00fb456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="593" y="212" width="7" height="15" fill="rgb(242,17,3)"/><text x="596.00" y="222.50"></text></g><g><title>0x7f3fd00fb592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.70%)</title><rect x="600" y="212" width="20" height="15" fill="rgb(226,63,42)"/><text x="603.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 1.14%)</title><rect x="606" y="228" width="14" height="15" fill="rgb(252,92,7)"/><text x="609.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 1.14%)</title><rect x="606" y="244" width="14" height="15" fill="rgb(252,122,25)"/><text x="609.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 1.14%)</title><rect x="606" y="260" width="14" height="15" fill="rgb(212,0,29)"/><text x="609.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (2 samples, 1.14%)</title><rect x="606" y="276" width="14" height="15" fill="rgb(222,201,24)"/><text x="609.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (2 samples, 1.14%)</title><rect x="606" y="292" width="14" height="15" fill="rgb(222,100,4)"/><text x="609.00" y="302.50"></text></g><g><title>0x7f3fd00ecfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 5.11%)</title><rect x="566" y="180" width="60" height="15" fill="rgb(253,88,31)"/><text x="569.00" y="190.50">0x7f3f..</text></g><g><title>0x7f3fd00fc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 5.11%)</title><rect x="566" y="196" width="60" height="15" fill="rgb(223,191,48)"/><text x="569.00" y="206.50">0x7f3f..</text></g><g><title>0x7f3fd00fbc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="620" y="212" width="6" height="15" fill="rgb(228,3,32)"/><text x="623.00" y="222.50"></text></g><g><title>0x7f3fd00d3529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="620" y="228" width="6" height="15" fill="rgb(206,37,22)"/><text x="623.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.57%)</title><rect x="620" y="244" width="6" height="15" fill="rgb(219,135,18)"/><text x="623.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.57%)</title><rect x="620" y="260" width="6" height="15" fill="rgb(235,108,22)"/><text x="623.00" y="270.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.57%)</title><rect x="640" y="212" width="6" height="15" fill="rgb(245,80,19)"/><text x="643.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.57%)</title><rect x="646" y="228" width="7" height="15" fill="rgb(236,71,7)"/><text x="649.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.57%)</title><rect x="646" y="244" width="7" height="15" fill="rgb(220,64,20)"/><text x="649.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.57%)</title><rect x="653" y="228" width="7" height="15" fill="rgb(249,87,22)"/><text x="656.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.57%)</title><rect x="653" y="244" width="7" height="15" fill="rgb(241,152,48)"/><text x="656.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.57%)</title><rect x="653" y="260" width="7" height="15" fill="rgb(253,143,49)"/><text x="656.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 1.70%)</title><rect x="646" y="212" width="21" height="15" fill="rgb(254,216,37)"/><text x="649.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.57%)</title><rect x="660" y="228" width="7" height="15" fill="rgb(215,182,4)"/><text x="663.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.57%)</title><rect x="660" y="244" width="7" height="15" fill="rgb(230,23,18)"/><text x="663.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.57%)</title><rect x="660" y="260" width="7" height="15" fill="rgb(205,34,14)"/><text x="663.00" y="270.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.57%)</title><rect x="660" y="276" width="7" height="15" fill="rgb(218,91,28)"/><text x="663.00" y="286.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.57%)</title><rect x="660" y="292" width="7" height="15" fill="rgb(221,93,23)"/><text x="663.00" y="302.50"></text></g><g><title>0x7f3fd00ed05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.98%)</title><rect x="626" y="180" width="47" height="15" fill="rgb(226,80,42)"/><text x="629.00" y="190.50">0x7f..</text></g><g><title>array_take (methods.c) (6 samples, 3.41%)</title><rect x="633" y="196" width="40" height="15" fill="rgb(228,109,34)"/><text x="636.00" y="206.50">arr..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.57%)</title><rect x="667" y="212" width="6" height="15" fill="rgb(219,43,49)"/><text x="670.00" y="222.50"></text></g><g><title>0x7f3fd00ed13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="673" y="180" width="7" height="15" fill="rgb(214,36,4)"/><text x="676.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.57%)</title><rect x="673" y="196" width="7" height="15" fill="rgb(223,76,9)"/><text x="676.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.57%)</title><rect x="673" y="212" width="7" height="15" fill="rgb(213,174,30)"/><text x="676.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.57%)</title><rect x="673" y="228" width="7" height="15" fill="rgb(217,100,27)"/><text x="676.00" y="238.50"></text></g><g><title>0x7f3fd00ed14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="680" y="180" width="13" height="15" fill="rgb(216,121,17)"/><text x="683.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 1.14%)</title><rect x="680" y="196" width="13" height="15" fill="rgb(217,177,45)"/><text x="683.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 1.14%)</title><rect x="680" y="212" width="13" height="15" fill="rgb(209,222,22)"/><text x="683.00" y="222.50"></text></g><g><title>0x7f3fd00ed18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="693" y="180" width="7" height="15" fill="rgb(214,142,50)"/><text x="696.00" y="190.50"></text></g><g><title>0x7f3fd00ed1bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.14%)</title><rect x="700" y="180" width="13" height="15" fill="rgb(246,184,46)"/><text x="703.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 1.14%)</title><rect x="700" y="196" width="13" height="15" fill="rgb(234,188,24)"/><text x="703.00" y="206.50"></text></g><g><title>0x7f3fd00ed2b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="713" y="180" width="7" height="15" fill="rgb(219,116,6)"/><text x="716.00" y="190.50"></text></g><g><title>0x7f3ff5aa214e (libc-2.29.so) (1 samples, 0.57%)</title><rect x="713" y="196" width="7" height="15" fill="rgb(221,86,42)"/><text x="716.00" y="206.50"></text></g><g><title>0x7f3fd00edd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (26 samples, 14.77%)</title><rect x="553" y="164" width="174" height="15" fill="rgb(225,144,4)"/><text x="556.00" y="174.50">0x7f3fd00edd2e (sklear..</text></g><g><title>0x7f3fd00ed328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="720" y="180" width="7" height="15" fill="rgb(245,216,25)"/><text x="723.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.57%)</title><rect x="720" y="196" width="7" height="15" fill="rgb(222,59,17)"/><text x="723.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.57%)</title><rect x="720" y="212" width="7" height="15" fill="rgb(224,89,39)"/><text x="723.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 2.27%)</title><rect x="814" y="196" width="27" height="15" fill="rgb(239,60,7)"/><text x="817.00" y="206.50">_..</text></g><g><title>__exit__ (warnings.py) (2 samples, 1.14%)</title><rect x="841" y="196" width="13" height="15" fill="rgb(251,63,36)"/><text x="844.00" y="206.50"></text></g><g><title>0x7f3ff5a97e7a (libc-2.29.so) (1 samples, 0.57%)</title><rect x="881" y="212" width="7" height="15" fill="rgb(223,79,27)"/><text x="884.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="888" y="212" width="7" height="15" fill="rgb(250,215,33)"/><text x="891.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (7 samples, 3.98%)</title><rect x="854" y="196" width="47" height="15" fill="rgb(214,192,41)"/><text x="857.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.57%)</title><rect x="895" y="212" width="6" height="15" fill="rgb(246,85,4)"/><text x="898.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.57%)</title><rect x="901" y="196" width="7" height="15" fill="rgb(246,220,8)"/><text x="904.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (8 samples, 4.55%)</title><rect x="908" y="196" width="54" height="15" fill="rgb(231,55,52)"/><text x="911.00" y="206.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.57%)</title><rect x="955" y="212" width="7" height="15" fill="rgb(228,88,32)"/><text x="958.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.57%)</title><rect x="955" y="228" width="7" height="15" fill="rgb(239,174,0)"/><text x="958.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 1.70%)</title><rect x="962" y="196" width="20" height="15" fill="rgb(217,207,5)"/><text x="965.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.57%)</title><rect x="975" y="212" width="7" height="15" fill="rgb(211,157,4)"/><text x="978.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 2.84%)</title><rect x="982" y="196" width="33" height="15" fill="rgb(222,108,13)"/><text x="985.00" y="206.50">as..</text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 2.84%)</title><rect x="982" y="212" width="33" height="15" fill="rgb(225,39,40)"/><text x="985.00" y="222.50">_a..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.57%)</title><rect x="1008" y="228" width="7" height="15" fill="rgb(217,64,22)"/><text x="1011.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.57%)</title><rect x="1015" y="196" width="7" height="15" fill="rgb(224,198,42)"/><text x="1018.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (53 samples, 30.11%)</title><rect x="727" y="164" width="355" height="15" fill="rgb(252,222,27)"/><text x="730.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (52 samples, 29.55%)</title><rect x="734" y="180" width="348" height="15" fill="rgb(211,165,6)"/><text x="737.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (9 samples, 5.11%)</title><rect x="1022" y="196" width="60" height="15" fill="rgb(241,38,22)"/><text x="1025.00" y="206.50">simple..</text></g><g><title>_add_filter (warnings.py) (6 samples, 3.41%)</title><rect x="1042" y="212" width="40" height="15" fill="rgb(244,222,45)"/><text x="1045.00" y="222.50">_ad..</text></g><g><title>array_subscript (mapping.c) (2 samples, 1.14%)</title><rect x="1082" y="164" width="14" height="15" fill="rgb(221,114,14)"/><text x="1085.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.57%)</title><rect x="1089" y="180" width="7" height="15" fill="rgb(216,220,22)"/><text x="1092.00" y="190.50"></text></g><g><title>0x7f3ff4ca3600 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.57%)</title><rect x="1089" y="196" width="7" height="15" fill="rgb(211,212,12)"/><text x="1092.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 2.84%)</title><rect x="1143" y="196" width="33" height="15" fill="rgb(249,67,53)"/><text x="1146.00" y="206.50">un..</text></g><g><title>all (176 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(251,111,9)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (176 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(239,92,28)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (106 samples, 60.23%)</title><rect x="479" y="68" width="711" height="15" fill="rgb(231,108,11)"/><text x="482.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (106 samples, 60.23%)</title><rect x="479" y="84" width="711" height="15" fill="rgb(234,3,12)"/><text x="482.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (106 samples, 60.23%)</title><rect x="479" y="100" width="711" height="15" fill="rgb(241,74,33)"/><text x="482.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (105 samples, 59.66%)</title><rect x="486" y="116" width="704" height="15" fill="rgb(225,107,7)"/><text x="489.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (103 samples, 58.52%)</title><rect x="499" y="132" width="691" height="15" fill="rgb(225,88,3)"/><text x="502.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (103 samples, 58.52%)</title><rect x="499" y="148" width="691" height="15" fill="rgb(225,138,25)"/><text x="502.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (14 samples, 7.95%)</title><rect x="1096" y="164" width="94" height="15" fill="rgb(240,22,43)"/><text x="1099.00" y="174.50">check_is_fi..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 7.39%)</title><rect x="1102" y="180" width="88" height="15" fill="rgb(231,104,12)"/><text x="1105.00" y="190.50">&lt;listcomp&gt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.14%)</title><rect x="1176" y="196" width="14" height="15" fill="rgb(224,213,34)"/><text x="1179.00" y="206.50"></text></g></g></svg>