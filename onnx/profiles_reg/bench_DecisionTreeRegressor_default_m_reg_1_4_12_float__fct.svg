<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1510" onload="init(evt)" viewBox="0 0 1200 1510" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1510" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1493.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1493.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(230,139,15)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(206,200,18)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(217,39,10)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(228,85,2)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(205,99,24)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(225,85,3)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(207,142,47)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(237,63,53)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="10" y="996" width="5" height="15" fill="rgb(211,156,51)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="10" y="1012" width="5" height="15" fill="rgb(221,110,4)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.44%)</title><rect x="10" y="1028" width="5" height="15" fill="rgb(206,47,12)"/><text x="13.00" y="1038.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="10" y="1044" width="5" height="15" fill="rgb(231,7,24)"/><text x="13.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(250,159,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.88%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(249,160,8)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(235,51,47)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(209,20,19)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(221,184,2)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(246,222,34)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(237,141,48)"/><text x="18.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(253,184,37)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(233,97,49)"/><text x="18.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.44%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(217,165,48)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.44%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(209,221,4)"/><text x="18.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.44%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(239,208,49)"/><text x="18.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.44%)</title><rect x="15" y="1028" width="5" height="15" fill="rgb(215,113,51)"/><text x="18.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.44%)</title><rect x="15" y="1044" width="5" height="15" fill="rgb(228,64,40)"/><text x="18.00" y="1054.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.44%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(218,219,48)"/><text x="23.00" y="926.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.44%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(234,123,7)"/><text x="23.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(216,23,29)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(220,16,46)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(233,192,27)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(249,26,15)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(248,224,26)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(222,212,25)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.75%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(213,106,20)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(252,92,29)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(237,201,2)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(216,176,49)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(226,215,14)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(244,41,42)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.75%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(244,181,21)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(228,22,24)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(240,208,30)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(240,113,7)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(235,71,46)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(233,59,31)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.75%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(221,201,10)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(219,68,7)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(213,40,4)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(221,131,38)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(222,166,37)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(227,45,50)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(210,59,22)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(247,104,39)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(229,42,46)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(246,168,52)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(227,189,39)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(222,195,6)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(215,38,26)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(238,79,31)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(215,223,44)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.75%)</title><rect x="10" y="820" width="20" height="15" fill="rgb(230,118,0)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="20" y="836" width="10" height="15" fill="rgb(208,138,1)"/><text x="23.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="20" y="852" width="10" height="15" fill="rgb(206,205,7)"/><text x="23.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="20" y="868" width="10" height="15" fill="rgb(219,148,21)"/><text x="23.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="20" y="884" width="10" height="15" fill="rgb(236,57,52)"/><text x="23.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="20" y="900" width="10" height="15" fill="rgb(207,72,42)"/><text x="23.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.44%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(244,122,27)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(218,193,30)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(221,181,32)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(211,2,16)"/><text x="28.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(208,85,43)"/><text x="28.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.44%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(211,26,24)"/><text x="28.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(209,142,49)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="1028" width="5" height="15" fill="rgb(245,137,8)"/><text x="28.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="1044" width="5" height="15" fill="rgb(214,205,44)"/><text x="28.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="25" y="1060" width="5" height="15" fill="rgb(239,13,9)"/><text x="28.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="25" y="1076" width="5" height="15" fill="rgb(210,148,37)"/><text x="28.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1092" width="5" height="15" fill="rgb(243,48,29)"/><text x="28.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1108" width="5" height="15" fill="rgb(242,126,18)"/><text x="28.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1124" width="5" height="15" fill="rgb(244,1,35)"/><text x="28.00" y="1134.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1140" width="5" height="15" fill="rgb(249,97,10)"/><text x="28.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1156" width="5" height="15" fill="rgb(249,73,29)"/><text x="28.00" y="1166.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1172" width="5" height="15" fill="rgb(213,153,50)"/><text x="28.00" y="1182.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1188" width="5" height="15" fill="rgb(226,79,6)"/><text x="28.00" y="1198.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1204" width="5" height="15" fill="rgb(251,9,12)"/><text x="28.00" y="1214.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1220" width="5" height="15" fill="rgb(243,161,25)"/><text x="28.00" y="1230.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1236" width="5" height="15" fill="rgb(216,173,42)"/><text x="28.00" y="1246.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1252" width="5" height="15" fill="rgb(207,113,4)"/><text x="28.00" y="1262.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1268" width="5" height="15" fill="rgb(218,222,41)"/><text x="28.00" y="1278.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1284" width="5" height="15" fill="rgb(241,197,12)"/><text x="28.00" y="1294.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1300" width="5" height="15" fill="rgb(246,24,15)"/><text x="28.00" y="1310.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1316" width="5" height="15" fill="rgb(205,39,39)"/><text x="28.00" y="1326.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1332" width="5" height="15" fill="rgb(226,150,53)"/><text x="28.00" y="1342.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1348" width="5" height="15" fill="rgb(224,195,1)"/><text x="28.00" y="1358.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1364" width="5" height="15" fill="rgb(241,151,51)"/><text x="28.00" y="1374.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.44%)</title><rect x="25" y="1380" width="5" height="15" fill="rgb(235,43,2)"/><text x="28.00" y="1390.50"></text></g><g><title>copy (copy.py) (1 samples, 0.44%)</title><rect x="25" y="1396" width="5" height="15" fill="rgb(238,122,18)"/><text x="28.00" y="1406.50"></text></g><g><title>0x7fec35d7ce7a (libc-2.29.so) (1 samples, 0.44%)</title><rect x="25" y="1412" width="5" height="15" fill="rgb(218,200,39)"/><text x="28.00" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.44%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(205,150,26)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(253,135,46)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(218,191,14)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(230,182,44)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(210,0,33)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(212,127,15)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.44%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(252,55,27)"/><text x="33.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(214,2,40)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(212,90,25)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(216,64,7)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(249,112,16)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1076" width="5" height="15" fill="rgb(232,140,42)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="1092" width="5" height="15" fill="rgb(250,179,12)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1108" width="5" height="15" fill="rgb(214,208,45)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.44%)</title><rect x="30" y="1124" width="5" height="15" fill="rgb(220,50,29)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1140" width="5" height="15" fill="rgb(246,108,39)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1156" width="5" height="15" fill="rgb(210,177,1)"/><text x="33.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1172" width="5" height="15" fill="rgb(226,180,53)"/><text x="33.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="1188" width="5" height="15" fill="rgb(215,190,27)"/><text x="33.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1204" width="5" height="15" fill="rgb(249,229,22)"/><text x="33.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_root.py) (1 samples, 0.44%)</title><rect x="30" y="1220" width="5" height="15" fill="rgb(243,45,9)"/><text x="33.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1236" width="5" height="15" fill="rgb(240,176,9)"/><text x="33.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1252" width="5" height="15" fill="rgb(224,211,48)"/><text x="33.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1268" width="5" height="15" fill="rgb(214,126,46)"/><text x="33.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1284" width="5" height="15" fill="rgb(211,177,35)"/><text x="33.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1300" width="5" height="15" fill="rgb(220,69,50)"/><text x="33.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="30" y="1316" width="5" height="15" fill="rgb(242,194,12)"/><text x="33.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="30" y="1332" width="5" height="15" fill="rgb(236,217,30)"/><text x="33.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/nonlin.py) (1 samples, 0.44%)</title><rect x="30" y="1348" width="5" height="15" fill="rgb(241,197,20)"/><text x="33.00" y="1358.50"></text></g><g><title>_nonlin_wrapper (scipy/optimize/nonlin.py) (1 samples, 0.44%)</title><rect x="30" y="1364" width="5" height="15" fill="rgb(237,48,17)"/><text x="33.00" y="1374.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.44%)</title><rect x="30" y="1380" width="5" height="15" fill="rgb(248,216,42)"/><text x="33.00" y="1390.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.44%)</title><rect x="30" y="1396" width="5" height="15" fill="rgb(253,136,17)"/><text x="33.00" y="1406.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.44%)</title><rect x="30" y="1412" width="5" height="15" fill="rgb(247,31,12)"/><text x="33.00" y="1422.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.44%)</title><rect x="30" y="1428" width="5" height="15" fill="rgb(241,170,47)"/><text x="33.00" y="1438.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.44%)</title><rect x="30" y="1444" width="5" height="15" fill="rgb(240,229,25)"/><text x="33.00" y="1454.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.44%)</title><rect x="30" y="1460" width="5" height="15" fill="rgb(249,100,15)"/><text x="33.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="500" width="11" height="15" fill="rgb(234,135,36)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="516" width="11" height="15" fill="rgb(247,22,30)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="532" width="11" height="15" fill="rgb(219,53,13)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="30" y="548" width="11" height="15" fill="rgb(210,188,2)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="564" width="11" height="15" fill="rgb(249,180,45)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.88%)</title><rect x="30" y="580" width="11" height="15" fill="rgb(209,87,9)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="596" width="11" height="15" fill="rgb(239,202,10)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="612" width="11" height="15" fill="rgb(249,15,17)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="628" width="11" height="15" fill="rgb(233,122,24)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="30" y="644" width="11" height="15" fill="rgb(208,60,32)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="660" width="11" height="15" fill="rgb(220,139,14)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.88%)</title><rect x="30" y="676" width="11" height="15" fill="rgb(207,163,16)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="692" width="11" height="15" fill="rgb(236,95,26)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="708" width="11" height="15" fill="rgb(213,66,42)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="724" width="11" height="15" fill="rgb(233,202,12)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="30" y="740" width="11" height="15" fill="rgb(221,155,4)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="756" width="11" height="15" fill="rgb(228,106,52)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.88%)</title><rect x="30" y="772" width="11" height="15" fill="rgb(220,209,17)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="788" width="11" height="15" fill="rgb(244,229,9)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="804" width="11" height="15" fill="rgb(224,222,44)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="820" width="11" height="15" fill="rgb(227,213,6)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="836" width="11" height="15" fill="rgb(251,91,24)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="852" width="11" height="15" fill="rgb(247,103,37)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="30" y="868" width="11" height="15" fill="rgb(213,102,51)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="30" y="884" width="11" height="15" fill="rgb(225,7,40)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/mstats_basic.py) (1 samples, 0.44%)</title><rect x="35" y="900" width="6" height="15" fill="rgb(227,209,5)"/><text x="38.00" y="910.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.44%)</title><rect x="35" y="916" width="6" height="15" fill="rgb(220,38,28)"/><text x="38.00" y="926.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.44%)</title><rect x="41" y="804" width="5" height="15" fill="rgb(224,9,41)"/><text x="44.00" y="814.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="41" y="820" width="5" height="15" fill="rgb(234,4,43)"/><text x="44.00" y="830.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="41" y="836" width="5" height="15" fill="rgb(248,178,2)"/><text x="44.00" y="846.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.44%)</title><rect x="41" y="852" width="5" height="15" fill="rgb(237,229,21)"/><text x="44.00" y="862.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="41" y="868" width="5" height="15" fill="rgb(212,26,1)"/><text x="44.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.51%)</title><rect x="10" y="196" width="41" height="15" fill="rgb(206,19,29)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.51%)</title><rect x="10" y="212" width="41" height="15" fill="rgb(235,7,42)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.51%)</title><rect x="10" y="228" width="41" height="15" fill="rgb(212,15,52)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.51%)</title><rect x="10" y="244" width="41" height="15" fill="rgb(219,5,13)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.51%)</title><rect x="10" y="260" width="41" height="15" fill="rgb(251,214,23)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.51%)</title><rect x="10" y="276" width="41" height="15" fill="rgb(223,0,52)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.75%)</title><rect x="30" y="292" width="21" height="15" fill="rgb(220,35,34)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="308" width="21" height="15" fill="rgb(225,32,22)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="324" width="21" height="15" fill="rgb(208,162,9)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="340" width="21" height="15" fill="rgb(232,181,23)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="30" y="356" width="21" height="15" fill="rgb(240,149,28)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="372" width="21" height="15" fill="rgb(212,148,37)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.75%)</title><rect x="30" y="388" width="21" height="15" fill="rgb(238,41,26)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="404" width="21" height="15" fill="rgb(246,60,7)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="420" width="21" height="15" fill="rgb(212,136,15)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="436" width="21" height="15" fill="rgb(216,70,33)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.75%)</title><rect x="30" y="452" width="21" height="15" fill="rgb(212,156,42)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.75%)</title><rect x="30" y="468" width="21" height="15" fill="rgb(220,104,18)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.75%)</title><rect x="30" y="484" width="21" height="15" fill="rgb(222,65,19)"/><text x="33.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="500" width="10" height="15" fill="rgb(240,220,47)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="516" width="10" height="15" fill="rgb(234,134,13)"/><text x="44.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="532" width="10" height="15" fill="rgb(246,8,20)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="548" width="10" height="15" fill="rgb(225,16,46)"/><text x="44.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="564" width="10" height="15" fill="rgb(243,197,20)"/><text x="44.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="41" y="580" width="10" height="15" fill="rgb(243,199,34)"/><text x="44.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="596" width="10" height="15" fill="rgb(208,225,12)"/><text x="44.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.88%)</title><rect x="41" y="612" width="10" height="15" fill="rgb(241,61,27)"/><text x="44.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="628" width="10" height="15" fill="rgb(211,144,53)"/><text x="44.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="644" width="10" height="15" fill="rgb(235,164,41)"/><text x="44.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="660" width="10" height="15" fill="rgb(232,29,41)"/><text x="44.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="41" y="676" width="10" height="15" fill="rgb(214,97,49)"/><text x="44.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="692" width="10" height="15" fill="rgb(227,97,46)"/><text x="44.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.88%)</title><rect x="41" y="708" width="10" height="15" fill="rgb(235,50,38)"/><text x="44.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="724" width="10" height="15" fill="rgb(246,225,13)"/><text x="44.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="740" width="10" height="15" fill="rgb(251,17,25)"/><text x="44.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="756" width="10" height="15" fill="rgb(224,215,24)"/><text x="44.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="41" y="772" width="10" height="15" fill="rgb(237,112,3)"/><text x="44.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="41" y="788" width="10" height="15" fill="rgb(226,142,37)"/><text x="44.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.44%)</title><rect x="46" y="804" width="5" height="15" fill="rgb(244,219,36)"/><text x="49.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="820" width="5" height="15" fill="rgb(238,124,22)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="836" width="5" height="15" fill="rgb(223,46,18)"/><text x="49.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="852" width="5" height="15" fill="rgb(237,176,27)"/><text x="49.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="868" width="5" height="15" fill="rgb(248,200,53)"/><text x="49.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="884" width="5" height="15" fill="rgb(215,202,7)"/><text x="49.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.44%)</title><rect x="46" y="900" width="5" height="15" fill="rgb(210,37,19)"/><text x="49.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="916" width="5" height="15" fill="rgb(227,41,46)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="932" width="5" height="15" fill="rgb(252,69,14)"/><text x="49.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="948" width="5" height="15" fill="rgb(229,125,29)"/><text x="49.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="964" width="5" height="15" fill="rgb(215,58,27)"/><text x="49.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="980" width="5" height="15" fill="rgb(223,72,43)"/><text x="49.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.44%)</title><rect x="46" y="996" width="5" height="15" fill="rgb(240,115,48)"/><text x="49.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1012" width="5" height="15" fill="rgb(247,12,50)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1028" width="5" height="15" fill="rgb(228,168,12)"/><text x="49.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1044" width="5" height="15" fill="rgb(216,133,18)"/><text x="49.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1060" width="5" height="15" fill="rgb(239,69,20)"/><text x="49.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1076" width="5" height="15" fill="rgb(250,112,52)"/><text x="49.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1092" width="5" height="15" fill="rgb(242,104,0)"/><text x="49.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="46" y="1108" width="5" height="15" fill="rgb(226,194,28)"/><text x="49.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1124" width="5" height="15" fill="rgb(220,153,20)"/><text x="49.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.44%)</title><rect x="46" y="1140" width="5" height="15" fill="rgb(229,121,50)"/><text x="49.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1156" width="5" height="15" fill="rgb(211,177,53)"/><text x="49.00" y="1166.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1172" width="5" height="15" fill="rgb(216,121,12)"/><text x="49.00" y="1182.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="46" y="1188" width="5" height="15" fill="rgb(252,204,1)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (1 samples, 0.44%)</title><rect x="51" y="244" width="5" height="15" fill="rgb(207,58,39)"/><text x="54.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="260" width="5" height="15" fill="rgb(225,135,17)"/><text x="54.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="276" width="5" height="15" fill="rgb(242,34,54)"/><text x="54.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="292" width="5" height="15" fill="rgb(238,51,25)"/><text x="54.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="308" width="5" height="15" fill="rgb(239,158,26)"/><text x="54.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="324" width="5" height="15" fill="rgb(213,76,48)"/><text x="54.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="51" y="340" width="5" height="15" fill="rgb(236,229,44)"/><text x="54.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="356" width="5" height="15" fill="rgb(245,173,46)"/><text x="54.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="372" width="5" height="15" fill="rgb(218,157,36)"/><text x="54.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="388" width="5" height="15" fill="rgb(226,112,39)"/><text x="54.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="404" width="5" height="15" fill="rgb(213,162,30)"/><text x="54.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="420" width="5" height="15" fill="rgb(215,147,34)"/><text x="54.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (1 samples, 0.44%)</title><rect x="51" y="436" width="5" height="15" fill="rgb(221,142,8)"/><text x="54.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="452" width="5" height="15" fill="rgb(226,7,53)"/><text x="54.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="468" width="5" height="15" fill="rgb(215,34,17)"/><text x="54.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="484" width="5" height="15" fill="rgb(253,70,46)"/><text x="54.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="500" width="5" height="15" fill="rgb(242,71,36)"/><text x="54.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="516" width="5" height="15" fill="rgb(244,124,38)"/><text x="54.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.44%)</title><rect x="51" y="532" width="5" height="15" fill="rgb(248,79,45)"/><text x="54.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="548" width="5" height="15" fill="rgb(251,18,8)"/><text x="54.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="564" width="5" height="15" fill="rgb(227,130,9)"/><text x="54.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="580" width="5" height="15" fill="rgb(227,76,6)"/><text x="54.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="596" width="5" height="15" fill="rgb(221,85,22)"/><text x="54.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="612" width="5" height="15" fill="rgb(243,152,53)"/><text x="54.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.44%)</title><rect x="51" y="628" width="5" height="15" fill="rgb(244,94,49)"/><text x="54.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="644" width="5" height="15" fill="rgb(207,80,36)"/><text x="54.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="660" width="5" height="15" fill="rgb(233,205,47)"/><text x="54.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="676" width="5" height="15" fill="rgb(221,92,51)"/><text x="54.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="692" width="5" height="15" fill="rgb(214,45,53)"/><text x="54.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="708" width="5" height="15" fill="rgb(221,33,39)"/><text x="54.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.44%)</title><rect x="51" y="724" width="5" height="15" fill="rgb(237,69,54)"/><text x="54.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="740" width="5" height="15" fill="rgb(223,70,29)"/><text x="54.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="756" width="5" height="15" fill="rgb(214,186,50)"/><text x="54.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="772" width="5" height="15" fill="rgb(252,213,47)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="788" width="5" height="15" fill="rgb(243,66,10)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="804" width="5" height="15" fill="rgb(232,57,28)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="820" width="5" height="15" fill="rgb(249,187,6)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="836" width="5" height="15" fill="rgb(236,23,40)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="852" width="5" height="15" fill="rgb(241,74,54)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.44%)</title><rect x="51" y="868" width="5" height="15" fill="rgb(243,155,36)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="884" width="5" height="15" fill="rgb(210,11,36)"/><text x="54.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="900" width="5" height="15" fill="rgb(215,191,3)"/><text x="54.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="916" width="5" height="15" fill="rgb(208,179,22)"/><text x="54.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="932" width="5" height="15" fill="rgb(254,206,24)"/><text x="54.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="948" width="5" height="15" fill="rgb(222,10,17)"/><text x="54.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py) (1 samples, 0.44%)</title><rect x="51" y="964" width="5" height="15" fill="rgb(231,225,40)"/><text x="54.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="980" width="5" height="15" fill="rgb(236,157,32)"/><text x="54.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="996" width="5" height="15" fill="rgb(246,115,46)"/><text x="54.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1012" width="5" height="15" fill="rgb(232,195,7)"/><text x="54.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1028" width="5" height="15" fill="rgb(217,32,2)"/><text x="54.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1044" width="5" height="15" fill="rgb(212,215,22)"/><text x="54.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py) (1 samples, 0.44%)</title><rect x="51" y="1060" width="5" height="15" fill="rgb(216,96,46)"/><text x="54.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1076" width="5" height="15" fill="rgb(211,133,10)"/><text x="54.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1092" width="5" height="15" fill="rgb(226,23,26)"/><text x="54.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1108" width="5" height="15" fill="rgb(236,208,35)"/><text x="54.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1124" width="5" height="15" fill="rgb(232,74,41)"/><text x="54.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1140" width="5" height="15" fill="rgb(248,92,5)"/><text x="54.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py) (1 samples, 0.44%)</title><rect x="51" y="1156" width="5" height="15" fill="rgb(216,22,41)"/><text x="54.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1172" width="5" height="15" fill="rgb(248,42,17)"/><text x="54.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1188" width="5" height="15" fill="rgb(219,111,38)"/><text x="54.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1204" width="5" height="15" fill="rgb(205,13,33)"/><text x="54.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="51" y="1220" width="5" height="15" fill="rgb(227,162,27)"/><text x="54.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="51" y="1236" width="5" height="15" fill="rgb(229,94,39)"/><text x="54.00" y="1246.50"></text></g><g><title>0x7fec0804c241 (?) (1 samples, 0.44%)</title><rect x="51" y="1252" width="5" height="15" fill="rgb(224,119,48)"/><text x="54.00" y="1262.50"></text></g><g><title>0x7fec080840f0 (?) (1 samples, 0.44%)</title><rect x="51" y="1268" width="5" height="15" fill="rgb(212,82,31)"/><text x="54.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.39%)</title><rect x="10" y="68" width="51" height="15" fill="rgb(209,43,27)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.39%)</title><rect x="10" y="84" width="51" height="15" fill="rgb(231,99,23)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.39%)</title><rect x="10" y="100" width="51" height="15" fill="rgb(250,10,17)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.39%)</title><rect x="10" y="116" width="51" height="15" fill="rgb(206,47,20)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.39%)</title><rect x="10" y="132" width="51" height="15" fill="rgb(212,88,6)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (10 samples, 4.39%)</title><rect x="10" y="148" width="51" height="15" fill="rgb(219,72,10)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.39%)</title><rect x="10" y="164" width="51" height="15" fill="rgb(216,83,32)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.39%)</title><rect x="10" y="180" width="51" height="15" fill="rgb(238,210,43)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="196" width="10" height="15" fill="rgb(211,24,18)"/><text x="54.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.88%)</title><rect x="51" y="212" width="10" height="15" fill="rgb(235,7,44)"/><text x="54.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.88%)</title><rect x="51" y="228" width="10" height="15" fill="rgb(210,118,33)"/><text x="54.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.44%)</title><rect x="56" y="244" width="5" height="15" fill="rgb(230,59,24)"/><text x="59.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="260" width="5" height="15" fill="rgb(252,7,13)"/><text x="59.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="276" width="5" height="15" fill="rgb(230,2,42)"/><text x="59.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="292" width="5" height="15" fill="rgb(252,4,9)"/><text x="59.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="308" width="5" height="15" fill="rgb(231,210,16)"/><text x="59.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="324" width="5" height="15" fill="rgb(214,32,16)"/><text x="59.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="340" width="5" height="15" fill="rgb(211,149,14)"/><text x="59.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="356" width="5" height="15" fill="rgb(213,56,2)"/><text x="59.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.44%)</title><rect x="56" y="372" width="5" height="15" fill="rgb(250,5,12)"/><text x="59.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="388" width="5" height="15" fill="rgb(225,129,50)"/><text x="59.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="404" width="5" height="15" fill="rgb(244,37,40)"/><text x="59.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="420" width="5" height="15" fill="rgb(229,157,32)"/><text x="59.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="436" width="5" height="15" fill="rgb(251,10,44)"/><text x="59.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="452" width="5" height="15" fill="rgb(207,213,44)"/><text x="59.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.44%)</title><rect x="56" y="468" width="5" height="15" fill="rgb(252,205,39)"/><text x="59.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="484" width="5" height="15" fill="rgb(237,191,24)"/><text x="59.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="500" width="5" height="15" fill="rgb(213,31,51)"/><text x="59.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="516" width="5" height="15" fill="rgb(254,181,24)"/><text x="59.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="532" width="5" height="15" fill="rgb(241,162,5)"/><text x="59.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="548" width="5" height="15" fill="rgb(225,100,3)"/><text x="59.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.44%)</title><rect x="56" y="564" width="5" height="15" fill="rgb(247,160,48)"/><text x="59.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="580" width="5" height="15" fill="rgb(254,58,31)"/><text x="59.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="596" width="5" height="15" fill="rgb(220,46,8)"/><text x="59.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="612" width="5" height="15" fill="rgb(223,14,19)"/><text x="59.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="628" width="5" height="15" fill="rgb(238,127,8)"/><text x="59.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="644" width="5" height="15" fill="rgb(226,11,28)"/><text x="59.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.44%)</title><rect x="56" y="660" width="5" height="15" fill="rgb(208,153,41)"/><text x="59.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="676" width="5" height="15" fill="rgb(211,32,36)"/><text x="59.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="692" width="5" height="15" fill="rgb(249,185,52)"/><text x="59.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="708" width="5" height="15" fill="rgb(226,194,53)"/><text x="59.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="724" width="5" height="15" fill="rgb(235,74,46)"/><text x="59.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="740" width="5" height="15" fill="rgb(226,228,31)"/><text x="59.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.44%)</title><rect x="56" y="756" width="5" height="15" fill="rgb(205,46,17)"/><text x="59.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="772" width="5" height="15" fill="rgb(209,28,12)"/><text x="59.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="788" width="5" height="15" fill="rgb(243,6,8)"/><text x="59.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="804" width="5" height="15" fill="rgb(216,60,4)"/><text x="59.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="820" width="5" height="15" fill="rgb(237,59,31)"/><text x="59.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="836" width="5" height="15" fill="rgb(226,217,54)"/><text x="59.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.44%)</title><rect x="56" y="852" width="5" height="15" fill="rgb(243,183,5)"/><text x="59.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="868" width="5" height="15" fill="rgb(229,26,51)"/><text x="59.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="884" width="5" height="15" fill="rgb(236,129,0)"/><text x="59.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="900" width="5" height="15" fill="rgb(239,138,14)"/><text x="59.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.44%)</title><rect x="56" y="916" width="5" height="15" fill="rgb(213,65,51)"/><text x="59.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.44%)</title><rect x="56" y="932" width="5" height="15" fill="rgb(214,182,28)"/><text x="59.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.44%)</title><rect x="56" y="948" width="5" height="15" fill="rgb(235,3,1)"/><text x="59.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.44%)</title><rect x="56" y="964" width="5" height="15" fill="rgb(221,100,27)"/><text x="59.00" y="974.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.44%)</title><rect x="61" y="132" width="5" height="15" fill="rgb(227,71,15)"/><text x="64.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 1.32%)</title><rect x="61" y="116" width="16" height="15" fill="rgb(211,102,47)"/><text x="64.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.88%)</title><rect x="66" y="132" width="11" height="15" fill="rgb(205,43,24)"/><text x="69.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.88%)</title><rect x="66" y="148" width="11" height="15" fill="rgb(237,213,21)"/><text x="69.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.44%)</title><rect x="139" y="180" width="5" height="15" fill="rgb(236,45,19)"/><text x="142.00" y="190.50"></text></g><g><title>0x7febf5e24ff9 (?) (1 samples, 0.44%)</title><rect x="170" y="212" width="5" height="15" fill="rgb(227,10,48)"/><text x="173.00" y="222.50"></text></g><g><title>0x7febf5e1fef6 (?) (1 samples, 0.44%)</title><rect x="170" y="228" width="5" height="15" fill="rgb(221,140,12)"/><text x="173.00" y="238.50"></text></g><g><title>0x7febf5e14962 (?) (1 samples, 0.44%)</title><rect x="170" y="244" width="5" height="15" fill="rgb(229,206,41)"/><text x="173.00" y="254.50"></text></g><g><title>0x7febf5e487a7 (?) (1 samples, 0.44%)</title><rect x="170" y="260" width="5" height="15" fill="rgb(240,213,42)"/><text x="173.00" y="270.50"></text></g><g><title>0x7febf5e48379 (?) (1 samples, 0.44%)</title><rect x="170" y="276" width="5" height="15" fill="rgb(253,34,9)"/><text x="173.00" y="286.50"></text></g><g><title>0x7febf62a68b8 (?) (1 samples, 0.44%)</title><rect x="170" y="292" width="5" height="15" fill="rgb(243,194,19)"/><text x="173.00" y="302.50"></text></g><g><title>0x7febf62a4c7f (?) (1 samples, 0.44%)</title><rect x="170" y="308" width="5" height="15" fill="rgb(215,204,24)"/><text x="173.00" y="318.50"></text></g><g><title>0x7febf62b799c (?) (1 samples, 0.44%)</title><rect x="170" y="324" width="5" height="15" fill="rgb(225,87,53)"/><text x="173.00" y="334.50"></text></g><g><title>0x7febf5fdedc2 (?) (1 samples, 0.44%)</title><rect x="170" y="340" width="5" height="15" fill="rgb(223,48,12)"/><text x="173.00" y="350.50"></text></g><g><title>0x7febf5fde65b (?) (1 samples, 0.44%)</title><rect x="170" y="356" width="5" height="15" fill="rgb(224,196,15)"/><text x="173.00" y="366.50"></text></g><g><title>0x7febf5fde317 (?) (1 samples, 0.44%)</title><rect x="170" y="372" width="5" height="15" fill="rgb(233,153,50)"/><text x="173.00" y="382.50"></text></g><g><title>0x7febf5fde202 (?) (1 samples, 0.44%)</title><rect x="170" y="388" width="5" height="15" fill="rgb(244,142,19)"/><text x="173.00" y="398.50"></text></g><g><title>0x7fec35d87124 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="175" y="212" width="5" height="15" fill="rgb(233,7,24)"/><text x="178.00" y="222.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="196" y="260" width="5" height="15" fill="rgb(213,25,40)"/><text x="199.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="196" y="276" width="5" height="15" fill="rgb(214,174,17)"/><text x="199.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 2.19%)</title><rect x="180" y="212" width="26" height="15" fill="rgb(226,156,4)"/><text x="183.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.75%)</title><rect x="185" y="228" width="21" height="15" fill="rgb(245,206,12)"/><text x="188.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="196" y="244" width="10" height="15" fill="rgb(209,199,35)"/><text x="199.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="201" y="260" width="5" height="15" fill="rgb(254,150,31)"/><text x="204.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="201" y="276" width="5" height="15" fill="rgb(239,87,28)"/><text x="204.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="201" y="292" width="5" height="15" fill="rgb(222,193,47)"/><text x="204.00" y="302.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.44%)</title><rect x="211" y="260" width="6" height="15" fill="rgb(219,96,49)"/><text x="214.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="217" y="292" width="5" height="15" fill="rgb(215,213,50)"/><text x="220.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="217" y="308" width="5" height="15" fill="rgb(250,122,14)"/><text x="220.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="217" y="324" width="5" height="15" fill="rgb(252,133,24)"/><text x="220.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="222" y="292" width="5" height="15" fill="rgb(218,56,24)"/><text x="225.00" y="302.50"></text></g><g><title>0x7fec35d66d07 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="222" y="308" width="5" height="15" fill="rgb(246,25,0)"/><text x="225.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="237" y="356" width="11" height="15" fill="rgb(239,133,45)"/><text x="240.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="237" y="372" width="11" height="15" fill="rgb(242,58,49)"/><text x="240.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="242" y="388" width="6" height="15" fill="rgb(233,173,43)"/><text x="245.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.75%)</title><rect x="232" y="340" width="21" height="15" fill="rgb(236,137,49)"/><text x="235.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="248" y="356" width="5" height="15" fill="rgb(254,23,46)"/><text x="251.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="253" y="340" width="5" height="15" fill="rgb(228,79,29)"/><text x="256.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="356" width="10" height="15" fill="rgb(243,148,43)"/><text x="261.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="372" width="10" height="15" fill="rgb(239,152,32)"/><text x="261.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="388" width="10" height="15" fill="rgb(235,171,5)"/><text x="261.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="404" width="10" height="15" fill="rgb(235,33,12)"/><text x="261.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="420" width="10" height="15" fill="rgb(207,94,25)"/><text x="261.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="436" width="10" height="15" fill="rgb(242,85,39)"/><text x="261.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="258" y="452" width="10" height="15" fill="rgb(251,9,51)"/><text x="261.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="263" y="468" width="5" height="15" fill="rgb(223,159,47)"/><text x="266.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="263" y="484" width="5" height="15" fill="rgb(242,180,3)"/><text x="266.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="263" y="500" width="5" height="15" fill="rgb(207,33,22)"/><text x="266.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::AllocateChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="263" y="516" width="5" height="15" fill="rgb(245,46,6)"/><text x="266.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 4.82%)</title><rect x="217" y="276" width="56" height="15" fill="rgb(238,68,26)"/><text x="220.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.95%)</title><rect x="227" y="292" width="46" height="15" fill="rgb(248,23,15)"/><text x="230.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.95%)</title><rect x="227" y="308" width="46" height="15" fill="rgb(251,4,41)"/><text x="230.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.95%)</title><rect x="227" y="324" width="46" height="15" fill="rgb(241,178,27)"/><text x="230.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.32%)</title><rect x="258" y="340" width="15" height="15" fill="rgb(213,151,35)"/><text x="261.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="268" y="356" width="5" height="15" fill="rgb(241,47,34)"/><text x="271.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.44%)</title><rect x="273" y="276" width="6" height="15" fill="rgb(215,122,28)"/><text x="276.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.44%)</title><rect x="273" y="292" width="6" height="15" fill="rgb(215,171,49)"/><text x="276.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.70%)</title><rect x="217" y="260" width="67" height="15" fill="rgb(215,100,23)"/><text x="220.00" y="270.50">onnxrun..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="279" y="276" width="5" height="15" fill="rgb(244,23,17)"/><text x="282.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="294" y="276" width="5" height="15" fill="rgb(239,138,54)"/><text x="297.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.75%)</title><rect x="284" y="260" width="21" height="15" fill="rgb(208,161,8)"/><text x="287.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="299" y="276" width="6" height="15" fill="rgb(219,191,21)"/><text x="302.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="305" y="260" width="5" height="15" fill="rgb(226,48,39)"/><text x="308.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.44%)</title><rect x="305" y="276" width="5" height="15" fill="rgb(247,196,1)"/><text x="308.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="305" y="292" width="5" height="15" fill="rgb(248,159,14)"/><text x="308.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.44%)</title><rect x="305" y="308" width="5" height="15" fill="rgb(205,13,7)"/><text x="308.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.44%)</title><rect x="305" y="324" width="5" height="15" fill="rgb(227,16,28)"/><text x="308.00" y="334.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="310" y="260" width="5" height="15" fill="rgb(245,145,43)"/><text x="313.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="320" y="356" width="5" height="15" fill="rgb(244,44,37)"/><text x="323.00" y="366.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 10.53%)</title><rect x="206" y="244" width="124" height="15" fill="rgb(223,85,47)"/><text x="209.00" y="254.50">onnxruntime::py..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.32%)</title><rect x="315" y="260" width="15" height="15" fill="rgb(228,39,11)"/><text x="318.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.32%)</title><rect x="315" y="276" width="15" height="15" fill="rgb(230,123,42)"/><text x="318.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.32%)</title><rect x="315" y="292" width="15" height="15" fill="rgb(243,37,2)"/><text x="318.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.32%)</title><rect x="315" y="308" width="15" height="15" fill="rgb(227,89,38)"/><text x="318.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="320" y="324" width="10" height="15" fill="rgb(230,40,10)"/><text x="323.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="320" y="340" width="10" height="15" fill="rgb(229,110,47)"/><text x="323.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="325" y="356" width="5" height="15" fill="rgb(230,156,20)"/><text x="328.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="325" y="372" width="5" height="15" fill="rgb(205,84,15)"/><text x="328.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="325" y="388" width="5" height="15" fill="rgb(241,223,33)"/><text x="328.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.44%)</title><rect x="325" y="404" width="5" height="15" fill="rgb(232,75,26)"/><text x="328.00" y="414.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.32%)</title><rect x="330" y="244" width="16" height="15" fill="rgb(227,56,30)"/><text x="333.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="336" y="260" width="10" height="15" fill="rgb(241,75,36)"/><text x="339.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="346" y="244" width="5" height="15" fill="rgb(226,42,40)"/><text x="349.00" y="254.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.88%)</title><rect x="351" y="244" width="10" height="15" fill="rgb(213,137,37)"/><text x="354.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (56 samples, 24.56%)</title><rect x="77" y="132" width="290" height="15" fill="rgb(248,91,20)"/><text x="80.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (54 samples, 23.68%)</title><rect x="87" y="148" width="280" height="15" fill="rgb(214,175,20)"/><text x="90.00" y="158.50">run (mlprodict/onnxrt/onnx_inference...</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (50 samples, 21.93%)</title><rect x="108" y="164" width="259" height="15" fill="rgb(252,58,13)"/><text x="111.00" y="174.50">_run_whole_runtime (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (43 samples, 18.86%)</title><rect x="144" y="180" width="223" height="15" fill="rgb(250,92,8)"/><text x="147.00" y="190.50">run (mlprodict/onnxrt/ops_who..</text></g><g><title>run (onnxruntime/capi/session.py) (40 samples, 17.54%)</title><rect x="160" y="196" width="207" height="15" fill="rgb(232,38,34)"/><text x="163.00" y="206.50">run (onnxruntime/capi/sessi..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 13.60%)</title><rect x="206" y="212" width="161" height="15" fill="rgb(213,199,8)"/><text x="209.00" y="222.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 13.60%)</title><rect x="206" y="228" width="161" height="15" fill="rgb(239,199,43)"/><text x="209.00" y="238.50">void pybind11::cpp_f..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.44%)</title><rect x="361" y="244" width="6" height="15" fill="rgb(224,70,14)"/><text x="364.00" y="254.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (60 samples, 26.32%)</title><rect x="61" y="100" width="311" height="15" fill="rgb(205,149,19)"/><text x="64.00" y="110.50">profile (bench_DecisionTreeRegressor_defa..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (57 samples, 25.00%)</title><rect x="77" y="116" width="295" height="15" fill="rgb(239,184,37)"/><text x="80.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.44%)</title><rect x="367" y="132" width="5" height="15" fill="rgb(207,203,23)"/><text x="370.00" y="142.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (61 samples, 26.75%)</title><rect x="61" y="68" width="316" height="15" fill="rgb(248,114,32)"/><text x="64.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_d..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (61 samples, 26.75%)</title><rect x="61" y="84" width="316" height="15" fill="rgb(221,27,47)"/><text x="64.00" y="94.50">setup_profile (bench_DecisionTreeRegressor..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="372" y="100" width="5" height="15" fill="rgb(205,132,20)"/><text x="375.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="372" y="116" width="5" height="15" fill="rgb(228,53,0)"/><text x="375.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.44%)</title><rect x="372" y="132" width="5" height="15" fill="rgb(222,24,28)"/><text x="375.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.44%)</title><rect x="372" y="148" width="5" height="15" fill="rgb(232,185,4)"/><text x="375.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.44%)</title><rect x="372" y="164" width="5" height="15" fill="rgb(230,173,11)"/><text x="375.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.44%)</title><rect x="372" y="180" width="5" height="15" fill="rgb(236,35,19)"/><text x="375.00" y="190.50"></text></g><g><title>convert_sklearn_decision_tree_regressor (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.44%)</title><rect x="372" y="196" width="5" height="15" fill="rgb(224,33,46)"/><text x="375.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.44%)</title><rect x="372" y="212" width="5" height="15" fill="rgb(241,81,41)"/><text x="375.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.44%)</title><rect x="372" y="228" width="5" height="15" fill="rgb(208,103,27)"/><text x="375.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="372" y="244" width="5" height="15" fill="rgb(207,14,10)"/><text x="375.00" y="254.50"></text></g><g><title>google::protobuf::python::cmessage::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="372" y="260" width="5" height="15" fill="rgb(211,137,43)"/><text x="375.00" y="270.50"></text></g><g><title>google::protobuf::Message::MergeFrom (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="372" y="276" width="5" height="15" fill="rgb(221,132,16)"/><text x="375.00" y="286.50"></text></g><g><title>google::protobuf::internal::ReflectionOps::Merge (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="372" y="292" width="5" height="15" fill="rgb(220,59,18)"/><text x="375.00" y="302.50"></text></g><g><title>google::protobuf::Reflection::ListFields (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="372" y="308" width="5" height="15" fill="rgb(227,153,14)"/><text x="375.00" y="318.50"></text></g><g><title>0x7fec2415e105 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="372" y="324" width="5" height="15" fill="rgb(234,4,6)"/><text x="375.00" y="334.50"></text></g><g><title>0x7febf687f54f (?) (1 samples, 0.44%)</title><rect x="377" y="244" width="5" height="15" fill="rgb(228,96,34)"/><text x="380.00" y="254.50"></text></g><g><title>0x7febf688565e (?) (1 samples, 0.44%)</title><rect x="377" y="260" width="5" height="15" fill="rgb(206,49,37)"/><text x="380.00" y="270.50"></text></g><g><title>0x7febf688550f (?) (1 samples, 0.44%)</title><rect x="377" y="276" width="5" height="15" fill="rgb(242,12,44)"/><text x="380.00" y="286.50"></text></g><g><title>0x7febf688bd6c (?) (1 samples, 0.44%)</title><rect x="377" y="292" width="5" height="15" fill="rgb(210,95,11)"/><text x="380.00" y="302.50"></text></g><g><title>0x7febffd6cab9 (?) (1 samples, 0.44%)</title><rect x="377" y="308" width="5" height="15" fill="rgb(224,74,49)"/><text x="380.00" y="318.50"></text></g><g><title>0x7febffd6dead (?) (1 samples, 0.44%)</title><rect x="377" y="324" width="5" height="15" fill="rgb(234,22,32)"/><text x="380.00" y="334.50"></text></g><g><title>0x7febffd6dea0 (libgomp.so.1.0.0) (1 samples, 0.44%)</title><rect x="382" y="484" width="5" height="15" fill="rgb(233,102,22)"/><text x="385.00" y="494.50"></text></g><g><title>0x7febffd6dea9 (libgomp.so.1.0.0) (5 samples, 2.19%)</title><rect x="387" y="484" width="26" height="15" fill="rgb(233,199,25)"/><text x="390.00" y="494.50">0..</text></g><g><title>0x7febffd6deab (libgomp.so.1.0.0) (11 samples, 4.82%)</title><rect x="413" y="484" width="57" height="15" fill="rgb(213,78,32)"/><text x="416.00" y="494.50">0x7feb..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (25 samples, 10.96%)</title><rect x="377" y="68" width="129" height="15" fill="rgb(227,125,5)"/><text x="380.00" y="78.50">profile_pyrt (be..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (25 samples, 10.96%)</title><rect x="377" y="84" width="129" height="15" fill="rgb(237,116,11)"/><text x="380.00" y="94.50">setup_profile (b..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (25 samples, 10.96%)</title><rect x="377" y="100" width="129" height="15" fill="rgb(249,3,21)"/><text x="380.00" y="110.50">profile (bench_D..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 10.96%)</title><rect x="377" y="116" width="129" height="15" fill="rgb(209,159,17)"/><text x="380.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 10.96%)</title><rect x="377" y="132" width="129" height="15" fill="rgb(241,183,19)"/><text x="380.00" y="142.50">&lt;lambda&gt; (mlprod..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (25 samples, 10.96%)</title><rect x="377" y="148" width="129" height="15" fill="rgb(247,125,45)"/><text x="380.00" y="158.50">run (mlprodict/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (25 samples, 10.96%)</title><rect x="377" y="164" width="129" height="15" fill="rgb(216,151,43)"/><text x="380.00" y="174.50">_run_sequence_ru..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (25 samples, 10.96%)</title><rect x="377" y="180" width="129" height="15" fill="rgb(230,68,13)"/><text x="380.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 10.96%)</title><rect x="377" y="196" width="129" height="15" fill="rgb(244,19,50)"/><text x="380.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 10.96%)</title><rect x="377" y="212" width="129" height="15" fill="rgb(226,76,8)"/><text x="380.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (25 samples, 10.96%)</title><rect x="377" y="228" width="129" height="15" fill="rgb(223,50,39)"/><text x="380.00" y="238.50">_run (mlprodict/..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (24 samples, 10.53%)</title><rect x="382" y="244" width="124" height="15" fill="rgb(211,127,6)"/><text x="385.00" y="254.50">pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (24 samples, 10.53%)</title><rect x="382" y="260" width="124" height="15" fill="rgb(252,228,15)"/><text x="385.00" y="270.50">void pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (24 samples, 10.53%)</title><rect x="382" y="276" width="124" height="15" fill="rgb(211,201,50)"/><text x="385.00" y="286.50">void pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (24 samples, 10.53%)</title><rect x="382" y="292" width="124" height="15" fill="rgb(235,71,48)"/><text x="385.00" y="302.50">pybind11::detai..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (24 samples, 10.53%)</title><rect x="382" y="308" width="124" height="15" fill="rgb(239,206,36)"/><text x="385.00" y="318.50">pybind11::detai..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (24 samples, 10.53%)</title><rect x="382" y="324" width="124" height="15" fill="rgb(210,28,13)"/><text x="385.00" y="334.50">pybind11::cpp_f..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (24 samples, 10.53%)</title><rect x="382" y="340" width="124" height="15" fill="rgb(214,41,19)"/><text x="385.00" y="350.50">pybind11::array..</text></g><g><title>pybind11::array::~array (numpy.h) (24 samples, 10.53%)</title><rect x="382" y="356" width="124" height="15" fill="rgb(245,158,33)"/><text x="385.00" y="366.50">pybind11::array..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (24 samples, 10.53%)</title><rect x="382" y="372" width="124" height="15" fill="rgb(230,94,6)"/><text x="385.00" y="382.50">pybind11::buffe..</text></g><g><title>pybind11::object::~object (pytypes.h) (24 samples, 10.53%)</title><rect x="382" y="388" width="124" height="15" fill="rgb(229,120,53)"/><text x="385.00" y="398.50">pybind11::objec..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (24 samples, 10.53%)</title><rect x="382" y="404" width="124" height="15" fill="rgb(219,114,37)"/><text x="385.00" y="414.50">pybind11::handl..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (24 samples, 10.53%)</title><rect x="382" y="420" width="124" height="15" fill="rgb(248,102,37)"/><text x="385.00" y="430.50">RuntimeTreeEnse..</text></g><g><title>pybind11::array::size (numpy.h) (24 samples, 10.53%)</title><rect x="382" y="436" width="124" height="15" fill="rgb(251,156,40)"/><text x="385.00" y="446.50">pybind11::array..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (24 samples, 10.53%)</title><rect x="382" y="452" width="124" height="15" fill="rgb(213,1,54)"/><text x="385.00" y="462.50">std::accumulate..</text></g><g><title>0x7febffd6cab9 (libgomp.so.1.0.0) (24 samples, 10.53%)</title><rect x="382" y="468" width="124" height="15" fill="rgb(233,31,36)"/><text x="385.00" y="478.50">0x7febffd6cab9 ..</text></g><g><title>0x7febffd6dead (libgomp.so.1.0.0) (7 samples, 3.07%)</title><rect x="470" y="484" width="36" height="15" fill="rgb(248,90,23)"/><text x="473.00" y="494.50">0x7..</text></g><g><title>0x7fec103d1f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="553" y="180" width="5" height="15" fill="rgb(248,178,46)"/><text x="556.00" y="190.50"></text></g><g><title>0x7fec103c1d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="553" y="196" width="5" height="15" fill="rgb(222,192,32)"/><text x="556.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.44%)</title><rect x="553" y="212" width="5" height="15" fill="rgb(229,221,20)"/><text x="556.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="553" y="228" width="5" height="15" fill="rgb(241,39,51)"/><text x="556.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="553" y="244" width="5" height="15" fill="rgb(242,134,28)"/><text x="556.00" y="254.50"></text></g><g><title>0x7fec103d1f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="558" y="180" width="5" height="15" fill="rgb(221,105,53)"/><text x="561.00" y="190.50"></text></g><g><title>0x7fec103c4c70 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="563" y="228" width="5" height="15" fill="rgb(230,212,36)"/><text x="566.00" y="238.50"></text></g><g><title>0x7fec103ba10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="574" y="260" width="5" height="15" fill="rgb(249,182,18)"/><text x="577.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.44%)</title><rect x="579" y="292" width="5" height="15" fill="rgb(210,153,39)"/><text x="582.00" y="302.50"></text></g><g><title>0x7fec103c4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.63%)</title><rect x="568" y="228" width="32" height="15" fill="rgb(242,171,22)"/><text x="571.00" y="238.50">0x..</text></g><g><title>0x7fec103c4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.63%)</title><rect x="568" y="244" width="32" height="15" fill="rgb(225,217,50)"/><text x="571.00" y="254.50">0x..</text></g><g><title>0x7fec103ba2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.75%)</title><rect x="579" y="260" width="21" height="15" fill="rgb(218,118,25)"/><text x="582.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.75%)</title><rect x="579" y="276" width="21" height="15" fill="rgb(230,179,1)"/><text x="582.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 1.32%)</title><rect x="584" y="292" width="16" height="15" fill="rgb(234,116,2)"/><text x="587.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.44%)</title><rect x="594" y="308" width="6" height="15" fill="rgb(235,26,33)"/><text x="597.00" y="318.50"></text></g><g><title>0x7fec103e02df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.51%)</title><rect x="563" y="212" width="42" height="15" fill="rgb(228,5,30)"/><text x="566.00" y="222.50">0x7..</text></g><g><title>0x7fec103c4e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="600" y="228" width="5" height="15" fill="rgb(232,42,11)"/><text x="603.00" y="238.50"></text></g><g><title>0x7fec103b82bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="600" y="244" width="5" height="15" fill="rgb(247,224,45)"/><text x="603.00" y="254.50"></text></g><g><title>0x7fec103b79d6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="600" y="260" width="5" height="15" fill="rgb(231,61,9)"/><text x="603.00" y="270.50"></text></g><g><title>0x7fec35d7ce89 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="620" y="244" width="5" height="15" fill="rgb(252,216,24)"/><text x="623.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.44%)</title><rect x="625" y="244" width="6" height="15" fill="rgb(230,174,4)"/><text x="628.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.44%)</title><rect x="625" y="260" width="6" height="15" fill="rgb(254,44,34)"/><text x="628.00" y="270.50"></text></g><g><title>0x7fec103e0592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.07%)</title><rect x="605" y="212" width="36" height="15" fill="rgb(223,125,36)"/><text x="608.00" y="222.50">0x7..</text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 2.63%)</title><rect x="610" y="228" width="31" height="15" fill="rgb(251,129,14)"/><text x="613.00" y="238.50">ar..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.88%)</title><rect x="631" y="244" width="10" height="15" fill="rgb(246,129,4)"/><text x="634.00" y="254.50"></text></g><g><title>0x7fec103e092f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="641" y="212" width="5" height="15" fill="rgb(241,193,22)"/><text x="644.00" y="222.50"></text></g><g><title>0x7fec103b58d1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="641" y="228" width="5" height="15" fill="rgb(223,192,24)"/><text x="644.00" y="238.50"></text></g><g><title>0x7fec103d1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 7.46%)</title><rect x="563" y="180" width="88" height="15" fill="rgb(225,91,7)"/><text x="566.00" y="190.50">0x7fec103d..</text></g><g><title>0x7fec103e1405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 7.46%)</title><rect x="563" y="196" width="88" height="15" fill="rgb(246,75,6)"/><text x="566.00" y="206.50">0x7fec103e..</text></g><g><title>0x7fec103e0c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="646" y="212" width="5" height="15" fill="rgb(243,137,12)"/><text x="649.00" y="222.50"></text></g><g><title>0x7fec103b85f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="646" y="228" width="5" height="15" fill="rgb(235,10,5)"/><text x="649.00" y="238.50"></text></g><g><title>0x7fec103b7f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="646" y="244" width="5" height="15" fill="rgb(230,51,20)"/><text x="649.00" y="254.50"></text></g><g><title>0x7fec103d205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.32%)</title><rect x="651" y="180" width="16" height="15" fill="rgb(237,191,23)"/><text x="654.00" y="190.50"></text></g><g><title>array_take (methods.c) (2 samples, 0.88%)</title><rect x="656" y="196" width="11" height="15" fill="rgb(254,216,17)"/><text x="659.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.88%)</title><rect x="656" y="212" width="11" height="15" fill="rgb(244,197,16)"/><text x="659.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.44%)</title><rect x="662" y="228" width="5" height="15" fill="rgb(215,171,35)"/><text x="665.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.44%)</title><rect x="662" y="244" width="5" height="15" fill="rgb(252,77,33)"/><text x="665.00" y="254.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.44%)</title><rect x="662" y="260" width="5" height="15" fill="rgb(230,159,52)"/><text x="665.00" y="270.50"></text></g><g><title>0x7fec103d213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.88%)</title><rect x="667" y="180" width="10" height="15" fill="rgb(208,62,25)"/><text x="670.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="672" y="196" width="5" height="15" fill="rgb(216,83,29)"/><text x="675.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.44%)</title><rect x="672" y="212" width="5" height="15" fill="rgb(222,111,45)"/><text x="675.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.44%)</title><rect x="672" y="228" width="5" height="15" fill="rgb(208,59,26)"/><text x="675.00" y="238.50"></text></g><g><title>0x7fec103d214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="677" y="180" width="5" height="15" fill="rgb(246,214,22)"/><text x="680.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="677" y="196" width="5" height="15" fill="rgb(216,79,21)"/><text x="680.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.44%)</title><rect x="677" y="212" width="5" height="15" fill="rgb(251,1,0)"/><text x="680.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.44%)</title><rect x="677" y="228" width="5" height="15" fill="rgb(254,76,3)"/><text x="680.00" y="238.50"></text></g><g><title>0x7fec103d218f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="682" y="180" width="5" height="15" fill="rgb(213,93,50)"/><text x="685.00" y="190.50"></text></g><g><title>0x7fec103d2328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="687" y="180" width="6" height="15" fill="rgb(212,94,6)"/><text x="690.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.44%)</title><rect x="687" y="196" width="6" height="15" fill="rgb(242,162,40)"/><text x="690.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.44%)</title><rect x="687" y="212" width="6" height="15" fill="rgb(226,210,23)"/><text x="690.00" y="222.50"></text></g><g><title>0x7fec103d2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 12.28%)</title><rect x="553" y="164" width="145" height="15" fill="rgb(235,78,1)"/><text x="556.00" y="174.50">0x7fec103d2d2e (sk..</text></g><g><title>0x7fec103d2522 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.44%)</title><rect x="693" y="180" width="5" height="15" fill="rgb(214,202,23)"/><text x="696.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.75%)</title><rect x="848" y="196" width="21" height="15" fill="rgb(232,89,8)"/><text x="851.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 1.75%)</title><rect x="869" y="196" width="20" height="15" fill="rgb(252,150,30)"/><text x="872.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (2 samples, 0.88%)</title><rect x="889" y="196" width="11" height="15" fill="rgb(229,202,13)"/><text x="892.00" y="206.50"></text></g><g><title>0x7fec35e44151 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="931" y="212" width="5" height="15" fill="rgb(253,150,21)"/><text x="934.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 4.39%)</title><rect x="900" y="196" width="51" height="15" fill="rgb(245,127,2)"/><text x="903.00" y="206.50">_asse..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.32%)</title><rect x="936" y="212" width="15" height="15" fill="rgb(251,15,44)"/><text x="939.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.44%)</title><rect x="951" y="196" width="6" height="15" fill="rgb(237,47,44)"/><text x="954.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (10 samples, 4.39%)</title><rect x="957" y="196" width="51" height="15" fill="rgb(213,209,21)"/><text x="960.00" y="206.50">_num_..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.75%)</title><rect x="988" y="212" width="20" height="15" fill="rgb(215,211,31)"/><text x="991.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 1.32%)</title><rect x="993" y="228" width="15" height="15" fill="rgb(239,160,44)"/><text x="996.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.44%)</title><rect x="1008" y="196" width="6" height="15" fill="rgb(205,66,15)"/><text x="1011.00" y="206.50"></text></g><g><title>0x7fec35d7c744 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1008" y="212" width="6" height="15" fill="rgb(218,198,24)"/><text x="1011.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.88%)</title><rect x="1014" y="196" width="10" height="15" fill="rgb(207,41,52)"/><text x="1017.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.44%)</title><rect x="1019" y="212" width="5" height="15" fill="rgb(228,195,11)"/><text x="1022.00" y="222.50"></text></g><g><title>0x7fec35d7ce82 (libc-2.29.so) (1 samples, 0.44%)</title><rect x="1019" y="228" width="5" height="15" fill="rgb(205,107,28)"/><text x="1022.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (65 samples, 28.51%)</title><rect x="719" y="180" width="336" height="15" fill="rgb(241,113,0)"/><text x="722.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (6 samples, 2.63%)</title><rect x="1024" y="196" width="31" height="15" fill="rgb(231,62,9)"/><text x="1027.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py) (6 samples, 2.63%)</title><rect x="1024" y="212" width="31" height="15" fill="rgb(237,182,2)"/><text x="1027.00" y="222.50">_a..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (70 samples, 30.70%)</title><rect x="698" y="164" width="362" height="15" fill="rgb(209,13,4)"/><text x="701.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py)</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.44%)</title><rect x="1055" y="180" width="5" height="15" fill="rgb(247,156,29)"/><text x="1058.00" y="190.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.88%)</title><rect x="1060" y="164" width="10" height="15" fill="rgb(241,42,53)"/><text x="1063.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.88%)</title><rect x="1060" y="180" width="10" height="15" fill="rgb(224,79,21)"/><text x="1063.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.32%)</title><rect x="1138" y="196" width="15" height="15" fill="rgb(212,132,6)"/><text x="1141.00" y="206.50"></text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (130 samples, 57.02%)</title><rect x="506" y="68" width="673" height="15" fill="rgb(250,6,38)"/><text x="509.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (130 samples, 57.02%)</title><rect x="506" y="84" width="673" height="15" fill="rgb(249,197,54)"/><text x="509.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (130 samples, 57.02%)</title><rect x="506" y="100" width="673" height="15" fill="rgb(205,24,23)"/><text x="509.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (129 samples, 56.58%)</title><rect x="512" y="116" width="667" height="15" fill="rgb(250,101,26)"/><text x="515.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (128 samples, 56.14%)</title><rect x="517" y="132" width="662" height="15" fill="rgb(211,124,0)"/><text x="520.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (125 samples, 54.82%)</title><rect x="532" y="148" width="647" height="15" fill="rgb(241,22,43)"/><text x="535.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (21 samples, 9.21%)</title><rect x="1070" y="164" width="109" height="15" fill="rgb(240,141,38)"/><text x="1073.00" y="174.50">check_is_fitt..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (16 samples, 7.02%)</title><rect x="1096" y="180" width="83" height="15" fill="rgb(226,62,42)"/><text x="1099.00" y="190.50">&lt;listcomp..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 2.19%)</title><rect x="1153" y="196" width="26" height="15" fill="rgb(219,173,31)"/><text x="1156.00" y="206.50">u..</text></g><g><title>__Pyx_PyObject_GetAttrStr (mt19937.c) (1 samples, 0.44%)</title><rect x="1179" y="276" width="5" height="15" fill="rgb(219,67,33)"/><text x="1182.00" y="286.50"></text></g><g><title>all (228 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,61,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (228 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(240,12,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py)</text></g><g><title>start (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py) (2 samples, 0.88%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(208,10,1)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (2 samples, 0.88%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(211,140,40)"/><text x="1182.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.88%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(219,44,26)"/><text x="1182.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.88%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(231,38,15)"/><text x="1182.00" y="126.50"></text></g><g><title>train_test_split (sklearn/model_selection/_split.py) (2 samples, 0.88%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(227,187,48)"/><text x="1182.00" y="142.50"></text></g><g><title>split (sklearn/model_selection/_split.py) (2 samples, 0.88%)</title><rect x="1179" y="148" width="11" height="15" fill="rgb(219,9,20)"/><text x="1182.00" y="158.50"></text></g><g><title>_iter_indices (sklearn/model_selection/_split.py) (2 samples, 0.88%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(234,122,13)"/><text x="1182.00" y="174.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (2 samples, 0.88%)</title><rect x="1179" y="180" width="11" height="15" fill="rgb(229,85,43)"/><text x="1182.00" y="190.50"></text></g><g><title>__init__ (mtrand.c) (2 samples, 0.88%)</title><rect x="1179" y="196" width="11" height="15" fill="rgb(247,17,23)"/><text x="1182.00" y="206.50"></text></g><g><title>RandomState___init__ (mtrand.c) (2 samples, 0.88%)</title><rect x="1179" y="212" width="11" height="15" fill="rgb(213,119,14)"/><text x="1182.00" y="222.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (2 samples, 0.88%)</title><rect x="1179" y="228" width="11" height="15" fill="rgb(252,179,8)"/><text x="1182.00" y="238.50"></text></g><g><title>__init__ (mt19937.c) (2 samples, 0.88%)</title><rect x="1179" y="244" width="11" height="15" fill="rgb(245,25,23)"/><text x="1182.00" y="254.50"></text></g><g><title>MT19937___init__ (mt19937.c) (2 samples, 0.88%)</title><rect x="1179" y="260" width="11" height="15" fill="rgb(230,106,41)"/><text x="1182.00" y="270.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.44%)</title><rect x="1184" y="276" width="6" height="15" fill="rgb(250,70,30)"/><text x="1187.00" y="286.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.44%)</title><rect x="1184" y="292" width="6" height="15" fill="rgb(221,222,41)"/><text x="1187.00" y="302.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.44%)</title><rect x="1184" y="308" width="6" height="15" fill="rgb(241,60,51)"/><text x="1187.00" y="318.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.44%)</title><rect x="1184" y="324" width="6" height="15" fill="rgb(241,32,40)"/><text x="1187.00" y="334.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (1 samples, 0.44%)</title><rect x="1184" y="340" width="6" height="15" fill="rgb(226,187,33)"/><text x="1187.00" y="350.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c) (1 samples, 0.44%)</title><rect x="1184" y="356" width="6" height="15" fill="rgb(229,6,16)"/><text x="1187.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.44%)</title><rect x="1184" y="372" width="6" height="15" fill="rgb(205,157,34)"/><text x="1187.00" y="382.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.44%)</title><rect x="1184" y="388" width="6" height="15" fill="rgb(224,5,2)"/><text x="1187.00" y="398.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.44%)</title><rect x="1184" y="404" width="6" height="15" fill="rgb(251,226,9)"/><text x="1187.00" y="414.50"></text></g></g></svg>