<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(219,21,18)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(238,120,35)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(251,202,54)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(253,71,45)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(208,95,12)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(251,122,46)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(236,34,24)"/><text x="14.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.14%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(237,214,25)"/><text x="14.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.14%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(252,78,36)"/><text x="14.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.55%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(210,67,14)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.55%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(216,67,4)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.41%)</title><rect x="11" y="868" width="5" height="15" fill="rgb(205,113,24)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.41%)</title><rect x="11" y="884" width="5" height="15" fill="rgb(210,120,44)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.41%)</title><rect x="11" y="900" width="5" height="15" fill="rgb(248,218,34)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.41%)</title><rect x="11" y="916" width="5" height="15" fill="rgb(224,136,54)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(242,152,28)"/><text x="16.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(244,32,54)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(206,31,8)"/><text x="17.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.14%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(233,117,48)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.69%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(231,202,50)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(235,22,33)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(229,45,11)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(252,56,18)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(245,97,41)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(215,182,44)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.69%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(227,59,27)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(228,79,12)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(218,42,26)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(221,137,45)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(231,125,27)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(228,16,48)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.69%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(222,147,19)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(223,71,37)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(220,211,42)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(216,160,23)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(222,69,49)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(226,129,39)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.69%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(223,22,37)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(226,169,20)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(220,137,53)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(215,51,48)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(221,31,10)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(249,210,23)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(205,197,28)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(249,158,13)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(248,3,15)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.69%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(237,22,48)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(213,165,42)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(239,195,41)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(238,122,48)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(213,178,48)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(218,181,50)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.69%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(238,73,14)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(250,160,49)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(230,112,52)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(212,75,47)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(250,79,27)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(250,144,3)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (inspect.py) (1 samples, 0.14%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(212,214,41)"/><text x="19.00" y="926.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.14%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(249,159,21)"/><text x="19.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.82%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(215,37,12)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.82%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(212,34,37)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.82%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(232,163,34)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.82%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(226,53,46)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.82%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(218,36,45)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.82%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(227,33,6)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.14%)</title><rect x="18" y="292" width="1" height="15" fill="rgb(241,108,32)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="308" width="1" height="15" fill="rgb(234,161,12)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="324" width="1" height="15" fill="rgb(241,65,43)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="340" width="1" height="15" fill="rgb(252,173,19)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="356" width="1" height="15" fill="rgb(227,136,53)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="372" width="1" height="15" fill="rgb(239,201,11)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.14%)</title><rect x="18" y="388" width="1" height="15" fill="rgb(235,31,50)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="404" width="1" height="15" fill="rgb(248,33,30)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="420" width="1" height="15" fill="rgb(221,55,18)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="436" width="1" height="15" fill="rgb(221,199,1)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="452" width="1" height="15" fill="rgb(248,77,8)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="468" width="1" height="15" fill="rgb(238,76,43)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.14%)</title><rect x="18" y="484" width="1" height="15" fill="rgb(231,182,23)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="500" width="1" height="15" fill="rgb(248,60,11)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="516" width="1" height="15" fill="rgb(215,147,20)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="532" width="1" height="15" fill="rgb(207,77,0)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="548" width="1" height="15" fill="rgb(225,10,17)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="564" width="1" height="15" fill="rgb(247,215,53)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.14%)</title><rect x="18" y="580" width="1" height="15" fill="rgb(239,145,22)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="596" width="1" height="15" fill="rgb(240,32,12)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="612" width="1" height="15" fill="rgb(219,53,43)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="628" width="1" height="15" fill="rgb(228,95,29)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="644" width="1" height="15" fill="rgb(253,106,13)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="660" width="1" height="15" fill="rgb(217,25,31)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.14%)</title><rect x="18" y="676" width="1" height="15" fill="rgb(236,209,46)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="692" width="1" height="15" fill="rgb(244,82,33)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="708" width="1" height="15" fill="rgb(229,118,2)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="724" width="1" height="15" fill="rgb(238,144,28)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="740" width="1" height="15" fill="rgb(217,21,34)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="756" width="1" height="15" fill="rgb(233,164,22)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.14%)</title><rect x="18" y="772" width="1" height="15" fill="rgb(234,24,5)"/><text x="21.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="788" width="1" height="15" fill="rgb(208,34,5)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="804" width="1" height="15" fill="rgb(214,100,45)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="820" width="1" height="15" fill="rgb(254,60,34)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="836" width="1" height="15" fill="rgb(212,82,6)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="852" width="1" height="15" fill="rgb(254,72,14)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="868" width="1" height="15" fill="rgb(236,20,3)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="884" width="1" height="15" fill="rgb(252,117,51)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.14%)</title><rect x="18" y="900" width="1" height="15" fill="rgb(227,3,24)"/><text x="21.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="916" width="1" height="15" fill="rgb(248,121,9)"/><text x="21.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="932" width="1" height="15" fill="rgb(243,30,48)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="948" width="1" height="15" fill="rgb(248,80,20)"/><text x="21.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="964" width="1" height="15" fill="rgb(227,148,7)"/><text x="21.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="980" width="1" height="15" fill="rgb(209,122,2)"/><text x="21.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="996" width="1" height="15" fill="rgb(241,100,40)"/><text x="21.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1012" width="1" height="15" fill="rgb(214,180,22)"/><text x="21.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.14%)</title><rect x="18" y="1028" width="1" height="15" fill="rgb(242,91,24)"/><text x="21.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1044" width="1" height="15" fill="rgb(250,8,43)"/><text x="21.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1060" width="1" height="15" fill="rgb(216,204,29)"/><text x="21.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1076" width="1" height="15" fill="rgb(206,228,43)"/><text x="21.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1092" width="1" height="15" fill="rgb(235,65,30)"/><text x="21.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1108" width="1" height="15" fill="rgb(216,137,12)"/><text x="21.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(226,187,6)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(219,100,22)"/><text x="21.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py) (1 samples, 0.14%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(253,19,23)"/><text x="21.00" y="1166.50"></text></g><g><title>&lt;listcomp&gt; (scipy/interpolate/__init__.py) (1 samples, 0.14%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(215,173,31)"/><text x="21.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1476" width="2" height="15" fill="rgb(207,147,38)"/><text x="22.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1492" width="2" height="15" fill="rgb(245,86,45)"/><text x="22.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1508" width="2" height="15" fill="rgb(233,215,31)"/><text x="22.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="19" y="1524" width="2" height="15" fill="rgb(245,71,42)"/><text x="22.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1540" width="2" height="15" fill="rgb(230,187,2)"/><text x="22.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.14%)</title><rect x="19" y="1556" width="2" height="15" fill="rgb(216,174,37)"/><text x="22.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.14%)</title><rect x="19" y="1572" width="2" height="15" fill="rgb(205,192,14)"/><text x="22.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1588" width="2" height="15" fill="rgb(235,222,21)"/><text x="22.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1604" width="2" height="15" fill="rgb(244,62,40)"/><text x="22.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1620" width="2" height="15" fill="rgb(236,121,41)"/><text x="22.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="19" y="1636" width="2" height="15" fill="rgb(230,7,43)"/><text x="22.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1652" width="2" height="15" fill="rgb(248,131,15)"/><text x="22.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.14%)</title><rect x="19" y="1668" width="2" height="15" fill="rgb(216,133,38)"/><text x="22.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1684" width="2" height="15" fill="rgb(238,62,17)"/><text x="22.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1700" width="2" height="15" fill="rgb(225,89,32)"/><text x="22.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1716" width="2" height="15" fill="rgb(209,114,54)"/><text x="22.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="19" y="1732" width="2" height="15" fill="rgb(219,17,21)"/><text x="22.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1748" width="2" height="15" fill="rgb(218,175,13)"/><text x="22.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.14%)</title><rect x="19" y="1764" width="2" height="15" fill="rgb(218,163,40)"/><text x="22.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1780" width="2" height="15" fill="rgb(217,14,24)"/><text x="22.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1796" width="2" height="15" fill="rgb(230,130,50)"/><text x="22.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1812" width="2" height="15" fill="rgb(239,84,25)"/><text x="22.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="19" y="1828" width="2" height="15" fill="rgb(224,110,0)"/><text x="22.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="19" y="1844" width="2" height="15" fill="rgb(241,83,3)"/><text x="22.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/lexer.py) (1 samples, 0.14%)</title><rect x="19" y="1860" width="2" height="15" fill="rgb(230,12,41)"/><text x="22.00" y="1870.50"></text></g><g><title>compile (re.py) (1 samples, 0.14%)</title><rect x="19" y="1876" width="2" height="15" fill="rgb(226,210,3)"/><text x="22.00" y="1886.50"></text></g><g><title>_compile (re.py) (1 samples, 0.14%)</title><rect x="19" y="1892" width="2" height="15" fill="rgb(209,182,36)"/><text x="22.00" y="1902.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.14%)</title><rect x="19" y="1908" width="2" height="15" fill="rgb(251,69,13)"/><text x="22.00" y="1918.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.14%)</title><rect x="19" y="1924" width="2" height="15" fill="rgb(214,64,13)"/><text x="22.00" y="1934.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.14%)</title><rect x="19" y="1940" width="2" height="15" fill="rgb(233,183,54)"/><text x="22.00" y="1950.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.14%)</title><rect x="19" y="1956" width="2" height="15" fill="rgb(244,7,21)"/><text x="22.00" y="1966.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.14%)</title><rect x="19" y="1972" width="2" height="15" fill="rgb(205,45,16)"/><text x="22.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="484" width="5" height="15" fill="rgb(217,23,34)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="500" width="5" height="15" fill="rgb(205,222,54)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="516" width="5" height="15" fill="rgb(235,72,14)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="532" width="5" height="15" fill="rgb(225,34,24)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="548" width="5" height="15" fill="rgb(208,97,14)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="564" width="5" height="15" fill="rgb(207,219,31)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.41%)</title><rect x="19" y="580" width="5" height="15" fill="rgb(234,68,1)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="596" width="5" height="15" fill="rgb(238,82,10)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="612" width="5" height="15" fill="rgb(232,185,37)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="628" width="5" height="15" fill="rgb(216,5,50)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="644" width="5" height="15" fill="rgb(253,121,35)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="660" width="5" height="15" fill="rgb(252,76,24)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.41%)</title><rect x="19" y="676" width="5" height="15" fill="rgb(237,117,20)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="692" width="5" height="15" fill="rgb(244,66,27)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="708" width="5" height="15" fill="rgb(229,18,33)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="724" width="5" height="15" fill="rgb(217,178,17)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="740" width="5" height="15" fill="rgb(224,0,7)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="756" width="5" height="15" fill="rgb(250,168,52)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.41%)</title><rect x="19" y="772" width="5" height="15" fill="rgb(248,165,19)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="788" width="5" height="15" fill="rgb(227,158,10)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="804" width="5" height="15" fill="rgb(231,202,27)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="820" width="5" height="15" fill="rgb(244,6,32)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="836" width="5" height="15" fill="rgb(225,208,12)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(249,94,35)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.41%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(218,108,22)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(250,158,30)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(221,75,25)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(251,39,17)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(238,43,40)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(212,0,44)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(216,36,28)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(210,62,54)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(226,119,51)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.41%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(230,223,20)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1028" width="5" height="15" fill="rgb(218,102,28)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1044" width="5" height="15" fill="rgb(222,96,47)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1060" width="5" height="15" fill="rgb(243,55,1)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="1076" width="5" height="15" fill="rgb(232,64,22)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1092" width="5" height="15" fill="rgb(234,4,3)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.41%)</title><rect x="19" y="1108" width="5" height="15" fill="rgb(208,118,28)"/><text x="22.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1124" width="5" height="15" fill="rgb(232,140,44)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1140" width="5" height="15" fill="rgb(234,124,15)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1156" width="5" height="15" fill="rgb(231,112,11)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1172" width="5" height="15" fill="rgb(230,157,38)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1188" width="5" height="15" fill="rgb(220,63,20)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="1204" width="5" height="15" fill="rgb(249,71,17)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1220" width="5" height="15" fill="rgb(215,195,43)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.41%)</title><rect x="19" y="1236" width="5" height="15" fill="rgb(206,115,36)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1252" width="5" height="15" fill="rgb(216,23,24)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1268" width="5" height="15" fill="rgb(225,88,25)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1284" width="5" height="15" fill="rgb(233,127,33)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1300" width="5" height="15" fill="rgb(216,196,7)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1316" width="5" height="15" fill="rgb(223,183,24)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="1332" width="5" height="15" fill="rgb(232,198,30)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1348" width="5" height="15" fill="rgb(241,29,12)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.41%)</title><rect x="19" y="1364" width="5" height="15" fill="rgb(250,109,29)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1380" width="5" height="15" fill="rgb(210,108,38)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1396" width="5" height="15" fill="rgb(225,88,35)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1412" width="5" height="15" fill="rgb(236,217,28)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.41%)</title><rect x="19" y="1428" width="5" height="15" fill="rgb(222,128,15)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.41%)</title><rect x="19" y="1444" width="5" height="15" fill="rgb(226,23,49)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.41%)</title><rect x="19" y="1460" width="5" height="15" fill="rgb(215,16,27)"/><text x="22.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.27%)</title><rect x="21" y="1476" width="3" height="15" fill="rgb(212,4,33)"/><text x="24.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.27%)</title><rect x="21" y="1492" width="3" height="15" fill="rgb(221,199,38)"/><text x="24.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.14%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(251,183,45)"/><text x="25.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(246,206,53)"/><text x="27.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.14%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(239,95,32)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(234,156,50)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(212,110,30)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(219,39,43)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(206,222,30)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(240,59,11)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.14%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(243,152,1)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(233,166,10)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(246,224,19)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(243,15,31)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(249,122,14)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(244,99,42)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.14%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(242,10,40)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(226,28,27)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(226,190,17)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(208,195,45)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(237,83,37)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(254,71,23)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.14%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(212,18,23)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(248,30,34)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(207,164,11)"/><text x="27.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(206,102,9)"/><text x="27.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(242,175,27)"/><text x="27.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(231,15,8)"/><text x="27.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.14%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(227,201,49)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(206,217,7)"/><text x="27.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(207,124,10)"/><text x="27.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(214,163,18)"/><text x="27.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(227,182,13)"/><text x="27.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(222,137,48)"/><text x="27.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.14%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(244,139,40)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(249,155,46)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(251,21,12)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(207,207,32)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(205,182,7)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(209,2,32)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.14%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(248,72,54)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(236,102,21)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(249,42,13)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(214,214,36)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(254,159,18)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(207,121,53)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.14%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(213,192,29)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(240,155,32)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(250,181,11)"/><text x="27.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(236,23,28)"/><text x="27.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(208,202,9)"/><text x="27.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(218,21,49)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.14%)</title><rect x="24" y="1396" width="2" height="15" fill="rgb(216,163,0)"/><text x="27.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1412" width="2" height="15" fill="rgb(231,164,33)"/><text x="27.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1428" width="2" height="15" fill="rgb(225,63,4)"/><text x="27.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1444" width="2" height="15" fill="rgb(233,208,20)"/><text x="27.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1460" width="2" height="15" fill="rgb(217,152,48)"/><text x="27.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1476" width="2" height="15" fill="rgb(239,213,5)"/><text x="27.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.14%)</title><rect x="24" y="1492" width="2" height="15" fill="rgb(228,37,20)"/><text x="27.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1508" width="2" height="15" fill="rgb(242,115,8)"/><text x="27.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1524" width="2" height="15" fill="rgb(218,123,51)"/><text x="27.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1540" width="2" height="15" fill="rgb(247,39,51)"/><text x="27.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1556" width="2" height="15" fill="rgb(222,220,12)"/><text x="27.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1572" width="2" height="15" fill="rgb(236,209,20)"/><text x="27.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.14%)</title><rect x="24" y="1588" width="2" height="15" fill="rgb(235,6,33)"/><text x="27.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1604" width="2" height="15" fill="rgb(217,108,31)"/><text x="27.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1620" width="2" height="15" fill="rgb(217,118,35)"/><text x="27.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1636" width="2" height="15" fill="rgb(239,72,12)"/><text x="27.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1652" width="2" height="15" fill="rgb(249,163,8)"/><text x="27.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1668" width="2" height="15" fill="rgb(205,30,9)"/><text x="27.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.14%)</title><rect x="24" y="1684" width="2" height="15" fill="rgb(225,170,51)"/><text x="27.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1700" width="2" height="15" fill="rgb(236,31,0)"/><text x="27.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1716" width="2" height="15" fill="rgb(239,154,13)"/><text x="27.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1732" width="2" height="15" fill="rgb(254,95,21)"/><text x="27.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1748" width="2" height="15" fill="rgb(244,134,31)"/><text x="27.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1764" width="2" height="15" fill="rgb(246,201,47)"/><text x="27.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.14%)</title><rect x="24" y="1780" width="2" height="15" fill="rgb(211,171,40)"/><text x="27.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1796" width="2" height="15" fill="rgb(210,22,4)"/><text x="27.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1812" width="2" height="15" fill="rgb(231,31,2)"/><text x="27.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1828" width="2" height="15" fill="rgb(235,94,54)"/><text x="27.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="24" y="1844" width="2" height="15" fill="rgb(221,135,42)"/><text x="27.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="24" y="1860" width="2" height="15" fill="rgb(214,102,49)"/><text x="27.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.14%)</title><rect x="24" y="1876" width="2" height="15" fill="rgb(213,151,44)"/><text x="27.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.14%)</title><rect x="24" y="1892" width="2" height="15" fill="rgb(245,153,2)"/><text x="27.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.14%)</title><rect x="24" y="1908" width="2" height="15" fill="rgb(222,43,20)"/><text x="27.00" y="1918.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py) (1 samples, 0.14%)</title><rect x="24" y="1924" width="2" height="15" fill="rgb(251,73,11)"/><text x="27.00" y="1934.50"></text></g><g><title>getfullargspec (inspect.py) (1 samples, 0.14%)</title><rect x="24" y="1940" width="2" height="15" fill="rgb(233,185,1)"/><text x="27.00" y="1950.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.69%)</title><rect x="19" y="244" width="8" height="15" fill="rgb(251,169,33)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="260" width="8" height="15" fill="rgb(230,168,39)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="276" width="8" height="15" fill="rgb(230,173,9)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="292" width="8" height="15" fill="rgb(250,55,25)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="19" y="308" width="8" height="15" fill="rgb(220,159,24)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="324" width="8" height="15" fill="rgb(249,175,36)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.69%)</title><rect x="19" y="340" width="8" height="15" fill="rgb(219,97,17)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="356" width="8" height="15" fill="rgb(230,208,42)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="372" width="8" height="15" fill="rgb(228,114,5)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="388" width="8" height="15" fill="rgb(245,190,41)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.69%)</title><rect x="19" y="404" width="8" height="15" fill="rgb(226,203,47)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="420" width="8" height="15" fill="rgb(218,167,38)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.69%)</title><rect x="19" y="436" width="8" height="15" fill="rgb(222,211,31)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="452" width="8" height="15" fill="rgb(232,33,22)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.69%)</title><rect x="19" y="468" width="8" height="15" fill="rgb(245,66,7)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="24" y="484" width="3" height="15" fill="rgb(237,82,50)"/><text x="27.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="24" y="500" width="3" height="15" fill="rgb(228,229,28)"/><text x="27.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="24" y="516" width="3" height="15" fill="rgb(217,75,0)"/><text x="27.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.27%)</title><rect x="24" y="532" width="3" height="15" fill="rgb(247,154,16)"/><text x="27.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="24" y="548" width="3" height="15" fill="rgb(225,105,13)"/><text x="27.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="24" y="564" width="3" height="15" fill="rgb(218,23,34)"/><text x="27.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="24" y="580" width="3" height="15" fill="rgb(246,59,15)"/><text x="27.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="24" y="596" width="3" height="15" fill="rgb(222,28,19)"/><text x="27.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(226,60,45)"/><text x="29.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.14%)</title><rect x="27" y="468" width="2" height="15" fill="rgb(221,219,28)"/><text x="30.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="27" y="484" width="2" height="15" fill="rgb(216,89,33)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="27" y="500" width="2" height="15" fill="rgb(245,158,39)"/><text x="30.00" y="510.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="27" y="516" width="2" height="15" fill="rgb(206,213,41)"/><text x="30.00" y="526.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="27" y="532" width="2" height="15" fill="rgb(240,181,19)"/><text x="30.00" y="542.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="27" y="548" width="2" height="15" fill="rgb(208,20,17)"/><text x="30.00" y="558.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="27" y="564" width="2" height="15" fill="rgb(238,62,27)"/><text x="30.00" y="574.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="27" y="580" width="2" height="15" fill="rgb(214,31,16)"/><text x="30.00" y="590.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="27" y="596" width="2" height="15" fill="rgb(243,121,47)"/><text x="30.00" y="606.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="27" y="612" width="2" height="15" fill="rgb(205,40,1)"/><text x="30.00" y="622.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.14%)</title><rect x="27" y="628" width="2" height="15" fill="rgb(207,207,48)"/><text x="30.00" y="638.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.14%)</title><rect x="27" y="644" width="2" height="15" fill="rgb(251,224,10)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.79%)</title><rect x="10" y="68" width="21" height="15" fill="rgb(245,52,43)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.79%)</title><rect x="10" y="84" width="21" height="15" fill="rgb(227,115,53)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.79%)</title><rect x="10" y="100" width="21" height="15" fill="rgb(212,178,23)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 1.79%)</title><rect x="10" y="116" width="21" height="15" fill="rgb(235,92,29)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.79%)</title><rect x="10" y="132" width="21" height="15" fill="rgb(234,171,27)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py) (13 samples, 1.79%)</title><rect x="10" y="148" width="21" height="15" fill="rgb(233,16,41)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.79%)</title><rect x="10" y="164" width="21" height="15" fill="rgb(232,155,3)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 1.79%)</title><rect x="10" y="180" width="21" height="15" fill="rgb(224,164,11)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.96%)</title><rect x="19" y="196" width="12" height="15" fill="rgb(236,177,26)"/><text x="22.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.96%)</title><rect x="19" y="212" width="12" height="15" fill="rgb(244,69,50)"/><text x="22.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.96%)</title><rect x="19" y="228" width="12" height="15" fill="rgb(237,108,31)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.27%)</title><rect x="27" y="244" width="4" height="15" fill="rgb(251,143,40)"/><text x="30.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="260" width="4" height="15" fill="rgb(238,13,51)"/><text x="30.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="276" width="4" height="15" fill="rgb(221,115,6)"/><text x="30.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="292" width="4" height="15" fill="rgb(210,161,17)"/><text x="30.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="308" width="4" height="15" fill="rgb(245,90,51)"/><text x="30.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="324" width="4" height="15" fill="rgb(235,204,6)"/><text x="30.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="27" y="340" width="4" height="15" fill="rgb(245,119,25)"/><text x="30.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="356" width="4" height="15" fill="rgb(216,125,31)"/><text x="30.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.27%)</title><rect x="27" y="372" width="4" height="15" fill="rgb(215,63,52)"/><text x="30.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="388" width="4" height="15" fill="rgb(231,152,22)"/><text x="30.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="404" width="4" height="15" fill="rgb(207,171,42)"/><text x="30.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="420" width="4" height="15" fill="rgb(217,78,25)"/><text x="30.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="27" y="436" width="4" height="15" fill="rgb(233,227,31)"/><text x="30.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="27" y="452" width="4" height="15" fill="rgb(219,148,41)"/><text x="30.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/shape_base.py) (1 samples, 0.14%)</title><rect x="29" y="468" width="2" height="15" fill="rgb(246,87,5)"/><text x="32.00" y="478.50"></text></g><g><title>0x7f9891c3c0bd (?) (1 samples, 0.14%)</title><rect x="31" y="228" width="1" height="15" fill="rgb(212,1,30)"/><text x="34.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="31" y="244" width="1" height="15" fill="rgb(236,19,12)"/><text x="34.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="31" y="260" width="1" height="15" fill="rgb(216,22,28)"/><text x="34.00" y="270.50"></text></g><g><title>0x7f9891cdec36 (?) (1 samples, 0.14%)</title><rect x="31" y="276" width="1" height="15" fill="rgb(221,65,26)"/><text x="34.00" y="286.50"></text></g><g><title>0x7f9891ca06d3 (?) (1 samples, 0.14%)</title><rect x="31" y="292" width="1" height="15" fill="rgb(226,178,26)"/><text x="34.00" y="302.50"></text></g><g><title>0x7f9891c9cbd1 (?) (1 samples, 0.14%)</title><rect x="31" y="308" width="1" height="15" fill="rgb(252,21,5)"/><text x="34.00" y="318.50"></text></g><g><title>0x7f9891ed2888 (?) (1 samples, 0.14%)</title><rect x="31" y="324" width="1" height="15" fill="rgb(234,142,52)"/><text x="34.00" y="334.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (2 samples, 0.27%)</title><rect x="31" y="100" width="3" height="15" fill="rgb(207,79,54)"/><text x="34.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.27%)</title><rect x="31" y="116" width="3" height="15" fill="rgb(252,202,47)"/><text x="34.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.27%)</title><rect x="31" y="132" width="3" height="15" fill="rgb(248,125,54)"/><text x="34.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py) (2 samples, 0.27%)</title><rect x="31" y="148" width="3" height="15" fill="rgb(233,106,33)"/><text x="34.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (2 samples, 0.27%)</title><rect x="31" y="164" width="3" height="15" fill="rgb(212,151,18)"/><text x="34.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (2 samples, 0.27%)</title><rect x="31" y="180" width="3" height="15" fill="rgb(218,53,17)"/><text x="34.00" y="190.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (2 samples, 0.27%)</title><rect x="31" y="196" width="3" height="15" fill="rgb(221,159,21)"/><text x="34.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (2 samples, 0.27%)</title><rect x="31" y="212" width="3" height="15" fill="rgb(245,8,50)"/><text x="34.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.14%)</title><rect x="32" y="228" width="2" height="15" fill="rgb(235,60,41)"/><text x="35.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="32" y="244" width="2" height="15" fill="rgb(251,172,32)"/><text x="35.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="32" y="260" width="2" height="15" fill="rgb(215,35,44)"/><text x="35.00" y="270.50"></text></g><g><title>array_argpartition (methods.c) (1 samples, 0.14%)</title><rect x="32" y="276" width="2" height="15" fill="rgb(231,169,15)"/><text x="35.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (1 samples, 0.14%)</title><rect x="32" y="292" width="2" height="15" fill="rgb(246,85,23)"/><text x="35.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.14%)</title><rect x="32" y="308" width="2" height="15" fill="rgb(235,227,29)"/><text x="35.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src) (1 samples, 0.14%)</title><rect x="32" y="324" width="2" height="15" fill="rgb(233,145,14)"/><text x="35.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src) (1 samples, 0.14%)</title><rect x="32" y="340" width="2" height="15" fill="rgb(226,71,46)"/><text x="35.00" y="350.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="34" y="116" width="1" height="15" fill="rgb(238,102,28)"/><text x="37.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="34" y="132" width="1" height="15" fill="rgb(246,88,2)"/><text x="37.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.14%)</title><rect x="34" y="148" width="1" height="15" fill="rgb(242,139,8)"/><text x="37.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.14%)</title><rect x="34" y="164" width="1" height="15" fill="rgb(237,166,19)"/><text x="37.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.14%)</title><rect x="34" y="180" width="1" height="15" fill="rgb(230,77,35)"/><text x="37.00" y="190.50"></text></g><g><title>convert_nearest_neighbors_regressor (skl2onnx/operator_converters/nearest_neighbours.py) (1 samples, 0.14%)</title><rect x="34" y="196" width="1" height="15" fill="rgb(243,131,14)"/><text x="37.00" y="206.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.14%)</title><rect x="34" y="212" width="1" height="15" fill="rgb(250,181,17)"/><text x="37.00" y="222.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="228" width="1" height="15" fill="rgb(207,129,7)"/><text x="37.00" y="238.50"></text></g><g><title>_get_var_name (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="244" width="1" height="15" fill="rgb(214,129,37)"/><text x="37.00" y="254.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.14%)</title><rect x="34" y="260" width="1" height="15" fill="rgb(212,149,31)"/><text x="37.00" y="270.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="276" width="1" height="15" fill="rgb(216,111,41)"/><text x="37.00" y="286.50"></text></g><g><title>_get_var_name (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="292" width="1" height="15" fill="rgb(248,151,16)"/><text x="37.00" y="302.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.14%)</title><rect x="34" y="308" width="1" height="15" fill="rgb(209,167,16)"/><text x="37.00" y="318.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="324" width="1" height="15" fill="rgb(211,139,54)"/><text x="37.00" y="334.50"></text></g><g><title>_get_var_name (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="340" width="1" height="15" fill="rgb(240,34,21)"/><text x="37.00" y="350.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.14%)</title><rect x="34" y="356" width="1" height="15" fill="rgb(233,119,21)"/><text x="37.00" y="366.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="372" width="1" height="15" fill="rgb(206,52,48)"/><text x="37.00" y="382.50"></text></g><g><title>_get_var_name (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="388" width="1" height="15" fill="rgb(227,172,12)"/><text x="37.00" y="398.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.14%)</title><rect x="34" y="404" width="1" height="15" fill="rgb(217,165,39)"/><text x="37.00" y="414.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.14%)</title><rect x="34" y="420" width="1" height="15" fill="rgb(210,51,18)"/><text x="37.00" y="430.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.14%)</title><rect x="34" y="436" width="1" height="15" fill="rgb(221,76,37)"/><text x="37.00" y="446.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.14%)</title><rect x="34" y="452" width="1" height="15" fill="rgb(212,80,54)"/><text x="37.00" y="462.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.14%)</title><rect x="34" y="468" width="1" height="15" fill="rgb(247,114,26)"/><text x="37.00" y="478.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.14%)</title><rect x="34" y="484" width="1" height="15" fill="rgb(240,94,29)"/><text x="37.00" y="494.50"></text></g><g><title>line (traceback.py) (1 samples, 0.14%)</title><rect x="34" y="500" width="1" height="15" fill="rgb(205,44,43)"/><text x="37.00" y="510.50"></text></g><g><title>getline (linecache.py) (1 samples, 0.14%)</title><rect x="34" y="516" width="1" height="15" fill="rgb(212,154,26)"/><text x="37.00" y="526.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (4 samples, 0.55%)</title><rect x="31" y="68" width="6" height="15" fill="rgb(228,69,2)"/><text x="34.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (4 samples, 0.55%)</title><rect x="31" y="84" width="6" height="15" fill="rgb(214,85,32)"/><text x="34.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.27%)</title><rect x="34" y="100" width="3" height="15" fill="rgb(243,109,32)"/><text x="37.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.14%)</title><rect x="35" y="116" width="2" height="15" fill="rgb(228,166,33)"/><text x="38.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.14%)</title><rect x="35" y="132" width="2" height="15" fill="rgb(248,7,33)"/><text x="38.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="148" width="2" height="15" fill="rgb(225,113,30)"/><text x="38.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="164" width="2" height="15" fill="rgb(238,119,23)"/><text x="38.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="180" width="2" height="15" fill="rgb(252,200,36)"/><text x="38.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="35" y="196" width="2" height="15" fill="rgb(247,149,44)"/><text x="38.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="212" width="2" height="15" fill="rgb(223,182,30)"/><text x="38.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.14%)</title><rect x="35" y="228" width="2" height="15" fill="rgb(249,145,16)"/><text x="38.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="244" width="2" height="15" fill="rgb(239,96,3)"/><text x="38.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="260" width="2" height="15" fill="rgb(207,71,19)"/><text x="38.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="276" width="2" height="15" fill="rgb(245,110,51)"/><text x="38.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="35" y="292" width="2" height="15" fill="rgb(245,117,48)"/><text x="38.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="35" y="308" width="2" height="15" fill="rgb(254,115,16)"/><text x="38.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py) (1 samples, 0.14%)</title><rect x="35" y="324" width="2" height="15" fill="rgb(207,28,11)"/><text x="38.00" y="334.50"></text></g><g><title>0x7f98509fbff9 (?) (1 samples, 0.14%)</title><rect x="39" y="212" width="1" height="15" fill="rgb(251,165,13)"/><text x="42.00" y="222.50"></text></g><g><title>0x7f98509f6ef6 (?) (1 samples, 0.14%)</title><rect x="39" y="228" width="1" height="15" fill="rgb(238,40,10)"/><text x="42.00" y="238.50"></text></g><g><title>0x7f98509eb962 (?) (1 samples, 0.14%)</title><rect x="39" y="244" width="1" height="15" fill="rgb(214,139,9)"/><text x="42.00" y="254.50"></text></g><g><title>0x7f9850a1f7a7 (?) (1 samples, 0.14%)</title><rect x="39" y="260" width="1" height="15" fill="rgb(208,220,13)"/><text x="42.00" y="270.50"></text></g><g><title>0x7f9850a1f379 (?) (1 samples, 0.14%)</title><rect x="39" y="276" width="1" height="15" fill="rgb(224,184,8)"/><text x="42.00" y="286.50"></text></g><g><title>0x7f9850e7d8b8 (?) (1 samples, 0.14%)</title><rect x="39" y="292" width="1" height="15" fill="rgb(229,42,46)"/><text x="42.00" y="302.50"></text></g><g><title>0x7f9850e7bc7f (?) (1 samples, 0.14%)</title><rect x="39" y="308" width="1" height="15" fill="rgb(212,100,6)"/><text x="42.00" y="318.50"></text></g><g><title>0x7f9850e8e99c (?) (1 samples, 0.14%)</title><rect x="39" y="324" width="1" height="15" fill="rgb(246,44,1)"/><text x="42.00" y="334.50"></text></g><g><title>0x7f9850b46e79 (?) (1 samples, 0.14%)</title><rect x="39" y="340" width="1" height="15" fill="rgb(215,66,38)"/><text x="42.00" y="350.50"></text></g><g><title>0x7f9850b45126 (?) (1 samples, 0.14%)</title><rect x="39" y="356" width="1" height="15" fill="rgb(210,193,15)"/><text x="42.00" y="366.50"></text></g><g><title>0x7f9850b427dc (?) (1 samples, 0.14%)</title><rect x="39" y="372" width="1" height="15" fill="rgb(225,85,49)"/><text x="42.00" y="382.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="40" y="292" width="2" height="15" fill="rgb(238,133,40)"/><text x="43.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.14%)</title><rect x="40" y="308" width="2" height="15" fill="rgb(231,189,16)"/><text x="43.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="42" y="340" width="2" height="15" fill="rgb(221,151,22)"/><text x="45.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="42" y="356" width="2" height="15" fill="rgb(226,186,12)"/><text x="45.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="42" y="372" width="2" height="15" fill="rgb(247,228,51)"/><text x="45.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="42" y="388" width="2" height="15" fill="rgb(212,214,51)"/><text x="45.00" y="398.50"></text></g><g><title>0x7f98929c8a71 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="241" y="372" width="2" height="15" fill="rgb(238,111,6)"/><text x="244.00" y="382.50"></text></g><g><title>0x7f98929c8b87 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="243" y="372" width="3" height="15" fill="rgb(240,65,7)"/><text x="246.00" y="382.50"></text></g><g><title>0x7f98929c8f71 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="246" y="372" width="3" height="15" fill="rgb(252,91,14)"/><text x="249.00" y="382.50"></text></g><g><title>0x7f9892b9ae4d (libm-2.29.so) (1 samples, 0.14%)</title><rect x="249" y="372" width="2" height="15" fill="rgb(241,25,30)"/><text x="252.00" y="382.50"></text></g><g><title>logf32x (libm-2.29.so) (1 samples, 0.14%)</title><rect x="251" y="372" width="2" height="15" fill="rgb(209,5,29)"/><text x="254.00" y="382.50"></text></g><g><title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="253" y="372" width="1" height="15" fill="rgb(220,76,35)"/><text x="256.00" y="382.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 18.54%)</title><rect x="44" y="340" width="218" height="15" fill="rgb(209,38,51)"/><text x="47.00" y="350.50">onnxruntime::TopK&lt;11, float&gt;..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (135 samples, 18.54%)</title><rect x="44" y="356" width="218" height="15" fill="rgb(223,3,36)"/><text x="47.00" y="366.50">onnxruntime::TopKImpl (onnxr..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.69%)</title><rect x="254" y="372" width="8" height="15" fill="rgb(218,142,49)"/><text x="257.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::Schedule (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="262" y="404" width="2" height="15" fill="rgb(232,121,40)"/><text x="265.00" y="414.50"></text></g><g><title>Eigen::ThreadPoolTempl&lt;Eigen::StlThreadEnvironment&gt;::ScheduleWithHint (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="262" y="420" width="2" height="15" fill="rgb(205,106,13)"/><text x="265.00" y="430.50"></text></g><g><title>Eigen::EventCount::Unpark [clone .isra.126] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="262" y="436" width="2" height="15" fill="rgb(217,167,32)"/><text x="265.00" y="446.50"></text></g><g><title>std::condition_variable::notify_one (libstdc++.so.6.0.28) (1 samples, 0.14%)</title><rect x="262" y="452" width="2" height="15" fill="rgb(214,6,48)"/><text x="265.00" y="462.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.14%)</title><rect x="262" y="468" width="2" height="15" fill="rgb(218,173,14)"/><text x="265.00" y="478.50"></text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.82%)</title><rect x="262" y="340" width="10" height="15" fill="rgb(207,29,44)"/><text x="265.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.82%)</title><rect x="262" y="356" width="10" height="15" fill="rgb(227,65,50)"/><text x="265.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.82%)</title><rect x="262" y="372" width="10" height="15" fill="rgb(215,188,31)"/><text x="265.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.82%)</title><rect x="262" y="388" width="10" height="15" fill="rgb(245,217,9)"/><text x="265.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (5 samples, 0.69%)</title><rect x="264" y="404" width="8" height="15" fill="rgb(248,47,8)"/><text x="267.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (5 samples, 0.69%)</title><rect x="264" y="420" width="8" height="15" fill="rgb(218,68,27)"/><text x="267.00" y="430.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (146 samples, 20.05%)</title><rect x="37" y="100" width="237" height="15" fill="rgb(218,130,14)"/><text x="40.00" y="110.50">profile (bench_KNeighborsRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (146 samples, 20.05%)</title><rect x="37" y="116" width="237" height="15" fill="rgb(231,56,30)"/><text x="40.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (145 samples, 19.92%)</title><rect x="39" y="132" width="235" height="15" fill="rgb(207,108,35)"/><text x="42.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchma..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (145 samples, 19.92%)</title><rect x="39" y="148" width="235" height="15" fill="rgb(207,74,6)"/><text x="42.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (145 samples, 19.92%)</title><rect x="39" y="164" width="235" height="15" fill="rgb(241,57,16)"/><text x="42.00" y="174.50">_run_whole_runtime (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (145 samples, 19.92%)</title><rect x="39" y="180" width="235" height="15" fill="rgb(223,137,47)"/><text x="42.00" y="190.50">run (mlprodict/onnxrt/ops_whole..</text></g><g><title>run (onnxruntime/capi/session.py) (145 samples, 19.92%)</title><rect x="39" y="196" width="235" height="15" fill="rgb(244,168,26)"/><text x="42.00" y="206.50">run (onnxruntime/capi/session.p..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 19.78%)</title><rect x="40" y="212" width="234" height="15" fill="rgb(222,98,51)"/><text x="43.00" y="222.50">pybind11::cpp_function::dispatc..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 19.78%)</title><rect x="40" y="228" width="234" height="15" fill="rgb(218,210,54)"/><text x="43.00" y="238.50">void pybind11::cpp_function::in..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 19.78%)</title><rect x="40" y="244" width="234" height="15" fill="rgb(241,118,34)"/><text x="43.00" y="254.50">onnxruntime::python::addObjectM..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 19.78%)</title><rect x="40" y="260" width="234" height="15" fill="rgb(232,195,32)"/><text x="43.00" y="270.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (144 samples, 19.78%)</title><rect x="40" y="276" width="234" height="15" fill="rgb(214,206,37)"/><text x="43.00" y="286.50">onnxruntime::InferenceSession::..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 19.64%)</title><rect x="42" y="292" width="232" height="15" fill="rgb(222,170,3)"/><text x="45.00" y="302.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 19.64%)</title><rect x="42" y="308" width="232" height="15" fill="rgb(221,122,30)"/><text x="45.00" y="318.50">onnxruntime::utils::ExecuteGra..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 19.64%)</title><rect x="42" y="324" width="232" height="15" fill="rgb(230,40,41)"/><text x="45.00" y="334.50">onnxruntime::SequentialExecuto..</text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;long&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.14%)</title><rect x="272" y="340" width="2" height="15" fill="rgb(224,136,3)"/><text x="275.00" y="350.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (147 samples, 20.19%)</title><rect x="37" y="68" width="238" height="15" fill="rgb(241,31,40)"/><text x="40.00" y="78.50">profile_ort (bench_KNeighborsRe..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (147 samples, 20.19%)</title><rect x="37" y="84" width="238" height="15" fill="rgb(248,12,33)"/><text x="40.00" y="94.50">setup_profile (bench_KNeighbors..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="274" y="100" width="1" height="15" fill="rgb(225,123,42)"/><text x="277.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="274" y="116" width="1" height="15" fill="rgb(235,26,35)"/><text x="277.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="274" y="132" width="1" height="15" fill="rgb(225,65,40)"/><text x="277.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.14%)</title><rect x="274" y="148" width="1" height="15" fill="rgb(239,53,27)"/><text x="277.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.14%)</title><rect x="274" y="164" width="1" height="15" fill="rgb(228,126,10)"/><text x="277.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.14%)</title><rect x="274" y="180" width="1" height="15" fill="rgb(245,183,4)"/><text x="277.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.14%)</title><rect x="274" y="196" width="1" height="15" fill="rgb(251,220,39)"/><text x="277.00" y="206.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.14%)</title><rect x="274" y="212" width="1" height="15" fill="rgb(239,15,22)"/><text x="277.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.14%)</title><rect x="274" y="228" width="1" height="15" fill="rgb(216,101,38)"/><text x="277.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.14%)</title><rect x="274" y="244" width="1" height="15" fill="rgb(232,186,8)"/><text x="277.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.14%)</title><rect x="274" y="260" width="1" height="15" fill="rgb(206,202,54)"/><text x="277.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.14%)</title><rect x="274" y="276" width="1" height="15" fill="rgb(215,112,12)"/><text x="277.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.14%)</title><rect x="274" y="292" width="1" height="15" fill="rgb(230,193,40)"/><text x="277.00" y="302.50"></text></g><g><title>0x7f9880d129f1 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="274" y="308" width="1" height="15" fill="rgb(234,212,15)"/><text x="277.00" y="318.50"></text></g><g><title>google::protobuf::Reflection::GetRepeatedFloat (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="274" y="324" width="1" height="15" fill="rgb(219,196,5)"/><text x="277.00" y="334.50"></text></g><g><title>PyArray_ToList (convert.c) (2 samples, 0.27%)</title><rect x="283" y="228" width="4" height="15" fill="rgb(212,36,18)"/><text x="286.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (2 samples, 0.27%)</title><rect x="283" y="244" width="4" height="15" fill="rgb(221,189,0)"/><text x="286.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (2 samples, 0.27%)</title><rect x="283" y="260" width="4" height="15" fill="rgb(248,202,44)"/><text x="286.00" y="270.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.14%)</title><rect x="288" y="340" width="2" height="15" fill="rgb(250,185,1)"/><text x="291.00" y="350.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (3 samples, 0.41%)</title><rect x="287" y="276" width="5" height="15" fill="rgb(207,134,39)"/><text x="290.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (3 samples, 0.41%)</title><rect x="287" y="292" width="5" height="15" fill="rgb(244,192,54)"/><text x="290.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (3 samples, 0.41%)</title><rect x="287" y="308" width="5" height="15" fill="rgb(231,168,27)"/><text x="290.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (3 samples, 0.41%)</title><rect x="287" y="324" width="5" height="15" fill="rgb(251,88,48)"/><text x="290.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.14%)</title><rect x="290" y="340" width="2" height="15" fill="rgb(224,45,10)"/><text x="293.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (3 samples, 0.41%)</title><rect x="295" y="340" width="5" height="15" fill="rgb(238,104,8)"/><text x="298.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (2 samples, 0.27%)</title><rect x="296" y="356" width="4" height="15" fill="rgb(246,111,7)"/><text x="299.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (9 samples, 1.24%)</title><rect x="292" y="292" width="14" height="15" fill="rgb(206,27,9)"/><text x="295.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (9 samples, 1.24%)</title><rect x="292" y="308" width="14" height="15" fill="rgb(241,125,29)"/><text x="295.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (8 samples, 1.10%)</title><rect x="293" y="324" width="13" height="15" fill="rgb(225,27,39)"/><text x="296.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (4 samples, 0.55%)</title><rect x="300" y="340" width="6" height="15" fill="rgb(243,7,19)"/><text x="303.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.27%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(243,171,28)"/><text x="306.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (19 samples, 2.61%)</title><rect x="283" y="212" width="31" height="15" fill="rgb(248,196,10)"/><text x="286.00" y="222.50">_r..</text></g><g><title>array_subscript (mapping.c) (17 samples, 2.34%)</title><rect x="287" y="228" width="27" height="15" fill="rgb(237,35,20)"/><text x="290.00" y="238.50">a..</text></g><g><title>prepare_index (mapping.c) (17 samples, 2.34%)</title><rect x="287" y="244" width="27" height="15" fill="rgb(228,6,38)"/><text x="290.00" y="254.50">p..</text></g><g><title>PyArray_FromAny (ctors.c) (17 samples, 2.34%)</title><rect x="287" y="260" width="27" height="15" fill="rgb(238,124,25)"/><text x="290.00" y="270.50">P..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (14 samples, 1.92%)</title><rect x="292" y="276" width="22" height="15" fill="rgb(211,186,6)"/><text x="295.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c) (5 samples, 0.69%)</title><rect x="306" y="292" width="8" height="15" fill="rgb(214,226,43)"/><text x="309.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (4 samples, 0.55%)</title><rect x="308" y="308" width="6" height="15" fill="rgb(209,25,13)"/><text x="311.00" y="318.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src) (1 samples, 0.14%)</title><rect x="314" y="228" width="2" height="15" fill="rgb(253,141,25)"/><text x="317.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py) (2 samples, 0.27%)</title><rect x="314" y="212" width="3" height="15" fill="rgb(238,154,2)"/><text x="317.00" y="222.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;) (1 samples, 0.14%)</title><rect x="316" y="228" width="1" height="15" fill="rgb(228,135,35)"/><text x="319.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.14%)</title><rect x="316" y="244" width="1" height="15" fill="rgb(250,195,47)"/><text x="319.00" y="254.50"></text></g><g><title>prod (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="316" y="260" width="1" height="15" fill="rgb(212,175,24)"/><text x="319.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="316" y="276" width="1" height="15" fill="rgb(223,115,52)"/><text x="319.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.14%)</title><rect x="316" y="292" width="1" height="15" fill="rgb(207,207,35)"/><text x="319.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.14%)</title><rect x="316" y="308" width="1" height="15" fill="rgb(239,59,24)"/><text x="319.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.14%)</title><rect x="316" y="324" width="1" height="15" fill="rgb(215,100,23)"/><text x="319.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.14%)</title><rect x="316" y="340" width="1" height="15" fill="rgb(224,2,46)"/><text x="319.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.14%)</title><rect x="316" y="356" width="1" height="15" fill="rgb(210,94,51)"/><text x="319.00" y="366.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.14%)</title><rect x="316" y="372" width="1" height="15" fill="rgb(221,181,12)"/><text x="319.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py) (1 samples, 0.14%)</title><rect x="317" y="212" width="2" height="15" fill="rgb(243,88,0)"/><text x="320.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.14%)</title><rect x="317" y="228" width="2" height="15" fill="rgb(251,128,53)"/><text x="320.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.14%)</title><rect x="317" y="244" width="2" height="15" fill="rgb(228,187,43)"/><text x="320.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.14%)</title><rect x="317" y="260" width="2" height="15" fill="rgb(215,35,39)"/><text x="320.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.14%)</title><rect x="317" y="276" width="2" height="15" fill="rgb(244,188,3)"/><text x="320.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.14%)</title><rect x="317" y="292" width="2" height="15" fill="rgb(239,129,7)"/><text x="320.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.14%)</title><rect x="317" y="308" width="2" height="15" fill="rgb(236,37,29)"/><text x="320.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c) (45 samples, 6.18%)</title><rect x="319" y="356" width="73" height="15" fill="rgb(208,32,23)"/><text x="322.00" y="366.50">_new_arg..</text></g><g><title>aintroselect_float (selection.c.src) (37 samples, 5.08%)</title><rect x="332" y="372" width="60" height="15" fill="rgb(239,83,24)"/><text x="335.00" y="382.50">aintro..</text></g><g><title>adumb_select_float (selection.c.src) (37 samples, 5.08%)</title><rect x="332" y="388" width="60" height="15" fill="rgb(230,4,29)"/><text x="335.00" y="398.50">adumb_..</text></g><g><title>FLOAT_LT (npysort_common.h) (25 samples, 3.43%)</title><rect x="352" y="404" width="40" height="15" fill="rgb(248,10,15)"/><text x="355.00" y="414.50">FLO..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (47 samples, 6.46%)</title><rect x="319" y="340" width="76" height="15" fill="rgb(216,223,16)"/><text x="322.00" y="350.50">PyArray_..</text></g><g><title>partition_prep_kth_array (item_selection.c) (2 samples, 0.27%)</title><rect x="392" y="356" width="3" height="15" fill="rgb(251,217,51)"/><text x="395.00" y="366.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (2 samples, 0.27%)</title><rect x="392" y="372" width="3" height="15" fill="rgb(216,135,15)"/><text x="395.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.27%)</title><rect x="392" y="388" width="3" height="15" fill="rgb(245,204,33)"/><text x="395.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (2 samples, 0.27%)</title><rect x="392" y="404" width="3" height="15" fill="rgb(232,166,3)"/><text x="395.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.14%)</title><rect x="394" y="420" width="1" height="15" fill="rgb(229,87,11)"/><text x="397.00" y="430.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.14%)</title><rect x="394" y="436" width="1" height="15" fill="rgb(227,33,40)"/><text x="397.00" y="446.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (48 samples, 6.59%)</title><rect x="319" y="260" width="78" height="15" fill="rgb(252,127,34)"/><text x="322.00" y="270.50">argpartit..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (48 samples, 6.59%)</title><rect x="319" y="276" width="78" height="15" fill="rgb(227,229,20)"/><text x="322.00" y="286.50">array_imp..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (48 samples, 6.59%)</title><rect x="319" y="292" width="78" height="15" fill="rgb(232,4,41)"/><text x="322.00" y="302.50">argpartit..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (48 samples, 6.59%)</title><rect x="319" y="308" width="78" height="15" fill="rgb(245,143,32)"/><text x="322.00" y="318.50">_wrapfunc..</text></g><g><title>array_argpartition (methods.c) (48 samples, 6.59%)</title><rect x="319" y="324" width="78" height="15" fill="rgb(231,6,51)"/><text x="322.00" y="334.50">array_arg..</text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.14%)</title><rect x="395" y="340" width="2" height="15" fill="rgb(241,80,11)"/><text x="398.00" y="350.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (3 samples, 0.41%)</title><rect x="397" y="260" width="5" height="15" fill="rgb(239,118,28)"/><text x="400.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.41%)</title><rect x="397" y="276" width="5" height="15" fill="rgb(236,133,10)"/><text x="400.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (3 samples, 0.41%)</title><rect x="397" y="292" width="5" height="15" fill="rgb(238,129,51)"/><text x="400.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.41%)</title><rect x="397" y="308" width="5" height="15" fill="rgb(239,37,4)"/><text x="400.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (3 samples, 0.41%)</title><rect x="397" y="324" width="5" height="15" fill="rgb(227,160,20)"/><text x="400.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (3 samples, 0.41%)</title><rect x="397" y="340" width="5" height="15" fill="rgb(232,126,47)"/><text x="400.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (3 samples, 0.41%)</title><rect x="397" y="356" width="5" height="15" fill="rgb(214,220,27)"/><text x="400.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (1 samples, 0.14%)</title><rect x="400" y="372" width="2" height="15" fill="rgb(217,185,15)"/><text x="403.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h) (1 samples, 0.14%)</title><rect x="400" y="388" width="2" height="15" fill="rgb(206,24,53)"/><text x="403.00" y="398.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.14%)</title><rect x="402" y="260" width="1" height="15" fill="rgb(237,3,19)"/><text x="405.00" y="270.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.14%)</title><rect x="402" y="276" width="1" height="15" fill="rgb(238,128,29)"/><text x="405.00" y="286.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.14%)</title><rect x="402" y="292" width="1" height="15" fill="rgb(254,130,3)"/><text x="405.00" y="302.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (3 samples, 0.41%)</title><rect x="403" y="292" width="5" height="15" fill="rgb(226,90,33)"/><text x="406.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (3 samples, 0.41%)</title><rect x="403" y="308" width="5" height="15" fill="rgb(243,134,39)"/><text x="406.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.41%)</title><rect x="403" y="324" width="5" height="15" fill="rgb(254,16,27)"/><text x="406.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.41%)</title><rect x="403" y="340" width="5" height="15" fill="rgb(220,107,50)"/><text x="406.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.14%)</title><rect x="407" y="356" width="1" height="15" fill="rgb(234,202,6)"/><text x="410.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (4 samples, 0.55%)</title><rect x="403" y="276" width="7" height="15" fill="rgb(225,42,17)"/><text x="406.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.14%)</title><rect x="408" y="292" width="2" height="15" fill="rgb(227,99,8)"/><text x="411.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.14%)</title><rect x="408" y="308" width="2" height="15" fill="rgb(238,5,22)"/><text x="411.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.14%)</title><rect x="408" y="324" width="2" height="15" fill="rgb(213,36,25)"/><text x="411.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (62 samples, 8.52%)</title><rect x="319" y="212" width="101" height="15" fill="rgb(217,30,42)"/><text x="322.00" y="222.50">_run (mlprod..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (62 samples, 8.52%)</title><rect x="319" y="228" width="101" height="15" fill="rgb(218,219,7)"/><text x="322.00" y="238.50">_common_run ..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (62 samples, 8.52%)</title><rect x="319" y="244" width="101" height="15" fill="rgb(211,124,31)"/><text x="322.00" y="254.50">topk_sorted_..</text></g><g><title>array_subscript (mapping.c) (10 samples, 1.37%)</title><rect x="403" y="260" width="17" height="15" fill="rgb(240,112,40)"/><text x="406.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (6 samples, 0.82%)</title><rect x="410" y="276" width="10" height="15" fill="rgb(206,4,39)"/><text x="413.00" y="286.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.27%)</title><rect x="421" y="244" width="3" height="15" fill="rgb(248,172,49)"/><text x="424.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.27%)</title><rect x="421" y="260" width="3" height="15" fill="rgb(221,77,48)"/><text x="424.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.27%)</title><rect x="421" y="276" width="3" height="15" fill="rgb(245,66,30)"/><text x="424.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (2 samples, 0.27%)</title><rect x="421" y="292" width="3" height="15" fill="rgb(254,39,41)"/><text x="424.00" y="302.50"></text></g><g><title>0x7f986fbee669 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="429" y="260" width="2" height="15" fill="rgb(253,209,27)"/><text x="432.00" y="270.50"></text></g><g><title>0x7f986fbee739 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="431" y="260" width="2" height="15" fill="rgb(205,106,29)"/><text x="434.00" y="270.50"></text></g><g><title>0x7f986fbee750 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="433" y="260" width="4" height="15" fill="rgb(208,28,30)"/><text x="436.00" y="270.50"></text></g><g><title>0x7f986fbee75f (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.55%)</title><rect x="437" y="260" width="7" height="15" fill="rgb(252,57,53)"/><text x="440.00" y="270.50"></text></g><g><title>0x7f986fbee771 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.69%)</title><rect x="444" y="260" width="8" height="15" fill="rgb(252,155,46)"/><text x="447.00" y="270.50"></text></g><g><title>0x7f986fbee8c0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.55%)</title><rect x="452" y="260" width="6" height="15" fill="rgb(224,66,12)"/><text x="455.00" y="270.50"></text></g><g><title>0x7f986fbee8c5 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="458" y="260" width="5" height="15" fill="rgb(244,120,14)"/><text x="461.00" y="270.50"></text></g><g><title>0x7f986fbee8cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.82%)</title><rect x="463" y="260" width="10" height="15" fill="rgb(205,21,50)"/><text x="466.00" y="270.50"></text></g><g><title>0x7f986fbee8d3 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="473" y="260" width="2" height="15" fill="rgb(245,101,49)"/><text x="476.00" y="270.50"></text></g><g><title>0x7f986fbee8d9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="475" y="260" width="5" height="15" fill="rgb(235,4,12)"/><text x="478.00" y="270.50"></text></g><g><title>0x7f986fbee8dc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="480" y="260" width="4" height="15" fill="rgb(254,163,29)"/><text x="483.00" y="270.50"></text></g><g><title>0x7f986fbee8e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="484" y="260" width="4" height="15" fill="rgb(216,112,27)"/><text x="487.00" y="270.50"></text></g><g><title>0x7f986fbee8e6 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="488" y="260" width="1" height="15" fill="rgb(246,32,44)"/><text x="491.00" y="270.50"></text></g><g><title>0x7f986fbee8ec (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="489" y="260" width="5" height="15" fill="rgb(244,196,7)"/><text x="492.00" y="270.50"></text></g><g><title>0x7f986fbee8f0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.55%)</title><rect x="494" y="260" width="7" height="15" fill="rgb(216,225,31)"/><text x="497.00" y="270.50"></text></g><g><title>0x7f986fbee8f4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.96%)</title><rect x="501" y="260" width="11" height="15" fill="rgb(224,127,23)"/><text x="504.00" y="270.50"></text></g><g><title>0x7f986fbee8fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="512" y="260" width="3" height="15" fill="rgb(248,47,37)"/><text x="515.00" y="270.50"></text></g><g><title>0x7f986fbee904 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="515" y="260" width="2" height="15" fill="rgb(244,124,49)"/><text x="518.00" y="270.50"></text></g><g><title>0x7f986fbee90a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="517" y="260" width="1" height="15" fill="rgb(243,168,8)"/><text x="520.00" y="270.50"></text></g><g><title>0x7f986fbee90e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="518" y="260" width="2" height="15" fill="rgb(235,20,28)"/><text x="521.00" y="270.50"></text></g><g><title>0x7f986fbee912 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.10%)</title><rect x="520" y="260" width="13" height="15" fill="rgb(226,94,44)"/><text x="523.00" y="270.50"></text></g><g><title>0x7f986fbee918 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.96%)</title><rect x="533" y="260" width="11" height="15" fill="rgb(244,159,46)"/><text x="536.00" y="270.50"></text></g><g><title>0x7f986fbee91c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="544" y="260" width="2" height="15" fill="rgb(248,47,21)"/><text x="547.00" y="270.50"></text></g><g><title>0x7f986fbee920 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.69%)</title><rect x="546" y="260" width="8" height="15" fill="rgb(248,86,43)"/><text x="549.00" y="270.50"></text></g><g><title>0x7f986fbee926 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="554" y="260" width="5" height="15" fill="rgb(250,198,8)"/><text x="557.00" y="270.50"></text></g><g><title>0x7f986fbee930 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="559" y="260" width="2" height="15" fill="rgb(226,150,49)"/><text x="562.00" y="270.50"></text></g><g><title>0x7f986fbee934 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.82%)</title><rect x="561" y="260" width="9" height="15" fill="rgb(218,122,49)"/><text x="564.00" y="270.50"></text></g><g><title>0x7f986fbee93a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="570" y="260" width="2" height="15" fill="rgb(238,133,5)"/><text x="573.00" y="270.50"></text></g><g><title>0x7f986fbee94a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.10%)</title><rect x="572" y="260" width="13" height="15" fill="rgb(254,161,45)"/><text x="575.00" y="270.50"></text></g><g><title>0x7f986fbee952 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.96%)</title><rect x="585" y="260" width="11" height="15" fill="rgb(235,214,47)"/><text x="588.00" y="270.50"></text></g><g><title>0x7f986fbee958 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="596" y="260" width="4" height="15" fill="rgb(235,198,34)"/><text x="599.00" y="270.50"></text></g><g><title>0x7f986fbee95c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.69%)</title><rect x="600" y="260" width="8" height="15" fill="rgb(245,157,22)"/><text x="603.00" y="270.50"></text></g><g><title>0x7f986fbee968 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.24%)</title><rect x="608" y="260" width="14" height="15" fill="rgb(235,170,25)"/><text x="611.00" y="270.50"></text></g><g><title>0x7f986fbee96c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="622" y="260" width="5" height="15" fill="rgb(229,201,46)"/><text x="625.00" y="270.50"></text></g><g><title>0x7f986fbee970 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.69%)</title><rect x="627" y="260" width="8" height="15" fill="rgb(241,18,26)"/><text x="630.00" y="270.50"></text></g><g><title>0x7f986fbee97a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.55%)</title><rect x="635" y="260" width="7" height="15" fill="rgb(217,165,33)"/><text x="638.00" y="270.50"></text></g><g><title>0x7f986fbee980 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.69%)</title><rect x="642" y="260" width="8" height="15" fill="rgb(213,42,46)"/><text x="645.00" y="270.50"></text></g><g><title>0x7f986fbee986 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="650" y="260" width="3" height="15" fill="rgb(233,153,46)"/><text x="653.00" y="270.50"></text></g><g><title>0x7f986fbee98a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.82%)</title><rect x="653" y="260" width="10" height="15" fill="rgb(209,56,18)"/><text x="656.00" y="270.50"></text></g><g><title>0x7f986fbee98e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.37%)</title><rect x="663" y="260" width="16" height="15" fill="rgb(212,81,30)"/><text x="666.00" y="270.50"></text></g><g><title>0x7f986fbee99e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.82%)</title><rect x="679" y="260" width="10" height="15" fill="rgb(206,106,42)"/><text x="682.00" y="270.50"></text></g><g><title>0x7f986fbee9a4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.96%)</title><rect x="689" y="260" width="11" height="15" fill="rgb(242,144,20)"/><text x="692.00" y="270.50"></text></g><g><title>0x7f986fbee9ac (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (14 samples, 1.92%)</title><rect x="700" y="260" width="23" height="15" fill="rgb(233,210,26)"/><text x="703.00" y="270.50">0..</text></g><g><title>0x7f986fbee9b2 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="723" y="260" width="1" height="15" fill="rgb(223,11,29)"/><text x="726.00" y="270.50"></text></g><g><title>0x7f986fbee9be (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.06%)</title><rect x="724" y="260" width="25" height="15" fill="rgb(249,198,10)"/><text x="727.00" y="270.50">0..</text></g><g><title>0x7f986fbee9dc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.37%)</title><rect x="749" y="260" width="16" height="15" fill="rgb(247,209,44)"/><text x="752.00" y="270.50"></text></g><g><title>0x7f986fbee9e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.96%)</title><rect x="765" y="260" width="11" height="15" fill="rgb(210,81,27)"/><text x="768.00" y="270.50"></text></g><g><title>0x7f986fbee9f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (67 samples, 9.20%)</title><rect x="776" y="260" width="109" height="15" fill="rgb(230,35,53)"/><text x="779.00" y="270.50">0x7f986fbee9f..</text></g><g><title>0x7f986fbee9fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (16 samples, 2.20%)</title><rect x="885" y="260" width="26" height="15" fill="rgb(229,174,48)"/><text x="888.00" y="270.50">0..</text></g><g><title>0x7f986fbeea03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="911" y="260" width="5" height="15" fill="rgb(226,143,9)"/><text x="914.00" y="270.50"></text></g><g><title>0x7f986fbeea12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.41%)</title><rect x="916" y="260" width="4" height="15" fill="rgb(231,171,34)"/><text x="919.00" y="270.50"></text></g><g><title>0x7f986fbeea70 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.55%)</title><rect x="920" y="260" width="7" height="15" fill="rgb(229,107,10)"/><text x="923.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py) (5 samples, 0.69%)</title><rect x="927" y="276" width="8" height="15" fill="rgb(251,47,6)"/><text x="930.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py) (5 samples, 0.69%)</title><rect x="927" y="292" width="8" height="15" fill="rgb(213,131,7)"/><text x="930.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 0.69%)</title><rect x="927" y="308" width="8" height="15" fill="rgb(206,184,46)"/><text x="930.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 0.55%)</title><rect x="929" y="324" width="6" height="15" fill="rgb(229,202,19)"/><text x="932.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.55%)</title><rect x="929" y="340" width="6" height="15" fill="rgb(242,84,4)"/><text x="932.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (4 samples, 0.55%)</title><rect x="929" y="356" width="6" height="15" fill="rgb(224,64,35)"/><text x="932.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.55%)</title><rect x="929" y="372" width="6" height="15" fill="rgb(214,223,6)"/><text x="932.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (3 samples, 0.41%)</title><rect x="930" y="388" width="5" height="15" fill="rgb(222,186,16)"/><text x="933.00" y="398.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (3 samples, 0.41%)</title><rect x="930" y="404" width="5" height="15" fill="rgb(207,129,41)"/><text x="933.00" y="414.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py) (6 samples, 0.82%)</title><rect x="927" y="260" width="10" height="15" fill="rgb(222,198,0)"/><text x="930.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.14%)</title><rect x="935" y="276" width="2" height="15" fill="rgb(225,215,13)"/><text x="938.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.14%)</title><rect x="935" y="292" width="2" height="15" fill="rgb(217,97,17)"/><text x="938.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.14%)</title><rect x="935" y="308" width="2" height="15" fill="rgb(216,127,46)"/><text x="938.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (319 samples, 43.82%)</title><rect x="421" y="228" width="517" height="15" fill="rgb(220,177,8)"/><text x="424.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_cdist.py)</text></g><g><title>cdist (scipy/spatial/distance.py) (317 samples, 43.54%)</title><rect x="424" y="244" width="514" height="15" fill="rgb(223,227,20)"/><text x="427.00" y="254.50">cdist (scipy/spatial/distance.py)</text></g><g><title>callable (scipy/_lib/six.py) (1 samples, 0.14%)</title><rect x="937" y="260" width="1" height="15" fill="rgb(233,77,47)"/><text x="940.00" y="270.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py) (1 samples, 0.14%)</title><rect x="938" y="308" width="2" height="15" fill="rgb(213,92,6)"/><text x="941.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.14%)</title><rect x="938" y="324" width="2" height="15" fill="rgb(234,166,45)"/><text x="941.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.14%)</title><rect x="940" y="308" width="2" height="15" fill="rgb(246,67,26)"/><text x="943.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.14%)</title><rect x="940" y="324" width="2" height="15" fill="rgb(206,192,39)"/><text x="943.00" y="334.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.14%)</title><rect x="940" y="340" width="2" height="15" fill="rgb(221,57,25)"/><text x="943.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.14%)</title><rect x="940" y="356" width="2" height="15" fill="rgb(208,112,5)"/><text x="943.00" y="366.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.14%)</title><rect x="940" y="372" width="2" height="15" fill="rgb(252,77,4)"/><text x="943.00" y="382.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.14%)</title><rect x="940" y="388" width="2" height="15" fill="rgb(225,103,3)"/><text x="943.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.14%)</title><rect x="940" y="404" width="2" height="15" fill="rgb(213,89,50)"/><text x="943.00" y="414.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (412 samples, 56.59%)</title><rect x="275" y="100" width="668" height="15" fill="rgb(253,102,44)"/><text x="278.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (412 samples, 56.59%)</title><rect x="275" y="116" width="668" height="15" fill="rgb(213,5,46)"/><text x="278.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (412 samples, 56.59%)</title><rect x="275" y="132" width="668" height="15" fill="rgb(253,160,43)"/><text x="278.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (412 samples, 56.59%)</title><rect x="275" y="148" width="668" height="15" fill="rgb(252,69,1)"/><text x="278.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (412 samples, 56.59%)</title><rect x="275" y="164" width="668" height="15" fill="rgb(233,95,7)"/><text x="278.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (412 samples, 56.59%)</title><rect x="275" y="180" width="668" height="15" fill="rgb(254,154,0)"/><text x="278.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (408 samples, 56.04%)</title><rect x="282" y="196" width="661" height="15" fill="rgb(253,77,21)"/><text x="285.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (323 samples, 44.37%)</title><rect x="420" y="212" width="523" height="15" fill="rgb(239,166,14)"/><text x="423.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (3 samples, 0.41%)</title><rect x="938" y="228" width="5" height="15" fill="rgb(236,131,13)"/><text x="941.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;) (3 samples, 0.41%)</title><rect x="938" y="244" width="5" height="15" fill="rgb(233,64,18)"/><text x="941.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.41%)</title><rect x="938" y="260" width="5" height="15" fill="rgb(231,94,16)"/><text x="941.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (3 samples, 0.41%)</title><rect x="938" y="276" width="5" height="15" fill="rgb(249,173,26)"/><text x="941.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py) (3 samples, 0.41%)</title><rect x="938" y="292" width="5" height="15" fill="rgb(240,9,24)"/><text x="941.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.14%)</title><rect x="942" y="308" width="1" height="15" fill="rgb(252,102,18)"/><text x="945.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.14%)</title><rect x="942" y="324" width="1" height="15" fill="rgb(254,226,22)"/><text x="945.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.14%)</title><rect x="942" y="340" width="1" height="15" fill="rgb(240,177,27)"/><text x="945.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.14%)</title><rect x="942" y="356" width="1" height="15" fill="rgb(227,27,32)"/><text x="945.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c) (1 samples, 0.14%)</title><rect x="942" y="372" width="1" height="15" fill="rgb(205,6,47)"/><text x="945.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.14%)</title><rect x="942" y="388" width="1" height="15" fill="rgb(229,153,20)"/><text x="945.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.14%)</title><rect x="942" y="404" width="1" height="15" fill="rgb(229,203,1)"/><text x="945.00" y="414.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.14%)</title><rect x="942" y="420" width="1" height="15" fill="rgb(243,206,53)"/><text x="945.00" y="430.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (413 samples, 56.73%)</title><rect x="275" y="68" width="670" height="15" fill="rgb(214,225,28)"/><text x="278.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (413 samples, 56.73%)</title><rect x="275" y="84" width="670" height="15" fill="rgb(229,224,19)"/><text x="278.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_5..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="943" y="100" width="2" height="15" fill="rgb(230,226,19)"/><text x="946.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="943" y="116" width="2" height="15" fill="rgb(217,172,43)"/><text x="946.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.14%)</title><rect x="943" y="132" width="2" height="15" fill="rgb(222,97,3)"/><text x="946.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.14%)</title><rect x="943" y="148" width="2" height="15" fill="rgb(240,122,14)"/><text x="946.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.14%)</title><rect x="943" y="164" width="2" height="15" fill="rgb(254,103,25)"/><text x="946.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.14%)</title><rect x="943" y="180" width="2" height="15" fill="rgb(215,189,20)"/><text x="946.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.14%)</title><rect x="943" y="196" width="2" height="15" fill="rgb(240,4,2)"/><text x="946.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="212" width="2" height="15" fill="rgb(248,19,21)"/><text x="946.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="228" width="2" height="15" fill="rgb(238,59,18)"/><text x="946.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="244" width="2" height="15" fill="rgb(214,225,36)"/><text x="946.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="943" y="260" width="2" height="15" fill="rgb(245,136,9)"/><text x="946.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="276" width="2" height="15" fill="rgb(222,148,27)"/><text x="946.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.14%)</title><rect x="943" y="292" width="2" height="15" fill="rgb(224,30,12)"/><text x="946.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="308" width="2" height="15" fill="rgb(253,225,37)"/><text x="946.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="324" width="2" height="15" fill="rgb(237,74,37)"/><text x="946.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="340" width="2" height="15" fill="rgb(210,134,27)"/><text x="946.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="943" y="356" width="2" height="15" fill="rgb(212,195,4)"/><text x="946.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="372" width="2" height="15" fill="rgb(218,153,2)"/><text x="946.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.14%)</title><rect x="943" y="388" width="2" height="15" fill="rgb(222,197,1)"/><text x="946.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="404" width="2" height="15" fill="rgb(225,159,36)"/><text x="946.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="420" width="2" height="15" fill="rgb(206,162,52)"/><text x="946.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="943" y="436" width="2" height="15" fill="rgb(242,174,40)"/><text x="946.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="943" y="452" width="2" height="15" fill="rgb(232,98,15)"/><text x="946.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="943" y="468" width="2" height="15" fill="rgb(209,138,10)"/><text x="946.00" y="478.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.14%)</title><rect x="943" y="484" width="2" height="15" fill="rgb(240,75,16)"/><text x="946.00" y="494.50"></text></g><g><title>0x7f98929de757 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="946" y="180" width="2" height="15" fill="rgb(239,117,4)"/><text x="949.00" y="190.50"></text></g><g><title>array_ravel (methods.c) (2 samples, 0.27%)</title><rect x="946" y="164" width="4" height="15" fill="rgb(232,164,21)"/><text x="949.00" y="174.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.14%)</title><rect x="948" y="180" width="2" height="15" fill="rgb(217,104,48)"/><text x="951.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.14%)</title><rect x="948" y="196" width="2" height="15" fill="rgb(222,45,32)"/><text x="951.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.14%)</title><rect x="948" y="212" width="2" height="15" fill="rgb(234,105,10)"/><text x="951.00" y="222.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.14%)</title><rect x="948" y="228" width="2" height="15" fill="rgb(211,58,40)"/><text x="951.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.14%)</title><rect x="948" y="244" width="2" height="15" fill="rgb(250,227,42)"/><text x="951.00" y="254.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.14%)</title><rect x="950" y="164" width="1" height="15" fill="rgb(222,225,0)"/><text x="953.00" y="174.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.14%)</title><rect x="950" y="180" width="1" height="15" fill="rgb(243,55,47)"/><text x="953.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (2 samples, 0.27%)</title><rect x="951" y="164" width="3" height="15" fill="rgb(219,213,1)"/><text x="954.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.27%)</title><rect x="951" y="180" width="3" height="15" fill="rgb(212,69,44)"/><text x="954.00" y="190.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.14%)</title><rect x="958" y="196" width="1" height="15" fill="rgb(210,91,21)"/><text x="961.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.41%)</title><rect x="956" y="180" width="5" height="15" fill="rgb(210,188,47)"/><text x="959.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.14%)</title><rect x="959" y="196" width="2" height="15" fill="rgb(254,126,43)"/><text x="962.00" y="206.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (1 samples, 0.14%)</title><rect x="963" y="196" width="1" height="15" fill="rgb(223,124,46)"/><text x="966.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.14%)</title><rect x="963" y="212" width="1" height="15" fill="rgb(218,168,34)"/><text x="966.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.14%)</title><rect x="963" y="228" width="1" height="15" fill="rgb(246,164,53)"/><text x="966.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.14%)</title><rect x="963" y="244" width="1" height="15" fill="rgb(215,201,12)"/><text x="966.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.14%)</title><rect x="963" y="260" width="1" height="15" fill="rgb(249,133,23)"/><text x="966.00" y="270.50"></text></g><g><title>adumb_select_double (selection.c.src) (41 samples, 5.63%)</title><rect x="971" y="340" width="66" height="15" fill="rgb(254,14,30)"/><text x="974.00" y="350.50">adumb_s..</text></g><g><title>DOUBLE_LT (npysort_common.h) (28 samples, 3.85%)</title><rect x="992" y="356" width="45" height="15" fill="rgb(208,139,52)"/><text x="995.00" y="366.50">DOUB..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (46 samples, 6.32%)</title><rect x="964" y="292" width="75" height="15" fill="rgb(244,93,36)"/><text x="967.00" y="302.50">PyArray_..</text></g><g><title>_new_argsortlike (item_selection.c) (46 samples, 6.32%)</title><rect x="964" y="308" width="75" height="15" fill="rgb(212,40,11)"/><text x="967.00" y="318.50">_new_arg..</text></g><g><title>aintroselect_double (selection.c.src) (43 samples, 5.91%)</title><rect x="969" y="324" width="70" height="15" fill="rgb(253,48,39)"/><text x="972.00" y="334.50">aintros..</text></g><g><title>store_pivot (selection.c.src) (1 samples, 0.14%)</title><rect x="1037" y="340" width="2" height="15" fill="rgb(216,91,9)"/><text x="1040.00" y="350.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (47 samples, 6.46%)</title><rect x="964" y="212" width="76" height="15" fill="rgb(248,194,40)"/><text x="967.00" y="222.50">argparti..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (47 samples, 6.46%)</title><rect x="964" y="228" width="76" height="15" fill="rgb(221,164,19)"/><text x="967.00" y="238.50">array_im..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (47 samples, 6.46%)</title><rect x="964" y="244" width="76" height="15" fill="rgb(210,135,20)"/><text x="967.00" y="254.50">argparti..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (47 samples, 6.46%)</title><rect x="964" y="260" width="76" height="15" fill="rgb(235,98,37)"/><text x="967.00" y="270.50">_wrapfun..</text></g><g><title>array_argpartition (methods.c) (47 samples, 6.46%)</title><rect x="964" y="276" width="76" height="15" fill="rgb(213,40,54)"/><text x="967.00" y="286.50">array_ar..</text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.14%)</title><rect x="1039" y="292" width="1" height="15" fill="rgb(232,81,1)"/><text x="1042.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.14%)</title><rect x="1039" y="308" width="1" height="15" fill="rgb(248,16,16)"/><text x="1042.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.14%)</title><rect x="1039" y="324" width="1" height="15" fill="rgb(208,205,22)"/><text x="1042.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.14%)</title><rect x="1039" y="340" width="1" height="15" fill="rgb(217,111,14)"/><text x="1042.00" y="350.50"></text></g><g><title>0x7f9891bea740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.14%)</title><rect x="1039" y="356" width="1" height="15" fill="rgb(249,159,38)"/><text x="1042.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.14%)</title><rect x="1040" y="212" width="2" height="15" fill="rgb(226,122,19)"/><text x="1043.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.14%)</title><rect x="1040" y="228" width="2" height="15" fill="rgb(216,201,22)"/><text x="1043.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="1040" y="244" width="2" height="15" fill="rgb(242,221,10)"/><text x="1043.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.14%)</title><rect x="1040" y="260" width="2" height="15" fill="rgb(207,40,43)"/><text x="1043.00" y="270.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.14%)</title><rect x="1040" y="276" width="2" height="15" fill="rgb(208,132,34)"/><text x="1043.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.14%)</title><rect x="1040" y="292" width="2" height="15" fill="rgb(205,167,29)"/><text x="1043.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.14%)</title><rect x="1040" y="308" width="2" height="15" fill="rgb(246,111,50)"/><text x="1043.00" y="318.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c) (1 samples, 0.14%)</title><rect x="1040" y="324" width="2" height="15" fill="rgb(239,25,14)"/><text x="1043.00" y="334.50"></text></g><g><title>PyArray_IterNew (iterators.c) (1 samples, 0.14%)</title><rect x="1040" y="340" width="2" height="15" fill="rgb(214,150,5)"/><text x="1043.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1040" y="356" width="2" height="15" fill="rgb(215,58,2)"/><text x="1043.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.14%)</title><rect x="1042" y="212" width="2" height="15" fill="rgb(223,97,25)"/><text x="1045.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.14%)</title><rect x="1042" y="228" width="2" height="15" fill="rgb(228,118,11)"/><text x="1045.00" y="238.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (3 samples, 0.41%)</title><rect x="1044" y="228" width="4" height="15" fill="rgb(252,135,36)"/><text x="1047.00" y="238.50"></text></g><g><title>NpyIter_New (nditer_constr.c) (1 samples, 0.14%)</title><rect x="1047" y="244" width="1" height="15" fill="rgb(251,25,12)"/><text x="1050.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.14%)</title><rect x="1047" y="260" width="1" height="15" fill="rgb(226,68,37)"/><text x="1050.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.14%)</title><rect x="1047" y="276" width="1" height="15" fill="rgb(213,44,54)"/><text x="1050.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1047" y="292" width="1" height="15" fill="rgb(210,77,35)"/><text x="1050.00" y="302.50"></text></g><g><title>0x7f98929ca514 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1047" y="308" width="1" height="15" fill="rgb(248,198,13)"/><text x="1050.00" y="318.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.14%)</title><rect x="1048" y="244" width="2" height="15" fill="rgb(241,86,9)"/><text x="1051.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.14%)</title><rect x="1048" y="260" width="2" height="15" fill="rgb(226,99,23)"/><text x="1051.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.14%)</title><rect x="1048" y="276" width="2" height="15" fill="rgb(252,167,21)"/><text x="1051.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.14%)</title><rect x="1048" y="292" width="2" height="15" fill="rgb(252,26,22)"/><text x="1051.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 0.41%)</title><rect x="1048" y="228" width="5" height="15" fill="rgb(241,28,6)"/><text x="1051.00" y="238.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1050" y="244" width="3" height="15" fill="rgb(232,178,28)"/><text x="1053.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1050" y="260" width="3" height="15" fill="rgb(223,163,3)"/><text x="1053.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1050" y="276" width="3" height="15" fill="rgb(226,106,26)"/><text x="1053.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1050" y="292" width="3" height="15" fill="rgb(206,78,5)"/><text x="1053.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.27%)</title><rect x="1050" y="308" width="3" height="15" fill="rgb(206,59,41)"/><text x="1053.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.27%)</title><rect x="1050" y="324" width="3" height="15" fill="rgb(233,124,0)"/><text x="1053.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.27%)</title><rect x="1050" y="340" width="3" height="15" fill="rgb(248,1,30)"/><text x="1053.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.27%)</title><rect x="1050" y="356" width="3" height="15" fill="rgb(207,180,54)"/><text x="1053.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (2 samples, 0.27%)</title><rect x="1050" y="372" width="3" height="15" fill="rgb(235,152,21)"/><text x="1053.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1050" y="388" width="3" height="15" fill="rgb(212,197,12)"/><text x="1053.00" y="398.50"></text></g><g><title>0x7f98929ca2f8 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1052" y="404" width="1" height="15" fill="rgb(225,170,28)"/><text x="1055.00" y="414.50"></text></g><g><title>array_subscript (mapping.c) (8 samples, 1.10%)</title><rect x="1044" y="212" width="13" height="15" fill="rgb(217,224,7)"/><text x="1047.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (2 samples, 0.27%)</title><rect x="1053" y="228" width="4" height="15" fill="rgb(227,59,19)"/><text x="1056.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.14%)</title><rect x="1057" y="260" width="1" height="15" fill="rgb(230,190,52)"/><text x="1060.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.14%)</title><rect x="1057" y="276" width="1" height="15" fill="rgb(240,125,20)"/><text x="1060.00" y="286.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (61 samples, 8.38%)</title><rect x="964" y="196" width="99" height="15" fill="rgb(224,221,35)"/><text x="967.00" y="206.50">_kneighbors..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.55%)</title><rect x="1057" y="212" width="6" height="15" fill="rgb(233,219,9)"/><text x="1060.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.55%)</title><rect x="1057" y="228" width="6" height="15" fill="rgb(249,127,52)"/><text x="1060.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.55%)</title><rect x="1057" y="244" width="6" height="15" fill="rgb(215,26,36)"/><text x="1060.00" y="254.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c) (3 samples, 0.41%)</title><rect x="1058" y="260" width="5" height="15" fill="rgb(236,28,42)"/><text x="1061.00" y="270.50"></text></g><g><title>DOUBLE_sqrt (loops.c.src) (3 samples, 0.41%)</title><rect x="1058" y="276" width="5" height="15" fill="rgb(206,177,46)"/><text x="1061.00" y="286.50"></text></g><g><title>run_unary_simd_sqrt_DOUBLE (simd.inc.src) (3 samples, 0.41%)</title><rect x="1058" y="292" width="5" height="15" fill="rgb(229,127,6)"/><text x="1061.00" y="302.50"></text></g><g><title>sse2_sqrt_DOUBLE (simd.inc.src) (3 samples, 0.41%)</title><rect x="1058" y="308" width="5" height="15" fill="rgb(209,2,41)"/><text x="1061.00" y="318.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.41%)</title><rect x="1058" y="324" width="5" height="15" fill="rgb(214,214,30)"/><text x="1061.00" y="334.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.14%)</title><rect x="1063" y="196" width="2" height="15" fill="rgb(239,227,2)"/><text x="1066.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.14%)</title><rect x="1063" y="212" width="2" height="15" fill="rgb(210,129,52)"/><text x="1066.00" y="222.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py) (1 samples, 0.14%)</title><rect x="1065" y="196" width="1" height="15" fill="rgb(220,74,20)"/><text x="1068.00" y="206.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.14%)</title><rect x="1070" y="244" width="1" height="15" fill="rgb(228,128,54)"/><text x="1073.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.14%)</title><rect x="1070" y="260" width="1" height="15" fill="rgb(210,11,41)"/><text x="1073.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.14%)</title><rect x="1070" y="276" width="1" height="15" fill="rgb(225,170,39)"/><text x="1073.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.14%)</title><rect x="1070" y="292" width="1" height="15" fill="rgb(207,137,5)"/><text x="1073.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.14%)</title><rect x="1070" y="308" width="1" height="15" fill="rgb(232,104,44)"/><text x="1073.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.14%)</title><rect x="1070" y="324" width="1" height="15" fill="rgb(234,140,9)"/><text x="1073.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src) (1 samples, 0.14%)</title><rect x="1070" y="340" width="1" height="15" fill="rgb(214,81,37)"/><text x="1073.00" y="350.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (1 samples, 0.14%)</title><rect x="1070" y="356" width="1" height="15" fill="rgb(215,28,30)"/><text x="1073.00" y="366.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.14%)</title><rect x="1074" y="276" width="2" height="15" fill="rgb(222,151,17)"/><text x="1077.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.14%)</title><rect x="1076" y="276" width="2" height="15" fill="rgb(206,175,43)"/><text x="1079.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.14%)</title><rect x="1076" y="292" width="2" height="15" fill="rgb(208,142,51)"/><text x="1079.00" y="302.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.55%)</title><rect x="1078" y="276" width="6" height="15" fill="rgb(228,148,25)"/><text x="1081.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (4 samples, 0.55%)</title><rect x="1078" y="292" width="6" height="15" fill="rgb(223,70,15)"/><text x="1081.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (4 samples, 0.55%)</title><rect x="1078" y="308" width="6" height="15" fill="rgb(235,23,43)"/><text x="1081.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.55%)</title><rect x="1078" y="324" width="6" height="15" fill="rgb(237,181,31)"/><text x="1081.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (4 samples, 0.55%)</title><rect x="1078" y="340" width="6" height="15" fill="rgb(227,163,19)"/><text x="1081.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (4 samples, 0.55%)</title><rect x="1078" y="356" width="6" height="15" fill="rgb(219,212,50)"/><text x="1081.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (4 samples, 0.55%)</title><rect x="1078" y="372" width="6" height="15" fill="rgb(238,33,29)"/><text x="1081.00" y="382.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (4 samples, 0.55%)</title><rect x="1078" y="388" width="6" height="15" fill="rgb(247,108,3)"/><text x="1081.00" y="398.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (9 samples, 1.24%)</title><rect x="1071" y="244" width="15" height="15" fill="rgb(236,38,50)"/><text x="1074.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (8 samples, 1.10%)</title><rect x="1073" y="260" width="13" height="15" fill="rgb(219,70,41)"/><text x="1076.00" y="270.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.14%)</title><rect x="1084" y="276" width="2" height="15" fill="rgb(231,126,54)"/><text x="1087.00" y="286.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.14%)</title><rect x="1084" y="292" width="2" height="15" fill="rgb(237,176,36)"/><text x="1087.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1087" y="340" width="4" height="15" fill="rgb(226,184,45)"/><text x="1090.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1087" y="356" width="4" height="15" fill="rgb(229,119,11)"/><text x="1090.00" y="366.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1089" y="372" width="2" height="15" fill="rgb(224,153,16)"/><text x="1092.00" y="382.50"></text></g><g><title>parse_output_subscripts (einsum.c.src) (1 samples, 0.14%)</title><rect x="1091" y="340" width="1" height="15" fill="rgb(214,215,45)"/><text x="1094.00" y="350.50"></text></g><g><title>0x7f98929dee6d (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1091" y="356" width="1" height="15" fill="rgb(232,77,1)"/><text x="1094.00" y="366.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (5 samples, 0.69%)</title><rect x="1087" y="324" width="8" height="15" fill="rgb(225,9,46)"/><text x="1090.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src) (2 samples, 0.27%)</title><rect x="1092" y="340" width="3" height="15" fill="rgb(250,11,44)"/><text x="1095.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src) (1 samples, 0.14%)</title><rect x="1094" y="356" width="1" height="15" fill="rgb(242,201,44)"/><text x="1097.00" y="366.50"></text></g><g><title>_mm_prefetch (xmmintrin.h) (1 samples, 0.14%)</title><rect x="1094" y="372" width="1" height="15" fill="rgb(235,58,37)"/><text x="1097.00" y="382.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (7 samples, 0.96%)</title><rect x="1086" y="244" width="11" height="15" fill="rgb(223,161,33)"/><text x="1089.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (7 samples, 0.96%)</title><rect x="1086" y="260" width="11" height="15" fill="rgb(212,93,12)"/><text x="1089.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.82%)</title><rect x="1087" y="276" width="10" height="15" fill="rgb(219,82,36)"/><text x="1090.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (6 samples, 0.82%)</title><rect x="1087" y="292" width="10" height="15" fill="rgb(220,157,45)"/><text x="1090.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (6 samples, 0.82%)</title><rect x="1087" y="308" width="10" height="15" fill="rgb(236,64,33)"/><text x="1090.00" y="318.50"></text></g><g><title>einsum_sub_op_from_str (multiarraymodule.c) (1 samples, 0.14%)</title><rect x="1095" y="324" width="2" height="15" fill="rgb(237,107,5)"/><text x="1098.00" y="334.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.14%)</title><rect x="1095" y="340" width="2" height="15" fill="rgb(244,3,40)"/><text x="1098.00" y="350.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.14%)</title><rect x="1097" y="260" width="2" height="15" fill="rgb(246,204,0)"/><text x="1100.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.51%)</title><rect x="1099" y="260" width="18" height="15" fill="rgb(220,165,46)"/><text x="1102.00" y="270.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.55%)</title><rect x="1117" y="388" width="6" height="15" fill="rgb(224,15,46)"/><text x="1120.00" y="398.50"></text></g><g><title>sched_yield (libc-2.29.so) (4 samples, 0.55%)</title><rect x="1117" y="404" width="6" height="15" fill="rgb(215,218,54)"/><text x="1120.00" y="414.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (18 samples, 2.47%)</title><rect x="1097" y="244" width="29" height="15" fill="rgb(232,58,44)"/><text x="1100.00" y="254.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (6 samples, 0.82%)</title><rect x="1117" y="260" width="9" height="15" fill="rgb(249,118,36)"/><text x="1120.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 0.82%)</title><rect x="1117" y="276" width="9" height="15" fill="rgb(243,121,35)"/><text x="1120.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (6 samples, 0.82%)</title><rect x="1117" y="292" width="9" height="15" fill="rgb(232,114,49)"/><text x="1120.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (6 samples, 0.82%)</title><rect x="1117" y="308" width="9" height="15" fill="rgb(226,109,8)"/><text x="1120.00" y="318.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.82%)</title><rect x="1117" y="324" width="9" height="15" fill="rgb(243,132,43)"/><text x="1120.00" y="334.50"></text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.82%)</title><rect x="1117" y="340" width="9" height="15" fill="rgb(224,17,34)"/><text x="1120.00" y="350.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.82%)</title><rect x="1117" y="356" width="9" height="15" fill="rgb(252,74,18)"/><text x="1120.00" y="366.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.82%)</title><rect x="1117" y="372" width="9" height="15" fill="rgb(230,111,39)"/><text x="1120.00" y="382.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.27%)</title><rect x="1123" y="388" width="3" height="15" fill="rgb(222,136,52)"/><text x="1126.00" y="398.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.27%)</title><rect x="1123" y="404" width="3" height="15" fill="rgb(239,8,11)"/><text x="1126.00" y="414.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.14%)</title><rect x="1126" y="260" width="2" height="15" fill="rgb(209,160,6)"/><text x="1129.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.14%)</title><rect x="1126" y="276" width="2" height="15" fill="rgb(227,118,35)"/><text x="1129.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.14%)</title><rect x="1126" y="292" width="2" height="15" fill="rgb(246,98,43)"/><text x="1129.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (5 samples, 0.69%)</title><rect x="1128" y="356" width="8" height="15" fill="rgb(215,110,8)"/><text x="1131.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (16 samples, 2.20%)</title><rect x="1128" y="308" width="26" height="15" fill="rgb(209,213,43)"/><text x="1131.00" y="318.50">D..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (16 samples, 2.20%)</title><rect x="1128" y="324" width="26" height="15" fill="rgb(214,193,13)"/><text x="1131.00" y="334.50">r..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (16 samples, 2.20%)</title><rect x="1128" y="340" width="26" height="15" fill="rgb(220,121,49)"/><text x="1131.00" y="350.50">s..</text></g><g><title>_mm_store_pd (emmintrin.h) (11 samples, 1.51%)</title><rect x="1136" y="356" width="18" height="15" fill="rgb(215,185,9)"/><text x="1139.00" y="366.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.14%)</title><rect x="1154" y="324" width="1" height="15" fill="rgb(219,94,27)"/><text x="1157.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1154" y="340" width="1" height="15" fill="rgb(219,164,48)"/><text x="1157.00" y="350.50"></text></g><g><title>0x7f98929ca414 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1154" y="356" width="1" height="15" fill="rgb(207,193,26)"/><text x="1157.00" y="366.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.27%)</title><rect x="1154" y="308" width="3" height="15" fill="rgb(224,112,8)"/><text x="1157.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.14%)</title><rect x="1155" y="324" width="2" height="15" fill="rgb(249,154,2)"/><text x="1158.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.14%)</title><rect x="1155" y="340" width="2" height="15" fill="rgb(223,181,2)"/><text x="1158.00" y="350.50"></text></g><g><title>0x7f98929e8f72 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1155" y="356" width="2" height="15" fill="rgb(236,27,29)"/><text x="1158.00" y="366.50"></text></g><g><title>0x7f98929e8f42 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1159" y="356" width="1" height="15" fill="rgb(248,189,1)"/><text x="1162.00" y="366.50"></text></g><g><title>0x7f98929e8f53 (libc-2.29.so) (1 samples, 0.14%)</title><rect x="1160" y="356" width="2" height="15" fill="rgb(213,46,47)"/><text x="1163.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (10 samples, 1.37%)</title><rect x="1157" y="324" width="16" height="15" fill="rgb(241,167,8)"/><text x="1160.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (9 samples, 1.24%)</title><rect x="1159" y="340" width="14" height="15" fill="rgb(209,79,26)"/><text x="1162.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (7 samples, 0.96%)</title><rect x="1162" y="356" width="11" height="15" fill="rgb(242,136,54)"/><text x="1165.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (29 samples, 3.98%)</title><rect x="1128" y="292" width="47" height="15" fill="rgb(215,207,36)"/><text x="1131.00" y="302.50">iter..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (11 samples, 1.51%)</title><rect x="1157" y="308" width="18" height="15" fill="rgb(241,20,15)"/><text x="1160.00" y="318.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.14%)</title><rect x="1173" y="324" width="2" height="15" fill="rgb(221,25,13)"/><text x="1176.00" y="334.50"></text></g><g><title>all (728 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,4,27)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (728 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(230,37,27)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py)</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (151 samples, 20.74%)</title><rect x="945" y="68" width="245" height="15" fill="rgb(235,25,24)"/><text x="948.00" y="78.50">profile_skl (bench_KNeighborsReg..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (151 samples, 20.74%)</title><rect x="945" y="84" width="245" height="15" fill="rgb(222,38,44)"/><text x="948.00" y="94.50">setup_profile (bench_KNeighborsR..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (151 samples, 20.74%)</title><rect x="945" y="100" width="245" height="15" fill="rgb(234,147,40)"/><text x="948.00" y="110.50">profile (bench_KNeighborsRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 20.74%)</title><rect x="945" y="116" width="245" height="15" fill="rgb(236,182,34)"/><text x="948.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 20.74%)</title><rect x="945" y="132" width="245" height="15" fill="rgb(233,169,43)"/><text x="948.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict (sklearn/neighbors/_regression.py) (151 samples, 20.74%)</title><rect x="945" y="148" width="245" height="15" fill="rgb(215,132,13)"/><text x="948.00" y="158.50">predict (sklearn/neighbors/_regr..</text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (145 samples, 19.92%)</title><rect x="954" y="164" width="236" height="15" fill="rgb(231,85,3)"/><text x="957.00" y="174.50">kneighbors (sklearn/neighbors/_..</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (141 samples, 19.37%)</title><rect x="961" y="180" width="229" height="15" fill="rgb(205,124,20)"/><text x="964.00" y="190.50">pairwise_distances_chunked (sk..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (76 samples, 10.44%)</title><rect x="1066" y="196" width="124" height="15" fill="rgb(250,52,24)"/><text x="1069.00" y="206.50">pairwise_distan..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (75 samples, 10.30%)</title><rect x="1068" y="212" width="122" height="15" fill="rgb(229,87,25)"/><text x="1071.00" y="222.50">_parallel_pairw..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (75 samples, 10.30%)</title><rect x="1068" y="228" width="122" height="15" fill="rgb(249,196,38)"/><text x="1071.00" y="238.50">euclidean_dista..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (39 samples, 5.36%)</title><rect x="1126" y="244" width="64" height="15" fill="rgb(245,96,12)"/><text x="1129.00" y="254.50">ufunc_g..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (38 samples, 5.22%)</title><rect x="1128" y="260" width="62" height="15" fill="rgb(240,115,8)"/><text x="1131.00" y="270.50">PyUFun..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (38 samples, 5.22%)</title><rect x="1128" y="276" width="62" height="15" fill="rgb(209,23,16)"/><text x="1131.00" y="286.50">execut..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (9 samples, 1.24%)</title><rect x="1175" y="292" width="15" height="15" fill="rgb(240,117,26)"/><text x="1178.00" y="302.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (9 samples, 1.24%)</title><rect x="1175" y="308" width="15" height="15" fill="rgb(243,96,1)"/><text x="1178.00" y="318.50"></text></g></g></svg>