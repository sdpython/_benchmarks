<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>add (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(239,74,11)"/><text x="13.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(224,47,30)"/><text x="13.00" y="942.50"></text></g><g><title>0x7f2fcf9a2124 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(252,11,12)"/><text x="13.00" y="958.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="868" width="7" height="15" fill="rgb(243,136,35)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="884" width="7" height="15" fill="rgb(240,227,39)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.67%)</title><rect x="10" y="900" width="7" height="15" fill="rgb(212,93,35)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="13" y="916" width="4" height="15" fill="rgb(228,66,49)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="13" y="932" width="4" height="15" fill="rgb(206,203,35)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="13" y="948" width="4" height="15" fill="rgb(211,196,19)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="13" y="964" width="4" height="15" fill="rgb(244,5,31)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="13" y="980" width="4" height="15" fill="rgb(225,210,5)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="13" y="996" width="4" height="15" fill="rgb(250,86,31)"/><text x="16.00" y="1006.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.34%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(249,8,40)"/><text x="16.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="196" width="11" height="15" fill="rgb(253,206,15)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="212" width="11" height="15" fill="rgb(219,173,28)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="228" width="11" height="15" fill="rgb(242,196,5)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="244" width="11" height="15" fill="rgb(229,14,29)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="260" width="11" height="15" fill="rgb(219,183,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="276" width="11" height="15" fill="rgb(212,151,46)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="292" width="11" height="15" fill="rgb(213,173,13)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="308" width="11" height="15" fill="rgb(243,17,48)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="324" width="11" height="15" fill="rgb(214,140,23)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="340" width="11" height="15" fill="rgb(230,160,51)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="356" width="11" height="15" fill="rgb(252,61,52)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="372" width="11" height="15" fill="rgb(252,223,3)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.01%)</title><rect x="10" y="388" width="11" height="15" fill="rgb(230,130,15)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="404" width="11" height="15" fill="rgb(217,28,44)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="420" width="11" height="15" fill="rgb(245,12,40)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="436" width="11" height="15" fill="rgb(225,214,44)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="452" width="11" height="15" fill="rgb(216,170,36)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="468" width="11" height="15" fill="rgb(212,109,7)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.01%)</title><rect x="10" y="484" width="11" height="15" fill="rgb(229,21,10)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="500" width="11" height="15" fill="rgb(246,7,0)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="516" width="11" height="15" fill="rgb(227,0,34)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="532" width="11" height="15" fill="rgb(216,78,24)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="548" width="11" height="15" fill="rgb(215,69,25)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="564" width="11" height="15" fill="rgb(242,96,47)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.01%)</title><rect x="10" y="580" width="11" height="15" fill="rgb(209,86,10)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="596" width="11" height="15" fill="rgb(223,113,42)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="612" width="11" height="15" fill="rgb(233,53,48)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="628" width="11" height="15" fill="rgb(242,79,15)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="644" width="11" height="15" fill="rgb(248,192,21)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="660" width="11" height="15" fill="rgb(212,151,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="676" width="11" height="15" fill="rgb(225,108,50)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="692" width="11" height="15" fill="rgb(211,187,29)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="708" width="11" height="15" fill="rgb(239,156,20)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="724" width="11" height="15" fill="rgb(212,169,48)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="740" width="11" height="15" fill="rgb(224,44,45)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="756" width="11" height="15" fill="rgb(221,87,7)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="772" width="11" height="15" fill="rgb(232,153,41)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.01%)</title><rect x="10" y="788" width="11" height="15" fill="rgb(247,75,0)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="10" y="804" width="11" height="15" fill="rgb(248,19,12)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="820" width="11" height="15" fill="rgb(219,18,1)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="836" width="11" height="15" fill="rgb(206,220,44)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 1.01%)</title><rect x="10" y="852" width="11" height="15" fill="rgb(231,109,43)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(250,126,3)"/><text x="20.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(248,214,6)"/><text x="20.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(207,139,32)"/><text x="20.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(215,31,3)"/><text x="20.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.34%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(238,191,25)"/><text x="20.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(231,150,50)"/><text x="20.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(251,50,36)"/><text x="20.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(216,73,23)"/><text x="20.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.34%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(231,151,53)"/><text x="20.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.34%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(206,218,3)"/><text x="20.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="17" y="1028" width="4" height="15" fill="rgb(208,46,36)"/><text x="20.00" y="1038.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="17" y="1044" width="4" height="15" fill="rgb(247,131,24)"/><text x="20.00" y="1054.50"></text></g><g><title>0x7f2fcf983700 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="17" y="1060" width="4" height="15" fill="rgb(216,14,7)"/><text x="20.00" y="1070.50"></text></g><g><title>0x7f2fcf980aed (libc-2.29.so) (1 samples, 0.34%)</title><rect x="17" y="1076" width="4" height="15" fill="rgb(242,53,20)"/><text x="20.00" y="1086.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.34%)</title><rect x="25" y="1636" width="4" height="15" fill="rgb(243,196,11)"/><text x="28.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="25" y="1652" width="4" height="15" fill="rgb(243,97,2)"/><text x="28.00" y="1662.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.67%)</title><rect x="25" y="1588" width="8" height="15" fill="rgb(250,160,21)"/><text x="28.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (2 samples, 0.67%)</title><rect x="25" y="1604" width="8" height="15" fill="rgb(222,173,47)"/><text x="28.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (2 samples, 0.67%)</title><rect x="25" y="1620" width="8" height="15" fill="rgb(221,165,3)"/><text x="28.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.34%)</title><rect x="29" y="1636" width="4" height="15" fill="rgb(225,156,23)"/><text x="32.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.34%)</title><rect x="29" y="1652" width="4" height="15" fill="rgb(219,85,13)"/><text x="32.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.34%)</title><rect x="29" y="1668" width="4" height="15" fill="rgb(240,81,18)"/><text x="32.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="484" width="16" height="15" fill="rgb(226,75,38)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="500" width="16" height="15" fill="rgb(233,9,39)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="516" width="16" height="15" fill="rgb(221,111,7)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="532" width="16" height="15" fill="rgb(242,112,47)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="548" width="16" height="15" fill="rgb(206,132,25)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="564" width="16" height="15" fill="rgb(242,178,33)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.34%)</title><rect x="21" y="580" width="16" height="15" fill="rgb(240,34,24)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="596" width="16" height="15" fill="rgb(212,15,20)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="612" width="16" height="15" fill="rgb(238,48,16)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="628" width="16" height="15" fill="rgb(242,200,39)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="644" width="16" height="15" fill="rgb(254,174,25)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="660" width="16" height="15" fill="rgb(212,50,52)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.34%)</title><rect x="21" y="676" width="16" height="15" fill="rgb(247,192,1)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="692" width="16" height="15" fill="rgb(213,102,24)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="708" width="16" height="15" fill="rgb(239,82,46)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="724" width="16" height="15" fill="rgb(208,131,4)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="740" width="16" height="15" fill="rgb(217,220,19)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="756" width="16" height="15" fill="rgb(250,136,4)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.34%)</title><rect x="21" y="772" width="16" height="15" fill="rgb(225,147,32)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="788" width="16" height="15" fill="rgb(206,184,3)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="804" width="16" height="15" fill="rgb(249,29,46)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="820" width="16" height="15" fill="rgb(211,35,32)"/><text x="24.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="836" width="16" height="15" fill="rgb(238,210,12)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="852" width="16" height="15" fill="rgb(243,83,39)"/><text x="24.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.34%)</title><rect x="21" y="868" width="16" height="15" fill="rgb(228,117,16)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="884" width="16" height="15" fill="rgb(217,123,1)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="900" width="16" height="15" fill="rgb(249,72,15)"/><text x="24.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="916" width="16" height="15" fill="rgb(220,58,13)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="932" width="16" height="15" fill="rgb(205,101,20)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="948" width="16" height="15" fill="rgb(247,145,10)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="964" width="16" height="15" fill="rgb(237,8,27)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="980" width="16" height="15" fill="rgb(218,151,34)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="996" width="16" height="15" fill="rgb(239,171,53)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.34%)</title><rect x="21" y="1012" width="16" height="15" fill="rgb(228,210,6)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1028" width="16" height="15" fill="rgb(225,21,27)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1044" width="16" height="15" fill="rgb(220,19,2)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1060" width="16" height="15" fill="rgb(224,130,42)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="1076" width="16" height="15" fill="rgb(245,180,6)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1092" width="16" height="15" fill="rgb(232,55,19)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.34%)</title><rect x="21" y="1108" width="16" height="15" fill="rgb(220,174,6)"/><text x="24.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1124" width="16" height="15" fill="rgb(250,38,0)"/><text x="24.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1140" width="16" height="15" fill="rgb(219,79,22)"/><text x="24.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1156" width="16" height="15" fill="rgb(206,224,1)"/><text x="24.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1172" width="16" height="15" fill="rgb(254,90,35)"/><text x="24.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1188" width="16" height="15" fill="rgb(244,89,3)"/><text x="24.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="1204" width="16" height="15" fill="rgb(206,157,4)"/><text x="24.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1220" width="16" height="15" fill="rgb(205,70,47)"/><text x="24.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 1.34%)</title><rect x="21" y="1236" width="16" height="15" fill="rgb(248,125,4)"/><text x="24.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1252" width="16" height="15" fill="rgb(251,40,19)"/><text x="24.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1268" width="16" height="15" fill="rgb(228,3,34)"/><text x="24.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1284" width="16" height="15" fill="rgb(242,98,38)"/><text x="24.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1300" width="16" height="15" fill="rgb(225,155,21)"/><text x="24.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1316" width="16" height="15" fill="rgb(253,227,23)"/><text x="24.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="1332" width="16" height="15" fill="rgb(225,125,15)"/><text x="24.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1348" width="16" height="15" fill="rgb(221,197,44)"/><text x="24.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 1.34%)</title><rect x="21" y="1364" width="16" height="15" fill="rgb(225,87,54)"/><text x="24.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1380" width="16" height="15" fill="rgb(207,26,6)"/><text x="24.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1396" width="16" height="15" fill="rgb(250,143,13)"/><text x="24.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1412" width="16" height="15" fill="rgb(216,61,12)"/><text x="24.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="21" y="1428" width="16" height="15" fill="rgb(225,132,46)"/><text x="24.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="21" y="1444" width="16" height="15" fill="rgb(224,166,2)"/><text x="24.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.34%)</title><rect x="21" y="1460" width="16" height="15" fill="rgb(222,113,25)"/><text x="24.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.34%)</title><rect x="21" y="1476" width="16" height="15" fill="rgb(247,24,42)"/><text x="24.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (4 samples, 1.34%)</title><rect x="21" y="1492" width="16" height="15" fill="rgb(242,67,54)"/><text x="24.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (4 samples, 1.34%)</title><rect x="21" y="1508" width="16" height="15" fill="rgb(224,117,39)"/><text x="24.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (4 samples, 1.34%)</title><rect x="21" y="1524" width="16" height="15" fill="rgb(235,154,35)"/><text x="24.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 1.01%)</title><rect x="25" y="1540" width="12" height="15" fill="rgb(239,148,40)"/><text x="28.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 1.01%)</title><rect x="25" y="1556" width="12" height="15" fill="rgb(208,149,14)"/><text x="28.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 1.01%)</title><rect x="25" y="1572" width="12" height="15" fill="rgb(227,53,43)"/><text x="28.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.34%)</title><rect x="33" y="1588" width="4" height="15" fill="rgb(231,34,36)"/><text x="36.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="33" y="1604" width="4" height="15" fill="rgb(225,62,20)"/><text x="36.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::FormalParameter const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema::FormalParameter, , &gt;( const&amp;)::{lambda(onnx::OpSchema::FormalParameter const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema::FormalParameter const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="33" y="1620" width="4" height="15" fill="rgb(227,91,47)"/><text x="36.00" y="1630.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="33" y="1636" width="4" height="15" fill="rgb(244,218,19)"/><text x="36.00" y="1646.50"></text></g><g><title>pybind11::detail::get_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="33" y="1652" width="4" height="15" fill="rgb(243,196,16)"/><text x="36.00" y="1662.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="33" y="1668" width="4" height="15" fill="rgb(214,60,35)"/><text x="36.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.68%)</title><rect x="21" y="436" width="20" height="15" fill="rgb(208,83,42)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="21" y="452" width="20" height="15" fill="rgb(218,48,18)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.68%)</title><rect x="21" y="468" width="20" height="15" fill="rgb(245,32,50)"/><text x="24.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="484" width="4" height="15" fill="rgb(247,141,24)"/><text x="40.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="500" width="4" height="15" fill="rgb(243,192,12)"/><text x="40.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="516" width="4" height="15" fill="rgb(236,19,23)"/><text x="40.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.34%)</title><rect x="37" y="532" width="4" height="15" fill="rgb(225,167,53)"/><text x="40.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="548" width="4" height="15" fill="rgb(215,142,23)"/><text x="40.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="564" width="4" height="15" fill="rgb(240,214,24)"/><text x="40.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="580" width="4" height="15" fill="rgb(236,152,48)"/><text x="40.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="596" width="4" height="15" fill="rgb(252,54,8)"/><text x="40.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="612" width="4" height="15" fill="rgb(249,42,53)"/><text x="40.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="628" width="4" height="15" fill="rgb(243,32,3)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="644" width="4" height="15" fill="rgb(230,16,52)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="660" width="4" height="15" fill="rgb(221,160,35)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="676" width="4" height="15" fill="rgb(238,43,10)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="692" width="4" height="15" fill="rgb(218,1,24)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="708" width="4" height="15" fill="rgb(218,122,45)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.34%)</title><rect x="37" y="724" width="4" height="15" fill="rgb(214,21,21)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="740" width="4" height="15" fill="rgb(219,112,36)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="756" width="4" height="15" fill="rgb(231,51,40)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="772" width="4" height="15" fill="rgb(239,27,41)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="788" width="4" height="15" fill="rgb(206,191,5)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="804" width="4" height="15" fill="rgb(226,172,28)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/packers.py) (1 samples, 0.34%)</title><rect x="37" y="820" width="4" height="15" fill="rgb(229,57,12)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="836" width="4" height="15" fill="rgb(218,178,53)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="852" width="4" height="15" fill="rgb(228,213,35)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="868" width="4" height="15" fill="rgb(211,164,25)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="884" width="4" height="15" fill="rgb(236,117,22)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="900" width="4" height="15" fill="rgb(220,60,43)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/msgpack/__init__.py) (1 samples, 0.34%)</title><rect x="37" y="916" width="4" height="15" fill="rgb(236,128,53)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="932" width="4" height="15" fill="rgb(209,168,37)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="948" width="4" height="15" fill="rgb(219,28,6)"/><text x="40.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="964" width="4" height="15" fill="rgb(234,115,26)"/><text x="40.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="37" y="980" width="4" height="15" fill="rgb(206,221,19)"/><text x="40.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="37" y="996" width="4" height="15" fill="rgb(208,147,11)"/><text x="40.00" y="1006.50"></text></g><g><title>0x7f2f9e971891 (?) (1 samples, 0.34%)</title><rect x="37" y="1012" width="4" height="15" fill="rgb(226,196,10)"/><text x="40.00" y="1022.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 2.01%)</title><rect x="21" y="340" width="24" height="15" fill="rgb(238,11,14)"/><text x="24.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="21" y="356" width="24" height="15" fill="rgb(214,180,28)"/><text x="24.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="21" y="372" width="24" height="15" fill="rgb(248,157,33)"/><text x="24.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="21" y="388" width="24" height="15" fill="rgb(240,115,19)"/><text x="24.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.01%)</title><rect x="21" y="404" width="24" height="15" fill="rgb(227,30,21)"/><text x="24.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.01%)</title><rect x="21" y="420" width="24" height="15" fill="rgb(245,165,54)"/><text x="24.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.34%)</title><rect x="41" y="436" width="4" height="15" fill="rgb(252,218,38)"/><text x="44.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="452" width="4" height="15" fill="rgb(216,159,9)"/><text x="44.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="468" width="4" height="15" fill="rgb(217,220,27)"/><text x="44.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="484" width="4" height="15" fill="rgb(253,67,34)"/><text x="44.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="500" width="4" height="15" fill="rgb(234,96,28)"/><text x="44.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="516" width="4" height="15" fill="rgb(231,137,23)"/><text x="44.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.34%)</title><rect x="41" y="532" width="4" height="15" fill="rgb(223,194,46)"/><text x="44.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="548" width="4" height="15" fill="rgb(253,65,42)"/><text x="44.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="564" width="4" height="15" fill="rgb(231,103,3)"/><text x="44.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="580" width="4" height="15" fill="rgb(208,107,27)"/><text x="44.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="596" width="4" height="15" fill="rgb(227,48,6)"/><text x="44.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="612" width="4" height="15" fill="rgb(211,47,34)"/><text x="44.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="628" width="4" height="15" fill="rgb(231,167,37)"/><text x="44.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="644" width="4" height="15" fill="rgb(244,103,6)"/><text x="44.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="660" width="4" height="15" fill="rgb(232,106,48)"/><text x="44.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.34%)</title><rect x="41" y="676" width="4" height="15" fill="rgb(254,8,29)"/><text x="44.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="692" width="4" height="15" fill="rgb(218,83,34)"/><text x="44.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="708" width="4" height="15" fill="rgb(250,202,11)"/><text x="44.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="41" y="724" width="4" height="15" fill="rgb(240,49,37)"/><text x="44.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="740" width="4" height="15" fill="rgb(206,78,3)"/><text x="44.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="756" width="4" height="15" fill="rgb(217,130,53)"/><text x="44.00" y="766.50"></text></g><g><title>_classify_pyc (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="41" y="772" width="4" height="15" fill="rgb(217,38,31)"/><text x="44.00" y="782.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.34%)</title><rect x="45" y="900" width="4" height="15" fill="rgb(239,221,10)"/><text x="48.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="916" width="4" height="15" fill="rgb(227,70,15)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="932" width="4" height="15" fill="rgb(234,163,13)"/><text x="48.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="948" width="4" height="15" fill="rgb(219,18,1)"/><text x="48.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="964" width="4" height="15" fill="rgb(236,201,17)"/><text x="48.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="980" width="4" height="15" fill="rgb(236,168,13)"/><text x="48.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.34%)</title><rect x="45" y="996" width="4" height="15" fill="rgb(240,72,18)"/><text x="48.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1012" width="4" height="15" fill="rgb(208,220,49)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1028" width="4" height="15" fill="rgb(208,26,39)"/><text x="48.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1044" width="4" height="15" fill="rgb(216,163,42)"/><text x="48.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1060" width="4" height="15" fill="rgb(229,104,15)"/><text x="48.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1076" width="4" height="15" fill="rgb(230,186,23)"/><text x="48.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.34%)</title><rect x="45" y="1092" width="4" height="15" fill="rgb(252,23,9)"/><text x="48.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1108" width="4" height="15" fill="rgb(218,149,13)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1124" width="4" height="15" fill="rgb(238,225,31)"/><text x="48.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1140" width="4" height="15" fill="rgb(206,26,44)"/><text x="48.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1156" width="4" height="15" fill="rgb(254,217,48)"/><text x="48.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1172" width="4" height="15" fill="rgb(241,148,42)"/><text x="48.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py) (1 samples, 0.34%)</title><rect x="45" y="1188" width="4" height="15" fill="rgb(228,137,42)"/><text x="48.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1204" width="4" height="15" fill="rgb(243,96,35)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1220" width="4" height="15" fill="rgb(210,178,2)"/><text x="48.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1236" width="4" height="15" fill="rgb(233,87,25)"/><text x="48.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="45" y="1252" width="4" height="15" fill="rgb(232,10,4)"/><text x="48.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="45" y="1268" width="4" height="15" fill="rgb(236,41,27)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="948" width="4" height="15" fill="rgb(235,75,46)"/><text x="52.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="964" width="4" height="15" fill="rgb(211,106,44)"/><text x="52.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="980" width="4" height="15" fill="rgb(222,106,48)"/><text x="52.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="996" width="4" height="15" fill="rgb(212,16,48)"/><text x="52.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="1012" width="4" height="15" fill="rgb(216,169,40)"/><text x="52.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1028" width="4" height="15" fill="rgb(224,192,9)"/><text x="52.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="1044" width="4" height="15" fill="rgb(223,161,10)"/><text x="52.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1060" width="4" height="15" fill="rgb(245,10,29)"/><text x="52.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1076" width="4" height="15" fill="rgb(248,42,19)"/><text x="52.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1092" width="4" height="15" fill="rgb(248,108,5)"/><text x="52.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1108" width="4" height="15" fill="rgb(225,166,19)"/><text x="52.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(251,87,53)"/><text x="52.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(247,224,12)"/><text x="52.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(232,193,30)"/><text x="52.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.34%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(250,132,10)"/><text x="52.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1188" width="4" height="15" fill="rgb(232,99,25)"/><text x="52.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(228,124,29)"/><text x="52.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(207,52,32)"/><text x="52.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(225,101,9)"/><text x="52.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(205,208,50)"/><text x="52.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.34%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(228,125,11)"/><text x="52.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(208,11,28)"/><text x="52.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(229,11,47)"/><text x="52.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(223,29,19)"/><text x="52.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(212,142,7)"/><text x="52.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(243,207,34)"/><text x="52.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.34%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(219,179,44)"/><text x="52.00" y="1374.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.34%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(233,155,43)"/><text x="52.00" y="1390.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(246,68,3)"/><text x="56.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 3.36%)</title><rect x="21" y="244" width="40" height="15" fill="rgb(208,200,41)"/><text x="24.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.36%)</title><rect x="21" y="260" width="40" height="15" fill="rgb(216,67,7)"/><text x="24.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.36%)</title><rect x="21" y="276" width="40" height="15" fill="rgb(226,150,51)"/><text x="24.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.36%)</title><rect x="21" y="292" width="40" height="15" fill="rgb(217,94,49)"/><text x="24.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.36%)</title><rect x="21" y="308" width="40" height="15" fill="rgb(241,106,5)"/><text x="24.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.36%)</title><rect x="21" y="324" width="40" height="15" fill="rgb(205,34,33)"/><text x="24.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.34%)</title><rect x="45" y="340" width="16" height="15" fill="rgb(224,4,34)"/><text x="48.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="356" width="16" height="15" fill="rgb(220,228,34)"/><text x="48.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="372" width="16" height="15" fill="rgb(249,91,51)"/><text x="48.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="388" width="16" height="15" fill="rgb(218,195,34)"/><text x="48.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="404" width="16" height="15" fill="rgb(239,43,43)"/><text x="48.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="420" width="16" height="15" fill="rgb(240,151,23)"/><text x="48.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="436" width="16" height="15" fill="rgb(213,183,33)"/><text x="48.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="45" y="452" width="16" height="15" fill="rgb(217,70,30)"/><text x="48.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="468" width="16" height="15" fill="rgb(233,63,27)"/><text x="48.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (4 samples, 1.34%)</title><rect x="45" y="484" width="16" height="15" fill="rgb(216,154,2)"/><text x="48.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="500" width="16" height="15" fill="rgb(241,187,34)"/><text x="48.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="516" width="16" height="15" fill="rgb(229,108,46)"/><text x="48.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="532" width="16" height="15" fill="rgb(215,90,44)"/><text x="48.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="45" y="548" width="16" height="15" fill="rgb(244,219,0)"/><text x="48.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="564" width="16" height="15" fill="rgb(232,207,10)"/><text x="48.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (4 samples, 1.34%)</title><rect x="45" y="580" width="16" height="15" fill="rgb(212,72,20)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="596" width="16" height="15" fill="rgb(254,31,16)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="612" width="16" height="15" fill="rgb(217,21,36)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="628" width="16" height="15" fill="rgb(233,194,38)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="45" y="644" width="16" height="15" fill="rgb(214,105,5)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="660" width="16" height="15" fill="rgb(215,40,33)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (4 samples, 1.34%)</title><rect x="45" y="676" width="16" height="15" fill="rgb(245,5,11)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="692" width="16" height="15" fill="rgb(253,98,36)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="708" width="16" height="15" fill="rgb(243,87,17)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="724" width="16" height="15" fill="rgb(250,218,19)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="45" y="740" width="16" height="15" fill="rgb(212,47,54)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="756" width="16" height="15" fill="rgb(250,15,24)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (4 samples, 1.34%)</title><rect x="45" y="772" width="16" height="15" fill="rgb(218,12,27)"/><text x="48.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="788" width="16" height="15" fill="rgb(212,176,20)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="804" width="16" height="15" fill="rgb(206,83,38)"/><text x="48.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="820" width="16" height="15" fill="rgb(226,186,30)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="836" width="16" height="15" fill="rgb(212,200,16)"/><text x="48.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="852" width="16" height="15" fill="rgb(248,115,5)"/><text x="48.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.34%)</title><rect x="45" y="868" width="16" height="15" fill="rgb(233,90,15)"/><text x="48.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.34%)</title><rect x="45" y="884" width="16" height="15" fill="rgb(223,31,35)"/><text x="48.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (3 samples, 1.01%)</title><rect x="49" y="900" width="12" height="15" fill="rgb(234,154,26)"/><text x="52.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="49" y="916" width="12" height="15" fill="rgb(249,204,5)"/><text x="52.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.01%)</title><rect x="49" y="932" width="12" height="15" fill="rgb(209,82,30)"/><text x="52.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="948" width="8" height="15" fill="rgb(213,203,3)"/><text x="56.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="53" y="964" width="8" height="15" fill="rgb(216,4,15)"/><text x="56.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="980" width="8" height="15" fill="rgb(250,136,5)"/><text x="56.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (2 samples, 0.67%)</title><rect x="53" y="996" width="8" height="15" fill="rgb(231,99,14)"/><text x="56.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1012" width="8" height="15" fill="rgb(241,212,17)"/><text x="56.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1028" width="8" height="15" fill="rgb(244,154,19)"/><text x="56.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1044" width="8" height="15" fill="rgb(254,76,31)"/><text x="56.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.67%)</title><rect x="53" y="1060" width="8" height="15" fill="rgb(214,195,11)"/><text x="56.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1076" width="8" height="15" fill="rgb(212,186,20)"/><text x="56.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (2 samples, 0.67%)</title><rect x="53" y="1092" width="8" height="15" fill="rgb(232,215,48)"/><text x="56.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1108" width="8" height="15" fill="rgb(209,77,24)"/><text x="56.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1124" width="8" height="15" fill="rgb(207,55,46)"/><text x="56.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.67%)</title><rect x="53" y="1140" width="8" height="15" fill="rgb(243,188,38)"/><text x="56.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="57" y="1156" width="4" height="15" fill="rgb(231,168,30)"/><text x="60.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1172" width="4" height="15" fill="rgb(246,191,52)"/><text x="60.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py) (1 samples, 0.34%)</title><rect x="57" y="1188" width="4" height="15" fill="rgb(225,161,28)"/><text x="60.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1204" width="4" height="15" fill="rgb(215,103,31)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1220" width="4" height="15" fill="rgb(212,127,50)"/><text x="60.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(224,128,44)"/><text x="60.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(242,66,51)"/><text x="60.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="57" y="1268" width="4" height="15" fill="rgb(218,159,9)"/><text x="60.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/asymmetric/padding.py) (1 samples, 0.34%)</title><rect x="57" y="1284" width="4" height="15" fill="rgb(225,16,21)"/><text x="60.00" y="1294.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.34%)</title><rect x="57" y="1300" width="4" height="15" fill="rgb(220,165,45)"/><text x="60.00" y="1310.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.34%)</title><rect x="57" y="1316" width="4" height="15" fill="rgb(249,37,35)"/><text x="60.00" y="1326.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.34%)</title><rect x="57" y="1332" width="4" height="15" fill="rgb(240,66,48)"/><text x="60.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.70%)</title><rect x="10" y="68" width="55" height="15" fill="rgb(210,22,48)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.70%)</title><rect x="10" y="84" width="55" height="15" fill="rgb(228,217,27)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.70%)</title><rect x="10" y="100" width="55" height="15" fill="rgb(241,220,1)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.70%)</title><rect x="10" y="116" width="55" height="15" fill="rgb(221,129,41)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.70%)</title><rect x="10" y="132" width="55" height="15" fill="rgb(216,112,34)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/svm/SVR/bench_SVR_linear_b_reg_kernellinear.py) (14 samples, 4.70%)</title><rect x="10" y="148" width="55" height="15" fill="rgb(234,157,24)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.70%)</title><rect x="10" y="164" width="55" height="15" fill="rgb(224,128,54)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.70%)</title><rect x="10" y="180" width="55" height="15" fill="rgb(228,181,23)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.69%)</title><rect x="21" y="196" width="44" height="15" fill="rgb(254,4,27)"/><text x="24.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 3.69%)</title><rect x="21" y="212" width="44" height="15" fill="rgb(205,63,21)"/><text x="24.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 3.69%)</title><rect x="21" y="228" width="44" height="15" fill="rgb(231,19,3)"/><text x="24.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.34%)</title><rect x="61" y="244" width="4" height="15" fill="rgb(245,72,51)"/><text x="64.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="260" width="4" height="15" fill="rgb(221,123,3)"/><text x="64.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="276" width="4" height="15" fill="rgb(206,102,14)"/><text x="64.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="292" width="4" height="15" fill="rgb(236,62,12)"/><text x="64.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="308" width="4" height="15" fill="rgb(229,27,47)"/><text x="64.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="324" width="4" height="15" fill="rgb(253,168,18)"/><text x="64.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="61" y="340" width="4" height="15" fill="rgb(236,227,49)"/><text x="64.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="356" width="4" height="15" fill="rgb(232,135,40)"/><text x="64.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.34%)</title><rect x="61" y="372" width="4" height="15" fill="rgb(248,125,12)"/><text x="64.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="388" width="4" height="15" fill="rgb(222,72,2)"/><text x="64.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="404" width="4" height="15" fill="rgb(246,155,45)"/><text x="64.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="420" width="4" height="15" fill="rgb(225,114,1)"/><text x="64.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="436" width="4" height="15" fill="rgb(237,199,4)"/><text x="64.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="452" width="4" height="15" fill="rgb(207,173,47)"/><text x="64.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="61" y="468" width="4" height="15" fill="rgb(210,164,38)"/><text x="64.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="484" width="4" height="15" fill="rgb(218,103,8)"/><text x="64.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_dtype_ctypes.py) (1 samples, 0.34%)</title><rect x="61" y="500" width="4" height="15" fill="rgb(217,224,23)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="516" width="4" height="15" fill="rgb(207,156,31)"/><text x="64.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="532" width="4" height="15" fill="rgb(242,162,25)"/><text x="64.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="548" width="4" height="15" fill="rgb(252,88,27)"/><text x="64.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.34%)</title><rect x="61" y="564" width="4" height="15" fill="rgb(234,59,40)"/><text x="64.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.34%)</title><rect x="61" y="580" width="4" height="15" fill="rgb(214,206,19)"/><text x="64.00" y="590.50"></text></g><g><title>&lt;module&gt; (ctypes/__init__.py) (1 samples, 0.34%)</title><rect x="61" y="596" width="4" height="15" fill="rgb(228,122,26)"/><text x="64.00" y="606.50"></text></g><g><title>0x7f2fc4458256 (?) (1 samples, 0.34%)</title><rect x="61" y="612" width="4" height="15" fill="rgb(217,109,9)"/><text x="64.00" y="622.50"></text></g><g><title>profile0_skl (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (1 samples, 0.34%)</title><rect x="65" y="68" width="4" height="15" fill="rgb(254,85,4)"/><text x="68.00" y="78.50"></text></g><g><title>setup_profile0 (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (1 samples, 0.34%)</title><rect x="65" y="84" width="4" height="15" fill="rgb(228,210,26)"/><text x="68.00" y="94.50"></text></g><g><title>profile0 (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (1 samples, 0.34%)</title><rect x="65" y="100" width="4" height="15" fill="rgb(238,70,3)"/><text x="68.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="65" y="116" width="4" height="15" fill="rgb(240,15,35)"/><text x="68.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="65" y="132" width="4" height="15" fill="rgb(252,94,13)"/><text x="68.00" y="142.50"></text></g><g><title>predict (sklearn/svm/_base.py) (1 samples, 0.34%)</title><rect x="65" y="148" width="4" height="15" fill="rgb(226,174,5)"/><text x="68.00" y="158.50"></text></g><g><title>_dense_predict (sklearn/svm/_base.py) (1 samples, 0.34%)</title><rect x="65" y="164" width="4" height="15" fill="rgb(245,1,39)"/><text x="68.00" y="174.50"></text></g><g><title>0x7f2faa4761dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="65" y="180" width="4" height="15" fill="rgb(251,65,29)"/><text x="68.00" y="190.50"></text></g><g><title>0x7f2faa4744f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="65" y="196" width="4" height="15" fill="rgb(207,228,22)"/><text x="68.00" y="206.50"></text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="65" y="212" width="4" height="15" fill="rgb(240,141,24)"/><text x="68.00" y="222.50"></text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="65" y="228" width="4" height="15" fill="rgb(249,181,1)"/><text x="68.00" y="238.50"></text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="65" y="244" width="4" height="15" fill="rgb(239,63,53)"/><text x="68.00" y="254.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="65" y="260" width="4" height="15" fill="rgb(213,28,42)"/><text x="68.00" y="270.50"></text></g><g><title>0x7f2f8fa31ff9 (?) (1 samples, 0.34%)</title><rect x="73" y="212" width="4" height="15" fill="rgb(247,198,54)"/><text x="76.00" y="222.50"></text></g><g><title>0x7f2f8fa2cef6 (?) (1 samples, 0.34%)</title><rect x="73" y="228" width="4" height="15" fill="rgb(227,42,53)"/><text x="76.00" y="238.50"></text></g><g><title>0x7f2f8fa21962 (?) (1 samples, 0.34%)</title><rect x="73" y="244" width="4" height="15" fill="rgb(252,200,39)"/><text x="76.00" y="254.50"></text></g><g><title>0x7f2f8fa557a7 (?) (1 samples, 0.34%)</title><rect x="73" y="260" width="4" height="15" fill="rgb(253,169,39)"/><text x="76.00" y="270.50"></text></g><g><title>0x7f2f8fa55379 (?) (1 samples, 0.34%)</title><rect x="73" y="276" width="4" height="15" fill="rgb(233,132,6)"/><text x="76.00" y="286.50"></text></g><g><title>0x7f2f8feb38b8 (?) (1 samples, 0.34%)</title><rect x="73" y="292" width="4" height="15" fill="rgb(250,2,13)"/><text x="76.00" y="302.50"></text></g><g><title>0x7f2f8feb1c7f (?) (1 samples, 0.34%)</title><rect x="73" y="308" width="4" height="15" fill="rgb(250,176,45)"/><text x="76.00" y="318.50"></text></g><g><title>0x7f2f8fec499c (?) (1 samples, 0.34%)</title><rect x="73" y="324" width="4" height="15" fill="rgb(221,138,42)"/><text x="76.00" y="334.50"></text></g><g><title>0x7f2f8fbcf696 (?) (1 samples, 0.34%)</title><rect x="73" y="340" width="4" height="15" fill="rgb(231,45,45)"/><text x="76.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="77" y="292" width="4" height="15" fill="rgb(208,68,22)"/><text x="80.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="77" y="308" width="4" height="15" fill="rgb(222,216,18)"/><text x="80.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="77" y="324" width="4" height="15" fill="rgb(242,3,40)"/><text x="80.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.34%)</title><rect x="77" y="340" width="4" height="15" fill="rgb(242,125,38)"/><text x="80.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.34%)</title><rect x="77" y="356" width="4" height="15" fill="rgb(231,57,46)"/><text x="80.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 36.24%)</title><rect x="77" y="260" width="427" height="15" fill="rgb(244,205,9)"/><text x="80.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 36.24%)</title><rect x="77" y="276" width="427" height="15" fill="rgb(228,62,33)"/><text x="80.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 35.91%)</title><rect x="81" y="292" width="423" height="15" fill="rgb(206,115,24)"/><text x="84.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 35.91%)</title><rect x="81" y="308" width="423" height="15" fill="rgb(241,227,45)"/><text x="84.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 35.91%)</title><rect x="81" y="324" width="423" height="15" fill="rgb(208,6,27)"/><text x="84.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/cap..</text></g><g><title>onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 35.91%)</title><rect x="81" y="340" width="423" height="15" fill="rgb(216,181,39)"/><text x="84.00" y="350.50">onnxruntime::ml::SVMRegressor&lt;float&gt;::Compute (onnxruntim..</text></g><g><title>profile_ort (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (111 samples, 37.25%)</title><rect x="69" y="68" width="439" height="15" fill="rgb(219,157,40)"/><text x="72.00" y="78.50">profile_ort (bench_SVR_linear_b_reg_kernellinear_1000_4_12_f..</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (111 samples, 37.25%)</title><rect x="69" y="84" width="439" height="15" fill="rgb(205,198,19)"/><text x="72.00" y="94.50">setup_profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12..</text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (111 samples, 37.25%)</title><rect x="69" y="100" width="439" height="15" fill="rgb(232,171,15)"/><text x="72.00" y="110.50">profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (111 samples, 37.25%)</title><rect x="69" y="116" width="439" height="15" fill="rgb(217,136,5)"/><text x="72.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (111 samples, 37.25%)</title><rect x="69" y="132" width="439" height="15" fill="rgb(243,70,28)"/><text x="72.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (111 samples, 37.25%)</title><rect x="69" y="148" width="439" height="15" fill="rgb(223,174,2)"/><text x="72.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (111 samples, 37.25%)</title><rect x="69" y="164" width="439" height="15" fill="rgb(226,162,4)"/><text x="72.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (110 samples, 36.91%)</title><rect x="73" y="180" width="435" height="15" fill="rgb(222,117,24)"/><text x="76.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (110 samples, 36.91%)</title><rect x="73" y="196" width="435" height="15" fill="rgb(245,128,52)"/><text x="76.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 36.58%)</title><rect x="77" y="212" width="431" height="15" fill="rgb(226,24,15)"/><text x="80.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxr..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 36.58%)</title><rect x="77" y="228" width="431" height="15" fill="rgb(208,209,50)"/><text x="80.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pytho..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (109 samples, 36.58%)</title><rect x="77" y="244" width="431" height="15" fill="rgb(236,57,41)"/><text x="80.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.34%)</title><rect x="504" y="260" width="4" height="15" fill="rgb(236,2,12)"/><text x="507.00" y="270.50"></text></g><g><title>0x7f2f9090b8f0 (?) (1 samples, 0.34%)</title><rect x="508" y="244" width="4" height="15" fill="rgb(228,162,39)"/><text x="511.00" y="254.50"></text></g><g><title>0x7f2f9090f64e (?) (1 samples, 0.34%)</title><rect x="508" y="260" width="4" height="15" fill="rgb(224,11,12)"/><text x="511.00" y="270.50"></text></g><g><title>0x7f2f9090f506 (?) (1 samples, 0.34%)</title><rect x="508" y="276" width="4" height="15" fill="rgb(251,64,48)"/><text x="511.00" y="286.50"></text></g><g><title>0x7f2f90906b9b (?) (1 samples, 0.34%)</title><rect x="508" y="292" width="4" height="15" fill="rgb(214,101,42)"/><text x="511.00" y="302.50"></text></g><g><title>0x7f2f9996fcff (?) (1 samples, 0.34%)</title><rect x="508" y="308" width="4" height="15" fill="rgb(250,18,6)"/><text x="511.00" y="318.50"></text></g><g><title>0x7f2f908fc0ee (?) (1 samples, 0.34%)</title><rect x="508" y="324" width="4" height="15" fill="rgb(250,152,10)"/><text x="511.00" y="334.50"></text></g><g><title>0x7f2f90911e1c (?) (1 samples, 0.34%)</title><rect x="508" y="340" width="4" height="15" fill="rgb(245,79,13)"/><text x="511.00" y="350.50"></text></g><g><title>0x7f2f9997aea9 (libgomp.so.1.0.0) (1 samples, 0.34%)</title><rect x="512" y="468" width="4" height="15" fill="rgb(224,15,16)"/><text x="515.00" y="478.50"></text></g><g><title>0x7f2f9997aeab (libgomp.so.1.0.0) (2 samples, 0.67%)</title><rect x="516" y="468" width="8" height="15" fill="rgb(217,48,2)"/><text x="519.00" y="478.50"></text></g><g><title>0x7f2f99979ab9 (libgomp.so.1.0.0) (6 samples, 2.01%)</title><rect x="512" y="452" width="24" height="15" fill="rgb(243,75,20)"/><text x="515.00" y="462.50">0..</text></g><g><title>0x7f2f9997aead (libgomp.so.1.0.0) (3 samples, 1.01%)</title><rect x="524" y="468" width="12" height="15" fill="rgb(237,9,43)"/><text x="527.00" y="478.50"></text></g><g><title>0x7f2f908f94e0 (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="580" y="500" width="8" height="15" fill="rgb(223,70,20)"/><text x="583.00" y="510.50"></text></g><g><title>profile_pyrt (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (39 samples, 13.09%)</title><rect x="508" y="68" width="155" height="15" fill="rgb(236,59,54)"/><text x="511.00" y="78.50">profile_pyrt (bench..</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (39 samples, 13.09%)</title><rect x="508" y="84" width="155" height="15" fill="rgb(221,181,45)"/><text x="511.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (39 samples, 13.09%)</title><rect x="508" y="100" width="155" height="15" fill="rgb(205,191,24)"/><text x="511.00" y="110.50">profile (bench_SVR_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 13.09%)</title><rect x="508" y="116" width="155" height="15" fill="rgb(206,194,3)"/><text x="511.00" y="126.50">time_predict (mlpro..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (39 samples, 13.09%)</title><rect x="508" y="132" width="155" height="15" fill="rgb(208,157,42)"/><text x="511.00" y="142.50">&lt;lambda&gt; (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (39 samples, 13.09%)</title><rect x="508" y="148" width="155" height="15" fill="rgb(241,84,52)"/><text x="511.00" y="158.50">run (mlprodict/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (39 samples, 13.09%)</title><rect x="508" y="164" width="155" height="15" fill="rgb(225,54,10)"/><text x="511.00" y="174.50">_run_sequence_runti..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (39 samples, 13.09%)</title><rect x="508" y="180" width="155" height="15" fill="rgb(246,221,48)"/><text x="511.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (39 samples, 13.09%)</title><rect x="508" y="196" width="155" height="15" fill="rgb(215,200,51)"/><text x="511.00" y="206.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (39 samples, 13.09%)</title><rect x="508" y="212" width="155" height="15" fill="rgb(238,190,23)"/><text x="511.00" y="222.50">run (mlprodict/onnx..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_svm_regressor.py) (39 samples, 13.09%)</title><rect x="508" y="228" width="155" height="15" fill="rgb(221,104,32)"/><text x="511.00" y="238.50">_run (mlprodict/onn..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (38 samples, 12.75%)</title><rect x="512" y="244" width="151" height="15" fill="rgb(213,124,49)"/><text x="515.00" y="254.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (38 samples, 12.75%)</title><rect x="512" y="260" width="151" height="15" fill="rgb(250,130,10)"/><text x="515.00" y="270.50">void pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (38 samples, 12.75%)</title><rect x="512" y="276" width="151" height="15" fill="rgb(235,65,21)"/><text x="515.00" y="286.50">void pybind11::cpp_..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (38 samples, 12.75%)</title><rect x="512" y="292" width="151" height="15" fill="rgb(250,180,18)"/><text x="515.00" y="302.50">pybind11::detail::a..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (38 samples, 12.75%)</title><rect x="512" y="308" width="151" height="15" fill="rgb(209,32,32)"/><text x="515.00" y="318.50">pybind11::detail::a..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeSVMRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeSVMRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (38 samples, 12.75%)</title><rect x="512" y="324" width="151" height="15" fill="rgb(211,46,36)"/><text x="515.00" y="334.50">pybind11::cpp_funct..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (38 samples, 12.75%)</title><rect x="512" y="340" width="151" height="15" fill="rgb(243,54,16)"/><text x="515.00" y="350.50">pybind11::array_t&lt;f..</text></g><g><title>pybind11::array::~array (numpy.h) (38 samples, 12.75%)</title><rect x="512" y="356" width="151" height="15" fill="rgb(222,26,23)"/><text x="515.00" y="366.50">pybind11::array::~a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (38 samples, 12.75%)</title><rect x="512" y="372" width="151" height="15" fill="rgb(239,97,48)"/><text x="515.00" y="382.50">pybind11::buffer::~..</text></g><g><title>pybind11::object::~object (pytypes.h) (38 samples, 12.75%)</title><rect x="512" y="388" width="151" height="15" fill="rgb(215,80,46)"/><text x="515.00" y="398.50">pybind11::object::~..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (38 samples, 12.75%)</title><rect x="512" y="404" width="151" height="15" fill="rgb(240,222,22)"/><text x="515.00" y="414.50">pybind11::handle::d..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp) (38 samples, 12.75%)</title><rect x="512" y="420" width="151" height="15" fill="rgb(210,138,48)"/><text x="515.00" y="430.50">RuntimeSVMRegressor..</text></g><g><title>pybind11::gil_scoped_release::~gil_scoped_release (pybind11.h) (38 samples, 12.75%)</title><rect x="512" y="436" width="151" height="15" fill="rgb(222,165,14)"/><text x="515.00" y="446.50">pybind11::gil_scope..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (32 samples, 10.74%)</title><rect x="536" y="452" width="127" height="15" fill="rgb(248,93,1)"/><text x="539.00" y="462.50">GOMP_parallel (..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.1] (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp) (32 samples, 10.74%)</title><rect x="536" y="468" width="127" height="15" fill="rgb(243,67,46)"/><text x="539.00" y="478.50">RuntimeSVMRegre..</text></g><g><title>RuntimeSVMRegressor&lt;float&gt;::kernel_dot_gil_free (mlprodict/onnxrt/ops_cpu/op_svm_regressor_.cpp) (23 samples, 7.72%)</title><rect x="572" y="484" width="91" height="15" fill="rgb(239,5,36)"/><text x="575.00" y="494.50">RuntimeSVM..</text></g><g><title>vector_dot_product_pointer16_sse (mlprodict/onnxrt/ops_cpu/op_common_num_.cpp) (19 samples, 6.38%)</title><rect x="588" y="500" width="75" height="15" fill="rgb(205,83,43)"/><text x="591.00" y="510.50">vector_d..</text></g><g><title>0x7f2faa4744d5 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="667" y="196" width="4" height="15" fill="rgb(232,159,41)"/><text x="670.00" y="206.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.34%)</title><rect x="667" y="212" width="4" height="15" fill="rgb(220,73,44)"/><text x="670.00" y="222.50"></text></g><g><title>dense_to_libsvm (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="671" y="228" width="4" height="15" fill="rgb(232,66,22)"/><text x="674.00" y="238.50"></text></g><g><title>0x7f2fcf98190a (libc-2.29.so) (1 samples, 0.34%)</title><rect x="675" y="244" width="4" height="15" fill="rgb(238,99,5)"/><text x="678.00" y="254.50"></text></g><g><title>0x7f2fcf981961 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="679" y="244" width="4" height="15" fill="rgb(219,202,41)"/><text x="682.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.34%)</title><rect x="683" y="244" width="4" height="15" fill="rgb(206,169,14)"/><text x="686.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.67%)</title><rect x="687" y="244" width="8" height="15" fill="rgb(234,217,36)"/><text x="690.00" y="254.50"></text></g><g><title>0x7f2faa4533a0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.67%)</title><rect x="845" y="260" width="8" height="15" fill="rgb(216,224,41)"/><text x="848.00" y="270.50"></text></g><g><title>0x7f2faa4536b0 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.34%)</title><rect x="853" y="260" width="4" height="15" fill="rgb(216,192,53)"/><text x="856.00" y="270.50"></text></g><g><title>svm::Kernel::dot (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (49 samples, 16.44%)</title><rect x="857" y="260" width="194" height="15" fill="rgb(211,90,28)"/><text x="860.00" y="270.50">svm::Kernel::dot (sklearn..</text></g><g><title>0x7f2faa4761dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (121 samples, 40.60%)</title><rect x="667" y="180" width="479" height="15" fill="rgb(230,165,15)"/><text x="670.00" y="190.50">0x7f2faa4761dd (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu...</text></g><g><title>0x7f2faa4744f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (120 samples, 40.27%)</title><rect x="671" y="196" width="475" height="15" fill="rgb(234,27,1)"/><text x="674.00" y="206.50">0x7f2faa4744f1 (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu...</text></g><g><title>copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (120 samples, 40.27%)</title><rect x="671" y="212" width="475" height="15" fill="rgb(230,178,47)"/><text x="674.00" y="222.50">copy_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (119 samples, 39.93%)</title><rect x="675" y="228" width="471" height="15" fill="rgb(251,57,29)"/><text x="678.00" y="238.50">svm_predict (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so)</text></g><g><title>svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (114 samples, 38.26%)</title><rect x="695" y="244" width="451" height="15" fill="rgb(220,152,40)"/><text x="698.00" y="254.50">svm_predict_values (sklearn/svm/_libsvm.cpython-37m-x86_64-li..</text></g><g><title>svm::Kernel::k_function (sklearn/svm/_libsvm.cpython-37m-x86_64-linux-gnu.so) (24 samples, 8.05%)</title><rect x="1051" y="260" width="95" height="15" fill="rgb(228,70,19)"/><text x="1054.00" y="270.50">svm::Kernel..</text></g><g><title>_dense_predict (sklearn/svm/_base.py) (122 samples, 40.94%)</title><rect x="667" y="164" width="483" height="15" fill="rgb(225,23,12)"/><text x="670.00" y="174.50">_dense_predict (sklearn/svm/_base.py)</text></g><g><title>_compute_kernel (sklearn/svm/_base.py) (1 samples, 0.34%)</title><rect x="1146" y="180" width="4" height="15" fill="rgb(220,44,39)"/><text x="1149.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (2 samples, 0.67%)</title><rect x="1166" y="196" width="8" height="15" fill="rgb(249,171,2)"/><text x="1169.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.34%)</title><rect x="1170" y="212" width="4" height="15" fill="rgb(243,110,41)"/><text x="1173.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.34%)</title><rect x="1174" y="196" width="4" height="15" fill="rgb(206,61,46)"/><text x="1177.00" y="206.50"></text></g><g><title>0x7f2fcf9a2120 (libc-2.29.so) (1 samples, 0.34%)</title><rect x="1178" y="308" width="4" height="15" fill="rgb(254,100,48)"/><text x="1181.00" y="318.50"></text></g><g><title>profile_skl (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (132 samples, 44.30%)</title><rect x="663" y="68" width="523" height="15" fill="rgb(246,72,50)"/><text x="666.00" y="78.50">profile_skl (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (132 samples, 44.30%)</title><rect x="663" y="84" width="523" height="15" fill="rgb(251,154,24)"/><text x="666.00" y="94.50">setup_profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py)</text></g><g><title>profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (132 samples, 44.30%)</title><rect x="663" y="100" width="523" height="15" fill="rgb(250,164,4)"/><text x="666.00" y="110.50">profile (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 44.30%)</title><rect x="663" y="116" width="523" height="15" fill="rgb(224,38,31)"/><text x="666.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (131 samples, 43.96%)</title><rect x="667" y="132" width="519" height="15" fill="rgb(245,156,23)"/><text x="670.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/svm/_base.py) (131 samples, 43.96%)</title><rect x="667" y="148" width="519" height="15" fill="rgb(227,179,9)"/><text x="670.00" y="158.50">predict (sklearn/svm/_base.py)</text></g><g><title>_validate_for_predict (sklearn/svm/_base.py) (9 samples, 3.02%)</title><rect x="1150" y="164" width="36" height="15" fill="rgb(233,43,32)"/><text x="1153.00" y="174.50">_va..</text></g><g><title>check_array (sklearn/utils/validation.py) (9 samples, 3.02%)</title><rect x="1150" y="180" width="36" height="15" fill="rgb(234,99,33)"/><text x="1153.00" y="190.50">che..</text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.67%)</title><rect x="1178" y="196" width="8" height="15" fill="rgb(234,195,25)"/><text x="1181.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.67%)</title><rect x="1178" y="212" width="8" height="15" fill="rgb(241,50,7)"/><text x="1181.00" y="222.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.67%)</title><rect x="1178" y="228" width="8" height="15" fill="rgb(248,133,38)"/><text x="1181.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.67%)</title><rect x="1178" y="244" width="8" height="15" fill="rgb(240,105,37)"/><text x="1181.00" y="254.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.67%)</title><rect x="1178" y="260" width="8" height="15" fill="rgb(219,97,6)"/><text x="1181.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.67%)</title><rect x="1178" y="276" width="8" height="15" fill="rgb(231,202,17)"/><text x="1181.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.67%)</title><rect x="1178" y="292" width="8" height="15" fill="rgb(235,212,13)"/><text x="1181.00" y="302.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.34%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(219,187,19)"/><text x="1185.00" y="318.50"></text></g><g><title>all (298 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(235,144,30)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (298 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(247,44,17)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py)</text></g><g><title>start (bench_SVR_linear_b_reg_kernellinear_1000_4_12_float_.py) (1 samples, 0.34%)</title><rect x="1186" y="68" width="4" height="15" fill="rgb(235,207,36)"/><text x="1189.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/svm/SVR/bench_SVR_linear_b_reg_kernellinear.py) (1 samples, 0.34%)</title><rect x="1186" y="84" width="4" height="15" fill="rgb(228,94,17)"/><text x="1189.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="1186" y="100" width="4" height="15" fill="rgb(254,22,6)"/><text x="1189.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.34%)</title><rect x="1186" y="116" width="4" height="15" fill="rgb(214,100,53)"/><text x="1189.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py) (1 samples, 0.34%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(216,72,25)"/><text x="1189.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py) (1 samples, 0.34%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(205,216,49)"/><text x="1189.00" y="158.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.34%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(211,152,35)"/><text x="1189.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.34%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(247,71,17)"/><text x="1189.00" y="190.50"></text></g></g></svg>