<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>_handle_ns (pkg_resources/__init__.py:2200) (1 samples, 0.25%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(239,117,11)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.25%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(251,34,16)"/><text x="13.00" y="942.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.25%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(227,166,1)"/><text x="13.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.51%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(216,129,41)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.51%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(238,150,51)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.51%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(206,151,0)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.51%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(232,133,12)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.25%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(205,149,45)"/><text x="15.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.25%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(252,3,21)"/><text x="15.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.25%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(206,69,10)"/><text x="15.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.25%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(235,100,14)"/><text x="15.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.25%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(219,86,0)"/><text x="15.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.25%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(229,144,54)"/><text x="15.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.25%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(207,106,31)"/><text x="15.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(213,99,5)"/><text x="15.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.25%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(222,102,25)"/><text x="15.00" y="1054.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:2) (3 samples, 0.76%)</title><rect x="10" y="148" width="8" height="15" fill="rgb(250,154,51)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="164" width="8" height="15" fill="rgb(242,11,28)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.76%)</title><rect x="10" y="180" width="8" height="15" fill="rgb(219,111,41)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="196" width="8" height="15" fill="rgb(208,183,41)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="212" width="8" height="15" fill="rgb(218,113,31)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="10" y="228" width="8" height="15" fill="rgb(235,16,1)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="10" y="244" width="8" height="15" fill="rgb(239,218,17)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="10" y="260" width="8" height="15" fill="rgb(223,26,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="276" width="8" height="15" fill="rgb(248,107,8)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.76%)</title><rect x="10" y="292" width="8" height="15" fill="rgb(247,125,10)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="308" width="8" height="15" fill="rgb(243,58,4)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="10" y="324" width="8" height="15" fill="rgb(213,82,28)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="10" y="340" width="8" height="15" fill="rgb(216,139,37)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="10" y="356" width="8" height="15" fill="rgb(233,81,13)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="372" width="8" height="15" fill="rgb(244,229,53)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.76%)</title><rect x="10" y="388" width="8" height="15" fill="rgb(206,122,17)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="404" width="8" height="15" fill="rgb(226,83,22)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="10" y="420" width="8" height="15" fill="rgb(216,118,8)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="10" y="436" width="8" height="15" fill="rgb(243,144,16)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="10" y="452" width="8" height="15" fill="rgb(236,30,38)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="468" width="8" height="15" fill="rgb(242,23,29)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.76%)</title><rect x="10" y="484" width="8" height="15" fill="rgb(232,114,19)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="500" width="8" height="15" fill="rgb(224,126,47)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="10" y="516" width="8" height="15" fill="rgb(224,227,52)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="10" y="532" width="8" height="15" fill="rgb(221,221,43)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="10" y="548" width="8" height="15" fill="rgb(224,116,30)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="564" width="8" height="15" fill="rgb(217,131,53)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.76%)</title><rect x="10" y="580" width="8" height="15" fill="rgb(221,75,54)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="596" width="8" height="15" fill="rgb(245,13,30)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.76%)</title><rect x="10" y="612" width="8" height="15" fill="rgb(229,224,50)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="628" width="8" height="15" fill="rgb(247,63,33)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="644" width="8" height="15" fill="rgb(245,74,48)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="10" y="660" width="8" height="15" fill="rgb(234,204,47)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="10" y="676" width="8" height="15" fill="rgb(221,58,34)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="10" y="692" width="8" height="15" fill="rgb(207,50,30)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="708" width="8" height="15" fill="rgb(239,176,51)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.76%)</title><rect x="10" y="724" width="8" height="15" fill="rgb(211,201,33)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="10" y="740" width="8" height="15" fill="rgb(236,34,31)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="10" y="756" width="8" height="15" fill="rgb(222,162,15)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="10" y="772" width="8" height="15" fill="rgb(239,181,14)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="10" y="788" width="8" height="15" fill="rgb(250,42,41)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="10" y="804" width="8" height="15" fill="rgb(218,47,1)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.76%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(219,83,22)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.76%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(227,98,45)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.25%)</title><rect x="15" y="852" width="3" height="15" fill="rgb(232,138,15)"/><text x="18.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.25%)</title><rect x="15" y="868" width="3" height="15" fill="rgb(250,182,21)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.25%)</title><rect x="15" y="884" width="3" height="15" fill="rgb(248,202,54)"/><text x="18.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.25%)</title><rect x="15" y="900" width="3" height="15" fill="rgb(230,131,6)"/><text x="18.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.25%)</title><rect x="15" y="916" width="3" height="15" fill="rgb(247,24,38)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.25%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(227,121,30)"/><text x="18.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.25%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(227,38,26)"/><text x="18.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:202) (1 samples, 0.25%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(247,55,47)"/><text x="18.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:4) (1 samples, 0.25%)</title><rect x="18" y="148" width="3" height="15" fill="rgb(225,145,2)"/><text x="21.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="164" width="3" height="15" fill="rgb(220,104,4)"/><text x="21.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="18" y="180" width="3" height="15" fill="rgb(235,24,15)"/><text x="21.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="196" width="3" height="15" fill="rgb(244,172,17)"/><text x="21.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="212" width="3" height="15" fill="rgb(211,137,12)"/><text x="21.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="228" width="3" height="15" fill="rgb(234,58,18)"/><text x="21.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="244" width="3" height="15" fill="rgb(236,165,29)"/><text x="21.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="260" width="3" height="15" fill="rgb(227,63,49)"/><text x="21.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="276" width="3" height="15" fill="rgb(250,116,11)"/><text x="21.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.25%)</title><rect x="18" y="292" width="3" height="15" fill="rgb(244,164,14)"/><text x="21.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="308" width="3" height="15" fill="rgb(209,181,49)"/><text x="21.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="324" width="3" height="15" fill="rgb(228,149,9)"/><text x="21.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="340" width="3" height="15" fill="rgb(245,224,20)"/><text x="21.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="356" width="3" height="15" fill="rgb(236,62,0)"/><text x="21.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="372" width="3" height="15" fill="rgb(219,63,2)"/><text x="21.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.25%)</title><rect x="18" y="388" width="3" height="15" fill="rgb(241,226,51)"/><text x="21.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="404" width="3" height="15" fill="rgb(246,77,6)"/><text x="21.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="420" width="3" height="15" fill="rgb(254,129,18)"/><text x="21.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="436" width="3" height="15" fill="rgb(210,42,33)"/><text x="21.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="452" width="3" height="15" fill="rgb(246,106,9)"/><text x="21.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="468" width="3" height="15" fill="rgb(242,213,22)"/><text x="21.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.25%)</title><rect x="18" y="484" width="3" height="15" fill="rgb(226,34,47)"/><text x="21.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="500" width="3" height="15" fill="rgb(239,134,29)"/><text x="21.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="516" width="3" height="15" fill="rgb(226,38,3)"/><text x="21.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="532" width="3" height="15" fill="rgb(209,151,1)"/><text x="21.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="548" width="3" height="15" fill="rgb(216,41,52)"/><text x="21.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="564" width="3" height="15" fill="rgb(230,89,48)"/><text x="21.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.25%)</title><rect x="18" y="580" width="3" height="15" fill="rgb(249,220,13)"/><text x="21.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="596" width="3" height="15" fill="rgb(207,116,51)"/><text x="21.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="612" width="3" height="15" fill="rgb(242,119,47)"/><text x="21.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="628" width="3" height="15" fill="rgb(212,206,23)"/><text x="21.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="644" width="3" height="15" fill="rgb(220,31,41)"/><text x="21.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="660" width="3" height="15" fill="rgb(210,4,31)"/><text x="21.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.25%)</title><rect x="18" y="676" width="3" height="15" fill="rgb(250,97,18)"/><text x="21.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="692" width="3" height="15" fill="rgb(236,167,37)"/><text x="21.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="708" width="3" height="15" fill="rgb(211,73,37)"/><text x="21.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="724" width="3" height="15" fill="rgb(243,50,18)"/><text x="21.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="740" width="3" height="15" fill="rgb(227,198,14)"/><text x="21.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="756" width="3" height="15" fill="rgb(234,95,2)"/><text x="21.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.25%)</title><rect x="18" y="772" width="3" height="15" fill="rgb(238,185,36)"/><text x="21.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="18" y="788" width="3" height="15" fill="rgb(241,201,19)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="804" width="3" height="15" fill="rgb(253,19,5)"/><text x="21.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="820" width="3" height="15" fill="rgb(228,73,13)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="836" width="3" height="15" fill="rgb(248,5,15)"/><text x="21.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="852" width="3" height="15" fill="rgb(211,114,53)"/><text x="21.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="868" width="3" height="15" fill="rgb(224,100,26)"/><text x="21.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="884" width="3" height="15" fill="rgb(244,27,5)"/><text x="21.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.25%)</title><rect x="18" y="900" width="3" height="15" fill="rgb(224,57,12)"/><text x="21.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="916" width="3" height="15" fill="rgb(244,94,41)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="932" width="3" height="15" fill="rgb(247,215,12)"/><text x="21.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="948" width="3" height="15" fill="rgb(229,146,0)"/><text x="21.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="964" width="3" height="15" fill="rgb(247,29,17)"/><text x="21.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="980" width="3" height="15" fill="rgb(207,80,11)"/><text x="21.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.25%)</title><rect x="18" y="996" width="3" height="15" fill="rgb(247,124,36)"/><text x="21.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="18" y="1012" width="3" height="15" fill="rgb(241,5,1)"/><text x="21.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="1028" width="3" height="15" fill="rgb(246,68,30)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="1044" width="3" height="15" fill="rgb(211,6,32)"/><text x="21.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="1060" width="3" height="15" fill="rgb(232,195,24)"/><text x="21.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="1076" width="3" height="15" fill="rgb(220,65,50)"/><text x="21.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="1092" width="3" height="15" fill="rgb(243,55,13)"/><text x="21.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="1108" width="3" height="15" fill="rgb(252,79,47)"/><text x="21.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:391) (1 samples, 0.25%)</title><rect x="18" y="1124" width="3" height="15" fill="rgb(219,53,2)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="1140" width="3" height="15" fill="rgb(251,142,4)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="1156" width="3" height="15" fill="rgb(245,5,44)"/><text x="21.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="1172" width="3" height="15" fill="rgb(232,219,53)"/><text x="21.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="1188" width="3" height="15" fill="rgb(234,146,6)"/><text x="21.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="1204" width="3" height="15" fill="rgb(212,181,28)"/><text x="21.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py:30) (1 samples, 0.25%)</title><rect x="18" y="1220" width="3" height="15" fill="rgb(223,108,25)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="1236" width="3" height="15" fill="rgb(245,166,9)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="1252" width="3" height="15" fill="rgb(215,96,42)"/><text x="21.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="1268" width="3" height="15" fill="rgb(216,28,51)"/><text x="21.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="1284" width="3" height="15" fill="rgb(247,45,39)"/><text x="21.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="1300" width="3" height="15" fill="rgb(240,68,6)"/><text x="21.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py:4) (1 samples, 0.25%)</title><rect x="18" y="1316" width="3" height="15" fill="rgb(231,55,0)"/><text x="21.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="1332" width="3" height="15" fill="rgb(237,12,41)"/><text x="21.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="1348" width="3" height="15" fill="rgb(235,32,28)"/><text x="21.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="1364" width="3" height="15" fill="rgb(206,112,6)"/><text x="21.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="1380" width="3" height="15" fill="rgb(217,51,34)"/><text x="21.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="1396" width="3" height="15" fill="rgb(243,40,29)"/><text x="21.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py:5) (1 samples, 0.25%)</title><rect x="18" y="1412" width="3" height="15" fill="rgb(205,116,19)"/><text x="21.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="1428" width="3" height="15" fill="rgb(218,133,41)"/><text x="21.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="1444" width="3" height="15" fill="rgb(216,86,53)"/><text x="21.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="1460" width="3" height="15" fill="rgb(236,77,29)"/><text x="21.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="18" y="1476" width="3" height="15" fill="rgb(253,178,26)"/><text x="21.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="18" y="1492" width="3" height="15" fill="rgb(247,61,18)"/><text x="21.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_differentiable_functions.py:4) (1 samples, 0.25%)</title><rect x="18" y="1508" width="3" height="15" fill="rgb(250,140,9)"/><text x="21.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="18" y="1524" width="3" height="15" fill="rgb(224,44,37)"/><text x="21.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="18" y="1540" width="3" height="15" fill="rgb(212,221,4)"/><text x="21.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="18" y="1556" width="3" height="15" fill="rgb(205,50,8)"/><text x="21.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.25%)</title><rect x="18" y="1572" width="3" height="15" fill="rgb(206,68,15)"/><text x="21.00" y="1582.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.25%)</title><rect x="18" y="1588" width="3" height="15" fill="rgb(214,171,4)"/><text x="21.00" y="1598.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:527) (1 samples, 0.25%)</title><rect x="18" y="1604" width="3" height="15" fill="rgb(210,51,34)"/><text x="21.00" y="1614.50"></text></g><g><title>_verbose_message (&lt;frozen importlib._bootstrap&gt;:224) (1 samples, 0.25%)</title><rect x="18" y="1620" width="3" height="15" fill="rgb(244,202,28)"/><text x="21.00" y="1630.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:10) (1 samples, 0.25%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(231,156,23)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(205,34,35)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(213,88,43)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.25%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(249,192,5)"/><text x="24.00" y="542.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.25%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(253,108,3)"/><text x="24.00" y="558.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.25%)</title><rect x="24" y="772" width="3" height="15" fill="rgb(218,80,36)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="24" y="788" width="3" height="15" fill="rgb(234,164,11)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="804" width="3" height="15" fill="rgb(245,99,14)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="24" y="820" width="3" height="15" fill="rgb(226,50,46)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(222,181,30)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(248,26,33)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(250,158,15)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(246,73,42)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.25%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(237,86,7)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(237,225,54)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(226,117,27)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(239,25,36)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(230,179,39)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(211,125,18)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.25%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(239,52,6)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(228,181,54)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(252,207,42)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(227,200,45)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(247,111,36)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(227,170,17)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:59) (1 samples, 0.25%)</title><rect x="24" y="1092" width="3" height="15" fill="rgb(254,214,32)"/><text x="27.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="24" y="1108" width="3" height="15" fill="rgb(205,189,5)"/><text x="27.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="1124" width="3" height="15" fill="rgb(207,97,14)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="24" y="1140" width="3" height="15" fill="rgb(248,158,12)"/><text x="27.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="24" y="1156" width="3" height="15" fill="rgb(235,169,31)"/><text x="27.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="24" y="1172" width="3" height="15" fill="rgb(217,118,34)"/><text x="27.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="24" y="1188" width="3" height="15" fill="rgb(227,38,51)"/><text x="27.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="24" y="1204" width="3" height="15" fill="rgb(231,213,32)"/><text x="27.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py:219) (1 samples, 0.25%)</title><rect x="24" y="1220" width="3" height="15" fill="rgb(229,43,44)"/><text x="27.00" y="1230.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.25%)</title><rect x="24" y="1236" width="3" height="15" fill="rgb(253,81,23)"/><text x="27.00" y="1246.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.25%)</title><rect x="24" y="1252" width="3" height="15" fill="rgb(249,112,28)"/><text x="27.00" y="1262.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.25%)</title><rect x="24" y="1268" width="3" height="15" fill="rgb(237,16,39)"/><text x="27.00" y="1278.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.25%)</title><rect x="24" y="1284" width="3" height="15" fill="rgb(226,83,43)"/><text x="27.00" y="1294.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.25%)</title><rect x="24" y="1300" width="3" height="15" fill="rgb(235,209,13)"/><text x="27.00" y="1310.50"></text></g><g><title>_compile (sre_compile.py:156) (1 samples, 0.25%)</title><rect x="24" y="1316" width="3" height="15" fill="rgb(222,12,13)"/><text x="27.00" y="1326.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.25%)</title><rect x="24" y="1332" width="3" height="15" fill="rgb(231,60,13)"/><text x="27.00" y="1342.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.25%)</title><rect x="24" y="1348" width="3" height="15" fill="rgb(246,217,39)"/><text x="27.00" y="1358.50"></text></g><g><title>_optimize_charset (sre_compile.py:335) (1 samples, 0.25%)</title><rect x="24" y="1364" width="3" height="15" fill="rgb(211,13,47)"/><text x="27.00" y="1374.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.51%)</title><rect x="24" y="484" width="6" height="15" fill="rgb(244,183,40)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="24" y="500" width="6" height="15" fill="rgb(217,174,16)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="24" y="516" width="6" height="15" fill="rgb(254,51,11)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="24" y="532" width="6" height="15" fill="rgb(254,205,13)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="24" y="548" width="6" height="15" fill="rgb(225,55,36)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="24" y="564" width="6" height="15" fill="rgb(232,97,13)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.51%)</title><rect x="24" y="580" width="6" height="15" fill="rgb(234,34,22)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="24" y="596" width="6" height="15" fill="rgb(231,122,5)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="24" y="612" width="6" height="15" fill="rgb(210,176,19)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="24" y="628" width="6" height="15" fill="rgb(206,120,12)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="24" y="644" width="6" height="15" fill="rgb(216,194,40)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="24" y="660" width="6" height="15" fill="rgb(251,168,54)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.51%)</title><rect x="24" y="676" width="6" height="15" fill="rgb(220,60,28)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="24" y="692" width="6" height="15" fill="rgb(207,158,0)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="24" y="708" width="6" height="15" fill="rgb(254,200,17)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="24" y="724" width="6" height="15" fill="rgb(233,212,46)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="24" y="740" width="6" height="15" fill="rgb(223,154,5)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="24" y="756" width="6" height="15" fill="rgb(222,147,36)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:44) (1 samples, 0.25%)</title><rect x="27" y="772" width="3" height="15" fill="rgb(214,150,46)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="788" width="3" height="15" fill="rgb(250,141,41)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="804" width="3" height="15" fill="rgb(247,12,25)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="820" width="3" height="15" fill="rgb(234,139,38)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="836" width="3" height="15" fill="rgb(214,210,12)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="852" width="3" height="15" fill="rgb(250,57,23)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py:20) (1 samples, 0.25%)</title><rect x="27" y="868" width="3" height="15" fill="rgb(219,100,43)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="884" width="3" height="15" fill="rgb(220,207,43)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="900" width="3" height="15" fill="rgb(232,142,19)"/><text x="30.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="916" width="3" height="15" fill="rgb(215,170,46)"/><text x="30.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="932" width="3" height="15" fill="rgb(226,218,42)"/><text x="30.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="948" width="3" height="15" fill="rgb(205,207,13)"/><text x="30.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py:47) (1 samples, 0.25%)</title><rect x="27" y="964" width="3" height="15" fill="rgb(220,82,50)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="980" width="3" height="15" fill="rgb(233,189,34)"/><text x="30.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="996" width="3" height="15" fill="rgb(210,162,22)"/><text x="30.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="1012" width="3" height="15" fill="rgb(239,160,40)"/><text x="30.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="1028" width="3" height="15" fill="rgb(230,47,40)"/><text x="30.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1044" width="3" height="15" fill="rgb(217,146,54)"/><text x="30.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/mbcsgroupprober.py:32) (1 samples, 0.25%)</title><rect x="27" y="1060" width="3" height="15" fill="rgb(227,63,45)"/><text x="30.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="1076" width="3" height="15" fill="rgb(218,102,14)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="1092" width="3" height="15" fill="rgb(239,181,1)"/><text x="30.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="1108" width="3" height="15" fill="rgb(253,147,0)"/><text x="30.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="1124" width="3" height="15" fill="rgb(227,72,50)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1140" width="3" height="15" fill="rgb(248,191,0)"/><text x="30.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/sjisprober.py:30) (1 samples, 0.25%)</title><rect x="27" y="1156" width="3" height="15" fill="rgb(243,181,6)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="1172" width="3" height="15" fill="rgb(215,17,16)"/><text x="30.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="27" y="1188" width="3" height="15" fill="rgb(218,123,31)"/><text x="30.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="27" y="1204" width="3" height="15" fill="rgb(219,222,23)"/><text x="30.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="27" y="1220" width="3" height="15" fill="rgb(219,43,41)"/><text x="30.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="27" y="1236" width="3" height="15" fill="rgb(222,202,0)"/><text x="30.00" y="1246.50"></text></g><g><title>&lt;module&gt; (chardet/chardistribution.py:34) (1 samples, 0.25%)</title><rect x="27" y="1252" width="3" height="15" fill="rgb(243,91,15)"/><text x="30.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="27" y="1268" width="3" height="15" fill="rgb(208,95,24)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.25%)</title><rect x="27" y="1284" width="3" height="15" fill="rgb(220,48,54)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.25%)</title><rect x="27" y="1300" width="3" height="15" fill="rgb(206,212,30)"/><text x="30.00" y="1310.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.25%)</title><rect x="27" y="1316" width="3" height="15" fill="rgb(253,19,12)"/><text x="30.00" y="1326.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.25%)</title><rect x="27" y="1332" width="3" height="15" fill="rgb(218,59,30)"/><text x="30.00" y="1342.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.25%)</title><rect x="27" y="1348" width="3" height="15" fill="rgb(234,93,40)"/><text x="30.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (4 samples, 1.02%)</title><rect x="21" y="340" width="12" height="15" fill="rgb(236,117,7)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="21" y="356" width="12" height="15" fill="rgb(229,150,54)"/><text x="24.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.02%)</title><rect x="21" y="372" width="12" height="15" fill="rgb(231,123,37)"/><text x="24.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="21" y="388" width="12" height="15" fill="rgb(231,49,5)"/><text x="24.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="21" y="404" width="12" height="15" fill="rgb(227,7,44)"/><text x="24.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="21" y="420" width="12" height="15" fill="rgb(240,181,48)"/><text x="24.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="21" y="436" width="12" height="15" fill="rgb(205,54,10)"/><text x="24.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="21" y="452" width="12" height="15" fill="rgb(232,178,41)"/><text x="24.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="21" y="468" width="12" height="15" fill="rgb(240,87,53)"/><text x="24.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.25%)</title><rect x="30" y="484" width="3" height="15" fill="rgb(253,17,19)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="30" y="500" width="3" height="15" fill="rgb(246,158,14)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="30" y="516" width="3" height="15" fill="rgb(243,74,31)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="30" y="532" width="3" height="15" fill="rgb(245,82,47)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="30" y="548" width="3" height="15" fill="rgb(254,216,34)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="30" y="564" width="3" height="15" fill="rgb(237,54,17)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.25%)</title><rect x="30" y="580" width="3" height="15" fill="rgb(231,48,19)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="30" y="596" width="3" height="15" fill="rgb(221,99,20)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="30" y="612" width="3" height="15" fill="rgb(219,66,32)"/><text x="33.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="30" y="628" width="3" height="15" fill="rgb(238,24,39)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="30" y="644" width="3" height="15" fill="rgb(227,42,36)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="30" y="660" width="3" height="15" fill="rgb(244,154,6)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="30" y="676" width="3" height="15" fill="rgb(232,80,4)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="30" y="692" width="3" height="15" fill="rgb(210,80,21)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="30" y="708" width="3" height="15" fill="rgb(244,143,21)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:15) (1 samples, 0.25%)</title><rect x="30" y="724" width="3" height="15" fill="rgb(211,128,22)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="30" y="740" width="3" height="15" fill="rgb(217,126,30)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="30" y="756" width="3" height="15" fill="rgb(212,218,31)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="30" y="772" width="3" height="15" fill="rgb(227,206,33)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="30" y="788" width="3" height="15" fill="rgb(239,1,45)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="30" y="804" width="3" height="15" fill="rgb(208,8,49)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/ftp_transfer.py:5) (1 samples, 0.25%)</title><rect x="30" y="820" width="3" height="15" fill="rgb(215,76,0)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="30" y="836" width="3" height="15" fill="rgb(230,161,15)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.25%)</title><rect x="30" y="852" width="3" height="15" fill="rgb(212,100,16)"/><text x="33.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.25%)</title><rect x="30" y="868" width="3" height="15" fill="rgb(214,9,21)"/><text x="33.00" y="878.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.25%)</title><rect x="30" y="884" width="3" height="15" fill="rgb(216,3,10)"/><text x="33.00" y="894.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.25%)</title><rect x="30" y="900" width="3" height="15" fill="rgb(208,171,47)"/><text x="33.00" y="910.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.25%)</title><rect x="30" y="916" width="3" height="15" fill="rgb(212,91,20)"/><text x="33.00" y="926.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (5 samples, 1.27%)</title><rect x="21" y="244" width="15" height="15" fill="rgb(217,175,7)"/><text x="24.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.27%)</title><rect x="21" y="260" width="15" height="15" fill="rgb(250,205,33)"/><text x="24.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.27%)</title><rect x="21" y="276" width="15" height="15" fill="rgb(247,197,50)"/><text x="24.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.27%)</title><rect x="21" y="292" width="15" height="15" fill="rgb(254,180,0)"/><text x="24.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.27%)</title><rect x="21" y="308" width="15" height="15" fill="rgb(238,110,11)"/><text x="24.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.27%)</title><rect x="21" y="324" width="15" height="15" fill="rgb(230,140,22)"/><text x="24.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:54) (1 samples, 0.25%)</title><rect x="33" y="340" width="3" height="15" fill="rgb(205,50,49)"/><text x="36.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="356" width="3" height="15" fill="rgb(229,77,46)"/><text x="36.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="33" y="372" width="3" height="15" fill="rgb(250,86,54)"/><text x="36.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="388" width="3" height="15" fill="rgb(247,60,33)"/><text x="36.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="404" width="3" height="15" fill="rgb(234,112,46)"/><text x="36.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="420" width="3" height="15" fill="rgb(253,39,30)"/><text x="36.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="436" width="3" height="15" fill="rgb(232,164,16)"/><text x="36.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="452" width="3" height="15" fill="rgb(220,43,14)"/><text x="36.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="468" width="3" height="15" fill="rgb(246,45,50)"/><text x="36.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py:6) (1 samples, 0.25%)</title><rect x="33" y="484" width="3" height="15" fill="rgb(215,38,22)"/><text x="36.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="500" width="3" height="15" fill="rgb(231,206,13)"/><text x="36.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="516" width="3" height="15" fill="rgb(220,180,9)"/><text x="36.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="532" width="3" height="15" fill="rgb(229,194,20)"/><text x="36.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="548" width="3" height="15" fill="rgb(244,184,13)"/><text x="36.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="564" width="3" height="15" fill="rgb(236,107,4)"/><text x="36.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py:9) (1 samples, 0.25%)</title><rect x="33" y="580" width="3" height="15" fill="rgb(249,144,50)"/><text x="36.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="596" width="3" height="15" fill="rgb(241,180,17)"/><text x="36.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="612" width="3" height="15" fill="rgb(254,214,19)"/><text x="36.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="628" width="3" height="15" fill="rgb(227,159,23)"/><text x="36.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="644" width="3" height="15" fill="rgb(252,91,41)"/><text x="36.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="660" width="3" height="15" fill="rgb(245,9,34)"/><text x="36.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/__init__.py:6) (1 samples, 0.25%)</title><rect x="33" y="676" width="3" height="15" fill="rgb(248,22,50)"/><text x="36.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="692" width="3" height="15" fill="rgb(217,70,6)"/><text x="36.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="708" width="3" height="15" fill="rgb(218,110,44)"/><text x="36.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="724" width="3" height="15" fill="rgb(217,137,11)"/><text x="36.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="740" width="3" height="15" fill="rgb(242,170,18)"/><text x="36.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="756" width="3" height="15" fill="rgb(213,3,36)"/><text x="36.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_identify.py:7) (1 samples, 0.25%)</title><rect x="33" y="772" width="3" height="15" fill="rgb(211,24,27)"/><text x="36.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="788" width="3" height="15" fill="rgb(221,5,21)"/><text x="36.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="804" width="3" height="15" fill="rgb(229,59,45)"/><text x="36.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="820" width="3" height="15" fill="rgb(245,4,30)"/><text x="36.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="836" width="3" height="15" fill="rgb(240,229,48)"/><text x="36.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="852" width="3" height="15" fill="rgb(254,0,44)"/><text x="36.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar_sklearn/g_sklearn_linear_model.py:8) (1 samples, 0.25%)</title><rect x="33" y="868" width="3" height="15" fill="rgb(253,18,6)"/><text x="36.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="884" width="3" height="15" fill="rgb(229,80,42)"/><text x="36.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="33" y="900" width="3" height="15" fill="rgb(238,166,49)"/><text x="36.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="916" width="3" height="15" fill="rgb(205,206,19)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="932" width="3" height="15" fill="rgb(224,95,49)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="948" width="3" height="15" fill="rgb(245,148,40)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="964" width="3" height="15" fill="rgb(224,26,37)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="980" width="3" height="15" fill="rgb(233,140,26)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="996" width="3" height="15" fill="rgb(238,225,14)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/__init__.py:6) (1 samples, 0.25%)</title><rect x="33" y="1012" width="3" height="15" fill="rgb(228,140,24)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="1028" width="3" height="15" fill="rgb(217,221,44)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="1044" width="3" height="15" fill="rgb(251,106,52)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="33" y="1060" width="3" height="15" fill="rgb(240,212,3)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="33" y="1076" width="3" height="15" fill="rgb(208,165,7)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="33" y="1092" width="3" height="15" fill="rgb(209,14,38)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/grammar/gmlactions.py:6) (1 samples, 0.25%)</title><rect x="33" y="1108" width="3" height="15" fill="rgb(248,54,44)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="33" y="1124" width="3" height="15" fill="rgb(249,210,43)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="33" y="1140" width="3" height="15" fill="rgb(223,189,1)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.25%)</title><rect x="33" y="1156" width="3" height="15" fill="rgb(240,25,48)"/><text x="36.00" y="1166.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.25%)</title><rect x="33" y="1172" width="3" height="15" fill="rgb(241,129,49)"/><text x="36.00" y="1182.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;:568) (1 samples, 0.25%)</title><rect x="33" y="1188" width="3" height="15" fill="rgb(248,199,2)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.25%)</title><rect x="36" y="436" width="3" height="15" fill="rgb(233,22,36)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="452" width="3" height="15" fill="rgb(236,217,27)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="468" width="3" height="15" fill="rgb(214,41,40)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(208,201,23)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(213,171,13)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(254,17,16)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.25%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(215,120,48)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(213,125,17)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(218,102,27)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(239,215,4)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(228,60,48)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(252,192,33)"/><text x="39.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.25%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(244,158,25)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(234,210,21)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(245,119,15)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(224,5,29)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(248,105,0)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(244,189,7)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.25%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(220,182,6)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(242,225,50)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.25%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(224,76,13)"/><text x="39.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(237,192,49)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(212,139,13)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(233,152,46)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(233,225,25)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(243,209,50)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(216,124,33)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:2) (1 samples, 0.25%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(230,24,44)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(235,202,5)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(225,177,49)"/><text x="39.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(208,204,54)"/><text x="39.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(240,169,14)"/><text x="39.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(230,202,53)"/><text x="39.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py:24) (1 samples, 0.25%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(244,101,52)"/><text x="39.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(219,138,52)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(226,129,13)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(215,96,4)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(223,78,6)"/><text x="39.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(207,98,21)"/><text x="39.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(238,182,35)"/><text x="39.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(225,224,41)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/ops/__init__.py:56) (1 samples, 0.25%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(224,166,52)"/><text x="39.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(247,219,33)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(250,63,14)"/><text x="39.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(219,4,8)"/><text x="39.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.25%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(211,198,45)"/><text x="39.00" y="1166.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.25%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(215,120,4)"/><text x="42.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(207,86,40)"/><text x="42.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(230,124,19)"/><text x="42.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(227,107,27)"/><text x="42.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(234,214,10)"/><text x="42.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(236,66,13)"/><text x="42.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(214,175,8)"/><text x="42.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(235,228,5)"/><text x="42.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:32) (1 samples, 0.25%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(231,23,25)"/><text x="42.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.25%)</title><rect x="39" y="1252" width="3" height="15" fill="rgb(247,125,6)"/><text x="42.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="39" y="1268" width="3" height="15" fill="rgb(254,154,26)"/><text x="42.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="39" y="1284" width="3" height="15" fill="rgb(213,15,12)"/><text x="42.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.25%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(231,13,7)"/><text x="42.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.25%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(249,81,37)"/><text x="42.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.25%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(219,97,18)"/><text x="42.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.25%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(211,63,3)"/><text x="42.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.25%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(215,190,44)"/><text x="42.00" y="1374.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.25%)</title><rect x="42" y="1460" width="3" height="15" fill="rgb(245,24,9)"/><text x="45.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.25%)</title><rect x="42" y="1476" width="3" height="15" fill="rgb(208,208,5)"/><text x="45.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.25%)</title><rect x="42" y="1492" width="3" height="15" fill="rgb(210,229,2)"/><text x="45.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.25%)</title><rect x="42" y="1508" width="3" height="15" fill="rgb(254,174,52)"/><text x="45.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.25%)</title><rect x="42" y="1524" width="3" height="15" fill="rgb(240,159,2)"/><text x="45.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.25%)</title><rect x="42" y="1540" width="3" height="15" fill="rgb(214,94,46)"/><text x="45.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="42" y="1556" width="3" height="15" fill="rgb(247,61,45)"/><text x="45.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:84) (1 samples, 0.25%)</title><rect x="42" y="1572" width="3" height="15" fill="rgb(235,183,48)"/><text x="45.00" y="1582.50"></text></g><g><title>0x7f034999907e (?) (1 samples, 0.25%)</title><rect x="42" y="1588" width="3" height="15" fill="rgb(235,168,13)"/><text x="45.00" y="1598.50"></text></g><g><title>0x7f0349998960 (?) (1 samples, 0.25%)</title><rect x="42" y="1604" width="3" height="15" fill="rgb(224,217,1)"/><text x="45.00" y="1614.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:4) (13 samples, 3.30%)</title><rect x="10" y="52" width="38" height="15" fill="rgb(230,197,37)"/><text x="13.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (13 samples, 3.30%)</title><rect x="10" y="68" width="38" height="15" fill="rgb(210,223,52)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (13 samples, 3.30%)</title><rect x="10" y="84" width="38" height="15" fill="rgb(217,2,38)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (13 samples, 3.30%)</title><rect x="10" y="100" width="38" height="15" fill="rgb(238,164,22)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (13 samples, 3.30%)</title><rect x="10" y="116" width="38" height="15" fill="rgb(225,79,23)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (13 samples, 3.30%)</title><rect x="10" y="132" width="38" height="15" fill="rgb(205,119,40)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:7) (9 samples, 2.28%)</title><rect x="21" y="148" width="27" height="15" fill="rgb(251,9,47)"/><text x="24.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.28%)</title><rect x="21" y="164" width="27" height="15" fill="rgb(236,81,35)"/><text x="24.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.28%)</title><rect x="21" y="180" width="27" height="15" fill="rgb(211,180,21)"/><text x="24.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.28%)</title><rect x="21" y="196" width="27" height="15" fill="rgb(250,157,41)"/><text x="24.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.28%)</title><rect x="21" y="212" width="27" height="15" fill="rgb(212,111,41)"/><text x="24.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.28%)</title><rect x="21" y="228" width="27" height="15" fill="rgb(250,92,47)"/><text x="24.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 1.02%)</title><rect x="36" y="244" width="12" height="15" fill="rgb(215,54,50)"/><text x="39.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="36" y="260" width="12" height="15" fill="rgb(253,67,8)"/><text x="39.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="36" y="276" width="12" height="15" fill="rgb(247,33,40)"/><text x="39.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="36" y="292" width="12" height="15" fill="rgb(212,129,5)"/><text x="39.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="36" y="308" width="12" height="15" fill="rgb(242,149,33)"/><text x="39.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="36" y="324" width="12" height="15" fill="rgb(239,193,15)"/><text x="39.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 1.02%)</title><rect x="36" y="340" width="12" height="15" fill="rgb(208,167,42)"/><text x="39.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="36" y="356" width="12" height="15" fill="rgb(243,29,31)"/><text x="39.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="36" y="372" width="12" height="15" fill="rgb(241,170,44)"/><text x="39.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="36" y="388" width="12" height="15" fill="rgb(235,172,19)"/><text x="39.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="36" y="404" width="12" height="15" fill="rgb(227,116,12)"/><text x="39.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="36" y="420" width="12" height="15" fill="rgb(213,42,28)"/><text x="39.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.76%)</title><rect x="39" y="436" width="9" height="15" fill="rgb(212,66,23)"/><text x="42.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="452" width="9" height="15" fill="rgb(222,98,36)"/><text x="42.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.76%)</title><rect x="39" y="468" width="9" height="15" fill="rgb(225,80,21)"/><text x="42.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="484" width="9" height="15" fill="rgb(205,169,7)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="500" width="9" height="15" fill="rgb(221,152,17)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="39" y="516" width="9" height="15" fill="rgb(224,128,34)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="39" y="532" width="9" height="15" fill="rgb(237,154,36)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="39" y="548" width="9" height="15" fill="rgb(205,66,28)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="564" width="9" height="15" fill="rgb(236,170,22)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.76%)</title><rect x="39" y="580" width="9" height="15" fill="rgb(229,84,42)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="596" width="9" height="15" fill="rgb(209,211,34)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="39" y="612" width="9" height="15" fill="rgb(213,152,5)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="39" y="628" width="9" height="15" fill="rgb(222,20,16)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="39" y="644" width="9" height="15" fill="rgb(208,159,24)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="660" width="9" height="15" fill="rgb(209,10,39)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.76%)</title><rect x="39" y="676" width="9" height="15" fill="rgb(240,49,0)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="692" width="9" height="15" fill="rgb(213,186,19)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="39" y="708" width="9" height="15" fill="rgb(244,108,22)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="39" y="724" width="9" height="15" fill="rgb(221,130,0)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="39" y="740" width="9" height="15" fill="rgb(231,10,23)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="756" width="9" height="15" fill="rgb(238,170,32)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.76%)</title><rect x="39" y="772" width="9" height="15" fill="rgb(240,201,19)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="788" width="9" height="15" fill="rgb(229,34,39)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="39" y="804" width="9" height="15" fill="rgb(249,190,8)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="39" y="820" width="9" height="15" fill="rgb(224,60,39)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="39" y="836" width="9" height="15" fill="rgb(213,72,24)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="852" width="9" height="15" fill="rgb(217,164,40)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.76%)</title><rect x="39" y="868" width="9" height="15" fill="rgb(238,177,21)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="884" width="9" height="15" fill="rgb(206,112,14)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.76%)</title><rect x="39" y="900" width="9" height="15" fill="rgb(252,206,23)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="916" width="9" height="15" fill="rgb(239,90,54)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="932" width="9" height="15" fill="rgb(209,180,7)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="39" y="948" width="9" height="15" fill="rgb(248,69,54)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="39" y="964" width="9" height="15" fill="rgb(218,70,45)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="39" y="980" width="9" height="15" fill="rgb(213,96,42)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="996" width="9" height="15" fill="rgb(235,179,48)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.76%)</title><rect x="39" y="1012" width="9" height="15" fill="rgb(229,30,53)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.76%)</title><rect x="39" y="1028" width="9" height="15" fill="rgb(232,131,3)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.76%)</title><rect x="39" y="1044" width="9" height="15" fill="rgb(242,77,34)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.76%)</title><rect x="39" y="1060" width="9" height="15" fill="rgb(207,91,0)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.76%)</title><rect x="39" y="1076" width="9" height="15" fill="rgb(235,69,30)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.76%)</title><rect x="39" y="1092" width="9" height="15" fill="rgb(249,110,16)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.51%)</title><rect x="42" y="1108" width="6" height="15" fill="rgb(227,51,18)"/><text x="45.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.51%)</title><rect x="42" y="1124" width="6" height="15" fill="rgb(216,55,47)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="42" y="1140" width="6" height="15" fill="rgb(221,205,3)"/><text x="45.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="42" y="1156" width="6" height="15" fill="rgb(250,53,52)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="42" y="1172" width="6" height="15" fill="rgb(244,145,45)"/><text x="45.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="42" y="1188" width="6" height="15" fill="rgb(218,212,17)"/><text x="45.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="42" y="1204" width="6" height="15" fill="rgb(236,24,51)"/><text x="45.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="42" y="1220" width="6" height="15" fill="rgb(228,50,44)"/><text x="45.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.51%)</title><rect x="42" y="1236" width="6" height="15" fill="rgb(218,84,4)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.51%)</title><rect x="42" y="1252" width="6" height="15" fill="rgb(235,193,29)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="42" y="1268" width="6" height="15" fill="rgb(207,223,24)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="42" y="1284" width="6" height="15" fill="rgb(235,161,9)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="42" y="1300" width="6" height="15" fill="rgb(223,90,41)"/><text x="45.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="42" y="1316" width="6" height="15" fill="rgb(239,181,47)"/><text x="45.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="42" y="1332" width="6" height="15" fill="rgb(239,65,52)"/><text x="45.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="42" y="1348" width="6" height="15" fill="rgb(215,95,17)"/><text x="45.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.51%)</title><rect x="42" y="1364" width="6" height="15" fill="rgb(228,74,22)"/><text x="45.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="42" y="1380" width="6" height="15" fill="rgb(242,39,26)"/><text x="45.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="42" y="1396" width="6" height="15" fill="rgb(223,211,7)"/><text x="45.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="42" y="1412" width="6" height="15" fill="rgb(224,63,22)"/><text x="45.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="42" y="1428" width="6" height="15" fill="rgb(241,13,6)"/><text x="45.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="42" y="1444" width="6" height="15" fill="rgb(231,18,50)"/><text x="45.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.25%)</title><rect x="45" y="1460" width="3" height="15" fill="rgb(246,135,9)"/><text x="48.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="45" y="1476" width="3" height="15" fill="rgb(214,45,21)"/><text x="48.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="45" y="1492" width="3" height="15" fill="rgb(233,171,6)"/><text x="48.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="45" y="1508" width="3" height="15" fill="rgb(223,31,27)"/><text x="48.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="45" y="1524" width="3" height="15" fill="rgb(237,153,24)"/><text x="48.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="45" y="1540" width="3" height="15" fill="rgb(241,223,43)"/><text x="48.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.25%)</title><rect x="45" y="1556" width="3" height="15" fill="rgb(236,59,47)"/><text x="48.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.25%)</title><rect x="45" y="1572" width="3" height="15" fill="rgb(217,121,14)"/><text x="48.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.25%)</title><rect x="45" y="1588" width="3" height="15" fill="rgb(231,36,7)"/><text x="48.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.25%)</title><rect x="45" y="1604" width="3" height="15" fill="rgb(248,184,45)"/><text x="48.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.25%)</title><rect x="45" y="1620" width="3" height="15" fill="rgb(254,25,27)"/><text x="48.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.25%)</title><rect x="45" y="1636" width="3" height="15" fill="rgb(237,72,23)"/><text x="48.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.25%)</title><rect x="45" y="1652" width="3" height="15" fill="rgb(219,26,48)"/><text x="48.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="45" y="1668" width="3" height="15" fill="rgb(209,6,50)"/><text x="48.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.25%)</title><rect x="45" y="1684" width="3" height="15" fill="rgb(205,2,12)"/><text x="48.00" y="1694.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.25%)</title><rect x="45" y="1700" width="3" height="15" fill="rgb(250,193,39)"/><text x="48.00" y="1710.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.25%)</title><rect x="45" y="1716" width="3" height="15" fill="rgb(211,6,52)"/><text x="48.00" y="1726.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.25%)</title><rect x="45" y="1732" width="3" height="15" fill="rgb(214,216,47)"/><text x="48.00" y="1742.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.25%)</title><rect x="45" y="1748" width="3" height="15" fill="rgb(208,161,49)"/><text x="48.00" y="1758.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.25%)</title><rect x="45" y="1764" width="3" height="15" fill="rgb(217,100,7)"/><text x="48.00" y="1774.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.25%)</title><rect x="45" y="1780" width="3" height="15" fill="rgb(208,52,41)"/><text x="48.00" y="1790.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.25%)</title><rect x="45" y="1796" width="3" height="15" fill="rgb(239,96,0)"/><text x="48.00" y="1806.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.25%)</title><rect x="45" y="1812" width="3" height="15" fill="rgb(247,1,15)"/><text x="48.00" y="1822.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.25%)</title><rect x="45" y="1828" width="3" height="15" fill="rgb(223,208,16)"/><text x="48.00" y="1838.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.25%)</title><rect x="48" y="116" width="3" height="15" fill="rgb(212,89,26)"/><text x="51.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.25%)</title><rect x="48" y="132" width="3" height="15" fill="rgb(240,228,7)"/><text x="51.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.25%)</title><rect x="48" y="148" width="3" height="15" fill="rgb(245,118,50)"/><text x="51.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:72) (1 samples, 0.25%)</title><rect x="48" y="164" width="3" height="15" fill="rgb(205,163,30)"/><text x="51.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py:189) (1 samples, 0.25%)</title><rect x="48" y="180" width="3" height="15" fill="rgb(216,8,39)"/><text x="51.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py:158) (1 samples, 0.25%)</title><rect x="48" y="196" width="3" height="15" fill="rgb(221,177,23)"/><text x="51.00" y="206.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.25%)</title><rect x="48" y="212" width="3" height="15" fill="rgb(207,195,18)"/><text x="51.00" y="222.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.25%)</title><rect x="48" y="228" width="3" height="15" fill="rgb(226,85,36)"/><text x="51.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.25%)</title><rect x="48" y="244" width="3" height="15" fill="rgb(225,50,40)"/><text x="51.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py:2161) (1 samples, 0.25%)</title><rect x="48" y="260" width="3" height="15" fill="rgb(215,209,15)"/><text x="51.00" y="270.50"></text></g><g><title>__init__ (inspect.py:2469) (1 samples, 0.25%)</title><rect x="48" y="276" width="3" height="15" fill="rgb(212,203,26)"/><text x="51.00" y="286.50"></text></g><g><title>fit (sklearn/tree/_classes.py:294) (1 samples, 0.25%)</title><rect x="51" y="276" width="3" height="15" fill="rgb(240,193,30)"/><text x="54.00" y="286.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.25%)</title><rect x="51" y="292" width="3" height="15" fill="rgb(245,171,18)"/><text x="54.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.25%)</title><rect x="51" y="308" width="3" height="15" fill="rgb(208,167,9)"/><text x="54.00" y="318.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (1 samples, 0.25%)</title><rect x="51" y="324" width="3" height="15" fill="rgb(254,143,23)"/><text x="54.00" y="334.50"></text></g><g><title>0x7f03337a12e3 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="54" y="340" width="3" height="15" fill="rgb(214,169,9)"/><text x="57.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:40) (4 samples, 1.02%)</title><rect x="48" y="52" width="12" height="15" fill="rgb(250,161,16)"/><text x="51.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:11) (4 samples, 1.02%)</title><rect x="48" y="68" width="12" height="15" fill="rgb(250,73,47)"/><text x="51.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:39) (4 samples, 1.02%)</title><rect x="48" y="84" width="12" height="15" fill="rgb(251,8,5)"/><text x="51.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (4 samples, 1.02%)</title><rect x="48" y="100" width="12" height="15" fill="rgb(211,3,26)"/><text x="51.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (3 samples, 0.76%)</title><rect x="51" y="116" width="9" height="15" fill="rgb(205,24,35)"/><text x="54.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 0.76%)</title><rect x="51" y="132" width="9" height="15" fill="rgb(244,17,34)"/><text x="54.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.76%)</title><rect x="51" y="148" width="9" height="15" fill="rgb(221,55,1)"/><text x="54.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 0.76%)</title><rect x="51" y="164" width="9" height="15" fill="rgb(220,82,11)"/><text x="54.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 0.76%)</title><rect x="51" y="180" width="9" height="15" fill="rgb(205,146,20)"/><text x="54.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 0.76%)</title><rect x="51" y="196" width="9" height="15" fill="rgb(221,4,34)"/><text x="54.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 0.76%)</title><rect x="51" y="212" width="9" height="15" fill="rgb(238,90,49)"/><text x="54.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (3 samples, 0.76%)</title><rect x="51" y="228" width="9" height="15" fill="rgb(207,53,50)"/><text x="54.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (3 samples, 0.76%)</title><rect x="51" y="244" width="9" height="15" fill="rgb(216,156,40)"/><text x="54.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (3 samples, 0.76%)</title><rect x="51" y="260" width="9" height="15" fill="rgb(210,203,40)"/><text x="54.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py:367) (2 samples, 0.51%)</title><rect x="54" y="276" width="6" height="15" fill="rgb(249,218,7)"/><text x="57.00" y="286.50"></text></g><g><title>0x7f0333310b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="54" y="292" width="6" height="15" fill="rgb(242,104,21)"/><text x="57.00" y="302.50"></text></g><g><title>0x7f033334210a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="54" y="308" width="6" height="15" fill="rgb(230,98,39)"/><text x="57.00" y="318.50"></text></g><g><title>0x7f033356de72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="54" y="324" width="6" height="15" fill="rgb(230,25,9)"/><text x="57.00" y="334.50"></text></g><g><title>0x7f03337a12ef (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="57" y="340" width="3" height="15" fill="rgb(226,95,30)"/><text x="60.00" y="350.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:25) (1 samples, 0.25%)</title><rect x="60" y="84" width="3" height="15" fill="rgb(205,107,17)"/><text x="63.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="60" y="100" width="3" height="15" fill="rgb(235,103,43)"/><text x="63.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.25%)</title><rect x="60" y="116" width="3" height="15" fill="rgb(249,170,17)"/><text x="63.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.25%)</title><rect x="60" y="132" width="3" height="15" fill="rgb(233,44,29)"/><text x="63.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.25%)</title><rect x="60" y="148" width="3" height="15" fill="rgb(249,48,12)"/><text x="63.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.25%)</title><rect x="60" y="164" width="3" height="15" fill="rgb(248,120,15)"/><text x="63.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.25%)</title><rect x="60" y="180" width="3" height="15" fill="rgb(212,32,40)"/><text x="63.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:150) (1 samples, 0.25%)</title><rect x="60" y="196" width="3" height="15" fill="rgb(247,78,6)"/><text x="63.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:448) (1 samples, 0.25%)</title><rect x="60" y="212" width="3" height="15" fill="rgb(205,95,43)"/><text x="63.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.25%)</title><rect x="60" y="228" width="3" height="15" fill="rgb(235,20,36)"/><text x="63.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="60" y="244" width="3" height="15" fill="rgb(220,173,38)"/><text x="63.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:70) (1 samples, 0.25%)</title><rect x="60" y="260" width="3" height="15" fill="rgb(220,44,48)"/><text x="63.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py:166) (1 samples, 0.25%)</title><rect x="60" y="276" width="3" height="15" fill="rgb(207,7,12)"/><text x="63.00" y="286.50"></text></g><g><title>google::protobuf::python::repeated_scalar_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="60" y="292" width="3" height="15" fill="rgb(254,97,8)"/><text x="63.00" y="302.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py:166) (1 samples, 0.25%)</title><rect x="60" y="308" width="3" height="15" fill="rgb(218,57,6)"/><text x="63.00" y="318.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (2 samples, 0.51%)</title><rect x="63" y="180" width="6" height="15" fill="rgb(232,112,44)"/><text x="66.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.25%)</title><rect x="69" y="180" width="3" height="15" fill="rgb(221,64,35)"/><text x="72.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.25%)</title><rect x="69" y="196" width="3" height="15" fill="rgb(216,46,24)"/><text x="72.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.25%)</title><rect x="69" y="212" width="3" height="15" fill="rgb(217,122,37)"/><text x="72.00" y="222.50"></text></g><g><title>0x7f033332a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="72" y="356" width="3" height="15" fill="rgb(249,59,22)"/><text x="75.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.25%)</title><rect x="72" y="372" width="3" height="15" fill="rgb(214,84,26)"/><text x="75.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.25%)</title><rect x="72" y="388" width="3" height="15" fill="rgb(254,146,45)"/><text x="75.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.25%)</title><rect x="72" y="404" width="3" height="15" fill="rgb(218,215,14)"/><text x="75.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.25%)</title><rect x="72" y="420" width="3" height="15" fill="rgb(207,199,20)"/><text x="75.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.25%)</title><rect x="72" y="436" width="3" height="15" fill="rgb(209,183,43)"/><text x="75.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.25%)</title><rect x="72" y="452" width="3" height="15" fill="rgb(217,55,29)"/><text x="75.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="72" y="468" width="3" height="15" fill="rgb(239,216,28)"/><text x="75.00" y="478.50"></text></g><g><title>0x7f03598f9103 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="72" y="484" width="3" height="15" fill="rgb(237,85,41)"/><text x="75.00" y="494.50"></text></g><g><title>0x7f033331bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="72" y="324" width="6" height="15" fill="rgb(247,225,38)"/><text x="75.00" y="334.50"></text></g><g><title>0x7f033332b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="72" y="340" width="6" height="15" fill="rgb(211,37,17)"/><text x="75.00" y="350.50"></text></g><g><title>0x7f033332a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="75" y="356" width="3" height="15" fill="rgb(214,70,0)"/><text x="78.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.25%)</title><rect x="78" y="340" width="3" height="15" fill="rgb(212,71,48)"/><text x="81.00" y="350.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (4 samples, 1.02%)</title><rect x="72" y="180" width="12" height="15" fill="rgb(209,129,10)"/><text x="75.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (4 samples, 1.02%)</title><rect x="72" y="196" width="12" height="15" fill="rgb(237,125,42)"/><text x="75.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (4 samples, 1.02%)</title><rect x="72" y="212" width="12" height="15" fill="rgb(231,5,41)"/><text x="75.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (4 samples, 1.02%)</title><rect x="72" y="228" width="12" height="15" fill="rgb(250,193,8)"/><text x="75.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (4 samples, 1.02%)</title><rect x="72" y="244" width="12" height="15" fill="rgb(247,191,12)"/><text x="75.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (4 samples, 1.02%)</title><rect x="72" y="260" width="12" height="15" fill="rgb(232,216,32)"/><text x="75.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (4 samples, 1.02%)</title><rect x="72" y="276" width="12" height="15" fill="rgb(236,63,42)"/><text x="75.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (4 samples, 1.02%)</title><rect x="72" y="292" width="12" height="15" fill="rgb(208,158,38)"/><text x="75.00" y="302.50"></text></g><g><title>0x7f033331cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.02%)</title><rect x="72" y="308" width="12" height="15" fill="rgb(246,197,42)"/><text x="75.00" y="318.50"></text></g><g><title>0x7f033331c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="78" y="324" width="6" height="15" fill="rgb(213,100,46)"/><text x="81.00" y="334.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.25%)</title><rect x="81" y="340" width="3" height="15" fill="rgb(239,144,2)"/><text x="84.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.25%)</title><rect x="81" y="356" width="3" height="15" fill="rgb(211,154,20)"/><text x="84.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.25%)</title><rect x="81" y="372" width="3" height="15" fill="rgb(211,138,45)"/><text x="84.00" y="382.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:47) (9 samples, 2.28%)</title><rect x="60" y="52" width="27" height="15" fill="rgb(216,150,8)"/><text x="63.00" y="62.50">&lt;..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:46) (9 samples, 2.28%)</title><rect x="60" y="68" width="27" height="15" fill="rgb(233,50,7)"/><text x="63.00" y="78.50">p..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:26) (8 samples, 2.03%)</title><rect x="63" y="84" width="24" height="15" fill="rgb(215,172,8)"/><text x="66.00" y="94.50">s..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:18) (8 samples, 2.03%)</title><rect x="63" y="100" width="24" height="15" fill="rgb(206,215,27)"/><text x="66.00" y="110.50">p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 2.03%)</title><rect x="63" y="116" width="24" height="15" fill="rgb(236,24,29)"/><text x="66.00" y="126.50">t..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (8 samples, 2.03%)</title><rect x="63" y="132" width="24" height="15" fill="rgb(228,26,23)"/><text x="66.00" y="142.50">&lt;..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (8 samples, 2.03%)</title><rect x="63" y="148" width="24" height="15" fill="rgb(247,30,26)"/><text x="66.00" y="158.50">p..</text></g><g><title>__call__ (joblib/parallel.py:1006) (8 samples, 2.03%)</title><rect x="63" y="164" width="24" height="15" fill="rgb(223,143,21)"/><text x="66.00" y="174.50">_..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (1 samples, 0.25%)</title><rect x="84" y="180" width="3" height="15" fill="rgb(250,39,20)"/><text x="87.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.25%)</title><rect x="87" y="196" width="3" height="15" fill="rgb(240,96,48)"/><text x="90.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (2 samples, 0.51%)</title><rect x="87" y="148" width="6" height="15" fill="rgb(243,10,24)"/><text x="90.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:177) (2 samples, 0.51%)</title><rect x="87" y="164" width="6" height="15" fill="rgb(223,145,45)"/><text x="90.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (2 samples, 0.51%)</title><rect x="87" y="180" width="6" height="15" fill="rgb(243,69,37)"/><text x="90.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py:117) (1 samples, 0.25%)</title><rect x="90" y="196" width="3" height="15" fill="rgb(254,196,52)"/><text x="93.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:620) (1 samples, 0.25%)</title><rect x="93" y="164" width="3" height="15" fill="rgb(253,1,19)"/><text x="96.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py:123) (1 samples, 0.25%)</title><rect x="93" y="180" width="3" height="15" fill="rgb(225,112,5)"/><text x="96.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:38) (1 samples, 0.25%)</title><rect x="93" y="196" width="3" height="15" fill="rgb(228,220,31)"/><text x="96.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (2 samples, 0.51%)</title><rect x="93" y="148" width="6" height="15" fill="rgb(235,74,49)"/><text x="96.00" y="158.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py:223) (1 samples, 0.25%)</title><rect x="96" y="164" width="3" height="15" fill="rgb(249,112,6)"/><text x="99.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py:304) (1 samples, 0.25%)</title><rect x="96" y="180" width="3" height="15" fill="rgb(225,7,4)"/><text x="99.00" y="190.50"></text></g><g><title>parse (distutils/version.py:316) (1 samples, 0.25%)</title><rect x="96" y="196" width="3" height="15" fill="rgb(234,166,3)"/><text x="99.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (1 samples, 0.25%)</title><rect x="99" y="180" width="3" height="15" fill="rgb(229,4,38)"/><text x="102.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (2 samples, 0.51%)</title><rect x="99" y="164" width="6" height="15" fill="rgb(227,11,18)"/><text x="102.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.25%)</title><rect x="102" y="180" width="3" height="15" fill="rgb(220,175,38)"/><text x="105.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.25%)</title><rect x="102" y="196" width="3" height="15" fill="rgb(222,46,21)"/><text x="105.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.25%)</title><rect x="102" y="212" width="3" height="15" fill="rgb(215,42,53)"/><text x="105.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.25%)</title><rect x="102" y="228" width="3" height="15" fill="rgb(229,203,1)"/><text x="105.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (1 samples, 0.25%)</title><rect x="102" y="244" width="3" height="15" fill="rgb(248,68,42)"/><text x="105.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.25%)</title><rect x="102" y="260" width="3" height="15" fill="rgb(250,184,9)"/><text x="105.00" y="270.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.25%)</title><rect x="108" y="180" width="3" height="15" fill="rgb(228,110,20)"/><text x="111.00" y="190.50"></text></g><g><title>compute_batch_size (joblib/_parallel_backends.py:89) (1 samples, 0.25%)</title><rect x="108" y="196" width="3" height="15" fill="rgb(226,111,15)"/><text x="111.00" y="206.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.51%)</title><rect x="117" y="196" width="6" height="15" fill="rgb(219,78,50)"/><text x="120.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (6 samples, 1.52%)</title><rect x="111" y="180" width="18" height="15" fill="rgb(223,19,2)"/><text x="114.00" y="190.50"></text></g><g><title>get (queue.py:166) (2 samples, 0.51%)</title><rect x="123" y="196" width="6" height="15" fill="rgb(210,40,24)"/><text x="126.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (2 samples, 0.51%)</title><rect x="123" y="212" width="6" height="15" fill="rgb(224,221,44)"/><text x="126.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.25%)</title><rect x="150" y="228" width="3" height="15" fill="rgb(236,29,36)"/><text x="153.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:59) (1 samples, 0.25%)</title><rect x="153" y="228" width="3" height="15" fill="rgb(233,24,13)"/><text x="156.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (2 samples, 0.51%)</title><rect x="156" y="228" width="6" height="15" fill="rgb(208,191,12)"/><text x="159.00" y="238.50"></text></g><g><title>delayed (joblib/parallel.py:308) (9 samples, 2.28%)</title><rect x="141" y="212" width="27" height="15" fill="rgb(240,112,35)"/><text x="144.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (2 samples, 0.51%)</title><rect x="162" y="228" width="6" height="15" fill="rgb(231,166,25)"/><text x="165.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (14 samples, 3.55%)</title><rect x="129" y="180" width="42" height="15" fill="rgb(236,69,2)"/><text x="132.00" y="190.50">dis..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (12 samples, 3.05%)</title><rect x="135" y="196" width="36" height="15" fill="rgb(210,142,38)"/><text x="138.00" y="206.50">&lt;ge..</text></g><g><title>delayed (joblib/parallel.py:311) (1 samples, 0.25%)</title><rect x="168" y="212" width="3" height="15" fill="rgb(244,71,53)"/><text x="171.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.25%)</title><rect x="171" y="180" width="3" height="15" fill="rgb(221,97,17)"/><text x="174.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (5 samples, 1.27%)</title><rect x="174" y="180" width="15" height="15" fill="rgb(252,126,0)"/><text x="177.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.25%)</title><rect x="189" y="180" width="3" height="15" fill="rgb(239,12,43)"/><text x="192.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (2 samples, 0.51%)</title><rect x="192" y="180" width="6" height="15" fill="rgb(249,18,51)"/><text x="195.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.51%)</title><rect x="213" y="212" width="6" height="15" fill="rgb(213,49,40)"/><text x="216.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (7 samples, 1.78%)</title><rect x="201" y="196" width="21" height="15" fill="rgb(241,111,1)"/><text x="204.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.25%)</title><rect x="219" y="212" width="3" height="15" fill="rgb(250,136,40)"/><text x="222.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.25%)</title><rect x="222" y="228" width="3" height="15" fill="rgb(218,218,51)"/><text x="225.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (4 samples, 1.02%)</title><rect x="222" y="212" width="12" height="15" fill="rgb(236,25,6)"/><text x="225.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (3 samples, 0.76%)</title><rect x="225" y="228" width="9" height="15" fill="rgb(226,47,6)"/><text x="228.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:39) (1 samples, 0.25%)</title><rect x="231" y="244" width="3" height="15" fill="rgb(248,7,26)"/><text x="234.00" y="254.50"></text></g><g><title>get_active_backend (joblib/parallel.py:118) (2 samples, 0.51%)</title><rect x="234" y="212" width="6" height="15" fill="rgb(244,50,35)"/><text x="237.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (16 samples, 4.06%)</title><rect x="198" y="180" width="48" height="15" fill="rgb(239,81,4)"/><text x="201.00" y="190.50">disp..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (8 samples, 2.03%)</title><rect x="222" y="196" width="24" height="15" fill="rgb(250,122,11)"/><text x="225.00" y="206.50">g..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.51%)</title><rect x="240" y="212" width="6" height="15" fill="rgb(214,216,46)"/><text x="243.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.25%)</title><rect x="246" y="180" width="3" height="15" fill="rgb(219,182,5)"/><text x="249.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.25%)</title><rect x="246" y="196" width="3" height="15" fill="rgb(209,91,7)"/><text x="249.00" y="206.50"></text></g><g><title>put (queue.py:132) (2 samples, 0.51%)</title><rect x="252" y="196" width="6" height="15" fill="rgb(217,144,40)"/><text x="255.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (2 samples, 0.51%)</title><rect x="252" y="212" width="6" height="15" fill="rgb(234,224,9)"/><text x="255.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="255" y="228" width="3" height="15" fill="rgb(213,126,39)"/><text x="258.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.25%)</title><rect x="255" y="244" width="3" height="15" fill="rgb(219,173,21)"/><text x="258.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="255" y="260" width="3" height="15" fill="rgb(205,191,47)"/><text x="258.00" y="270.50"></text></g><g><title>notify (threading.py:335) (1 samples, 0.25%)</title><rect x="264" y="212" width="3" height="15" fill="rgb(239,35,48)"/><text x="267.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (7 samples, 1.78%)</title><rect x="249" y="180" width="21" height="15" fill="rgb(250,15,52)"/><text x="252.00" y="190.50"></text></g><g><title>put (queue.py:151) (4 samples, 1.02%)</title><rect x="258" y="196" width="12" height="15" fill="rgb(220,206,52)"/><text x="261.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.25%)</title><rect x="267" y="212" width="3" height="15" fill="rgb(212,158,12)"/><text x="270.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.25%)</title><rect x="267" y="228" width="3" height="15" fill="rgb(247,7,13)"/><text x="270.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="267" y="244" width="3" height="15" fill="rgb(254,51,3)"/><text x="270.00" y="254.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.51%)</title><rect x="273" y="196" width="6" height="15" fill="rgb(244,26,52)"/><text x="276.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.25%)</title><rect x="276" y="212" width="3" height="15" fill="rgb(225,122,28)"/><text x="279.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.25%)</title><rect x="276" y="228" width="3" height="15" fill="rgb(251,185,25)"/><text x="279.00" y="238.50"></text></g><g><title>get (queue.py:166) (3 samples, 0.76%)</title><rect x="279" y="196" width="9" height="15" fill="rgb(228,161,19)"/><text x="282.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.25%)</title><rect x="285" y="212" width="3" height="15" fill="rgb(244,117,19)"/><text x="288.00" y="222.50"></text></g><g><title>notify (threading.py:348) (2 samples, 0.51%)</title><rect x="288" y="212" width="6" height="15" fill="rgb(218,87,14)"/><text x="291.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (9 samples, 2.28%)</title><rect x="270" y="180" width="27" height="15" fill="rgb(212,42,19)"/><text x="273.00" y="190.50">d..</text></g><g><title>get (queue.py:181) (3 samples, 0.76%)</title><rect x="288" y="196" width="9" height="15" fill="rgb(248,142,39)"/><text x="291.00" y="206.50"></text></g><g><title>notify (threading.py:349) (1 samples, 0.25%)</title><rect x="294" y="212" width="3" height="15" fill="rgb(232,12,8)"/><text x="297.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (2 samples, 0.51%)</title><rect x="297" y="180" width="6" height="15" fill="rgb(242,50,29)"/><text x="300.00" y="190.50"></text></g><g><title>__len__ (joblib/parallel.py:259) (1 samples, 0.25%)</title><rect x="300" y="196" width="3" height="15" fill="rgb(227,140,35)"/><text x="303.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.25%)</title><rect x="303" y="196" width="3" height="15" fill="rgb(245,67,2)"/><text x="306.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.25%)</title><rect x="306" y="196" width="3" height="15" fill="rgb(244,62,28)"/><text x="309.00" y="206.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.25%)</title><rect x="306" y="212" width="3" height="15" fill="rgb(252,165,9)"/><text x="309.00" y="222.50"></text></g><g><title>0x7fff43588bb2 ([vdso]) (1 samples, 0.25%)</title><rect x="306" y="228" width="3" height="15" fill="rgb(247,26,38)"/><text x="309.00" y="238.50"></text></g><g><title>0x7fff43588949 ([vdso]) (1 samples, 0.25%)</title><rect x="306" y="244" width="3" height="15" fill="rgb(206,1,5)"/><text x="309.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (3 samples, 0.76%)</title><rect x="309" y="196" width="9" height="15" fill="rgb(214,189,3)"/><text x="312.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:329) (1 samples, 0.25%)</title><rect x="315" y="212" width="3" height="15" fill="rgb(237,173,37)"/><text x="318.00" y="222.50"></text></g><g><title>__init__ (joblib/parallel.py:181) (1 samples, 0.25%)</title><rect x="330" y="260" width="3" height="15" fill="rgb(214,133,22)"/><text x="333.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (5 samples, 1.27%)</title><rect x="324" y="244" width="15" height="15" fill="rgb(205,1,36)"/><text x="327.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (2 samples, 0.51%)</title><rect x="333" y="260" width="6" height="15" fill="rgb(239,66,13)"/><text x="336.00" y="270.50"></text></g><g><title>0x7f03598eee6d (libc-2.29.so) (1 samples, 0.25%)</title><rect x="336" y="276" width="3" height="15" fill="rgb(229,95,46)"/><text x="339.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.25%)</title><rect x="348" y="292" width="3" height="15" fill="rgb(243,216,35)"/><text x="351.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.25%)</title><rect x="348" y="308" width="3" height="15" fill="rgb(211,183,25)"/><text x="351.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.25%)</title><rect x="348" y="324" width="3" height="15" fill="rgb(216,71,45)"/><text x="351.00" y="334.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (4 samples, 1.02%)</title><rect x="351" y="308" width="12" height="15" fill="rgb(224,102,50)"/><text x="354.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (3 samples, 0.76%)</title><rect x="354" y="324" width="9" height="15" fill="rgb(252,62,52)"/><text x="357.00" y="334.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.78%)</title><rect x="378" y="324" width="21" height="15" fill="rgb(224,162,41)"/><text x="381.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.02%)</title><rect x="387" y="340" width="12" height="15" fill="rgb(242,82,28)"/><text x="390.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (18 samples, 4.57%)</title><rect x="351" y="292" width="54" height="15" fill="rgb(224,89,33)"/><text x="354.00" y="302.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (14 samples, 3.55%)</title><rect x="363" y="308" width="42" height="15" fill="rgb(209,11,43)"/><text x="366.00" y="318.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.51%)</title><rect x="399" y="324" width="6" height="15" fill="rgb(207,130,6)"/><text x="402.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.25%)</title><rect x="405" y="292" width="3" height="15" fill="rgb(225,181,19)"/><text x="408.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:379) (1 samples, 0.25%)</title><rect x="405" y="308" width="3" height="15" fill="rgb(238,169,35)"/><text x="408.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.25%)</title><rect x="408" y="372" width="3" height="15" fill="rgb(215,197,38)"/><text x="411.00" y="382.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.25%)</title><rect x="408" y="388" width="3" height="15" fill="rgb(246,12,3)"/><text x="411.00" y="398.50"></text></g><g><title>0x7f033330bd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="408" y="340" width="6" height="15" fill="rgb(208,93,30)"/><text x="411.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.51%)</title><rect x="408" y="356" width="6" height="15" fill="rgb(212,195,43)"/><text x="411.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.25%)</title><rect x="411" y="372" width="3" height="15" fill="rgb(233,13,34)"/><text x="414.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.25%)</title><rect x="411" y="388" width="3" height="15" fill="rgb(245,89,25)"/><text x="414.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.25%)</title><rect x="411" y="404" width="3" height="15" fill="rgb(226,14,4)"/><text x="414.00" y="414.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.25%)</title><rect x="411" y="420" width="3" height="15" fill="rgb(245,49,45)"/><text x="414.00" y="430.50"></text></g><g><title>0x7f033331bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.76%)</title><rect x="408" y="324" width="9" height="15" fill="rgb(224,157,16)"/><text x="411.00" y="334.50"></text></g><g><title>0x7f033330bd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="414" y="340" width="3" height="15" fill="rgb(238,186,21)"/><text x="417.00" y="350.50"></text></g><g><title>0x7f03332f8bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="414" y="356" width="3" height="15" fill="rgb(210,9,40)"/><text x="417.00" y="366.50"></text></g><g><title>0x7f03332ffd60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="414" y="372" width="3" height="15" fill="rgb(210,18,3)"/><text x="417.00" y="382.50"></text></g><g><title>0x7f033332a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="417" y="356" width="3" height="15" fill="rgb(225,2,14)"/><text x="420.00" y="366.50"></text></g><g><title>0x7f033330ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="417" y="372" width="3" height="15" fill="rgb(226,177,29)"/><text x="420.00" y="382.50"></text></g><g><title>0x7f033330e666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="417" y="388" width="3" height="15" fill="rgb(243,44,35)"/><text x="420.00" y="398.50"></text></g><g><title>0x7f03333042fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="417" y="404" width="3" height="15" fill="rgb(228,78,2)"/><text x="420.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.25%)</title><rect x="417" y="420" width="3" height="15" fill="rgb(239,61,19)"/><text x="420.00" y="430.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.25%)</title><rect x="417" y="436" width="3" height="15" fill="rgb(253,147,48)"/><text x="420.00" y="446.50"></text></g><g><title>0x7f033332a319 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="420" y="356" width="3" height="15" fill="rgb(240,15,48)"/><text x="423.00" y="366.50"></text></g><g><title>0x7f033332a456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="423" y="356" width="3" height="15" fill="rgb(249,8,50)"/><text x="426.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.51%)</title><rect x="426" y="372" width="6" height="15" fill="rgb(221,163,32)"/><text x="429.00" y="382.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:128) (2 samples, 0.51%)</title><rect x="432" y="436" width="6" height="15" fill="rgb(215,228,11)"/><text x="435.00" y="446.50"></text></g><g><title>0x7f03598d9b12 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="444" y="484" width="3" height="15" fill="rgb(216,214,30)"/><text x="447.00" y="494.50"></text></g><g><title>0x7f033332a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.03%)</title><rect x="426" y="356" width="24" height="15" fill="rgb(212,52,18)"/><text x="429.00" y="366.50">0..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (6 samples, 1.52%)</title><rect x="432" y="372" width="18" height="15" fill="rgb(215,180,29)"/><text x="435.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (6 samples, 1.52%)</title><rect x="432" y="388" width="18" height="15" fill="rgb(236,157,45)"/><text x="435.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (6 samples, 1.52%)</title><rect x="432" y="404" width="18" height="15" fill="rgb(224,165,38)"/><text x="435.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (6 samples, 1.52%)</title><rect x="432" y="420" width="18" height="15" fill="rgb(222,157,6)"/><text x="435.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (4 samples, 1.02%)</title><rect x="438" y="436" width="12" height="15" fill="rgb(215,111,26)"/><text x="441.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (4 samples, 1.02%)</title><rect x="438" y="452" width="12" height="15" fill="rgb(254,42,47)"/><text x="441.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (4 samples, 1.02%)</title><rect x="438" y="468" width="12" height="15" fill="rgb(232,70,17)"/><text x="441.00" y="478.50"></text></g><g><title>0x7f03598da700 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="447" y="484" width="3" height="15" fill="rgb(248,101,35)"/><text x="450.00" y="494.50"></text></g><g><title>0x7f03598d7aa4 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="447" y="500" width="3" height="15" fill="rgb(237,132,19)"/><text x="450.00" y="510.50"></text></g><g><title>0x7f033332a693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="450" y="356" width="6" height="15" fill="rgb(207,148,27)"/><text x="453.00" y="366.50"></text></g><g><title>0x7f033332a69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="456" y="356" width="3" height="15" fill="rgb(246,188,17)"/><text x="459.00" y="366.50"></text></g><g><title>0x7f033332a6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="459" y="356" width="3" height="15" fill="rgb(224,107,38)"/><text x="462.00" y="366.50"></text></g><g><title>0x7f033332a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 2.28%)</title><rect x="462" y="356" width="27" height="15" fill="rgb(234,117,41)"/><text x="465.00" y="366.50">0..</text></g><g><title>0x7f033332a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="489" y="356" width="6" height="15" fill="rgb(231,175,51)"/><text x="492.00" y="366.50"></text></g><g><title>0x7f033332a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="495" y="356" width="6" height="15" fill="rgb(234,32,34)"/><text x="498.00" y="366.50"></text></g><g><title>0x7f033332a6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="501" y="356" width="6" height="15" fill="rgb(245,32,37)"/><text x="504.00" y="366.50"></text></g><g><title>0x7f033332b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 7.87%)</title><rect x="417" y="340" width="93" height="15" fill="rgb(239,145,40)"/><text x="420.00" y="350.50">0x7f033332b..</text></g><g><title>0x7f033332a6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="507" y="356" width="3" height="15" fill="rgb(244,193,42)"/><text x="510.00" y="366.50"></text></g><g><title>0x7f0333300178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="510" y="356" width="3" height="15" fill="rgb(207,148,6)"/><text x="513.00" y="366.50"></text></g><g><title>0x7f033331bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (33 samples, 8.38%)</title><rect x="417" y="324" width="99" height="15" fill="rgb(207,189,11)"/><text x="420.00" y="334.50">0x7f033331b..</text></g><g><title>0x7f033332b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="510" y="340" width="6" height="15" fill="rgb(237,106,11)"/><text x="513.00" y="350.50"></text></g><g><title>0x7f03333002f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="513" y="356" width="3" height="15" fill="rgb(242,37,8)"/><text x="516.00" y="366.50"></text></g><g><title>0x7f03332ff530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="513" y="372" width="3" height="15" fill="rgb(238,160,26)"/><text x="516.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.25%)</title><rect x="513" y="388" width="3" height="15" fill="rgb(228,130,38)"/><text x="516.00" y="398.50"></text></g><g><title>array_take (methods.c:131) (1 samples, 0.25%)</title><rect x="516" y="340" width="3" height="15" fill="rgb(232,193,12)"/><text x="519.00" y="350.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.25%)</title><rect x="525" y="356" width="3" height="15" fill="rgb(253,175,37)"/><text x="528.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 1.02%)</title><rect x="519" y="340" width="12" height="15" fill="rgb(235,30,46)"/><text x="522.00" y="350.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.25%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(247,76,16)"/><text x="531.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3954) (1 samples, 0.25%)</title><rect x="531" y="372" width="3" height="15" fill="rgb(219,169,41)"/><text x="534.00" y="382.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.51%)</title><rect x="531" y="356" width="6" height="15" fill="rgb(210,106,27)"/><text x="534.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (1 samples, 0.25%)</title><rect x="534" y="372" width="3" height="15" fill="rgb(251,9,22)"/><text x="537.00" y="382.50"></text></g><g><title>0x7f033331c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.03%)</title><rect x="516" y="324" width="24" height="15" fill="rgb(240,115,30)"/><text x="519.00" y="334.50">0..</text></g><g><title>array_take (methods.c:145) (3 samples, 0.76%)</title><rect x="531" y="340" width="9" height="15" fill="rgb(245,188,42)"/><text x="534.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.25%)</title><rect x="537" y="356" width="3" height="15" fill="rgb(227,121,39)"/><text x="540.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.25%)</title><rect x="537" y="372" width="3" height="15" fill="rgb(207,115,35)"/><text x="540.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.25%)</title><rect x="537" y="388" width="3" height="15" fill="rgb(209,41,8)"/><text x="540.00" y="398.50"></text></g><g><title>_array_fill_strides (ctors.c:4130) (1 samples, 0.25%)</title><rect x="537" y="404" width="3" height="15" fill="rgb(206,32,54)"/><text x="540.00" y="414.50"></text></g><g><title>0x7f033331c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="540" y="324" width="6" height="15" fill="rgb(232,218,36)"/><text x="543.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.51%)</title><rect x="540" y="340" width="6" height="15" fill="rgb(247,214,28)"/><text x="543.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.51%)</title><rect x="540" y="356" width="6" height="15" fill="rgb(249,21,32)"/><text x="543.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 0.51%)</title><rect x="540" y="372" width="6" height="15" fill="rgb(219,61,0)"/><text x="543.00" y="382.50"></text></g><g><title>0x7f033331c18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="546" y="324" width="3" height="15" fill="rgb(254,82,15)"/><text x="549.00" y="334.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.25%)</title><rect x="549" y="340" width="3" height="15" fill="rgb(229,197,36)"/><text x="552.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:125) (1 samples, 0.25%)</title><rect x="549" y="356" width="3" height="15" fill="rgb(226,66,45)"/><text x="552.00" y="366.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.25%)</title><rect x="549" y="372" width="3" height="15" fill="rgb(235,45,34)"/><text x="552.00" y="382.50"></text></g><g><title>PyArray_Newshape (shape.c:240) (1 samples, 0.25%)</title><rect x="552" y="372" width="3" height="15" fill="rgb(216,216,49)"/><text x="555.00" y="382.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (50 samples, 12.69%)</title><rect x="408" y="292" width="150" height="15" fill="rgb(206,189,48)"/><text x="411.00" y="302.50">predict (sklearn/tr..</text></g><g><title>0x7f033331cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (50 samples, 12.69%)</title><rect x="408" y="308" width="150" height="15" fill="rgb(205,65,24)"/><text x="411.00" y="318.50">0x7f033331cd2e (skl..</text></g><g><title>0x7f033331c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.76%)</title><rect x="549" y="324" width="9" height="15" fill="rgb(246,208,18)"/><text x="552.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (2 samples, 0.51%)</title><rect x="552" y="340" width="6" height="15" fill="rgb(241,212,23)"/><text x="555.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.51%)</title><rect x="552" y="356" width="6" height="15" fill="rgb(249,194,40)"/><text x="555.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.25%)</title><rect x="555" y="372" width="3" height="15" fill="rgb(243,142,2)"/><text x="558.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1134) (1 samples, 0.25%)</title><rect x="555" y="388" width="3" height="15" fill="rgb(226,216,32)"/><text x="558.00" y="398.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.76%)</title><rect x="558" y="292" width="9" height="15" fill="rgb(218,117,22)"/><text x="561.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.51%)</title><rect x="561" y="308" width="6" height="15" fill="rgb(242,215,53)"/><text x="564.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.25%)</title><rect x="567" y="308" width="3" height="15" fill="rgb(252,48,32)"/><text x="570.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:418) (1 samples, 0.25%)</title><rect x="567" y="324" width="3" height="15" fill="rgb(216,218,50)"/><text x="570.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (75 samples, 19.04%)</title><rect x="348" y="276" width="225" height="15" fill="rgb(247,14,2)"/><text x="351.00" y="286.50">_accumulate_prediction (sklea..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.51%)</title><rect x="567" y="292" width="6" height="15" fill="rgb(211,73,36)"/><text x="570.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.25%)</title><rect x="570" y="308" width="3" height="15" fill="rgb(254,183,38)"/><text x="573.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.25%)</title><rect x="570" y="324" width="3" height="15" fill="rgb(250,6,19)"/><text x="573.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.25%)</title><rect x="570" y="340" width="3" height="15" fill="rgb(234,46,17)"/><text x="573.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.25%)</title><rect x="570" y="356" width="3" height="15" fill="rgb(236,203,47)"/><text x="573.00" y="366.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.25%)</title><rect x="570" y="372" width="3" height="15" fill="rgb(245,133,48)"/><text x="573.00" y="382.50"></text></g><g><title>array_inplace_add (number.c:708) (1 samples, 0.25%)</title><rect x="576" y="292" width="3" height="15" fill="rgb(251,146,1)"/><text x="579.00" y="302.50"></text></g><g><title>array_inplace_add (number.c:711) (1 samples, 0.25%)</title><rect x="579" y="292" width="3" height="15" fill="rgb(250,219,52)"/><text x="582.00" y="302.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c:303) (1 samples, 0.25%)</title><rect x="579" y="308" width="3" height="15" fill="rgb(242,109,2)"/><text x="582.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.25%)</title><rect x="582" y="292" width="3" height="15" fill="rgb(251,80,35)"/><text x="585.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.25%)</title><rect x="582" y="308" width="3" height="15" fill="rgb(235,222,39)"/><text x="585.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.25%)</title><rect x="582" y="324" width="3" height="15" fill="rgb(241,226,1)"/><text x="585.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.25%)</title><rect x="582" y="340" width="3" height="15" fill="rgb(234,24,14)"/><text x="585.00" y="350.50"></text></g><g><title>PyUFunc_AdditionTypeResolver (ufunc_type_resolution.c:694) (1 samples, 0.25%)</title><rect x="585" y="324" width="3" height="15" fill="rgb(244,17,48)"/><text x="588.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.51%)</title><rect x="585" y="308" width="6" height="15" fill="rgb(210,0,25)"/><text x="588.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.25%)</title><rect x="588" y="324" width="3" height="15" fill="rgb(245,23,47)"/><text x="591.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.25%)</title><rect x="588" y="340" width="3" height="15" fill="rgb(220,213,7)"/><text x="591.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.25%)</title><rect x="588" y="356" width="3" height="15" fill="rgb(216,165,19)"/><text x="591.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (1 samples, 0.25%)</title><rect x="588" y="372" width="3" height="15" fill="rgb(248,65,33)"/><text x="591.00" y="382.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (1 samples, 0.25%)</title><rect x="588" y="388" width="3" height="15" fill="rgb(241,108,25)"/><text x="591.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.25%)</title><rect x="591" y="308" width="3" height="15" fill="rgb(243,193,47)"/><text x="594.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.25%)</title><rect x="591" y="324" width="3" height="15" fill="rgb(247,11,36)"/><text x="594.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.25%)</title><rect x="594" y="356" width="3" height="15" fill="rgb(225,15,49)"/><text x="597.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.25%)</title><rect x="594" y="372" width="3" height="15" fill="rgb(246,14,37)"/><text x="597.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="594" y="388" width="3" height="15" fill="rgb(247,96,48)"/><text x="597.00" y="398.50"></text></g><g><title>0x7f03598907a5 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="594" y="404" width="3" height="15" fill="rgb(230,188,11)"/><text x="597.00" y="414.50"></text></g><g><title>0x7f03598f8d50 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="594" y="420" width="3" height="15" fill="rgb(224,216,13)"/><text x="597.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.51%)</title><rect x="594" y="324" width="6" height="15" fill="rgb(239,23,44)"/><text x="597.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.51%)</title><rect x="594" y="340" width="6" height="15" fill="rgb(245,31,3)"/><text x="597.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.25%)</title><rect x="597" y="356" width="3" height="15" fill="rgb(240,158,31)"/><text x="600.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.25%)</title><rect x="597" y="372" width="3" height="15" fill="rgb(211,73,5)"/><text x="600.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.25%)</title><rect x="597" y="388" width="3" height="15" fill="rgb(213,215,53)"/><text x="600.00" y="398.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.25%)</title><rect x="597" y="404" width="3" height="15" fill="rgb(216,120,53)"/><text x="600.00" y="414.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:241) (1 samples, 0.25%)</title><rect x="597" y="420" width="3" height="15" fill="rgb(234,36,16)"/><text x="600.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (2 samples, 0.51%)</title><rect x="600" y="324" width="5" height="15" fill="rgb(253,94,17)"/><text x="603.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (2 samples, 0.51%)</title><rect x="600" y="340" width="5" height="15" fill="rgb(206,227,3)"/><text x="603.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (2 samples, 0.51%)</title><rect x="600" y="356" width="5" height="15" fill="rgb(250,177,11)"/><text x="603.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (2 samples, 0.51%)</title><rect x="600" y="372" width="5" height="15" fill="rgb(240,166,43)"/><text x="603.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (2 samples, 0.51%)</title><rect x="600" y="388" width="5" height="15" fill="rgb(238,113,17)"/><text x="603.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (2 samples, 0.51%)</title><rect x="600" y="404" width="5" height="15" fill="rgb(206,4,30)"/><text x="603.00" y="414.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 2.28%)</title><rect x="585" y="292" width="26" height="15" fill="rgb(229,5,31)"/><text x="588.00" y="302.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (6 samples, 1.52%)</title><rect x="594" y="308" width="17" height="15" fill="rgb(218,220,54)"/><text x="597.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (2 samples, 0.51%)</title><rect x="605" y="324" width="6" height="15" fill="rgb(209,135,52)"/><text x="608.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (2 samples, 0.51%)</title><rect x="605" y="340" width="6" height="15" fill="rgb(247,25,39)"/><text x="608.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (2 samples, 0.51%)</title><rect x="605" y="356" width="6" height="15" fill="rgb(209,227,12)"/><text x="608.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (14 samples, 3.55%)</title><rect x="573" y="276" width="41" height="15" fill="rgb(246,228,22)"/><text x="576.00" y="286.50">_ac..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.25%)</title><rect x="611" y="292" width="3" height="15" fill="rgb(212,31,49)"/><text x="614.00" y="302.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.25%)</title><rect x="611" y="308" width="3" height="15" fill="rgb(250,145,29)"/><text x="614.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (91 samples, 23.10%)</title><rect x="345" y="260" width="272" height="15" fill="rgb(209,130,25)"/><text x="348.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (1 samples, 0.25%)</title><rect x="614" y="276" width="3" height="15" fill="rgb(223,96,35)"/><text x="617.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="614" y="292" width="3" height="15" fill="rgb(235,189,13)"/><text x="617.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="614" y="308" width="3" height="15" fill="rgb(252,105,33)"/><text x="617.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (103 samples, 26.14%)</title><rect x="321" y="212" width="308" height="15" fill="rgb(240,140,25)"/><text x="324.00" y="222.50">apply_async (joblib/_parallel_backends.py..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (103 samples, 26.14%)</title><rect x="321" y="228" width="308" height="15" fill="rgb(227,228,7)"/><text x="324.00" y="238.50">__init__ (joblib/_parallel_backends.py:58..</text></g><g><title>__call__ (joblib/parallel.py:256) (97 samples, 24.62%)</title><rect x="339" y="244" width="290" height="15" fill="rgb(232,1,9)"/><text x="342.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (4 samples, 1.02%)</title><rect x="617" y="260" width="12" height="15" fill="rgb(208,133,6)"/><text x="620.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (3 samples, 0.76%)</title><rect x="620" y="276" width="9" height="15" fill="rgb(240,138,34)"/><text x="623.00" y="286.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.25%)</title><rect x="629" y="228" width="3" height="15" fill="rgb(248,179,23)"/><text x="632.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.51%)</title><rect x="632" y="228" width="6" height="15" fill="rgb(221,91,24)"/><text x="635.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:337) (2 samples, 0.51%)</title><rect x="638" y="228" width="6" height="15" fill="rgb(235,102,9)"/><text x="641.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (111 samples, 28.17%)</title><rect x="318" y="196" width="332" height="15" fill="rgb(247,201,28)"/><text x="321.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (7 samples, 1.78%)</title><rect x="629" y="212" width="21" height="15" fill="rgb(253,78,44)"/><text x="632.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:339) (2 samples, 0.51%)</title><rect x="644" y="228" width="6" height="15" fill="rgb(207,34,30)"/><text x="647.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (183 samples, 46.45%)</title><rect x="105" y="164" width="548" height="15" fill="rgb(254,14,25)"/><text x="108.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (117 samples, 29.70%)</title><rect x="303" y="180" width="350" height="15" fill="rgb(246,114,12)"/><text x="306.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.25%)</title><rect x="650" y="196" width="3" height="15" fill="rgb(209,95,40)"/><text x="653.00" y="206.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="650" y="212" width="3" height="15" fill="rgb(209,213,29)"/><text x="653.00" y="222.50"></text></g><g><title>0x7f03598db11e (libc-2.29.so) (1 samples, 0.25%)</title><rect x="650" y="228" width="3" height="15" fill="rgb(242,100,40)"/><text x="653.00" y="238.50"></text></g><g><title>0x7f03598d9f2e (libc-2.29.so) (1 samples, 0.25%)</title><rect x="650" y="244" width="3" height="15" fill="rgb(249,10,0)"/><text x="653.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (1 samples, 0.25%)</title><rect x="653" y="164" width="3" height="15" fill="rgb(221,39,13)"/><text x="656.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:907) (1 samples, 0.25%)</title><rect x="653" y="180" width="3" height="15" fill="rgb(211,110,45)"/><text x="656.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (187 samples, 47.46%)</title><rect x="99" y="148" width="560" height="15" fill="rgb(254,110,11)"/><text x="102.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1021) (1 samples, 0.25%)</title><rect x="656" y="164" width="3" height="15" fill="rgb(219,168,26)"/><text x="659.00" y="174.50"></text></g><g><title>_print (joblib/parallel.py:841) (1 samples, 0.25%)</title><rect x="656" y="180" width="3" height="15" fill="rgb(220,133,27)"/><text x="659.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:54) (192 samples, 48.73%)</title><rect x="87" y="52" width="575" height="15" fill="rgb(234,94,12)"/><text x="90.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:53) (192 samples, 48.73%)</title><rect x="87" y="68" width="575" height="15" fill="rgb(232,176,1)"/><text x="90.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37) (192 samples, 48.73%)</title><rect x="87" y="84" width="575" height="15" fill="rgb(209,29,30)"/><text x="90.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:3..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31) (192 samples, 48.73%)</title><rect x="87" y="100" width="575" height="15" fill="rgb(225,146,6)"/><text x="90.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (192 samples, 48.73%)</title><rect x="87" y="116" width="575" height="15" fill="rgb(216,220,48)"/><text x="90.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (192 samples, 48.73%)</title><rect x="87" y="132" width="575" height="15" fill="rgb(219,207,15)"/><text x="90.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:784) (1 samples, 0.25%)</title><rect x="659" y="148" width="3" height="15" fill="rgb(222,203,43)"/><text x="662.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.25%)</title><rect x="659" y="164" width="3" height="15" fill="rgb(249,181,28)"/><text x="662.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.25%)</title><rect x="659" y="180" width="3" height="15" fill="rgb(226,162,12)"/><text x="662.00" y="190.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (1 samples, 0.25%)</title><rect x="659" y="196" width="3" height="15" fill="rgb(221,189,1)"/><text x="662.00" y="206.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1688) (1 samples, 0.25%)</title><rect x="659" y="212" width="3" height="15" fill="rgb(251,59,6)"/><text x="662.00" y="222.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.25%)</title><rect x="659" y="228" width="3" height="15" fill="rgb(243,23,30)"/><text x="662.00" y="238.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:36) (1 samples, 0.25%)</title><rect x="662" y="84" width="3" height="15" fill="rgb(223,186,48)"/><text x="665.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.25%)</title><rect x="662" y="100" width="3" height="15" fill="rgb(225,215,48)"/><text x="665.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.25%)</title><rect x="662" y="116" width="3" height="15" fill="rgb(212,119,30)"/><text x="665.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.25%)</title><rect x="662" y="132" width="3" height="15" fill="rgb(214,170,23)"/><text x="665.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.25%)</title><rect x="662" y="148" width="3" height="15" fill="rgb(212,119,15)"/><text x="665.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.25%)</title><rect x="662" y="164" width="3" height="15" fill="rgb(214,106,13)"/><text x="665.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.25%)</title><rect x="662" y="180" width="3" height="15" fill="rgb(222,30,1)"/><text x="665.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.25%)</title><rect x="662" y="196" width="3" height="15" fill="rgb(237,23,6)"/><text x="665.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="662" y="212" width="3" height="15" fill="rgb(253,222,17)"/><text x="665.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="662" y="228" width="3" height="15" fill="rgb(232,59,5)"/><text x="665.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="662" y="244" width="3" height="15" fill="rgb(233,229,29)"/><text x="665.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="662" y="260" width="3" height="15" fill="rgb(252,166,26)"/><text x="665.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="662" y="276" width="3" height="15" fill="rgb(235,103,52)"/><text x="665.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.25%)</title><rect x="662" y="292" width="3" height="15" fill="rgb(206,56,26)"/><text x="665.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.25%)</title><rect x="662" y="308" width="3" height="15" fill="rgb(223,109,26)"/><text x="665.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.25%)</title><rect x="662" y="324" width="3" height="15" fill="rgb(236,201,30)"/><text x="665.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.25%)</title><rect x="662" y="340" width="3" height="15" fill="rgb(222,202,48)"/><text x="665.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.25%)</title><rect x="662" y="356" width="3" height="15" fill="rgb(220,138,9)"/><text x="665.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.25%)</title><rect x="662" y="372" width="3" height="15" fill="rgb(242,22,17)"/><text x="665.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:88) (1 samples, 0.25%)</title><rect x="662" y="388" width="3" height="15" fill="rgb(234,177,13)"/><text x="665.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py:268) (1 samples, 0.25%)</title><rect x="662" y="404" width="3" height="15" fill="rgb(236,57,45)"/><text x="665.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.25%)</title><rect x="662" y="420" width="3" height="15" fill="rgb(246,42,52)"/><text x="665.00" y="430.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.25%)</title><rect x="662" y="436" width="3" height="15" fill="rgb(207,96,17)"/><text x="665.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="662" y="452" width="3" height="15" fill="rgb(240,97,0)"/><text x="665.00" y="462.50"></text></g><g><title>root (&lt;template&gt;:48) (1 samples, 0.25%)</title><rect x="662" y="468" width="3" height="15" fill="rgb(206,11,22)"/><text x="665.00" y="478.50"></text></g><g><title>0x7f031a3b154f (?) (1 samples, 0.25%)</title><rect x="665" y="244" width="3" height="15" fill="rgb(253,68,20)"/><text x="668.00" y="254.50"></text></g><g><title>0x7f031a3b765e (?) (1 samples, 0.25%)</title><rect x="665" y="260" width="3" height="15" fill="rgb(253,139,45)"/><text x="668.00" y="270.50"></text></g><g><title>0x7f031a3b750f (?) (1 samples, 0.25%)</title><rect x="665" y="276" width="3" height="15" fill="rgb(253,23,24)"/><text x="668.00" y="286.50"></text></g><g><title>0x7f031a3bdd6c (?) (1 samples, 0.25%)</title><rect x="665" y="292" width="3" height="15" fill="rgb(226,87,3)"/><text x="668.00" y="302.50"></text></g><g><title>0x7f0323894cff (?) (1 samples, 0.25%)</title><rect x="665" y="308" width="3" height="15" fill="rgb(207,98,6)"/><text x="668.00" y="318.50"></text></g><g><title>0x7f031a3a227c (?) (1 samples, 0.25%)</title><rect x="665" y="324" width="3" height="15" fill="rgb(222,84,29)"/><text x="668.00" y="334.50"></text></g><g><title>0x7f031a3a15a8 (?) (1 samples, 0.25%)</title><rect x="665" y="340" width="3" height="15" fill="rgb(242,9,52)"/><text x="668.00" y="350.50"></text></g><g><title>0x7f032389fea9 (libgomp.so.1.0.0) (2 samples, 0.51%)</title><rect x="668" y="484" width="6" height="15" fill="rgb(227,217,30)"/><text x="671.00" y="494.50"></text></g><g><title>0x7f032389eab9 (libgomp.so.1.0.0) (5 samples, 1.27%)</title><rect x="668" y="468" width="15" height="15" fill="rgb(240,15,12)"/><text x="671.00" y="478.50"></text></g><g><title>0x7f032389feab (libgomp.so.1.0.0) (3 samples, 0.76%)</title><rect x="674" y="484" width="9" height="15" fill="rgb(225,176,2)"/><text x="677.00" y="494.50"></text></g><g><title>std::isnan (cmath:642) (1 samples, 0.25%)</title><rect x="698" y="532" width="3" height="15" fill="rgb(237,187,37)"/><text x="701.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (7 samples, 1.78%)</title><rect x="683" y="516" width="21" height="15" fill="rgb(247,58,9)"/><text x="686.00" y="526.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.25%)</title><rect x="701" y="532" width="3" height="15" fill="rgb(224,98,2)"/><text x="704.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:552) (1 samples, 0.25%)</title><rect x="704" y="516" width="3" height="15" fill="rgb(245,175,8)"/><text x="707.00" y="526.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1309) (2 samples, 0.51%)</title><rect x="707" y="548" width="6" height="15" fill="rgb(244,60,41)"/><text x="710.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:623) (2 samples, 0.51%)</title><rect x="707" y="564" width="6" height="15" fill="rgb(205,223,22)"/><text x="710.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1171) (2 samples, 0.51%)</title><rect x="707" y="580" width="6" height="15" fill="rgb(228,31,48)"/><text x="710.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (2 samples, 0.51%)</title><rect x="707" y="596" width="6" height="15" fill="rgb(207,142,45)"/><text x="710.00" y="606.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (4 samples, 1.02%)</title><rect x="713" y="580" width="12" height="15" fill="rgb(252,118,26)"/><text x="716.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1417) (2 samples, 0.51%)</title><rect x="725" y="580" width="6" height="15" fill="rgb(243,123,27)"/><text x="728.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (3 samples, 0.76%)</title><rect x="731" y="580" width="9" height="15" fill="rgb(245,87,49)"/><text x="734.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (12 samples, 3.05%)</title><rect x="707" y="516" width="36" height="15" fill="rgb(235,57,17)"/><text x="710.00" y="526.50">Run..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (12 samples, 3.05%)</title><rect x="707" y="532" width="36" height="15" fill="rgb(224,124,49)"/><text x="710.00" y="542.50">std..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (10 samples, 2.54%)</title><rect x="713" y="548" width="30" height="15" fill="rgb(246,198,26)"/><text x="716.00" y="558.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (10 samples, 2.54%)</title><rect x="713" y="564" width="30" height="15" fill="rgb(219,212,23)"/><text x="716.00" y="574.50">st..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1423) (1 samples, 0.25%)</title><rect x="740" y="580" width="3" height="15" fill="rgb(221,74,46)"/><text x="743.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:558) (1 samples, 0.25%)</title><rect x="743" y="516" width="3" height="15" fill="rgb(246,26,31)"/><text x="746.00" y="526.50"></text></g><g><title>std::vector&lt;std::tuple&lt;long, long, long, float&gt;, std::allocator&lt;std::tuple&lt;long, long, long, float&gt; &gt; &gt;::operator[] (stl_vector.h:796) (1 samples, 0.25%)</title><rect x="743" y="532" width="3" height="15" fill="rgb(240,212,47)"/><text x="746.00" y="542.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (4 samples, 1.02%)</title><rect x="746" y="516" width="12" height="15" fill="rgb(219,166,53)"/><text x="749.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (27 samples, 6.85%)</title><rect x="683" y="484" width="81" height="15" fill="rgb(254,77,47)"/><text x="686.00" y="494.50">RuntimeTr..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (27 samples, 6.85%)</title><rect x="683" y="500" width="81" height="15" fill="rgb(210,93,25)"/><text x="686.00" y="510.50">std::vect..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (2 samples, 0.51%)</title><rect x="758" y="516" width="6" height="15" fill="rgb(235,68,37)"/><text x="761.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:61) (35 samples, 8.88%)</title><rect x="662" y="52" width="105" height="15" fill="rgb(232,78,53)"/><text x="665.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:60) (35 samples, 8.88%)</title><rect x="662" y="68" width="105" height="15" fill="rgb(246,207,36)"/><text x="665.00" y="78.50">profile_pyrt..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37) (34 samples, 8.63%)</title><rect x="665" y="84" width="102" height="15" fill="rgb(248,33,16)"/><text x="668.00" y="94.50">setup_profil..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31) (34 samples, 8.63%)</title><rect x="665" y="100" width="102" height="15" fill="rgb(252,221,29)"/><text x="668.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (34 samples, 8.63%)</title><rect x="665" y="116" width="102" height="15" fill="rgb(229,72,53)"/><text x="668.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (34 samples, 8.63%)</title><rect x="665" y="132" width="102" height="15" fill="rgb(254,25,18)"/><text x="668.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (34 samples, 8.63%)</title><rect x="665" y="148" width="102" height="15" fill="rgb(247,13,36)"/><text x="668.00" y="158.50">run (mlprodi..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (34 samples, 8.63%)</title><rect x="665" y="164" width="102" height="15" fill="rgb(236,124,48)"/><text x="668.00" y="174.50">_run_sequenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (34 samples, 8.63%)</title><rect x="665" y="180" width="102" height="15" fill="rgb(254,140,31)"/><text x="668.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (34 samples, 8.63%)</title><rect x="665" y="196" width="102" height="15" fill="rgb(248,182,53)"/><text x="668.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (34 samples, 8.63%)</title><rect x="665" y="212" width="102" height="15" fill="rgb(225,83,0)"/><text x="668.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (34 samples, 8.63%)</title><rect x="665" y="228" width="102" height="15" fill="rgb(239,93,17)"/><text x="668.00" y="238.50">_run (mlprod..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (33 samples, 8.38%)</title><rect x="668" y="244" width="99" height="15" fill="rgb(232,82,41)"/><text x="671.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (33 samples, 8.38%)</title><rect x="668" y="260" width="99" height="15" fill="rgb(213,126,21)"/><text x="671.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (33 samples, 8.38%)</title><rect x="668" y="276" width="99" height="15" fill="rgb(220,138,15)"/><text x="671.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (33 samples, 8.38%)</title><rect x="668" y="292" width="99" height="15" fill="rgb(218,27,22)"/><text x="671.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (33 samples, 8.38%)</title><rect x="668" y="308" width="99" height="15" fill="rgb(209,32,21)"/><text x="671.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (33 samples, 8.38%)</title><rect x="668" y="324" width="99" height="15" fill="rgb(247,183,44)"/><text x="671.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (33 samples, 8.38%)</title><rect x="668" y="340" width="99" height="15" fill="rgb(237,182,25)"/><text x="671.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h:538) (33 samples, 8.38%)</title><rect x="668" y="356" width="99" height="15" fill="rgb(227,78,29)"/><text x="671.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (33 samples, 8.38%)</title><rect x="668" y="372" width="99" height="15" fill="rgb(211,48,1)"/><text x="671.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (33 samples, 8.38%)</title><rect x="668" y="388" width="99" height="15" fill="rgb(234,99,6)"/><text x="671.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (33 samples, 8.38%)</title><rect x="668" y="404" width="99" height="15" fill="rgb(227,191,43)"/><text x="671.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (33 samples, 8.38%)</title><rect x="668" y="420" width="99" height="15" fill="rgb(210,205,50)"/><text x="671.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::array::size (numpy.h:619) (33 samples, 8.38%)</title><rect x="668" y="436" width="99" height="15" fill="rgb(234,197,27)"/><text x="671.00" y="446.50">pybind11::a..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (33 samples, 8.38%)</title><rect x="668" y="452" width="99" height="15" fill="rgb(237,31,22)"/><text x="671.00" y="462.50">std::accumu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (28 samples, 7.11%)</title><rect x="683" y="468" width="84" height="15" fill="rgb(222,125,19)"/><text x="686.00" y="478.50">GOMP_para..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:372) (1 samples, 0.25%)</title><rect x="764" y="484" width="3" height="15" fill="rgb(209,82,52)"/><text x="767.00" y="494.50"></text></g><g><title>0x7f0319916ff9 (?) (1 samples, 0.25%)</title><rect x="767" y="212" width="3" height="15" fill="rgb(213,49,34)"/><text x="770.00" y="222.50"></text></g><g><title>0x7f0319911ef6 (?) (1 samples, 0.25%)</title><rect x="767" y="228" width="3" height="15" fill="rgb(237,120,11)"/><text x="770.00" y="238.50"></text></g><g><title>0x7f0319906962 (?) (1 samples, 0.25%)</title><rect x="767" y="244" width="3" height="15" fill="rgb(213,24,30)"/><text x="770.00" y="254.50"></text></g><g><title>0x7f031993a7a7 (?) (1 samples, 0.25%)</title><rect x="767" y="260" width="3" height="15" fill="rgb(214,63,32)"/><text x="770.00" y="270.50"></text></g><g><title>0x7f031993a379 (?) (1 samples, 0.25%)</title><rect x="767" y="276" width="3" height="15" fill="rgb(218,158,29)"/><text x="770.00" y="286.50"></text></g><g><title>0x7f0319d988b8 (?) (1 samples, 0.25%)</title><rect x="767" y="292" width="3" height="15" fill="rgb(249,3,16)"/><text x="770.00" y="302.50"></text></g><g><title>0x7f0319d96c7f (?) (1 samples, 0.25%)</title><rect x="767" y="308" width="3" height="15" fill="rgb(225,199,35)"/><text x="770.00" y="318.50"></text></g><g><title>0x7f0319da999c (?) (1 samples, 0.25%)</title><rect x="767" y="324" width="3" height="15" fill="rgb(251,203,13)"/><text x="770.00" y="334.50"></text></g><g><title>0x7f0319ad0dc2 (?) (1 samples, 0.25%)</title><rect x="767" y="340" width="3" height="15" fill="rgb(245,204,3)"/><text x="770.00" y="350.50"></text></g><g><title>0x7f0319ad04c9 (?) (1 samples, 0.25%)</title><rect x="767" y="356" width="3" height="15" fill="rgb(213,218,15)"/><text x="770.00" y="366.50"></text></g><g><title>0x7f03598f9120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="776" y="356" width="3" height="15" fill="rgb(249,174,3)"/><text x="779.00" y="366.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1175" y="404" width="3" height="15" fill="rgb(228,45,51)"/><text x="1178.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1175" y="420" width="3" height="15" fill="rgb(236,49,38)"/><text x="1178.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1175" y="436" width="3" height="15" fill="rgb(233,6,53)"/><text x="1178.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (136 samples, 34.52%)</title><rect x="779" y="356" width="408" height="15" fill="rgb(205,220,48)"/><text x="782.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessT..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="1175" y="372" width="12" height="15" fill="rgb(209,26,29)"/><text x="1178.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="1175" y="388" width="12" height="15" fill="rgb(235,28,25)"/><text x="1178.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (3 samples, 0.76%)</title><rect x="1178" y="404" width="9" height="15" fill="rgb(213,62,27)"/><text x="1181.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="1184" y="420" width="3" height="15" fill="rgb(248,70,16)"/><text x="1187.00" y="430.50"></text></g><g><title>all (394 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(236,95,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:68) (141 samples, 35.79%)</title><rect x="767" y="52" width="423" height="15" fill="rgb(221,209,40)"/><text x="770.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:67) (141 samples, 35.79%)</title><rect x="767" y="68" width="423" height="15" fill="rgb(236,87,8)"/><text x="770.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_b_reg_10..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37) (141 samples, 35.79%)</title><rect x="767" y="84" width="423" height="15" fill="rgb(243,143,24)"/><text x="770.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31) (141 samples, 35.79%)</title><rect x="767" y="100" width="423" height="15" fill="rgb(237,151,4)"/><text x="770.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (141 samples, 35.79%)</title><rect x="767" y="116" width="423" height="15" fill="rgb(237,169,29)"/><text x="770.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (141 samples, 35.79%)</title><rect x="767" y="132" width="423" height="15" fill="rgb(252,171,39)"/><text x="770.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (141 samples, 35.79%)</title><rect x="767" y="148" width="423" height="15" fill="rgb(239,120,37)"/><text x="770.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (141 samples, 35.79%)</title><rect x="767" y="164" width="423" height="15" fill="rgb(225,228,35)"/><text x="770.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:61..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (141 samples, 35.79%)</title><rect x="767" y="180" width="423" height="15" fill="rgb(226,52,15)"/><text x="770.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (141 samples, 35.79%)</title><rect x="767" y="196" width="423" height="15" fill="rgb(238,11,47)"/><text x="770.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="212" width="420" height="15" fill="rgb(252,151,3)"/><text x="773.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnx..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="228" width="420" height="15" fill="rgb(247,209,48)"/><text x="773.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::pyth..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="244" width="420" height="15" fill="rgb(239,119,11)"/><text x="773.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;):..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="260" width="420" height="15" fill="rgb(253,180,20)"/><text x="773.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="276" width="420" height="15" fill="rgb(238,162,10)"/><text x="773.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="292" width="420" height="15" fill="rgb(225,123,5)"/><text x="773.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="308" width="420" height="15" fill="rgb(219,166,15)"/><text x="773.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="324" width="420" height="15" fill="rgb(231,146,36)"/><text x="773.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/cap..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (140 samples, 35.53%)</title><rect x="770" y="340" width="420" height="15" fill="rgb(247,60,19)"/><text x="773.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (o..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(226,8,52)"/><text x="1190.00" y="366.50"></text></g></g></svg>