<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1462" onload="init(evt)" viewBox="0 0 1200 1462" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1462" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1445.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1445.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.28%)</title><rect x="10" y="244" width="3" height="15" fill="rgb(216,104,41)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="10" y="260" width="3" height="15" fill="rgb(235,113,38)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="276" width="3" height="15" fill="rgb(226,1,50)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="292" width="3" height="15" fill="rgb(222,79,20)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="308" width="3" height="15" fill="rgb(253,16,26)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="324" width="3" height="15" fill="rgb(227,119,29)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="340" width="3" height="15" fill="rgb(240,25,19)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="356" width="3" height="15" fill="rgb(219,149,28)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.28%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(218,62,42)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(229,31,21)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(221,11,29)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(222,104,32)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(235,160,47)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(219,144,27)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(207,214,47)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(230,11,47)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:11) (1 samples, 0.28%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(210,147,14)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(242,196,50)"/><text x="13.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(231,168,31)"/><text x="13.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(228,84,51)"/><text x="13.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(225,27,30)"/><text x="13.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(228,29,15)"/><text x="13.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py:116) (1 samples, 0.28%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(252,110,19)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(226,130,22)"/><text x="13.00" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(224,119,51)"/><text x="13.00" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(243,201,47)"/><text x="13.00" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(218,195,37)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(208,174,10)"/><text x="13.00" y="686.50"></text></g><g><title>&lt;module&gt; (subprocess.py:155) (1 samples, 0.28%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(242,195,16)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(248,76,45)"/><text x="13.00" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(221,114,17)"/><text x="13.00" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(254,115,6)"/><text x="13.00" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(245,174,6)"/><text x="13.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(253,110,51)"/><text x="13.00" y="782.50"></text></g><g><title>&lt;module&gt; (threading.py:8) (1 samples, 0.28%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(232,162,10)"/><text x="13.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(210,17,49)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(206,212,30)"/><text x="13.00" y="830.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(234,48,2)"/><text x="13.00" y="846.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(228,8,37)"/><text x="13.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(212,133,18)"/><text x="13.00" y="878.50"></text></g><g><title>&lt;module&gt; (traceback.py:5) (1 samples, 0.28%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(242,105,21)"/><text x="13.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(232,121,35)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.28%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(218,112,22)"/><text x="13.00" y="926.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.28%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(252,203,13)"/><text x="13.00" y="942.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.28%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(246,206,2)"/><text x="13.00" y="958.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.28%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(237,70,2)"/><text x="13.00" y="974.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.28%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(240,72,19)"/><text x="13.00" y="990.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.28%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(247,1,28)"/><text x="13.00" y="1006.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.28%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(247,68,6)"/><text x="13.00" y="1022.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:1) (2 samples, 0.55%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(207,165,1)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(226,227,16)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(216,188,20)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(234,227,49)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(224,215,23)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(227,112,43)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:150) (1 samples, 0.28%)</title><rect x="13" y="244" width="3" height="15" fill="rgb(213,56,4)"/><text x="16.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="13" y="260" width="3" height="15" fill="rgb(231,187,29)"/><text x="16.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="276" width="3" height="15" fill="rgb(247,196,18)"/><text x="16.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="292" width="3" height="15" fill="rgb(209,172,37)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="308" width="3" height="15" fill="rgb(251,45,48)"/><text x="16.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="324" width="3" height="15" fill="rgb(208,38,27)"/><text x="16.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="13" y="340" width="3" height="15" fill="rgb(247,24,43)"/><text x="16.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="356" width="3" height="15" fill="rgb(244,69,32)"/><text x="16.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py:181) (1 samples, 0.28%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(209,210,42)"/><text x="16.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(227,17,29)"/><text x="16.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(214,57,10)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(233,184,19)"/><text x="16.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(243,70,19)"/><text x="16.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(254,27,42)"/><text x="16.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(208,193,11)"/><text x="16.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(238,174,51)"/><text x="16.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py:1) (1 samples, 0.28%)</title><rect x="13" y="500" width="3" height="15" fill="rgb(206,79,6)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="516" width="3" height="15" fill="rgb(251,138,34)"/><text x="16.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(237,117,41)"/><text x="16.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(236,14,17)"/><text x="16.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.28%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(216,113,15)"/><text x="16.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="580" width="3" height="15" fill="rgb(211,9,33)"/><text x="16.00" y="590.50"></text></g><g><title>0x7f3819ab1585 (?) (1 samples, 0.28%)</title><rect x="13" y="596" width="3" height="15" fill="rgb(210,131,3)"/><text x="16.00" y="606.50"></text></g><g><title>0x7f3819ab7075 (?) (1 samples, 0.28%)</title><rect x="13" y="612" width="3" height="15" fill="rgb(214,33,50)"/><text x="16.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="628" width="3" height="15" fill="rgb(242,60,18)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="644" width="3" height="15" fill="rgb(210,191,40)"/><text x="16.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="660" width="3" height="15" fill="rgb(207,154,49)"/><text x="16.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.28%)</title><rect x="13" y="676" width="3" height="15" fill="rgb(225,138,34)"/><text x="16.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="692" width="3" height="15" fill="rgb(212,179,19)"/><text x="16.00" y="702.50"></text></g><g><title>0x7f38193ee543 (?) (1 samples, 0.28%)</title><rect x="13" y="708" width="3" height="15" fill="rgb(211,188,50)"/><text x="16.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="724" width="3" height="15" fill="rgb(241,222,6)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="740" width="3" height="15" fill="rgb(216,82,8)"/><text x="16.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="756" width="3" height="15" fill="rgb(222,11,32)"/><text x="16.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.28%)</title><rect x="13" y="772" width="3" height="15" fill="rgb(232,159,34)"/><text x="16.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="788" width="3" height="15" fill="rgb(221,215,8)"/><text x="16.00" y="798.50"></text></g><g><title>0x7f38191c3b9c (?) (1 samples, 0.28%)</title><rect x="13" y="804" width="3" height="15" fill="rgb(226,143,4)"/><text x="16.00" y="814.50"></text></g><g><title>0x7f38191c7885 (?) (1 samples, 0.28%)</title><rect x="13" y="820" width="3" height="15" fill="rgb(240,11,29)"/><text x="16.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="836" width="3" height="15" fill="rgb(217,44,23)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="852" width="3" height="15" fill="rgb(211,52,11)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(244,195,6)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(223,84,11)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(227,30,7)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py:19) (1 samples, 0.28%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(206,69,36)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(233,56,2)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(242,48,32)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(254,91,28)"/><text x="16.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(220,28,19)"/><text x="16.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(225,176,20)"/><text x="16.00" y="1006.50"></text></g><g><title>&lt;module&gt; (hmac.py:9) (1 samples, 0.28%)</title><rect x="13" y="1012" width="3" height="15" fill="rgb(209,140,26)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="13" y="1028" width="3" height="15" fill="rgb(231,60,53)"/><text x="16.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="13" y="1044" width="3" height="15" fill="rgb(207,133,23)"/><text x="16.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.28%)</title><rect x="13" y="1060" width="3" height="15" fill="rgb(225,204,24)"/><text x="16.00" y="1070.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.28%)</title><rect x="13" y="1076" width="3" height="15" fill="rgb(221,75,31)"/><text x="16.00" y="1086.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.28%)</title><rect x="13" y="1092" width="3" height="15" fill="rgb(216,201,31)"/><text x="16.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="13" y="1108" width="3" height="15" fill="rgb(230,189,31)"/><text x="16.00" y="1118.50"></text></g><g><title>0x7f3818d70201 (?) (1 samples, 0.28%)</title><rect x="13" y="1124" width="3" height="15" fill="rgb(231,78,16)"/><text x="16.00" y="1134.50"></text></g><g><title>0x7f3818b798d7 (?) (1 samples, 0.28%)</title><rect x="13" y="1140" width="3" height="15" fill="rgb(250,153,7)"/><text x="16.00" y="1150.50"></text></g><g><title>0x7f3818be35a9 (?) (1 samples, 0.28%)</title><rect x="13" y="1156" width="3" height="15" fill="rgb(234,217,16)"/><text x="16.00" y="1166.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="13" y="1172" width="3" height="15" fill="rgb(206,117,21)"/><text x="16.00" y="1182.50"></text></g><g><title>0x7f3818b79319 (?) (1 samples, 0.28%)</title><rect x="13" y="1188" width="3" height="15" fill="rgb(220,41,43)"/><text x="16.00" y="1198.50"></text></g><g><title>0x7f3818b5ec99 (?) (1 samples, 0.28%)</title><rect x="13" y="1204" width="3" height="15" fill="rgb(220,113,15)"/><text x="16.00" y="1214.50"></text></g><g><title>0x7f3818b72793 (?) (1 samples, 0.28%)</title><rect x="13" y="1220" width="3" height="15" fill="rgb(252,115,27)"/><text x="16.00" y="1230.50"></text></g><g><title>0x7f3818b87d14 (?) (1 samples, 0.28%)</title><rect x="13" y="1236" width="3" height="15" fill="rgb(233,159,17)"/><text x="16.00" y="1246.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(214,132,16)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.28%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(228,19,31)"/><text x="19.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.28%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(249,141,16)"/><text x="19.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.28%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(243,50,24)"/><text x="19.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.28%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(251,153,42)"/><text x="19.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.28%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(225,86,35)"/><text x="19.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.28%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(218,225,25)"/><text x="19.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.28%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(241,82,35)"/><text x="19.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.28%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(229,189,51)"/><text x="19.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.28%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(237,207,45)"/><text x="19.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.28%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(227,139,26)"/><text x="19.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(211,92,27)"/><text x="19.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.28%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(232,19,9)"/><text x="19.00" y="1054.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(250,28,39)"/><text x="19.00" y="1070.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.28%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(230,165,10)"/><text x="22.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.28%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(253,20,28)"/><text x="22.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.28%)</title><rect x="19" y="948" width="4" height="15" fill="rgb(246,162,50)"/><text x="22.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 0.83%)</title><rect x="16" y="820" width="10" height="15" fill="rgb(243,13,1)"/><text x="19.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 0.83%)</title><rect x="16" y="836" width="10" height="15" fill="rgb(212,4,25)"/><text x="19.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.55%)</title><rect x="19" y="852" width="7" height="15" fill="rgb(223,32,27)"/><text x="22.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.55%)</title><rect x="19" y="868" width="7" height="15" fill="rgb(248,39,38)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 0.55%)</title><rect x="19" y="884" width="7" height="15" fill="rgb(235,86,27)"/><text x="22.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 0.55%)</title><rect x="19" y="900" width="7" height="15" fill="rgb(208,108,47)"/><text x="22.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2031) (1 samples, 0.28%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(247,191,21)"/><text x="26.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:2) (4 samples, 1.10%)</title><rect x="16" y="148" width="13" height="15" fill="rgb(213,49,37)"/><text x="19.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="164" width="13" height="15" fill="rgb(254,157,18)"/><text x="19.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.10%)</title><rect x="16" y="180" width="13" height="15" fill="rgb(210,65,45)"/><text x="19.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="196" width="13" height="15" fill="rgb(215,213,35)"/><text x="19.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="212" width="13" height="15" fill="rgb(222,188,52)"/><text x="19.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="16" y="228" width="13" height="15" fill="rgb(251,225,2)"/><text x="19.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="16" y="244" width="13" height="15" fill="rgb(228,204,36)"/><text x="19.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="16" y="260" width="13" height="15" fill="rgb(214,16,49)"/><text x="19.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="276" width="13" height="15" fill="rgb(253,31,43)"/><text x="19.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.10%)</title><rect x="16" y="292" width="13" height="15" fill="rgb(227,228,37)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="308" width="13" height="15" fill="rgb(232,12,1)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="16" y="324" width="13" height="15" fill="rgb(205,193,25)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="16" y="340" width="13" height="15" fill="rgb(233,171,30)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="16" y="356" width="13" height="15" fill="rgb(210,189,52)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="372" width="13" height="15" fill="rgb(216,27,39)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.10%)</title><rect x="16" y="388" width="13" height="15" fill="rgb(251,33,3)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="404" width="13" height="15" fill="rgb(231,120,5)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="16" y="420" width="13" height="15" fill="rgb(245,3,6)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="16" y="436" width="13" height="15" fill="rgb(217,161,34)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="16" y="452" width="13" height="15" fill="rgb(229,196,40)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="468" width="13" height="15" fill="rgb(214,13,35)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.10%)</title><rect x="16" y="484" width="13" height="15" fill="rgb(254,19,54)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="500" width="13" height="15" fill="rgb(240,122,50)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="16" y="516" width="13" height="15" fill="rgb(211,48,9)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="16" y="532" width="13" height="15" fill="rgb(227,54,37)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="16" y="548" width="13" height="15" fill="rgb(242,45,26)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="564" width="13" height="15" fill="rgb(228,70,30)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.10%)</title><rect x="16" y="580" width="13" height="15" fill="rgb(243,134,24)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="596" width="13" height="15" fill="rgb(235,4,8)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.10%)</title><rect x="16" y="612" width="13" height="15" fill="rgb(234,66,2)"/><text x="19.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="628" width="13" height="15" fill="rgb(233,74,52)"/><text x="19.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="644" width="13" height="15" fill="rgb(216,133,5)"/><text x="19.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="16" y="660" width="13" height="15" fill="rgb(247,74,23)"/><text x="19.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="16" y="676" width="13" height="15" fill="rgb(220,220,25)"/><text x="19.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="16" y="692" width="13" height="15" fill="rgb(252,60,12)"/><text x="19.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="708" width="13" height="15" fill="rgb(227,57,49)"/><text x="19.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.10%)</title><rect x="16" y="724" width="13" height="15" fill="rgb(225,66,31)"/><text x="19.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.10%)</title><rect x="16" y="740" width="13" height="15" fill="rgb(218,164,40)"/><text x="19.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.10%)</title><rect x="16" y="756" width="13" height="15" fill="rgb(205,133,14)"/><text x="19.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.10%)</title><rect x="16" y="772" width="13" height="15" fill="rgb(236,94,40)"/><text x="19.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.10%)</title><rect x="16" y="788" width="13" height="15" fill="rgb(246,81,25)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.10%)</title><rect x="16" y="804" width="13" height="15" fill="rgb(222,111,33)"/><text x="19.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.28%)</title><rect x="26" y="820" width="3" height="15" fill="rgb(217,6,43)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="26" y="836" width="3" height="15" fill="rgb(219,144,25)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="26" y="852" width="3" height="15" fill="rgb(252,46,44)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="26" y="868" width="3" height="15" fill="rgb(244,121,49)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="26" y="884" width="3" height="15" fill="rgb(230,207,12)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="26" y="900" width="3" height="15" fill="rgb(228,194,9)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.28%)</title><rect x="26" y="916" width="3" height="15" fill="rgb(216,217,0)"/><text x="29.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.28%)</title><rect x="26" y="932" width="3" height="15" fill="rgb(211,113,7)"/><text x="29.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="26" y="948" width="3" height="15" fill="rgb(223,115,11)"/><text x="29.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="26" y="964" width="3" height="15" fill="rgb(246,33,18)"/><text x="29.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.28%)</title><rect x="26" y="980" width="3" height="15" fill="rgb(251,105,18)"/><text x="29.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.28%)</title><rect x="26" y="996" width="3" height="15" fill="rgb(223,82,16)"/><text x="29.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="26" y="1012" width="3" height="15" fill="rgb(240,130,13)"/><text x="29.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="26" y="1028" width="3" height="15" fill="rgb(211,183,6)"/><text x="29.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="26" y="1044" width="3" height="15" fill="rgb(225,72,45)"/><text x="29.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="26" y="1060" width="3" height="15" fill="rgb(238,202,31)"/><text x="29.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="26" y="1076" width="3" height="15" fill="rgb(235,178,40)"/><text x="29.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="26" y="1092" width="3" height="15" fill="rgb(242,93,13)"/><text x="29.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="26" y="1108" width="3" height="15" fill="rgb(238,213,12)"/><text x="29.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(222,202,21)"/><text x="29.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(242,104,4)"/><text x="29.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.28%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(238,168,52)"/><text x="29.00" y="1166.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.28%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(233,211,49)"/><text x="29.00" y="1182.50"></text></g><g><title>_parse (sre_parse.py:587) (1 samples, 0.28%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(220,200,52)"/><text x="29.00" y="1198.50"></text></g><g><title>_uniq (sre_parse.py:409) (1 samples, 0.28%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(215,152,22)"/><text x="29.00" y="1214.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:4) (1 samples, 0.28%)</title><rect x="29" y="148" width="3" height="15" fill="rgb(243,95,31)"/><text x="32.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="164" width="3" height="15" fill="rgb(244,70,38)"/><text x="32.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="180" width="3" height="15" fill="rgb(224,41,9)"/><text x="32.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="196" width="3" height="15" fill="rgb(238,15,33)"/><text x="32.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="212" width="3" height="15" fill="rgb(219,205,3)"/><text x="32.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="228" width="3" height="15" fill="rgb(240,97,46)"/><text x="32.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (1 samples, 0.28%)</title><rect x="29" y="244" width="3" height="15" fill="rgb(205,77,6)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="260" width="3" height="15" fill="rgb(217,108,52)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="276" width="3" height="15" fill="rgb(224,67,27)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="292" width="3" height="15" fill="rgb(242,146,21)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="308" width="3" height="15" fill="rgb(249,192,19)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="324" width="3" height="15" fill="rgb(229,150,16)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.28%)</title><rect x="29" y="340" width="3" height="15" fill="rgb(245,175,35)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="356" width="3" height="15" fill="rgb(216,152,20)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="372" width="3" height="15" fill="rgb(214,76,26)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="388" width="3" height="15" fill="rgb(245,43,44)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="404" width="3" height="15" fill="rgb(222,223,53)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="420" width="3" height="15" fill="rgb(224,157,43)"/><text x="32.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.28%)</title><rect x="29" y="436" width="3" height="15" fill="rgb(233,146,13)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="452" width="3" height="15" fill="rgb(216,196,14)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="468" width="3" height="15" fill="rgb(232,220,42)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="484" width="3" height="15" fill="rgb(208,105,17)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="29" y="500" width="3" height="15" fill="rgb(233,206,27)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="29" y="516" width="3" height="15" fill="rgb(251,93,10)"/><text x="32.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py:32) (1 samples, 0.28%)</title><rect x="29" y="532" width="3" height="15" fill="rgb(250,171,52)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="29" y="548" width="3" height="15" fill="rgb(212,44,1)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="29" y="564" width="3" height="15" fill="rgb(238,8,6)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="29" y="580" width="3" height="15" fill="rgb(210,4,9)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.28%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(247,18,0)"/><text x="32.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.28%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(246,224,52)"/><text x="32.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.28%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(236,113,41)"/><text x="32.00" y="638.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.28%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(233,171,43)"/><text x="35.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(208,223,48)"/><text x="35.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(219,193,24)"/><text x="35.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(208,21,23)"/><text x="35.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(224,198,51)"/><text x="35.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(241,208,12)"/><text x="35.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(213,149,19)"/><text x="35.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(238,108,10)"/><text x="35.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.28%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(227,138,0)"/><text x="35.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="32" y="916" width="4" height="15" fill="rgb(253,19,0)"/><text x="35.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="32" y="932" width="4" height="15" fill="rgb(214,170,3)"/><text x="35.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="32" y="948" width="4" height="15" fill="rgb(250,103,26)"/><text x="35.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="32" y="964" width="4" height="15" fill="rgb(216,52,20)"/><text x="35.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="32" y="980" width="4" height="15" fill="rgb(241,77,34)"/><text x="35.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.28%)</title><rect x="32" y="996" width="4" height="15" fill="rgb(235,62,36)"/><text x="35.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="32" y="1012" width="4" height="15" fill="rgb(233,198,0)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="32" y="1028" width="4" height="15" fill="rgb(228,140,43)"/><text x="35.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="32" y="1044" width="4" height="15" fill="rgb(216,92,32)"/><text x="35.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="32" y="1060" width="4" height="15" fill="rgb(252,224,16)"/><text x="35.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="32" y="1076" width="4" height="15" fill="rgb(231,172,7)"/><text x="35.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:59) (1 samples, 0.28%)</title><rect x="32" y="1092" width="4" height="15" fill="rgb(222,89,32)"/><text x="35.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="32" y="1108" width="4" height="15" fill="rgb(212,20,45)"/><text x="35.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="32" y="1124" width="4" height="15" fill="rgb(222,158,25)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="32" y="1140" width="4" height="15" fill="rgb(246,82,16)"/><text x="35.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="32" y="1156" width="4" height="15" fill="rgb(251,170,26)"/><text x="35.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="32" y="1172" width="4" height="15" fill="rgb(212,36,22)"/><text x="35.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="32" y="1188" width="4" height="15" fill="rgb(245,47,27)"/><text x="35.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="32" y="1204" width="4" height="15" fill="rgb(252,112,17)"/><text x="35.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py:1221) (1 samples, 0.28%)</title><rect x="32" y="1220" width="4" height="15" fill="rgb(208,36,38)"/><text x="35.00" y="1230.50"></text></g><g><title>CookieJar (http/cookiejar.py:1230) (1 samples, 0.28%)</title><rect x="32" y="1236" width="4" height="15" fill="rgb(224,153,20)"/><text x="35.00" y="1246.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.28%)</title><rect x="32" y="1252" width="4" height="15" fill="rgb(211,46,9)"/><text x="35.00" y="1262.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.28%)</title><rect x="32" y="1268" width="4" height="15" fill="rgb(246,30,15)"/><text x="35.00" y="1278.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.28%)</title><rect x="32" y="1284" width="4" height="15" fill="rgb(211,115,45)"/><text x="35.00" y="1294.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.28%)</title><rect x="32" y="1300" width="4" height="15" fill="rgb(249,116,44)"/><text x="35.00" y="1310.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.28%)</title><rect x="32" y="1316" width="4" height="15" fill="rgb(244,100,27)"/><text x="35.00" y="1326.50"></text></g><g><title>_compile (sre_compile.py:118) (1 samples, 0.28%)</title><rect x="32" y="1332" width="4" height="15" fill="rgb(252,18,39)"/><text x="35.00" y="1342.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.55%)</title><rect x="32" y="244" width="7" height="15" fill="rgb(253,198,40)"/><text x="35.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="32" y="260" width="7" height="15" fill="rgb(239,7,16)"/><text x="35.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="32" y="276" width="7" height="15" fill="rgb(210,197,25)"/><text x="35.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="32" y="292" width="7" height="15" fill="rgb(231,23,16)"/><text x="35.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="32" y="308" width="7" height="15" fill="rgb(206,23,11)"/><text x="35.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="32" y="324" width="7" height="15" fill="rgb(229,100,54)"/><text x="35.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.55%)</title><rect x="32" y="340" width="7" height="15" fill="rgb(241,129,3)"/><text x="35.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="32" y="356" width="7" height="15" fill="rgb(234,126,20)"/><text x="35.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.55%)</title><rect x="32" y="372" width="7" height="15" fill="rgb(249,216,8)"/><text x="35.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="32" y="388" width="7" height="15" fill="rgb(212,212,12)"/><text x="35.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="32" y="404" width="7" height="15" fill="rgb(253,0,53)"/><text x="35.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="32" y="420" width="7" height="15" fill="rgb(246,131,22)"/><text x="35.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="32" y="436" width="7" height="15" fill="rgb(252,221,19)"/><text x="35.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="32" y="452" width="7" height="15" fill="rgb(244,100,48)"/><text x="35.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="32" y="468" width="7" height="15" fill="rgb(225,107,12)"/><text x="35.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.55%)</title><rect x="32" y="484" width="7" height="15" fill="rgb(246,48,39)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="32" y="500" width="7" height="15" fill="rgb(248,229,45)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="32" y="516" width="7" height="15" fill="rgb(219,207,15)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="32" y="532" width="7" height="15" fill="rgb(232,225,5)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="32" y="548" width="7" height="15" fill="rgb(210,102,14)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="32" y="564" width="7" height="15" fill="rgb(226,139,13)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.55%)</title><rect x="32" y="580" width="7" height="15" fill="rgb(230,36,41)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="32" y="596" width="7" height="15" fill="rgb(223,218,35)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="32" y="612" width="7" height="15" fill="rgb(208,56,33)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="32" y="628" width="7" height="15" fill="rgb(230,178,11)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="32" y="644" width="7" height="15" fill="rgb(220,126,43)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="32" y="660" width="7" height="15" fill="rgb(220,95,43)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.55%)</title><rect x="32" y="676" width="7" height="15" fill="rgb(221,167,19)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.55%)</title><rect x="32" y="692" width="7" height="15" fill="rgb(243,105,53)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.55%)</title><rect x="32" y="708" width="7" height="15" fill="rgb(245,171,18)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.55%)</title><rect x="32" y="724" width="7" height="15" fill="rgb(211,202,9)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.55%)</title><rect x="32" y="740" width="7" height="15" fill="rgb(246,211,51)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.55%)</title><rect x="32" y="756" width="7" height="15" fill="rgb(227,55,42)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.28%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(209,62,5)"/><text x="39.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.28%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(207,120,35)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(232,195,34)"/><text x="39.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(243,218,3)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(229,163,29)"/><text x="39.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(207,78,3)"/><text x="39.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(247,216,2)"/><text x="39.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(221,192,13)"/><text x="39.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (1 samples, 0.28%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(230,3,40)"/><text x="39.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(253,53,48)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(246,181,33)"/><text x="39.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(239,103,4)"/><text x="39.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(206,120,24)"/><text x="39.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(249,100,32)"/><text x="39.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (1 samples, 0.28%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(249,131,7)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(213,180,6)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(225,182,35)"/><text x="39.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(232,195,14)"/><text x="39.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(252,173,24)"/><text x="39.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(217,152,40)"/><text x="39.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:62) (1 samples, 0.28%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(231,83,31)"/><text x="39.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(212,58,46)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(232,25,23)"/><text x="39.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(249,105,12)"/><text x="39.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(210,22,32)"/><text x="39.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(240,158,47)"/><text x="39.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/rsa.py:422) (1 samples, 0.28%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(235,11,3)"/><text x="39.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.28%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(235,203,48)"/><text x="39.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py:108) (1 samples, 0.28%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(241,150,30)"/><text x="39.00" y="1230.50"></text></g><g><title>__eq__ (inspect.py:2877) (1 samples, 0.28%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(216,30,30)"/><text x="39.00" y="1246.50"></text></g><g><title>_hash_basis (inspect.py:2859) (1 samples, 0.28%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(222,30,4)"/><text x="39.00" y="1262.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:4) (10 samples, 2.76%)</title><rect x="10" y="52" width="32" height="15" fill="rgb(213,190,15)"/><text x="13.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 2.76%)</title><rect x="10" y="68" width="32" height="15" fill="rgb(219,228,8)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 2.76%)</title><rect x="10" y="84" width="32" height="15" fill="rgb(253,34,51)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 2.76%)</title><rect x="10" y="100" width="32" height="15" fill="rgb(218,78,23)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 2.76%)</title><rect x="10" y="116" width="32" height="15" fill="rgb(226,188,35)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 2.76%)</title><rect x="10" y="132" width="32" height="15" fill="rgb(237,35,6)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:7) (3 samples, 0.83%)</title><rect x="32" y="148" width="10" height="15" fill="rgb(225,222,11)"/><text x="35.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.83%)</title><rect x="32" y="164" width="10" height="15" fill="rgb(225,225,28)"/><text x="35.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.83%)</title><rect x="32" y="180" width="10" height="15" fill="rgb(250,229,33)"/><text x="35.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.83%)</title><rect x="32" y="196" width="10" height="15" fill="rgb(220,158,18)"/><text x="35.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.83%)</title><rect x="32" y="212" width="10" height="15" fill="rgb(241,38,27)"/><text x="35.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.83%)</title><rect x="32" y="228" width="10" height="15" fill="rgb(227,31,54)"/><text x="35.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (1 samples, 0.28%)</title><rect x="39" y="244" width="3" height="15" fill="rgb(244,139,52)"/><text x="42.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="260" width="3" height="15" fill="rgb(213,38,5)"/><text x="42.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="276" width="3" height="15" fill="rgb(246,59,14)"/><text x="42.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="292" width="3" height="15" fill="rgb(252,85,38)"/><text x="42.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="308" width="3" height="15" fill="rgb(215,82,41)"/><text x="42.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="324" width="3" height="15" fill="rgb(233,56,23)"/><text x="42.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (1 samples, 0.28%)</title><rect x="39" y="340" width="3" height="15" fill="rgb(221,56,7)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="356" width="3" height="15" fill="rgb(250,6,44)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="372" width="3" height="15" fill="rgb(231,186,44)"/><text x="42.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="388" width="3" height="15" fill="rgb(222,93,21)"/><text x="42.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="404" width="3" height="15" fill="rgb(205,110,17)"/><text x="42.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="420" width="3" height="15" fill="rgb(236,154,14)"/><text x="42.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (1 samples, 0.28%)</title><rect x="39" y="436" width="3" height="15" fill="rgb(236,46,27)"/><text x="42.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="452" width="3" height="15" fill="rgb(220,77,11)"/><text x="42.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="39" y="468" width="3" height="15" fill="rgb(208,213,35)"/><text x="42.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="484" width="3" height="15" fill="rgb(252,21,0)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="500" width="3" height="15" fill="rgb(241,167,23)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="516" width="3" height="15" fill="rgb(222,103,25)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="532" width="3" height="15" fill="rgb(249,179,7)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="548" width="3" height="15" fill="rgb(241,200,48)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="564" width="3" height="15" fill="rgb(243,142,7)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (1 samples, 0.28%)</title><rect x="39" y="580" width="3" height="15" fill="rgb(232,225,40)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="596" width="3" height="15" fill="rgb(232,7,9)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="612" width="3" height="15" fill="rgb(215,51,3)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="628" width="3" height="15" fill="rgb(228,145,14)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="644" width="3" height="15" fill="rgb(229,4,17)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="660" width="3" height="15" fill="rgb(242,141,52)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (1 samples, 0.28%)</title><rect x="39" y="676" width="3" height="15" fill="rgb(209,101,29)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="692" width="3" height="15" fill="rgb(243,194,2)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="708" width="3" height="15" fill="rgb(246,144,51)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="724" width="3" height="15" fill="rgb(247,115,8)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="740" width="3" height="15" fill="rgb(233,104,21)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="756" width="3" height="15" fill="rgb(252,152,20)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.28%)</title><rect x="39" y="772" width="3" height="15" fill="rgb(231,127,14)"/><text x="42.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="788" width="3" height="15" fill="rgb(212,123,47)"/><text x="42.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="804" width="3" height="15" fill="rgb(207,165,3)"/><text x="42.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="820" width="3" height="15" fill="rgb(232,21,32)"/><text x="42.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="836" width="3" height="15" fill="rgb(232,222,10)"/><text x="42.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="852" width="3" height="15" fill="rgb(228,72,46)"/><text x="42.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.28%)</title><rect x="39" y="868" width="3" height="15" fill="rgb(223,226,6)"/><text x="42.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="884" width="3" height="15" fill="rgb(236,101,19)"/><text x="42.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.28%)</title><rect x="39" y="900" width="3" height="15" fill="rgb(229,95,53)"/><text x="42.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="916" width="3" height="15" fill="rgb(217,60,35)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="932" width="3" height="15" fill="rgb(215,176,24)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="948" width="3" height="15" fill="rgb(238,71,24)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="964" width="3" height="15" fill="rgb(210,117,1)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="980" width="3" height="15" fill="rgb(213,27,19)"/><text x="42.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="996" width="3" height="15" fill="rgb(246,61,9)"/><text x="42.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.28%)</title><rect x="39" y="1012" width="3" height="15" fill="rgb(206,52,21)"/><text x="42.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="1028" width="3" height="15" fill="rgb(227,55,43)"/><text x="42.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="1044" width="3" height="15" fill="rgb(242,152,9)"/><text x="42.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="1060" width="3" height="15" fill="rgb(249,38,19)"/><text x="42.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="1076" width="3" height="15" fill="rgb(205,125,17)"/><text x="42.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="1092" width="3" height="15" fill="rgb(239,45,49)"/><text x="42.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.28%)</title><rect x="39" y="1108" width="3" height="15" fill="rgb(220,48,1)"/><text x="42.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="1124" width="3" height="15" fill="rgb(210,136,36)"/><text x="42.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="1140" width="3" height="15" fill="rgb(214,13,18)"/><text x="42.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="1156" width="3" height="15" fill="rgb(211,0,19)"/><text x="42.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="1172" width="3" height="15" fill="rgb(210,214,46)"/><text x="42.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="1188" width="3" height="15" fill="rgb(209,70,15)"/><text x="42.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.28%)</title><rect x="39" y="1204" width="3" height="15" fill="rgb(228,7,15)"/><text x="42.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.28%)</title><rect x="39" y="1220" width="3" height="15" fill="rgb(243,141,17)"/><text x="42.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.28%)</title><rect x="39" y="1236" width="3" height="15" fill="rgb(209,128,24)"/><text x="42.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.28%)</title><rect x="39" y="1252" width="3" height="15" fill="rgb(236,228,29)"/><text x="42.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.28%)</title><rect x="39" y="1268" width="3" height="15" fill="rgb(227,202,24)"/><text x="42.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.28%)</title><rect x="39" y="1284" width="3" height="15" fill="rgb(252,208,48)"/><text x="42.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.28%)</title><rect x="39" y="1300" width="3" height="15" fill="rgb(242,216,32)"/><text x="42.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.28%)</title><rect x="39" y="1316" width="3" height="15" fill="rgb(225,146,49)"/><text x="42.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.28%)</title><rect x="39" y="1332" width="3" height="15" fill="rgb(233,71,3)"/><text x="42.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.28%)</title><rect x="39" y="1348" width="3" height="15" fill="rgb(241,71,8)"/><text x="42.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.28%)</title><rect x="39" y="1364" width="3" height="15" fill="rgb(239,82,9)"/><text x="42.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.28%)</title><rect x="39" y="1380" width="3" height="15" fill="rgb(241,187,26)"/><text x="42.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.28%)</title><rect x="39" y="1396" width="3" height="15" fill="rgb(222,11,23)"/><text x="42.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="39" y="1412" width="3" height="15" fill="rgb(219,10,44)"/><text x="42.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:40) (1 samples, 0.28%)</title><rect x="42" y="52" width="3" height="15" fill="rgb(242,145,0)"/><text x="45.00" y="62.50"></text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:11) (1 samples, 0.28%)</title><rect x="42" y="68" width="3" height="15" fill="rgb(232,47,24)"/><text x="45.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py:39) (1 samples, 0.28%)</title><rect x="42" y="84" width="3" height="15" fill="rgb(225,144,12)"/><text x="45.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (1 samples, 0.28%)</title><rect x="42" y="100" width="3" height="15" fill="rgb(225,109,30)"/><text x="45.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (1 samples, 0.28%)</title><rect x="42" y="116" width="3" height="15" fill="rgb(220,218,12)"/><text x="45.00" y="126.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (1 samples, 0.28%)</title><rect x="42" y="132" width="3" height="15" fill="rgb(215,2,6)"/><text x="45.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (1 samples, 0.28%)</title><rect x="42" y="148" width="3" height="15" fill="rgb(236,176,38)"/><text x="45.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (1 samples, 0.28%)</title><rect x="42" y="164" width="3" height="15" fill="rgb(228,93,11)"/><text x="45.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (1 samples, 0.28%)</title><rect x="42" y="180" width="3" height="15" fill="rgb(233,167,33)"/><text x="45.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (1 samples, 0.28%)</title><rect x="42" y="196" width="3" height="15" fill="rgb(211,63,41)"/><text x="45.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (1 samples, 0.28%)</title><rect x="42" y="212" width="3" height="15" fill="rgb(224,58,9)"/><text x="45.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (1 samples, 0.28%)</title><rect x="42" y="228" width="3" height="15" fill="rgb(234,10,12)"/><text x="45.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:154) (1 samples, 0.28%)</title><rect x="42" y="244" width="3" height="15" fill="rgb(223,223,28)"/><text x="45.00" y="254.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py:119) (1 samples, 0.28%)</title><rect x="42" y="260" width="3" height="15" fill="rgb(209,202,46)"/><text x="45.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (1 samples, 0.28%)</title><rect x="42" y="276" width="3" height="15" fill="rgb(246,136,30)"/><text x="45.00" y="286.50"></text></g><g><title>__init__ (mtrand.c:3210) (1 samples, 0.28%)</title><rect x="42" y="292" width="3" height="15" fill="rgb(229,193,5)"/><text x="45.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c:3309) (1 samples, 0.28%)</title><rect x="42" y="308" width="3" height="15" fill="rgb(247,191,19)"/><text x="45.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (1 samples, 0.28%)</title><rect x="42" y="324" width="3" height="15" fill="rgb(230,74,22)"/><text x="45.00" y="334.50"></text></g><g><title>__init__ (mt19937.c:2381) (1 samples, 0.28%)</title><rect x="42" y="340" width="3" height="15" fill="rgb(244,45,36)"/><text x="45.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.28%)</title><rect x="42" y="356" width="3" height="15" fill="rgb(247,172,1)"/><text x="45.00" y="366.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.28%)</title><rect x="42" y="372" width="3" height="15" fill="rgb(243,28,46)"/><text x="45.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.28%)</title><rect x="42" y="388" width="3" height="15" fill="rgb(254,1,27)"/><text x="45.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:6032) (1 samples, 0.28%)</title><rect x="42" y="404" width="3" height="15" fill="rgb(209,153,34)"/><text x="45.00" y="414.50"></text></g><g><title>__Pyx_PyInt_As_uint32_t (bit_generator.c:17413) (1 samples, 0.28%)</title><rect x="42" y="420" width="3" height="15" fill="rgb(229,118,22)"/><text x="45.00" y="430.50"></text></g><g><title>__Pyx_PyNumber_IntOrLong (bit_generator.c:18210) (1 samples, 0.28%)</title><rect x="42" y="436" width="3" height="15" fill="rgb(248,163,21)"/><text x="45.00" y="446.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.28%)</title><rect x="49" y="276" width="3" height="15" fill="rgb(206,157,54)"/><text x="52.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (1 samples, 0.28%)</title><rect x="49" y="292" width="3" height="15" fill="rgb(221,169,20)"/><text x="52.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.28%)</title><rect x="49" y="308" width="3" height="15" fill="rgb(240,86,20)"/><text x="52.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.28%)</title><rect x="49" y="324" width="3" height="15" fill="rgb(222,183,48)"/><text x="52.00" y="334.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:47) (3 samples, 0.83%)</title><rect x="45" y="52" width="10" height="15" fill="rgb(218,13,32)"/><text x="48.00" y="62.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:46) (3 samples, 0.83%)</title><rect x="45" y="68" width="10" height="15" fill="rgb(250,45,33)"/><text x="48.00" y="78.50"></text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:26) (3 samples, 0.83%)</title><rect x="45" y="84" width="10" height="15" fill="rgb(243,59,38)"/><text x="48.00" y="94.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:18) (3 samples, 0.83%)</title><rect x="45" y="100" width="10" height="15" fill="rgb(224,146,37)"/><text x="48.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (3 samples, 0.83%)</title><rect x="45" y="116" width="10" height="15" fill="rgb(252,64,45)"/><text x="48.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (3 samples, 0.83%)</title><rect x="45" y="132" width="10" height="15" fill="rgb(211,177,25)"/><text x="48.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (3 samples, 0.83%)</title><rect x="45" y="148" width="10" height="15" fill="rgb(243,67,35)"/><text x="48.00" y="158.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (3 samples, 0.83%)</title><rect x="45" y="164" width="10" height="15" fill="rgb(229,189,26)"/><text x="48.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.55%)</title><rect x="49" y="180" width="6" height="15" fill="rgb(229,117,32)"/><text x="52.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.55%)</title><rect x="49" y="196" width="6" height="15" fill="rgb(247,202,47)"/><text x="52.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.55%)</title><rect x="49" y="212" width="6" height="15" fill="rgb(239,213,24)"/><text x="52.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.55%)</title><rect x="49" y="228" width="6" height="15" fill="rgb(206,28,42)"/><text x="52.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.55%)</title><rect x="49" y="244" width="6" height="15" fill="rgb(242,61,29)"/><text x="52.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.55%)</title><rect x="49" y="260" width="6" height="15" fill="rgb(239,34,31)"/><text x="52.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (1 samples, 0.28%)</title><rect x="52" y="276" width="3" height="15" fill="rgb(238,12,4)"/><text x="55.00" y="286.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.28%)</title><rect x="55" y="148" width="3" height="15" fill="rgb(253,23,54)"/><text x="58.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:183) (1 samples, 0.28%)</title><rect x="55" y="164" width="3" height="15" fill="rgb(244,7,22)"/><text x="58.00" y="174.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.28%)</title><rect x="55" y="180" width="3" height="15" fill="rgb(218,220,20)"/><text x="58.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.28%)</title><rect x="55" y="196" width="3" height="15" fill="rgb(239,70,23)"/><text x="58.00" y="206.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.28%)</title><rect x="55" y="212" width="3" height="15" fill="rgb(253,21,16)"/><text x="58.00" y="222.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (1 samples, 0.28%)</title><rect x="58" y="276" width="4" height="15" fill="rgb(246,67,41)"/><text x="61.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (1 samples, 0.28%)</title><rect x="58" y="292" width="4" height="15" fill="rgb(233,163,11)"/><text x="61.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.28%)</title><rect x="58" y="308" width="4" height="15" fill="rgb(218,80,28)"/><text x="61.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.28%)</title><rect x="58" y="324" width="4" height="15" fill="rgb(211,154,17)"/><text x="61.00" y="334.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.55%)</title><rect x="58" y="196" width="7" height="15" fill="rgb(218,109,18)"/><text x="61.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.55%)</title><rect x="58" y="212" width="7" height="15" fill="rgb(213,120,21)"/><text x="61.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.55%)</title><rect x="58" y="228" width="7" height="15" fill="rgb(228,0,23)"/><text x="61.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.55%)</title><rect x="58" y="244" width="7" height="15" fill="rgb(227,22,54)"/><text x="61.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.55%)</title><rect x="58" y="260" width="7" height="15" fill="rgb(253,92,21)"/><text x="61.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.28%)</title><rect x="62" y="276" width="3" height="15" fill="rgb(254,1,26)"/><text x="65.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="62" y="292" width="3" height="15" fill="rgb(250,211,32)"/><text x="65.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3286) (1 samples, 0.28%)</title><rect x="62" y="308" width="3" height="15" fill="rgb(249,33,39)"/><text x="65.00" y="318.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (3 samples, 0.83%)</title><rect x="58" y="164" width="10" height="15" fill="rgb(241,14,47)"/><text x="61.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 0.83%)</title><rect x="58" y="180" width="10" height="15" fill="rgb(205,17,35)"/><text x="61.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.28%)</title><rect x="65" y="196" width="3" height="15" fill="rgb(213,21,39)"/><text x="68.00" y="206.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.28%)</title><rect x="75" y="196" width="3" height="15" fill="rgb(223,181,1)"/><text x="78.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (4 samples, 1.10%)</title><rect x="71" y="180" width="13" height="15" fill="rgb(210,92,12)"/><text x="74.00" y="190.50"></text></g><g><title>get (queue.py:182) (2 samples, 0.55%)</title><rect x="78" y="196" width="6" height="15" fill="rgb(225,82,8)"/><text x="81.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.55%)</title><rect x="78" y="212" width="6" height="15" fill="rgb(237,182,39)"/><text x="81.00" y="222.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:781) (1 samples, 0.28%)</title><rect x="98" y="196" width="3" height="15" fill="rgb(234,44,51)"/><text x="101.00" y="206.50"></text></g><g><title>update_wrapper (functools.py:54) (1 samples, 0.28%)</title><rect x="104" y="228" width="3" height="15" fill="rgb(212,225,25)"/><text x="107.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (5 samples, 1.38%)</title><rect x="107" y="228" width="17" height="15" fill="rgb(246,152,51)"/><text x="110.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.28%)</title><rect x="124" y="228" width="3" height="15" fill="rgb(214,191,4)"/><text x="127.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (14 samples, 3.87%)</title><rect x="84" y="180" width="46" height="15" fill="rgb(225,81,48)"/><text x="87.00" y="190.50">disp..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (9 samples, 2.49%)</title><rect x="101" y="196" width="29" height="15" fill="rgb(213,9,11)"/><text x="104.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py:308) (8 samples, 2.21%)</title><rect x="104" y="212" width="26" height="15" fill="rgb(222,185,28)"/><text x="107.00" y="222.50">d..</text></g><g><title>wraps (functools.py:79) (1 samples, 0.28%)</title><rect x="127" y="228" width="3" height="15" fill="rgb(219,74,50)"/><text x="130.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:808) (1 samples, 0.28%)</title><rect x="130" y="180" width="3" height="15" fill="rgb(205,192,51)"/><text x="133.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (2 samples, 0.55%)</title><rect x="133" y="180" width="7" height="15" fill="rgb(230,93,30)"/><text x="136.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.83%)</title><rect x="140" y="212" width="10" height="15" fill="rgb(239,127,10)"/><text x="143.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (5 samples, 1.38%)</title><rect x="140" y="196" width="16" height="15" fill="rgb(252,137,19)"/><text x="143.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (2 samples, 0.55%)</title><rect x="150" y="212" width="6" height="15" fill="rgb(227,71,10)"/><text x="153.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:274) (2 samples, 0.55%)</title><rect x="172" y="228" width="7" height="15" fill="rgb(244,121,36)"/><text x="175.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.28%)</title><rect x="179" y="228" width="3" height="15" fill="rgb(250,112,11)"/><text x="182.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (8 samples, 2.21%)</title><rect x="166" y="212" width="26" height="15" fill="rgb(215,80,53)"/><text x="169.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (3 samples, 0.83%)</title><rect x="182" y="228" width="10" height="15" fill="rgb(247,72,24)"/><text x="185.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.28%)</title><rect x="192" y="212" width="3" height="15" fill="rgb(232,43,32)"/><text x="195.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:91) (1 samples, 0.28%)</title><rect x="195" y="212" width="4" height="15" fill="rgb(243,32,38)"/><text x="198.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (22 samples, 6.08%)</title><rect x="140" y="180" width="72" height="15" fill="rgb(242,75,16)"/><text x="143.00" y="190.50">dispatch..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (17 samples, 4.70%)</title><rect x="156" y="196" width="56" height="15" fill="rgb(215,80,51)"/><text x="159.00" y="206.50">get_n..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (4 samples, 1.10%)</title><rect x="199" y="212" width="13" height="15" fill="rgb(238,143,29)"/><text x="202.00" y="222.50"></text></g><g><title>0x7f382720b120 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="208" y="228" width="4" height="15" fill="rgb(221,176,52)"/><text x="211.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.28%)</title><rect x="212" y="180" width="3" height="15" fill="rgb(216,225,52)"/><text x="215.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:242) (1 samples, 0.28%)</title><rect x="212" y="196" width="3" height="15" fill="rgb(212,132,49)"/><text x="215.00" y="206.50"></text></g><g><title>put (queue.py:132) (5 samples, 1.38%)</title><rect x="215" y="196" width="16" height="15" fill="rgb(209,160,18)"/><text x="218.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.55%)</title><rect x="231" y="212" width="7" height="15" fill="rgb(232,83,15)"/><text x="234.00" y="222.50"></text></g><g><title>notify (threading.py:345) (4 samples, 1.10%)</title><rect x="238" y="212" width="13" height="15" fill="rgb(229,225,24)"/><text x="241.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (4 samples, 1.10%)</title><rect x="238" y="228" width="13" height="15" fill="rgb(239,140,0)"/><text x="241.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.55%)</title><rect x="244" y="244" width="7" height="15" fill="rgb(252,165,53)"/><text x="247.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.28%)</title><rect x="247" y="260" width="4" height="15" fill="rgb(226,158,47)"/><text x="250.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="247" y="276" width="4" height="15" fill="rgb(211,161,14)"/><text x="250.00" y="286.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (13 samples, 3.59%)</title><rect x="215" y="180" width="42" height="15" fill="rgb(221,8,29)"/><text x="218.00" y="190.50">dis..</text></g><g><title>put (queue.py:151) (8 samples, 2.21%)</title><rect x="231" y="196" width="26" height="15" fill="rgb(247,106,12)"/><text x="234.00" y="206.50">p..</text></g><g><title>notify (threading.py:348) (2 samples, 0.55%)</title><rect x="251" y="212" width="6" height="15" fill="rgb(206,7,28)"/><text x="254.00" y="222.50"></text></g><g><title>get (queue.py:166) (1 samples, 0.28%)</title><rect x="257" y="196" width="3" height="15" fill="rgb(219,181,54)"/><text x="260.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (1 samples, 0.28%)</title><rect x="257" y="212" width="3" height="15" fill="rgb(247,126,9)"/><text x="260.00" y="222.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.28%)</title><rect x="260" y="196" width="4" height="15" fill="rgb(245,82,16)"/><text x="263.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.28%)</title><rect x="260" y="212" width="4" height="15" fill="rgb(218,226,32)"/><text x="263.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.28%)</title><rect x="260" y="228" width="4" height="15" fill="rgb(230,63,21)"/><text x="263.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 0.83%)</title><rect x="257" y="180" width="10" height="15" fill="rgb(230,168,23)"/><text x="260.00" y="190.50"></text></g><g><title>get (queue.py:182) (1 samples, 0.28%)</title><rect x="264" y="196" width="3" height="15" fill="rgb(220,45,50)"/><text x="267.00" y="206.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (1 samples, 0.28%)</title><rect x="267" y="180" width="3" height="15" fill="rgb(238,65,13)"/><text x="270.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:746) (1 samples, 0.28%)</title><rect x="274" y="196" width="3" height="15" fill="rgb(213,114,10)"/><text x="277.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:747) (2 samples, 0.55%)</title><rect x="277" y="196" width="6" height="15" fill="rgb(252,81,27)"/><text x="280.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.28%)</title><rect x="283" y="196" width="4" height="15" fill="rgb(232,220,5)"/><text x="286.00" y="206.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.28%)</title><rect x="283" y="212" width="4" height="15" fill="rgb(236,111,11)"/><text x="286.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (1 samples, 0.28%)</title><rect x="287" y="196" width="3" height="15" fill="rgb(246,168,51)"/><text x="290.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (3 samples, 0.83%)</title><rect x="290" y="196" width="10" height="15" fill="rgb(209,90,33)"/><text x="293.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.28%)</title><rect x="303" y="260" width="3" height="15" fill="rgb(234,113,35)"/><text x="306.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:197) (1 samples, 0.28%)</title><rect x="306" y="260" width="3" height="15" fill="rgb(242,66,46)"/><text x="309.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (3 samples, 0.83%)</title><rect x="303" y="244" width="10" height="15" fill="rgb(247,85,16)"/><text x="306.00" y="254.50"></text></g><g><title>__init__ (joblib/parallel.py:207) (1 samples, 0.28%)</title><rect x="309" y="260" width="4" height="15" fill="rgb(214,0,54)"/><text x="312.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.28%)</title><rect x="335" y="308" width="4" height="15" fill="rgb(221,28,32)"/><text x="338.00" y="318.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.28%)</title><rect x="335" y="324" width="4" height="15" fill="rgb(223,123,28)"/><text x="338.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (9 samples, 2.49%)</title><rect x="335" y="292" width="30" height="15" fill="rgb(242,59,42)"/><text x="338.00" y="302.50">pr..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 2.21%)</title><rect x="339" y="308" width="26" height="15" fill="rgb(233,34,32)"/><text x="342.00" y="318.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.93%)</title><rect x="342" y="324" width="23" height="15" fill="rgb(235,55,3)"/><text x="345.00" y="334.50">&lt;..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.83%)</title><rect x="355" y="340" width="10" height="15" fill="rgb(220,145,34)"/><text x="358.00" y="350.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.28%)</title><rect x="365" y="308" width="3" height="15" fill="rgb(240,82,47)"/><text x="368.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (2 samples, 0.55%)</title><rect x="365" y="292" width="6" height="15" fill="rgb(251,22,34)"/><text x="368.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.28%)</title><rect x="368" y="308" width="3" height="15" fill="rgb(219,71,29)"/><text x="371.00" y="318.50"></text></g><g><title>0x7f3800c2ed2e (?) (1 samples, 0.28%)</title><rect x="375" y="308" width="3" height="15" fill="rgb(219,124,40)"/><text x="378.00" y="318.50"></text></g><g><title>0x7f3800c2dfa6 (?) (1 samples, 0.28%)</title><rect x="375" y="324" width="3" height="15" fill="rgb(249,132,17)"/><text x="378.00" y="334.50"></text></g><g><title>0x7f3800c3d405 (?) (1 samples, 0.28%)</title><rect x="375" y="340" width="3" height="15" fill="rgb(223,34,30)"/><text x="378.00" y="350.50"></text></g><g><title>0x7f3800c3c6c9 (?) (1 samples, 0.28%)</title><rect x="375" y="356" width="3" height="15" fill="rgb(230,207,17)"/><text x="378.00" y="366.50"></text></g><g><title>0x7f3800c2df55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="378" y="324" width="3" height="15" fill="rgb(254,164,25)"/><text x="381.00" y="334.50"></text></g><g><title>0x7f3800c1dd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="378" y="340" width="3" height="15" fill="rgb(248,225,37)"/><text x="381.00" y="350.50"></text></g><g><title>0x7f3800c0ab8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="378" y="356" width="3" height="15" fill="rgb(232,175,52)"/><text x="381.00" y="366.50"></text></g><g><title>0x7f3800c3c225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="381" y="356" width="3" height="15" fill="rgb(232,204,37)"/><text x="384.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.28%)</title><rect x="381" y="372" width="3" height="15" fill="rgb(236,167,24)"/><text x="384.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.28%)</title><rect x="381" y="388" width="3" height="15" fill="rgb(220,211,6)"/><text x="384.00" y="398.50"></text></g><g><title>0x7f3800c20604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="384" y="388" width="4" height="15" fill="rgb(209,204,42)"/><text x="387.00" y="398.50"></text></g><g><title>0x7f3800c08ce0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="384" y="404" width="4" height="15" fill="rgb(230,161,52)"/><text x="387.00" y="414.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.28%)</title><rect x="388" y="436" width="3" height="15" fill="rgb(228,47,3)"/><text x="391.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.28%)</title><rect x="388" y="452" width="3" height="15" fill="rgb(251,201,0)"/><text x="391.00" y="462.50"></text></g><g><title>0x7f38271ea998 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="388" y="468" width="3" height="15" fill="rgb(251,90,49)"/><text x="391.00" y="478.50"></text></g><g><title>0x7f3800c20666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="388" y="388" width="6" height="15" fill="rgb(228,124,39)"/><text x="391.00" y="398.50"></text></g><g><title>0x7f3800c162fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="388" y="404" width="6" height="15" fill="rgb(242,199,28)"/><text x="391.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.55%)</title><rect x="388" y="420" width="6" height="15" fill="rgb(214,196,4)"/><text x="391.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:698) (1 samples, 0.28%)</title><rect x="391" y="436" width="3" height="15" fill="rgb(254,13,1)"/><text x="394.00" y="446.50"></text></g><g><title>0x7f3800c20d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.10%)</title><rect x="384" y="372" width="13" height="15" fill="rgb(223,169,50)"/><text x="387.00" y="382.50"></text></g><g><title>0x7f3800c206fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="394" y="388" width="3" height="15" fill="rgb(220,23,4)"/><text x="397.00" y="398.50"></text></g><g><title>0x7f3800c20e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="397" y="372" width="4" height="15" fill="rgb(244,20,20)"/><text x="400.00" y="382.50"></text></g><g><title>0x7f3800c142bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="397" y="388" width="4" height="15" fill="rgb(231,9,20)"/><text x="400.00" y="398.50"></text></g><g><title>0x7f3800c139d6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="397" y="404" width="4" height="15" fill="rgb(252,68,43)"/><text x="400.00" y="414.50"></text></g><g><title>0x7f3800c3c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.66%)</title><rect x="384" y="356" width="20" height="15" fill="rgb(242,170,4)"/><text x="387.00" y="366.50"></text></g><g><title>0x7f3800c20efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="401" y="372" width="3" height="15" fill="rgb(239,163,41)"/><text x="404.00" y="382.50"></text></g><g><title>0x7f3800c112a4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="401" y="388" width="3" height="15" fill="rgb(252,82,43)"/><text x="404.00" y="398.50"></text></g><g><title>0x7f3800c3c364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="404" y="356" width="3" height="15" fill="rgb(219,38,42)"/><text x="407.00" y="366.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.28%)</title><rect x="404" y="372" width="3" height="15" fill="rgb(238,175,4)"/><text x="407.00" y="382.50"></text></g><g><title>0x7f3800c3c511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="407" y="356" width="3" height="15" fill="rgb(226,40,51)"/><text x="410.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.28%)</title><rect x="410" y="372" width="4" height="15" fill="rgb(242,216,47)"/><text x="413.00" y="382.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.28%)</title><rect x="414" y="404" width="3" height="15" fill="rgb(242,140,45)"/><text x="417.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.28%)</title><rect x="417" y="420" width="3" height="15" fill="rgb(240,21,27)"/><text x="420.00" y="430.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.28%)</title><rect x="417" y="436" width="3" height="15" fill="rgb(236,142,50)"/><text x="420.00" y="446.50"></text></g><g><title>0x7f38271ec238 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="420" y="484" width="3" height="15" fill="rgb(247,6,43)"/><text x="423.00" y="494.50"></text></g><g><title>0x7f3800c3c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.93%)</title><rect x="410" y="356" width="23" height="15" fill="rgb(253,135,31)"/><text x="413.00" y="366.50">0..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (6 samples, 1.66%)</title><rect x="414" y="372" width="19" height="15" fill="rgb(235,124,9)"/><text x="417.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (6 samples, 1.66%)</title><rect x="414" y="388" width="19" height="15" fill="rgb(242,194,4)"/><text x="417.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (5 samples, 1.38%)</title><rect x="417" y="404" width="16" height="15" fill="rgb(224,199,29)"/><text x="420.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (4 samples, 1.10%)</title><rect x="420" y="420" width="13" height="15" fill="rgb(252,121,48)"/><text x="423.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (4 samples, 1.10%)</title><rect x="420" y="436" width="13" height="15" fill="rgb(241,50,29)"/><text x="423.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (4 samples, 1.10%)</title><rect x="420" y="452" width="13" height="15" fill="rgb(235,92,46)"/><text x="423.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (4 samples, 1.10%)</title><rect x="420" y="468" width="13" height="15" fill="rgb(208,171,3)"/><text x="423.00" y="478.50"></text></g><g><title>0x7f382720b103 (libc-2.29.so) (3 samples, 0.83%)</title><rect x="423" y="484" width="10" height="15" fill="rgb(247,177,32)"/><text x="426.00" y="494.50"></text></g><g><title>0x7f3800c3c693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="433" y="356" width="4" height="15" fill="rgb(235,169,42)"/><text x="436.00" y="366.50"></text></g><g><title>0x7f3800c3c698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="437" y="356" width="3" height="15" fill="rgb(239,64,1)"/><text x="440.00" y="366.50"></text></g><g><title>0x7f3800c3c6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 2.76%)</title><rect x="440" y="356" width="32" height="15" fill="rgb(206,91,24)"/><text x="443.00" y="366.50">0x..</text></g><g><title>0x7f3800c3c6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.83%)</title><rect x="472" y="356" width="10" height="15" fill="rgb(228,144,1)"/><text x="475.00" y="366.50"></text></g><g><title>0x7f3800c3c6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="482" y="356" width="7" height="15" fill="rgb(214,160,11)"/><text x="485.00" y="366.50"></text></g><g><title>0x7f3800c3c6c2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="489" y="356" width="3" height="15" fill="rgb(231,88,50)"/><text x="492.00" y="366.50"></text></g><g><title>0x7f3800c3c6cc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="492" y="356" width="3" height="15" fill="rgb(209,105,29)"/><text x="495.00" y="366.50"></text></g><g><title>0x7f3800c3c6d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="495" y="356" width="3" height="15" fill="rgb(235,199,9)"/><text x="498.00" y="366.50"></text></g><g><title>0x7f3800c3c7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="498" y="356" width="4" height="15" fill="rgb(234,53,11)"/><text x="501.00" y="366.50"></text></g><g><title>0x7f3800c3c887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="502" y="356" width="3" height="15" fill="rgb(236,123,1)"/><text x="505.00" y="366.50"></text></g><g><title>0x7f3800c3c8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="505" y="356" width="3" height="15" fill="rgb(214,210,19)"/><text x="508.00" y="366.50"></text></g><g><title>0x7f3800c118a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="508" y="372" width="3" height="15" fill="rgb(210,141,26)"/><text x="511.00" y="382.50"></text></g><g><title>0x7f3800c3c92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="508" y="356" width="7" height="15" fill="rgb(247,223,33)"/><text x="511.00" y="366.50"></text></g><g><title>0x7f3800c119af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="511" y="372" width="4" height="15" fill="rgb(218,96,18)"/><text x="514.00" y="382.50"></text></g><g><title>_buffer_info_new (buffer.c:522) (1 samples, 0.28%)</title><rect x="515" y="420" width="3" height="15" fill="rgb(216,115,7)"/><text x="518.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.55%)</title><rect x="515" y="404" width="6" height="15" fill="rgb(209,98,36)"/><text x="518.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.28%)</title><rect x="518" y="420" width="3" height="15" fill="rgb(235,102,26)"/><text x="521.00" y="430.50"></text></g><g><title>_buffer_format_string (buffer.c:365) (1 samples, 0.28%)</title><rect x="518" y="436" width="3" height="15" fill="rgb(216,159,7)"/><text x="521.00" y="446.50"></text></g><g><title>_is_natively_aligned_at (buffer.c:206) (1 samples, 0.28%)</title><rect x="518" y="452" width="3" height="15" fill="rgb(206,112,41)"/><text x="521.00" y="462.50"></text></g><g><title>0x7f3800c3d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (44 samples, 12.15%)</title><rect x="381" y="340" width="144" height="15" fill="rgb(212,193,48)"/><text x="384.00" y="350.50">0x7f3800c3d405 (sk..</text></g><g><title>0x7f3800c3cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.83%)</title><rect x="515" y="356" width="10" height="15" fill="rgb(226,120,25)"/><text x="518.00" y="366.50"></text></g><g><title>0x7f3800c14529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.83%)</title><rect x="515" y="372" width="10" height="15" fill="rgb(238,132,16)"/><text x="518.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.83%)</title><rect x="515" y="388" width="10" height="15" fill="rgb(247,132,44)"/><text x="518.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.28%)</title><rect x="521" y="404" width="4" height="15" fill="rgb(242,166,40)"/><text x="524.00" y="414.50"></text></g><g><title>0x7f3800c12152 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="525" y="356" width="3" height="15" fill="rgb(223,107,14)"/><text x="528.00" y="366.50"></text></g><g><title>0x7f3800c121ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="528" y="356" width="3" height="15" fill="rgb(253,149,46)"/><text x="531.00" y="366.50"></text></g><g><title>0x7f3800c2dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (48 samples, 13.26%)</title><rect x="381" y="324" width="157" height="15" fill="rgb(239,181,2)"/><text x="384.00" y="334.50">0x7f3800c2dfa6 (skle..</text></g><g><title>0x7f3800c3d540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.10%)</title><rect x="525" y="340" width="13" height="15" fill="rgb(215,189,52)"/><text x="528.00" y="350.50"></text></g><g><title>0x7f3800c122f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="531" y="356" width="7" height="15" fill="rgb(243,5,5)"/><text x="534.00" y="366.50"></text></g><g><title>0x7f3800c11530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="531" y="372" width="7" height="15" fill="rgb(248,71,35)"/><text x="534.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.55%)</title><rect x="531" y="388" width="7" height="15" fill="rgb(249,61,45)"/><text x="534.00" y="398.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.28%)</title><rect x="544" y="356" width="3" height="15" fill="rgb(222,158,2)"/><text x="547.00" y="366.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.28%)</title><rect x="544" y="372" width="3" height="15" fill="rgb(245,79,32)"/><text x="547.00" y="382.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.28%)</title><rect x="544" y="388" width="3" height="15" fill="rgb(251,140,17)"/><text x="547.00" y="398.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.28%)</title><rect x="547" y="356" width="4" height="15" fill="rgb(250,2,3)"/><text x="550.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (5 samples, 1.38%)</title><rect x="538" y="340" width="16" height="15" fill="rgb(232,72,34)"/><text x="541.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="551" y="356" width="3" height="15" fill="rgb(235,205,16)"/><text x="554.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.28%)</title><rect x="554" y="372" width="3" height="15" fill="rgb(248,26,16)"/><text x="557.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="554" y="388" width="3" height="15" fill="rgb(249,126,49)"/><text x="557.00" y="398.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.28%)</title><rect x="557" y="372" width="3" height="15" fill="rgb(247,157,35)"/><text x="560.00" y="382.50"></text></g><g><title>0x7f3800c2e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 2.21%)</title><rect x="538" y="324" width="26" height="15" fill="rgb(212,159,11)"/><text x="541.00" y="334.50">0..</text></g><g><title>array_take (methods.c:145) (3 samples, 0.83%)</title><rect x="554" y="340" width="10" height="15" fill="rgb(220,52,15)"/><text x="557.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.83%)</title><rect x="554" y="356" width="10" height="15" fill="rgb(221,39,23)"/><text x="557.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3956) (1 samples, 0.28%)</title><rect x="560" y="372" width="4" height="15" fill="rgb(249,62,9)"/><text x="563.00" y="382.50"></text></g><g><title>0x7f3800c2e13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="564" y="324" width="3" height="15" fill="rgb(223,105,7)"/><text x="567.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="564" y="340" width="3" height="15" fill="rgb(220,185,40)"/><text x="567.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="564" y="356" width="3" height="15" fill="rgb(208,31,2)"/><text x="567.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.28%)</title><rect x="564" y="372" width="3" height="15" fill="rgb(224,73,3)"/><text x="567.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.28%)</title><rect x="567" y="340" width="3" height="15" fill="rgb(245,7,20)"/><text x="570.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.28%)</title><rect x="567" y="356" width="3" height="15" fill="rgb(239,51,54)"/><text x="570.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.28%)</title><rect x="567" y="372" width="3" height="15" fill="rgb(234,219,37)"/><text x="570.00" y="382.50"></text></g><g><title>0x7f3800c2e14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="567" y="324" width="6" height="15" fill="rgb(223,72,6)"/><text x="570.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.28%)</title><rect x="570" y="340" width="3" height="15" fill="rgb(230,193,30)"/><text x="573.00" y="350.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.28%)</title><rect x="570" y="356" width="3" height="15" fill="rgb(219,222,21)"/><text x="573.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c:112) (1 samples, 0.28%)</title><rect x="570" y="372" width="3" height="15" fill="rgb(249,15,42)"/><text x="573.00" y="382.50"></text></g><g><title>PyDataMem_FREE (alloc.c:274) (1 samples, 0.28%)</title><rect x="570" y="388" width="3" height="15" fill="rgb(218,175,12)"/><text x="573.00" y="398.50"></text></g><g><title>0x7f38271eaa4b (libc-2.29.so) (1 samples, 0.28%)</title><rect x="570" y="404" width="3" height="15" fill="rgb(253,114,50)"/><text x="573.00" y="414.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.28%)</title><rect x="573" y="340" width="4" height="15" fill="rgb(207,119,46)"/><text x="576.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.28%)</title><rect x="573" y="356" width="4" height="15" fill="rgb(230,141,26)"/><text x="576.00" y="366.50"></text></g><g><title>0x7f3800c2e328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.55%)</title><rect x="573" y="324" width="7" height="15" fill="rgb(231,33,54)"/><text x="576.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.28%)</title><rect x="577" y="340" width="3" height="15" fill="rgb(248,165,2)"/><text x="580.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.28%)</title><rect x="577" y="356" width="3" height="15" fill="rgb(205,128,8)"/><text x="580.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:284) (1 samples, 0.28%)</title><rect x="577" y="372" width="3" height="15" fill="rgb(214,0,4)"/><text x="580.00" y="382.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (65 samples, 17.96%)</title><rect x="371" y="292" width="212" height="15" fill="rgb(233,167,18)"/><text x="374.00" y="302.50">predict (sklearn/tree/_clas..</text></g><g><title>0x7f3800c2ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (63 samples, 17.40%)</title><rect x="378" y="308" width="205" height="15" fill="rgb(248,161,2)"/><text x="381.00" y="318.50">0x7f3800c2ed2e (sklearn/tr..</text></g><g><title>0x7f3800c2e550 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="580" y="324" width="3" height="15" fill="rgb(214,168,18)"/><text x="583.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (4 samples, 1.10%)</title><rect x="583" y="292" width="13" height="15" fill="rgb(218,183,12)"/><text x="586.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.55%)</title><rect x="590" y="308" width="6" height="15" fill="rgb(232,14,17)"/><text x="593.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.28%)</title><rect x="596" y="292" width="4" height="15" fill="rgb(213,138,39)"/><text x="599.00" y="302.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (83 samples, 22.93%)</title><rect x="335" y="276" width="271" height="15" fill="rgb(229,76,22)"/><text x="338.00" y="286.50">_accumulate_prediction (sklearn/ense..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.55%)</title><rect x="600" y="292" width="6" height="15" fill="rgb(223,31,13)"/><text x="603.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.28%)</title><rect x="603" y="308" width="3" height="15" fill="rgb(254,75,17)"/><text x="606.00" y="318.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.28%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(226,60,24)"/><text x="606.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.28%)</title><rect x="603" y="340" width="3" height="15" fill="rgb(251,78,31)"/><text x="606.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.28%)</title><rect x="603" y="356" width="3" height="15" fill="rgb(230,201,15)"/><text x="606.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (2 samples, 0.55%)</title><rect x="606" y="276" width="7" height="15" fill="rgb(218,206,39)"/><text x="609.00" y="286.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.28%)</title><rect x="613" y="276" width="3" height="15" fill="rgb(227,54,44)"/><text x="616.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.28%)</title><rect x="619" y="292" width="3" height="15" fill="rgb(222,81,54)"/><text x="622.00" y="302.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.28%)</title><rect x="619" y="308" width="3" height="15" fill="rgb(227,3,27)"/><text x="622.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.28%)</title><rect x="619" y="324" width="3" height="15" fill="rgb(211,183,24)"/><text x="622.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.28%)</title><rect x="619" y="340" width="3" height="15" fill="rgb(252,225,32)"/><text x="622.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3105) (1 samples, 0.28%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(216,17,21)"/><text x="625.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3196) (1 samples, 0.28%)</title><rect x="626" y="308" width="3" height="15" fill="rgb(237,163,13)"/><text x="629.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:375) (1 samples, 0.28%)</title><rect x="626" y="324" width="3" height="15" fill="rgb(237,41,32)"/><text x="629.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.28%)</title><rect x="629" y="308" width="3" height="15" fill="rgb(214,64,15)"/><text x="632.00" y="318.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:2000) (1 samples, 0.28%)</title><rect x="629" y="324" width="3" height="15" fill="rgb(249,132,35)"/><text x="632.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.28%)</title><rect x="632" y="308" width="3" height="15" fill="rgb(228,158,40)"/><text x="635.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.28%)</title><rect x="632" y="324" width="3" height="15" fill="rgb(240,94,33)"/><text x="635.00" y="334.50"></text></g><g><title>_find_array_method (ufunc_object.c:216) (1 samples, 0.28%)</title><rect x="632" y="340" width="3" height="15" fill="rgb(214,115,13)"/><text x="635.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.28%)</title><rect x="635" y="308" width="4" height="15" fill="rgb(215,99,10)"/><text x="638.00" y="318.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.28%)</title><rect x="635" y="324" width="4" height="15" fill="rgb(212,159,44)"/><text x="638.00" y="334.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.28%)</title><rect x="635" y="340" width="4" height="15" fill="rgb(234,61,52)"/><text x="638.00" y="350.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.28%)</title><rect x="639" y="388" width="3" height="15" fill="rgb(209,183,18)"/><text x="642.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.55%)</title><rect x="639" y="356" width="6" height="15" fill="rgb(231,156,38)"/><text x="642.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 0.55%)</title><rect x="639" y="372" width="6" height="15" fill="rgb(239,174,18)"/><text x="642.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="642" y="388" width="3" height="15" fill="rgb(207,133,51)"/><text x="645.00" y="398.50"></text></g><g><title>0x7f38271a27a5 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="642" y="404" width="3" height="15" fill="rgb(219,43,18)"/><text x="645.00" y="414.50"></text></g><g><title>0x7f38271a2a05 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="642" y="420" width="3" height="15" fill="rgb(239,114,15)"/><text x="645.00" y="430.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 0.83%)</title><rect x="639" y="324" width="9" height="15" fill="rgb(253,228,17)"/><text x="642.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 0.83%)</title><rect x="639" y="340" width="9" height="15" fill="rgb(219,3,52)"/><text x="642.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.28%)</title><rect x="645" y="356" width="3" height="15" fill="rgb(239,191,18)"/><text x="648.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.28%)</title><rect x="645" y="372" width="3" height="15" fill="rgb(248,122,32)"/><text x="648.00" y="382.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:414) (1 samples, 0.28%)</title><rect x="645" y="388" width="3" height="15" fill="rgb(253,219,4)"/><text x="648.00" y="398.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.28%)</title><rect x="648" y="324" width="4" height="15" fill="rgb(227,156,17)"/><text x="651.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.28%)</title><rect x="648" y="340" width="4" height="15" fill="rgb(241,120,48)"/><text x="651.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1755) (1 samples, 0.28%)</title><rect x="648" y="356" width="4" height="15" fill="rgb(228,36,4)"/><text x="651.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src:250) (1 samples, 0.28%)</title><rect x="648" y="372" width="4" height="15" fill="rgb(210,212,6)"/><text x="651.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src:604) (1 samples, 0.28%)</title><rect x="648" y="388" width="4" height="15" fill="rgb(231,88,46)"/><text x="651.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h:147) (1 samples, 0.28%)</title><rect x="648" y="404" width="4" height="15" fill="rgb(209,9,6)"/><text x="651.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.38%)</title><rect x="639" y="308" width="16" height="15" fill="rgb(236,58,33)"/><text x="642.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.28%)</title><rect x="652" y="324" width="3" height="15" fill="rgb(216,140,30)"/><text x="655.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.28%)</title><rect x="652" y="340" width="3" height="15" fill="rgb(239,156,48)"/><text x="655.00" y="350.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.28%)</title><rect x="652" y="356" width="3" height="15" fill="rgb(235,172,1)"/><text x="655.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (13 samples, 3.59%)</title><rect x="616" y="276" width="42" height="15" fill="rgb(209,89,50)"/><text x="619.00" y="286.50">_ac..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 3.04%)</title><rect x="622" y="292" width="36" height="15" fill="rgb(231,194,14)"/><text x="625.00" y="302.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.28%)</title><rect x="655" y="308" width="3" height="15" fill="rgb(239,217,22)"/><text x="658.00" y="318.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (112 samples, 30.94%)</title><rect x="303" y="212" width="365" height="15" fill="rgb(232,147,41)"/><text x="306.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (112 samples, 30.94%)</title><rect x="303" y="228" width="365" height="15" fill="rgb(247,193,30)"/><text x="306.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (109 samples, 30.11%)</title><rect x="313" y="244" width="355" height="15" fill="rgb(218,96,17)"/><text x="316.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (103 samples, 28.45%)</title><rect x="332" y="260" width="336" height="15" fill="rgb(229,21,48)"/><text x="335.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (3 samples, 0.83%)</title><rect x="658" y="276" width="10" height="15" fill="rgb(241,24,22)"/><text x="661.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.28%)</title><rect x="665" y="292" width="3" height="15" fill="rgb(218,45,24)"/><text x="668.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.28%)</title><rect x="665" y="308" width="3" height="15" fill="rgb(211,215,46)"/><text x="668.00" y="318.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="665" y="324" width="3" height="15" fill="rgb(245,21,5)"/><text x="668.00" y="334.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (2 samples, 0.55%)</title><rect x="668" y="228" width="6" height="15" fill="rgb(245,223,22)"/><text x="671.00" y="238.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (116 samples, 32.04%)</title><rect x="300" y="196" width="378" height="15" fill="rgb(217,201,6)"/><text x="303.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (3 samples, 0.83%)</title><rect x="668" y="212" width="10" height="15" fill="rgb(205,36,20)"/><text x="671.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:338) (1 samples, 0.28%)</title><rect x="674" y="228" width="4" height="15" fill="rgb(218,18,4)"/><text x="677.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.28%)</title><rect x="674" y="244" width="4" height="15" fill="rgb(231,41,16)"/><text x="677.00" y="254.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="674" y="260" width="4" height="15" fill="rgb(239,119,43)"/><text x="677.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (188 samples, 51.93%)</title><rect x="68" y="164" width="613" height="15" fill="rgb(231,207,7)"/><text x="71.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (126 samples, 34.81%)</title><rect x="270" y="180" width="411" height="15" fill="rgb(250,24,15)"/><text x="273.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (1 samples, 0.28%)</title><rect x="678" y="196" width="3" height="15" fill="rgb(208,118,51)"/><text x="681.00" y="206.50"></text></g><g><title>retrieve (joblib/parallel.py:896) (1 samples, 0.28%)</title><rect x="681" y="180" width="3" height="15" fill="rgb(253,127,45)"/><text x="684.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.28%)</title><rect x="684" y="180" width="4" height="15" fill="rgb(228,91,39)"/><text x="687.00" y="190.50"></text></g><g><title>__call__ (joblib/parallel.py:1016) (3 samples, 0.83%)</title><rect x="681" y="164" width="10" height="15" fill="rgb(219,61,46)"/><text x="684.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:910) (1 samples, 0.28%)</title><rect x="688" y="180" width="3" height="15" fill="rgb(205,101,29)"/><text x="691.00" y="190.50"></text></g><g><title>get (joblib/_parallel_backends.py:585) (1 samples, 0.28%)</title><rect x="688" y="196" width="3" height="15" fill="rgb(223,54,37)"/><text x="691.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:54) (196 samples, 54.14%)</title><rect x="55" y="52" width="639" height="15" fill="rgb(241,148,53)"/><text x="58.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:53) (196 samples, 54.14%)</title><rect x="55" y="68" width="639" height="15" fill="rgb(216,105,19)"/><text x="58.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37) (196 samples, 54.14%)</title><rect x="55" y="84" width="639" height="15" fill="rgb(205,194,25)"/><text x="58.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31) (196 samples, 54.14%)</title><rect x="55" y="100" width="639" height="15" fill="rgb(236,222,3)"/><text x="58.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (196 samples, 54.14%)</title><rect x="55" y="116" width="639" height="15" fill="rgb(253,220,53)"/><text x="58.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (196 samples, 54.14%)</title><rect x="55" y="132" width="639" height="15" fill="rgb(247,11,4)"/><text x="58.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (195 samples, 53.87%)</title><rect x="58" y="148" width="636" height="15" fill="rgb(229,126,34)"/><text x="61.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:949) (1 samples, 0.28%)</title><rect x="691" y="164" width="3" height="15" fill="rgb(236,210,50)"/><text x="694.00" y="174.50"></text></g><g><title>_initialize_backend (joblib/parallel.py:710) (1 samples, 0.28%)</title><rect x="691" y="180" width="3" height="15" fill="rgb(238,176,33)"/><text x="694.00" y="190.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:36) (1 samples, 0.28%)</title><rect x="694" y="84" width="3" height="15" fill="rgb(229,100,48)"/><text x="697.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.28%)</title><rect x="694" y="100" width="3" height="15" fill="rgb(230,190,3)"/><text x="697.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.28%)</title><rect x="694" y="116" width="3" height="15" fill="rgb(229,86,24)"/><text x="697.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.28%)</title><rect x="694" y="132" width="3" height="15" fill="rgb(239,42,19)"/><text x="697.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.28%)</title><rect x="694" y="148" width="3" height="15" fill="rgb(210,205,1)"/><text x="697.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.28%)</title><rect x="694" y="164" width="3" height="15" fill="rgb(241,70,3)"/><text x="697.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.28%)</title><rect x="694" y="180" width="3" height="15" fill="rgb(213,182,47)"/><text x="697.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.28%)</title><rect x="694" y="196" width="3" height="15" fill="rgb(231,89,7)"/><text x="697.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:186) (1 samples, 0.28%)</title><rect x="694" y="212" width="3" height="15" fill="rgb(218,136,44)"/><text x="697.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py:123) (1 samples, 0.28%)</title><rect x="694" y="228" width="3" height="15" fill="rgb(233,6,37)"/><text x="697.00" y="238.50"></text></g><g><title>sklearn_threshold (skl2onnx/common/tree_ensemble.py:91) (1 samples, 0.28%)</title><rect x="694" y="244" width="3" height="15" fill="rgb(212,50,11)"/><text x="697.00" y="254.50"></text></g><g><title>float_richcompare (scalarmath.c.src:1526) (1 samples, 0.28%)</title><rect x="694" y="260" width="3" height="15" fill="rgb(253,129,42)"/><text x="697.00" y="270.50"></text></g><g><title>gentype_richcompare (scalartypes.c.src:1220) (1 samples, 0.28%)</title><rect x="694" y="276" width="3" height="15" fill="rgb(226,23,48)"/><text x="697.00" y="286.50"></text></g><g><title>array_richcompare (arrayobject.c:1392) (1 samples, 0.28%)</title><rect x="694" y="292" width="3" height="15" fill="rgb(223,28,12)"/><text x="697.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.28%)</title><rect x="694" y="308" width="3" height="15" fill="rgb(209,16,53)"/><text x="697.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.28%)</title><rect x="694" y="324" width="3" height="15" fill="rgb(225,113,12)"/><text x="697.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.28%)</title><rect x="694" y="340" width="3" height="15" fill="rgb(205,96,24)"/><text x="697.00" y="350.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.28%)</title><rect x="694" y="356" width="3" height="15" fill="rgb(230,211,35)"/><text x="697.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.28%)</title><rect x="694" y="372" width="3" height="15" fill="rgb(207,26,16)"/><text x="697.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:301) (1 samples, 0.28%)</title><rect x="694" y="388" width="3" height="15" fill="rgb(230,5,54)"/><text x="697.00" y="398.50"></text></g><g><title>0x7f37e7c8354f (?) (1 samples, 0.28%)</title><rect x="697" y="244" width="4" height="15" fill="rgb(207,6,31)"/><text x="700.00" y="254.50"></text></g><g><title>0x7f37e7c8965e (?) (1 samples, 0.28%)</title><rect x="697" y="260" width="4" height="15" fill="rgb(226,66,1)"/><text x="700.00" y="270.50"></text></g><g><title>0x7f37e7c8950f (?) (1 samples, 0.28%)</title><rect x="697" y="276" width="4" height="15" fill="rgb(251,90,3)"/><text x="700.00" y="286.50"></text></g><g><title>0x7f37e7c8fd6c (?) (1 samples, 0.28%)</title><rect x="697" y="292" width="4" height="15" fill="rgb(216,73,40)"/><text x="700.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="697" y="308" width="4" height="15" fill="rgb(222,192,6)"/><text x="700.00" y="318.50"></text></g><g><title>0x7f37e7c7427c (?) (1 samples, 0.28%)</title><rect x="697" y="324" width="4" height="15" fill="rgb(222,41,38)"/><text x="700.00" y="334.50"></text></g><g><title>0x7f37e7c735f4 (?) (1 samples, 0.28%)</title><rect x="697" y="340" width="4" height="15" fill="rgb(254,151,28)"/><text x="700.00" y="350.50"></text></g><g><title>0x7f37f11b0ab9 (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="701" y="468" width="3" height="15" fill="rgb(221,19,40)"/><text x="704.00" y="478.50"></text></g><g><title>0x7f37f11b1eab (libgomp.so.1.0.0) (1 samples, 0.28%)</title><rect x="701" y="484" width="3" height="15" fill="rgb(249,39,29)"/><text x="704.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (2 samples, 0.55%)</title><rect x="707" y="516" width="7" height="15" fill="rgb(238,61,11)"/><text x="710.00" y="526.50"></text></g><g><title>std::isnan (cmath:642) (1 samples, 0.28%)</title><rect x="710" y="532" width="4" height="15" fill="rgb(241,196,41)"/><text x="713.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1413) (4 samples, 1.10%)</title><rect x="714" y="580" width="13" height="15" fill="rgb(219,39,28)"/><text x="717.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1417) (2 samples, 0.55%)</title><rect x="727" y="580" width="6" height="15" fill="rgb(207,153,5)"/><text x="730.00" y="590.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1420) (1 samples, 0.28%)</title><rect x="733" y="580" width="3" height="15" fill="rgb(238,200,30)"/><text x="736.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (8 samples, 2.21%)</title><rect x="714" y="516" width="26" height="15" fill="rgb(252,93,24)"/><text x="717.00" y="526.50">R..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (8 samples, 2.21%)</title><rect x="714" y="532" width="26" height="15" fill="rgb(232,137,12)"/><text x="717.00" y="542.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1310) (8 samples, 2.21%)</title><rect x="714" y="548" width="26" height="15" fill="rgb(246,45,54)"/><text x="717.00" y="558.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h:634) (8 samples, 2.21%)</title><rect x="714" y="564" width="26" height="15" fill="rgb(254,190,51)"/><text x="717.00" y="574.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h:1423) (1 samples, 0.28%)</title><rect x="736" y="580" width="4" height="15" fill="rgb(227,135,6)"/><text x="739.00" y="590.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:560) (1 samples, 0.28%)</title><rect x="740" y="516" width="3" height="15" fill="rgb(207,77,1)"/><text x="743.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.28%)</title><rect x="743" y="516" width="3" height="15" fill="rgb(250,1,36)"/><text x="746.00" y="526.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:61) (17 samples, 4.70%)</title><rect x="694" y="52" width="55" height="15" fill="rgb(247,9,12)"/><text x="697.00" y="62.50">&lt;modu..</text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:60) (17 samples, 4.70%)</title><rect x="694" y="68" width="55" height="15" fill="rgb(228,142,37)"/><text x="697.00" y="78.50">profi..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37) (16 samples, 4.42%)</title><rect x="697" y="84" width="52" height="15" fill="rgb(222,169,18)"/><text x="700.00" y="94.50">setup..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31) (16 samples, 4.42%)</title><rect x="697" y="100" width="52" height="15" fill="rgb(230,155,7)"/><text x="700.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (16 samples, 4.42%)</title><rect x="697" y="116" width="52" height="15" fill="rgb(229,144,30)"/><text x="700.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (16 samples, 4.42%)</title><rect x="697" y="132" width="52" height="15" fill="rgb(206,5,17)"/><text x="700.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (16 samples, 4.42%)</title><rect x="697" y="148" width="52" height="15" fill="rgb(225,183,9)"/><text x="700.00" y="158.50">run (..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (16 samples, 4.42%)</title><rect x="697" y="164" width="52" height="15" fill="rgb(253,87,26)"/><text x="700.00" y="174.50">_run_..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (16 samples, 4.42%)</title><rect x="697" y="180" width="52" height="15" fill="rgb(242,140,9)"/><text x="700.00" y="190.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (16 samples, 4.42%)</title><rect x="697" y="196" width="52" height="15" fill="rgb(248,134,42)"/><text x="700.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (16 samples, 4.42%)</title><rect x="697" y="212" width="52" height="15" fill="rgb(232,192,1)"/><text x="700.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (16 samples, 4.42%)</title><rect x="697" y="228" width="52" height="15" fill="rgb(211,74,35)"/><text x="700.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (15 samples, 4.14%)</title><rect x="701" y="244" width="48" height="15" fill="rgb(237,167,1)"/><text x="704.00" y="254.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (15 samples, 4.14%)</title><rect x="701" y="260" width="48" height="15" fill="rgb(233,153,10)"/><text x="704.00" y="270.50">void..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (15 samples, 4.14%)</title><rect x="701" y="276" width="48" height="15" fill="rgb(249,89,29)"/><text x="704.00" y="286.50">void..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (15 samples, 4.14%)</title><rect x="701" y="292" width="48" height="15" fill="rgb(253,226,18)"/><text x="704.00" y="302.50">pybi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (15 samples, 4.14%)</title><rect x="701" y="308" width="48" height="15" fill="rgb(239,61,0)"/><text x="704.00" y="318.50">pybi..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (15 samples, 4.14%)</title><rect x="701" y="324" width="48" height="15" fill="rgb(240,64,1)"/><text x="704.00" y="334.50">pybi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (15 samples, 4.14%)</title><rect x="701" y="340" width="48" height="15" fill="rgb(231,18,9)"/><text x="704.00" y="350.50">pybi..</text></g><g><title>pybind11::array::~array (numpy.h:538) (15 samples, 4.14%)</title><rect x="701" y="356" width="48" height="15" fill="rgb(244,32,2)"/><text x="704.00" y="366.50">pybi..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (15 samples, 4.14%)</title><rect x="701" y="372" width="48" height="15" fill="rgb(216,193,42)"/><text x="704.00" y="382.50">pybi..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (15 samples, 4.14%)</title><rect x="701" y="388" width="48" height="15" fill="rgb(239,11,47)"/><text x="704.00" y="398.50">pybi..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (15 samples, 4.14%)</title><rect x="701" y="404" width="48" height="15" fill="rgb(214,90,14)"/><text x="704.00" y="414.50">pybi..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (15 samples, 4.14%)</title><rect x="701" y="420" width="48" height="15" fill="rgb(232,12,50)"/><text x="704.00" y="430.50">Runt..</text></g><g><title>pybind11::array::size (numpy.h:619) (15 samples, 4.14%)</title><rect x="701" y="436" width="48" height="15" fill="rgb(238,115,11)"/><text x="704.00" y="446.50">pybi..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (15 samples, 4.14%)</title><rect x="701" y="452" width="48" height="15" fill="rgb(209,9,39)"/><text x="704.00" y="462.50">std:..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (14 samples, 3.87%)</title><rect x="704" y="468" width="45" height="15" fill="rgb(242,17,34)"/><text x="707.00" y="478.50">GOMP..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (14 samples, 3.87%)</title><rect x="704" y="484" width="45" height="15" fill="rgb(213,11,38)"/><text x="707.00" y="494.50">Runt..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (13 samples, 3.59%)</title><rect x="707" y="500" width="42" height="15" fill="rgb(235,144,21)"/><text x="710.00" y="510.50">std..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:608) (1 samples, 0.28%)</title><rect x="746" y="516" width="3" height="15" fill="rgb(221,142,25)"/><text x="749.00" y="526.50"></text></g><g><title>0x7f37e7228ff9 (?) (1 samples, 0.28%)</title><rect x="749" y="212" width="4" height="15" fill="rgb(238,70,25)"/><text x="752.00" y="222.50"></text></g><g><title>0x7f37e7223ef6 (?) (1 samples, 0.28%)</title><rect x="749" y="228" width="4" height="15" fill="rgb(208,123,47)"/><text x="752.00" y="238.50"></text></g><g><title>0x7f37e7218962 (?) (1 samples, 0.28%)</title><rect x="749" y="244" width="4" height="15" fill="rgb(215,4,3)"/><text x="752.00" y="254.50"></text></g><g><title>0x7f37e724c7a7 (?) (1 samples, 0.28%)</title><rect x="749" y="260" width="4" height="15" fill="rgb(224,128,10)"/><text x="752.00" y="270.50"></text></g><g><title>0x7f37e724c379 (?) (1 samples, 0.28%)</title><rect x="749" y="276" width="4" height="15" fill="rgb(240,101,24)"/><text x="752.00" y="286.50"></text></g><g><title>0x7f37e76aa8b8 (?) (1 samples, 0.28%)</title><rect x="749" y="292" width="4" height="15" fill="rgb(225,167,12)"/><text x="752.00" y="302.50"></text></g><g><title>0x7f37e76a8c7f (?) (1 samples, 0.28%)</title><rect x="749" y="308" width="4" height="15" fill="rgb(229,109,18)"/><text x="752.00" y="318.50"></text></g><g><title>0x7f37e76bb99c (?) (1 samples, 0.28%)</title><rect x="749" y="324" width="4" height="15" fill="rgb(236,73,19)"/><text x="752.00" y="334.50"></text></g><g><title>0x7f37e73e2dc2 (?) (1 samples, 0.28%)</title><rect x="749" y="340" width="4" height="15" fill="rgb(225,31,30)"/><text x="752.00" y="350.50"></text></g><g><title>0x7f37e73e25fd (?) (1 samples, 0.28%)</title><rect x="749" y="356" width="4" height="15" fill="rgb(233,37,7)"/><text x="752.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="356" width="4" height="15" fill="rgb(223,4,7)"/><text x="765.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="372" width="4" height="15" fill="rgb(228,74,27)"/><text x="765.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="388" width="4" height="15" fill="rgb(211,19,33)"/><text x="765.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="404" width="4" height="15" fill="rgb(211,160,48)"/><text x="765.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="420" width="4" height="15" fill="rgb(246,44,48)"/><text x="765.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="436" width="4" height="15" fill="rgb(242,5,15)"/><text x="765.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="452" width="4" height="15" fill="rgb(221,26,3)"/><text x="765.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Alloc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="762" y="468" width="4" height="15" fill="rgb(225,204,36)"/><text x="765.00" y="478.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 35.36%)</title><rect x="766" y="356" width="417" height="15" fill="rgb(246,32,14)"/><text x="769.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTr..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1180" y="372" width="3" height="15" fill="rgb(213,22,2)"/><text x="1183.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="1180" y="388" width="3" height="15" fill="rgb(244,189,30)"/><text x="1183.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1180" y="404" width="3" height="15" fill="rgb(241,159,43)"/><text x="1183.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1180" y="420" width="3" height="15" fill="rgb(239,36,12)"/><text x="1183.00" y="430.50"></text></g><g><title>all (362 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(233,146,11)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:68) (135 samples, 37.29%)</title><rect x="749" y="52" width="441" height="15" fill="rgb(231,171,32)"/><text x="752.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_..</text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:67) (135 samples, 37.29%)</title><rect x="749" y="68" width="441" height="15" fill="rgb(229,217,4)"/><text x="752.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_b_reg_1000_..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:37) (135 samples, 37.29%)</title><rect x="749" y="84" width="441" height="15" fill="rgb(242,188,43)"/><text x="752.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_100..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py:31) (135 samples, 37.29%)</title><rect x="749" y="100" width="441" height="15" fill="rgb(206,117,29)"/><text x="752.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_50_1..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (135 samples, 37.29%)</title><rect x="749" y="116" width="441" height="15" fill="rgb(230,98,33)"/><text x="752.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (135 samples, 37.29%)</title><rect x="749" y="132" width="441" height="15" fill="rgb(243,47,2)"/><text x="752.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (135 samples, 37.29%)</title><rect x="749" y="148" width="441" height="15" fill="rgb(244,51,46)"/><text x="752.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (135 samples, 37.29%)</title><rect x="749" y="164" width="441" height="15" fill="rgb(252,153,27)"/><text x="752.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (135 samples, 37.29%)</title><rect x="749" y="180" width="441" height="15" fill="rgb(247,160,1)"/><text x="752.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (135 samples, 37.29%)</title><rect x="749" y="196" width="441" height="15" fill="rgb(245,206,3)"/><text x="752.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="212" width="437" height="15" fill="rgb(235,141,31)"/><text x="756.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="228" width="437" height="15" fill="rgb(213,77,39)"/><text x="756.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="244" width="437" height="15" fill="rgb(237,221,43)"/><text x="756.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="260" width="437" height="15" fill="rgb(231,116,4)"/><text x="756.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="276" width="437" height="15" fill="rgb(235,136,28)"/><text x="756.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="292" width="437" height="15" fill="rgb(232,79,11)"/><text x="756.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="308" width="437" height="15" fill="rgb(220,25,48)"/><text x="756.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="324" width="437" height="15" fill="rgb(244,11,50)"/><text x="756.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 37.02%)</title><rect x="753" y="340" width="437" height="15" fill="rgb(232,73,45)"/><text x="756.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onn..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.55%)</title><rect x="1183" y="356" width="7" height="15" fill="rgb(250,204,51)"/><text x="1186.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(217,221,12)"/><text x="1189.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="1186" y="388" width="4" height="15" fill="rgb(208,167,54)"/><text x="1189.00" y="398.50"></text></g></g></svg>