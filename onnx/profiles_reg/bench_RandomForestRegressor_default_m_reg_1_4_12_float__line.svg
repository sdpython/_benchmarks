<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2118" onload="init(evt)" viewBox="0 0 1200 2118" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2118" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2101.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2101.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.43%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(217,44,26)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.43%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(220,52,35)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.43%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(227,61,24)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.43%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(237,229,22)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.43%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(222,97,35)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2130) (1 samples, 0.43%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(222,178,32)"/><text x="13.00" y="942.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:1935) (1 samples, 0.43%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(223,130,24)"/><text x="13.00" y="958.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.43%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(248,228,23)"/><text x="18.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.43%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(224,62,50)"/><text x="18.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.43%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(233,109,21)"/><text x="18.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.43%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(253,198,2)"/><text x="18.00" y="990.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.43%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(219,18,6)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (3 samples, 1.30%)</title><rect x="10" y="820" width="15" height="15" fill="rgb(245,228,54)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (3 samples, 1.30%)</title><rect x="10" y="836" width="15" height="15" fill="rgb(221,57,34)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.87%)</title><rect x="15" y="852" width="10" height="15" fill="rgb(244,74,3)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.87%)</title><rect x="15" y="868" width="10" height="15" fill="rgb(228,34,11)"/><text x="18.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.87%)</title><rect x="15" y="884" width="10" height="15" fill="rgb(252,194,38)"/><text x="18.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.87%)</title><rect x="15" y="900" width="10" height="15" fill="rgb(218,174,31)"/><text x="18.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.87%)</title><rect x="15" y="916" width="10" height="15" fill="rgb(228,140,36)"/><text x="18.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.43%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(248,26,36)"/><text x="23.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:2) (4 samples, 1.73%)</title><rect x="10" y="148" width="20" height="15" fill="rgb(226,85,31)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="164" width="20" height="15" fill="rgb(253,18,51)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.73%)</title><rect x="10" y="180" width="20" height="15" fill="rgb(238,212,13)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="196" width="20" height="15" fill="rgb(213,178,46)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="212" width="20" height="15" fill="rgb(235,179,16)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.73%)</title><rect x="10" y="228" width="20" height="15" fill="rgb(241,13,27)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.73%)</title><rect x="10" y="244" width="20" height="15" fill="rgb(250,34,45)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.73%)</title><rect x="10" y="260" width="20" height="15" fill="rgb(239,56,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="276" width="20" height="15" fill="rgb(234,200,14)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 1.73%)</title><rect x="10" y="292" width="20" height="15" fill="rgb(207,55,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="308" width="20" height="15" fill="rgb(244,175,20)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.73%)</title><rect x="10" y="324" width="20" height="15" fill="rgb(225,172,8)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.73%)</title><rect x="10" y="340" width="20" height="15" fill="rgb(215,201,25)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.73%)</title><rect x="10" y="356" width="20" height="15" fill="rgb(220,216,9)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="372" width="20" height="15" fill="rgb(212,29,21)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 1.73%)</title><rect x="10" y="388" width="20" height="15" fill="rgb(248,47,3)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="404" width="20" height="15" fill="rgb(211,79,4)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.73%)</title><rect x="10" y="420" width="20" height="15" fill="rgb(238,177,15)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.73%)</title><rect x="10" y="436" width="20" height="15" fill="rgb(214,227,9)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.73%)</title><rect x="10" y="452" width="20" height="15" fill="rgb(209,140,17)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="468" width="20" height="15" fill="rgb(244,214,8)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 1.73%)</title><rect x="10" y="484" width="20" height="15" fill="rgb(230,148,4)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="500" width="20" height="15" fill="rgb(210,84,49)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.73%)</title><rect x="10" y="516" width="20" height="15" fill="rgb(229,152,13)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.73%)</title><rect x="10" y="532" width="20" height="15" fill="rgb(206,132,9)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.73%)</title><rect x="10" y="548" width="20" height="15" fill="rgb(252,157,21)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="564" width="20" height="15" fill="rgb(221,40,6)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 1.73%)</title><rect x="10" y="580" width="20" height="15" fill="rgb(222,54,26)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="596" width="20" height="15" fill="rgb(253,170,2)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 1.73%)</title><rect x="10" y="612" width="20" height="15" fill="rgb(246,141,47)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="628" width="20" height="15" fill="rgb(239,67,14)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="644" width="20" height="15" fill="rgb(223,132,38)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.73%)</title><rect x="10" y="660" width="20" height="15" fill="rgb(214,163,36)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.73%)</title><rect x="10" y="676" width="20" height="15" fill="rgb(231,0,21)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.73%)</title><rect x="10" y="692" width="20" height="15" fill="rgb(242,155,45)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="708" width="20" height="15" fill="rgb(242,224,21)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 1.73%)</title><rect x="10" y="724" width="20" height="15" fill="rgb(219,179,48)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.73%)</title><rect x="10" y="740" width="20" height="15" fill="rgb(226,31,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.73%)</title><rect x="10" y="756" width="20" height="15" fill="rgb(208,151,44)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.73%)</title><rect x="10" y="772" width="20" height="15" fill="rgb(251,45,39)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.73%)</title><rect x="10" y="788" width="20" height="15" fill="rgb(225,166,0)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.73%)</title><rect x="10" y="804" width="20" height="15" fill="rgb(248,5,42)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.43%)</title><rect x="25" y="820" width="5" height="15" fill="rgb(231,165,2)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="25" y="836" width="5" height="15" fill="rgb(250,90,10)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="25" y="852" width="5" height="15" fill="rgb(242,200,32)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="25" y="868" width="5" height="15" fill="rgb(232,1,54)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="25" y="884" width="5" height="15" fill="rgb(253,104,41)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="25" y="900" width="5" height="15" fill="rgb(249,16,12)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:47) (1 samples, 0.43%)</title><rect x="25" y="916" width="5" height="15" fill="rgb(253,150,8)"/><text x="28.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:2792) (1 samples, 0.43%)</title><rect x="25" y="932" width="5" height="15" fill="rgb(249,126,46)"/><text x="28.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.43%)</title><rect x="25" y="948" width="5" height="15" fill="rgb(215,175,47)"/><text x="28.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.43%)</title><rect x="25" y="964" width="5" height="15" fill="rgb(229,31,9)"/><text x="28.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.43%)</title><rect x="25" y="980" width="5" height="15" fill="rgb(221,136,5)"/><text x="28.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.43%)</title><rect x="25" y="996" width="5" height="15" fill="rgb(220,21,10)"/><text x="28.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.43%)</title><rect x="25" y="1012" width="5" height="15" fill="rgb(213,115,24)"/><text x="28.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.43%)</title><rect x="25" y="1028" width="5" height="15" fill="rgb(249,109,7)"/><text x="28.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.43%)</title><rect x="25" y="1044" width="5" height="15" fill="rgb(230,87,0)"/><text x="28.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.43%)</title><rect x="25" y="1060" width="5" height="15" fill="rgb(246,82,45)"/><text x="28.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.43%)</title><rect x="25" y="1076" width="5" height="15" fill="rgb(234,73,1)"/><text x="28.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:493) (1 samples, 0.43%)</title><rect x="25" y="1092" width="5" height="15" fill="rgb(220,179,28)"/><text x="28.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.43%)</title><rect x="30" y="180" width="5" height="15" fill="rgb(231,95,32)"/><text x="33.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="196" width="5" height="15" fill="rgb(246,32,6)"/><text x="33.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="212" width="5" height="15" fill="rgb(220,78,26)"/><text x="33.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="228" width="5" height="15" fill="rgb(211,227,32)"/><text x="33.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="244" width="5" height="15" fill="rgb(216,26,50)"/><text x="33.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="260" width="5" height="15" fill="rgb(251,119,17)"/><text x="33.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="276" width="5" height="15" fill="rgb(230,107,37)"/><text x="33.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.43%)</title><rect x="30" y="292" width="5" height="15" fill="rgb(239,74,33)"/><text x="33.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="308" width="5" height="15" fill="rgb(222,45,38)"/><text x="33.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="324" width="5" height="15" fill="rgb(221,77,18)"/><text x="33.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="340" width="5" height="15" fill="rgb(232,164,32)"/><text x="33.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="356" width="5" height="15" fill="rgb(240,117,36)"/><text x="33.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="372" width="5" height="15" fill="rgb(241,117,7)"/><text x="33.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.43%)</title><rect x="30" y="388" width="5" height="15" fill="rgb(211,68,20)"/><text x="33.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="404" width="5" height="15" fill="rgb(245,33,26)"/><text x="33.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="420" width="5" height="15" fill="rgb(224,66,43)"/><text x="33.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="436" width="5" height="15" fill="rgb(207,29,23)"/><text x="33.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="452" width="5" height="15" fill="rgb(208,53,11)"/><text x="33.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="468" width="5" height="15" fill="rgb(216,218,12)"/><text x="33.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.43%)</title><rect x="30" y="484" width="5" height="15" fill="rgb(239,207,49)"/><text x="33.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="500" width="5" height="15" fill="rgb(253,150,4)"/><text x="33.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="516" width="5" height="15" fill="rgb(232,145,20)"/><text x="33.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="532" width="5" height="15" fill="rgb(208,50,26)"/><text x="33.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="548" width="5" height="15" fill="rgb(254,87,49)"/><text x="33.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="564" width="5" height="15" fill="rgb(243,205,52)"/><text x="33.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.43%)</title><rect x="30" y="580" width="5" height="15" fill="rgb(254,10,54)"/><text x="33.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="596" width="5" height="15" fill="rgb(219,161,22)"/><text x="33.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="612" width="5" height="15" fill="rgb(205,116,26)"/><text x="33.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="628" width="5" height="15" fill="rgb(251,51,43)"/><text x="33.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="644" width="5" height="15" fill="rgb(234,48,3)"/><text x="33.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="660" width="5" height="15" fill="rgb(218,35,9)"/><text x="33.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.43%)</title><rect x="30" y="676" width="5" height="15" fill="rgb(207,40,49)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="692" width="5" height="15" fill="rgb(207,157,36)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="708" width="5" height="15" fill="rgb(247,120,51)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="724" width="5" height="15" fill="rgb(249,113,15)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="740" width="5" height="15" fill="rgb(247,93,38)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="756" width="5" height="15" fill="rgb(224,3,3)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.43%)</title><rect x="30" y="772" width="5" height="15" fill="rgb(212,175,38)"/><text x="33.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="30" y="788" width="5" height="15" fill="rgb(245,86,22)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="804" width="5" height="15" fill="rgb(220,82,2)"/><text x="33.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="820" width="5" height="15" fill="rgb(250,5,1)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="836" width="5" height="15" fill="rgb(251,37,31)"/><text x="33.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="852" width="5" height="15" fill="rgb(242,100,10)"/><text x="33.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="868" width="5" height="15" fill="rgb(243,182,20)"/><text x="33.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="884" width="5" height="15" fill="rgb(227,151,27)"/><text x="33.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.43%)</title><rect x="30" y="900" width="5" height="15" fill="rgb(253,118,26)"/><text x="33.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="916" width="5" height="15" fill="rgb(220,137,12)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="932" width="5" height="15" fill="rgb(209,54,37)"/><text x="33.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="948" width="5" height="15" fill="rgb(234,16,5)"/><text x="33.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="964" width="5" height="15" fill="rgb(222,111,34)"/><text x="33.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="980" width="5" height="15" fill="rgb(222,43,45)"/><text x="33.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.43%)</title><rect x="30" y="996" width="5" height="15" fill="rgb(238,191,9)"/><text x="33.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="30" y="1012" width="5" height="15" fill="rgb(222,44,24)"/><text x="33.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="1028" width="5" height="15" fill="rgb(220,228,48)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="1044" width="5" height="15" fill="rgb(214,19,29)"/><text x="33.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="1060" width="5" height="15" fill="rgb(231,15,39)"/><text x="33.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="1076" width="5" height="15" fill="rgb(213,136,16)"/><text x="33.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="30" y="1092" width="5" height="15" fill="rgb(236,118,38)"/><text x="33.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="30" y="1108" width="5" height="15" fill="rgb(224,176,50)"/><text x="33.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.43%)</title><rect x="30" y="1124" width="5" height="15" fill="rgb(252,23,41)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="30" y="1140" width="5" height="15" fill="rgb(209,135,52)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="30" y="1156" width="5" height="15" fill="rgb(209,165,48)"/><text x="33.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="30" y="1172" width="5" height="15" fill="rgb(228,24,5)"/><text x="33.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.43%)</title><rect x="30" y="1188" width="5" height="15" fill="rgb(254,44,2)"/><text x="33.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.43%)</title><rect x="30" y="1204" width="5" height="15" fill="rgb(225,76,10)"/><text x="33.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.43%)</title><rect x="30" y="1220" width="5" height="15" fill="rgb(254,90,44)"/><text x="33.00" y="1230.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:54) (1 samples, 0.43%)</title><rect x="35" y="340" width="5" height="15" fill="rgb(244,201,52)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="35" y="356" width="5" height="15" fill="rgb(229,10,50)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="35" y="372" width="5" height="15" fill="rgb(209,176,16)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="35" y="388" width="5" height="15" fill="rgb(242,192,16)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="35" y="404" width="5" height="15" fill="rgb(239,121,38)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="35" y="420" width="5" height="15" fill="rgb(237,43,21)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:7) (1 samples, 0.43%)</title><rect x="35" y="436" width="5" height="15" fill="rgb(244,182,48)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="35" y="452" width="5" height="15" fill="rgb(223,114,10)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="35" y="468" width="5" height="15" fill="rgb(245,225,8)"/><text x="38.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="35" y="484" width="5" height="15" fill="rgb(233,128,26)"/><text x="38.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="35" y="500" width="5" height="15" fill="rgb(233,148,9)"/><text x="38.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="35" y="516" width="5" height="15" fill="rgb(208,18,53)"/><text x="38.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/_ranking.py:35) (1 samples, 0.43%)</title><rect x="35" y="532" width="5" height="15" fill="rgb(235,119,29)"/><text x="38.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="35" y="548" width="5" height="15" fill="rgb(214,76,54)"/><text x="38.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="35" y="564" width="5" height="15" fill="rgb(249,124,27)"/><text x="38.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="35" y="580" width="5" height="15" fill="rgb(253,93,23)"/><text x="38.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="35" y="596" width="5" height="15" fill="rgb(206,183,26)"/><text x="38.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="35" y="612" width="5" height="15" fill="rgb(215,178,6)"/><text x="38.00" y="622.50"></text></g><g><title>&lt;module&gt; (sklearn/preprocessing/__init__.py:8) (1 samples, 0.43%)</title><rect x="35" y="628" width="5" height="15" fill="rgb(218,58,27)"/><text x="38.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="35" y="644" width="5" height="15" fill="rgb(235,14,18)"/><text x="38.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="35" y="660" width="5" height="15" fill="rgb(214,18,32)"/><text x="38.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="35" y="676" width="5" height="15" fill="rgb(217,131,8)"/><text x="38.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.43%)</title><rect x="35" y="692" width="5" height="15" fill="rgb(229,20,17)"/><text x="38.00" y="702.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.43%)</title><rect x="35" y="708" width="5" height="15" fill="rgb(254,181,39)"/><text x="38.00" y="718.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.43%)</title><rect x="35" y="724" width="5" height="15" fill="rgb(227,81,13)"/><text x="38.00" y="734.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:4) (3 samples, 1.30%)</title><rect x="30" y="148" width="15" height="15" fill="rgb(210,108,44)"/><text x="33.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.30%)</title><rect x="30" y="164" width="15" height="15" fill="rgb(220,55,47)"/><text x="33.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="35" y="180" width="10" height="15" fill="rgb(244,188,38)"/><text x="38.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="35" y="196" width="10" height="15" fill="rgb(248,166,26)"/><text x="38.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="35" y="212" width="10" height="15" fill="rgb(205,104,0)"/><text x="38.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="35" y="228" width="10" height="15" fill="rgb(236,81,39)"/><text x="38.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py:7) (2 samples, 0.87%)</title><rect x="35" y="244" width="10" height="15" fill="rgb(225,223,34)"/><text x="38.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="35" y="260" width="10" height="15" fill="rgb(231,188,23)"/><text x="38.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="35" y="276" width="10" height="15" fill="rgb(231,111,34)"/><text x="38.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="35" y="292" width="10" height="15" fill="rgb(242,80,2)"/><text x="38.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="35" y="308" width="10" height="15" fill="rgb(231,86,42)"/><text x="38.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="35" y="324" width="10" height="15" fill="rgb(249,25,8)"/><text x="38.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py:56) (1 samples, 0.43%)</title><rect x="40" y="340" width="5" height="15" fill="rgb(251,206,46)"/><text x="43.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="40" y="356" width="5" height="15" fill="rgb(241,204,15)"/><text x="43.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="40" y="372" width="5" height="15" fill="rgb(216,83,44)"/><text x="43.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="40" y="388" width="5" height="15" fill="rgb(212,43,0)"/><text x="43.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="40" y="404" width="5" height="15" fill="rgb(218,145,38)"/><text x="43.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="40" y="420" width="5" height="15" fill="rgb(242,110,40)"/><text x="43.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.43%)</title><rect x="40" y="436" width="5" height="15" fill="rgb(206,46,6)"/><text x="43.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="40" y="452" width="5" height="15" fill="rgb(253,136,49)"/><text x="43.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="40" y="468" width="5" height="15" fill="rgb(240,25,30)"/><text x="43.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="40" y="484" width="5" height="15" fill="rgb(206,218,13)"/><text x="43.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="40" y="500" width="5" height="15" fill="rgb(231,185,32)"/><text x="43.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="40" y="516" width="5" height="15" fill="rgb(233,57,31)"/><text x="43.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.43%)</title><rect x="40" y="532" width="5" height="15" fill="rgb(227,127,9)"/><text x="43.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="40" y="548" width="5" height="15" fill="rgb(239,38,51)"/><text x="43.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="40" y="564" width="5" height="15" fill="rgb(242,125,52)"/><text x="43.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="40" y="580" width="5" height="15" fill="rgb(251,206,27)"/><text x="43.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1051) (1 samples, 0.43%)</title><rect x="40" y="596" width="5" height="15" fill="rgb(214,43,10)"/><text x="43.00" y="606.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.43%)</title><rect x="45" y="1780" width="5" height="15" fill="rgb(210,207,13)"/><text x="48.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="45" y="1796" width="5" height="15" fill="rgb(233,200,45)"/><text x="48.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="45" y="1812" width="5" height="15" fill="rgb(242,13,35)"/><text x="48.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="45" y="1828" width="5" height="15" fill="rgb(219,98,34)"/><text x="48.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="45" y="1844" width="5" height="15" fill="rgb(210,184,1)"/><text x="48.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="45" y="1860" width="5" height="15" fill="rgb(207,90,25)"/><text x="48.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.43%)</title><rect x="45" y="1876" width="5" height="15" fill="rgb(239,184,15)"/><text x="48.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.43%)</title><rect x="45" y="1892" width="5" height="15" fill="rgb(254,149,9)"/><text x="48.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="45" y="1908" width="5" height="15" fill="rgb(222,44,7)"/><text x="48.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="45" y="1924" width="5" height="15" fill="rgb(250,56,5)"/><text x="48.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="45" y="1940" width="5" height="15" fill="rgb(230,18,37)"/><text x="48.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="45" y="1956" width="5" height="15" fill="rgb(247,29,38)"/><text x="48.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="45" y="1972" width="5" height="15" fill="rgb(236,85,48)"/><text x="48.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="45" y="1988" width="5" height="15" fill="rgb(231,82,26)"/><text x="48.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.43%)</title><rect x="45" y="2004" width="5" height="15" fill="rgb(209,153,54)"/><text x="48.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.43%)</title><rect x="45" y="2020" width="5" height="15" fill="rgb(253,110,23)"/><text x="48.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.43%)</title><rect x="45" y="2036" width="5" height="15" fill="rgb(219,56,38)"/><text x="48.00" y="2046.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.43%)</title><rect x="45" y="2052" width="5" height="15" fill="rgb(231,117,45)"/><text x="48.00" y="2062.50"></text></g><g><title>getfullargspec (inspect.py:1146) (1 samples, 0.43%)</title><rect x="45" y="2068" width="5" height="15" fill="rgb(206,121,48)"/><text x="48.00" y="2078.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.87%)</title><rect x="45" y="724" width="10" height="15" fill="rgb(221,130,39)"/><text x="48.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="740" width="10" height="15" fill="rgb(245,163,0)"/><text x="48.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="756" width="10" height="15" fill="rgb(237,159,49)"/><text x="48.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="772" width="10" height="15" fill="rgb(235,60,26)"/><text x="48.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="788" width="10" height="15" fill="rgb(229,62,28)"/><text x="48.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="804" width="10" height="15" fill="rgb(207,205,4)"/><text x="48.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.87%)</title><rect x="45" y="820" width="10" height="15" fill="rgb(223,119,16)"/><text x="48.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="836" width="10" height="15" fill="rgb(208,224,51)"/><text x="48.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="852" width="10" height="15" fill="rgb(250,152,41)"/><text x="48.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="868" width="10" height="15" fill="rgb(254,11,40)"/><text x="48.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="884" width="10" height="15" fill="rgb(205,32,45)"/><text x="48.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="900" width="10" height="15" fill="rgb(222,77,19)"/><text x="48.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.87%)</title><rect x="45" y="916" width="10" height="15" fill="rgb(248,61,26)"/><text x="48.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="932" width="10" height="15" fill="rgb(248,149,30)"/><text x="48.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="948" width="10" height="15" fill="rgb(253,106,34)"/><text x="48.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="964" width="10" height="15" fill="rgb(248,119,38)"/><text x="48.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="980" width="10" height="15" fill="rgb(215,42,26)"/><text x="48.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="996" width="10" height="15" fill="rgb(222,143,33)"/><text x="48.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.87%)</title><rect x="45" y="1012" width="10" height="15" fill="rgb(214,178,9)"/><text x="48.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1028" width="10" height="15" fill="rgb(216,48,32)"/><text x="48.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1044" width="10" height="15" fill="rgb(213,87,52)"/><text x="48.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1060" width="10" height="15" fill="rgb(248,56,22)"/><text x="48.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1076" width="10" height="15" fill="rgb(250,29,22)"/><text x="48.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1092" width="10" height="15" fill="rgb(248,177,33)"/><text x="48.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.87%)</title><rect x="45" y="1108" width="10" height="15" fill="rgb(241,26,21)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1124" width="10" height="15" fill="rgb(241,193,11)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1140" width="10" height="15" fill="rgb(228,211,46)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1156" width="10" height="15" fill="rgb(246,189,12)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1172" width="10" height="15" fill="rgb(240,52,14)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1188" width="10" height="15" fill="rgb(217,47,54)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.87%)</title><rect x="45" y="1204" width="10" height="15" fill="rgb(217,176,21)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1220" width="10" height="15" fill="rgb(225,91,5)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1236" width="10" height="15" fill="rgb(217,195,17)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1252" width="10" height="15" fill="rgb(212,122,54)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1268" width="10" height="15" fill="rgb(231,69,9)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1284" width="10" height="15" fill="rgb(214,202,50)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.87%)</title><rect x="45" y="1300" width="10" height="15" fill="rgb(229,54,42)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1316" width="10" height="15" fill="rgb(218,94,7)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1332" width="10" height="15" fill="rgb(233,90,2)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1348" width="10" height="15" fill="rgb(221,26,28)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1364" width="10" height="15" fill="rgb(250,48,50)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1380" width="10" height="15" fill="rgb(215,58,18)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.87%)</title><rect x="45" y="1396" width="10" height="15" fill="rgb(239,115,38)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1412" width="10" height="15" fill="rgb(239,148,20)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1428" width="10" height="15" fill="rgb(225,161,10)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1444" width="10" height="15" fill="rgb(240,38,1)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1460" width="10" height="15" fill="rgb(234,221,8)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1476" width="10" height="15" fill="rgb(235,93,28)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (2 samples, 0.87%)</title><rect x="45" y="1492" width="10" height="15" fill="rgb(211,141,37)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1508" width="10" height="15" fill="rgb(221,113,54)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1524" width="10" height="15" fill="rgb(248,168,52)"/><text x="48.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1540" width="10" height="15" fill="rgb(246,77,12)"/><text x="48.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1556" width="10" height="15" fill="rgb(213,13,30)"/><text x="48.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1572" width="10" height="15" fill="rgb(249,196,2)"/><text x="48.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (2 samples, 0.87%)</title><rect x="45" y="1588" width="10" height="15" fill="rgb(218,71,34)"/><text x="48.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1604" width="10" height="15" fill="rgb(243,217,11)"/><text x="48.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1620" width="10" height="15" fill="rgb(231,44,50)"/><text x="48.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1636" width="10" height="15" fill="rgb(209,122,45)"/><text x="48.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1652" width="10" height="15" fill="rgb(209,226,50)"/><text x="48.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1668" width="10" height="15" fill="rgb(249,65,14)"/><text x="48.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (2 samples, 0.87%)</title><rect x="45" y="1684" width="10" height="15" fill="rgb(229,64,34)"/><text x="48.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="45" y="1700" width="10" height="15" fill="rgb(231,9,53)"/><text x="48.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="45" y="1716" width="10" height="15" fill="rgb(225,143,42)"/><text x="48.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="45" y="1732" width="10" height="15" fill="rgb(211,136,36)"/><text x="48.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="45" y="1748" width="10" height="15" fill="rgb(228,213,52)"/><text x="48.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="45" y="1764" width="10" height="15" fill="rgb(243,198,52)"/><text x="48.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.43%)</title><rect x="50" y="1780" width="5" height="15" fill="rgb(224,24,9)"/><text x="53.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="1796" width="5" height="15" fill="rgb(209,33,38)"/><text x="53.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="1812" width="5" height="15" fill="rgb(254,217,53)"/><text x="53.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="1828" width="5" height="15" fill="rgb(242,178,49)"/><text x="53.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="1844" width="5" height="15" fill="rgb(237,7,43)"/><text x="53.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="1860" width="5" height="15" fill="rgb(235,31,31)"/><text x="53.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:17) (1 samples, 0.43%)</title><rect x="50" y="1876" width="5" height="15" fill="rgb(253,58,17)"/><text x="53.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="1892" width="5" height="15" fill="rgb(245,122,37)"/><text x="53.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="1908" width="5" height="15" fill="rgb(221,88,23)"/><text x="53.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="1924" width="5" height="15" fill="rgb(225,83,17)"/><text x="53.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="50" y="1940" width="5" height="15" fill="rgb(254,97,8)"/><text x="53.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="50" y="1956" width="5" height="15" fill="rgb(243,87,46)"/><text x="53.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py:12) (1 samples, 0.43%)</title><rect x="50" y="1972" width="5" height="15" fill="rgb(232,143,20)"/><text x="53.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="50" y="1988" width="5" height="15" fill="rgb(239,179,31)"/><text x="53.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="50" y="2004" width="5" height="15" fill="rgb(225,212,32)"/><text x="53.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="50" y="2020" width="5" height="15" fill="rgb(206,163,34)"/><text x="53.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.43%)</title><rect x="50" y="2036" width="5" height="15" fill="rgb(207,44,11)"/><text x="53.00" y="2046.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.43%)</title><rect x="50" y="2052" width="5" height="15" fill="rgb(245,85,14)"/><text x="53.00" y="2062.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.43%)</title><rect x="50" y="2068" width="5" height="15" fill="rgb(235,224,0)"/><text x="53.00" y="2078.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 1.30%)</title><rect x="45" y="436" width="16" height="15" fill="rgb(238,24,3)"/><text x="48.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.30%)</title><rect x="45" y="452" width="16" height="15" fill="rgb(237,145,3)"/><text x="48.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.30%)</title><rect x="45" y="468" width="16" height="15" fill="rgb(218,16,50)"/><text x="48.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.30%)</title><rect x="45" y="484" width="16" height="15" fill="rgb(251,176,40)"/><text x="48.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.30%)</title><rect x="45" y="500" width="16" height="15" fill="rgb(216,218,9)"/><text x="48.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.30%)</title><rect x="45" y="516" width="16" height="15" fill="rgb(252,95,49)"/><text x="48.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 1.30%)</title><rect x="45" y="532" width="16" height="15" fill="rgb(236,106,51)"/><text x="48.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.30%)</title><rect x="45" y="548" width="16" height="15" fill="rgb(220,136,52)"/><text x="48.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.30%)</title><rect x="45" y="564" width="16" height="15" fill="rgb(253,9,33)"/><text x="48.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.30%)</title><rect x="45" y="580" width="16" height="15" fill="rgb(227,67,12)"/><text x="48.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.30%)</title><rect x="45" y="596" width="16" height="15" fill="rgb(228,204,7)"/><text x="48.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.30%)</title><rect x="45" y="612" width="16" height="15" fill="rgb(231,66,53)"/><text x="48.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 1.30%)</title><rect x="45" y="628" width="16" height="15" fill="rgb(249,144,42)"/><text x="48.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.30%)</title><rect x="45" y="644" width="16" height="15" fill="rgb(236,94,6)"/><text x="48.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.30%)</title><rect x="45" y="660" width="16" height="15" fill="rgb(231,227,45)"/><text x="48.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.30%)</title><rect x="45" y="676" width="16" height="15" fill="rgb(232,212,50)"/><text x="48.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.30%)</title><rect x="45" y="692" width="16" height="15" fill="rgb(209,122,53)"/><text x="48.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.30%)</title><rect x="45" y="708" width="16" height="15" fill="rgb(241,27,49)"/><text x="48.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.43%)</title><rect x="55" y="724" width="6" height="15" fill="rgb(207,220,20)"/><text x="58.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="740" width="6" height="15" fill="rgb(234,207,45)"/><text x="58.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.43%)</title><rect x="55" y="756" width="6" height="15" fill="rgb(225,92,54)"/><text x="58.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="772" width="6" height="15" fill="rgb(243,185,37)"/><text x="58.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="788" width="6" height="15" fill="rgb(220,91,25)"/><text x="58.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="804" width="6" height="15" fill="rgb(233,193,14)"/><text x="58.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="820" width="6" height="15" fill="rgb(252,46,34)"/><text x="58.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="836" width="6" height="15" fill="rgb(227,205,18)"/><text x="58.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="852" width="6" height="15" fill="rgb(234,200,46)"/><text x="58.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:1) (1 samples, 0.43%)</title><rect x="55" y="868" width="6" height="15" fill="rgb(207,180,12)"/><text x="58.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="884" width="6" height="15" fill="rgb(230,86,53)"/><text x="58.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="900" width="6" height="15" fill="rgb(248,139,0)"/><text x="58.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="916" width="6" height="15" fill="rgb(221,8,18)"/><text x="58.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="932" width="6" height="15" fill="rgb(216,124,37)"/><text x="58.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="948" width="6" height="15" fill="rgb(245,91,24)"/><text x="58.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py:7) (1 samples, 0.43%)</title><rect x="55" y="964" width="6" height="15" fill="rgb(221,109,7)"/><text x="58.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="980" width="6" height="15" fill="rgb(238,162,2)"/><text x="58.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="996" width="6" height="15" fill="rgb(235,159,33)"/><text x="58.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="1012" width="6" height="15" fill="rgb(232,124,30)"/><text x="58.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="1028" width="6" height="15" fill="rgb(230,99,3)"/><text x="58.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="1044" width="6" height="15" fill="rgb(241,29,50)"/><text x="58.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py:11) (1 samples, 0.43%)</title><rect x="55" y="1060" width="6" height="15" fill="rgb(219,118,40)"/><text x="58.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="1076" width="6" height="15" fill="rgb(243,217,43)"/><text x="58.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="1092" width="6" height="15" fill="rgb(243,60,28)"/><text x="58.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="1108" width="6" height="15" fill="rgb(221,17,19)"/><text x="58.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.43%)</title><rect x="55" y="1124" width="6" height="15" fill="rgb(216,117,32)"/><text x="58.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="1140" width="6" height="15" fill="rgb(211,220,20)"/><text x="58.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py:9) (1 samples, 0.43%)</title><rect x="55" y="1156" width="6" height="15" fill="rgb(207,135,21)"/><text x="58.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.43%)</title><rect x="55" y="1172" width="6" height="15" fill="rgb(243,191,17)"/><text x="58.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.43%)</title><rect x="55" y="1188" width="6" height="15" fill="rgb(229,137,20)"/><text x="58.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.43%)</title><rect x="55" y="1204" width="6" height="15" fill="rgb(213,107,7)"/><text x="58.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.43%)</title><rect x="55" y="1220" width="6" height="15" fill="rgb(245,130,32)"/><text x="58.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.43%)</title><rect x="55" y="1236" width="6" height="15" fill="rgb(229,214,36)"/><text x="58.00" y="1246.50"></text></g><g><title>0x7fa8be008f3f (?) (1 samples, 0.43%)</title><rect x="55" y="1252" width="6" height="15" fill="rgb(231,81,9)"/><text x="58.00" y="1262.50"></text></g><g><title>0x7fa8be0232be (?) (1 samples, 0.43%)</title><rect x="55" y="1268" width="6" height="15" fill="rgb(249,189,45)"/><text x="58.00" y="1278.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.43%)</title><rect x="61" y="1492" width="5" height="15" fill="rgb(238,103,21)"/><text x="64.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.43%)</title><rect x="61" y="1508" width="5" height="15" fill="rgb(244,170,45)"/><text x="64.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.43%)</title><rect x="61" y="1524" width="5" height="15" fill="rgb(231,227,23)"/><text x="64.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.43%)</title><rect x="61" y="1540" width="5" height="15" fill="rgb(207,229,2)"/><text x="64.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.43%)</title><rect x="61" y="1556" width="5" height="15" fill="rgb(212,209,1)"/><text x="64.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:67) (1 samples, 0.43%)</title><rect x="61" y="1572" width="5" height="15" fill="rgb(234,226,52)"/><text x="64.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:4) (12 samples, 5.19%)</title><rect x="10" y="52" width="61" height="15" fill="rgb(227,132,44)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 5.19%)</title><rect x="10" y="68" width="61" height="15" fill="rgb(236,21,31)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 5.19%)</title><rect x="10" y="84" width="61" height="15" fill="rgb(209,152,34)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 5.19%)</title><rect x="10" y="100" width="61" height="15" fill="rgb(206,62,1)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 5.19%)</title><rect x="10" y="116" width="61" height="15" fill="rgb(220,119,32)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 5.19%)</title><rect x="10" y="132" width="61" height="15" fill="rgb(205,9,51)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:7) (5 samples, 2.16%)</title><rect x="45" y="148" width="26" height="15" fill="rgb(243,120,33)"/><text x="48.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.16%)</title><rect x="45" y="164" width="26" height="15" fill="rgb(243,29,21)"/><text x="48.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.16%)</title><rect x="45" y="180" width="26" height="15" fill="rgb(248,99,13)"/><text x="48.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.16%)</title><rect x="45" y="196" width="26" height="15" fill="rgb(252,141,29)"/><text x="48.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.16%)</title><rect x="45" y="212" width="26" height="15" fill="rgb(223,167,34)"/><text x="48.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.16%)</title><rect x="45" y="228" width="26" height="15" fill="rgb(228,171,4)"/><text x="48.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.16%)</title><rect x="45" y="244" width="26" height="15" fill="rgb(251,78,46)"/><text x="48.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.16%)</title><rect x="45" y="260" width="26" height="15" fill="rgb(220,122,1)"/><text x="48.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.16%)</title><rect x="45" y="276" width="26" height="15" fill="rgb(207,3,18)"/><text x="48.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.16%)</title><rect x="45" y="292" width="26" height="15" fill="rgb(244,91,15)"/><text x="48.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.16%)</title><rect x="45" y="308" width="26" height="15" fill="rgb(221,124,1)"/><text x="48.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.16%)</title><rect x="45" y="324" width="26" height="15" fill="rgb(226,94,6)"/><text x="48.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.16%)</title><rect x="45" y="340" width="26" height="15" fill="rgb(247,3,36)"/><text x="48.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.16%)</title><rect x="45" y="356" width="26" height="15" fill="rgb(218,68,30)"/><text x="48.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.16%)</title><rect x="45" y="372" width="26" height="15" fill="rgb(254,187,27)"/><text x="48.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.16%)</title><rect x="45" y="388" width="26" height="15" fill="rgb(247,115,15)"/><text x="48.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.16%)</title><rect x="45" y="404" width="26" height="15" fill="rgb(246,117,10)"/><text x="48.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.16%)</title><rect x="45" y="420" width="26" height="15" fill="rgb(239,115,4)"/><text x="48.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.87%)</title><rect x="61" y="436" width="10" height="15" fill="rgb(252,166,43)"/><text x="64.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="452" width="10" height="15" fill="rgb(254,16,0)"/><text x="64.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.87%)</title><rect x="61" y="468" width="10" height="15" fill="rgb(227,195,54)"/><text x="64.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="484" width="10" height="15" fill="rgb(247,117,42)"/><text x="64.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="500" width="10" height="15" fill="rgb(227,122,36)"/><text x="64.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="516" width="10" height="15" fill="rgb(252,49,38)"/><text x="64.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="532" width="10" height="15" fill="rgb(238,185,24)"/><text x="64.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="548" width="10" height="15" fill="rgb(226,112,9)"/><text x="64.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="564" width="10" height="15" fill="rgb(208,19,17)"/><text x="64.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.87%)</title><rect x="61" y="580" width="10" height="15" fill="rgb(214,80,54)"/><text x="64.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="596" width="10" height="15" fill="rgb(254,122,34)"/><text x="64.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="612" width="10" height="15" fill="rgb(213,62,46)"/><text x="64.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="628" width="10" height="15" fill="rgb(251,105,8)"/><text x="64.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="644" width="10" height="15" fill="rgb(251,7,4)"/><text x="64.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="660" width="10" height="15" fill="rgb(241,54,44)"/><text x="64.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.87%)</title><rect x="61" y="676" width="10" height="15" fill="rgb(214,123,5)"/><text x="64.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="692" width="10" height="15" fill="rgb(238,51,49)"/><text x="64.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="708" width="10" height="15" fill="rgb(242,94,42)"/><text x="64.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="724" width="10" height="15" fill="rgb(234,216,32)"/><text x="64.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="740" width="10" height="15" fill="rgb(241,114,27)"/><text x="64.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="756" width="10" height="15" fill="rgb(231,45,52)"/><text x="64.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.87%)</title><rect x="61" y="772" width="10" height="15" fill="rgb(223,132,16)"/><text x="64.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="788" width="10" height="15" fill="rgb(236,207,1)"/><text x="64.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="804" width="10" height="15" fill="rgb(215,200,16)"/><text x="64.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="820" width="10" height="15" fill="rgb(208,160,50)"/><text x="64.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="836" width="10" height="15" fill="rgb(205,182,11)"/><text x="64.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="852" width="10" height="15" fill="rgb(234,183,13)"/><text x="64.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.87%)</title><rect x="61" y="868" width="10" height="15" fill="rgb(247,34,30)"/><text x="64.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="884" width="10" height="15" fill="rgb(227,202,15)"/><text x="64.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.87%)</title><rect x="61" y="900" width="10" height="15" fill="rgb(218,4,27)"/><text x="64.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="916" width="10" height="15" fill="rgb(243,175,47)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="932" width="10" height="15" fill="rgb(251,89,18)"/><text x="64.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="948" width="10" height="15" fill="rgb(207,145,2)"/><text x="64.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="964" width="10" height="15" fill="rgb(219,3,52)"/><text x="64.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="980" width="10" height="15" fill="rgb(205,75,41)"/><text x="64.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="996" width="10" height="15" fill="rgb(221,74,33)"/><text x="64.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.87%)</title><rect x="61" y="1012" width="10" height="15" fill="rgb(248,145,21)"/><text x="64.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="1028" width="10" height="15" fill="rgb(234,70,38)"/><text x="64.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="1044" width="10" height="15" fill="rgb(245,94,19)"/><text x="64.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="1060" width="10" height="15" fill="rgb(225,94,11)"/><text x="64.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="1076" width="10" height="15" fill="rgb(232,178,46)"/><text x="64.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="1092" width="10" height="15" fill="rgb(249,54,14)"/><text x="64.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.87%)</title><rect x="61" y="1108" width="10" height="15" fill="rgb(233,190,20)"/><text x="64.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.87%)</title><rect x="61" y="1124" width="10" height="15" fill="rgb(208,31,31)"/><text x="64.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="1140" width="10" height="15" fill="rgb(233,100,46)"/><text x="64.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="1156" width="10" height="15" fill="rgb(239,76,3)"/><text x="64.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="1172" width="10" height="15" fill="rgb(206,45,19)"/><text x="64.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="1188" width="10" height="15" fill="rgb(231,149,14)"/><text x="64.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="1204" width="10" height="15" fill="rgb(216,51,25)"/><text x="64.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="1220" width="10" height="15" fill="rgb(254,228,52)"/><text x="64.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.87%)</title><rect x="61" y="1236" width="10" height="15" fill="rgb(219,229,17)"/><text x="64.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.87%)</title><rect x="61" y="1252" width="10" height="15" fill="rgb(254,200,17)"/><text x="64.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="1268" width="10" height="15" fill="rgb(205,48,22)"/><text x="64.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="1284" width="10" height="15" fill="rgb(217,171,9)"/><text x="64.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="1300" width="10" height="15" fill="rgb(233,223,13)"/><text x="64.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="1316" width="10" height="15" fill="rgb(244,206,24)"/><text x="64.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="1332" width="10" height="15" fill="rgb(208,180,1)"/><text x="64.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="1348" width="10" height="15" fill="rgb(253,19,44)"/><text x="64.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.87%)</title><rect x="61" y="1364" width="10" height="15" fill="rgb(235,150,53)"/><text x="64.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.87%)</title><rect x="61" y="1380" width="10" height="15" fill="rgb(237,103,49)"/><text x="64.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.87%)</title><rect x="61" y="1396" width="10" height="15" fill="rgb(215,210,31)"/><text x="64.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.87%)</title><rect x="61" y="1412" width="10" height="15" fill="rgb(235,154,23)"/><text x="64.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.87%)</title><rect x="61" y="1428" width="10" height="15" fill="rgb(217,116,3)"/><text x="64.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.87%)</title><rect x="61" y="1444" width="10" height="15" fill="rgb(236,98,27)"/><text x="64.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.87%)</title><rect x="61" y="1460" width="10" height="15" fill="rgb(240,120,51)"/><text x="64.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.87%)</title><rect x="61" y="1476" width="10" height="15" fill="rgb(244,198,4)"/><text x="64.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.43%)</title><rect x="66" y="1492" width="5" height="15" fill="rgb(253,134,22)"/><text x="69.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1508" width="5" height="15" fill="rgb(224,105,34)"/><text x="69.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1524" width="5" height="15" fill="rgb(244,53,41)"/><text x="69.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1540" width="5" height="15" fill="rgb(224,200,6)"/><text x="69.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver12::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1556" width="5" height="15" fill="rgb(228,212,43)"/><text x="69.00" y="1566.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::ArgMin_Onnx_ver12&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1572" width="5" height="15" fill="rgb(229,32,23)"/><text x="69.00" y="1582.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1588" width="5" height="15" fill="rgb(216,52,50)"/><text x="69.00" y="1598.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1604" width="5" height="15" fill="rgb(232,129,33)"/><text x="69.00" y="1614.50"></text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_M_copy&lt;std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;::_Alloc_node&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="66" y="1620" width="5" height="15" fill="rgb(206,123,1)"/><text x="69.00" y="1630.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.43%)</title><rect x="66" y="1636" width="5" height="15" fill="rgb(241,170,10)"/><text x="69.00" y="1646.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.43%)</title><rect x="66" y="1652" width="5" height="15" fill="rgb(205,66,21)"/><text x="69.00" y="1662.50"></text></g><g><title>0x7fa8ebfc28a4 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="66" y="1668" width="5" height="15" fill="rgb(236,61,36)"/><text x="69.00" y="1678.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py:369) (1 samples, 0.43%)</title><rect x="71" y="116" width="5" height="15" fill="rgb(221,219,27)"/><text x="74.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py:369) (1 samples, 0.43%)</title><rect x="71" y="132" width="5" height="15" fill="rgb(221,212,33)"/><text x="74.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py:154) (1 samples, 0.43%)</title><rect x="71" y="148" width="5" height="15" fill="rgb(233,175,49)"/><text x="74.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py:74) (1 samples, 0.43%)</title><rect x="71" y="164" width="5" height="15" fill="rgb(218,79,32)"/><text x="74.00" y="174.50"></text></g><g><title>randint (mtrand.c:6007) (1 samples, 0.43%)</title><rect x="71" y="180" width="5" height="15" fill="rgb(239,42,24)"/><text x="74.00" y="190.50"></text></g><g><title>randint (mtrand.c:6086) (1 samples, 0.43%)</title><rect x="71" y="196" width="5" height="15" fill="rgb(252,53,25)"/><text x="74.00" y="206.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c:25435) (1 samples, 0.43%)</title><rect x="71" y="212" width="5" height="15" fill="rgb(250,79,15)"/><text x="74.00" y="222.50"></text></g><g><title>arraydescr_name_get (descriptor.c:1928) (1 samples, 0.43%)</title><rect x="71" y="228" width="5" height="15" fill="rgb(215,161,53)"/><text x="74.00" y="238.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:327) (1 samples, 0.43%)</title><rect x="71" y="244" width="5" height="15" fill="rgb(247,152,6)"/><text x="74.00" y="254.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py:797) (1 samples, 0.43%)</title><rect x="76" y="292" width="5" height="15" fill="rgb(248,64,9)"/><text x="79.00" y="302.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.43%)</title><rect x="76" y="308" width="5" height="15" fill="rgb(240,45,51)"/><text x="79.00" y="318.50"></text></g><g><title>__init__ (bit_generator.c:6951) (1 samples, 0.43%)</title><rect x="81" y="388" width="5" height="15" fill="rgb(252,31,3)"/><text x="84.00" y="398.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3163) (1 samples, 0.43%)</title><rect x="86" y="516" width="5" height="15" fill="rgb(223,17,51)"/><text x="89.00" y="526.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (bit_generator.c:13688) (1 samples, 0.43%)</title><rect x="86" y="532" width="5" height="15" fill="rgb(223,157,4)"/><text x="89.00" y="542.50"></text></g><g><title>MT19937___init__ (mt19937.c:2455) (3 samples, 1.30%)</title><rect x="81" y="372" width="15" height="15" fill="rgb(210,211,35)"/><text x="84.00" y="382.50"></text></g><g><title>__init__ (bit_generator.c:6998) (2 samples, 0.87%)</title><rect x="86" y="388" width="10" height="15" fill="rgb(214,154,23)"/><text x="89.00" y="398.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c:7160) (2 samples, 0.87%)</title><rect x="86" y="404" width="10" height="15" fill="rgb(208,45,21)"/><text x="89.00" y="414.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c:14242) (2 samples, 0.87%)</title><rect x="86" y="420" width="10" height="15" fill="rgb(220,190,31)"/><text x="89.00" y="430.50"></text></g><g><title>__init__ (bit_generator.c:4349) (2 samples, 0.87%)</title><rect x="86" y="436" width="10" height="15" fill="rgb(241,213,31)"/><text x="89.00" y="446.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c:4691) (2 samples, 0.87%)</title><rect x="86" y="452" width="10" height="15" fill="rgb(253,43,45)"/><text x="89.00" y="462.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c:5628) (2 samples, 0.87%)</title><rect x="86" y="468" width="10" height="15" fill="rgb(206,61,5)"/><text x="89.00" y="478.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c:14222) (2 samples, 0.87%)</title><rect x="86" y="484" width="10" height="15" fill="rgb(236,151,35)"/><text x="89.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:2909) (2 samples, 0.87%)</title><rect x="86" y="500" width="10" height="15" fill="rgb(206,95,51)"/><text x="89.00" y="510.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c:3309) (1 samples, 0.43%)</title><rect x="91" y="516" width="5" height="15" fill="rgb(250,188,12)"/><text x="94.00" y="526.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.43%)</title><rect x="91" y="532" width="5" height="15" fill="rgb(247,169,35)"/><text x="94.00" y="542.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.43%)</title><rect x="91" y="548" width="5" height="15" fill="rgb(215,93,25)"/><text x="94.00" y="558.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.43%)</title><rect x="91" y="564" width="5" height="15" fill="rgb(223,79,12)"/><text x="94.00" y="574.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.43%)</title><rect x="91" y="580" width="5" height="15" fill="rgb(214,72,44)"/><text x="94.00" y="590.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:33) (1 samples, 0.43%)</title><rect x="91" y="596" width="5" height="15" fill="rgb(247,69,49)"/><text x="94.00" y="606.50"></text></g><g><title>MT19937___init__ (mt19937.c:2493) (1 samples, 0.43%)</title><rect x="96" y="372" width="5" height="15" fill="rgb(211,116,38)"/><text x="99.00" y="382.50"></text></g><g><title>inner (contextlib.py:74) (1 samples, 0.43%)</title><rect x="96" y="388" width="5" height="15" fill="rgb(230,220,23)"/><text x="99.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c:5779) (1 samples, 0.43%)</title><rect x="96" y="404" width="5" height="15" fill="rgb(248,127,0)"/><text x="99.00" y="414.50"></text></g><g><title>generate_state (bit_generator.c:6081) (1 samples, 0.43%)</title><rect x="96" y="420" width="5" height="15" fill="rgb(238,10,22)"/><text x="99.00" y="430.50"></text></g><g><title>array_assign_subscript (mapping.c:1836) (1 samples, 0.43%)</title><rect x="96" y="436" width="5" height="15" fill="rgb(236,91,20)"/><text x="99.00" y="446.50"></text></g><g><title>UINT_setitem (arraytypes.c.src:212) (1 samples, 0.43%)</title><rect x="96" y="452" width="5" height="15" fill="rgb(227,30,50)"/><text x="99.00" y="462.50"></text></g><g><title>fit (sklearn/tree/_classes.py:143) (6 samples, 2.60%)</title><rect x="76" y="276" width="31" height="15" fill="rgb(242,32,32)"/><text x="79.00" y="286.50">fi..</text></g><g><title>check_random_state (sklearn/utils/validation.py:798) (5 samples, 2.16%)</title><rect x="81" y="292" width="26" height="15" fill="rgb(236,203,0)"/><text x="84.00" y="302.50">c..</text></g><g><title>__init__ (mtrand.c:3210) (5 samples, 2.16%)</title><rect x="81" y="308" width="26" height="15" fill="rgb(229,71,3)"/><text x="84.00" y="318.50">_..</text></g><g><title>RandomState___init__ (mtrand.c:3309) (5 samples, 2.16%)</title><rect x="81" y="324" width="26" height="15" fill="rgb(247,166,1)"/><text x="84.00" y="334.50">R..</text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c:25718) (5 samples, 2.16%)</title><rect x="81" y="340" width="26" height="15" fill="rgb(247,167,46)"/><text x="84.00" y="350.50">_..</text></g><g><title>__init__ (mt19937.c:2381) (5 samples, 2.16%)</title><rect x="81" y="356" width="26" height="15" fill="rgb(207,6,10)"/><text x="84.00" y="366.50">_..</text></g><g><title>MT19937___init__ (mt19937.c:2561) (1 samples, 0.43%)</title><rect x="101" y="372" width="6" height="15" fill="rgb(245,131,11)"/><text x="104.00" y="382.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.43%)</title><rect x="101" y="388" width="6" height="15" fill="rgb(239,25,13)"/><text x="104.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.43%)</title><rect x="101" y="404" width="6" height="15" fill="rgb(209,4,10)"/><text x="104.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.43%)</title><rect x="101" y="420" width="6" height="15" fill="rgb(250,221,37)"/><text x="104.00" y="430.50"></text></g><g><title>0x7fa8c5c55e2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="107" y="324" width="5" height="15" fill="rgb(244,38,46)"/><text x="110.00" y="334.50"></text></g><g><title>0x7fa8c5e91cd5 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="107" y="340" width="5" height="15" fill="rgb(244,101,8)"/><text x="110.00" y="350.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:40) (9 samples, 3.90%)</title><rect x="71" y="52" width="46" height="15" fill="rgb(242,23,24)"/><text x="74.00" y="62.50">&lt;mod..</text></g><g><title>start (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:11) (9 samples, 3.90%)</title><rect x="71" y="68" width="46" height="15" fill="rgb(215,163,53)"/><text x="74.00" y="78.50">star..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_m_reg.py:39) (9 samples, 3.90%)</title><rect x="71" y="84" width="46" height="15" fill="rgb(245,224,21)"/><text x="74.00" y="94.50">setu..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (9 samples, 3.90%)</title><rect x="71" y="100" width="46" height="15" fill="rgb(208,146,51)"/><text x="74.00" y="110.50">setu..</text></g><g><title>fit (sklearn/ensemble/_forest.py:383) (8 samples, 3.46%)</title><rect x="76" y="116" width="41" height="15" fill="rgb(250,168,53)"/><text x="79.00" y="126.50">fit..</text></g><g><title>__call__ (joblib/parallel.py:1006) (8 samples, 3.46%)</title><rect x="76" y="132" width="41" height="15" fill="rgb(208,114,26)"/><text x="79.00" y="142.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (8 samples, 3.46%)</title><rect x="76" y="148" width="41" height="15" fill="rgb(221,26,52)"/><text x="79.00" y="158.50">dis..</text></g><g><title>_dispatch (joblib/parallel.py:753) (8 samples, 3.46%)</title><rect x="76" y="164" width="41" height="15" fill="rgb(231,109,20)"/><text x="79.00" y="174.50">_di..</text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (8 samples, 3.46%)</title><rect x="76" y="180" width="41" height="15" fill="rgb(223,4,37)"/><text x="79.00" y="190.50">app..</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (8 samples, 3.46%)</title><rect x="76" y="196" width="41" height="15" fill="rgb(244,62,12)"/><text x="79.00" y="206.50">__i..</text></g><g><title>__call__ (joblib/parallel.py:256) (8 samples, 3.46%)</title><rect x="76" y="212" width="41" height="15" fill="rgb(227,44,2)"/><text x="79.00" y="222.50">__c..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (8 samples, 3.46%)</title><rect x="76" y="228" width="41" height="15" fill="rgb(210,71,14)"/><text x="79.00" y="238.50">&lt;li..</text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py:165) (8 samples, 3.46%)</title><rect x="76" y="244" width="41" height="15" fill="rgb(230,38,21)"/><text x="79.00" y="254.50">_pa..</text></g><g><title>fit (sklearn/tree/_classes.py:1226) (8 samples, 3.46%)</title><rect x="76" y="260" width="41" height="15" fill="rgb(247,58,43)"/><text x="79.00" y="270.50">fit..</text></g><g><title>fit (sklearn/tree/_classes.py:367) (2 samples, 0.87%)</title><rect x="107" y="276" width="10" height="15" fill="rgb(235,64,0)"/><text x="110.00" y="286.50"></text></g><g><title>0x7fa8c59f8b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="107" y="292" width="10" height="15" fill="rgb(232,77,10)"/><text x="110.00" y="302.50"></text></g><g><title>0x7fa8c5a2a10a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="107" y="308" width="10" height="15" fill="rgb(236,151,4)"/><text x="110.00" y="318.50"></text></g><g><title>0x7fa8c5c55e72 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="112" y="324" width="5" height="15" fill="rgb(221,190,30)"/><text x="115.00" y="334.50"></text></g><g><title>0x7fa8c5e892e3 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="112" y="340" width="5" height="15" fill="rgb(211,177,23)"/><text x="115.00" y="350.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (1 samples, 0.43%)</title><rect x="117" y="180" width="5" height="15" fill="rgb(207,197,27)"/><text x="120.00" y="190.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.43%)</title><rect x="117" y="196" width="5" height="15" fill="rgb(216,16,0)"/><text x="120.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.43%)</title><rect x="117" y="212" width="5" height="15" fill="rgb(244,194,37)"/><text x="120.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.43%)</title><rect x="117" y="228" width="5" height="15" fill="rgb(218,115,6)"/><text x="120.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (1 samples, 0.43%)</title><rect x="122" y="180" width="5" height="15" fill="rgb(234,215,23)"/><text x="125.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (1 samples, 0.43%)</title><rect x="127" y="180" width="5" height="15" fill="rgb(228,152,37)"/><text x="130.00" y="190.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (1 samples, 0.43%)</title><rect x="127" y="196" width="5" height="15" fill="rgb(233,128,31)"/><text x="130.00" y="206.50"></text></g><g><title>0x7fa8ebfd6e50 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="127" y="212" width="5" height="15" fill="rgb(211,6,2)"/><text x="130.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (1 samples, 0.43%)</title><rect x="132" y="180" width="5" height="15" fill="rgb(251,103,49)"/><text x="135.00" y="190.50"></text></g><g><title>put (queue.py:133) (1 samples, 0.43%)</title><rect x="132" y="196" width="5" height="15" fill="rgb(233,11,35)"/><text x="135.00" y="206.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:451) (1 samples, 0.43%)</title><rect x="137" y="276" width="5" height="15" fill="rgb(223,67,46)"/><text x="140.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.87%)</title><rect x="137" y="260" width="10" height="15" fill="rgb(223,52,36)"/><text x="140.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (1 samples, 0.43%)</title><rect x="142" y="276" width="5" height="15" fill="rgb(250,156,17)"/><text x="145.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.43%)</title><rect x="142" y="292" width="5" height="15" fill="rgb(208,220,28)"/><text x="145.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.43%)</title><rect x="142" y="308" width="5" height="15" fill="rgb(214,79,20)"/><text x="145.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.43%)</title><rect x="142" y="324" width="5" height="15" fill="rgb(217,182,40)"/><text x="145.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.43%)</title><rect x="142" y="340" width="5" height="15" fill="rgb(229,115,7)"/><text x="145.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (1 samples, 0.43%)</title><rect x="142" y="356" width="5" height="15" fill="rgb(227,35,38)"/><text x="145.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (1 samples, 0.43%)</title><rect x="142" y="372" width="5" height="15" fill="rgb(226,212,29)"/><text x="145.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.43%)</title><rect x="142" y="388" width="5" height="15" fill="rgb(227,13,35)"/><text x="145.00" y="398.50"></text></g><g><title>0x7fa8ebf788c4 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="142" y="404" width="5" height="15" fill="rgb(226,220,22)"/><text x="145.00" y="414.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:47) (7 samples, 3.03%)</title><rect x="117" y="52" width="36" height="15" fill="rgb(213,105,31)"/><text x="120.00" y="62.50">&lt;mo..</text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:46) (7 samples, 3.03%)</title><rect x="117" y="68" width="36" height="15" fill="rgb(214,20,53)"/><text x="120.00" y="78.50">pro..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:26) (7 samples, 3.03%)</title><rect x="117" y="84" width="36" height="15" fill="rgb(239,193,40)"/><text x="120.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:18) (7 samples, 3.03%)</title><rect x="117" y="100" width="36" height="15" fill="rgb(238,62,7)"/><text x="120.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (7 samples, 3.03%)</title><rect x="117" y="116" width="36" height="15" fill="rgb(243,127,22)"/><text x="120.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (7 samples, 3.03%)</title><rect x="117" y="132" width="36" height="15" fill="rgb(247,109,39)"/><text x="120.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (7 samples, 3.03%)</title><rect x="117" y="148" width="36" height="15" fill="rgb(205,196,31)"/><text x="120.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py:1006) (7 samples, 3.03%)</title><rect x="117" y="164" width="36" height="15" fill="rgb(231,213,52)"/><text x="120.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (3 samples, 1.30%)</title><rect x="137" y="180" width="16" height="15" fill="rgb(217,64,24)"/><text x="140.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (3 samples, 1.30%)</title><rect x="137" y="196" width="16" height="15" fill="rgb(232,142,13)"/><text x="140.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (3 samples, 1.30%)</title><rect x="137" y="212" width="16" height="15" fill="rgb(207,85,21)"/><text x="140.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (3 samples, 1.30%)</title><rect x="137" y="228" width="16" height="15" fill="rgb(243,212,36)"/><text x="140.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (3 samples, 1.30%)</title><rect x="137" y="244" width="16" height="15" fill="rgb(225,117,1)"/><text x="140.00" y="254.50"></text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.43%)</title><rect x="147" y="260" width="6" height="15" fill="rgb(212,180,10)"/><text x="150.00" y="270.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:769) (1 samples, 0.43%)</title><rect x="153" y="148" width="5" height="15" fill="rgb(218,10,4)"/><text x="156.00" y="158.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py:181) (1 samples, 0.43%)</title><rect x="153" y="164" width="5" height="15" fill="rgb(216,37,26)"/><text x="156.00" y="174.50"></text></g><g><title>full (numpy/core/numeric.py:332) (1 samples, 0.43%)</title><rect x="153" y="180" width="5" height="15" fill="rgb(254,51,22)"/><text x="156.00" y="190.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (1 samples, 0.43%)</title><rect x="153" y="196" width="5" height="15" fill="rgb(231,143,18)"/><text x="156.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.43%)</title><rect x="153" y="212" width="5" height="15" fill="rgb(246,111,14)"/><text x="156.00" y="222.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (1 samples, 0.43%)</title><rect x="153" y="228" width="5" height="15" fill="rgb(232,155,49)"/><text x="156.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.43%)</title><rect x="153" y="244" width="5" height="15" fill="rgb(247,72,48)"/><text x="156.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.43%)</title><rect x="153" y="260" width="5" height="15" fill="rgb(233,5,1)"/><text x="156.00" y="270.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.43%)</title><rect x="153" y="276" width="5" height="15" fill="rgb(212,13,48)"/><text x="156.00" y="286.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.43%)</title><rect x="153" y="292" width="5" height="15" fill="rgb(224,38,49)"/><text x="156.00" y="302.50"></text></g><g><title>predict (sklearn/ensemble/_forest.py:780) (1 samples, 0.43%)</title><rect x="158" y="148" width="5" height="15" fill="rgb(229,71,0)"/><text x="161.00" y="158.50"></text></g><g><title>__init__ (joblib/parallel.py:620) (1 samples, 0.43%)</title><rect x="158" y="164" width="5" height="15" fill="rgb(246,202,13)"/><text x="161.00" y="174.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.43%)</title><rect x="158" y="180" width="5" height="15" fill="rgb(236,6,44)"/><text x="161.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (1 samples, 0.43%)</title><rect x="163" y="180" width="5" height="15" fill="rgb(243,195,12)"/><text x="166.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (1 samples, 0.43%)</title><rect x="168" y="180" width="5" height="15" fill="rgb(231,49,35)"/><text x="171.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.43%)</title><rect x="168" y="196" width="5" height="15" fill="rgb(222,22,30)"/><text x="171.00" y="206.50"></text></g><g><title>notify (threading.py:348) (1 samples, 0.43%)</title><rect x="168" y="212" width="5" height="15" fill="rgb(206,7,11)"/><text x="171.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:1003) (4 samples, 1.73%)</title><rect x="163" y="164" width="20" height="15" fill="rgb(253,140,16)"/><text x="166.00" y="174.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (2 samples, 0.87%)</title><rect x="173" y="180" width="10" height="15" fill="rgb(235,22,35)"/><text x="176.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (2 samples, 0.87%)</title><rect x="173" y="196" width="10" height="15" fill="rgb(220,188,19)"/><text x="176.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (2 samples, 0.87%)</title><rect x="173" y="212" width="10" height="15" fill="rgb(237,168,2)"/><text x="176.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (2 samples, 0.87%)</title><rect x="173" y="228" width="10" height="15" fill="rgb(224,51,20)"/><text x="176.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py:256) (2 samples, 0.87%)</title><rect x="173" y="244" width="10" height="15" fill="rgb(252,189,17)"/><text x="176.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (2 samples, 0.87%)</title><rect x="173" y="260" width="10" height="15" fill="rgb(226,86,34)"/><text x="176.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (2 samples, 0.87%)</title><rect x="173" y="276" width="10" height="15" fill="rgb(220,211,15)"/><text x="176.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (2 samples, 0.87%)</title><rect x="173" y="292" width="10" height="15" fill="rgb(252,39,18)"/><text x="176.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.87%)</title><rect x="173" y="308" width="10" height="15" fill="rgb(205,195,8)"/><text x="176.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.43%)</title><rect x="178" y="324" width="5" height="15" fill="rgb(219,69,52)"/><text x="181.00" y="334.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:783) (1 samples, 0.43%)</title><rect x="193" y="180" width="6" height="15" fill="rgb(207,153,54)"/><text x="196.00" y="190.50"></text></g><g><title>get (queue.py:164) (2 samples, 0.87%)</title><rect x="214" y="196" width="10" height="15" fill="rgb(216,142,0)"/><text x="217.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.43%)</title><rect x="219" y="212" width="5" height="15" fill="rgb(234,213,45)"/><text x="222.00" y="222.50"></text></g><g><title>get (queue.py:166) (3 samples, 1.30%)</title><rect x="224" y="196" width="15" height="15" fill="rgb(237,11,22)"/><text x="227.00" y="206.50"></text></g><g><title>_qsize (queue.py:209) (2 samples, 0.87%)</title><rect x="229" y="212" width="10" height="15" fill="rgb(219,160,52)"/><text x="232.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:796) (13 samples, 5.63%)</title><rect x="199" y="180" width="66" height="15" fill="rgb(241,14,29)"/><text x="202.00" y="190.50">dispatc..</text></g><g><title>get (queue.py:167) (5 samples, 2.16%)</title><rect x="239" y="196" width="26" height="15" fill="rgb(211,137,12)"/><text x="242.00" y="206.50">g..</text></g><g><title>dispatch_one_batch (joblib/parallel.py:797) (3 samples, 1.30%)</title><rect x="265" y="180" width="15" height="15" fill="rgb(254,104,47)"/><text x="268.00" y="190.50"></text></g><g><title>delayed (joblib/parallel.py:297) (1 samples, 0.43%)</title><rect x="316" y="212" width="5" height="15" fill="rgb(232,212,0)"/><text x="319.00" y="222.50"></text></g><g><title>delayed (joblib/parallel.py:305) (1 samples, 0.43%)</title><rect x="321" y="212" width="5" height="15" fill="rgb(242,218,23)"/><text x="324.00" y="222.50"></text></g><g><title>delayed (joblib/parallel.py:307) (1 samples, 0.43%)</title><rect x="326" y="212" width="5" height="15" fill="rgb(241,143,18)"/><text x="329.00" y="222.50"></text></g><g><title>update_wrapper (functools.py:52) (1 samples, 0.43%)</title><rect x="347" y="228" width="5" height="15" fill="rgb(245,46,46)"/><text x="350.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:54) (4 samples, 1.73%)</title><rect x="352" y="228" width="20" height="15" fill="rgb(217,167,22)"/><text x="355.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:58) (2 samples, 0.87%)</title><rect x="372" y="228" width="10" height="15" fill="rgb(239,15,3)"/><text x="375.00" y="238.50"></text></g><g><title>update_wrapper (functools.py:60) (2 samples, 0.87%)</title><rect x="382" y="228" width="11" height="15" fill="rgb(206,216,22)"/><text x="385.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:807) (23 samples, 9.96%)</title><rect x="280" y="180" width="118" height="15" fill="rgb(246,163,32)"/><text x="283.00" y="190.50">dispatch_one_b..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py:782) (19 samples, 8.23%)</title><rect x="301" y="196" width="97" height="15" fill="rgb(213,198,34)"/><text x="304.00" y="206.50">&lt;genexpr&gt; (..</text></g><g><title>delayed (joblib/parallel.py:308) (13 samples, 5.63%)</title><rect x="331" y="212" width="67" height="15" fill="rgb(232,60,37)"/><text x="334.00" y="222.50">delayed..</text></g><g><title>update_wrapper (functools.py:63) (1 samples, 0.43%)</title><rect x="393" y="228" width="5" height="15" fill="rgb(209,171,35)"/><text x="396.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:810) (2 samples, 0.87%)</title><rect x="398" y="180" width="10" height="15" fill="rgb(228,145,24)"/><text x="401.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:819) (1 samples, 0.43%)</title><rect x="408" y="180" width="5" height="15" fill="rgb(211,177,21)"/><text x="411.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:822) (3 samples, 1.30%)</title><rect x="413" y="180" width="15" height="15" fill="rgb(241,143,49)"/><text x="416.00" y="190.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:823) (2 samples, 0.87%)</title><rect x="428" y="180" width="11" height="15" fill="rgb(252,215,21)"/><text x="431.00" y="190.50"></text></g><g><title>0x7fa8ec09e130 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="459" y="212" width="5" height="15" fill="rgb(223,160,35)"/><text x="462.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.73%)</title><rect x="464" y="212" width="21" height="15" fill="rgb(241,131,11)"/><text x="467.00" y="222.50"></text></g><g><title>0x7fa8ebfd6eae (libc-2.29.so) (1 samples, 0.43%)</title><rect x="479" y="228" width="6" height="15" fill="rgb(209,135,45)"/><text x="482.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.43%)</title><rect x="485" y="212" width="5" height="15" fill="rgb(247,173,45)"/><text x="488.00" y="222.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:208) (10 samples, 4.33%)</title><rect x="444" y="196" width="51" height="15" fill="rgb(247,55,36)"/><text x="447.00" y="206.50">get_n..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.43%)</title><rect x="490" y="212" width="5" height="15" fill="rgb(233,186,14)"/><text x="493.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:275) (1 samples, 0.43%)</title><rect x="515" y="228" width="5" height="15" fill="rgb(237,120,43)"/><text x="518.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (5 samples, 2.16%)</title><rect x="505" y="212" width="26" height="15" fill="rgb(224,17,28)"/><text x="508.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.87%)</title><rect x="520" y="228" width="11" height="15" fill="rgb(205,190,52)"/><text x="523.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:83) (1 samples, 0.43%)</title><rect x="531" y="212" width="5" height="15" fill="rgb(240,198,49)"/><text x="534.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py:86) (1 samples, 0.43%)</title><rect x="536" y="212" width="5" height="15" fill="rgb(250,85,10)"/><text x="539.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:824) (22 samples, 9.52%)</title><rect x="439" y="180" width="112" height="15" fill="rgb(243,144,17)"/><text x="442.00" y="190.50">dispatch_one_..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py:212) (11 samples, 4.76%)</title><rect x="495" y="196" width="56" height="15" fill="rgb(230,219,18)"/><text x="498.00" y="206.50">get_n..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (2 samples, 0.87%)</title><rect x="541" y="212" width="10" height="15" fill="rgb(254,10,44)"/><text x="544.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:825) (1 samples, 0.43%)</title><rect x="551" y="180" width="5" height="15" fill="rgb(225,102,27)"/><text x="554.00" y="190.50"></text></g><g><title>__init__ (joblib/parallel.py:241) (1 samples, 0.43%)</title><rect x="551" y="196" width="5" height="15" fill="rgb(250,140,2)"/><text x="554.00" y="206.50"></text></g><g><title>put (queue.py:132) (1 samples, 0.43%)</title><rect x="556" y="196" width="5" height="15" fill="rgb(238,96,33)"/><text x="559.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.43%)</title><rect x="556" y="212" width="5" height="15" fill="rgb(237,152,8)"/><text x="559.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.43%)</title><rect x="556" y="228" width="5" height="15" fill="rgb(243,107,50)"/><text x="559.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.43%)</title><rect x="556" y="244" width="5" height="15" fill="rgb(223,148,44)"/><text x="559.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="556" y="260" width="5" height="15" fill="rgb(211,26,49)"/><text x="559.00" y="270.50"></text></g><g><title>put (queue.py:150) (1 samples, 0.43%)</title><rect x="561" y="196" width="5" height="15" fill="rgb(207,203,14)"/><text x="564.00" y="206.50"></text></g><g><title>__exit__ (threading.py:244) (2 samples, 0.87%)</title><rect x="571" y="212" width="11" height="15" fill="rgb(241,61,16)"/><text x="574.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.43%)</title><rect x="577" y="228" width="5" height="15" fill="rgb(240,211,41)"/><text x="580.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.43%)</title><rect x="577" y="244" width="5" height="15" fill="rgb(209,189,25)"/><text x="580.00" y="254.50"></text></g><g><title>notify (threading.py:345) (2 samples, 0.87%)</title><rect x="582" y="212" width="10" height="15" fill="rgb(232,163,9)"/><text x="585.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.43%)</title><rect x="587" y="228" width="5" height="15" fill="rgb(209,33,44)"/><text x="590.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.43%)</title><rect x="587" y="244" width="5" height="15" fill="rgb(206,10,15)"/><text x="590.00" y="254.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:826) (8 samples, 3.46%)</title><rect x="556" y="180" width="41" height="15" fill="rgb(240,84,21)"/><text x="559.00" y="190.50">dis..</text></g><g><title>put (queue.py:151) (6 samples, 2.60%)</title><rect x="566" y="196" width="31" height="15" fill="rgb(235,4,45)"/><text x="569.00" y="206.50">pu..</text></g><g><title>notify (threading.py:348) (1 samples, 0.43%)</title><rect x="592" y="212" width="5" height="15" fill="rgb(247,91,14)"/><text x="595.00" y="222.50"></text></g><g><title>get (queue.py:164) (1 samples, 0.43%)</title><rect x="602" y="196" width="5" height="15" fill="rgb(243,204,39)"/><text x="605.00" y="206.50"></text></g><g><title>__enter__ (threading.py:241) (1 samples, 0.43%)</title><rect x="602" y="212" width="5" height="15" fill="rgb(222,61,6)"/><text x="605.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:829) (3 samples, 1.30%)</title><rect x="597" y="180" width="15" height="15" fill="rgb(251,16,48)"/><text x="600.00" y="190.50"></text></g><g><title>get (queue.py:181) (1 samples, 0.43%)</title><rect x="607" y="196" width="5" height="15" fill="rgb(226,211,42)"/><text x="610.00" y="206.50"></text></g><g><title>notify (threading.py:345) (1 samples, 0.43%)</title><rect x="607" y="212" width="5" height="15" fill="rgb(213,160,41)"/><text x="610.00" y="222.50"></text></g><g><title>_is_owned (threading.py:258) (1 samples, 0.43%)</title><rect x="607" y="228" width="5" height="15" fill="rgb(226,14,16)"/><text x="610.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:830) (2 samples, 0.87%)</title><rect x="612" y="180" width="10" height="15" fill="rgb(240,57,41)"/><text x="615.00" y="190.50"></text></g><g><title>_dispatch (joblib/parallel.py:749) (1 samples, 0.43%)</title><rect x="622" y="196" width="6" height="15" fill="rgb(242,204,5)"/><text x="625.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:750) (3 samples, 1.30%)</title><rect x="628" y="196" width="15" height="15" fill="rgb(250,82,18)"/><text x="631.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py:327) (1 samples, 0.43%)</title><rect x="638" y="212" width="5" height="15" fill="rgb(212,95,9)"/><text x="641.00" y="222.50"></text></g><g><title>_dispatch (joblib/parallel.py:751) (1 samples, 0.43%)</title><rect x="643" y="196" width="5" height="15" fill="rgb(205,179,40)"/><text x="646.00" y="206.50"></text></g><g><title>_dispatch (joblib/parallel.py:752) (1 samples, 0.43%)</title><rect x="648" y="196" width="5" height="15" fill="rgb(241,16,9)"/><text x="651.00" y="206.50"></text></g><g><title>__enter__ (joblib/parallel.py:211) (1 samples, 0.43%)</title><rect x="679" y="260" width="5" height="15" fill="rgb(227,219,27)"/><text x="682.00" y="270.50"></text></g><g><title>__init__ (joblib/parallel.py:196) (1 samples, 0.43%)</title><rect x="684" y="260" width="5" height="15" fill="rgb(242,95,22)"/><text x="687.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py:254) (6 samples, 2.60%)</title><rect x="663" y="244" width="31" height="15" fill="rgb(239,0,20)"/><text x="666.00" y="254.50">__..</text></g><g><title>__init__ (joblib/parallel.py:209) (1 samples, 0.43%)</title><rect x="689" y="260" width="5" height="15" fill="rgb(229,103,45)"/><text x="692.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:255) (1 samples, 0.43%)</title><rect x="720" y="260" width="5" height="15" fill="rgb(213,39,27)"/><text x="723.00" y="270.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.43%)</title><rect x="740" y="308" width="5" height="15" fill="rgb(211,95,10)"/><text x="743.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.43%)</title><rect x="745" y="308" width="5" height="15" fill="rgb(254,162,3)"/><text x="748.00" y="318.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.43%)</title><rect x="786" y="340" width="5" height="15" fill="rgb(245,30,30)"/><text x="789.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 3.03%)</title><rect x="760" y="324" width="36" height="15" fill="rgb(240,24,8)"/><text x="763.00" y="334.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.43%)</title><rect x="791" y="340" width="5" height="15" fill="rgb(227,119,10)"/><text x="794.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 5.19%)</title><rect x="750" y="308" width="61" height="15" fill="rgb(223,52,31)"/><text x="753.00" y="318.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (3 samples, 1.30%)</title><rect x="796" y="324" width="15" height="15" fill="rgb(234,165,1)"/><text x="799.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.43%)</title><rect x="806" y="340" width="5" height="15" fill="rgb(238,1,8)"/><text x="809.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (16 samples, 6.93%)</title><rect x="740" y="292" width="82" height="15" fill="rgb(215,144,8)"/><text x="743.00" y="302.50">predict (..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (2 samples, 0.87%)</title><rect x="811" y="308" width="11" height="15" fill="rgb(227,169,30)"/><text x="814.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.43%)</title><rect x="822" y="292" width="5" height="15" fill="rgb(220,78,5)"/><text x="825.00" y="302.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.43%)</title><rect x="822" y="308" width="5" height="15" fill="rgb(205,48,41)"/><text x="825.00" y="318.50"></text></g><g><title>0x7fa8c5a04d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="827" y="308" width="5" height="15" fill="rgb(251,169,2)"/><text x="830.00" y="318.50"></text></g><g><title>PyArray_New (ctors.c:1362) (1 samples, 0.43%)</title><rect x="832" y="356" width="5" height="15" fill="rgb(209,46,48)"/><text x="835.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.43%)</title><rect x="832" y="372" width="5" height="15" fill="rgb(228,16,38)"/><text x="835.00" y="382.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.43%)</title><rect x="837" y="404" width="5" height="15" fill="rgb(205,154,22)"/><text x="840.00" y="414.50"></text></g><g><title>0x7fa8c5a03f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="832" y="324" width="15" height="15" fill="rgb(209,138,52)"/><text x="835.00" y="334.50"></text></g><g><title>0x7fa8c59f3d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="832" y="340" width="15" height="15" fill="rgb(212,37,17)"/><text x="835.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.87%)</title><rect x="837" y="356" width="10" height="15" fill="rgb(252,22,37)"/><text x="840.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.87%)</title><rect x="837" y="372" width="10" height="15" fill="rgb(205,74,33)"/><text x="840.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (2 samples, 0.87%)</title><rect x="837" y="388" width="10" height="15" fill="rgb(231,17,1)"/><text x="840.00" y="398.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:136) (1 samples, 0.43%)</title><rect x="842" y="404" width="5" height="15" fill="rgb(215,130,50)"/><text x="845.00" y="414.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.43%)</title><rect x="847" y="372" width="5" height="15" fill="rgb(209,128,13)"/><text x="850.00" y="382.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.43%)</title><rect x="847" y="388" width="5" height="15" fill="rgb(239,36,33)"/><text x="850.00" y="398.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.43%)</title><rect x="847" y="404" width="5" height="15" fill="rgb(232,188,8)"/><text x="850.00" y="414.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.43%)</title><rect x="847" y="420" width="5" height="15" fill="rgb(217,229,44)"/><text x="850.00" y="430.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.43%)</title><rect x="847" y="436" width="5" height="15" fill="rgb(254,223,28)"/><text x="850.00" y="446.50"></text></g><g><title>0x7fa8c5a12225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="847" y="356" width="10" height="15" fill="rgb(213,168,40)"/><text x="850.00" y="366.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.43%)</title><rect x="852" y="372" width="5" height="15" fill="rgb(222,142,50)"/><text x="855.00" y="382.50"></text></g><g><title>0x7fa8c59f6604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="857" y="388" width="6" height="15" fill="rgb(213,227,47)"/><text x="860.00" y="398.50"></text></g><g><title>0x7fa8ebfe1124 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="857" y="404" width="6" height="15" fill="rgb(216,212,41)"/><text x="860.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:748) (1 samples, 0.43%)</title><rect x="863" y="420" width="5" height="15" fill="rgb(231,97,6)"/><text x="866.00" y="430.50"></text></g><g><title>0x7fa8c59f6d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.30%)</title><rect x="857" y="372" width="16" height="15" fill="rgb(225,215,8)"/><text x="860.00" y="382.50"></text></g><g><title>0x7fa8c59f6666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="863" y="388" width="10" height="15" fill="rgb(209,118,28)"/><text x="866.00" y="398.50"></text></g><g><title>0x7fa8c59ec2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="863" y="404" width="10" height="15" fill="rgb(226,142,43)"/><text x="866.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.43%)</title><rect x="868" y="420" width="5" height="15" fill="rgb(216,14,0)"/><text x="871.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.43%)</title><rect x="868" y="436" width="5" height="15" fill="rgb(241,202,16)"/><text x="871.00" y="446.50"></text></g><g><title>_buffer_info_free (buffer.c:635) (1 samples, 0.43%)</title><rect x="868" y="452" width="5" height="15" fill="rgb(253,90,10)"/><text x="871.00" y="462.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.43%)</title><rect x="868" y="468" width="5" height="15" fill="rgb(208,198,20)"/><text x="871.00" y="478.50"></text></g><g><title>0x7fa8c5a122df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.73%)</title><rect x="857" y="356" width="21" height="15" fill="rgb(207,47,42)"/><text x="860.00" y="366.50"></text></g><g><title>0x7fa8c59f6efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="873" y="372" width="5" height="15" fill="rgb(249,11,7)"/><text x="876.00" y="382.50"></text></g><g><title>0x7fa8c59e72a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="873" y="388" width="5" height="15" fill="rgb(227,73,5)"/><text x="876.00" y="398.50"></text></g><g><title>0x7fa8c5a124b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="878" y="356" width="5" height="15" fill="rgb(228,70,41)"/><text x="881.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.43%)</title><rect x="883" y="372" width="5" height="15" fill="rgb(217,193,28)"/><text x="886.00" y="382.50"></text></g><g><title>0x7fa8c5a12592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="883" y="356" width="10" height="15" fill="rgb(243,180,53)"/><text x="886.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.43%)</title><rect x="888" y="372" width="5" height="15" fill="rgb(225,129,5)"/><text x="891.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.43%)</title><rect x="888" y="388" width="5" height="15" fill="rgb(254,3,51)"/><text x="891.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.43%)</title><rect x="888" y="404" width="5" height="15" fill="rgb(213,196,10)"/><text x="891.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.43%)</title><rect x="888" y="420" width="5" height="15" fill="rgb(252,205,1)"/><text x="891.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:128) (1 samples, 0.43%)</title><rect x="888" y="436" width="5" height="15" fill="rgb(244,137,49)"/><text x="891.00" y="446.50"></text></g><g><title>0x7fa8c5a12644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="893" y="356" width="5" height="15" fill="rgb(235,224,36)"/><text x="896.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="893" y="372" width="5" height="15" fill="rgb(252,17,4)"/><text x="896.00" y="382.50"></text></g><g><title>0x7fa8c5a126aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="898" y="356" width="5" height="15" fill="rgb(239,105,54)"/><text x="901.00" y="366.50"></text></g><g><title>0x7fa8c5a12887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="903" y="356" width="6" height="15" fill="rgb(229,10,52)"/><text x="906.00" y="366.50"></text></g><g><title>0x7fa8c59e79af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="909" y="372" width="5" height="15" fill="rgb(237,206,41)"/><text x="912.00" y="382.50"></text></g><g><title>0x7fa8c5a13405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 6.06%)</title><rect x="847" y="340" width="72" height="15" fill="rgb(254,160,18)"/><text x="850.00" y="350.50">0x7fa8c5..</text></g><g><title>0x7fa8c5a1292f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.87%)</title><rect x="909" y="356" width="10" height="15" fill="rgb(254,136,19)"/><text x="912.00" y="366.50"></text></g><g><title>0x7fa8c59e7a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="914" y="372" width="5" height="15" fill="rgb(253,183,50)"/><text x="917.00" y="382.50"></text></g><g><title>0x7fa8c59e8152 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="919" y="356" width="5" height="15" fill="rgb(238,170,12)"/><text x="922.00" y="366.50"></text></g><g><title>0x7fa8c59e8178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="924" y="356" width="5" height="15" fill="rgb(239,15,19)"/><text x="927.00" y="366.50"></text></g><g><title>0x7fa8c59e8194 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="929" y="356" width="5" height="15" fill="rgb(227,126,35)"/><text x="932.00" y="366.50"></text></g><g><title>0x7fa8c5a03fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 7.79%)</title><rect x="847" y="324" width="92" height="15" fill="rgb(237,87,34)"/><text x="850.00" y="334.50">0x7fa8c5a0..</text></g><g><title>0x7fa8c5a13540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.73%)</title><rect x="919" y="340" width="20" height="15" fill="rgb(236,183,13)"/><text x="922.00" y="350.50"></text></g><g><title>0x7fa8c59e82f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="934" y="356" width="5" height="15" fill="rgb(214,196,10)"/><text x="937.00" y="366.50"></text></g><g><title>0x7fa8c59e7530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="934" y="372" width="5" height="15" fill="rgb(218,156,1)"/><text x="937.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.43%)</title><rect x="934" y="388" width="5" height="15" fill="rgb(233,228,18)"/><text x="937.00" y="398.50"></text></g><g><title>0x7fa8c5a04011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="939" y="324" width="5" height="15" fill="rgb(251,147,40)"/><text x="942.00" y="334.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.43%)</title><rect x="949" y="356" width="6" height="15" fill="rgb(226,63,29)"/><text x="952.00" y="366.50"></text></g><g><title>array_take (methods.c:138) (4 samples, 1.73%)</title><rect x="944" y="340" width="21" height="15" fill="rgb(219,183,37)"/><text x="947.00" y="350.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.87%)</title><rect x="955" y="356" width="10" height="15" fill="rgb(214,18,6)"/><text x="958.00" y="366.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 1.30%)</title><rect x="965" y="356" width="15" height="15" fill="rgb(226,206,26)"/><text x="968.00" y="366.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (3 samples, 1.30%)</title><rect x="965" y="372" width="15" height="15" fill="rgb(242,74,6)"/><text x="968.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (3 samples, 1.30%)</title><rect x="965" y="388" width="15" height="15" fill="rgb(218,126,30)"/><text x="968.00" y="398.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.43%)</title><rect x="980" y="356" width="5" height="15" fill="rgb(241,72,34)"/><text x="983.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.43%)</title><rect x="980" y="372" width="5" height="15" fill="rgb(245,135,12)"/><text x="983.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.43%)</title><rect x="980" y="388" width="5" height="15" fill="rgb(244,164,41)"/><text x="983.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.43%)</title><rect x="980" y="404" width="5" height="15" fill="rgb(235,182,30)"/><text x="983.00" y="414.50"></text></g><g><title>0x7fa8c5a0405a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 3.90%)</title><rect x="944" y="324" width="46" height="15" fill="rgb(211,26,26)"/><text x="947.00" y="334.50">0x7f..</text></g><g><title>array_take (methods.c:145) (5 samples, 2.16%)</title><rect x="965" y="340" width="25" height="15" fill="rgb(246,165,38)"/><text x="968.00" y="350.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.43%)</title><rect x="985" y="356" width="5" height="15" fill="rgb(226,122,13)"/><text x="988.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.43%)</title><rect x="985" y="372" width="5" height="15" fill="rgb(242,25,37)"/><text x="988.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c:2145) (1 samples, 0.43%)</title><rect x="985" y="388" width="5" height="15" fill="rgb(231,9,8)"/><text x="988.00" y="398.50"></text></g><g><title>0x7fa8c5a0414f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="990" y="324" width="5" height="15" fill="rgb(222,184,19)"/><text x="993.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.43%)</title><rect x="990" y="340" width="5" height="15" fill="rgb(222,173,25)"/><text x="993.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.43%)</title><rect x="990" y="356" width="5" height="15" fill="rgb(219,228,28)"/><text x="993.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.43%)</title><rect x="990" y="372" width="5" height="15" fill="rgb(224,153,43)"/><text x="993.00" y="382.50"></text></g><g><title>0x7fa8c5a04328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="995" y="324" width="5" height="15" fill="rgb(227,40,18)"/><text x="998.00" y="334.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.43%)</title><rect x="995" y="340" width="5" height="15" fill="rgb(207,81,51)"/><text x="998.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.43%)</title><rect x="995" y="356" width="5" height="15" fill="rgb(242,39,30)"/><text x="998.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.43%)</title><rect x="995" y="372" width="5" height="15" fill="rgb(230,177,18)"/><text x="998.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.43%)</title><rect x="995" y="388" width="5" height="15" fill="rgb(229,34,9)"/><text x="998.00" y="398.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.43%)</title><rect x="995" y="404" width="5" height="15" fill="rgb(211,130,52)"/><text x="998.00" y="414.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.43%)</title><rect x="995" y="420" width="5" height="15" fill="rgb(211,147,0)"/><text x="998.00" y="430.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:126) (1 samples, 0.43%)</title><rect x="995" y="436" width="5" height="15" fill="rgb(250,209,14)"/><text x="998.00" y="446.50"></text></g><g><title>npy_is_aligned (common.h:207) (1 samples, 0.43%)</title><rect x="995" y="452" width="5" height="15" fill="rgb(252,84,51)"/><text x="998.00" y="462.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (35 samples, 15.15%)</title><rect x="827" y="292" width="179" height="15" fill="rgb(247,185,11)"/><text x="830.00" y="302.50">predict (sklearn/tree/_..</text></g><g><title>0x7fa8c5a04d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (34 samples, 14.72%)</title><rect x="832" y="308" width="174" height="15" fill="rgb(211,47,28)"/><text x="835.00" y="318.50">0x7fa8c5a04d2e (sklear..</text></g><g><title>0x7fa8c5a045f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.43%)</title><rect x="1000" y="324" width="6" height="15" fill="rgb(205,16,18)"/><text x="1003.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:449) (55 samples, 23.81%)</title><rect x="730" y="276" width="281" height="15" fill="rgb(222,45,26)"/><text x="733.00" y="286.50">_accumulate_prediction (sklearn/ensem..</text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.43%)</title><rect x="1006" y="292" width="5" height="15" fill="rgb(205,125,23)"/><text x="1009.00" y="302.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.43%)</title><rect x="1006" y="308" width="5" height="15" fill="rgb(230,43,26)"/><text x="1009.00" y="318.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:450) (2 samples, 0.87%)</title><rect x="1011" y="276" width="10" height="15" fill="rgb(246,201,51)"/><text x="1014.00" y="286.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (2 samples, 0.87%)</title><rect x="1011" y="292" width="10" height="15" fill="rgb(209,110,27)"/><text x="1014.00" y="302.50"></text></g><g><title>qsort (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1026" y="388" width="5" height="15" fill="rgb(217,25,54)"/><text x="1029.00" y="398.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:829) (2 samples, 0.87%)</title><rect x="1026" y="356" width="10" height="15" fill="rgb(254,175,27)"/><text x="1029.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c:615) (2 samples, 0.87%)</title><rect x="1026" y="372" width="10" height="15" fill="rgb(213,14,21)"/><text x="1029.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1031" y="388" width="5" height="15" fill="rgb(248,94,15)"/><text x="1034.00" y="398.50"></text></g><g><title>0x7fa8ebfe0d50 (libc-2.29.so) (1 samples, 0.43%)</title><rect x="1031" y="404" width="5" height="15" fill="rgb(248,14,23)"/><text x="1034.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (3 samples, 1.30%)</title><rect x="1026" y="324" width="15" height="15" fill="rgb(229,221,28)"/><text x="1029.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (3 samples, 1.30%)</title><rect x="1026" y="340" width="15" height="15" fill="rgb(215,10,21)"/><text x="1029.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.43%)</title><rect x="1036" y="356" width="5" height="15" fill="rgb(240,171,28)"/><text x="1039.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c:483) (1 samples, 0.43%)</title><rect x="1036" y="372" width="5" height="15" fill="rgb(214,14,0)"/><text x="1039.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.43%)</title><rect x="1041" y="356" width="5" height="15" fill="rgb(228,80,47)"/><text x="1044.00" y="366.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:778) (1 samples, 0.43%)</title><rect x="1041" y="372" width="5" height="15" fill="rgb(213,53,12)"/><text x="1044.00" y="382.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1177) (1 samples, 0.43%)</title><rect x="1046" y="372" width="6" height="15" fill="rgb(253,229,51)"/><text x="1049.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (2 samples, 0.87%)</title><rect x="1046" y="356" width="11" height="15" fill="rgb(249,61,45)"/><text x="1049.00" y="366.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.43%)</title><rect x="1052" y="372" width="5" height="15" fill="rgb(216,40,54)"/><text x="1055.00" y="382.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.43%)</title><rect x="1052" y="388" width="5" height="15" fill="rgb(233,141,8)"/><text x="1055.00" y="398.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (4 samples, 1.73%)</title><rect x="1041" y="340" width="21" height="15" fill="rgb(243,30,22)"/><text x="1044.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.43%)</title><rect x="1057" y="356" width="5" height="15" fill="rgb(218,104,7)"/><text x="1060.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2788) (1 samples, 0.43%)</title><rect x="1057" y="372" width="5" height="15" fill="rgb(245,170,40)"/><text x="1060.00" y="382.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.43%)</title><rect x="1057" y="388" width="5" height="15" fill="rgb(216,23,45)"/><text x="1060.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.43%)</title><rect x="1062" y="356" width="5" height="15" fill="rgb(244,217,44)"/><text x="1065.00" y="366.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:452) (10 samples, 4.33%)</title><rect x="1021" y="276" width="51" height="15" fill="rgb(222,187,13)"/><text x="1024.00" y="286.50">_accu..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (9 samples, 3.90%)</title><rect x="1026" y="292" width="46" height="15" fill="rgb(248,11,22)"/><text x="1029.00" y="302.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (9 samples, 3.90%)</title><rect x="1026" y="308" width="46" height="15" fill="rgb(246,36,41)"/><text x="1029.00" y="318.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (6 samples, 2.60%)</title><rect x="1041" y="324" width="31" height="15" fill="rgb(252,109,25)"/><text x="1044.00" y="334.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c:1582) (2 samples, 0.87%)</title><rect x="1062" y="340" width="10" height="15" fill="rgb(206,8,19)"/><text x="1065.00" y="350.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src:309) (1 samples, 0.43%)</title><rect x="1067" y="356" width="5" height="15" fill="rgb(249,229,9)"/><text x="1070.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c:1837) (1 samples, 0.43%)</title><rect x="1067" y="372" width="5" height="15" fill="rgb(222,40,51)"/><text x="1070.00" y="382.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py:455) (3 samples, 1.30%)</title><rect x="1072" y="276" width="15" height="15" fill="rgb(235,93,20)"/><text x="1075.00" y="286.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.43%)</title><rect x="1082" y="292" width="5" height="15" fill="rgb(250,182,25)"/><text x="1085.00" y="302.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.43%)</title><rect x="1082" y="308" width="5" height="15" fill="rgb(246,110,36)"/><text x="1085.00" y="318.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.43%)</title><rect x="1082" y="324" width="5" height="15" fill="rgb(252,89,28)"/><text x="1085.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:718) (1 samples, 0.43%)</title><rect x="1087" y="308" width="5" height="15" fill="rgb(241,167,18)"/><text x="1090.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.87%)</title><rect x="1087" y="276" width="11" height="15" fill="rgb(211,6,27)"/><text x="1090.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.87%)</title><rect x="1087" y="292" width="11" height="15" fill="rgb(247,201,50)"/><text x="1090.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.43%)</title><rect x="1092" y="308" width="6" height="15" fill="rgb(218,199,33)"/><text x="1095.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py:256) (74 samples, 32.03%)</title><rect x="725" y="260" width="378" height="15" fill="rgb(250,3,17)"/><text x="728.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py:256)</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.43%)</title><rect x="1098" y="276" width="5" height="15" fill="rgb(212,98,34)"/><text x="1101.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.43%)</title><rect x="1098" y="292" width="5" height="15" fill="rgb(223,151,41)"/><text x="1101.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.43%)</title><rect x="1098" y="308" width="5" height="15" fill="rgb(251,167,50)"/><text x="1101.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.43%)</title><rect x="1098" y="324" width="5" height="15" fill="rgb(253,83,12)"/><text x="1101.00" y="334.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:201) (88 samples, 38.10%)</title><rect x="658" y="212" width="450" height="15" fill="rgb(207,180,18)"/><text x="661.00" y="222.50">apply_async (joblib/_parallel_backends.py:201)</text></g><g><title>__init__ (joblib/_parallel_backends.py:582) (87 samples, 37.66%)</title><rect x="663" y="228" width="445" height="15" fill="rgb(223,215,18)"/><text x="666.00" y="238.50">__init__ (joblib/_parallel_backends.py:582)</text></g><g><title>__call__ (joblib/parallel.py:256) (81 samples, 35.06%)</title><rect x="694" y="244" width="414" height="15" fill="rgb(215,208,21)"/><text x="697.00" y="254.50">__call__ (joblib/parallel.py:256)</text></g><g><title>__exit__ (joblib/parallel.py:215) (1 samples, 0.43%)</title><rect x="1103" y="260" width="5" height="15" fill="rgb(252,23,21)"/><text x="1106.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py:219) (1 samples, 0.43%)</title><rect x="1103" y="276" width="5" height="15" fill="rgb(250,38,10)"/><text x="1106.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py:202) (1 samples, 0.43%)</title><rect x="1108" y="212" width="5" height="15" fill="rgb(238,104,18)"/><text x="1111.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py:332) (1 samples, 0.43%)</title><rect x="1118" y="228" width="5" height="15" fill="rgb(223,203,27)"/><text x="1121.00" y="238.50"></text></g><g><title>0x7ffc1abb3a01 ([vdso]) (1 samples, 0.43%)</title><rect x="1133" y="244" width="5" height="15" fill="rgb(232,62,1)"/><text x="1136.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py:333) (4 samples, 1.73%)</title><rect x="1123" y="228" width="21" height="15" fill="rgb(238,151,23)"/><text x="1126.00" y="238.50"></text></g><g><title>time_time (python3.7) (1 samples, 0.43%)</title><rect x="1138" y="244" width="6" height="15" fill="rgb(217,121,30)"/><text x="1141.00" y="254.50"></text></g><g><title>_dispatch (joblib/parallel.py:753) (97 samples, 41.99%)</title><rect x="653" y="196" width="496" height="15" fill="rgb(241,70,51)"/><text x="656.00" y="206.50">_dispatch (joblib/parallel.py:753)</text></g><g><title>apply_async (joblib/_parallel_backends.py:203) (7 samples, 3.03%)</title><rect x="1113" y="212" width="36" height="15" fill="rgb(237,123,42)"/><text x="1116.00" y="222.50">app..</text></g><g><title>__call__ (joblib/parallel.py:340) (1 samples, 0.43%)</title><rect x="1144" y="228" width="5" height="15" fill="rgb(251,19,22)"/><text x="1147.00" y="238.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py:834) (105 samples, 45.45%)</title><rect x="622" y="180" width="537" height="15" fill="rgb(236,215,35)"/><text x="625.00" y="190.50">dispatch_one_batch (joblib/parallel.py:834)</text></g><g><title>_dispatch (joblib/parallel.py:758) (2 samples, 0.87%)</title><rect x="1149" y="196" width="10" height="15" fill="rgb(234,117,16)"/><text x="1152.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py:1006) (193 samples, 83.55%)</title><rect x="183" y="164" width="986" height="15" fill="rgb(214,145,20)"/><text x="186.00" y="174.50">__call__ (joblib/parallel.py:1006)</text></g><g><title>dispatch_one_batch (joblib/parallel.py:835) (2 samples, 0.87%)</title><rect x="1159" y="180" width="10" height="15" fill="rgb(229,177,4)"/><text x="1162.00" y="190.50"></text></g><g><title>retrieve (joblib/parallel.py:903) (1 samples, 0.43%)</title><rect x="1169" y="180" width="5" height="15" fill="rgb(242,205,41)"/><text x="1172.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:54) (201 samples, 87.01%)</title><rect x="153" y="52" width="1026" height="15" fill="rgb(254,82,53)"/><text x="156.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:53) (201 samples, 87.01%)</title><rect x="153" y="68" width="1026" height="15" fill="rgb(205,150,41)"/><text x="156.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:37) (201 samples, 87.01%)</title><rect x="153" y="84" width="1026" height="15" fill="rgb(209,20,10)"/><text x="156.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:31) (201 samples, 87.01%)</title><rect x="153" y="100" width="1026" height="15" fill="rgb(221,2,50)"/><text x="156.00" y="110.50">profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (201 samples, 87.01%)</title><rect x="153" y="116" width="1026" height="15" fill="rgb(239,183,36)"/><text x="156.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (201 samples, 87.01%)</title><rect x="153" y="132" width="1026" height="15" fill="rgb(254,73,39)"/><text x="156.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_forest.py:782) (199 samples, 86.15%)</title><rect x="163" y="148" width="1016" height="15" fill="rgb(228,80,9)"/><text x="166.00" y="158.50">predict (sklearn/ensemble/_forest.py:782)</text></g><g><title>__call__ (joblib/parallel.py:1016) (2 samples, 0.87%)</title><rect x="1169" y="164" width="10" height="15" fill="rgb(216,120,41)"/><text x="1172.00" y="174.50"></text></g><g><title>retrieve (joblib/parallel.py:904) (1 samples, 0.43%)</title><rect x="1174" y="180" width="5" height="15" fill="rgb(241,72,27)"/><text x="1177.00" y="190.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:36) (1 samples, 0.43%)</title><rect x="1179" y="84" width="5" height="15" fill="rgb(237,138,3)"/><text x="1182.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.43%)</title><rect x="1179" y="100" width="5" height="15" fill="rgb(252,218,41)"/><text x="1182.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.43%)</title><rect x="1179" y="116" width="5" height="15" fill="rgb(230,106,51)"/><text x="1182.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.43%)</title><rect x="1179" y="132" width="5" height="15" fill="rgb(212,13,39)"/><text x="1182.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.43%)</title><rect x="1179" y="148" width="5" height="15" fill="rgb(225,11,18)"/><text x="1182.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.43%)</title><rect x="1179" y="164" width="5" height="15" fill="rgb(228,150,41)"/><text x="1182.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.43%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(238,109,23)"/><text x="1182.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py:139) (1 samples, 0.43%)</title><rect x="1179" y="196" width="5" height="15" fill="rgb(244,22,49)"/><text x="1182.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py:169) (1 samples, 0.43%)</title><rect x="1179" y="212" width="5" height="15" fill="rgb(216,76,25)"/><text x="1182.00" y="222.50"></text></g><g><title>long_richcompare (scalarmath.c.src:1516) (1 samples, 0.43%)</title><rect x="1179" y="228" width="5" height="15" fill="rgb(228,63,36)"/><text x="1182.00" y="238.50"></text></g><g><title>_long_convert2_to_ctypes (scalarmath.c.src:716) (1 samples, 0.43%)</title><rect x="1179" y="244" width="5" height="15" fill="rgb(222,192,46)"/><text x="1182.00" y="254.50"></text></g><g><title>_long_convert_to_ctype (scalarmath.c.src:610) (1 samples, 0.43%)</title><rect x="1179" y="260" width="5" height="15" fill="rgb(212,72,41)"/><text x="1182.00" y="270.50"></text></g><g><title>all (231 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,101,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:61) (2 samples, 0.87%)</title><rect x="1179" y="52" width="11" height="15" fill="rgb(251,81,13)"/><text x="1182.00" y="62.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:60) (2 samples, 0.87%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(232,146,20)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:37) (1 samples, 0.43%)</title><rect x="1184" y="84" width="6" height="15" fill="rgb(248,65,33)"/><text x="1187.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_m_reg_1_4_12_float_.py:31) (1 samples, 0.43%)</title><rect x="1184" y="100" width="6" height="15" fill="rgb(218,34,44)"/><text x="1187.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.43%)</title><rect x="1184" y="116" width="6" height="15" fill="rgb(213,62,29)"/><text x="1187.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (1 samples, 0.43%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(222,152,43)"/><text x="1187.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (1 samples, 0.43%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(253,64,0)"/><text x="1187.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (1 samples, 0.43%)</title><rect x="1184" y="164" width="6" height="15" fill="rgb(240,134,5)"/><text x="1187.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (1 samples, 0.43%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(240,113,43)"/><text x="1187.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (1 samples, 0.43%)</title><rect x="1184" y="196" width="6" height="15" fill="rgb(232,175,14)"/><text x="1187.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.43%)</title><rect x="1184" y="212" width="6" height="15" fill="rgb(251,35,35)"/><text x="1187.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (1 samples, 0.43%)</title><rect x="1184" y="228" width="6" height="15" fill="rgb(249,95,31)"/><text x="1187.00" y="238.50"></text></g><g><title>0x7fa8aca5954f (?) (1 samples, 0.43%)</title><rect x="1184" y="244" width="6" height="15" fill="rgb(226,152,40)"/><text x="1187.00" y="254.50"></text></g><g><title>0x7fa8aca5f65e (?) (1 samples, 0.43%)</title><rect x="1184" y="260" width="6" height="15" fill="rgb(246,185,36)"/><text x="1187.00" y="270.50"></text></g><g><title>0x7fa8aca5f50f (?) (1 samples, 0.43%)</title><rect x="1184" y="276" width="6" height="15" fill="rgb(247,115,47)"/><text x="1187.00" y="286.50"></text></g><g><title>0x7fa8aca65d6c (?) (1 samples, 0.43%)</title><rect x="1184" y="292" width="6" height="15" fill="rgb(247,18,54)"/><text x="1187.00" y="302.50"></text></g><g><title>0x7fa8b5f86ab9 (?) (1 samples, 0.43%)</title><rect x="1184" y="308" width="6" height="15" fill="rgb(212,85,22)"/><text x="1187.00" y="318.50"></text></g><g><title>0x7fa8b5f87ea9 (?) (1 samples, 0.43%)</title><rect x="1184" y="324" width="6" height="15" fill="rgb(238,151,52)"/><text x="1187.00" y="334.50"></text></g></g></svg>