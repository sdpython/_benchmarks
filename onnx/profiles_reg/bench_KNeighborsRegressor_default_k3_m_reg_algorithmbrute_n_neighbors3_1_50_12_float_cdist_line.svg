<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1782" onload="init(evt)" viewBox="0 0 1200 1782" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1782" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1765.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1765.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:1) (1 samples, 0.40%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(231,148,12)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(232,183,34)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(228,93,36)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(253,83,36)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(243,229,3)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(241,108,5)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.40%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(232,152,37)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(251,84,53)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(254,86,37)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(246,142,41)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(226,20,7)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(237,148,3)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(239,55,25)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(235,104,41)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:88) (1 samples, 0.40%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(212,94,34)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(221,6,18)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(233,136,16)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(219,214,39)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(247,151,27)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(213,198,6)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(215,162,49)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(236,49,13)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/einsumfunc.py:704) (1 samples, 0.40%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(224,132,50)"/><text x="13.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.40%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(218,81,2)"/><text x="13.00" y="526.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.40%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(252,82,38)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.40%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(225,99,47)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.40%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(242,133,21)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.40%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(205,103,21)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.40%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(213,214,8)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.40%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(245,117,9)"/><text x="17.00" y="1006.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.40%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(210,24,18)"/><text x="17.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.80%)</title><rect x="14" y="852" width="10" height="15" fill="rgb(254,24,25)"/><text x="17.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.80%)</title><rect x="14" y="868" width="10" height="15" fill="rgb(241,119,38)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.80%)</title><rect x="14" y="884" width="10" height="15" fill="rgb(240,50,43)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.80%)</title><rect x="14" y="900" width="10" height="15" fill="rgb(253,55,40)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.40%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(232,148,20)"/><text x="22.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.40%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(228,154,2)"/><text x="22.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.40%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(212,179,36)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.40%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(252,215,45)"/><text x="22.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.40%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(213,2,33)"/><text x="22.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.40%)</title><rect x="19" y="996" width="5" height="15" fill="rgb(242,203,52)"/><text x="22.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py:244) (1 samples, 0.40%)</title><rect x="19" y="1012" width="5" height="15" fill="rgb(244,199,17)"/><text x="22.00" y="1022.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.40%)</title><rect x="24" y="916" width="4" height="15" fill="rgb(248,44,10)"/><text x="27.00" y="926.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.40%)</title><rect x="24" y="932" width="4" height="15" fill="rgb(252,144,23)"/><text x="27.00" y="942.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.80%)</title><rect x="24" y="884" width="9" height="15" fill="rgb(230,25,18)"/><text x="27.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.80%)</title><rect x="24" y="900" width="9" height="15" fill="rgb(223,193,15)"/><text x="27.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.40%)</title><rect x="28" y="916" width="5" height="15" fill="rgb(236,7,47)"/><text x="31.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.40%)</title><rect x="28" y="932" width="5" height="15" fill="rgb(205,166,29)"/><text x="31.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.40%)</title><rect x="28" y="948" width="5" height="15" fill="rgb(220,177,42)"/><text x="31.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1379) (1 samples, 0.40%)</title><rect x="28" y="964" width="5" height="15" fill="rgb(221,143,2)"/><text x="31.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.40%)</title><rect x="28" y="980" width="5" height="15" fill="rgb(238,229,3)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.40%)</title><rect x="28" y="996" width="5" height="15" fill="rgb(247,63,44)"/><text x="31.00" y="1006.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 1.20%)</title><rect x="24" y="852" width="14" height="15" fill="rgb(212,73,6)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 1.20%)</title><rect x="24" y="868" width="14" height="15" fill="rgb(205,138,36)"/><text x="27.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2783) (1 samples, 0.40%)</title><rect x="33" y="884" width="5" height="15" fill="rgb(210,18,53)"/><text x="36.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py:2766) (1 samples, 0.40%)</title><rect x="33" y="900" width="5" height="15" fill="rgb(222,190,46)"/><text x="36.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py:1414) (1 samples, 0.40%)</title><rect x="33" y="916" width="5" height="15" fill="rgb(227,172,31)"/><text x="36.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py:1604) (1 samples, 0.40%)</title><rect x="33" y="932" width="5" height="15" fill="rgb(248,188,47)"/><text x="36.00" y="942.50"></text></g><g><title>exists (genericpath.py:19) (1 samples, 0.40%)</title><rect x="33" y="948" width="5" height="15" fill="rgb(253,205,45)"/><text x="36.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.40%)</title><rect x="33" y="964" width="5" height="15" fill="rgb(207,199,52)"/><text x="36.00" y="974.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.40%)</title><rect x="33" y="980" width="5" height="15" fill="rgb(217,153,9)"/><text x="36.00" y="990.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.40%)</title><rect x="33" y="996" width="5" height="15" fill="rgb(230,115,48)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:2) (6 samples, 2.39%)</title><rect x="14" y="148" width="28" height="15" fill="rgb(234,88,35)"/><text x="17.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="164" width="28" height="15" fill="rgb(253,83,11)"/><text x="17.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.39%)</title><rect x="14" y="180" width="28" height="15" fill="rgb(209,7,4)"/><text x="17.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="196" width="28" height="15" fill="rgb(208,202,48)"/><text x="17.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="212" width="28" height="15" fill="rgb(251,192,47)"/><text x="17.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="14" y="228" width="28" height="15" fill="rgb(219,4,35)"/><text x="17.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="14" y="244" width="28" height="15" fill="rgb(236,36,40)"/><text x="17.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="14" y="260" width="28" height="15" fill="rgb(240,14,3)"/><text x="17.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="276" width="28" height="15" fill="rgb(247,138,12)"/><text x="17.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (6 samples, 2.39%)</title><rect x="14" y="292" width="28" height="15" fill="rgb(226,40,49)"/><text x="17.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="308" width="28" height="15" fill="rgb(246,46,23)"/><text x="17.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="14" y="324" width="28" height="15" fill="rgb(250,15,7)"/><text x="17.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="14" y="340" width="28" height="15" fill="rgb(212,41,52)"/><text x="17.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="14" y="356" width="28" height="15" fill="rgb(224,61,53)"/><text x="17.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="372" width="28" height="15" fill="rgb(207,65,38)"/><text x="17.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (6 samples, 2.39%)</title><rect x="14" y="388" width="28" height="15" fill="rgb(230,173,30)"/><text x="17.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="404" width="28" height="15" fill="rgb(207,103,34)"/><text x="17.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="14" y="420" width="28" height="15" fill="rgb(209,182,42)"/><text x="17.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="14" y="436" width="28" height="15" fill="rgb(254,44,33)"/><text x="17.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="14" y="452" width="28" height="15" fill="rgb(207,112,49)"/><text x="17.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="468" width="28" height="15" fill="rgb(245,89,29)"/><text x="17.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (6 samples, 2.39%)</title><rect x="14" y="484" width="28" height="15" fill="rgb(211,57,38)"/><text x="17.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="500" width="28" height="15" fill="rgb(254,228,3)"/><text x="17.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="14" y="516" width="28" height="15" fill="rgb(243,214,42)"/><text x="17.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="14" y="532" width="28" height="15" fill="rgb(207,186,12)"/><text x="17.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="14" y="548" width="28" height="15" fill="rgb(213,56,11)"/><text x="17.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="564" width="28" height="15" fill="rgb(223,215,20)"/><text x="17.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (6 samples, 2.39%)</title><rect x="14" y="580" width="28" height="15" fill="rgb(236,13,1)"/><text x="17.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="596" width="28" height="15" fill="rgb(253,123,14)"/><text x="17.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 2.39%)</title><rect x="14" y="612" width="28" height="15" fill="rgb(235,169,46)"/><text x="17.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="628" width="28" height="15" fill="rgb(234,158,6)"/><text x="17.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="644" width="28" height="15" fill="rgb(224,123,48)"/><text x="17.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="14" y="660" width="28" height="15" fill="rgb(231,219,7)"/><text x="17.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="14" y="676" width="28" height="15" fill="rgb(230,110,14)"/><text x="17.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="14" y="692" width="28" height="15" fill="rgb(207,141,16)"/><text x="17.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="708" width="28" height="15" fill="rgb(216,49,19)"/><text x="17.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (6 samples, 2.39%)</title><rect x="14" y="724" width="28" height="15" fill="rgb(212,134,10)"/><text x="17.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 2.39%)</title><rect x="14" y="740" width="28" height="15" fill="rgb(230,115,18)"/><text x="17.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 2.39%)</title><rect x="14" y="756" width="28" height="15" fill="rgb(217,20,0)"/><text x="17.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 2.39%)</title><rect x="14" y="772" width="28" height="15" fill="rgb(232,48,7)"/><text x="17.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 2.39%)</title><rect x="14" y="788" width="28" height="15" fill="rgb(227,119,41)"/><text x="17.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 2.39%)</title><rect x="14" y="804" width="28" height="15" fill="rgb(223,202,4)"/><text x="17.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (6 samples, 2.39%)</title><rect x="14" y="820" width="28" height="15" fill="rgb(228,129,21)"/><text x="17.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (6 samples, 2.39%)</title><rect x="14" y="836" width="28" height="15" fill="rgb(226,133,15)"/><text x="17.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.40%)</title><rect x="38" y="852" width="4" height="15" fill="rgb(239,75,43)"/><text x="41.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.40%)</title><rect x="38" y="868" width="4" height="15" fill="rgb(237,24,2)"/><text x="41.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.40%)</title><rect x="38" y="884" width="4" height="15" fill="rgb(249,155,10)"/><text x="41.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.40%)</title><rect x="38" y="900" width="4" height="15" fill="rgb(241,57,43)"/><text x="41.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.40%)</title><rect x="38" y="916" width="4" height="15" fill="rgb(219,189,43)"/><text x="41.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.40%)</title><rect x="38" y="932" width="4" height="15" fill="rgb(222,125,16)"/><text x="41.00" y="942.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.40%)</title><rect x="42" y="1028" width="5" height="15" fill="rgb(226,173,0)"/><text x="45.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="42" y="1044" width="5" height="15" fill="rgb(237,166,51)"/><text x="45.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="42" y="1060" width="5" height="15" fill="rgb(235,115,15)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="42" y="1076" width="5" height="15" fill="rgb(253,96,22)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="42" y="1092" width="5" height="15" fill="rgb(226,183,11)"/><text x="45.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="42" y="1108" width="5" height="15" fill="rgb(232,27,36)"/><text x="45.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="42" y="1124" width="5" height="15" fill="rgb(243,175,1)"/><text x="45.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="42" y="1140" width="5" height="15" fill="rgb(237,229,45)"/><text x="45.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:173) (1 samples, 0.40%)</title><rect x="42" y="1156" width="5" height="15" fill="rgb(245,25,15)"/><text x="45.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="42" y="1172" width="5" height="15" fill="rgb(248,75,42)"/><text x="45.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="42" y="1188" width="5" height="15" fill="rgb(209,122,40)"/><text x="45.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="42" y="1204" width="5" height="15" fill="rgb(207,199,26)"/><text x="45.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.40%)</title><rect x="42" y="1220" width="5" height="15" fill="rgb(221,219,3)"/><text x="45.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:829) (1 samples, 0.40%)</title><rect x="42" y="1236" width="5" height="15" fill="rgb(213,188,41)"/><text x="45.00" y="1246.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:4) (2 samples, 0.80%)</title><rect x="42" y="148" width="10" height="15" fill="rgb(214,99,39)"/><text x="45.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="164" width="10" height="15" fill="rgb(248,154,9)"/><text x="45.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.80%)</title><rect x="42" y="180" width="10" height="15" fill="rgb(219,229,50)"/><text x="45.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="196" width="10" height="15" fill="rgb(234,137,20)"/><text x="45.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="212" width="10" height="15" fill="rgb(205,120,25)"/><text x="45.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="228" width="10" height="15" fill="rgb(225,14,50)"/><text x="45.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="244" width="10" height="15" fill="rgb(224,184,29)"/><text x="45.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="260" width="10" height="15" fill="rgb(229,81,25)"/><text x="45.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="276" width="10" height="15" fill="rgb(242,226,24)"/><text x="45.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.80%)</title><rect x="42" y="292" width="10" height="15" fill="rgb(222,118,32)"/><text x="45.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="308" width="10" height="15" fill="rgb(250,56,39)"/><text x="45.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="324" width="10" height="15" fill="rgb(246,199,6)"/><text x="45.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="340" width="10" height="15" fill="rgb(234,132,36)"/><text x="45.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="356" width="10" height="15" fill="rgb(238,29,9)"/><text x="45.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="372" width="10" height="15" fill="rgb(229,38,23)"/><text x="45.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.80%)</title><rect x="42" y="388" width="10" height="15" fill="rgb(244,32,45)"/><text x="45.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="404" width="10" height="15" fill="rgb(218,92,50)"/><text x="45.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="420" width="10" height="15" fill="rgb(208,32,29)"/><text x="45.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="436" width="10" height="15" fill="rgb(250,5,34)"/><text x="45.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="452" width="10" height="15" fill="rgb(240,144,5)"/><text x="45.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="468" width="10" height="15" fill="rgb(209,192,4)"/><text x="45.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.80%)</title><rect x="42" y="484" width="10" height="15" fill="rgb(225,159,40)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="500" width="10" height="15" fill="rgb(241,60,15)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="516" width="10" height="15" fill="rgb(230,182,21)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="532" width="10" height="15" fill="rgb(209,201,4)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="548" width="10" height="15" fill="rgb(220,168,38)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="564" width="10" height="15" fill="rgb(252,210,15)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.80%)</title><rect x="42" y="580" width="10" height="15" fill="rgb(252,68,54)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="596" width="10" height="15" fill="rgb(236,115,9)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="612" width="10" height="15" fill="rgb(241,153,11)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="628" width="10" height="15" fill="rgb(231,211,41)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="644" width="10" height="15" fill="rgb(246,133,6)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="660" width="10" height="15" fill="rgb(240,119,43)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.80%)</title><rect x="42" y="676" width="10" height="15" fill="rgb(208,126,0)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="692" width="10" height="15" fill="rgb(233,78,47)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="708" width="10" height="15" fill="rgb(224,101,29)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="724" width="10" height="15" fill="rgb(218,200,31)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="740" width="10" height="15" fill="rgb(217,153,39)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="756" width="10" height="15" fill="rgb(239,212,22)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.80%)</title><rect x="42" y="772" width="10" height="15" fill="rgb(246,133,49)"/><text x="45.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="42" y="788" width="10" height="15" fill="rgb(205,75,39)"/><text x="45.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="804" width="10" height="15" fill="rgb(213,83,52)"/><text x="45.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="820" width="10" height="15" fill="rgb(213,49,24)"/><text x="45.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="836" width="10" height="15" fill="rgb(212,171,15)"/><text x="45.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="852" width="10" height="15" fill="rgb(235,199,36)"/><text x="45.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="868" width="10" height="15" fill="rgb(221,8,14)"/><text x="45.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="884" width="10" height="15" fill="rgb(238,9,26)"/><text x="45.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (2 samples, 0.80%)</title><rect x="42" y="900" width="10" height="15" fill="rgb(232,86,32)"/><text x="45.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.80%)</title><rect x="42" y="916" width="10" height="15" fill="rgb(239,86,30)"/><text x="45.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="932" width="10" height="15" fill="rgb(236,205,37)"/><text x="45.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="42" y="948" width="10" height="15" fill="rgb(215,180,35)"/><text x="45.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="42" y="964" width="10" height="15" fill="rgb(226,31,8)"/><text x="45.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="42" y="980" width="10" height="15" fill="rgb(214,86,21)"/><text x="45.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="42" y="996" width="10" height="15" fill="rgb(208,172,51)"/><text x="45.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="42" y="1012" width="10" height="15" fill="rgb(246,134,22)"/><text x="45.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:1846) (1 samples, 0.40%)</title><rect x="47" y="1028" width="5" height="15" fill="rgb(218,23,1)"/><text x="50.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1581) (1 samples, 0.40%)</title><rect x="47" y="1044" width="5" height="15" fill="rgb(230,128,25)"/><text x="50.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py:657) (1 samples, 0.40%)</title><rect x="47" y="1060" width="5" height="15" fill="rgb(211,122,33)"/><text x="50.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py:291) (1 samples, 0.40%)</title><rect x="47" y="1076" width="5" height="15" fill="rgb(224,97,6)"/><text x="50.00" y="1086.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.40%)</title><rect x="47" y="1092" width="5" height="15" fill="rgb(211,168,37)"/><text x="50.00" y="1102.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.40%)</title><rect x="47" y="1108" width="5" height="15" fill="rgb(222,191,21)"/><text x="50.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py:2217) (1 samples, 0.40%)</title><rect x="47" y="1124" width="5" height="15" fill="rgb(253,142,36)"/><text x="50.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py:2210) (1 samples, 0.40%)</title><rect x="47" y="1140" width="5" height="15" fill="rgb(223,95,41)"/><text x="50.00" y="1150.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.40%)</title><rect x="52" y="772" width="5" height="15" fill="rgb(239,206,24)"/><text x="55.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="788" width="5" height="15" fill="rgb(233,32,53)"/><text x="55.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="52" y="804" width="5" height="15" fill="rgb(214,1,28)"/><text x="55.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="52" y="820" width="5" height="15" fill="rgb(251,11,52)"/><text x="55.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="52" y="836" width="5" height="15" fill="rgb(205,26,5)"/><text x="55.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="852" width="5" height="15" fill="rgb(222,125,8)"/><text x="55.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.40%)</title><rect x="52" y="868" width="5" height="15" fill="rgb(211,70,32)"/><text x="55.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="884" width="5" height="15" fill="rgb(234,53,20)"/><text x="55.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="52" y="900" width="5" height="15" fill="rgb(233,209,46)"/><text x="55.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="52" y="916" width="5" height="15" fill="rgb(214,20,43)"/><text x="55.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="52" y="932" width="5" height="15" fill="rgb(219,174,30)"/><text x="55.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="948" width="5" height="15" fill="rgb(246,202,19)"/><text x="55.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.40%)</title><rect x="52" y="964" width="5" height="15" fill="rgb(233,119,40)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="980" width="5" height="15" fill="rgb(250,213,5)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="52" y="996" width="5" height="15" fill="rgb(247,180,33)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="52" y="1012" width="5" height="15" fill="rgb(239,18,44)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="52" y="1028" width="5" height="15" fill="rgb(211,221,29)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="1044" width="5" height="15" fill="rgb(225,93,54)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.40%)</title><rect x="52" y="1060" width="5" height="15" fill="rgb(207,66,26)"/><text x="55.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="1076" width="5" height="15" fill="rgb(225,14,19)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="52" y="1092" width="5" height="15" fill="rgb(215,62,24)"/><text x="55.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="1108" width="5" height="15" fill="rgb(225,0,50)"/><text x="55.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="1124" width="5" height="15" fill="rgb(246,35,51)"/><text x="55.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="52" y="1140" width="5" height="15" fill="rgb(239,15,51)"/><text x="55.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="52" y="1156" width="5" height="15" fill="rgb(249,208,50)"/><text x="55.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="52" y="1172" width="5" height="15" fill="rgb(222,174,51)"/><text x="55.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="1188" width="5" height="15" fill="rgb(215,152,45)"/><text x="55.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.40%)</title><rect x="52" y="1204" width="5" height="15" fill="rgb(214,76,4)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="1220" width="5" height="15" fill="rgb(222,184,35)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="52" y="1236" width="5" height="15" fill="rgb(215,214,14)"/><text x="55.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="52" y="1252" width="5" height="15" fill="rgb(223,39,29)"/><text x="55.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="52" y="1268" width="5" height="15" fill="rgb(222,33,38)"/><text x="55.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="1284" width="5" height="15" fill="rgb(232,216,38)"/><text x="55.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.40%)</title><rect x="52" y="1300" width="5" height="15" fill="rgb(254,77,38)"/><text x="55.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="52" y="1316" width="5" height="15" fill="rgb(232,154,19)"/><text x="55.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="52" y="1332" width="5" height="15" fill="rgb(212,60,27)"/><text x="55.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="52" y="1348" width="5" height="15" fill="rgb(227,184,5)"/><text x="55.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="52" y="1364" width="5" height="15" fill="rgb(238,27,39)"/><text x="55.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="52" y="1380" width="5" height="15" fill="rgb(228,199,27)"/><text x="55.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:62) (1 samples, 0.40%)</title><rect x="52" y="1396" width="5" height="15" fill="rgb(254,63,8)"/><text x="55.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.40%)</title><rect x="52" y="1412" width="5" height="15" fill="rgb(240,87,27)"/><text x="55.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.40%)</title><rect x="52" y="1428" width="5" height="15" fill="rgb(239,90,48)"/><text x="55.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.40%)</title><rect x="52" y="1444" width="5" height="15" fill="rgb(224,223,13)"/><text x="55.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.40%)</title><rect x="52" y="1460" width="5" height="15" fill="rgb(209,71,51)"/><text x="55.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.40%)</title><rect x="52" y="1476" width="5" height="15" fill="rgb(232,114,5)"/><text x="55.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.40%)</title><rect x="52" y="1492" width="5" height="15" fill="rgb(242,90,4)"/><text x="55.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.40%)</title><rect x="52" y="1508" width="5" height="15" fill="rgb(226,201,32)"/><text x="55.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.40%)</title><rect x="52" y="1524" width="5" height="15" fill="rgb(230,135,48)"/><text x="55.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.40%)</title><rect x="52" y="1540" width="5" height="15" fill="rgb(238,177,26)"/><text x="55.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:675) (1 samples, 0.40%)</title><rect x="52" y="1556" width="5" height="15" fill="rgb(219,109,26)"/><text x="55.00" y="1566.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.40%)</title><rect x="52" y="1572" width="5" height="15" fill="rgb(249,204,42)"/><text x="55.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.80%)</title><rect x="52" y="244" width="9" height="15" fill="rgb(216,228,22)"/><text x="55.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="52" y="260" width="9" height="15" fill="rgb(236,145,52)"/><text x="55.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="52" y="276" width="9" height="15" fill="rgb(221,142,5)"/><text x="55.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="52" y="292" width="9" height="15" fill="rgb(220,137,11)"/><text x="55.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="52" y="308" width="9" height="15" fill="rgb(247,170,26)"/><text x="55.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="52" y="324" width="9" height="15" fill="rgb(220,220,16)"/><text x="55.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.80%)</title><rect x="52" y="340" width="9" height="15" fill="rgb(239,147,29)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="52" y="356" width="9" height="15" fill="rgb(228,63,16)"/><text x="55.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.80%)</title><rect x="52" y="372" width="9" height="15" fill="rgb(226,169,41)"/><text x="55.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="52" y="388" width="9" height="15" fill="rgb(248,71,25)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="52" y="404" width="9" height="15" fill="rgb(215,16,4)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="52" y="420" width="9" height="15" fill="rgb(224,208,26)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="52" y="436" width="9" height="15" fill="rgb(227,68,33)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="52" y="452" width="9" height="15" fill="rgb(252,188,14)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="52" y="468" width="9" height="15" fill="rgb(222,99,36)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.80%)</title><rect x="52" y="484" width="9" height="15" fill="rgb(251,178,42)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="52" y="500" width="9" height="15" fill="rgb(223,24,10)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="52" y="516" width="9" height="15" fill="rgb(235,101,33)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="52" y="532" width="9" height="15" fill="rgb(235,207,51)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="52" y="548" width="9" height="15" fill="rgb(206,205,16)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="52" y="564" width="9" height="15" fill="rgb(212,14,13)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.80%)</title><rect x="52" y="580" width="9" height="15" fill="rgb(210,85,48)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="52" y="596" width="9" height="15" fill="rgb(234,187,43)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="52" y="612" width="9" height="15" fill="rgb(212,95,46)"/><text x="55.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="52" y="628" width="9" height="15" fill="rgb(243,126,19)"/><text x="55.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="52" y="644" width="9" height="15" fill="rgb(228,107,25)"/><text x="55.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="52" y="660" width="9" height="15" fill="rgb(247,26,11)"/><text x="55.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.80%)</title><rect x="52" y="676" width="9" height="15" fill="rgb(218,192,42)"/><text x="55.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.80%)</title><rect x="52" y="692" width="9" height="15" fill="rgb(236,46,46)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.80%)</title><rect x="52" y="708" width="9" height="15" fill="rgb(214,38,1)"/><text x="55.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.80%)</title><rect x="52" y="724" width="9" height="15" fill="rgb(235,108,25)"/><text x="55.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.80%)</title><rect x="52" y="740" width="9" height="15" fill="rgb(217,60,30)"/><text x="55.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.80%)</title><rect x="52" y="756" width="9" height="15" fill="rgb(249,85,12)"/><text x="55.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (1 samples, 0.40%)</title><rect x="57" y="772" width="4" height="15" fill="rgb(212,67,6)"/><text x="60.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="57" y="788" width="4" height="15" fill="rgb(205,147,8)"/><text x="60.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="804" width="4" height="15" fill="rgb(241,37,36)"/><text x="60.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="57" y="820" width="4" height="15" fill="rgb(210,33,19)"/><text x="60.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="57" y="836" width="4" height="15" fill="rgb(222,111,11)"/><text x="60.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="57" y="852" width="4" height="15" fill="rgb(234,180,41)"/><text x="60.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="57" y="868" width="4" height="15" fill="rgb(232,96,18)"/><text x="60.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="884" width="4" height="15" fill="rgb(248,102,25)"/><text x="60.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (1 samples, 0.40%)</title><rect x="57" y="900" width="4" height="15" fill="rgb(238,144,16)"/><text x="60.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="57" y="916" width="4" height="15" fill="rgb(247,216,30)"/><text x="60.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="57" y="932" width="4" height="15" fill="rgb(217,76,52)"/><text x="60.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="948" width="4" height="15" fill="rgb(221,15,50)"/><text x="60.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="57" y="964" width="4" height="15" fill="rgb(251,66,44)"/><text x="60.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="57" y="980" width="4" height="15" fill="rgb(248,216,14)"/><text x="60.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="57" y="996" width="4" height="15" fill="rgb(244,20,46)"/><text x="60.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="57" y="1012" width="4" height="15" fill="rgb(206,197,29)"/><text x="60.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="1028" width="4" height="15" fill="rgb(248,148,38)"/><text x="60.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (1 samples, 0.40%)</title><rect x="57" y="1044" width="4" height="15" fill="rgb(208,141,6)"/><text x="60.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.40%)</title><rect x="57" y="1060" width="4" height="15" fill="rgb(209,101,54)"/><text x="60.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="1076" width="4" height="15" fill="rgb(216,69,35)"/><text x="60.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="57" y="1092" width="4" height="15" fill="rgb(206,102,40)"/><text x="60.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="57" y="1108" width="4" height="15" fill="rgb(234,27,51)"/><text x="60.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="57" y="1124" width="4" height="15" fill="rgb(221,94,14)"/><text x="60.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="57" y="1140" width="4" height="15" fill="rgb(235,205,52)"/><text x="60.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="1156" width="4" height="15" fill="rgb(240,40,30)"/><text x="60.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:15) (1 samples, 0.40%)</title><rect x="57" y="1172" width="4" height="15" fill="rgb(219,63,24)"/><text x="60.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="57" y="1188" width="4" height="15" fill="rgb(254,224,2)"/><text x="60.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="57" y="1204" width="4" height="15" fill="rgb(243,92,50)"/><text x="60.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="57" y="1220" width="4" height="15" fill="rgb(222,91,20)"/><text x="60.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="57" y="1236" width="4" height="15" fill="rgb(254,46,4)"/><text x="60.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="1252" width="4" height="15" fill="rgb(247,26,15)"/><text x="60.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py:6) (1 samples, 0.40%)</title><rect x="57" y="1268" width="4" height="15" fill="rgb(247,136,16)"/><text x="60.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="57" y="1284" width="4" height="15" fill="rgb(235,51,54)"/><text x="60.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="57" y="1300" width="4" height="15" fill="rgb(214,56,45)"/><text x="60.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="57" y="1316" width="4" height="15" fill="rgb(244,229,30)"/><text x="60.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="57" y="1332" width="4" height="15" fill="rgb(252,158,47)"/><text x="60.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="57" y="1348" width="4" height="15" fill="rgb(250,106,51)"/><text x="60.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py:195) (1 samples, 0.40%)</title><rect x="57" y="1364" width="4" height="15" fill="rgb(232,155,34)"/><text x="60.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py:139) (1 samples, 0.40%)</title><rect x="57" y="1380" width="4" height="15" fill="rgb(241,60,0)"/><text x="60.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py:134) (1 samples, 0.40%)</title><rect x="57" y="1396" width="4" height="15" fill="rgb(238,141,45)"/><text x="60.00" y="1406.50"></text></g><g><title>_register_osrandom_engine (cryptography/hazmat/bindings/openssl/binding.py:119) (1 samples, 0.40%)</title><rect x="57" y="1412" width="4" height="15" fill="rgb(219,8,18)"/><text x="60.00" y="1422.50"></text></g><g><title>0x7f9f777294a9 (?) (1 samples, 0.40%)</title><rect x="57" y="1428" width="4" height="15" fill="rgb(252,38,50)"/><text x="60.00" y="1438.50"></text></g><g><title>0x7f9f777293a9 (?) (1 samples, 0.40%)</title><rect x="57" y="1444" width="4" height="15" fill="rgb(226,13,28)"/><text x="60.00" y="1454.50"></text></g><g><title>0x7f9f777e1d00 (?) (1 samples, 0.40%)</title><rect x="57" y="1460" width="4" height="15" fill="rgb(238,28,54)"/><text x="60.00" y="1470.50"></text></g><g><title>0x7f9f777e1b1b (?) (1 samples, 0.40%)</title><rect x="57" y="1476" width="4" height="15" fill="rgb(253,149,12)"/><text x="60.00" y="1486.50"></text></g><g><title>0x7f9f777fe520 (?) (1 samples, 0.40%)</title><rect x="57" y="1492" width="4" height="15" fill="rgb(248,88,47)"/><text x="60.00" y="1502.50"></text></g><g><title>0x7f9f777fe20b (?) (1 samples, 0.40%)</title><rect x="57" y="1508" width="4" height="15" fill="rgb(245,24,16)"/><text x="60.00" y="1518.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:4) (12 samples, 4.78%)</title><rect x="10" y="52" width="56" height="15" fill="rgb(239,213,15)"/><text x="13.00" y="62.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 4.78%)</title><rect x="10" y="68" width="56" height="15" fill="rgb(228,198,22)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 4.78%)</title><rect x="10" y="84" width="56" height="15" fill="rgb(244,209,37)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 4.78%)</title><rect x="10" y="100" width="56" height="15" fill="rgb(229,153,33)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 4.78%)</title><rect x="10" y="116" width="56" height="15" fill="rgb(234,11,1)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 4.78%)</title><rect x="10" y="132" width="56" height="15" fill="rgb(206,146,28)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py:7) (3 samples, 1.20%)</title><rect x="52" y="148" width="14" height="15" fill="rgb(248,206,24)"/><text x="55.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.20%)</title><rect x="52" y="164" width="14" height="15" fill="rgb(247,38,37)"/><text x="55.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.20%)</title><rect x="52" y="180" width="14" height="15" fill="rgb(219,162,14)"/><text x="55.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.20%)</title><rect x="52" y="196" width="14" height="15" fill="rgb(237,205,43)"/><text x="55.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.20%)</title><rect x="52" y="212" width="14" height="15" fill="rgb(254,124,24)"/><text x="55.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.20%)</title><rect x="52" y="228" width="14" height="15" fill="rgb(239,80,40)"/><text x="55.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (1 samples, 0.40%)</title><rect x="61" y="244" width="5" height="15" fill="rgb(223,36,4)"/><text x="64.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="260" width="5" height="15" fill="rgb(212,130,12)"/><text x="64.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="276" width="5" height="15" fill="rgb(233,15,34)"/><text x="64.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="292" width="5" height="15" fill="rgb(238,18,35)"/><text x="64.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="308" width="5" height="15" fill="rgb(228,114,14)"/><text x="64.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="324" width="5" height="15" fill="rgb(205,96,10)"/><text x="64.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (1 samples, 0.40%)</title><rect x="61" y="340" width="5" height="15" fill="rgb(214,175,47)"/><text x="64.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="356" width="5" height="15" fill="rgb(249,219,38)"/><text x="64.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="372" width="5" height="15" fill="rgb(206,82,32)"/><text x="64.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="388" width="5" height="15" fill="rgb(252,95,16)"/><text x="64.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="404" width="5" height="15" fill="rgb(254,185,14)"/><text x="64.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="420" width="5" height="15" fill="rgb(245,208,25)"/><text x="64.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.40%)</title><rect x="61" y="436" width="5" height="15" fill="rgb(248,71,3)"/><text x="64.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="452" width="5" height="15" fill="rgb(233,194,19)"/><text x="64.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="468" width="5" height="15" fill="rgb(210,117,32)"/><text x="64.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="484" width="5" height="15" fill="rgb(228,57,5)"/><text x="64.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="500" width="5" height="15" fill="rgb(214,39,49)"/><text x="64.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="516" width="5" height="15" fill="rgb(233,153,35)"/><text x="64.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.40%)</title><rect x="61" y="532" width="5" height="15" fill="rgb(250,187,31)"/><text x="64.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="548" width="5" height="15" fill="rgb(205,93,3)"/><text x="64.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="564" width="5" height="15" fill="rgb(229,201,18)"/><text x="64.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="580" width="5" height="15" fill="rgb(208,129,35)"/><text x="64.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="596" width="5" height="15" fill="rgb(245,195,6)"/><text x="64.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="612" width="5" height="15" fill="rgb(253,102,26)"/><text x="64.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.40%)</title><rect x="61" y="628" width="5" height="15" fill="rgb(212,159,21)"/><text x="64.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="644" width="5" height="15" fill="rgb(213,174,47)"/><text x="64.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="660" width="5" height="15" fill="rgb(208,22,21)"/><text x="64.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="676" width="5" height="15" fill="rgb(206,27,1)"/><text x="64.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="692" width="5" height="15" fill="rgb(205,48,10)"/><text x="64.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="708" width="5" height="15" fill="rgb(214,150,39)"/><text x="64.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.40%)</title><rect x="61" y="724" width="5" height="15" fill="rgb(235,166,20)"/><text x="64.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="740" width="5" height="15" fill="rgb(210,100,31)"/><text x="64.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="756" width="5" height="15" fill="rgb(226,207,34)"/><text x="64.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="772" width="5" height="15" fill="rgb(208,227,39)"/><text x="64.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="788" width="5" height="15" fill="rgb(237,14,36)"/><text x="64.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="804" width="5" height="15" fill="rgb(230,130,33)"/><text x="64.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.40%)</title><rect x="61" y="820" width="5" height="15" fill="rgb(234,153,51)"/><text x="64.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="836" width="5" height="15" fill="rgb(248,78,18)"/><text x="64.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="852" width="5" height="15" fill="rgb(244,75,21)"/><text x="64.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="868" width="5" height="15" fill="rgb(230,113,36)"/><text x="64.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="884" width="5" height="15" fill="rgb(249,52,39)"/><text x="64.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="900" width="5" height="15" fill="rgb(215,192,49)"/><text x="64.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.40%)</title><rect x="61" y="916" width="5" height="15" fill="rgb(219,86,16)"/><text x="64.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="932" width="5" height="15" fill="rgb(214,4,29)"/><text x="64.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="948" width="5" height="15" fill="rgb(237,147,33)"/><text x="64.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="964" width="5" height="15" fill="rgb(254,217,44)"/><text x="64.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="980" width="5" height="15" fill="rgb(219,12,38)"/><text x="64.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="996" width="5" height="15" fill="rgb(231,135,27)"/><text x="64.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.40%)</title><rect x="61" y="1012" width="5" height="15" fill="rgb(246,135,47)"/><text x="64.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1028" width="5" height="15" fill="rgb(239,33,25)"/><text x="64.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="1044" width="5" height="15" fill="rgb(212,220,42)"/><text x="64.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="1060" width="5" height="15" fill="rgb(217,102,28)"/><text x="64.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="1076" width="5" height="15" fill="rgb(220,150,45)"/><text x="64.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1092" width="5" height="15" fill="rgb(249,50,9)"/><text x="64.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.40%)</title><rect x="61" y="1108" width="5" height="15" fill="rgb(218,212,13)"/><text x="64.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1124" width="5" height="15" fill="rgb(206,167,19)"/><text x="64.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="1140" width="5" height="15" fill="rgb(220,56,43)"/><text x="64.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="1156" width="5" height="15" fill="rgb(220,108,2)"/><text x="64.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="1172" width="5" height="15" fill="rgb(236,170,5)"/><text x="64.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1188" width="5" height="15" fill="rgb(209,189,13)"/><text x="64.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.40%)</title><rect x="61" y="1204" width="5" height="15" fill="rgb(211,194,23)"/><text x="64.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1220" width="5" height="15" fill="rgb(219,71,20)"/><text x="64.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="1236" width="5" height="15" fill="rgb(206,58,51)"/><text x="64.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="1252" width="5" height="15" fill="rgb(248,155,50)"/><text x="64.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="1268" width="5" height="15" fill="rgb(213,193,5)"/><text x="64.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1284" width="5" height="15" fill="rgb(222,214,28)"/><text x="64.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.40%)</title><rect x="61" y="1300" width="5" height="15" fill="rgb(231,86,31)"/><text x="64.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1316" width="5" height="15" fill="rgb(220,163,8)"/><text x="64.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="1332" width="5" height="15" fill="rgb(223,64,31)"/><text x="64.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="1348" width="5" height="15" fill="rgb(210,81,52)"/><text x="64.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="1364" width="5" height="15" fill="rgb(236,21,47)"/><text x="64.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1380" width="5" height="15" fill="rgb(215,86,35)"/><text x="64.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.40%)</title><rect x="61" y="1396" width="5" height="15" fill="rgb(226,125,41)"/><text x="64.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1412" width="5" height="15" fill="rgb(220,3,27)"/><text x="64.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="1428" width="5" height="15" fill="rgb(235,53,27)"/><text x="64.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="1444" width="5" height="15" fill="rgb(249,66,37)"/><text x="64.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="1460" width="5" height="15" fill="rgb(240,191,11)"/><text x="64.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1476" width="5" height="15" fill="rgb(245,135,9)"/><text x="64.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.40%)</title><rect x="61" y="1492" width="5" height="15" fill="rgb(222,11,34)"/><text x="64.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1508" width="5" height="15" fill="rgb(223,39,3)"/><text x="64.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.40%)</title><rect x="61" y="1524" width="5" height="15" fill="rgb(251,143,50)"/><text x="64.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1540" width="5" height="15" fill="rgb(221,208,34)"/><text x="64.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.40%)</title><rect x="61" y="1556" width="5" height="15" fill="rgb(214,153,53)"/><text x="64.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.40%)</title><rect x="61" y="1572" width="5" height="15" fill="rgb(227,165,2)"/><text x="64.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.40%)</title><rect x="61" y="1588" width="5" height="15" fill="rgb(211,208,38)"/><text x="64.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.40%)</title><rect x="61" y="1604" width="5" height="15" fill="rgb(223,187,4)"/><text x="64.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.40%)</title><rect x="61" y="1620" width="5" height="15" fill="rgb(233,136,44)"/><text x="64.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:1015) (1 samples, 0.40%)</title><rect x="61" y="1636" width="5" height="15" fill="rgb(250,83,19)"/><text x="64.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py:879) (1 samples, 0.40%)</title><rect x="61" y="1652" width="5" height="15" fill="rgb(239,216,17)"/><text x="64.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py:994) (1 samples, 0.40%)</title><rect x="61" y="1668" width="5" height="15" fill="rgb(253,193,39)"/><text x="64.00" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py:772) (1 samples, 0.40%)</title><rect x="61" y="1684" width="5" height="15" fill="rgb(241,84,24)"/><text x="64.00" y="1694.50"></text></g><g><title>update (_collections_abc.py:847) (1 samples, 0.40%)</title><rect x="61" y="1700" width="5" height="15" fill="rgb(242,72,35)"/><text x="64.00" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py:801) (1 samples, 0.40%)</title><rect x="61" y="1716" width="5" height="15" fill="rgb(224,221,19)"/><text x="64.00" y="1726.50"></text></g><g><title>validate_color (matplotlib/rcsetup.py:377) (1 samples, 0.40%)</title><rect x="61" y="1732" width="5" height="15" fill="rgb(220,50,12)"/><text x="64.00" y="1742.50"></text></g><g><title>array_dealloc (arrayobject.c:525) (1 samples, 0.40%)</title><rect x="80" y="148" width="5" height="15" fill="rgb(221,218,48)"/><text x="83.00" y="158.50"></text></g><g><title>check_array (sklearn/utils/validation.py:434) (1 samples, 0.40%)</title><rect x="85" y="164" width="4" height="15" fill="rgb(238,166,32)"/><text x="88.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.80%)</title><rect x="89" y="164" width="10" height="15" fill="rgb(210,107,10)"/><text x="92.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.40%)</title><rect x="99" y="180" width="5" height="15" fill="rgb(233,165,8)"/><text x="102.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.40%)</title><rect x="104" y="196" width="4" height="15" fill="rgb(251,132,17)"/><text x="107.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.59%)</title><rect x="99" y="164" width="19" height="15" fill="rgb(248,128,42)"/><text x="102.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 1.20%)</title><rect x="104" y="180" width="14" height="15" fill="rgb(236,19,43)"/><text x="107.00" y="190.50"></text></g><g><title>_add_filter (warnings.py:189) (2 samples, 0.80%)</title><rect x="108" y="196" width="10" height="15" fill="rgb(225,222,1)"/><text x="111.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.40%)</title><rect x="118" y="164" width="4" height="15" fill="rgb(219,161,46)"/><text x="121.00" y="174.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.40%)</title><rect x="118" y="180" width="4" height="15" fill="rgb(215,176,19)"/><text x="121.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.40%)</title><rect x="127" y="196" width="5" height="15" fill="rgb(252,8,3)"/><text x="130.00" y="206.50"></text></g><g><title>0x7f9fac8b2ed2 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="127" y="212" width="5" height="15" fill="rgb(239,173,37)"/><text x="130.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 1.20%)</title><rect x="122" y="164" width="14" height="15" fill="rgb(242,11,48)"/><text x="125.00" y="174.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (3 samples, 1.20%)</title><rect x="122" y="180" width="14" height="15" fill="rgb(223,7,12)"/><text x="125.00" y="190.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.40%)</title><rect x="132" y="196" width="4" height="15" fill="rgb(220,155,12)"/><text x="135.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.40%)</title><rect x="136" y="180" width="5" height="15" fill="rgb(246,212,29)"/><text x="139.00" y="190.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:172) (14 samples, 5.58%)</title><rect x="85" y="148" width="66" height="15" fill="rgb(236,203,54)"/><text x="88.00" y="158.50">predict..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 1.20%)</title><rect x="136" y="164" width="15" height="15" fill="rgb(243,79,8)"/><text x="139.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.80%)</title><rect x="141" y="180" width="10" height="15" fill="rgb(229,194,29)"/><text x="144.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.40%)</title><rect x="146" y="196" width="5" height="15" fill="rgb(240,206,6)"/><text x="149.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.40%)</title><rect x="146" y="212" width="5" height="15" fill="rgb(220,13,10)"/><text x="149.00" y="222.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:583) (2 samples, 0.80%)</title><rect x="151" y="164" width="9" height="15" fill="rgb(237,221,26)"/><text x="154.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.40%)</title><rect x="155" y="180" width="5" height="15" fill="rgb(246,165,9)"/><text x="158.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.40%)</title><rect x="155" y="196" width="5" height="15" fill="rgb(242,102,2)"/><text x="158.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:586) (1 samples, 0.40%)</title><rect x="160" y="164" width="5" height="15" fill="rgb(248,87,28)"/><text x="163.00" y="174.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.40%)</title><rect x="165" y="196" width="4" height="15" fill="rgb(250,58,14)"/><text x="168.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.80%)</title><rect x="169" y="212" width="10" height="15" fill="rgb(220,63,18)"/><text x="172.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.40%)</title><rect x="179" y="212" width="4" height="15" fill="rgb(240,167,42)"/><text x="182.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.99%)</title><rect x="165" y="180" width="23" height="15" fill="rgb(213,71,4)"/><text x="168.00" y="190.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.59%)</title><rect x="169" y="196" width="19" height="15" fill="rgb(219,68,28)"/><text x="172.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.40%)</title><rect x="183" y="212" width="5" height="15" fill="rgb(215,15,47)"/><text x="186.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.40%)</title><rect x="188" y="196" width="5" height="15" fill="rgb(215,197,10)"/><text x="191.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (2 samples, 0.80%)</title><rect x="188" y="180" width="10" height="15" fill="rgb(206,17,18)"/><text x="191.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:425) (1 samples, 0.40%)</title><rect x="193" y="196" width="5" height="15" fill="rgb(253,218,38)"/><text x="196.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.40%)</title><rect x="198" y="180" width="4" height="15" fill="rgb(227,120,31)"/><text x="201.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.40%)</title><rect x="198" y="196" width="4" height="15" fill="rgb(226,114,32)"/><text x="201.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.40%)</title><rect x="202" y="196" width="5" height="15" fill="rgb(206,144,15)"/><text x="205.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.40%)</title><rect x="207" y="196" width="5" height="15" fill="rgb(209,195,12)"/><text x="210.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:604) (11 samples, 4.38%)</title><rect x="165" y="164" width="51" height="15" fill="rgb(224,79,10)"/><text x="168.00" y="174.50">kneig..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 1.20%)</title><rect x="202" y="180" width="14" height="15" fill="rgb(248,96,44)"/><text x="205.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.40%)</title><rect x="212" y="196" width="4" height="15" fill="rgb(231,120,40)"/><text x="215.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (5 samples, 1.99%)</title><rect x="216" y="196" width="24" height="15" fill="rgb(211,214,5)"/><text x="219.00" y="206.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (2 samples, 0.80%)</title><rect x="230" y="212" width="10" height="15" fill="rgb(226,160,34)"/><text x="233.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (6 samples, 2.39%)</title><rect x="216" y="180" width="29" height="15" fill="rgb(231,20,15)"/><text x="219.00" y="190.50">ef..</text></g><g><title>get_active_backend (joblib/parallel.py:94) (1 samples, 0.40%)</title><rect x="240" y="196" width="5" height="15" fill="rgb(227,14,14)"/><text x="243.00" y="206.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:620) (7 samples, 2.79%)</title><rect x="216" y="164" width="33" height="15" fill="rgb(224,39,16)"/><text x="219.00" y="174.50">kn..</text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (1 samples, 0.40%)</title><rect x="245" y="180" width="4" height="15" fill="rgb(222,202,13)"/><text x="248.00" y="190.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1562) (2 samples, 0.80%)</title><rect x="249" y="180" width="10" height="15" fill="rgb(233,181,26)"/><text x="252.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.80%)</title><rect x="249" y="196" width="10" height="15" fill="rgb(236,11,31)"/><text x="252.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.40%)</title><rect x="254" y="212" width="5" height="15" fill="rgb(229,19,49)"/><text x="257.00" y="222.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1579) (1 samples, 0.40%)</title><rect x="259" y="180" width="4" height="15" fill="rgb(218,103,6)"/><text x="262.00" y="190.50"></text></g><g><title>get_chunk_n_rows (sklearn/utils/__init__.py:958) (1 samples, 0.40%)</title><rect x="259" y="196" width="4" height="15" fill="rgb(237,70,10)"/><text x="262.00" y="206.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1586) (1 samples, 0.40%)</title><rect x="263" y="180" width="5" height="15" fill="rgb(241,91,1)"/><text x="266.00" y="190.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py:774) (1 samples, 0.40%)</title><rect x="263" y="196" width="5" height="15" fill="rgb(244,206,43)"/><text x="266.00" y="206.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:388) (1 samples, 0.40%)</title><rect x="273" y="228" width="4" height="15" fill="rgb(220,40,34)"/><text x="276.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py:116) (1 samples, 0.40%)</title><rect x="273" y="244" width="4" height="15" fill="rgb(217,229,21)"/><text x="276.00" y="254.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py:276) (1 samples, 0.40%)</title><rect x="273" y="260" width="4" height="15" fill="rgb(224,68,47)"/><text x="276.00" y="270.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1347) (4 samples, 1.59%)</title><rect x="273" y="212" width="19" height="15" fill="rgb(235,202,30)"/><text x="276.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py:389) (3 samples, 1.20%)</title><rect x="277" y="228" width="15" height="15" fill="rgb(234,227,48)"/><text x="280.00" y="238.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py:521) (1 samples, 0.40%)</title><rect x="287" y="244" width="5" height="15" fill="rgb(232,184,40)"/><text x="290.00" y="254.50"></text></g><g><title>daemon (multiprocessing/process.py:194) (1 samples, 0.40%)</title><rect x="287" y="260" width="5" height="15" fill="rgb(225,8,54)"/><text x="290.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.40%)</title><rect x="292" y="260" width="4" height="15" fill="rgb(223,127,54)"/><text x="295.00" y="270.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.40%)</title><rect x="292" y="276" width="4" height="15" fill="rgb(235,92,17)"/><text x="295.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 1.59%)</title><rect x="296" y="260" width="19" height="15" fill="rgb(225,203,27)"/><text x="299.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.59%)</title><rect x="296" y="276" width="19" height="15" fill="rgb(252,100,8)"/><text x="299.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.80%)</title><rect x="306" y="292" width="9" height="15" fill="rgb(222,184,52)"/><text x="309.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.40%)</title><rect x="329" y="372" width="5" height="15" fill="rgb(206,209,1)"/><text x="332.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.40%)</title><rect x="329" y="388" width="5" height="15" fill="rgb(236,124,6)"/><text x="332.00" y="398.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1520) (1 samples, 0.40%)</title><rect x="329" y="404" width="5" height="15" fill="rgb(236,57,14)"/><text x="332.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.40%)</title><rect x="329" y="420" width="5" height="15" fill="rgb(214,178,9)"/><text x="332.00" y="430.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (5 samples, 1.99%)</title><rect x="315" y="260" width="24" height="15" fill="rgb(206,206,12)"/><text x="318.00" y="270.50">c..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 1.20%)</title><rect x="324" y="276" width="15" height="15" fill="rgb(220,55,24)"/><text x="327.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.80%)</title><rect x="329" y="292" width="10" height="15" fill="rgb(222,1,0)"/><text x="332.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.80%)</title><rect x="329" y="308" width="10" height="15" fill="rgb(251,88,27)"/><text x="332.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (2 samples, 0.80%)</title><rect x="329" y="324" width="10" height="15" fill="rgb(210,215,33)"/><text x="332.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (2 samples, 0.80%)</title><rect x="329" y="340" width="10" height="15" fill="rgb(250,188,29)"/><text x="332.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.80%)</title><rect x="329" y="356" width="10" height="15" fill="rgb(212,71,13)"/><text x="332.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.40%)</title><rect x="334" y="372" width="5" height="15" fill="rgb(210,10,30)"/><text x="337.00" y="382.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.40%)</title><rect x="334" y="388" width="5" height="15" fill="rgb(215,57,35)"/><text x="337.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.40%)</title><rect x="334" y="404" width="5" height="15" fill="rgb(220,173,25)"/><text x="337.00" y="414.50"></text></g><g><title>0x7f9fac8bcd50 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="334" y="420" width="5" height="15" fill="rgb(206,82,35)"/><text x="337.00" y="430.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.40%)</title><rect x="339" y="276" width="4" height="15" fill="rgb(244,147,1)"/><text x="342.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 1.20%)</title><rect x="339" y="260" width="14" height="15" fill="rgb(209,222,11)"/><text x="342.00" y="270.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.80%)</title><rect x="343" y="276" width="10" height="15" fill="rgb(221,144,37)"/><text x="346.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.40%)</title><rect x="353" y="260" width="4" height="15" fill="rgb(225,40,9)"/><text x="356.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.40%)</title><rect x="353" y="276" width="4" height="15" fill="rgb(240,14,41)"/><text x="356.00" y="286.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.40%)</title><rect x="353" y="292" width="4" height="15" fill="rgb(214,205,26)"/><text x="356.00" y="302.50"></text></g><g><title>0x7f9fac8ad6d4 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="353" y="308" width="4" height="15" fill="rgb(242,139,21)"/><text x="356.00" y="318.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:141) (15 samples, 5.98%)</title><rect x="292" y="244" width="70" height="15" fill="rgb(240,5,19)"/><text x="295.00" y="254.50">check_p..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.40%)</title><rect x="357" y="260" width="5" height="15" fill="rgb(242,171,50)"/><text x="360.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.40%)</title><rect x="357" y="276" width="5" height="15" fill="rgb(241,178,46)"/><text x="360.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.40%)</title><rect x="367" y="260" width="4" height="15" fill="rgb(205,119,7)"/><text x="370.00" y="270.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.40%)</title><rect x="367" y="276" width="4" height="15" fill="rgb(238,51,35)"/><text x="370.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.40%)</title><rect x="371" y="260" width="5" height="15" fill="rgb(237,63,50)"/><text x="374.00" y="270.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.40%)</title><rect x="371" y="276" width="5" height="15" fill="rgb(223,81,7)"/><text x="374.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.40%)</title><rect x="376" y="260" width="5" height="15" fill="rgb(228,11,17)"/><text x="379.00" y="270.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.40%)</title><rect x="376" y="276" width="5" height="15" fill="rgb(254,106,17)"/><text x="379.00" y="286.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.40%)</title><rect x="376" y="292" width="5" height="15" fill="rgb(239,9,38)"/><text x="379.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.40%)</title><rect x="381" y="260" width="5" height="15" fill="rgb(244,130,4)"/><text x="384.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:556) (2 samples, 0.80%)</title><rect x="386" y="260" width="9" height="15" fill="rgb(249,220,46)"/><text x="389.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.40%)</title><rect x="395" y="276" width="5" height="15" fill="rgb(221,35,1)"/><text x="398.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.40%)</title><rect x="395" y="292" width="5" height="15" fill="rgb(243,224,52)"/><text x="398.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (3 samples, 1.20%)</title><rect x="395" y="260" width="14" height="15" fill="rgb(230,139,12)"/><text x="398.00" y="270.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (2 samples, 0.80%)</title><rect x="400" y="276" width="9" height="15" fill="rgb(226,197,25)"/><text x="403.00" y="286.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.40%)</title><rect x="404" y="292" width="5" height="15" fill="rgb(242,32,22)"/><text x="407.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.40%)</title><rect x="409" y="260" width="5" height="15" fill="rgb(233,103,49)"/><text x="412.00" y="270.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:262) (29 samples, 11.55%)</title><rect x="292" y="228" width="136" height="15" fill="rgb(251,86,16)"/><text x="295.00" y="238.50">euclidean_distanc..</text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py:144) (14 samples, 5.58%)</title><rect x="362" y="244" width="66" height="15" fill="rgb(234,38,43)"/><text x="365.00" y="254.50">check_p..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (3 samples, 1.20%)</title><rect x="414" y="260" width="14" height="15" fill="rgb(236,54,2)"/><text x="417.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.20%)</title><rect x="414" y="276" width="14" height="15" fill="rgb(208,143,10)"/><text x="417.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.20%)</title><rect x="414" y="292" width="14" height="15" fill="rgb(244,102,49)"/><text x="417.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.80%)</title><rect x="419" y="308" width="9" height="15" fill="rgb(253,168,40)"/><text x="422.00" y="318.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:4) (1 samples, 0.40%)</title><rect x="428" y="260" width="5" height="15" fill="rgb(243,68,26)"/><text x="431.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.40%)</title><rect x="433" y="276" width="4" height="15" fill="rgb(218,74,0)"/><text x="436.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.40%)</title><rect x="437" y="276" width="5" height="15" fill="rgb(207,145,46)"/><text x="440.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:79) (1 samples, 0.40%)</title><rect x="437" y="292" width="5" height="15" fill="rgb(247,123,22)"/><text x="440.00" y="302.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:279) (5 samples, 1.99%)</title><rect x="428" y="228" width="23" height="15" fill="rgb(253,131,13)"/><text x="431.00" y="238.50">e..</text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (5 samples, 1.99%)</title><rect x="428" y="244" width="23" height="15" fill="rgb(222,170,38)"/><text x="431.00" y="254.50">r..</text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.59%)</title><rect x="433" y="260" width="18" height="15" fill="rgb(252,85,4)"/><text x="436.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.80%)</title><rect x="442" y="276" width="9" height="15" fill="rgb(206,189,10)"/><text x="445.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (1 samples, 0.40%)</title><rect x="447" y="292" width="4" height="15" fill="rgb(213,10,27)"/><text x="450.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (1 samples, 0.40%)</title><rect x="447" y="308" width="4" height="15" fill="rgb(247,23,52)"/><text x="450.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2768) (1 samples, 0.40%)</title><rect x="447" y="324" width="4" height="15" fill="rgb(250,197,26)"/><text x="450.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.40%)</title><rect x="447" y="340" width="4" height="15" fill="rgb(209,16,27)"/><text x="450.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1485) (1 samples, 0.40%)</title><rect x="447" y="356" width="4" height="15" fill="rgb(218,222,54)"/><text x="450.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.40%)</title><rect x="456" y="276" width="5" height="15" fill="rgb(241,33,48)"/><text x="459.00" y="286.50"></text></g><g><title>_einsum_dispatcher (numpy/core/einsumfunc.py:998) (1 samples, 0.40%)</title><rect x="456" y="292" width="5" height="15" fill="rgb(246,117,40)"/><text x="459.00" y="302.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2774) (1 samples, 0.40%)</title><rect x="461" y="324" width="5" height="15" fill="rgb(253,191,13)"/><text x="464.00" y="334.50"></text></g><g><title>PyArray_AssignZero (convert.c:542) (1 samples, 0.40%)</title><rect x="461" y="340" width="5" height="15" fill="rgb(228,4,49)"/><text x="464.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:255) (1 samples, 0.40%)</title><rect x="461" y="356" width="5" height="15" fill="rgb(228,172,21)"/><text x="464.00" y="366.50"></text></g><g><title>PyArray_CastRawArrays (dtype_transfer.c:3799) (1 samples, 0.40%)</title><rect x="461" y="372" width="5" height="15" fill="rgb(251,26,39)"/><text x="464.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.40%)</title><rect x="461" y="388" width="5" height="15" fill="rgb(220,101,15)"/><text x="464.00" y="398.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:294) (1 samples, 0.40%)</title><rect x="461" y="404" width="5" height="15" fill="rgb(232,37,49)"/><text x="464.00" y="414.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:295) (4 samples, 1.59%)</title><rect x="451" y="228" width="19" height="15" fill="rgb(212,112,43)"/><text x="454.00" y="238.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py:74) (4 samples, 1.59%)</title><rect x="451" y="244" width="19" height="15" fill="rgb(246,171,11)"/><text x="454.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.59%)</title><rect x="451" y="260" width="19" height="15" fill="rgb(251,117,29)"/><text x="454.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.80%)</title><rect x="461" y="276" width="9" height="15" fill="rgb(246,90,5)"/><text x="464.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py:1356) (2 samples, 0.80%)</title><rect x="461" y="292" width="9" height="15" fill="rgb(253,104,10)"/><text x="464.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c:2693) (2 samples, 0.80%)</title><rect x="461" y="308" width="9" height="15" fill="rgb(205,166,40)"/><text x="464.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src:2803) (1 samples, 0.40%)</title><rect x="466" y="324" width="4" height="15" fill="rgb(225,194,37)"/><text x="469.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src:2392) (1 samples, 0.40%)</title><rect x="466" y="340" width="4" height="15" fill="rgb(231,129,26)"/><text x="469.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src:650) (1 samples, 0.40%)</title><rect x="466" y="356" width="4" height="15" fill="rgb(223,208,48)"/><text x="469.00" y="366.50"></text></g><g><title>_mm_mul_pd (emmintrin.h:253) (1 samples, 0.40%)</title><rect x="466" y="372" width="4" height="15" fill="rgb(249,33,4)"/><text x="469.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.40%)</title><rect x="480" y="276" width="4" height="15" fill="rgb(208,189,34)"/><text x="483.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1090) (1 samples, 0.40%)</title><rect x="480" y="292" width="4" height="15" fill="rgb(228,55,22)"/><text x="483.00" y="302.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 1.20%)</title><rect x="475" y="244" width="14" height="15" fill="rgb(248,199,36)"/><text x="478.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.80%)</title><rect x="480" y="260" width="9" height="15" fill="rgb(224,145,10)"/><text x="483.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.40%)</title><rect x="484" y="276" width="5" height="15" fill="rgb(208,135,4)"/><text x="487.00" y="286.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.40%)</title><rect x="484" y="292" width="5" height="15" fill="rgb(242,62,54)"/><text x="487.00" y="302.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.40%)</title><rect x="484" y="308" width="5" height="15" fill="rgb(243,227,49)"/><text x="487.00" y="318.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.40%)</title><rect x="484" y="324" width="5" height="15" fill="rgb(214,148,3)"/><text x="487.00" y="334.50"></text></g><g><title>array_matrix_multiply (number.c:390) (1 samples, 0.40%)</title><rect x="489" y="260" width="5" height="15" fill="rgb(250,198,13)"/><text x="492.00" y="270.50"></text></g><g><title>PyArray_GenericBinaryFunction (number.c:281) (1 samples, 0.40%)</title><rect x="489" y="276" width="5" height="15" fill="rgb(237,14,45)"/><text x="492.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4716) (1 samples, 0.40%)</title><rect x="494" y="260" width="4" height="15" fill="rgb(244,211,32)"/><text x="497.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.40%)</title><rect x="498" y="260" width="5" height="15" fill="rgb(221,135,34)"/><text x="501.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.40%)</title><rect x="498" y="276" width="5" height="15" fill="rgb(242,99,11)"/><text x="501.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.40%)</title><rect x="498" y="292" width="5" height="15" fill="rgb(236,123,44)"/><text x="501.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:97) (1 samples, 0.40%)</title><rect x="498" y="308" width="5" height="15" fill="rgb(244,187,33)"/><text x="501.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.40%)</title><rect x="503" y="292" width="5" height="15" fill="rgb(219,199,20)"/><text x="506.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1274) (1 samples, 0.40%)</title><rect x="503" y="308" width="5" height="15" fill="rgb(254,39,11)"/><text x="506.00" y="318.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (5 samples, 1.99%)</title><rect x="489" y="244" width="24" height="15" fill="rgb(218,62,31)"/><text x="492.00" y="254.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.80%)</title><rect x="503" y="260" width="10" height="15" fill="rgb(223,227,27)"/><text x="506.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (2 samples, 0.80%)</title><rect x="503" y="276" width="10" height="15" fill="rgb(242,171,46)"/><text x="506.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.40%)</title><rect x="508" y="292" width="5" height="15" fill="rgb(247,103,24)"/><text x="511.00" y="302.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:455) (1 samples, 0.40%)</title><rect x="508" y="308" width="5" height="15" fill="rgb(236,145,10)"/><text x="511.00" y="318.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.40%)</title><rect x="508" y="324" width="5" height="15" fill="rgb(244,49,48)"/><text x="511.00" y="334.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.40%)</title><rect x="508" y="340" width="5" height="15" fill="rgb(240,87,38)"/><text x="511.00" y="350.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:303) (10 samples, 3.98%)</title><rect x="470" y="228" width="47" height="15" fill="rgb(248,49,20)"/><text x="473.00" y="238.50">eucl..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (1 samples, 0.40%)</title><rect x="513" y="244" width="4" height="15" fill="rgb(253,102,2)"/><text x="516.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.40%)</title><rect x="513" y="260" width="4" height="15" fill="rgb(231,104,31)"/><text x="516.00" y="270.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:305) (1 samples, 0.40%)</title><rect x="517" y="228" width="5" height="15" fill="rgb(240,87,2)"/><text x="520.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.40%)</title><rect x="527" y="260" width="4" height="15" fill="rgb(212,50,42)"/><text x="530.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.40%)</title><rect x="527" y="276" width="4" height="15" fill="rgb(206,163,51)"/><text x="530.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.40%)</title><rect x="527" y="292" width="4" height="15" fill="rgb(219,149,1)"/><text x="530.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.40%)</title><rect x="527" y="308" width="4" height="15" fill="rgb(238,188,5)"/><text x="530.00" y="318.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.40%)</title><rect x="527" y="324" width="4" height="15" fill="rgb(210,186,24)"/><text x="530.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.40%)</title><rect x="527" y="340" width="4" height="15" fill="rgb(231,126,22)"/><text x="530.00" y="350.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3844) (1 samples, 0.40%)</title><rect x="527" y="356" width="4" height="15" fill="rgb(253,17,37)"/><text x="530.00" y="366.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1592) (57 samples, 22.71%)</title><rect x="268" y="180" width="268" height="15" fill="rgb(205,180,15)"/><text x="271.00" y="190.50">pairwise_distances_chunked (sklearn..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py:1749) (56 samples, 22.31%)</title><rect x="273" y="196" width="263" height="15" fill="rgb(230,210,41)"/><text x="276.00" y="206.50">pairwise_distances (sklearn/metrics..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py:1348) (52 samples, 20.72%)</title><rect x="292" y="212" width="244" height="15" fill="rgb(250,0,34)"/><text x="295.00" y="222.50">_parallel_pairwise (sklearn/metr..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py:306) (3 samples, 1.20%)</title><rect x="522" y="228" width="14" height="15" fill="rgb(228,225,3)"/><text x="525.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.80%)</title><rect x="527" y="244" width="9" height="15" fill="rgb(222,5,36)"/><text x="530.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.40%)</title><rect x="531" y="260" width="5" height="15" fill="rgb(229,222,12)"/><text x="534.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.40%)</title><rect x="531" y="276" width="5" height="15" fill="rgb(247,194,53)"/><text x="534.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.40%)</title><rect x="531" y="292" width="5" height="15" fill="rgb(216,80,39)"/><text x="534.00" y="302.50"></text></g><g><title>DOUBLE_maximum (loops.c.src:1871) (1 samples, 0.40%)</title><rect x="531" y="308" width="5" height="15" fill="rgb(207,214,27)"/><text x="534.00" y="318.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1599) (1 samples, 0.40%)</title><rect x="536" y="180" width="5" height="15" fill="rgb(223,60,47)"/><text x="539.00" y="190.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:516) (2 samples, 0.80%)</title><rect x="564" y="196" width="10" height="15" fill="rgb(240,229,27)"/><text x="567.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.40%)</title><rect x="569" y="212" width="5" height="15" fill="rgb(243,98,39)"/><text x="572.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3451) (1 samples, 0.40%)</title><rect x="569" y="228" width="5" height="15" fill="rgb(245,121,44)"/><text x="572.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.40%)</title><rect x="569" y="244" width="5" height="15" fill="rgb(214,167,40)"/><text x="572.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.40%)</title><rect x="569" y="260" width="5" height="15" fill="rgb(252,171,44)"/><text x="572.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c:71) (1 samples, 0.40%)</title><rect x="569" y="276" width="5" height="15" fill="rgb(230,39,29)"/><text x="572.00" y="286.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:517) (2 samples, 0.80%)</title><rect x="574" y="196" width="9" height="15" fill="rgb(224,29,36)"/><text x="577.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (2 samples, 0.80%)</title><rect x="574" y="212" width="9" height="15" fill="rgb(250,127,46)"/><text x="577.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.80%)</title><rect x="574" y="228" width="9" height="15" fill="rgb(211,61,22)"/><text x="577.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (2 samples, 0.80%)</title><rect x="574" y="244" width="9" height="15" fill="rgb(248,49,17)"/><text x="577.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.80%)</title><rect x="574" y="260" width="9" height="15" fill="rgb(235,103,22)"/><text x="577.00" y="270.50"></text></g><g><title>array_argpartition (methods.c:1454) (1 samples, 0.40%)</title><rect x="578" y="276" width="5" height="15" fill="rgb(217,156,42)"/><text x="581.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1365) (1 samples, 0.40%)</title><rect x="578" y="292" width="5" height="15" fill="rgb(226,11,49)"/><text x="581.00" y="302.50"></text></g><g><title>partition_prep_kth_array (item_selection.c:1197) (1 samples, 0.40%)</title><rect x="578" y="308" width="5" height="15" fill="rgb(231,51,9)"/><text x="581.00" y="318.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.40%)</title><rect x="578" y="324" width="5" height="15" fill="rgb(231,102,17)"/><text x="581.00" y="334.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.40%)</title><rect x="578" y="340" width="5" height="15" fill="rgb(226,101,49)"/><text x="581.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.40%)</title><rect x="578" y="356" width="5" height="15" fill="rgb(240,110,31)"/><text x="581.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:57) (1 samples, 0.40%)</title><rect x="578" y="372" width="5" height="15" fill="rgb(213,136,49)"/><text x="581.00" y="382.50"></text></g><g><title>PyArray_PrepareOneRawArrayIter (dtype_transfer.c:3846) (1 samples, 0.40%)</title><rect x="578" y="388" width="5" height="15" fill="rgb(254,105,10)"/><text x="581.00" y="398.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.40%)</title><rect x="583" y="228" width="5" height="15" fill="rgb(246,117,47)"/><text x="586.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.80%)</title><rect x="583" y="212" width="9" height="15" fill="rgb(210,116,11)"/><text x="586.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:555) (1 samples, 0.40%)</title><rect x="588" y="228" width="4" height="15" fill="rgb(211,25,21)"/><text x="591.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.40%)</title><rect x="592" y="212" width="5" height="15" fill="rgb(225,33,35)"/><text x="595.00" y="222.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.40%)</title><rect x="592" y="228" width="5" height="15" fill="rgb(235,86,44)"/><text x="595.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="592" y="244" width="5" height="15" fill="rgb(248,148,22)"/><text x="595.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.40%)</title><rect x="597" y="212" width="5" height="15" fill="rgb(226,47,8)"/><text x="600.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.40%)</title><rect x="597" y="228" width="5" height="15" fill="rgb(240,140,10)"/><text x="600.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="597" y="244" width="5" height="15" fill="rgb(240,121,1)"/><text x="600.00" y="254.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1601) (14 samples, 5.58%)</title><rect x="541" y="180" width="66" height="15" fill="rgb(209,44,46)"/><text x="544.00" y="190.50">pairwis..</text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py:524) (5 samples, 1.99%)</title><rect x="583" y="196" width="24" height="15" fill="rgb(209,185,42)"/><text x="586.00" y="206.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4754) (1 samples, 0.40%)</title><rect x="602" y="212" width="5" height="15" fill="rgb(219,168,13)"/><text x="605.00" y="222.50"></text></g><g><title>_find_array_wrap (ufunc_object.c:424) (1 samples, 0.40%)</title><rect x="602" y="228" width="5" height="15" fill="rgb(206,175,31)"/><text x="605.00" y="238.50"></text></g><g><title>_find_array_method (ufunc_object.c:174) (1 samples, 0.40%)</title><rect x="602" y="244" width="5" height="15" fill="rgb(221,132,36)"/><text x="605.00" y="254.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1411) (1 samples, 0.40%)</title><rect x="607" y="196" width="4" height="15" fill="rgb(247,126,3)"/><text x="610.00" y="206.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1415) (1 samples, 0.40%)</title><rect x="611" y="196" width="5" height="15" fill="rgb(226,212,44)"/><text x="614.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1415) (1 samples, 0.40%)</title><rect x="611" y="212" width="5" height="15" fill="rgb(252,1,25)"/><text x="614.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.40%)</title><rect x="616" y="228" width="5" height="15" fill="rgb(251,74,53)"/><text x="619.00" y="238.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:642) (82 samples, 32.67%)</title><rect x="249" y="164" width="386" height="15" fill="rgb(214,214,52)"/><text x="252.00" y="174.50">kneighbors (sklearn/neighbors/_base.py:642)</text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py:1602) (6 samples, 2.39%)</title><rect x="607" y="180" width="28" height="15" fill="rgb(219,228,47)"/><text x="610.00" y="190.50">p..</text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py:1419) (4 samples, 1.59%)</title><rect x="616" y="196" width="19" height="15" fill="rgb(254,124,16)"/><text x="619.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py:1419) (4 samples, 1.59%)</title><rect x="616" y="212" width="19" height="15" fill="rgb(226,87,28)"/><text x="619.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (3 samples, 1.20%)</title><rect x="621" y="228" width="14" height="15" fill="rgb(220,136,38)"/><text x="624.00" y="238.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.40%)</title><rect x="630" y="244" width="5" height="15" fill="rgb(243,101,39)"/><text x="633.00" y="254.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.40%)</title><rect x="630" y="260" width="5" height="15" fill="rgb(248,226,2)"/><text x="633.00" y="270.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:668) (1 samples, 0.40%)</title><rect x="635" y="164" width="4" height="15" fill="rgb(232,36,7)"/><text x="638.00" y="174.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py:670) (2 samples, 0.80%)</title><rect x="639" y="164" width="10" height="15" fill="rgb(211,96,29)"/><text x="642.00" y="174.50"></text></g><g><title>0x7f9fac8bd1ef (libc-2.29.so) (1 samples, 0.40%)</title><rect x="644" y="180" width="5" height="15" fill="rgb(229,132,36)"/><text x="647.00" y="190.50"></text></g><g><title>vstack (&lt;__array_function__ internals&gt;:4) (1 samples, 0.40%)</title><rect x="649" y="180" width="5" height="15" fill="rgb(208,67,48)"/><text x="652.00" y="190.50"></text></g><g><title>vstack (numpy/core/shape_base.py:279) (1 samples, 0.40%)</title><rect x="654" y="212" width="4" height="15" fill="rgb(211,176,8)"/><text x="657.00" y="222.50"></text></g><g><title>atleast_2d (&lt;__array_function__ internals&gt;:6) (1 samples, 0.40%)</title><rect x="654" y="228" width="4" height="15" fill="rgb(205,40,26)"/><text x="657.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.40%)</title><rect x="654" y="244" width="4" height="15" fill="rgb(240,73,24)"/><text x="657.00" y="254.50"></text></g><g><title>atleast_2d (numpy/core/shape_base.py:129) (1 samples, 0.40%)</title><rect x="654" y="260" width="4" height="15" fill="rgb(210,145,51)"/><text x="657.00" y="270.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:410) (1 samples, 0.40%)</title><rect x="658" y="292" width="5" height="15" fill="rgb(206,227,25)"/><text x="661.00" y="302.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.40%)</title><rect x="658" y="308" width="5" height="15" fill="rgb(236,150,32)"/><text x="661.00" y="318.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:464) (3 samples, 1.20%)</title><rect x="663" y="292" width="14" height="15" fill="rgb(237,217,45)"/><text x="666.00" y="302.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1855) (3 samples, 1.20%)</title><rect x="663" y="308" width="14" height="15" fill="rgb(252,88,4)"/><text x="666.00" y="318.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (3 samples, 1.20%)</title><rect x="663" y="324" width="14" height="15" fill="rgb(209,155,36)"/><text x="666.00" y="334.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:174) (113 samples, 45.02%)</title><rect x="151" y="148" width="531" height="15" fill="rgb(248,181,52)"/><text x="154.00" y="158.50">predict (sklearn/neighbors/_regression.py:174)</text></g><g><title>kneighbors (sklearn/neighbors/_base.py:671) (7 samples, 2.79%)</title><rect x="649" y="164" width="33" height="15" fill="rgb(223,159,29)"/><text x="652.00" y="174.50">kn..</text></g><g><title>vstack (&lt;__array_function__ internals&gt;:6) (6 samples, 2.39%)</title><rect x="654" y="180" width="28" height="15" fill="rgb(250,118,2)"/><text x="657.00" y="190.50">v..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.39%)</title><rect x="654" y="196" width="28" height="15" fill="rgb(221,226,32)"/><text x="657.00" y="206.50">a..</text></g><g><title>vstack (numpy/core/shape_base.py:282) (5 samples, 1.99%)</title><rect x="658" y="212" width="24" height="15" fill="rgb(234,41,39)"/><text x="661.00" y="222.50">v..</text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:6) (5 samples, 1.99%)</title><rect x="658" y="228" width="24" height="15" fill="rgb(215,195,46)"/><text x="661.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.99%)</title><rect x="658" y="244" width="24" height="15" fill="rgb(228,58,18)"/><text x="661.00" y="254.50">a..</text></g><g><title>array_concatenate (multiarraymodule.c:2198) (5 samples, 1.99%)</title><rect x="658" y="260" width="24" height="15" fill="rgb(220,79,1)"/><text x="661.00" y="270.50">a..</text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c:671) (5 samples, 1.99%)</title><rect x="658" y="276" width="24" height="15" fill="rgb(219,33,35)"/><text x="661.00" y="286.50">P..</text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c:501) (1 samples, 0.40%)</title><rect x="677" y="292" width="5" height="15" fill="rgb(253,212,41)"/><text x="680.00" y="302.50"></text></g><g><title>PyArray_View (convert.c:597) (1 samples, 0.40%)</title><rect x="677" y="308" width="5" height="15" fill="rgb(215,107,9)"/><text x="680.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.40%)</title><rect x="677" y="324" width="5" height="15" fill="rgb(229,186,11)"/><text x="680.00" y="334.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.80%)</title><rect x="682" y="164" width="9" height="15" fill="rgb(212,120,17)"/><text x="685.00" y="174.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.40%)</title><rect x="686" y="180" width="5" height="15" fill="rgb(224,47,42)"/><text x="689.00" y="190.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.40%)</title><rect x="686" y="196" width="5" height="15" fill="rgb(207,134,51)"/><text x="689.00" y="206.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.40%)</title><rect x="686" y="212" width="5" height="15" fill="rgb(206,160,2)"/><text x="689.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.40%)</title><rect x="686" y="228" width="5" height="15" fill="rgb(230,205,36)"/><text x="689.00" y="238.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py:180) (3 samples, 1.20%)</title><rect x="682" y="148" width="14" height="15" fill="rgb(205,133,5)"/><text x="685.00" y="158.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.40%)</title><rect x="691" y="164" width="5" height="15" fill="rgb(243,16,48)"/><text x="694.00" y="174.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.40%)</title><rect x="691" y="180" width="5" height="15" fill="rgb(237,220,19)"/><text x="694.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.40%)</title><rect x="691" y="196" width="5" height="15" fill="rgb(223,180,1)"/><text x="694.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.40%)</title><rect x="691" y="212" width="5" height="15" fill="rgb(253,97,7)"/><text x="694.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c:1770) (1 samples, 0.40%)</title><rect x="691" y="228" width="5" height="15" fill="rgb(221,4,11)"/><text x="694.00" y="238.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3246) (1 samples, 0.40%)</title><rect x="696" y="196" width="5" height="15" fill="rgb(244,142,40)"/><text x="699.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py:138) (1 samples, 0.40%)</title><rect x="701" y="212" width="4" height="15" fill="rgb(247,79,35)"/><text x="704.00" y="222.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py:57) (1 samples, 0.40%)</title><rect x="701" y="228" width="4" height="15" fill="rgb(230,54,25)"/><text x="704.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:145) (1 samples, 0.40%)</title><rect x="705" y="212" width="5" height="15" fill="rgb(236,137,30)"/><text x="708.00" y="222.50"></text></g><g><title>_mean (numpy/core/_methods.py:146) (1 samples, 0.40%)</title><rect x="710" y="212" width="5" height="15" fill="rgb(223,21,2)"/><text x="713.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.40%)</title><rect x="710" y="228" width="5" height="15" fill="rgb(228,184,43)"/><text x="713.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1476) (1 samples, 0.40%)</title><rect x="710" y="244" width="5" height="15" fill="rgb(207,25,16)"/><text x="713.00" y="254.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.40%)</title><rect x="715" y="276" width="4" height="15" fill="rgb(211,131,47)"/><text x="718.00" y="286.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.40%)</title><rect x="715" y="292" width="4" height="15" fill="rgb(228,56,42)"/><text x="718.00" y="302.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.40%)</title><rect x="715" y="308" width="4" height="15" fill="rgb(250,172,42)"/><text x="718.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.40%)</title><rect x="715" y="324" width="4" height="15" fill="rgb(232,168,44)"/><text x="718.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.40%)</title><rect x="715" y="340" width="4" height="15" fill="rgb(221,15,16)"/><text x="718.00" y="350.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.40%)</title><rect x="715" y="356" width="4" height="15" fill="rgb(209,15,18)"/><text x="718.00" y="366.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.40%)</title><rect x="715" y="372" width="4" height="15" fill="rgb(215,10,33)"/><text x="718.00" y="382.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.40%)</title><rect x="715" y="388" width="4" height="15" fill="rgb(249,82,54)"/><text x="718.00" y="398.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (3 samples, 1.20%)</title><rect x="715" y="212" width="14" height="15" fill="rgb(210,175,32)"/><text x="718.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.20%)</title><rect x="715" y="228" width="14" height="15" fill="rgb(219,184,17)"/><text x="718.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 1.20%)</title><rect x="715" y="244" width="14" height="15" fill="rgb(217,193,42)"/><text x="718.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 1.20%)</title><rect x="715" y="260" width="14" height="15" fill="rgb(242,93,31)"/><text x="718.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.80%)</title><rect x="719" y="276" width="10" height="15" fill="rgb(224,139,5)"/><text x="722.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:319) (2 samples, 0.80%)</title><rect x="719" y="292" width="10" height="15" fill="rgb(231,189,13)"/><text x="722.00" y="302.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c:2278) (1 samples, 0.40%)</title><rect x="724" y="308" width="5" height="15" fill="rgb(223,171,36)"/><text x="727.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.40%)</title><rect x="729" y="244" width="4" height="15" fill="rgb(207,108,40)"/><text x="732.00" y="254.50"></text></g><g><title>PyUFunc_TrueDivisionTypeResolver (ufunc_type_resolution.c:1318) (1 samples, 0.40%)</title><rect x="729" y="260" width="4" height="15" fill="rgb(252,112,44)"/><text x="732.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.40%)</title><rect x="733" y="260" width="5" height="15" fill="rgb(221,156,22)"/><text x="736.00" y="270.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.40%)</title><rect x="733" y="276" width="5" height="15" fill="rgb(231,27,11)"/><text x="736.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:54) (144 samples, 57.37%)</title><rect x="66" y="52" width="677" height="15" fill="rgb(217,128,39)"/><text x="69.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_floa..</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:53) (144 samples, 57.37%)</title><rect x="66" y="68" width="677" height="15" fill="rgb(211,103,6)"/><text x="69.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_f..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:37) (144 samples, 57.37%)</title><rect x="66" y="84" width="677" height="15" fill="rgb(206,120,28)"/><text x="69.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:31) (144 samples, 57.37%)</title><rect x="66" y="100" width="677" height="15" fill="rgb(242,125,35)"/><text x="69.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (143 samples, 56.97%)</title><rect x="71" y="116" width="672" height="15" fill="rgb(240,42,37)"/><text x="74.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (141 samples, 56.18%)</title><rect x="80" y="132" width="663" height="15" fill="rgb(253,3,4)"/><text x="83.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neighbors/_regression.py:183) (10 samples, 3.98%)</title><rect x="696" y="148" width="47" height="15" fill="rgb(245,122,18)"/><text x="699.00" y="158.50">pred..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (10 samples, 3.98%)</title><rect x="696" y="164" width="47" height="15" fill="rgb(243,27,20)"/><text x="699.00" y="174.50">mean..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (10 samples, 3.98%)</title><rect x="696" y="180" width="47" height="15" fill="rgb(251,50,26)"/><text x="699.00" y="190.50">arra..</text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (9 samples, 3.59%)</title><rect x="701" y="196" width="42" height="15" fill="rgb(210,196,13)"/><text x="704.00" y="206.50">mea..</text></g><g><title>_mean (numpy/core/_methods.py:154) (3 samples, 1.20%)</title><rect x="729" y="212" width="14" height="15" fill="rgb(221,44,20)"/><text x="732.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (3 samples, 1.20%)</title><rect x="729" y="228" width="14" height="15" fill="rgb(209,27,13)"/><text x="732.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.80%)</title><rect x="733" y="244" width="10" height="15" fill="rgb(242,128,53)"/><text x="736.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.40%)</title><rect x="738" y="260" width="5" height="15" fill="rgb(243,62,50)"/><text x="741.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.40%)</title><rect x="738" y="276" width="5" height="15" fill="rgb(210,106,37)"/><text x="741.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.40%)</title><rect x="738" y="292" width="5" height="15" fill="rgb(232,180,29)"/><text x="741.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2543) (1 samples, 0.40%)</title><rect x="738" y="308" width="5" height="15" fill="rgb(217,182,31)"/><text x="741.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 1.99%)</title><rect x="748" y="180" width="23" height="15" fill="rgb(211,20,42)"/><text x="751.00" y="190.50">r..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1696) (1 samples, 0.40%)</title><rect x="809" y="276" width="4" height="15" fill="rgb(235,211,36)"/><text x="812.00" y="286.50"></text></g><g><title>PyArray_FromArrayAttr (ctors.c:2611) (1 samples, 0.40%)</title><rect x="809" y="292" width="4" height="15" fill="rgb(209,19,13)"/><text x="812.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.40%)</title><rect x="813" y="276" width="5" height="15" fill="rgb(233,50,14)"/><text x="816.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.40%)</title><rect x="813" y="292" width="5" height="15" fill="rgb(246,75,36)"/><text x="816.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:429) (1 samples, 0.40%)</title><rect x="813" y="308" width="5" height="15" fill="rgb(233,130,11)"/><text x="816.00" y="318.50"></text></g><g><title>array_subscript (mapping.c:1539) (3 samples, 1.20%)</title><rect x="809" y="228" width="14" height="15" fill="rgb(215,44,6)"/><text x="812.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (3 samples, 1.20%)</title><rect x="809" y="244" width="14" height="15" fill="rgb(229,22,49)"/><text x="812.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (3 samples, 1.20%)</title><rect x="809" y="260" width="14" height="15" fill="rgb(227,175,37)"/><text x="812.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.40%)</title><rect x="818" y="276" width="5" height="15" fill="rgb(207,158,8)"/><text x="821.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:870) (1 samples, 0.40%)</title><rect x="818" y="292" width="5" height="15" fill="rgb(245,155,32)"/><text x="821.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:693) (1 samples, 0.40%)</title><rect x="818" y="308" width="5" height="15" fill="rgb(240,54,0)"/><text x="821.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2823) (1 samples, 0.40%)</title><rect x="823" y="244" width="5" height="15" fill="rgb(229,5,21)"/><text x="826.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.40%)</title><rect x="823" y="260" width="5" height="15" fill="rgb(239,87,36)"/><text x="826.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.40%)</title><rect x="823" y="276" width="5" height="15" fill="rgb(223,70,21)"/><text x="826.00" y="286.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1218) (1 samples, 0.40%)</title><rect x="823" y="292" width="5" height="15" fill="rgb(230,8,7)"/><text x="826.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.80%)</title><rect x="823" y="228" width="9" height="15" fill="rgb(205,167,39)"/><text x="826.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2839) (1 samples, 0.40%)</title><rect x="828" y="244" width="4" height="15" fill="rgb(211,50,19)"/><text x="831.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:647) (1 samples, 0.40%)</title><rect x="828" y="260" width="4" height="15" fill="rgb(239,15,49)"/><text x="831.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.40%)</title><rect x="832" y="228" width="5" height="15" fill="rgb(206,63,49)"/><text x="835.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1712) (1 samples, 0.40%)</title><rect x="837" y="228" width="5" height="15" fill="rgb(252,204,32)"/><text x="840.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.40%)</title><rect x="837" y="244" width="5" height="15" fill="rgb(206,98,15)"/><text x="840.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.40%)</title><rect x="837" y="260" width="5" height="15" fill="rgb(218,32,38)"/><text x="840.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.40%)</title><rect x="837" y="276" width="5" height="15" fill="rgb(214,13,27)"/><text x="840.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (8 samples, 3.19%)</title><rect x="809" y="212" width="37" height="15" fill="rgb(217,30,6)"/><text x="812.00" y="222.50">_ru..</text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.40%)</title><rect x="842" y="228" width="4" height="15" fill="rgb(205,74,39)"/><text x="845.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:537) (1 samples, 0.40%)</title><rect x="842" y="244" width="4" height="15" fill="rgb(212,191,42)"/><text x="845.00" y="254.50"></text></g><g><title>npy_free_cache (alloc.c:147) (1 samples, 0.40%)</title><rect x="842" y="260" width="4" height="15" fill="rgb(215,74,11)"/><text x="845.00" y="270.50"></text></g><g><title>_npy_free_cache (alloc.c:107) (1 samples, 0.40%)</title><rect x="842" y="276" width="4" height="15" fill="rgb(253,207,32)"/><text x="845.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (1 samples, 0.40%)</title><rect x="846" y="212" width="5" height="15" fill="rgb(212,7,9)"/><text x="849.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (1 samples, 0.40%)</title><rect x="846" y="228" width="5" height="15" fill="rgb(224,93,49)"/><text x="849.00" y="238.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.40%)</title><rect x="846" y="244" width="5" height="15" fill="rgb(238,209,26)"/><text x="849.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.40%)</title><rect x="846" y="260" width="5" height="15" fill="rgb(205,140,34)"/><text x="849.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.40%)</title><rect x="846" y="276" width="5" height="15" fill="rgb(213,125,9)"/><text x="849.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.40%)</title><rect x="846" y="292" width="5" height="15" fill="rgb(238,131,35)"/><text x="849.00" y="302.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:28) (2 samples, 0.80%)</title><rect x="851" y="244" width="9" height="15" fill="rgb(213,82,8)"/><text x="854.00" y="254.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (2 samples, 0.80%)</title><rect x="851" y="260" width="9" height="15" fill="rgb(253,217,15)"/><text x="854.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.80%)</title><rect x="851" y="276" width="9" height="15" fill="rgb(206,227,35)"/><text x="854.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (2 samples, 0.80%)</title><rect x="851" y="292" width="9" height="15" fill="rgb(253,2,3)"/><text x="854.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.40%)</title><rect x="856" y="308" width="4" height="15" fill="rgb(226,14,8)"/><text x="859.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (1 samples, 0.40%)</title><rect x="856" y="324" width="4" height="15" fill="rgb(210,57,6)"/><text x="859.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (1 samples, 0.40%)</title><rect x="856" y="340" width="4" height="15" fill="rgb(227,132,49)"/><text x="859.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (1 samples, 0.40%)</title><rect x="856" y="356" width="4" height="15" fill="rgb(234,93,14)"/><text x="859.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:322) (1 samples, 0.40%)</title><rect x="856" y="372" width="4" height="15" fill="rgb(232,10,30)"/><text x="859.00" y="382.50"></text></g><g><title>adumb_select_float (selection.c.src:258) (1 samples, 0.40%)</title><rect x="856" y="388" width="4" height="15" fill="rgb(235,223,54)"/><text x="859.00" y="398.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.40%)</title><rect x="856" y="404" width="4" height="15" fill="rgb(210,107,50)"/><text x="859.00" y="414.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:29) (1 samples, 0.40%)</title><rect x="860" y="244" width="5" height="15" fill="rgb(253,207,46)"/><text x="863.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.40%)</title><rect x="860" y="260" width="5" height="15" fill="rgb(231,86,26)"/><text x="863.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.40%)</title><rect x="875" y="308" width="4" height="15" fill="rgb(244,138,0)"/><text x="878.00" y="318.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (3 samples, 1.20%)</title><rect x="870" y="260" width="14" height="15" fill="rgb(234,94,22)"/><text x="873.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.80%)</title><rect x="875" y="276" width="9" height="15" fill="rgb(214,166,16)"/><text x="878.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (2 samples, 0.80%)</title><rect x="875" y="292" width="9" height="15" fill="rgb(230,90,15)"/><text x="878.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.40%)</title><rect x="879" y="308" width="5" height="15" fill="rgb(208,163,38)"/><text x="882.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.40%)</title><rect x="879" y="324" width="5" height="15" fill="rgb(236,9,21)"/><text x="882.00" y="334.50"></text></g><g><title>0x7f9fac8b2734 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="879" y="340" width="5" height="15" fill="rgb(210,46,1)"/><text x="882.00" y="350.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (8 samples, 3.19%)</title><rect x="851" y="228" width="38" height="15" fill="rgb(224,147,3)"/><text x="854.00" y="238.50">_co..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:32) (5 samples, 1.99%)</title><rect x="865" y="244" width="24" height="15" fill="rgb(238,161,17)"/><text x="868.00" y="254.50">t..</text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.40%)</title><rect x="884" y="260" width="5" height="15" fill="rgb(221,30,43)"/><text x="887.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:398) (1 samples, 0.40%)</title><rect x="884" y="276" width="5" height="15" fill="rgb(223,122,4)"/><text x="887.00" y="286.50"></text></g><g><title>unpack_indices (mapping.c:225) (1 samples, 0.40%)</title><rect x="884" y="292" width="5" height="15" fill="rgb(205,92,2)"/><text x="887.00" y="302.50"></text></g><g><title>unpack_tuple (mapping.c:170) (1 samples, 0.40%)</title><rect x="884" y="308" width="5" height="15" fill="rgb(233,101,45)"/><text x="887.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (19 samples, 7.57%)</title><rect x="804" y="196" width="89" height="15" fill="rgb(241,49,46)"/><text x="807.00" y="206.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (9 samples, 3.59%)</title><rect x="851" y="212" width="42" height="15" fill="rgb(229,122,3)"/><text x="854.00" y="222.50">_ru..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.40%)</title><rect x="889" y="228" width="4" height="15" fill="rgb(228,108,28)"/><text x="892.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.40%)</title><rect x="889" y="244" width="4" height="15" fill="rgb(218,140,25)"/><text x="892.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.40%)</title><rect x="889" y="260" width="4" height="15" fill="rgb(244,195,41)"/><text x="892.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.40%)</title><rect x="889" y="276" width="4" height="15" fill="rgb(227,68,37)"/><text x="892.00" y="286.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.40%)</title><rect x="889" y="292" width="4" height="15" fill="rgb(212,210,14)"/><text x="892.00" y="302.50"></text></g><g><title>gentype_generic_method (scalartypes.c.src:183) (1 samples, 0.40%)</title><rect x="893" y="228" width="5" height="15" fill="rgb(207,48,33)"/><text x="896.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.40%)</title><rect x="907" y="276" width="5" height="15" fill="rgb(208,177,15)"/><text x="910.00" y="286.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:75) (1 samples, 0.40%)</title><rect x="907" y="292" width="5" height="15" fill="rgb(207,143,19)"/><text x="910.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4520) (1 samples, 0.40%)</title><rect x="912" y="308" width="5" height="15" fill="rgb(225,185,18)"/><text x="915.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.40%)</title><rect x="912" y="324" width="5" height="15" fill="rgb(226,95,7)"/><text x="915.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.40%)</title><rect x="912" y="340" width="5" height="15" fill="rgb(229,214,37)"/><text x="915.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.40%)</title><rect x="917" y="356" width="5" height="15" fill="rgb(248,185,16)"/><text x="920.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1524) (1 samples, 0.40%)</title><rect x="917" y="372" width="5" height="15" fill="rgb(237,117,40)"/><text x="920.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:24) (7 samples, 2.79%)</title><rect x="893" y="212" width="33" height="15" fill="rgb(230,15,16)"/><text x="896.00" y="222.50">_r..</text></g><g><title>prod (&lt;__array_function__ internals&gt;:6) (6 samples, 2.39%)</title><rect x="898" y="228" width="28" height="15" fill="rgb(212,52,52)"/><text x="901.00" y="238.50">p..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 2.39%)</title><rect x="898" y="244" width="28" height="15" fill="rgb(209,177,38)"/><text x="901.00" y="254.50">a..</text></g><g><title>prod (numpy/core/fromnumeric.py:2911) (6 samples, 2.39%)</title><rect x="898" y="260" width="28" height="15" fill="rgb(238,23,38)"/><text x="901.00" y="270.50">p..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.20%)</title><rect x="912" y="276" width="14" height="15" fill="rgb(243,14,53)"/><text x="915.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.20%)</title><rect x="912" y="292" width="14" height="15" fill="rgb(211,181,14)"/><text x="915.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.80%)</title><rect x="917" y="308" width="9" height="15" fill="rgb(238,122,39)"/><text x="920.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.80%)</title><rect x="917" y="324" width="9" height="15" fill="rgb(217,25,47)"/><text x="920.00" y="334.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (2 samples, 0.80%)</title><rect x="917" y="340" width="9" height="15" fill="rgb(230,65,5)"/><text x="920.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.40%)</title><rect x="922" y="356" width="4" height="15" fill="rgb(234,185,27)"/><text x="925.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2558) (1 samples, 0.40%)</title><rect x="922" y="372" width="4" height="15" fill="rgb(248,226,43)"/><text x="925.00" y="382.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (8 samples, 3.19%)</title><rect x="893" y="196" width="38" height="15" fill="rgb(220,98,5)"/><text x="896.00" y="206.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py:25) (1 samples, 0.40%)</title><rect x="926" y="212" width="5" height="15" fill="rgb(243,200,11)"/><text x="929.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.40%)</title><rect x="926" y="228" width="5" height="15" fill="rgb(207,109,22)"/><text x="929.00" y="238.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.40%)</title><rect x="926" y="244" width="5" height="15" fill="rgb(245,170,15)"/><text x="929.00" y="254.50"></text></g><g><title>0x7f9fac8b2730 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="926" y="260" width="5" height="15" fill="rgb(245,23,53)"/><text x="929.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:27) (1 samples, 0.40%)</title><rect x="936" y="228" width="4" height="15" fill="rgb(211,23,43)"/><text x="939.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:135) (1 samples, 0.40%)</title><rect x="954" y="292" width="5" height="15" fill="rgb(208,22,9)"/><text x="957.00" y="302.50"></text></g><g><title>asanyarray (numpy/core/_asarray.py:138) (1 samples, 0.40%)</title><rect x="954" y="308" width="5" height="15" fill="rgb(234,210,39)"/><text x="957.00" y="318.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1618) (1 samples, 0.40%)</title><rect x="954" y="324" width="5" height="15" fill="rgb(237,116,11)"/><text x="957.00" y="334.50"></text></g><g><title>_mean (numpy/core/_methods.py:151) (1 samples, 0.40%)</title><rect x="959" y="292" width="5" height="15" fill="rgb(223,196,4)"/><text x="962.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.40%)</title><rect x="959" y="308" width="5" height="15" fill="rgb(231,188,31)"/><text x="962.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.40%)</title><rect x="959" y="324" width="5" height="15" fill="rgb(236,18,3)"/><text x="962.00" y="334.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1358) (1 samples, 0.40%)</title><rect x="959" y="340" width="5" height="15" fill="rgb(218,4,50)"/><text x="962.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.40%)</title><rect x="964" y="324" width="5" height="15" fill="rgb(237,127,1)"/><text x="967.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.40%)</title><rect x="964" y="340" width="5" height="15" fill="rgb(221,16,1)"/><text x="967.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (9 samples, 3.59%)</title><rect x="931" y="196" width="42" height="15" fill="rgb(216,43,46)"/><text x="934.00" y="206.50">run..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (9 samples, 3.59%)</title><rect x="931" y="212" width="42" height="15" fill="rgb(211,203,18)"/><text x="934.00" y="222.50">run..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py:29) (7 samples, 2.79%)</title><rect x="940" y="228" width="33" height="15" fill="rgb(238,138,23)"/><text x="943.00" y="238.50">_r..</text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (5 samples, 1.99%)</title><rect x="950" y="244" width="23" height="15" fill="rgb(230,142,4)"/><text x="953.00" y="254.50">m..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.99%)</title><rect x="950" y="260" width="23" height="15" fill="rgb(240,13,21)"/><text x="953.00" y="270.50">a..</text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (5 samples, 1.99%)</title><rect x="950" y="276" width="23" height="15" fill="rgb(250,167,25)"/><text x="953.00" y="286.50">m..</text></g><g><title>_mean (numpy/core/_methods.py:154) (2 samples, 0.80%)</title><rect x="964" y="292" width="9" height="15" fill="rgb(241,82,53)"/><text x="967.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.80%)</title><rect x="964" y="308" width="9" height="15" fill="rgb(236,175,54)"/><text x="967.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.40%)</title><rect x="969" y="324" width="4" height="15" fill="rgb(249,110,51)"/><text x="972.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.40%)</title><rect x="969" y="340" width="4" height="15" fill="rgb(225,46,10)"/><text x="972.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.40%)</title><rect x="969" y="356" width="4" height="15" fill="rgb(244,23,45)"/><text x="972.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.40%)</title><rect x="969" y="372" width="4" height="15" fill="rgb(244,223,1)"/><text x="972.00" y="382.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2711) (2 samples, 0.80%)</title><rect x="978" y="244" width="9" height="15" fill="rgb(238,210,20)"/><text x="981.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.80%)</title><rect x="978" y="260" width="9" height="15" fill="rgb(219,87,11)"/><text x="981.00" y="270.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 0.80%)</title><rect x="978" y="276" width="9" height="15" fill="rgb(238,43,22)"/><text x="981.00" y="286.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c:326) (1 samples, 0.40%)</title><rect x="983" y="292" width="4" height="15" fill="rgb(251,57,49)"/><text x="986.00" y="302.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2727) (1 samples, 0.40%)</title><rect x="987" y="244" width="5" height="15" fill="rgb(231,221,13)"/><text x="990.00" y="254.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2729) (1 samples, 0.40%)</title><rect x="992" y="244" width="5" height="15" fill="rgb(244,221,45)"/><text x="995.00" y="254.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.40%)</title><rect x="992" y="260" width="5" height="15" fill="rgb(247,5,53)"/><text x="995.00" y="270.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.40%)</title><rect x="992" y="276" width="5" height="15" fill="rgb(212,196,8)"/><text x="995.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.40%)</title><rect x="992" y="292" width="5" height="15" fill="rgb(205,138,7)"/><text x="995.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4417) (1 samples, 0.40%)</title><rect x="992" y="308" width="5" height="15" fill="rgb(244,212,40)"/><text x="995.00" y="318.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2740) (2 samples, 0.80%)</title><rect x="997" y="244" width="9" height="15" fill="rgb(239,59,17)"/><text x="1000.00" y="254.50"></text></g><g><title>0x7f9fac97b73f (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1001" y="260" width="5" height="15" fill="rgb(226,174,17)"/><text x="1004.00" y="270.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2756) (1 samples, 0.40%)</title><rect x="1006" y="244" width="5" height="15" fill="rgb(240,161,25)"/><text x="1009.00" y="254.50"></text></g><g><title>callable (scipy/_lib/six.py:131) (1 samples, 0.40%)</title><rect x="1006" y="260" width="5" height="15" fill="rgb(229,226,38)"/><text x="1009.00" y="270.50"></text></g><g><title>_select_weighted_metric (scipy/spatial/distance.py:1714) (1 samples, 0.40%)</title><rect x="1016" y="260" width="4" height="15" fill="rgb(244,222,6)"/><text x="1019.00" y="270.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2771) (4 samples, 1.59%)</title><rect x="1011" y="244" width="19" height="15" fill="rgb(241,69,50)"/><text x="1014.00" y="254.50"></text></g><g><title>_select_weighted_metric (scipy/spatial/distance.py:1720) (2 samples, 0.80%)</title><rect x="1020" y="260" width="10" height="15" fill="rgb(251,56,39)"/><text x="1023.00" y="270.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.80%)</title><rect x="1020" y="276" width="10" height="15" fill="rgb(229,49,12)"/><text x="1023.00" y="286.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:250) (1 samples, 0.40%)</title><rect x="1030" y="260" width="4" height="15" fill="rgb(216,105,35)"/><text x="1033.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (1 samples, 0.40%)</title><rect x="1030" y="276" width="4" height="15" fill="rgb(245,22,45)"/><text x="1033.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (1 samples, 0.40%)</title><rect x="1030" y="292" width="4" height="15" fill="rgb(208,40,50)"/><text x="1033.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.40%)</title><rect x="1030" y="308" width="4" height="15" fill="rgb(245,75,13)"/><text x="1033.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.40%)</title><rect x="1030" y="324" width="4" height="15" fill="rgb(215,148,44)"/><text x="1033.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.40%)</title><rect x="1030" y="340" width="4" height="15" fill="rgb(239,106,17)"/><text x="1033.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.40%)</title><rect x="1030" y="356" width="4" height="15" fill="rgb(238,68,25)"/><text x="1033.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.40%)</title><rect x="1030" y="372" width="4" height="15" fill="rgb(208,168,32)"/><text x="1033.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.40%)</title><rect x="1030" y="388" width="4" height="15" fill="rgb(223,216,49)"/><text x="1033.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.40%)</title><rect x="1034" y="308" width="5" height="15" fill="rgb(209,221,41)"/><text x="1037.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.40%)</title><rect x="1034" y="324" width="5" height="15" fill="rgb(235,24,33)"/><text x="1037.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1486) (1 samples, 0.40%)</title><rect x="1034" y="340" width="5" height="15" fill="rgb(247,215,36)"/><text x="1037.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1668) (1 samples, 0.40%)</title><rect x="1034" y="356" width="5" height="15" fill="rgb(251,93,53)"/><text x="1037.00" y="366.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2776) (3 samples, 1.20%)</title><rect x="1030" y="244" width="14" height="15" fill="rgb(233,139,23)"/><text x="1033.00" y="254.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py:251) (2 samples, 0.80%)</title><rect x="1034" y="260" width="10" height="15" fill="rgb(248,27,11)"/><text x="1037.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py:187) (2 samples, 0.80%)</title><rect x="1034" y="276" width="10" height="15" fill="rgb(253,175,29)"/><text x="1037.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py:179) (2 samples, 0.80%)</title><rect x="1034" y="292" width="10" height="15" fill="rgb(237,55,0)"/><text x="1037.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.40%)</title><rect x="1039" y="308" width="5" height="15" fill="rgb(236,102,42)"/><text x="1042.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.40%)</title><rect x="1039" y="324" width="5" height="15" fill="rgb(205,120,52)"/><text x="1042.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.40%)</title><rect x="1039" y="340" width="5" height="15" fill="rgb(243,127,11)"/><text x="1042.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c:2172) (1 samples, 0.40%)</title><rect x="1039" y="356" width="5" height="15" fill="rgb(221,116,6)"/><text x="1042.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.40%)</title><rect x="1039" y="372" width="5" height="15" fill="rgb(231,148,34)"/><text x="1042.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.40%)</title><rect x="1039" y="388" width="5" height="15" fill="rgb(234,179,19)"/><text x="1042.00" y="398.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (1 samples, 0.40%)</title><rect x="1039" y="404" width="5" height="15" fill="rgb(233,33,19)"/><text x="1042.00" y="414.50"></text></g><g><title>cdist (scipy/spatial/distance.py:2779) (1 samples, 0.40%)</title><rect x="1044" y="244" width="4" height="15" fill="rgb(220,56,38)"/><text x="1047.00" y="254.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.40%)</title><rect x="1044" y="260" width="4" height="15" fill="rgb(239,130,39)"/><text x="1047.00" y="270.50"></text></g><g><title>0x7f9fac97b401 (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1044" y="276" width="4" height="15" fill="rgb(223,63,34)"/><text x="1047.00" y="286.50"></text></g><g><title>0x7f9f89ac28f4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="1048" y="260" width="5" height="15" fill="rgb(242,60,6)"/><text x="1051.00" y="270.50"></text></g><g><title>0x7f9f89ac2968 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="1053" y="260" width="5" height="15" fill="rgb(219,64,11)"/><text x="1056.00" y="270.50"></text></g><g><title>0x7f9f89ac29f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="1058" y="260" width="5" height="15" fill="rgb(222,206,23)"/><text x="1061.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:27) (20 samples, 7.97%)</title><rect x="973" y="228" width="94" height="15" fill="rgb(215,150,52)"/><text x="976.00" y="238.50">_run (mlpro..</text></g><g><title>cdist (scipy/spatial/distance.py:2780) (4 samples, 1.59%)</title><rect x="1048" y="244" width="19" height="15" fill="rgb(239,36,21)"/><text x="1051.00" y="254.50"></text></g><g><title>0x7f9f89ac2a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.40%)</title><rect x="1063" y="260" width="4" height="15" fill="rgb(222,200,40)"/><text x="1066.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (65 samples, 25.90%)</title><rect x="771" y="180" width="306" height="15" fill="rgb(242,175,31)"/><text x="774.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (22 samples, 8.76%)</title><rect x="973" y="196" width="104" height="15" fill="rgb(226,39,11)"/><text x="976.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (22 samples, 8.76%)</title><rect x="973" y="212" width="104" height="15" fill="rgb(205,188,22)"/><text x="976.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py:29) (2 samples, 0.80%)</title><rect x="1067" y="228" width="10" height="15" fill="rgb(230,173,20)"/><text x="1070.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.40%)</title><rect x="1072" y="244" width="5" height="15" fill="rgb(219,158,38)"/><text x="1075.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.40%)</title><rect x="1072" y="260" width="5" height="15" fill="rgb(244,44,40)"/><text x="1075.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.40%)</title><rect x="1072" y="276" width="5" height="15" fill="rgb(221,175,9)"/><text x="1075.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.40%)</title><rect x="1072" y="292" width="5" height="15" fill="rgb(246,129,43)"/><text x="1075.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1072" y="308" width="5" height="15" fill="rgb(242,159,50)"/><text x="1075.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (4 samples, 1.59%)</title><rect x="1077" y="180" width="18" height="15" fill="rgb(231,111,36)"/><text x="1080.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (3 samples, 1.20%)</title><rect x="1095" y="180" width="15" height="15" fill="rgb(225,45,5)"/><text x="1098.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.80%)</title><rect x="1110" y="180" width="9" height="15" fill="rgb(229,170,4)"/><text x="1113.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:61) (81 samples, 32.27%)</title><rect x="743" y="52" width="381" height="15" fill="rgb(221,174,52)"/><text x="746.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_re..</text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:60) (81 samples, 32.27%)</title><rect x="743" y="68" width="381" height="15" fill="rgb(226,83,9)"/><text x="746.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:37) (81 samples, 32.27%)</title><rect x="743" y="84" width="381" height="15" fill="rgb(224,59,30)"/><text x="746.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:31) (81 samples, 32.27%)</title><rect x="743" y="100" width="381" height="15" fill="rgb(212,79,18)"/><text x="746.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (81 samples, 32.27%)</title><rect x="743" y="116" width="381" height="15" fill="rgb(252,111,49)"/><text x="746.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (81 samples, 32.27%)</title><rect x="743" y="132" width="381" height="15" fill="rgb(213,94,6)"/><text x="746.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (81 samples, 32.27%)</title><rect x="743" y="148" width="381" height="15" fill="rgb(247,128,19)"/><text x="746.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (81 samples, 32.27%)</title><rect x="743" y="164" width="381" height="15" fill="rgb(233,60,7)"/><text x="746.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (1 samples, 0.40%)</title><rect x="1119" y="180" width="5" height="15" fill="rgb(251,6,42)"/><text x="1122.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:129) (1 samples, 0.40%)</title><rect x="1128" y="196" width="5" height="15" fill="rgb(223,226,47)"/><text x="1131.00" y="206.50"></text></g><g><title>0x7f9f6c8cfff9 (?) (1 samples, 0.40%)</title><rect x="1138" y="212" width="4" height="15" fill="rgb(247,67,43)"/><text x="1141.00" y="222.50"></text></g><g><title>0x7f9f6c8caef6 (?) (1 samples, 0.40%)</title><rect x="1138" y="228" width="4" height="15" fill="rgb(228,53,11)"/><text x="1141.00" y="238.50"></text></g><g><title>0x7f9f6c8bf962 (?) (1 samples, 0.40%)</title><rect x="1138" y="244" width="4" height="15" fill="rgb(249,122,19)"/><text x="1141.00" y="254.50"></text></g><g><title>0x7f9f6c8f37a7 (?) (1 samples, 0.40%)</title><rect x="1138" y="260" width="4" height="15" fill="rgb(225,184,18)"/><text x="1141.00" y="270.50"></text></g><g><title>0x7f9f6c8f3379 (?) (1 samples, 0.40%)</title><rect x="1138" y="276" width="4" height="15" fill="rgb(221,165,35)"/><text x="1141.00" y="286.50"></text></g><g><title>0x7f9f6cd518b8 (?) (1 samples, 0.40%)</title><rect x="1138" y="292" width="4" height="15" fill="rgb(250,92,46)"/><text x="1141.00" y="302.50"></text></g><g><title>0x7f9f6cd4fc7f (?) (1 samples, 0.40%)</title><rect x="1138" y="308" width="4" height="15" fill="rgb(248,198,23)"/><text x="1141.00" y="318.50"></text></g><g><title>0x7f9f6cd62ceb (?) (1 samples, 0.40%)</title><rect x="1138" y="324" width="4" height="15" fill="rgb(221,184,5)"/><text x="1141.00" y="334.50"></text></g><g><title>0x7f9f6cd0163a (?) (1 samples, 0.40%)</title><rect x="1138" y="340" width="4" height="15" fill="rgb(227,190,51)"/><text x="1141.00" y="350.50"></text></g><g><title>0x7f9f6cd03360 (?) (1 samples, 0.40%)</title><rect x="1138" y="356" width="4" height="15" fill="rgb(221,78,15)"/><text x="1141.00" y="366.50"></text></g><g><title>0x7f9f6cd02aa2 (?) (1 samples, 0.40%)</title><rect x="1138" y="372" width="4" height="15" fill="rgb(236,66,48)"/><text x="1141.00" y="382.50"></text></g><g><title>onnxruntime::Tensor::Data&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1142" y="372" width="5" height="15" fill="rgb(249,60,36)"/><text x="1145.00" y="382.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1147" y="372" width="5" height="15" fill="rgb(242,60,52)"/><text x="1150.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1147" y="388" width="5" height="15" fill="rgb(205,137,20)"/><text x="1150.00" y="398.50"></text></g><g><title>onnxruntime::ReduceMean&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1142" y="340" width="15" height="15" fill="rgb(208,56,28)"/><text x="1145.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1142" y="356" width="15" height="15" fill="rgb(251,156,29)"/><text x="1145.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1152" y="372" width="5" height="15" fill="rgb(247,199,51)"/><text x="1155.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.40%)</title><rect x="1152" y="388" width="5" height="15" fill="rgb(207,32,52)"/><text x="1155.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.40%)</title><rect x="1152" y="404" width="5" height="15" fill="rgb(237,212,27)"/><text x="1155.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1157" y="340" width="4" height="15" fill="rgb(235,116,10)"/><text x="1160.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1157" y="356" width="4" height="15" fill="rgb(217,48,9)"/><text x="1160.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="1142" y="260" width="24" height="15" fill="rgb(241,178,53)"/><text x="1145.00" y="270.50">o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="1142" y="276" width="24" height="15" fill="rgb(212,130,36)"/><text x="1145.00" y="286.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="1142" y="292" width="24" height="15" fill="rgb(238,105,16)"/><text x="1145.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="1142" y="308" width="24" height="15" fill="rgb(249,162,36)"/><text x="1145.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.99%)</title><rect x="1142" y="324" width="24" height="15" fill="rgb(207,80,24)"/><text x="1145.00" y="334.50">o..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="340" width="5" height="15" fill="rgb(250,224,1)"/><text x="1164.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="356" width="5" height="15" fill="rgb(254,158,0)"/><text x="1164.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="372" width="5" height="15" fill="rgb(229,218,53)"/><text x="1164.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="388" width="5" height="15" fill="rgb(253,224,46)"/><text x="1164.00" y="398.50"></text></g><g><title>std::_Function_handler&lt;void (long, long), onnxruntime::contrib::CDistOneBlock&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; &gt;::_M_invoke (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1161" y="404" width="5" height="15" fill="rgb(234,48,17)"/><text x="1164.00" y="414.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1171" y="276" width="4" height="15" fill="rgb(251,228,1)"/><text x="1174.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1171" y="292" width="4" height="15" fill="rgb(235,74,27)"/><text x="1174.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1171" y="308" width="4" height="15" fill="rgb(247,154,10)"/><text x="1174.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.20%)</title><rect x="1166" y="260" width="14" height="15" fill="rgb(254,190,21)"/><text x="1169.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.40%)</title><rect x="1175" y="276" width="5" height="15" fill="rgb(210,60,20)"/><text x="1178.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.59%)</title><rect x="1142" y="244" width="43" height="15" fill="rgb(233,36,20)"/><text x="1145.00" y="254.50">onnx..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1180" y="260" width="5" height="15" fill="rgb(237,205,7)"/><text x="1183.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.40%)</title><rect x="1180" y="276" width="5" height="15" fill="rgb(213,34,29)"/><text x="1183.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1006) (1 samples, 0.40%)</title><rect x="1180" y="292" width="5" height="15" fill="rgb(243,21,28)"/><text x="1183.00" y="302.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src:33) (1 samples, 0.40%)</title><rect x="1180" y="308" width="5" height="15" fill="rgb(227,125,3)"/><text x="1183.00" y="318.50"></text></g><g><title>all (251 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(217,211,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:68) (14 samples, 5.58%)</title><rect x="1124" y="52" width="66" height="15" fill="rgb(212,86,30)"/><text x="1127.00" y="62.50">&lt;module..</text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:67) (14 samples, 5.58%)</title><rect x="1124" y="68" width="66" height="15" fill="rgb(220,62,37)"/><text x="1127.00" y="78.50">profile..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:37) (14 samples, 5.58%)</title><rect x="1124" y="84" width="66" height="15" fill="rgb(212,153,35)"/><text x="1127.00" y="94.50">setup_p..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1_50_12_float_cdist.py:31) (14 samples, 5.58%)</title><rect x="1124" y="100" width="66" height="15" fill="rgb(217,43,27)"/><text x="1127.00" y="110.50">profile..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (14 samples, 5.58%)</title><rect x="1124" y="116" width="66" height="15" fill="rgb(228,227,23)"/><text x="1127.00" y="126.50">time_pr..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (13 samples, 5.18%)</title><rect x="1128" y="132" width="62" height="15" fill="rgb(233,34,40)"/><text x="1131.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (13 samples, 5.18%)</title><rect x="1128" y="148" width="62" height="15" fill="rgb(209,102,42)"/><text x="1131.00" y="158.50">run (m..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (13 samples, 5.18%)</title><rect x="1128" y="164" width="62" height="15" fill="rgb(243,227,6)"/><text x="1131.00" y="174.50">_run_w..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (13 samples, 5.18%)</title><rect x="1128" y="180" width="62" height="15" fill="rgb(250,88,21)"/><text x="1131.00" y="190.50">run (m..</text></g><g><title>run (onnxruntime/capi/session.py:136) (12 samples, 4.78%)</title><rect x="1133" y="196" width="57" height="15" fill="rgb(230,214,41)"/><text x="1136.00" y="206.50">run (o..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.98%)</title><rect x="1142" y="212" width="48" height="15" fill="rgb(206,48,31)"/><text x="1145.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.98%)</title><rect x="1142" y="228" width="48" height="15" fill="rgb(215,132,32)"/><text x="1145.00" y="238.50">void..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1185" y="244" width="5" height="15" fill="rgb(241,188,32)"/><text x="1188.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1185" y="260" width="5" height="15" fill="rgb(228,128,32)"/><text x="1188.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.40%)</title><rect x="1185" y="276" width="5" height="15" fill="rgb(241,121,34)"/><text x="1188.00" y="286.50"></text></g></g></svg>