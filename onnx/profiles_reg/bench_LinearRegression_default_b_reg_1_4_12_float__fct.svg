<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2022" onload="init(evt)" viewBox="0 0 1200 2022" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2022" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2005.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2005.00"> </text><g id="frames"><g><title>MemoizedZipManifests (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(234,168,27)"/><text x="13.00" y="846.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.31%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(231,53,47)"/><text x="13.00" y="862.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="13" y="1012" width="4" height="15" fill="rgb(245,209,35)"/><text x="16.00" y="1022.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="13" y="932" width="7" height="15" fill="rgb(254,167,37)"/><text x="16.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="13" y="948" width="7" height="15" fill="rgb(216,28,41)"/><text x="16.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="13" y="964" width="7" height="15" fill="rgb(212,222,34)"/><text x="16.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.61%)</title><rect x="13" y="980" width="7" height="15" fill="rgb(249,96,36)"/><text x="16.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.61%)</title><rect x="13" y="996" width="7" height="15" fill="rgb(231,164,16)"/><text x="16.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.31%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(219,87,12)"/><text x="20.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.31%)</title><rect x="17" y="1028" width="3" height="15" fill="rgb(212,85,3)"/><text x="20.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.31%)</title><rect x="17" y="1044" width="3" height="15" fill="rgb(210,134,42)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(209,53,14)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(244,213,28)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(238,28,10)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(238,77,6)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(233,26,9)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(238,44,25)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.53%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(210,139,13)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(228,49,5)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(233,147,26)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(212,6,1)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(243,17,20)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(248,188,16)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.53%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(241,98,33)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(219,8,51)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(223,49,28)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(249,184,31)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(231,29,1)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(239,156,5)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.53%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(223,102,25)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(218,40,27)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(250,88,38)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(211,61,36)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(214,1,19)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(253,72,28)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(223,204,27)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(222,173,25)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(214,128,35)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(235,71,43)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(222,185,4)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(212,15,23)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(235,229,31)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(222,167,37)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(224,160,33)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.53%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(253,97,29)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 1.22%)</title><rect x="13" y="836" width="15" height="15" fill="rgb(248,16,43)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 1.22%)</title><rect x="13" y="852" width="15" height="15" fill="rgb(221,36,47)"/><text x="16.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 1.22%)</title><rect x="13" y="868" width="15" height="15" fill="rgb(236,188,8)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 1.22%)</title><rect x="13" y="884" width="15" height="15" fill="rgb(221,160,29)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.22%)</title><rect x="13" y="900" width="15" height="15" fill="rgb(207,98,39)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.22%)</title><rect x="13" y="916" width="15" height="15" fill="rgb(245,196,27)"/><text x="16.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.61%)</title><rect x="20" y="932" width="8" height="15" fill="rgb(222,129,54)"/><text x="23.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.31%)</title><rect x="24" y="948" width="4" height="15" fill="rgb(207,155,14)"/><text x="27.00" y="958.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.31%)</title><rect x="24" y="964" width="4" height="15" fill="rgb(224,180,47)"/><text x="27.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="500" width="3" height="15" fill="rgb(231,47,0)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="516" width="3" height="15" fill="rgb(223,56,25)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="532" width="3" height="15" fill="rgb(244,170,7)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="548" width="3" height="15" fill="rgb(210,52,28)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="564" width="3" height="15" fill="rgb(253,71,14)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.31%)</title><rect x="28" y="580" width="3" height="15" fill="rgb(230,165,36)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="596" width="3" height="15" fill="rgb(215,43,31)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="612" width="3" height="15" fill="rgb(234,84,1)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="628" width="3" height="15" fill="rgb(221,206,54)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="644" width="3" height="15" fill="rgb(224,224,35)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="660" width="3" height="15" fill="rgb(233,60,29)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.31%)</title><rect x="28" y="676" width="3" height="15" fill="rgb(217,3,3)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="692" width="3" height="15" fill="rgb(229,28,21)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="708" width="3" height="15" fill="rgb(246,179,28)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="724" width="3" height="15" fill="rgb(220,166,31)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="740" width="3" height="15" fill="rgb(247,65,10)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="756" width="3" height="15" fill="rgb(236,37,40)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.31%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(240,160,36)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(230,81,25)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(220,55,25)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(224,161,14)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(205,120,42)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(242,93,35)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(219,136,10)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(215,161,20)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.31%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(248,99,20)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(240,229,27)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(231,45,39)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(212,209,19)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(249,74,47)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(211,217,53)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(250,46,32)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(243,100,18)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.31%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(231,228,50)"/><text x="31.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(238,161,7)"/><text x="31.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.31%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(252,62,28)"/><text x="31.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.31%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(220,116,39)"/><text x="31.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.31%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(216,14,32)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="196" width="25" height="15" fill="rgb(254,229,47)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="212" width="25" height="15" fill="rgb(248,15,2)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="228" width="25" height="15" fill="rgb(206,127,48)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="244" width="25" height="15" fill="rgb(247,161,35)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.14%)</title><rect x="10" y="260" width="25" height="15" fill="rgb(246,65,43)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="10" y="276" width="25" height="15" fill="rgb(212,58,8)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.61%)</title><rect x="28" y="292" width="7" height="15" fill="rgb(227,167,27)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="308" width="7" height="15" fill="rgb(211,21,49)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="324" width="7" height="15" fill="rgb(235,74,44)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="340" width="7" height="15" fill="rgb(223,70,2)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="356" width="7" height="15" fill="rgb(224,200,14)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="372" width="7" height="15" fill="rgb(214,120,19)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.61%)</title><rect x="28" y="388" width="7" height="15" fill="rgb(214,26,1)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="404" width="7" height="15" fill="rgb(211,30,37)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="420" width="7" height="15" fill="rgb(234,100,45)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="436" width="7" height="15" fill="rgb(224,45,36)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="28" y="452" width="7" height="15" fill="rgb(246,68,6)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="28" y="468" width="7" height="15" fill="rgb(212,73,2)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.61%)</title><rect x="28" y="484" width="7" height="15" fill="rgb(224,13,5)"/><text x="31.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="500" width="4" height="15" fill="rgb(216,109,42)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="516" width="4" height="15" fill="rgb(221,75,27)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="532" width="4" height="15" fill="rgb(251,148,28)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="548" width="4" height="15" fill="rgb(228,227,22)"/><text x="34.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="564" width="4" height="15" fill="rgb(206,182,40)"/><text x="34.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="580" width="4" height="15" fill="rgb(231,46,33)"/><text x="34.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="596" width="4" height="15" fill="rgb(231,89,49)"/><text x="34.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.31%)</title><rect x="31" y="612" width="4" height="15" fill="rgb(243,0,0)"/><text x="34.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="628" width="4" height="15" fill="rgb(243,163,8)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="644" width="4" height="15" fill="rgb(244,59,16)"/><text x="34.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="660" width="4" height="15" fill="rgb(237,68,47)"/><text x="34.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="676" width="4" height="15" fill="rgb(252,79,35)"/><text x="34.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="692" width="4" height="15" fill="rgb(242,8,37)"/><text x="34.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.31%)</title><rect x="31" y="708" width="4" height="15" fill="rgb(220,210,5)"/><text x="34.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="724" width="4" height="15" fill="rgb(213,28,28)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="740" width="4" height="15" fill="rgb(253,121,51)"/><text x="34.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="756" width="4" height="15" fill="rgb(218,177,49)"/><text x="34.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="772" width="4" height="15" fill="rgb(241,25,22)"/><text x="34.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="788" width="4" height="15" fill="rgb(252,135,42)"/><text x="34.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.31%)</title><rect x="31" y="804" width="4" height="15" fill="rgb(212,221,41)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="820" width="4" height="15" fill="rgb(218,221,19)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="836" width="4" height="15" fill="rgb(235,81,17)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="852" width="4" height="15" fill="rgb(222,167,20)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="31" y="868" width="4" height="15" fill="rgb(236,84,26)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="31" y="884" width="4" height="15" fill="rgb(249,130,21)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.31%)</title><rect x="31" y="900" width="4" height="15" fill="rgb(244,122,1)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.31%)</title><rect x="35" y="1204" width="3" height="15" fill="rgb(247,192,10)"/><text x="38.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1220" width="3" height="15" fill="rgb(215,173,2)"/><text x="38.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1236" width="3" height="15" fill="rgb(207,31,34)"/><text x="38.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1252" width="3" height="15" fill="rgb(206,81,19)"/><text x="38.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1268" width="3" height="15" fill="rgb(245,118,45)"/><text x="38.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1284" width="3" height="15" fill="rgb(222,160,0)"/><text x="38.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.31%)</title><rect x="35" y="1300" width="3" height="15" fill="rgb(206,39,28)"/><text x="38.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1316" width="3" height="15" fill="rgb(206,67,5)"/><text x="38.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1332" width="3" height="15" fill="rgb(253,118,28)"/><text x="38.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1348" width="3" height="15" fill="rgb(231,26,48)"/><text x="38.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1364" width="3" height="15" fill="rgb(214,19,38)"/><text x="38.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1380" width="3" height="15" fill="rgb(237,187,12)"/><text x="38.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.31%)</title><rect x="35" y="1396" width="3" height="15" fill="rgb(208,207,46)"/><text x="38.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1412" width="3" height="15" fill="rgb(217,0,37)"/><text x="38.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1428" width="3" height="15" fill="rgb(234,177,3)"/><text x="38.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1444" width="3" height="15" fill="rgb(231,29,39)"/><text x="38.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="35" y="1460" width="3" height="15" fill="rgb(207,183,0)"/><text x="38.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="35" y="1476" width="3" height="15" fill="rgb(234,6,31)"/><text x="38.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.31%)</title><rect x="35" y="1492" width="3" height="15" fill="rgb(234,55,7)"/><text x="38.00" y="1502.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.31%)</title><rect x="35" y="1508" width="3" height="15" fill="rgb(219,218,40)"/><text x="38.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.31%)</title><rect x="38" y="1204" width="4" height="15" fill="rgb(248,49,32)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="38" y="1220" width="4" height="15" fill="rgb(210,40,8)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="38" y="1236" width="4" height="15" fill="rgb(238,65,46)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="38" y="1252" width="4" height="15" fill="rgb(217,163,42)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="38" y="1268" width="4" height="15" fill="rgb(234,16,24)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="38" y="1284" width="4" height="15" fill="rgb(250,7,49)"/><text x="41.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="38" y="1300" width="4" height="15" fill="rgb(234,24,24)"/><text x="41.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.31%)</title><rect x="38" y="1316" width="4" height="15" fill="rgb(251,40,24)"/><text x="41.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.31%)</title><rect x="38" y="1332" width="4" height="15" fill="rgb(214,218,37)"/><text x="41.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.31%)</title><rect x="38" y="1348" width="4" height="15" fill="rgb(209,119,48)"/><text x="41.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.31%)</title><rect x="38" y="1364" width="4" height="15" fill="rgb(252,198,1)"/><text x="41.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.31%)</title><rect x="38" y="1380" width="4" height="15" fill="rgb(222,142,34)"/><text x="41.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.31%)</title><rect x="38" y="1396" width="4" height="15" fill="rgb(232,177,46)"/><text x="41.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.31%)</title><rect x="38" y="1412" width="4" height="15" fill="rgb(251,38,31)"/><text x="41.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.31%)</title><rect x="38" y="1428" width="4" height="15" fill="rgb(214,1,14)"/><text x="41.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="38" y="1444" width="4" height="15" fill="rgb(230,69,39)"/><text x="41.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.31%)</title><rect x="38" y="1460" width="4" height="15" fill="rgb(217,187,22)"/><text x="41.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="38" y="1476" width="4" height="15" fill="rgb(217,70,13)"/><text x="41.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="38" y="1492" width="4" height="15" fill="rgb(206,45,3)"/><text x="41.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="38" y="1508" width="4" height="15" fill="rgb(234,39,36)"/><text x="41.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.31%)</title><rect x="38" y="1524" width="4" height="15" fill="rgb(235,164,29)"/><text x="41.00" y="1534.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.31%)</title><rect x="38" y="1540" width="4" height="15" fill="rgb(214,214,14)"/><text x="41.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="484" width="11" height="15" fill="rgb(238,69,41)"/><text x="38.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="500" width="11" height="15" fill="rgb(210,80,16)"/><text x="38.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="516" width="11" height="15" fill="rgb(226,23,27)"/><text x="38.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="532" width="11" height="15" fill="rgb(217,141,6)"/><text x="38.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="548" width="11" height="15" fill="rgb(210,222,25)"/><text x="38.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="564" width="11" height="15" fill="rgb(233,119,7)"/><text x="38.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="580" width="11" height="15" fill="rgb(235,13,21)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="596" width="11" height="15" fill="rgb(223,31,46)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="612" width="11" height="15" fill="rgb(251,140,30)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="628" width="11" height="15" fill="rgb(219,8,26)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="644" width="11" height="15" fill="rgb(221,201,7)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="660" width="11" height="15" fill="rgb(220,84,47)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.92%)</title><rect x="35" y="676" width="11" height="15" fill="rgb(232,130,48)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="692" width="11" height="15" fill="rgb(211,145,10)"/><text x="38.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="708" width="11" height="15" fill="rgb(219,205,45)"/><text x="38.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="724" width="11" height="15" fill="rgb(206,28,42)"/><text x="38.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="740" width="11" height="15" fill="rgb(224,212,9)"/><text x="38.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="756" width="11" height="15" fill="rgb(234,83,22)"/><text x="38.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="772" width="11" height="15" fill="rgb(239,145,22)"/><text x="38.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="788" width="11" height="15" fill="rgb(233,99,12)"/><text x="38.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="804" width="11" height="15" fill="rgb(234,84,36)"/><text x="38.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="820" width="11" height="15" fill="rgb(213,98,42)"/><text x="38.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="836" width="11" height="15" fill="rgb(221,25,4)"/><text x="38.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="852" width="11" height="15" fill="rgb(250,200,53)"/><text x="38.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.92%)</title><rect x="35" y="868" width="11" height="15" fill="rgb(254,28,1)"/><text x="38.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="884" width="11" height="15" fill="rgb(249,117,42)"/><text x="38.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="900" width="11" height="15" fill="rgb(232,219,43)"/><text x="38.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="916" width="11" height="15" fill="rgb(205,9,16)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="932" width="11" height="15" fill="rgb(231,73,30)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="948" width="11" height="15" fill="rgb(223,209,39)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="964" width="11" height="15" fill="rgb(207,38,16)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="980" width="11" height="15" fill="rgb(230,226,24)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="996" width="11" height="15" fill="rgb(207,111,46)"/><text x="38.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.92%)</title><rect x="35" y="1012" width="11" height="15" fill="rgb(216,123,13)"/><text x="38.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1028" width="11" height="15" fill="rgb(211,96,41)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1044" width="11" height="15" fill="rgb(235,168,17)"/><text x="38.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1060" width="11" height="15" fill="rgb(217,137,7)"/><text x="38.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="1076" width="11" height="15" fill="rgb(214,228,22)"/><text x="38.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1092" width="11" height="15" fill="rgb(230,85,19)"/><text x="38.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.92%)</title><rect x="35" y="1108" width="11" height="15" fill="rgb(208,134,35)"/><text x="38.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1124" width="11" height="15" fill="rgb(243,26,32)"/><text x="38.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1140" width="11" height="15" fill="rgb(210,82,52)"/><text x="38.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1156" width="11" height="15" fill="rgb(223,159,9)"/><text x="38.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.92%)</title><rect x="35" y="1172" width="11" height="15" fill="rgb(227,36,47)"/><text x="38.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="35" y="1188" width="11" height="15" fill="rgb(240,199,32)"/><text x="38.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/proto/__init__.py) (1 samples, 0.31%)</title><rect x="42" y="1204" width="4" height="15" fill="rgb(211,200,15)"/><text x="45.00" y="1214.50"></text></g><g><title>_check_onnx_version (skl2onnx/proto/__init__.py) (1 samples, 0.31%)</title><rect x="42" y="1220" width="4" height="15" fill="rgb(246,101,8)"/><text x="45.00" y="1230.50"></text></g><g><title>parse_version (pkg_resources/__init__.py) (1 samples, 0.31%)</title><rect x="42" y="1236" width="4" height="15" fill="rgb(254,9,17)"/><text x="45.00" y="1246.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.31%)</title><rect x="42" y="1252" width="4" height="15" fill="rgb(211,88,16)"/><text x="45.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/accessors.py) (1 samples, 0.31%)</title><rect x="46" y="1204" width="3" height="15" fill="rgb(217,100,34)"/><text x="49.00" y="1214.50"></text></g><g><title>add_delegate_accessors (pandas/core/accessor.py) (1 samples, 0.31%)</title><rect x="46" y="1220" width="3" height="15" fill="rgb(228,209,37)"/><text x="49.00" y="1230.50"></text></g><g><title>_add_delegate_accessors (pandas/core/accessor.py) (1 samples, 0.31%)</title><rect x="46" y="1236" width="3" height="15" fill="rgb(227,100,34)"/><text x="49.00" y="1246.50"></text></g><g><title>_create_delegator_property (pandas/core/accessor.py) (1 samples, 0.31%)</title><rect x="46" y="1252" width="3" height="15" fill="rgb(240,26,42)"/><text x="49.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 1.53%)</title><rect x="35" y="340" width="18" height="15" fill="rgb(211,168,19)"/><text x="38.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="35" y="356" width="18" height="15" fill="rgb(219,219,50)"/><text x="38.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="35" y="372" width="18" height="15" fill="rgb(241,115,51)"/><text x="38.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="35" y="388" width="18" height="15" fill="rgb(251,87,45)"/><text x="38.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.53%)</title><rect x="35" y="404" width="18" height="15" fill="rgb(226,207,11)"/><text x="38.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="35" y="420" width="18" height="15" fill="rgb(253,212,4)"/><text x="38.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 1.53%)</title><rect x="35" y="436" width="18" height="15" fill="rgb(218,124,33)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="35" y="452" width="18" height="15" fill="rgb(211,9,45)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.53%)</title><rect x="35" y="468" width="18" height="15" fill="rgb(207,33,14)"/><text x="38.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="484" width="7" height="15" fill="rgb(235,20,10)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="500" width="7" height="15" fill="rgb(242,175,34)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="516" width="7" height="15" fill="rgb(237,215,52)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.61%)</title><rect x="46" y="532" width="7" height="15" fill="rgb(208,51,10)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="548" width="7" height="15" fill="rgb(212,78,2)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="564" width="7" height="15" fill="rgb(235,188,38)"/><text x="49.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="580" width="7" height="15" fill="rgb(238,83,19)"/><text x="49.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="596" width="7" height="15" fill="rgb(225,184,9)"/><text x="49.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="612" width="7" height="15" fill="rgb(246,115,9)"/><text x="49.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.61%)</title><rect x="46" y="628" width="7" height="15" fill="rgb(224,163,4)"/><text x="49.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="644" width="7" height="15" fill="rgb(222,40,43)"/><text x="49.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="660" width="7" height="15" fill="rgb(217,25,42)"/><text x="49.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="676" width="7" height="15" fill="rgb(233,8,4)"/><text x="49.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="692" width="7" height="15" fill="rgb(249,12,28)"/><text x="49.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="708" width="7" height="15" fill="rgb(252,9,19)"/><text x="49.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.61%)</title><rect x="46" y="724" width="7" height="15" fill="rgb(249,96,6)"/><text x="49.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="740" width="7" height="15" fill="rgb(219,186,1)"/><text x="49.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="756" width="7" height="15" fill="rgb(241,76,8)"/><text x="49.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="772" width="7" height="15" fill="rgb(244,178,43)"/><text x="49.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="788" width="7" height="15" fill="rgb(217,214,9)"/><text x="49.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="804" width="7" height="15" fill="rgb(222,150,48)"/><text x="49.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.61%)</title><rect x="46" y="820" width="7" height="15" fill="rgb(219,131,23)"/><text x="49.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="836" width="7" height="15" fill="rgb(224,150,1)"/><text x="49.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="852" width="7" height="15" fill="rgb(250,2,0)"/><text x="49.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="868" width="7" height="15" fill="rgb(213,145,0)"/><text x="49.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="884" width="7" height="15" fill="rgb(247,171,12)"/><text x="49.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="900" width="7" height="15" fill="rgb(244,116,50)"/><text x="49.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.61%)</title><rect x="46" y="916" width="7" height="15" fill="rgb(253,21,32)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="932" width="7" height="15" fill="rgb(240,92,52)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="948" width="7" height="15" fill="rgb(224,115,2)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="964" width="7" height="15" fill="rgb(249,221,54)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="980" width="7" height="15" fill="rgb(235,70,49)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="996" width="7" height="15" fill="rgb(236,209,51)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.61%)</title><rect x="46" y="1012" width="7" height="15" fill="rgb(224,7,46)"/><text x="49.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1028" width="7" height="15" fill="rgb(233,152,1)"/><text x="49.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1044" width="7" height="15" fill="rgb(227,34,43)"/><text x="49.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1060" width="7" height="15" fill="rgb(232,9,32)"/><text x="49.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="1076" width="7" height="15" fill="rgb(208,175,14)"/><text x="49.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1092" width="7" height="15" fill="rgb(227,73,2)"/><text x="49.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.61%)</title><rect x="46" y="1108" width="7" height="15" fill="rgb(241,106,41)"/><text x="49.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1124" width="7" height="15" fill="rgb(219,110,48)"/><text x="49.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1140" width="7" height="15" fill="rgb(207,174,30)"/><text x="49.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1156" width="7" height="15" fill="rgb(251,73,43)"/><text x="49.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="46" y="1172" width="7" height="15" fill="rgb(254,115,49)"/><text x="49.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="46" y="1188" width="7" height="15" fill="rgb(228,228,48)"/><text x="49.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.31%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(248,30,42)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(245,28,21)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(219,161,25)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(249,173,37)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(205,72,31)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(207,65,35)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.31%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(234,145,19)"/><text x="52.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(233,123,50)"/><text x="52.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(237,214,49)"/><text x="52.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(253,111,2)"/><text x="52.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(229,64,22)"/><text x="52.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(214,119,21)"/><text x="52.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="49" y="1396" width="4" height="15" fill="rgb(208,65,6)"/><text x="52.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1412" width="4" height="15" fill="rgb(244,8,49)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1428" width="4" height="15" fill="rgb(242,229,32)"/><text x="52.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1444" width="4" height="15" fill="rgb(246,96,18)"/><text x="52.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1460" width="4" height="15" fill="rgb(245,162,48)"/><text x="52.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1476" width="4" height="15" fill="rgb(222,170,50)"/><text x="52.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.31%)</title><rect x="49" y="1492" width="4" height="15" fill="rgb(241,38,32)"/><text x="52.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1508" width="4" height="15" fill="rgb(239,228,54)"/><text x="52.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1524" width="4" height="15" fill="rgb(248,117,6)"/><text x="52.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1540" width="4" height="15" fill="rgb(241,218,8)"/><text x="52.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1556" width="4" height="15" fill="rgb(217,30,44)"/><text x="52.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1572" width="4" height="15" fill="rgb(206,193,17)"/><text x="52.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1588" width="4" height="15" fill="rgb(247,30,19)"/><text x="52.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1604" width="4" height="15" fill="rgb(230,117,28)"/><text x="52.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1620" width="4" height="15" fill="rgb(245,11,29)"/><text x="52.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.31%)</title><rect x="49" y="1636" width="4" height="15" fill="rgb(243,218,7)"/><text x="52.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1652" width="4" height="15" fill="rgb(246,2,21)"/><text x="52.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1668" width="4" height="15" fill="rgb(253,95,19)"/><text x="52.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1684" width="4" height="15" fill="rgb(237,132,6)"/><text x="52.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1700" width="4" height="15" fill="rgb(213,57,29)"/><text x="52.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1716" width="4" height="15" fill="rgb(238,154,45)"/><text x="52.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1732" width="4" height="15" fill="rgb(245,155,19)"/><text x="52.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1748" width="4" height="15" fill="rgb(207,129,34)"/><text x="52.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.31%)</title><rect x="49" y="1764" width="4" height="15" fill="rgb(205,17,31)"/><text x="52.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1780" width="4" height="15" fill="rgb(238,56,3)"/><text x="52.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1796" width="4" height="15" fill="rgb(208,67,22)"/><text x="52.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1812" width="4" height="15" fill="rgb(219,158,16)"/><text x="52.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1828" width="4" height="15" fill="rgb(233,160,29)"/><text x="52.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1844" width="4" height="15" fill="rgb(218,55,52)"/><text x="52.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.31%)</title><rect x="49" y="1860" width="4" height="15" fill="rgb(206,188,8)"/><text x="52.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1876" width="4" height="15" fill="rgb(254,12,29)"/><text x="52.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1892" width="4" height="15" fill="rgb(222,188,6)"/><text x="52.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1908" width="4" height="15" fill="rgb(239,12,18)"/><text x="52.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="49" y="1924" width="4" height="15" fill="rgb(205,101,50)"/><text x="52.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="49" y="1940" width="4" height="15" fill="rgb(229,111,10)"/><text x="52.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.31%)</title><rect x="49" y="1956" width="4" height="15" fill="rgb(239,9,17)"/><text x="52.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.31%)</title><rect x="49" y="1972" width="4" height="15" fill="rgb(244,123,47)"/><text x="52.00" y="1982.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.31%)</title><rect x="53" y="580" width="3" height="15" fill="rgb(251,145,18)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="596" width="3" height="15" fill="rgb(212,173,17)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="612" width="3" height="15" fill="rgb(221,75,19)"/><text x="56.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="628" width="3" height="15" fill="rgb(237,102,21)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="644" width="3" height="15" fill="rgb(208,110,54)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="660" width="3" height="15" fill="rgb(215,88,35)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="676" width="3" height="15" fill="rgb(220,46,16)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="692" width="3" height="15" fill="rgb(209,177,27)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="708" width="3" height="15" fill="rgb(214,1,51)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.31%)</title><rect x="53" y="724" width="3" height="15" fill="rgb(232,186,24)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="740" width="3" height="15" fill="rgb(218,180,46)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="756" width="3" height="15" fill="rgb(238,213,51)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="772" width="3" height="15" fill="rgb(220,170,34)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="788" width="3" height="15" fill="rgb(238,182,40)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="804" width="3" height="15" fill="rgb(245,78,32)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/compression_helper.py) (1 samples, 0.31%)</title><rect x="53" y="820" width="3" height="15" fill="rgb(242,109,48)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="836" width="3" height="15" fill="rgb(210,79,8)"/><text x="56.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="852" width="3" height="15" fill="rgb(254,228,51)"/><text x="56.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="868" width="3" height="15" fill="rgb(238,89,29)"/><text x="56.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="884" width="3" height="15" fill="rgb(250,132,35)"/><text x="56.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="900" width="3" height="15" fill="rgb(224,223,45)"/><text x="56.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="916" width="3" height="15" fill="rgb(214,174,26)"/><text x="56.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="932" width="3" height="15" fill="rgb(237,71,16)"/><text x="56.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="948" width="3" height="15" fill="rgb(241,146,49)"/><text x="56.00" y="958.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/texthelper/__init__.py) (1 samples, 0.31%)</title><rect x="53" y="964" width="3" height="15" fill="rgb(224,137,40)"/><text x="56.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="980" width="3" height="15" fill="rgb(208,228,54)"/><text x="56.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="996" width="3" height="15" fill="rgb(227,174,42)"/><text x="56.00" y="1006.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="53" y="1012" width="3" height="15" fill="rgb(234,94,18)"/><text x="56.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1028" width="3" height="15" fill="rgb(238,25,11)"/><text x="56.00" y="1038.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1044" width="3" height="15" fill="rgb(221,74,20)"/><text x="56.00" y="1054.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1060" width="3" height="15" fill="rgb(218,77,22)"/><text x="56.00" y="1070.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="53" y="1076" width="3" height="15" fill="rgb(207,175,2)"/><text x="56.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.28%)</title><rect x="10" y="68" width="50" height="15" fill="rgb(249,80,1)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.28%)</title><rect x="10" y="84" width="50" height="15" fill="rgb(216,43,51)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.28%)</title><rect x="10" y="100" width="50" height="15" fill="rgb(215,219,3)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 4.28%)</title><rect x="10" y="116" width="50" height="15" fill="rgb(213,207,20)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.28%)</title><rect x="10" y="132" width="50" height="15" fill="rgb(239,44,12)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py) (14 samples, 4.28%)</title><rect x="10" y="148" width="50" height="15" fill="rgb(250,227,28)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.28%)</title><rect x="10" y="164" width="50" height="15" fill="rgb(230,95,24)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 4.28%)</title><rect x="10" y="180" width="50" height="15" fill="rgb(237,169,41)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="35" y="196" width="25" height="15" fill="rgb(225,34,46)"/><text x="38.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.14%)</title><rect x="35" y="212" width="25" height="15" fill="rgb(242,62,42)"/><text x="38.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="35" y="228" width="25" height="15" fill="rgb(206,68,17)"/><text x="38.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 2.14%)</title><rect x="35" y="244" width="25" height="15" fill="rgb(232,177,27)"/><text x="38.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="35" y="260" width="25" height="15" fill="rgb(222,191,22)"/><text x="38.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="35" y="276" width="25" height="15" fill="rgb(240,31,4)"/><text x="38.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="35" y="292" width="25" height="15" fill="rgb(208,196,5)"/><text x="38.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.14%)</title><rect x="35" y="308" width="25" height="15" fill="rgb(234,26,27)"/><text x="38.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.14%)</title><rect x="35" y="324" width="25" height="15" fill="rgb(238,69,11)"/><text x="38.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.61%)</title><rect x="53" y="340" width="7" height="15" fill="rgb(231,122,33)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="356" width="7" height="15" fill="rgb(216,184,29)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="372" width="7" height="15" fill="rgb(224,73,37)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="388" width="7" height="15" fill="rgb(220,229,24)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="404" width="7" height="15" fill="rgb(213,109,19)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="420" width="7" height="15" fill="rgb(237,54,32)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="436" width="7" height="15" fill="rgb(238,198,49)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="53" y="452" width="7" height="15" fill="rgb(234,75,19)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="468" width="7" height="15" fill="rgb(207,172,54)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.61%)</title><rect x="53" y="484" width="7" height="15" fill="rgb(244,104,40)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="500" width="7" height="15" fill="rgb(249,132,35)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="516" width="7" height="15" fill="rgb(250,65,50)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="532" width="7" height="15" fill="rgb(237,79,28)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.61%)</title><rect x="53" y="548" width="7" height="15" fill="rgb(253,151,20)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="53" y="564" width="7" height="15" fill="rgb(211,88,46)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.31%)</title><rect x="56" y="580" width="4" height="15" fill="rgb(223,14,10)"/><text x="59.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="596" width="4" height="15" fill="rgb(224,168,47)"/><text x="59.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="612" width="4" height="15" fill="rgb(254,202,51)"/><text x="59.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="628" width="4" height="15" fill="rgb(228,202,4)"/><text x="59.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="644" width="4" height="15" fill="rgb(218,37,20)"/><text x="59.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="660" width="4" height="15" fill="rgb(248,199,7)"/><text x="59.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.31%)</title><rect x="56" y="676" width="4" height="15" fill="rgb(210,156,51)"/><text x="59.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="692" width="4" height="15" fill="rgb(241,173,50)"/><text x="59.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="708" width="4" height="15" fill="rgb(223,67,53)"/><text x="59.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="724" width="4" height="15" fill="rgb(214,127,18)"/><text x="59.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="740" width="4" height="15" fill="rgb(242,114,38)"/><text x="59.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="756" width="4" height="15" fill="rgb(245,181,26)"/><text x="59.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.31%)</title><rect x="56" y="772" width="4" height="15" fill="rgb(232,9,48)"/><text x="59.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="788" width="4" height="15" fill="rgb(222,87,5)"/><text x="59.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="804" width="4" height="15" fill="rgb(246,201,46)"/><text x="59.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="820" width="4" height="15" fill="rgb(222,68,23)"/><text x="59.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="836" width="4" height="15" fill="rgb(239,195,47)"/><text x="59.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="852" width="4" height="15" fill="rgb(205,41,53)"/><text x="59.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="868" width="4" height="15" fill="rgb(232,185,18)"/><text x="59.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="884" width="4" height="15" fill="rgb(223,100,26)"/><text x="59.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.31%)</title><rect x="56" y="900" width="4" height="15" fill="rgb(253,44,7)"/><text x="59.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="916" width="4" height="15" fill="rgb(251,202,48)"/><text x="59.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="932" width="4" height="15" fill="rgb(234,38,53)"/><text x="59.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="948" width="4" height="15" fill="rgb(230,109,13)"/><text x="59.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="964" width="4" height="15" fill="rgb(220,25,8)"/><text x="59.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="980" width="4" height="15" fill="rgb(232,170,4)"/><text x="59.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="996" width="4" height="15" fill="rgb(244,37,32)"/><text x="59.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1012" width="4" height="15" fill="rgb(225,49,43)"/><text x="59.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1028" width="4" height="15" fill="rgb(210,202,12)"/><text x="59.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.31%)</title><rect x="56" y="1044" width="4" height="15" fill="rgb(237,46,21)"/><text x="59.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1060" width="4" height="15" fill="rgb(233,200,4)"/><text x="59.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1076" width="4" height="15" fill="rgb(250,163,45)"/><text x="59.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1092" width="4" height="15" fill="rgb(222,96,2)"/><text x="59.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1108" width="4" height="15" fill="rgb(246,9,47)"/><text x="59.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1124" width="4" height="15" fill="rgb(209,224,51)"/><text x="59.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="56" y="1140" width="4" height="15" fill="rgb(214,50,25)"/><text x="59.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1156" width="4" height="15" fill="rgb(246,106,47)"/><text x="59.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.31%)</title><rect x="56" y="1172" width="4" height="15" fill="rgb(232,82,48)"/><text x="59.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1188" width="4" height="15" fill="rgb(240,118,35)"/><text x="59.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1204" width="4" height="15" fill="rgb(238,94,52)"/><text x="59.00" y="1214.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1220" width="4" height="15" fill="rgb(215,57,40)"/><text x="59.00" y="1230.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="56" y="1236" width="4" height="15" fill="rgb(239,221,25)"/><text x="59.00" y="1246.50"></text></g><g><title>profile0_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="60" y="68" width="4" height="15" fill="rgb(209,15,53)"/><text x="63.00" y="78.50"></text></g><g><title>setup_profile0 (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (1 samples, 0.31%)</title><rect x="60" y="84" width="4" height="15" fill="rgb(212,229,24)"/><text x="63.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="60" y="100" width="4" height="15" fill="rgb(229,217,34)"/><text x="63.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.31%)</title><rect x="60" y="116" width="4" height="15" fill="rgb(243,166,29)"/><text x="63.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py) (1 samples, 0.31%)</title><rect x="60" y="132" width="4" height="15" fill="rgb(227,207,11)"/><text x="63.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="148" width="4" height="15" fill="rgb(209,89,9)"/><text x="63.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="164" width="4" height="15" fill="rgb(246,196,17)"/><text x="63.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="180" width="4" height="15" fill="rgb(230,203,34)"/><text x="63.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="196" width="4" height="15" fill="rgb(228,21,42)"/><text x="63.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="212" width="4" height="15" fill="rgb(252,158,39)"/><text x="63.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py) (1 samples, 0.31%)</title><rect x="60" y="228" width="4" height="15" fill="rgb(241,113,10)"/><text x="63.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="244" width="4" height="15" fill="rgb(213,22,0)"/><text x="63.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="260" width="4" height="15" fill="rgb(236,76,0)"/><text x="63.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="276" width="4" height="15" fill="rgb(247,126,28)"/><text x="63.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="292" width="4" height="15" fill="rgb(237,219,32)"/><text x="63.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="308" width="4" height="15" fill="rgb(225,80,51)"/><text x="63.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/training.py) (1 samples, 0.31%)</title><rect x="60" y="324" width="4" height="15" fill="rgb(222,25,19)"/><text x="63.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="340" width="4" height="15" fill="rgb(237,97,25)"/><text x="63.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="356" width="4" height="15" fill="rgb(218,36,45)"/><text x="63.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="372" width="4" height="15" fill="rgb(210,60,45)"/><text x="63.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="388" width="4" height="15" fill="rgb(232,222,49)"/><text x="63.00" y="398.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="60" y="404" width="4" height="15" fill="rgb(228,113,25)"/><text x="63.00" y="414.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="420" width="4" height="15" fill="rgb(236,29,9)"/><text x="63.00" y="430.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="436" width="4" height="15" fill="rgb(252,84,51)"/><text x="63.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="452" width="4" height="15" fill="rgb(241,112,47)"/><text x="63.00" y="462.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="468" width="4" height="15" fill="rgb(229,147,31)"/><text x="63.00" y="478.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="484" width="4" height="15" fill="rgb(208,127,1)"/><text x="63.00" y="494.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="60" y="500" width="4" height="15" fill="rgb(252,110,18)"/><text x="63.00" y="510.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.61%)</title><rect x="157" y="180" width="8" height="15" fill="rgb(218,55,13)"/><text x="160.00" y="190.50"></text></g><g><title>0x7f9175e9fff9 (?) (1 samples, 0.31%)</title><rect x="201" y="212" width="3" height="15" fill="rgb(251,72,6)"/><text x="204.00" y="222.50"></text></g><g><title>0x7f9175e9ad3b (?) (1 samples, 0.31%)</title><rect x="201" y="228" width="3" height="15" fill="rgb(211,168,2)"/><text x="204.00" y="238.50"></text></g><g><title>0x7f9175e9919d (?) (1 samples, 0.31%)</title><rect x="201" y="244" width="3" height="15" fill="rgb(222,116,22)"/><text x="204.00" y="254.50"></text></g><g><title>0x7f9175eac850 (?) (1 samples, 0.31%)</title><rect x="201" y="260" width="3" height="15" fill="rgb(243,23,0)"/><text x="204.00" y="270.50"></text></g><g><title>0x7fff90efda01 ([vdso]) (1 samples, 0.31%)</title><rect x="204" y="212" width="4" height="15" fill="rgb(211,2,18)"/><text x="207.00" y="222.50"></text></g><g><title>0x7f9175e671a0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="222" y="244" width="4" height="15" fill="rgb(236,111,4)"/><text x="225.00" y="254.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="226" y="244" width="4" height="15" fill="rgb(234,158,47)"/><text x="229.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="230" y="260" width="3" height="15" fill="rgb(211,196,45)"/><text x="233.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="230" y="276" width="3" height="15" fill="rgb(234,196,21)"/><text x="233.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="230" y="292" width="3" height="15" fill="rgb(246,91,40)"/><text x="233.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="233" y="260" width="4" height="15" fill="rgb(225,139,5)"/><text x="236.00" y="270.50"></text></g><g><title>0x7f91b7e85e93 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="237" y="292" width="3" height="15" fill="rgb(247,146,54)"/><text x="240.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (10 samples, 3.06%)</title><rect x="208" y="212" width="36" height="15" fill="rgb(221,218,37)"/><text x="211.00" y="222.50">&lt;li..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.14%)</title><rect x="219" y="228" width="25" height="15" fill="rgb(220,5,19)"/><text x="222.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="230" y="244" width="14" height="15" fill="rgb(241,3,51)"/><text x="233.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="237" y="260" width="7" height="15" fill="rgb(241,175,28)"/><text x="240.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="237" y="276" width="7" height="15" fill="rgb(207,20,40)"/><text x="240.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="240" y="292" width="4" height="15" fill="rgb(218,181,26)"/><text x="243.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="248" y="228" width="3" height="15" fill="rgb(225,160,22)"/><text x="251.00" y="238.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="269" y="292" width="4" height="15" fill="rgb(249,146,41)"/><text x="272.00" y="302.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="269" y="308" width="4" height="15" fill="rgb(245,21,53)"/><text x="272.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="273" y="292" width="4" height="15" fill="rgb(225,33,22)"/><text x="276.00" y="302.50"></text></g><g><title>0x7f91b7e6f96a (libc-2.29.so) (1 samples, 0.31%)</title><rect x="277" y="340" width="3" height="15" fill="rgb(205,69,2)"/><text x="280.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="280" y="356" width="7" height="15" fill="rgb(248,96,4)"/><text x="283.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="280" y="372" width="7" height="15" fill="rgb(209,110,9)"/><text x="283.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="284" y="388" width="3" height="15" fill="rgb(221,161,4)"/><text x="287.00" y="398.50"></text></g><g><title>0x7f91b7e7e6ba (libc-2.29.so) (1 samples, 0.31%)</title><rect x="284" y="404" width="3" height="15" fill="rgb(209,119,44)"/><text x="287.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="287" y="356" width="4" height="15" fill="rgb(217,67,53)"/><text x="290.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="287" y="372" width="4" height="15" fill="rgb(224,196,50)"/><text x="290.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="287" y="388" width="4" height="15" fill="rgb(217,35,33)"/><text x="290.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="287" y="404" width="4" height="15" fill="rgb(235,33,42)"/><text x="290.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="287" y="420" width="4" height="15" fill="rgb(217,220,3)"/><text x="290.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="280" y="340" width="15" height="15" fill="rgb(234,43,16)"/><text x="283.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetExecutionPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="291" y="356" width="4" height="15" fill="rgb(231,122,27)"/><text x="294.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.75%)</title><rect x="269" y="276" width="33" height="15" fill="rgb(251,221,27)"/><text x="272.00" y="286.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.14%)</title><rect x="277" y="292" width="25" height="15" fill="rgb(206,178,21)"/><text x="280.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.14%)</title><rect x="277" y="308" width="25" height="15" fill="rgb(209,210,50)"/><text x="280.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 2.14%)</title><rect x="277" y="324" width="25" height="15" fill="rgb(249,41,42)"/><text x="280.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="340" width="7" height="15" fill="rgb(234,220,13)"/><text x="298.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="356" width="7" height="15" fill="rgb(245,34,8)"/><text x="298.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="372" width="7" height="15" fill="rgb(207,31,45)"/><text x="298.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="388" width="7" height="15" fill="rgb(231,43,35)"/><text x="298.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="404" width="7" height="15" fill="rgb(216,129,28)"/><text x="298.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="420" width="7" height="15" fill="rgb(208,32,36)"/><text x="298.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="295" y="436" width="7" height="15" fill="rgb(222,89,50)"/><text x="298.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="298" y="452" width="4" height="15" fill="rgb(225,133,7)"/><text x="301.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="298" y="468" width="4" height="15" fill="rgb(216,82,34)"/><text x="301.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="298" y="484" width="4" height="15" fill="rgb(249,75,35)"/><text x="301.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="298" y="500" width="4" height="15" fill="rgb(231,132,37)"/><text x="301.00" y="510.50"></text></g><g><title>std::_Rb_tree_rebalance_for_erase (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="298" y="516" width="4" height="15" fill="rgb(232,102,26)"/><text x="301.00" y="526.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 3.06%)</title><rect x="269" y="260" width="36" height="15" fill="rgb(234,74,1)"/><text x="272.00" y="270.50">onn..</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="302" y="276" width="3" height="15" fill="rgb(214,32,14)"/><text x="305.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="302" y="292" width="3" height="15" fill="rgb(243,172,45)"/><text x="305.00" y="302.50"></text></g><g><title>array_finalize_get (getset.c) (1 samples, 0.31%)</title><rect x="313" y="276" width="3" height="15" fill="rgb(205,156,30)"/><text x="316.00" y="286.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="316" y="276" width="4" height="15" fill="rgb(205,161,3)"/><text x="319.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 2.45%)</title><rect x="305" y="260" width="29" height="15" fill="rgb(228,107,1)"/><text x="308.00" y="270.50">on..</text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.22%)</title><rect x="320" y="276" width="14" height="15" fill="rgb(240,131,48)"/><text x="323.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.31%)</title><rect x="331" y="292" width="3" height="15" fill="rgb(228,208,25)"/><text x="334.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="331" y="308" width="3" height="15" fill="rgb(238,212,34)"/><text x="334.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="334" y="308" width="4" height="15" fill="rgb(237,44,35)"/><text x="337.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.31%)</title><rect x="334" y="324" width="4" height="15" fill="rgb(225,196,49)"/><text x="337.00" y="334.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.61%)</title><rect x="334" y="260" width="7" height="15" fill="rgb(254,7,24)"/><text x="337.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.61%)</title><rect x="334" y="276" width="7" height="15" fill="rgb(251,103,37)"/><text x="337.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.61%)</title><rect x="334" y="292" width="7" height="15" fill="rgb(240,143,27)"/><text x="337.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="338" y="308" width="3" height="15" fill="rgb(251,57,30)"/><text x="341.00" y="318.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="341" y="260" width="4" height="15" fill="rgb(230,229,1)"/><text x="344.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 7.03%)</title><rect x="266" y="244" width="83" height="15" fill="rgb(224,22,51)"/><text x="269.00" y="254.50">onnxrunti..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="345" y="260" width="4" height="15" fill="rgb(249,74,49)"/><text x="348.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="349" y="244" width="3" height="15" fill="rgb(223,83,28)"/><text x="352.00" y="254.50"></text></g><g><title>0x7f9175e67a00 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="349" y="260" width="3" height="15" fill="rgb(251,42,29)"/><text x="352.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (75 samples, 22.94%)</title><rect x="85" y="132" width="271" height="15" fill="rgb(232,175,45)"/><text x="88.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/co..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (70 samples, 21.41%)</title><rect x="103" y="148" width="253" height="15" fill="rgb(219,49,37)"/><text x="106.00" y="158.50">run (mlprodict/onnxrt/onnx_infere..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (62 samples, 18.96%)</title><rect x="132" y="164" width="224" height="15" fill="rgb(214,201,16)"/><text x="135.00" y="174.50">_run_whole_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (53 samples, 16.21%)</title><rect x="165" y="180" width="191" height="15" fill="rgb(217,11,7)"/><text x="168.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py) (51 samples, 15.60%)</title><rect x="172" y="196" width="184" height="15" fill="rgb(219,1,0)"/><text x="175.00" y="206.50">run (onnxruntime/capi/s..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 9.48%)</title><rect x="244" y="212" width="112" height="15" fill="rgb(227,46,43)"/><text x="247.00" y="222.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 8.87%)</title><rect x="251" y="228" width="105" height="15" fill="rgb(251,66,30)"/><text x="254.00" y="238.50">void pybind1..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="352" y="244" width="4" height="15" fill="rgb(239,75,51)"/><text x="355.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.31%)</title><rect x="352" y="260" width="4" height="15" fill="rgb(235,208,7)"/><text x="355.00" y="270.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (82 samples, 25.08%)</title><rect x="64" y="68" width="296" height="15" fill="rgb(208,63,53)"/><text x="67.00" y="78.50">profile_ort (bench_LinearRegression_def..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (82 samples, 25.08%)</title><rect x="64" y="84" width="296" height="15" fill="rgb(254,35,53)"/><text x="67.00" y="94.50">setup_profile (bench_LinearRegression_d..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (82 samples, 25.08%)</title><rect x="64" y="100" width="296" height="15" fill="rgb(219,111,45)"/><text x="67.00" y="110.50">profile (bench_LinearRegression_default..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (81 samples, 24.77%)</title><rect x="67" y="116" width="293" height="15" fill="rgb(249,63,22)"/><text x="70.00" y="126.50">time_predict (mlprodict/asv_benchmark/c..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.31%)</title><rect x="356" y="132" width="4" height="15" fill="rgb(254,54,47)"/><text x="359.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.92%)</title><rect x="360" y="116" width="10" height="15" fill="rgb(235,19,17)"/><text x="363.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.61%)</title><rect x="363" y="132" width="7" height="15" fill="rgb(240,149,24)"/><text x="366.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.61%)</title><rect x="363" y="148" width="7" height="15" fill="rgb(244,33,15)"/><text x="366.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.22%)</title><rect x="432" y="180" width="14" height="15" fill="rgb(252,180,39)"/><text x="435.00" y="190.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="507" y="340" width="4" height="15" fill="rgb(225,4,36)"/><text x="510.00" y="350.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.61%)</title><rect x="507" y="324" width="8" height="15" fill="rgb(245,97,47)"/><text x="510.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="511" y="340" width="4" height="15" fill="rgb(242,213,5)"/><text x="514.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 1.83%)</title><rect x="500" y="276" width="22" height="15" fill="rgb(208,65,48)"/><text x="503.00" y="286.50">a..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (5 samples, 1.53%)</title><rect x="504" y="292" width="18" height="15" fill="rgb(250,106,54)"/><text x="507.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (4 samples, 1.22%)</title><rect x="507" y="308" width="15" height="15" fill="rgb(209,183,3)"/><text x="510.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (2 samples, 0.61%)</title><rect x="515" y="324" width="7" height="15" fill="rgb(210,227,6)"/><text x="518.00" y="334.50"></text></g><g><title>FLOAT_dot (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="518" y="340" width="4" height="15" fill="rgb(228,143,50)"/><text x="521.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (7 samples, 2.14%)</title><rect x="500" y="244" width="26" height="15" fill="rgb(253,82,26)"/><text x="503.00" y="254.50">n..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (7 samples, 2.14%)</title><rect x="500" y="260" width="26" height="15" fill="rgb(236,125,46)"/><text x="503.00" y="270.50">d..</text></g><g><title>dot (numpy/core/multiarray.py) (1 samples, 0.31%)</title><rect x="522" y="276" width="4" height="15" fill="rgb(225,144,28)"/><text x="525.00" y="286.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.61%)</title><rect x="526" y="260" width="7" height="15" fill="rgb(210,166,45)"/><text x="529.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.61%)</title><rect x="526" y="276" width="7" height="15" fill="rgb(239,56,42)"/><text x="529.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.31%)</title><rect x="529" y="292" width="4" height="15" fill="rgb(205,129,33)"/><text x="532.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="536" y="276" width="4" height="15" fill="rgb(208,74,0)"/><text x="539.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="536" y="292" width="4" height="15" fill="rgb(219,161,51)"/><text x="539.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.31%)</title><rect x="536" y="308" width="4" height="15" fill="rgb(227,52,3)"/><text x="539.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.31%)</title><rect x="536" y="324" width="4" height="15" fill="rgb(218,229,7)"/><text x="539.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.31%)</title><rect x="540" y="324" width="4" height="15" fill="rgb(214,145,8)"/><text x="543.00" y="334.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.31%)</title><rect x="551" y="340" width="3" height="15" fill="rgb(250,40,44)"/><text x="554.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.22%)</title><rect x="544" y="324" width="14" height="15" fill="rgb(249,61,18)"/><text x="547.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.31%)</title><rect x="554" y="340" width="4" height="15" fill="rgb(212,191,12)"/><text x="557.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="558" y="324" width="4" height="15" fill="rgb(209,51,19)"/><text x="561.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 2.14%)</title><rect x="540" y="308" width="25" height="15" fill="rgb(217,217,1)"/><text x="543.00" y="318.50">N..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.31%)</title><rect x="562" y="324" width="3" height="15" fill="rgb(242,213,25)"/><text x="565.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c) (1 samples, 0.31%)</title><rect x="562" y="340" width="3" height="15" fill="rgb(217,26,8)"/><text x="565.00" y="350.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (58 samples, 17.74%)</title><rect x="360" y="100" width="209" height="15" fill="rgb(252,201,52)"/><text x="363.00" y="110.50">profile (bench_LinearRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (55 samples, 16.82%)</title><rect x="370" y="116" width="199" height="15" fill="rgb(209,40,41)"/><text x="373.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (51 samples, 15.60%)</title><rect x="385" y="132" width="184" height="15" fill="rgb(227,153,48)"/><text x="388.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (49 samples, 14.98%)</title><rect x="392" y="148" width="177" height="15" fill="rgb(218,199,0)"/><text x="395.00" y="158.50">run (mlprodict/onnxrt/o..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (47 samples, 14.37%)</title><rect x="399" y="164" width="170" height="15" fill="rgb(253,154,15)"/><text x="402.00" y="174.50">_run_sequence_runtime ..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (34 samples, 10.40%)</title><rect x="446" y="180" width="123" height="15" fill="rgb(250,213,54)"/><text x="449.00" y="190.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (26 samples, 7.95%)</title><rect x="475" y="196" width="94" height="15" fill="rgb(213,2,24)"/><text x="478.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (24 samples, 7.34%)</title><rect x="482" y="212" width="87" height="15" fill="rgb(206,51,9)"/><text x="485.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (23 samples, 7.03%)</title><rect x="486" y="228" width="83" height="15" fill="rgb(237,39,44)"/><text x="489.00" y="238.50">_run (mlp..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (12 samples, 3.67%)</title><rect x="526" y="244" width="43" height="15" fill="rgb(235,82,11)"/><text x="529.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 3.06%)</title><rect x="533" y="260" width="36" height="15" fill="rgb(216,38,32)"/><text x="536.00" y="270.50">PyU..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 2.45%)</title><rect x="540" y="276" width="29" height="15" fill="rgb(219,218,28)"/><text x="543.00" y="286.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 2.45%)</title><rect x="540" y="292" width="29" height="15" fill="rgb(212,87,28)"/><text x="543.00" y="302.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.31%)</title><rect x="565" y="308" width="4" height="15" fill="rgb(220,38,1)"/><text x="568.00" y="318.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (59 samples, 18.04%)</title><rect x="360" y="68" width="212" height="15" fill="rgb(247,85,14)"/><text x="363.00" y="78.50">profile_pyrt (bench_LinearR..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (59 samples, 18.04%)</title><rect x="360" y="84" width="212" height="15" fill="rgb(226,185,38)"/><text x="363.00" y="94.50">setup_profile (bench_Linear..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="569" y="100" width="3" height="15" fill="rgb(214,213,26)"/><text x="572.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="569" y="116" width="3" height="15" fill="rgb(211,172,45)"/><text x="572.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.31%)</title><rect x="569" y="132" width="3" height="15" fill="rgb(231,161,27)"/><text x="572.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="569" y="148" width="3" height="15" fill="rgb(208,201,35)"/><text x="572.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.31%)</title><rect x="569" y="164" width="3" height="15" fill="rgb(242,70,30)"/><text x="572.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.31%)</title><rect x="569" y="180" width="3" height="15" fill="rgb(232,64,39)"/><text x="572.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.31%)</title><rect x="569" y="196" width="3" height="15" fill="rgb(206,82,35)"/><text x="572.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="212" width="3" height="15" fill="rgb(220,129,19)"/><text x="572.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="228" width="3" height="15" fill="rgb(211,225,47)"/><text x="572.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="244" width="3" height="15" fill="rgb(208,41,0)"/><text x="572.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="569" y="260" width="3" height="15" fill="rgb(209,161,47)"/><text x="572.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="276" width="3" height="15" fill="rgb(250,98,32)"/><text x="572.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.31%)</title><rect x="569" y="292" width="3" height="15" fill="rgb(225,172,25)"/><text x="572.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="308" width="3" height="15" fill="rgb(232,95,1)"/><text x="572.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="324" width="3" height="15" fill="rgb(219,208,29)"/><text x="572.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="340" width="3" height="15" fill="rgb(232,84,45)"/><text x="572.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="569" y="356" width="3" height="15" fill="rgb(230,77,35)"/><text x="572.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="372" width="3" height="15" fill="rgb(245,157,51)"/><text x="572.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.31%)</title><rect x="569" y="388" width="3" height="15" fill="rgb(251,70,0)"/><text x="572.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="404" width="3" height="15" fill="rgb(212,192,11)"/><text x="572.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="420" width="3" height="15" fill="rgb(242,168,2)"/><text x="572.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.31%)</title><rect x="569" y="436" width="3" height="15" fill="rgb(220,79,26)"/><text x="572.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="569" y="452" width="3" height="15" fill="rgb(205,163,16)"/><text x="572.00" y="462.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="569" y="468" width="3" height="15" fill="rgb(220,209,22)"/><text x="572.00" y="478.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.31%)</title><rect x="569" y="484" width="3" height="15" fill="rgb(213,48,35)"/><text x="572.00" y="494.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.31%)</title><rect x="569" y="500" width="3" height="15" fill="rgb(236,30,16)"/><text x="572.00" y="510.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.31%)</title><rect x="612" y="180" width="4" height="15" fill="rgb(241,73,0)"/><text x="615.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.31%)</title><rect x="612" y="196" width="4" height="15" fill="rgb(227,147,32)"/><text x="615.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.31%)</title><rect x="612" y="212" width="4" height="15" fill="rgb(231,207,51)"/><text x="615.00" y="222.50"></text></g><g><title>0x7f91b7e8fd97 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="612" y="228" width="4" height="15" fill="rgb(250,70,53)"/><text x="615.00" y="238.50"></text></g><g><title>try_binary_elide (temp_elide.c) (1 samples, 0.31%)</title><rect x="616" y="196" width="3" height="15" fill="rgb(225,122,41)"/><text x="619.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.31%)</title><rect x="616" y="212" width="3" height="15" fill="rgb(249,206,4)"/><text x="619.00" y="222.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.31%)</title><rect x="616" y="228" width="3" height="15" fill="rgb(239,31,48)"/><text x="619.00" y="238.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (4 samples, 1.22%)</title><rect x="619" y="212" width="15" height="15" fill="rgb(213,87,47)"/><text x="622.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (4 samples, 1.22%)</title><rect x="619" y="228" width="15" height="15" fill="rgb(251,29,8)"/><text x="622.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (4 samples, 1.22%)</title><rect x="619" y="244" width="15" height="15" fill="rgb(222,1,39)"/><text x="622.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (4 samples, 1.22%)</title><rect x="619" y="260" width="15" height="15" fill="rgb(240,127,19)"/><text x="622.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (4 samples, 1.22%)</title><rect x="619" y="276" width="15" height="15" fill="rgb(209,34,48)"/><text x="622.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.61%)</title><rect x="627" y="292" width="7" height="15" fill="rgb(254,19,16)"/><text x="630.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="637" y="228" width="4" height="15" fill="rgb(237,38,31)"/><text x="640.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="637" y="244" width="4" height="15" fill="rgb(243,157,48)"/><text x="640.00" y="254.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.31%)</title><rect x="637" y="260" width="4" height="15" fill="rgb(240,39,0)"/><text x="640.00" y="270.50"></text></g><g><title>DOUBLE_copyswap (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="637" y="276" width="4" height="15" fill="rgb(228,89,38)"/><text x="640.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.31%)</title><rect x="637" y="292" width="4" height="15" fill="rgb(247,1,25)"/><text x="640.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.31%)</title><rect x="641" y="228" width="4" height="15" fill="rgb(223,49,48)"/><text x="644.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.61%)</title><rect x="645" y="228" width="7" height="15" fill="rgb(243,172,11)"/><text x="648.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.61%)</title><rect x="645" y="244" width="7" height="15" fill="rgb(205,198,7)"/><text x="648.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.31%)</title><rect x="648" y="260" width="4" height="15" fill="rgb(240,126,4)"/><text x="651.00" y="270.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (1 samples, 0.31%)</title><rect x="652" y="260" width="3" height="15" fill="rgb(224,0,46)"/><text x="655.00" y="270.50"></text></g><g><title>array_add (number.c) (12 samples, 3.67%)</title><rect x="616" y="180" width="43" height="15" fill="rgb(245,203,20)"/><text x="619.00" y="190.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.36%)</title><rect x="619" y="196" width="40" height="15" fill="rgb(211,113,28)"/><text x="622.00" y="206.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 2.14%)</title><rect x="634" y="212" width="25" height="15" fill="rgb(247,83,36)"/><text x="637.00" y="222.50">P..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.61%)</title><rect x="652" y="228" width="7" height="15" fill="rgb(232,105,19)"/><text x="655.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.61%)</title><rect x="652" y="244" width="7" height="15" fill="rgb(234,47,25)"/><text x="655.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.31%)</title><rect x="655" y="260" width="4" height="15" fill="rgb(228,164,39)"/><text x="658.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.31%)</title><rect x="659" y="180" width="4" height="15" fill="rgb(213,64,37)"/><text x="662.00" y="190.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.31%)</title><rect x="659" y="196" width="4" height="15" fill="rgb(245,26,21)"/><text x="662.00" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.31%)</title><rect x="659" y="212" width="4" height="15" fill="rgb(241,64,5)"/><text x="662.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 1.22%)</title><rect x="767" y="196" width="15" height="15" fill="rgb(226,97,20)"/><text x="770.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 1.22%)</title><rect x="782" y="196" width="14" height="15" fill="rgb(238,166,14)"/><text x="785.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.31%)</title><rect x="796" y="196" width="4" height="15" fill="rgb(235,90,42)"/><text x="799.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.61%)</title><rect x="839" y="212" width="8" height="15" fill="rgb(230,153,3)"/><text x="842.00" y="222.50"></text></g><g><title>0x7f91b7e85e7a (libc-2.29.so) (2 samples, 0.61%)</title><rect x="839" y="228" width="8" height="15" fill="rgb(222,79,11)"/><text x="842.00" y="238.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.92%)</title><rect x="847" y="212" width="11" height="15" fill="rgb(223,32,11)"/><text x="850.00" y="222.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.31%)</title><rect x="854" y="228" width="4" height="15" fill="rgb(248,212,16)"/><text x="857.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (17 samples, 5.20%)</title><rect x="800" y="196" width="61" height="15" fill="rgb(239,227,9)"/><text x="803.00" y="206.50">_asser..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.31%)</title><rect x="858" y="212" width="3" height="15" fill="rgb(216,55,42)"/><text x="861.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.31%)</title><rect x="861" y="196" width="4" height="15" fill="rgb(239,150,3)"/><text x="864.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.92%)</title><rect x="908" y="212" width="11" height="15" fill="rgb(214,80,42)"/><text x="911.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.31%)</title><rect x="915" y="228" width="4" height="15" fill="rgb(241,197,41)"/><text x="918.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (16 samples, 4.89%)</title><rect x="865" y="196" width="57" height="15" fill="rgb(223,94,31)"/><text x="868.00" y="206.50">_num_s..</text></g><g><title>array_shape_get (getset.c) (1 samples, 0.31%)</title><rect x="919" y="212" width="3" height="15" fill="rgb(215,95,27)"/><text x="922.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.31%)</title><rect x="922" y="196" width="4" height="15" fill="rgb(235,50,19)"/><text x="925.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="922" y="212" width="4" height="15" fill="rgb(229,94,6)"/><text x="925.00" y="222.50"></text></g><g><title>0x7f91b7e85730 (libc-2.29.so) (1 samples, 0.31%)</title><rect x="937" y="228" width="4" height="15" fill="rgb(215,22,3)"/><text x="940.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (4 samples, 1.22%)</title><rect x="930" y="212" width="14" height="15" fill="rgb(243,111,29)"/><text x="933.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.31%)</title><rect x="941" y="228" width="3" height="15" fill="rgb(238,88,29)"/><text x="944.00" y="238.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (11 samples, 3.36%)</title><rect x="926" y="196" width="40" height="15" fill="rgb(252,218,30)"/><text x="929.00" y="206.50">iss..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (6 samples, 1.83%)</title><rect x="944" y="212" width="22" height="15" fill="rgb(245,83,37)"/><text x="947.00" y="222.50">i..</text></g><g><title>check_array (sklearn/utils/validation.py) (103 samples, 31.50%)</title><rect x="663" y="180" width="371" height="15" fill="rgb(214,3,15)"/><text x="666.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (19 samples, 5.81%)</title><rect x="966" y="196" width="68" height="15" fill="rgb(251,162,33)"/><text x="969.00" y="206.50">simplef..</text></g><g><title>_add_filter (warnings.py) (17 samples, 5.20%)</title><rect x="973" y="212" width="61" height="15" fill="rgb(228,146,28)"/><text x="976.00" y="222.50">_add_f..</text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.92%)</title><rect x="1070" y="212" width="11" height="15" fill="rgb(217,56,21)"/><text x="1073.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (12 samples, 3.67%)</title><rect x="1056" y="196" width="43" height="15" fill="rgb(254,218,45)"/><text x="1059.00" y="206.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (5 samples, 1.53%)</title><rect x="1081" y="212" width="18" height="15" fill="rgb(207,192,0)"/><text x="1084.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (19 samples, 5.81%)</title><rect x="1034" y="180" width="69" height="15" fill="rgb(212,126,6)"/><text x="1037.00" y="190.50">check_i..</text></g><g><title>isclass (inspect.py) (1 samples, 0.31%)</title><rect x="1099" y="196" width="4" height="15" fill="rgb(253,79,43)"/><text x="1102.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.31%)</title><rect x="1103" y="196" width="4" height="15" fill="rgb(214,169,1)"/><text x="1106.00" y="206.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.31%)</title><rect x="1107" y="244" width="3" height="15" fill="rgb(205,101,17)"/><text x="1110.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.61%)</title><rect x="1107" y="212" width="7" height="15" fill="rgb(233,190,11)"/><text x="1110.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.61%)</title><rect x="1107" y="228" width="7" height="15" fill="rgb(239,165,16)"/><text x="1110.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.31%)</title><rect x="1110" y="244" width="4" height="15" fill="rgb(218,141,44)"/><text x="1113.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.61%)</title><rect x="1114" y="244" width="7" height="15" fill="rgb(223,96,35)"/><text x="1117.00" y="254.50"></text></g><g><title>DOUBLE_dot (arraytypes.c.src) (2 samples, 0.61%)</title><rect x="1114" y="260" width="7" height="15" fill="rgb(241,54,45)"/><text x="1117.00" y="270.50"></text></g><g><title>0x7f91b7e9012f (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1121" y="260" width="4" height="15" fill="rgb(223,121,33)"/><text x="1124.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.31%)</title><rect x="1128" y="276" width="4" height="15" fill="rgb(214,41,40)"/><text x="1131.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.22%)</title><rect x="1125" y="260" width="14" height="15" fill="rgb(248,55,13)"/><text x="1128.00" y="270.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (2 samples, 0.61%)</title><rect x="1132" y="276" width="7" height="15" fill="rgb(234,104,1)"/><text x="1135.00" y="286.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1139" y="276" width="4" height="15" fill="rgb(206,224,24)"/><text x="1142.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1139" y="292" width="4" height="15" fill="rgb(231,37,24)"/><text x="1142.00" y="302.50"></text></g><g><title>npyiter_check_casting (nditer_constr.c) (2 samples, 0.61%)</title><rect x="1139" y="260" width="7" height="15" fill="rgb(211,136,54)"/><text x="1142.00" y="270.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.31%)</title><rect x="1143" y="276" width="3" height="15" fill="rgb(251,118,50)"/><text x="1146.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (8 samples, 2.45%)</title><rect x="1121" y="244" width="29" height="15" fill="rgb(226,52,51)"/><text x="1124.00" y="254.50">Np..</text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.31%)</title><rect x="1146" y="260" width="4" height="15" fill="rgb(244,78,22)"/><text x="1149.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.61%)</title><rect x="1150" y="244" width="7" height="15" fill="rgb(214,112,10)"/><text x="1153.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.61%)</title><rect x="1150" y="260" width="7" height="15" fill="rgb(229,95,5)"/><text x="1153.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.31%)</title><rect x="1153" y="276" width="4" height="15" fill="rgb(239,70,40)"/><text x="1156.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.31%)</title><rect x="1153" y="292" width="4" height="15" fill="rgb(226,208,11)"/><text x="1156.00" y="302.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (2 samples, 0.61%)</title><rect x="1157" y="244" width="7" height="15" fill="rgb(231,185,17)"/><text x="1160.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.31%)</title><rect x="1161" y="260" width="3" height="15" fill="rgb(242,86,0)"/><text x="1164.00" y="270.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c) (1 samples, 0.31%)</title><rect x="1161" y="276" width="3" height="15" fill="rgb(209,18,16)"/><text x="1164.00" y="286.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.31%)</title><rect x="1164" y="244" width="4" height="15" fill="rgb(206,26,20)"/><text x="1167.00" y="254.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (2 samples, 0.61%)</title><rect x="1168" y="244" width="7" height="15" fill="rgb(235,172,16)"/><text x="1171.00" y="254.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.31%)</title><rect x="1175" y="244" width="4" height="15" fill="rgb(205,93,31)"/><text x="1178.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1175" y="260" width="4" height="15" fill="rgb(219,78,3)"/><text x="1178.00" y="270.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1175" y="276" width="4" height="15" fill="rgb(235,221,21)"/><text x="1178.00" y="286.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.31%)</title><rect x="1175" y="292" width="4" height="15" fill="rgb(231,80,2)"/><text x="1178.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.31%)</title><rect x="1179" y="244" width="3" height="15" fill="rgb(222,124,51)"/><text x="1182.00" y="254.50"></text></g><g><title>all (327 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(234,126,1)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (327 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(214,179,47)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (171 samples, 52.29%)</title><rect x="572" y="68" width="618" height="15" fill="rgb(222,94,32)"/><text x="575.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (171 samples, 52.29%)</title><rect x="572" y="84" width="618" height="15" fill="rgb(215,39,47)"/><text x="575.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (171 samples, 52.29%)</title><rect x="572" y="100" width="618" height="15" fill="rgb(215,44,40)"/><text x="575.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (168 samples, 51.38%)</title><rect x="583" y="116" width="607" height="15" fill="rgb(212,205,17)"/><text x="586.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (166 samples, 50.76%)</title><rect x="590" y="132" width="600" height="15" fill="rgb(212,65,49)"/><text x="593.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (166 samples, 50.76%)</title><rect x="590" y="148" width="600" height="15" fill="rgb(246,180,25)"/><text x="593.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (165 samples, 50.46%)</title><rect x="594" y="164" width="596" height="15" fill="rgb(238,34,37)"/><text x="597.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (24 samples, 7.34%)</title><rect x="1103" y="180" width="87" height="15" fill="rgb(234,187,20)"/><text x="1106.00" y="190.50">safe_spars..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (23 samples, 7.03%)</title><rect x="1107" y="196" width="83" height="15" fill="rgb(224,188,14)"/><text x="1110.00" y="206.50">ufunc_gen..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (21 samples, 6.42%)</title><rect x="1114" y="212" width="76" height="15" fill="rgb(223,69,5)"/><text x="1117.00" y="222.50">PyUFunc_..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (21 samples, 6.42%)</title><rect x="1114" y="228" width="76" height="15" fill="rgb(217,186,23)"/><text x="1117.00" y="238.50">PyUFunc_..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.61%)</title><rect x="1182" y="244" width="8" height="15" fill="rgb(237,147,34)"/><text x="1185.00" y="254.50"></text></g><g><title>0x7f91b7090c90 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(205,123,43)"/><text x="1189.00" y="270.50"></text></g></g></svg>