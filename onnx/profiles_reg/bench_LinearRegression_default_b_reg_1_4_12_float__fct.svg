<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="10" y="932" width="4" height="15" fill="rgb(243,143,25)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="10" y="948" width="4" height="15" fill="rgb(236,27,25)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="10" y="964" width="4" height="15" fill="rgb(211,86,2)"/><text x="13.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="10" y="980" width="4" height="15" fill="rgb(220,171,47)"/><text x="13.00" y="990.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.37%)</title><rect x="10" y="996" width="4" height="15" fill="rgb(236,83,34)"/><text x="13.00" y="1006.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.74%)</title><rect x="10" y="900" width="8" height="15" fill="rgb(205,61,14)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.74%)</title><rect x="10" y="916" width="8" height="15" fill="rgb(209,76,37)"/><text x="13.00" y="926.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.37%)</title><rect x="14" y="932" width="4" height="15" fill="rgb(210,122,54)"/><text x="17.00" y="942.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.37%)</title><rect x="14" y="948" width="4" height="15" fill="rgb(211,126,37)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (3 samples, 1.11%)</title><rect x="10" y="868" width="13" height="15" fill="rgb(238,221,22)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (3 samples, 1.11%)</title><rect x="10" y="884" width="13" height="15" fill="rgb(235,48,46)"/><text x="13.00" y="894.50"></text></g><g><title>insert_on (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="18" y="900" width="5" height="15" fill="rgb(216,110,39)"/><text x="21.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="23" y="916" width="4" height="15" fill="rgb(226,228,3)"/><text x="26.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="23" y="932" width="4" height="15" fill="rgb(217,92,30)"/><text x="26.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.85%)</title><rect x="10" y="292" width="21" height="15" fill="rgb(238,5,25)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="308" width="21" height="15" fill="rgb(250,174,30)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="324" width="21" height="15" fill="rgb(214,201,53)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="340" width="21" height="15" fill="rgb(210,77,30)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.85%)</title><rect x="10" y="356" width="21" height="15" fill="rgb(226,214,16)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="372" width="21" height="15" fill="rgb(252,8,48)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.85%)</title><rect x="10" y="388" width="21" height="15" fill="rgb(225,139,17)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="404" width="21" height="15" fill="rgb(235,103,28)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="420" width="21" height="15" fill="rgb(240,25,30)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="436" width="21" height="15" fill="rgb(212,185,31)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.85%)</title><rect x="10" y="452" width="21" height="15" fill="rgb(213,10,29)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="468" width="21" height="15" fill="rgb(225,40,9)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.85%)</title><rect x="10" y="484" width="21" height="15" fill="rgb(207,81,45)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="500" width="21" height="15" fill="rgb(221,52,34)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="516" width="21" height="15" fill="rgb(236,149,11)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="532" width="21" height="15" fill="rgb(227,141,53)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.85%)</title><rect x="10" y="548" width="21" height="15" fill="rgb(248,188,19)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="564" width="21" height="15" fill="rgb(250,8,1)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.85%)</title><rect x="10" y="580" width="21" height="15" fill="rgb(223,66,20)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="596" width="21" height="15" fill="rgb(239,119,12)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="612" width="21" height="15" fill="rgb(245,68,5)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="628" width="21" height="15" fill="rgb(212,210,15)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="644" width="21" height="15" fill="rgb(227,180,49)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="660" width="21" height="15" fill="rgb(225,174,15)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="676" width="21" height="15" fill="rgb(225,146,47)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.85%)</title><rect x="10" y="692" width="21" height="15" fill="rgb(229,74,14)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="708" width="21" height="15" fill="rgb(211,5,16)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.85%)</title><rect x="10" y="724" width="21" height="15" fill="rgb(234,125,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="740" width="21" height="15" fill="rgb(215,39,3)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="756" width="21" height="15" fill="rgb(233,81,15)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="772" width="21" height="15" fill="rgb(225,48,24)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.85%)</title><rect x="10" y="788" width="21" height="15" fill="rgb(239,7,41)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="10" y="804" width="21" height="15" fill="rgb(221,38,47)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.85%)</title><rect x="10" y="820" width="21" height="15" fill="rgb(217,127,49)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.85%)</title><rect x="10" y="836" width="21" height="15" fill="rgb(234,17,39)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.85%)</title><rect x="10" y="852" width="21" height="15" fill="rgb(215,164,52)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.74%)</title><rect x="23" y="868" width="8" height="15" fill="rgb(221,175,29)"/><text x="26.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.74%)</title><rect x="23" y="884" width="8" height="15" fill="rgb(207,145,41)"/><text x="26.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.74%)</title><rect x="23" y="900" width="8" height="15" fill="rgb(236,171,0)"/><text x="26.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="27" y="916" width="4" height="15" fill="rgb(243,211,51)"/><text x="30.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.37%)</title><rect x="27" y="932" width="4" height="15" fill="rgb(217,48,26)"/><text x="30.00" y="942.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.37%)</title><rect x="27" y="948" width="4" height="15" fill="rgb(254,131,54)"/><text x="30.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.37%)</title><rect x="27" y="964" width="4" height="15" fill="rgb(237,145,52)"/><text x="30.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.37%)</title><rect x="27" y="980" width="4" height="15" fill="rgb(235,227,49)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(216,81,40)"/><text x="34.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.37%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(214,53,24)"/><text x="34.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.37%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(209,223,11)"/><text x="34.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.37%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(229,57,1)"/><text x="34.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.37%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(248,163,49)"/><text x="34.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.37%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(207,165,52)"/><text x="34.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.37%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(215,188,29)"/><text x="34.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.37%)</title><rect x="31" y="1124" width="5" height="15" fill="rgb(247,3,31)"/><text x="34.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.37%)</title><rect x="31" y="1140" width="5" height="15" fill="rgb(221,201,4)"/><text x="34.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.37%)</title><rect x="31" y="1156" width="5" height="15" fill="rgb(230,175,49)"/><text x="34.00" y="1166.50"></text></g><g><title>0x7fd9309a612b (libc-2.29.so) (1 samples, 0.37%)</title><rect x="31" y="1172" width="5" height="15" fill="rgb(227,118,44)"/><text x="34.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="788" width="9" height="15" fill="rgb(250,224,25)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="804" width="9" height="15" fill="rgb(223,103,50)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="820" width="9" height="15" fill="rgb(249,160,29)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="836" width="9" height="15" fill="rgb(207,147,16)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="852" width="9" height="15" fill="rgb(209,111,17)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="31" y="868" width="9" height="15" fill="rgb(250,38,42)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="884" width="9" height="15" fill="rgb(213,82,6)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.74%)</title><rect x="31" y="900" width="9" height="15" fill="rgb(221,177,3)"/><text x="34.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="916" width="9" height="15" fill="rgb(248,189,42)"/><text x="34.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="932" width="9" height="15" fill="rgb(233,32,8)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="948" width="9" height="15" fill="rgb(215,186,25)"/><text x="34.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="964" width="9" height="15" fill="rgb(235,133,43)"/><text x="34.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="31" y="980" width="9" height="15" fill="rgb(223,200,10)"/><text x="34.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="31" y="996" width="9" height="15" fill="rgb(246,136,10)"/><text x="34.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(214,198,1)"/><text x="39.00" y="1022.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(218,171,40)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="500" width="13" height="15" fill="rgb(219,152,31)"/><text x="34.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="516" width="13" height="15" fill="rgb(248,79,41)"/><text x="34.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="532" width="13" height="15" fill="rgb(221,55,35)"/><text x="34.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="31" y="548" width="13" height="15" fill="rgb(227,109,43)"/><text x="34.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="564" width="13" height="15" fill="rgb(219,94,6)"/><text x="34.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (3 samples, 1.11%)</title><rect x="31" y="580" width="13" height="15" fill="rgb(241,163,28)"/><text x="34.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="596" width="13" height="15" fill="rgb(230,85,37)"/><text x="34.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="612" width="13" height="15" fill="rgb(251,154,27)"/><text x="34.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="628" width="13" height="15" fill="rgb(224,35,8)"/><text x="34.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="31" y="644" width="13" height="15" fill="rgb(211,192,53)"/><text x="34.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="660" width="13" height="15" fill="rgb(233,47,22)"/><text x="34.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (3 samples, 1.11%)</title><rect x="31" y="676" width="13" height="15" fill="rgb(231,141,7)"/><text x="34.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="692" width="13" height="15" fill="rgb(239,219,32)"/><text x="34.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="708" width="13" height="15" fill="rgb(244,153,23)"/><text x="34.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="724" width="13" height="15" fill="rgb(229,7,23)"/><text x="34.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="31" y="740" width="13" height="15" fill="rgb(215,24,45)"/><text x="34.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="31" y="756" width="13" height="15" fill="rgb(238,143,28)"/><text x="34.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (3 samples, 1.11%)</title><rect x="31" y="772" width="13" height="15" fill="rgb(219,39,45)"/><text x="34.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.37%)</title><rect x="40" y="788" width="4" height="15" fill="rgb(253,57,46)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.32%)</title><rect x="10" y="196" width="39" height="15" fill="rgb(213,140,24)"/><text x="13.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.32%)</title><rect x="10" y="212" width="39" height="15" fill="rgb(206,177,21)"/><text x="13.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.32%)</title><rect x="10" y="228" width="39" height="15" fill="rgb(247,135,34)"/><text x="13.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.32%)</title><rect x="10" y="244" width="39" height="15" fill="rgb(240,93,14)"/><text x="13.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 3.32%)</title><rect x="10" y="260" width="39" height="15" fill="rgb(246,49,17)"/><text x="13.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 3.32%)</title><rect x="10" y="276" width="39" height="15" fill="rgb(252,135,52)"/><text x="13.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (4 samples, 1.48%)</title><rect x="31" y="292" width="18" height="15" fill="rgb(243,12,37)"/><text x="34.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="308" width="18" height="15" fill="rgb(205,213,28)"/><text x="34.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="324" width="18" height="15" fill="rgb(252,123,22)"/><text x="34.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="340" width="18" height="15" fill="rgb(222,93,54)"/><text x="34.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.48%)</title><rect x="31" y="356" width="18" height="15" fill="rgb(218,220,22)"/><text x="34.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="372" width="18" height="15" fill="rgb(228,13,21)"/><text x="34.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (4 samples, 1.48%)</title><rect x="31" y="388" width="18" height="15" fill="rgb(223,70,45)"/><text x="34.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="404" width="18" height="15" fill="rgb(249,81,41)"/><text x="34.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="420" width="18" height="15" fill="rgb(226,117,45)"/><text x="34.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="436" width="18" height="15" fill="rgb(226,92,44)"/><text x="34.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.48%)</title><rect x="31" y="452" width="18" height="15" fill="rgb(242,7,45)"/><text x="34.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.48%)</title><rect x="31" y="468" width="18" height="15" fill="rgb(219,102,19)"/><text x="34.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (4 samples, 1.48%)</title><rect x="31" y="484" width="18" height="15" fill="rgb(213,96,21)"/><text x="34.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="500" width="5" height="15" fill="rgb(228,81,23)"/><text x="47.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="516" width="5" height="15" fill="rgb(216,229,10)"/><text x="47.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="532" width="5" height="15" fill="rgb(238,74,54)"/><text x="47.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="548" width="5" height="15" fill="rgb(231,65,22)"/><text x="47.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="564" width="5" height="15" fill="rgb(223,200,17)"/><text x="47.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="44" y="580" width="5" height="15" fill="rgb(252,121,49)"/><text x="47.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="596" width="5" height="15" fill="rgb(248,220,2)"/><text x="47.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.37%)</title><rect x="44" y="612" width="5" height="15" fill="rgb(230,13,46)"/><text x="47.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="628" width="5" height="15" fill="rgb(242,178,14)"/><text x="47.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="644" width="5" height="15" fill="rgb(205,154,20)"/><text x="47.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="660" width="5" height="15" fill="rgb(221,87,25)"/><text x="47.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="44" y="676" width="5" height="15" fill="rgb(234,133,8)"/><text x="47.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="692" width="5" height="15" fill="rgb(244,195,18)"/><text x="47.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.37%)</title><rect x="44" y="708" width="5" height="15" fill="rgb(214,192,28)"/><text x="47.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="724" width="5" height="15" fill="rgb(231,229,25)"/><text x="47.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="740" width="5" height="15" fill="rgb(228,156,34)"/><text x="47.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="756" width="5" height="15" fill="rgb(226,149,35)"/><text x="47.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="44" y="772" width="5" height="15" fill="rgb(215,12,24)"/><text x="47.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="788" width="5" height="15" fill="rgb(207,157,27)"/><text x="47.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.37%)</title><rect x="44" y="804" width="5" height="15" fill="rgb(238,226,1)"/><text x="47.00" y="814.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="820" width="5" height="15" fill="rgb(205,73,3)"/><text x="47.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="836" width="5" height="15" fill="rgb(213,3,53)"/><text x="47.00" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="852" width="5" height="15" fill="rgb(241,128,27)"/><text x="47.00" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="868" width="5" height="15" fill="rgb(206,65,3)"/><text x="47.00" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="884" width="5" height="15" fill="rgb(242,171,53)"/><text x="47.00" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="44" y="900" width="5" height="15" fill="rgb(234,59,10)"/><text x="47.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="916" width="5" height="15" fill="rgb(231,45,41)"/><text x="47.00" y="926.50"></text></g><g><title>&lt;module&gt; (joblib/hashing.py) (1 samples, 0.37%)</title><rect x="44" y="932" width="5" height="15" fill="rgb(214,219,47)"/><text x="47.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="948" width="5" height="15" fill="rgb(250,120,28)"/><text x="47.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="964" width="5" height="15" fill="rgb(211,59,36)"/><text x="47.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="44" y="980" width="5" height="15" fill="rgb(229,221,21)"/><text x="47.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="44" y="996" width="5" height="15" fill="rgb(218,202,21)"/><text x="47.00" y="1006.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="44" y="1012" width="5" height="15" fill="rgb(233,184,49)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1124" width="4" height="15" fill="rgb(221,89,29)"/><text x="52.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1140" width="4" height="15" fill="rgb(224,30,34)"/><text x="52.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1156" width="4" height="15" fill="rgb(243,143,31)"/><text x="52.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="49" y="1172" width="4" height="15" fill="rgb(224,56,4)"/><text x="52.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1188" width="4" height="15" fill="rgb(233,226,23)"/><text x="52.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.37%)</title><rect x="49" y="1204" width="4" height="15" fill="rgb(237,42,15)"/><text x="52.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1220" width="4" height="15" fill="rgb(248,81,28)"/><text x="52.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1236" width="4" height="15" fill="rgb(239,163,3)"/><text x="52.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1252" width="4" height="15" fill="rgb(228,164,32)"/><text x="52.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="49" y="1268" width="4" height="15" fill="rgb(213,122,15)"/><text x="52.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="49" y="1284" width="4" height="15" fill="rgb(238,88,2)"/><text x="52.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.37%)</title><rect x="49" y="1300" width="4" height="15" fill="rgb(234,132,45)"/><text x="52.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.37%)</title><rect x="49" y="1316" width="4" height="15" fill="rgb(219,210,34)"/><text x="52.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.37%)</title><rect x="49" y="1332" width="4" height="15" fill="rgb(241,107,46)"/><text x="52.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.37%)</title><rect x="49" y="1348" width="4" height="15" fill="rgb(225,160,43)"/><text x="52.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.37%)</title><rect x="49" y="1364" width="4" height="15" fill="rgb(212,39,3)"/><text x="52.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.37%)</title><rect x="49" y="1380" width="4" height="15" fill="rgb(223,41,20)"/><text x="52.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.37%)</title><rect x="49" y="1396" width="4" height="15" fill="rgb(225,25,4)"/><text x="52.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.37%)</title><rect x="49" y="1412" width="4" height="15" fill="rgb(235,99,18)"/><text x="52.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="53" y="1476" width="4" height="15" fill="rgb(248,153,44)"/><text x="56.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="53" y="1492" width="4" height="15" fill="rgb(237,229,38)"/><text x="56.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="53" y="1508" width="4" height="15" fill="rgb(221,7,0)"/><text x="56.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="53" y="1524" width="4" height="15" fill="rgb(230,114,36)"/><text x="56.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="53" y="1540" width="4" height="15" fill="rgb(239,185,23)"/><text x="56.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.37%)</title><rect x="53" y="1556" width="4" height="15" fill="rgb(209,186,50)"/><text x="56.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.37%)</title><rect x="53" y="1572" width="4" height="15" fill="rgb(249,153,4)"/><text x="56.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.37%)</title><rect x="53" y="1588" width="4" height="15" fill="rgb(230,103,49)"/><text x="56.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.37%)</title><rect x="53" y="1604" width="4" height="15" fill="rgb(207,189,13)"/><text x="56.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.37%)</title><rect x="53" y="1620" width="4" height="15" fill="rgb(254,73,19)"/><text x="56.00" y="1630.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.37%)</title><rect x="53" y="1636" width="4" height="15" fill="rgb(212,20,49)"/><text x="56.00" y="1646.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.37%)</title><rect x="53" y="1652" width="4" height="15" fill="rgb(241,75,19)"/><text x="56.00" y="1662.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.37%)</title><rect x="53" y="1668" width="4" height="15" fill="rgb(246,34,10)"/><text x="56.00" y="1678.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.37%)</title><rect x="53" y="1684" width="4" height="15" fill="rgb(248,130,4)"/><text x="56.00" y="1694.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.37%)</title><rect x="53" y="1700" width="4" height="15" fill="rgb(243,209,37)"/><text x="56.00" y="1710.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.37%)</title><rect x="53" y="1716" width="4" height="15" fill="rgb(225,150,12)"/><text x="56.00" y="1726.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.37%)</title><rect x="53" y="1732" width="4" height="15" fill="rgb(245,225,20)"/><text x="56.00" y="1742.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.37%)</title><rect x="53" y="1748" width="4" height="15" fill="rgb(221,3,7)"/><text x="56.00" y="1758.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.37%)</title><rect x="53" y="1764" width="4" height="15" fill="rgb(228,91,27)"/><text x="56.00" y="1774.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.37%)</title><rect x="62" y="1636" width="4" height="15" fill="rgb(233,175,28)"/><text x="65.00" y="1646.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.37%)</title><rect x="62" y="1652" width="4" height="15" fill="rgb(245,149,10)"/><text x="65.00" y="1662.50"></text></g><g><title>sre_ucs1_charset.isra.9 (python3.7) (1 samples, 0.37%)</title><rect x="62" y="1668" width="4" height="15" fill="rgb(246,214,48)"/><text x="65.00" y="1678.50"></text></g><g><title>dedent (textwrap.py) (3 samples, 1.11%)</title><rect x="57" y="1620" width="13" height="15" fill="rgb(243,181,32)"/><text x="60.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.37%)</title><rect x="66" y="1636" width="4" height="15" fill="rgb(220,44,25)"/><text x="69.00" y="1646.50"></text></g><g><title>call (jinja2/runtime.py) (4 samples, 1.48%)</title><rect x="57" y="1588" width="18" height="15" fill="rgb(247,21,18)"/><text x="60.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (4 samples, 1.48%)</title><rect x="57" y="1604" width="18" height="15" fill="rgb(240,180,13)"/><text x="60.00" y="1614.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.37%)</title><rect x="70" y="1620" width="5" height="15" fill="rgb(210,18,45)"/><text x="73.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="484" width="30" height="15" fill="rgb(252,174,51)"/><text x="52.00" y="494.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="500" width="30" height="15" fill="rgb(239,69,43)"/><text x="52.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="516" width="30" height="15" fill="rgb(224,124,49)"/><text x="52.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="532" width="30" height="15" fill="rgb(248,75,25)"/><text x="52.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.58%)</title><rect x="49" y="548" width="30" height="15" fill="rgb(243,209,54)"/><text x="52.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="564" width="30" height="15" fill="rgb(206,162,45)"/><text x="52.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 2.58%)</title><rect x="49" y="580" width="30" height="15" fill="rgb(235,68,11)"/><text x="52.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="596" width="30" height="15" fill="rgb(231,153,39)"/><text x="52.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="612" width="30" height="15" fill="rgb(250,12,3)"/><text x="52.00" y="622.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="628" width="30" height="15" fill="rgb(229,156,50)"/><text x="52.00" y="638.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.58%)</title><rect x="49" y="644" width="30" height="15" fill="rgb(249,216,29)"/><text x="52.00" y="654.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="660" width="30" height="15" fill="rgb(205,186,6)"/><text x="52.00" y="670.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 2.58%)</title><rect x="49" y="676" width="30" height="15" fill="rgb(208,183,36)"/><text x="52.00" y="686.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="692" width="30" height="15" fill="rgb(249,150,37)"/><text x="52.00" y="702.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="708" width="30" height="15" fill="rgb(252,202,29)"/><text x="52.00" y="718.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="724" width="30" height="15" fill="rgb(224,53,43)"/><text x="52.00" y="734.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.58%)</title><rect x="49" y="740" width="30" height="15" fill="rgb(218,74,5)"/><text x="52.00" y="750.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="756" width="30" height="15" fill="rgb(236,30,22)"/><text x="52.00" y="766.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 2.58%)</title><rect x="49" y="772" width="30" height="15" fill="rgb(226,177,5)"/><text x="52.00" y="782.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="788" width="30" height="15" fill="rgb(249,91,6)"/><text x="52.00" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="804" width="30" height="15" fill="rgb(210,159,33)"/><text x="52.00" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="820" width="30" height="15" fill="rgb(236,70,47)"/><text x="52.00" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.58%)</title><rect x="49" y="836" width="30" height="15" fill="rgb(235,52,26)"/><text x="52.00" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="852" width="30" height="15" fill="rgb(218,72,17)"/><text x="52.00" y="862.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 2.58%)</title><rect x="49" y="868" width="30" height="15" fill="rgb(224,63,50)"/><text x="52.00" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="884" width="30" height="15" fill="rgb(229,82,36)"/><text x="52.00" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="900" width="30" height="15" fill="rgb(225,20,46)"/><text x="52.00" y="910.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="916" width="30" height="15" fill="rgb(217,68,1)"/><text x="52.00" y="926.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="932" width="30" height="15" fill="rgb(251,23,52)"/><text x="52.00" y="942.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="948" width="30" height="15" fill="rgb(226,21,54)"/><text x="52.00" y="958.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="964" width="30" height="15" fill="rgb(218,68,48)"/><text x="52.00" y="974.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.58%)</title><rect x="49" y="980" width="30" height="15" fill="rgb(212,203,11)"/><text x="52.00" y="990.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="996" width="30" height="15" fill="rgb(238,25,47)"/><text x="52.00" y="1006.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 2.58%)</title><rect x="49" y="1012" width="30" height="15" fill="rgb(212,104,29)"/><text x="52.00" y="1022.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="1028" width="30" height="15" fill="rgb(254,118,2)"/><text x="52.00" y="1038.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="1044" width="30" height="15" fill="rgb(208,105,18)"/><text x="52.00" y="1054.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="1060" width="30" height="15" fill="rgb(239,84,1)"/><text x="52.00" y="1070.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 2.58%)</title><rect x="49" y="1076" width="30" height="15" fill="rgb(241,86,28)"/><text x="52.00" y="1086.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 2.58%)</title><rect x="49" y="1092" width="30" height="15" fill="rgb(230,135,3)"/><text x="52.00" y="1102.50">_c..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 2.58%)</title><rect x="49" y="1108" width="30" height="15" fill="rgb(227,223,45)"/><text x="52.00" y="1118.50">&lt;m..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1124" width="26" height="15" fill="rgb(243,151,54)"/><text x="56.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1140" width="26" height="15" fill="rgb(222,129,45)"/><text x="56.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1156" width="26" height="15" fill="rgb(246,127,10)"/><text x="56.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1172" width="26" height="15" fill="rgb(220,51,7)"/><text x="56.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1188" width="26" height="15" fill="rgb(206,53,15)"/><text x="56.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.21%)</title><rect x="53" y="1204" width="26" height="15" fill="rgb(221,211,27)"/><text x="56.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1220" width="26" height="15" fill="rgb(247,155,10)"/><text x="56.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (6 samples, 2.21%)</title><rect x="53" y="1236" width="26" height="15" fill="rgb(206,46,35)"/><text x="56.00" y="1246.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1252" width="26" height="15" fill="rgb(209,129,47)"/><text x="56.00" y="1262.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1268" width="26" height="15" fill="rgb(215,176,1)"/><text x="56.00" y="1278.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1284" width="26" height="15" fill="rgb(247,14,35)"/><text x="56.00" y="1294.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1300" width="26" height="15" fill="rgb(211,17,36)"/><text x="56.00" y="1310.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1316" width="26" height="15" fill="rgb(234,141,49)"/><text x="56.00" y="1326.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.21%)</title><rect x="53" y="1332" width="26" height="15" fill="rgb(242,224,25)"/><text x="56.00" y="1342.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1348" width="26" height="15" fill="rgb(207,221,48)"/><text x="56.00" y="1358.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (6 samples, 2.21%)</title><rect x="53" y="1364" width="26" height="15" fill="rgb(227,88,4)"/><text x="56.00" y="1374.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1380" width="26" height="15" fill="rgb(221,183,24)"/><text x="56.00" y="1390.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1396" width="26" height="15" fill="rgb(245,84,41)"/><text x="56.00" y="1406.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1412" width="26" height="15" fill="rgb(222,150,14)"/><text x="56.00" y="1422.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.21%)</title><rect x="53" y="1428" width="26" height="15" fill="rgb(219,116,20)"/><text x="56.00" y="1438.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.21%)</title><rect x="53" y="1444" width="26" height="15" fill="rgb(219,102,34)"/><text x="56.00" y="1454.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (6 samples, 2.21%)</title><rect x="53" y="1460" width="26" height="15" fill="rgb(231,7,33)"/><text x="56.00" y="1470.50">&lt;..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.85%)</title><rect x="57" y="1476" width="22" height="15" fill="rgb(251,99,53)"/><text x="60.00" y="1486.50">_..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.85%)</title><rect x="57" y="1492" width="22" height="15" fill="rgb(235,139,35)"/><text x="60.00" y="1502.50">d..</text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (5 samples, 1.85%)</title><rect x="57" y="1508" width="22" height="15" fill="rgb(206,229,19)"/><text x="60.00" y="1518.50">g..</text></g><g><title>render (jinja2/asyncsupport.py) (5 samples, 1.85%)</title><rect x="57" y="1524" width="22" height="15" fill="rgb(214,220,26)"/><text x="60.00" y="1534.50">r..</text></g><g><title>render (jinja2/environment.py) (5 samples, 1.85%)</title><rect x="57" y="1540" width="22" height="15" fill="rgb(225,206,43)"/><text x="60.00" y="1550.50">r..</text></g><g><title>unicode_join (python3.7) (5 samples, 1.85%)</title><rect x="57" y="1556" width="22" height="15" fill="rgb(229,222,46)"/><text x="60.00" y="1566.50">u..</text></g><g><title>root (&lt;template&gt;) (5 samples, 1.85%)</title><rect x="57" y="1572" width="22" height="15" fill="rgb(205,20,1)"/><text x="60.00" y="1582.50">r..</text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.37%)</title><rect x="75" y="1588" width="4" height="15" fill="rgb(208,87,18)"/><text x="78.00" y="1598.50"></text></g><g><title>0x7fd920a410e9 (?) (1 samples, 0.37%)</title><rect x="75" y="1604" width="4" height="15" fill="rgb(210,121,29)"/><text x="78.00" y="1614.50"></text></g><g><title>0x7fd920a456e7 (?) (1 samples, 0.37%)</title><rect x="75" y="1620" width="4" height="15" fill="rgb(214,106,32)"/><text x="78.00" y="1630.50"></text></g><g><title>0x7fd920a44593 (?) (1 samples, 0.37%)</title><rect x="75" y="1636" width="4" height="15" fill="rgb(230,66,25)"/><text x="78.00" y="1646.50"></text></g><g><title>0x7fd920a442e4 (?) (1 samples, 0.37%)</title><rect x="75" y="1652" width="4" height="15" fill="rgb(212,218,48)"/><text x="78.00" y="1662.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1508" width="5" height="15" fill="rgb(238,126,17)"/><text x="82.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1524" width="5" height="15" fill="rgb(252,157,45)"/><text x="82.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1540" width="5" height="15" fill="rgb(253,139,42)"/><text x="82.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1556" width="5" height="15" fill="rgb(212,95,7)"/><text x="82.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1572" width="5" height="15" fill="rgb(249,17,34)"/><text x="82.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1588" width="5" height="15" fill="rgb(205,7,13)"/><text x="82.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="79" y="1604" width="5" height="15" fill="rgb(218,121,47)"/><text x="82.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="79" y="1620" width="5" height="15" fill="rgb(243,77,52)"/><text x="82.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.37%)</title><rect x="79" y="1636" width="5" height="15" fill="rgb(213,98,27)"/><text x="82.00" y="1646.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 0.37%)</title><rect x="79" y="1652" width="5" height="15" fill="rgb(224,23,28)"/><text x="82.00" y="1662.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.37%)</title><rect x="79" y="1668" width="5" height="15" fill="rgb(212,127,22)"/><text x="82.00" y="1678.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 0.37%)</title><rect x="79" y="1684" width="5" height="15" fill="rgb(216,2,13)"/><text x="82.00" y="1694.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 3.69%)</title><rect x="49" y="340" width="43" height="15" fill="rgb(205,147,28)"/><text x="52.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.69%)</title><rect x="49" y="356" width="43" height="15" fill="rgb(242,76,45)"/><text x="52.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.69%)</title><rect x="49" y="372" width="43" height="15" fill="rgb(239,196,44)"/><text x="52.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.69%)</title><rect x="49" y="388" width="43" height="15" fill="rgb(252,18,41)"/><text x="52.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 3.69%)</title><rect x="49" y="404" width="43" height="15" fill="rgb(247,104,6)"/><text x="52.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.69%)</title><rect x="49" y="420" width="43" height="15" fill="rgb(216,33,37)"/><text x="52.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 3.69%)</title><rect x="49" y="436" width="43" height="15" fill="rgb(210,204,45)"/><text x="52.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.69%)</title><rect x="49" y="452" width="43" height="15" fill="rgb(248,172,27)"/><text x="52.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 3.69%)</title><rect x="49" y="468" width="43" height="15" fill="rgb(220,149,13)"/><text x="52.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="484" width="13" height="15" fill="rgb(226,199,22)"/><text x="82.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="500" width="13" height="15" fill="rgb(231,27,26)"/><text x="82.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="516" width="13" height="15" fill="rgb(229,220,49)"/><text x="82.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.11%)</title><rect x="79" y="532" width="13" height="15" fill="rgb(214,202,49)"/><text x="82.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="548" width="13" height="15" fill="rgb(244,134,24)"/><text x="82.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="564" width="13" height="15" fill="rgb(248,32,29)"/><text x="82.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="580" width="13" height="15" fill="rgb(207,191,52)"/><text x="82.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="596" width="13" height="15" fill="rgb(247,20,13)"/><text x="82.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="612" width="13" height="15" fill="rgb(223,117,36)"/><text x="82.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.11%)</title><rect x="79" y="628" width="13" height="15" fill="rgb(226,103,50)"/><text x="82.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="644" width="13" height="15" fill="rgb(219,88,32)"/><text x="82.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="660" width="13" height="15" fill="rgb(221,120,8)"/><text x="82.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="676" width="13" height="15" fill="rgb(206,23,3)"/><text x="82.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="692" width="13" height="15" fill="rgb(235,122,44)"/><text x="82.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="708" width="13" height="15" fill="rgb(238,141,50)"/><text x="82.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.11%)</title><rect x="79" y="724" width="13" height="15" fill="rgb(243,204,42)"/><text x="82.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="740" width="13" height="15" fill="rgb(235,113,25)"/><text x="82.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="756" width="13" height="15" fill="rgb(247,161,18)"/><text x="82.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="772" width="13" height="15" fill="rgb(220,20,49)"/><text x="82.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="788" width="13" height="15" fill="rgb(205,62,6)"/><text x="82.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="804" width="13" height="15" fill="rgb(210,35,53)"/><text x="82.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.11%)</title><rect x="79" y="820" width="13" height="15" fill="rgb(234,63,9)"/><text x="82.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="836" width="13" height="15" fill="rgb(222,160,46)"/><text x="82.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="852" width="13" height="15" fill="rgb(211,61,24)"/><text x="82.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="868" width="13" height="15" fill="rgb(250,82,40)"/><text x="82.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="884" width="13" height="15" fill="rgb(252,105,32)"/><text x="82.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="900" width="13" height="15" fill="rgb(234,84,29)"/><text x="82.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.11%)</title><rect x="79" y="916" width="13" height="15" fill="rgb(221,69,25)"/><text x="82.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="932" width="13" height="15" fill="rgb(209,223,49)"/><text x="82.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="948" width="13" height="15" fill="rgb(247,46,33)"/><text x="82.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="964" width="13" height="15" fill="rgb(243,221,48)"/><text x="82.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="980" width="13" height="15" fill="rgb(206,66,8)"/><text x="82.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="996" width="13" height="15" fill="rgb(213,150,53)"/><text x="82.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.11%)</title><rect x="79" y="1012" width="13" height="15" fill="rgb(205,66,19)"/><text x="82.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1028" width="13" height="15" fill="rgb(250,157,41)"/><text x="82.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1044" width="13" height="15" fill="rgb(221,227,38)"/><text x="82.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1060" width="13" height="15" fill="rgb(232,14,41)"/><text x="82.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="1076" width="13" height="15" fill="rgb(207,60,16)"/><text x="82.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1092" width="13" height="15" fill="rgb(244,21,9)"/><text x="82.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 1.11%)</title><rect x="79" y="1108" width="13" height="15" fill="rgb(208,226,3)"/><text x="82.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1124" width="13" height="15" fill="rgb(205,114,18)"/><text x="82.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1140" width="13" height="15" fill="rgb(221,9,3)"/><text x="82.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1156" width="13" height="15" fill="rgb(247,43,35)"/><text x="82.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="1172" width="13" height="15" fill="rgb(208,147,37)"/><text x="82.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1188" width="13" height="15" fill="rgb(253,219,28)"/><text x="82.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 1.11%)</title><rect x="79" y="1204" width="13" height="15" fill="rgb(233,80,49)"/><text x="82.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1220" width="13" height="15" fill="rgb(254,135,29)"/><text x="82.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1236" width="13" height="15" fill="rgb(237,67,10)"/><text x="82.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1252" width="13" height="15" fill="rgb(232,104,32)"/><text x="82.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="1268" width="13" height="15" fill="rgb(219,56,39)"/><text x="82.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1284" width="13" height="15" fill="rgb(211,57,25)"/><text x="82.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 1.11%)</title><rect x="79" y="1300" width="13" height="15" fill="rgb(209,161,2)"/><text x="82.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1316" width="13" height="15" fill="rgb(207,104,6)"/><text x="82.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1332" width="13" height="15" fill="rgb(251,81,35)"/><text x="82.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1348" width="13" height="15" fill="rgb(225,9,19)"/><text x="82.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="1364" width="13" height="15" fill="rgb(235,147,13)"/><text x="82.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1380" width="13" height="15" fill="rgb(241,85,7)"/><text x="82.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 1.11%)</title><rect x="79" y="1396" width="13" height="15" fill="rgb(247,225,14)"/><text x="82.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1412" width="13" height="15" fill="rgb(217,183,9)"/><text x="82.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1428" width="13" height="15" fill="rgb(218,181,47)"/><text x="82.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1444" width="13" height="15" fill="rgb(252,115,16)"/><text x="82.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.11%)</title><rect x="79" y="1460" width="13" height="15" fill="rgb(233,77,26)"/><text x="82.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.11%)</title><rect x="79" y="1476" width="13" height="15" fill="rgb(242,17,10)"/><text x="82.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 1.11%)</title><rect x="79" y="1492" width="13" height="15" fill="rgb(218,129,51)"/><text x="82.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1508" width="8" height="15" fill="rgb(244,61,4)"/><text x="87.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1524" width="8" height="15" fill="rgb(247,165,16)"/><text x="87.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1540" width="8" height="15" fill="rgb(246,210,23)"/><text x="87.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1556" width="8" height="15" fill="rgb(221,158,1)"/><text x="87.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1572" width="8" height="15" fill="rgb(235,11,38)"/><text x="87.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="84" y="1588" width="8" height="15" fill="rgb(253,116,0)"/><text x="87.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1604" width="8" height="15" fill="rgb(213,4,33)"/><text x="87.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py) (2 samples, 0.74%)</title><rect x="84" y="1620" width="8" height="15" fill="rgb(220,121,20)"/><text x="87.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1636" width="8" height="15" fill="rgb(210,101,11)"/><text x="87.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1652" width="8" height="15" fill="rgb(220,33,46)"/><text x="87.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1668" width="8" height="15" fill="rgb(210,179,38)"/><text x="87.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.74%)</title><rect x="84" y="1684" width="8" height="15" fill="rgb(242,177,5)"/><text x="87.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1700" width="8" height="15" fill="rgb(232,48,34)"/><text x="87.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py) (2 samples, 0.74%)</title><rect x="84" y="1716" width="8" height="15" fill="rgb(217,125,17)"/><text x="87.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1732" width="8" height="15" fill="rgb(238,162,2)"/><text x="87.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="84" y="1748" width="8" height="15" fill="rgb(226,195,49)"/><text x="87.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="88" y="1764" width="4" height="15" fill="rgb(215,134,37)"/><text x="91.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="88" y="1780" width="4" height="15" fill="rgb(211,169,41)"/><text x="91.00" y="1790.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="88" y="1796" width="4" height="15" fill="rgb(243,209,48)"/><text x="91.00" y="1806.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="88" y="1812" width="4" height="15" fill="rgb(222,51,17)"/><text x="91.00" y="1822.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="88" y="1828" width="4" height="15" fill="rgb(240,166,34)"/><text x="91.00" y="1838.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 7.38%)</title><rect x="10" y="68" width="87" height="15" fill="rgb(251,148,20)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 7.38%)</title><rect x="10" y="84" width="87" height="15" fill="rgb(236,39,4)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 7.38%)</title><rect x="10" y="100" width="87" height="15" fill="rgb(253,171,39)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 7.38%)</title><rect x="10" y="116" width="87" height="15" fill="rgb(218,18,25)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 7.38%)</title><rect x="10" y="132" width="87" height="15" fill="rgb(236,228,5)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py) (20 samples, 7.38%)</title><rect x="10" y="148" width="87" height="15" fill="rgb(207,66,20)"/><text x="13.00" y="158.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 7.38%)</title><rect x="10" y="164" width="87" height="15" fill="rgb(247,38,34)"/><text x="13.00" y="174.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 7.38%)</title><rect x="10" y="180" width="87" height="15" fill="rgb(216,75,50)"/><text x="13.00" y="190.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.06%)</title><rect x="49" y="196" width="48" height="15" fill="rgb(216,20,39)"/><text x="52.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.06%)</title><rect x="49" y="212" width="48" height="15" fill="rgb(235,161,10)"/><text x="52.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.06%)</title><rect x="49" y="228" width="48" height="15" fill="rgb(213,137,25)"/><text x="52.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 4.06%)</title><rect x="49" y="244" width="48" height="15" fill="rgb(252,16,4)"/><text x="52.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.06%)</title><rect x="49" y="260" width="48" height="15" fill="rgb(228,4,21)"/><text x="52.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.06%)</title><rect x="49" y="276" width="48" height="15" fill="rgb(251,146,12)"/><text x="52.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.06%)</title><rect x="49" y="292" width="48" height="15" fill="rgb(241,82,46)"/><text x="52.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 4.06%)</title><rect x="49" y="308" width="48" height="15" fill="rgb(208,90,18)"/><text x="52.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 4.06%)</title><rect x="49" y="324" width="48" height="15" fill="rgb(210,58,26)"/><text x="52.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.37%)</title><rect x="92" y="340" width="5" height="15" fill="rgb(218,201,29)"/><text x="95.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="356" width="5" height="15" fill="rgb(217,143,7)"/><text x="95.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="372" width="5" height="15" fill="rgb(225,43,32)"/><text x="95.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="388" width="5" height="15" fill="rgb(223,83,7)"/><text x="95.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="404" width="5" height="15" fill="rgb(220,145,34)"/><text x="95.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="420" width="5" height="15" fill="rgb(239,68,26)"/><text x="95.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="436" width="5" height="15" fill="rgb(233,183,31)"/><text x="95.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="452" width="5" height="15" fill="rgb(205,179,8)"/><text x="95.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="468" width="5" height="15" fill="rgb(217,165,13)"/><text x="95.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.37%)</title><rect x="92" y="484" width="5" height="15" fill="rgb(249,74,42)"/><text x="95.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="500" width="5" height="15" fill="rgb(212,100,32)"/><text x="95.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="516" width="5" height="15" fill="rgb(212,122,51)"/><text x="95.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="532" width="5" height="15" fill="rgb(220,33,5)"/><text x="95.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="548" width="5" height="15" fill="rgb(220,166,9)"/><text x="95.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="564" width="5" height="15" fill="rgb(207,176,17)"/><text x="95.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.37%)</title><rect x="92" y="580" width="5" height="15" fill="rgb(214,145,36)"/><text x="95.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="596" width="5" height="15" fill="rgb(245,21,47)"/><text x="95.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="612" width="5" height="15" fill="rgb(253,208,34)"/><text x="95.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="628" width="5" height="15" fill="rgb(212,63,16)"/><text x="95.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="644" width="5" height="15" fill="rgb(225,170,39)"/><text x="95.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="660" width="5" height="15" fill="rgb(211,54,43)"/><text x="95.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.37%)</title><rect x="92" y="676" width="5" height="15" fill="rgb(250,103,49)"/><text x="95.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="692" width="5" height="15" fill="rgb(209,77,44)"/><text x="95.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="708" width="5" height="15" fill="rgb(223,226,49)"/><text x="95.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="724" width="5" height="15" fill="rgb(219,113,28)"/><text x="95.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="740" width="5" height="15" fill="rgb(244,22,33)"/><text x="95.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="756" width="5" height="15" fill="rgb(244,134,10)"/><text x="95.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.37%)</title><rect x="92" y="772" width="5" height="15" fill="rgb(235,11,21)"/><text x="95.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="788" width="5" height="15" fill="rgb(234,200,36)"/><text x="95.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="804" width="5" height="15" fill="rgb(217,135,47)"/><text x="95.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="820" width="5" height="15" fill="rgb(242,63,20)"/><text x="95.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="836" width="5" height="15" fill="rgb(221,9,42)"/><text x="95.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="852" width="5" height="15" fill="rgb(243,63,2)"/><text x="95.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="868" width="5" height="15" fill="rgb(236,225,3)"/><text x="95.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="884" width="5" height="15" fill="rgb(224,59,54)"/><text x="95.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.37%)</title><rect x="92" y="900" width="5" height="15" fill="rgb(210,110,22)"/><text x="95.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="916" width="5" height="15" fill="rgb(248,45,45)"/><text x="95.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="932" width="5" height="15" fill="rgb(211,223,20)"/><text x="95.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="948" width="5" height="15" fill="rgb(213,89,42)"/><text x="95.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="964" width="5" height="15" fill="rgb(228,75,33)"/><text x="95.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="980" width="5" height="15" fill="rgb(215,32,23)"/><text x="95.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.37%)</title><rect x="92" y="996" width="5" height="15" fill="rgb(220,203,36)"/><text x="95.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1012" width="5" height="15" fill="rgb(230,82,11)"/><text x="95.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1028" width="5" height="15" fill="rgb(214,70,28)"/><text x="95.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1044" width="5" height="15" fill="rgb(238,41,12)"/><text x="95.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="1060" width="5" height="15" fill="rgb(208,175,25)"/><text x="95.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1076" width="5" height="15" fill="rgb(208,42,26)"/><text x="95.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.37%)</title><rect x="92" y="1092" width="5" height="15" fill="rgb(205,31,12)"/><text x="95.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1108" width="5" height="15" fill="rgb(247,171,39)"/><text x="95.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1124" width="5" height="15" fill="rgb(208,112,27)"/><text x="95.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1140" width="5" height="15" fill="rgb(229,43,50)"/><text x="95.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1156" width="5" height="15" fill="rgb(209,137,10)"/><text x="95.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1172" width="5" height="15" fill="rgb(206,101,41)"/><text x="95.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.37%)</title><rect x="92" y="1188" width="5" height="15" fill="rgb(205,171,18)"/><text x="95.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.37%)</title><rect x="92" y="1204" width="5" height="15" fill="rgb(216,162,11)"/><text x="95.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py) (1 samples, 0.37%)</title><rect x="92" y="1220" width="5" height="15" fill="rgb(227,205,11)"/><text x="95.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.37%)</title><rect x="92" y="1236" width="5" height="15" fill="rgb(240,45,38)"/><text x="95.00" y="1246.50"></text></g><g><title>_compile (re.py) (1 samples, 0.37%)</title><rect x="92" y="1252" width="5" height="15" fill="rgb(243,190,46)"/><text x="95.00" y="1262.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.37%)</title><rect x="92" y="1268" width="5" height="15" fill="rgb(240,12,15)"/><text x="95.00" y="1278.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.37%)</title><rect x="92" y="1284" width="5" height="15" fill="rgb(224,74,49)"/><text x="95.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.37%)</title><rect x="92" y="1300" width="5" height="15" fill="rgb(216,63,15)"/><text x="95.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.37%)</title><rect x="92" y="1316" width="5" height="15" fill="rgb(253,112,34)"/><text x="95.00" y="1326.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.37%)</title><rect x="92" y="1332" width="5" height="15" fill="rgb(244,135,16)"/><text x="95.00" y="1342.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.37%)</title><rect x="92" y="1348" width="5" height="15" fill="rgb(236,161,8)"/><text x="95.00" y="1358.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.74%)</title><rect x="101" y="116" width="9" height="15" fill="rgb(245,28,7)"/><text x="104.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.74%)</title><rect x="101" y="132" width="9" height="15" fill="rgb(233,62,26)"/><text x="104.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.37%)</title><rect x="105" y="148" width="5" height="15" fill="rgb(211,119,33)"/><text x="108.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.37%)</title><rect x="171" y="180" width="4" height="15" fill="rgb(235,33,37)"/><text x="174.00" y="190.50"></text></g><g><title>0x7fd8ee9b5ff9 (?) (1 samples, 0.37%)</title><rect x="205" y="212" width="5" height="15" fill="rgb(214,228,7)"/><text x="208.00" y="222.50"></text></g><g><title>0x7fd8ee9b0ef6 (?) (1 samples, 0.37%)</title><rect x="205" y="228" width="5" height="15" fill="rgb(217,4,10)"/><text x="208.00" y="238.50"></text></g><g><title>0x7fd8ee9a5d49 (?) (1 samples, 0.37%)</title><rect x="205" y="244" width="5" height="15" fill="rgb(238,139,47)"/><text x="208.00" y="254.50"></text></g><g><title>0x7fd8ee9b3c1a (?) (1 samples, 0.37%)</title><rect x="205" y="260" width="5" height="15" fill="rgb(216,77,30)"/><text x="208.00" y="270.50"></text></g><g><title>0x7fd8eedd8e0e (?) (1 samples, 0.37%)</title><rect x="205" y="276" width="5" height="15" fill="rgb(216,221,5)"/><text x="208.00" y="286.50"></text></g><g><title>0x7fd8eee1bf61 (?) (1 samples, 0.37%)</title><rect x="205" y="292" width="5" height="15" fill="rgb(247,54,49)"/><text x="208.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.48%)</title><rect x="210" y="212" width="17" height="15" fill="rgb(217,229,38)"/><text x="213.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="223" y="228" width="4" height="15" fill="rgb(246,137,40)"/><text x="226.00" y="238.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="232" y="228" width="4" height="15" fill="rgb(230,190,18)"/><text x="235.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="232" y="244" width="4" height="15" fill="rgb(238,51,15)"/><text x="235.00" y="254.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="236" y="228" width="4" height="15" fill="rgb(230,154,8)"/><text x="239.00" y="238.50"></text></g><g><title>0x7fd930985965 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="236" y="244" width="4" height="15" fill="rgb(213,63,1)"/><text x="239.00" y="254.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (2 samples, 0.74%)</title><rect x="240" y="260" width="9" height="15" fill="rgb(251,219,26)"/><text x="243.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="249" y="260" width="4" height="15" fill="rgb(249,4,47)"/><text x="252.00" y="270.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="249" y="276" width="4" height="15" fill="rgb(241,76,32)"/><text x="252.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="249" y="292" width="4" height="15" fill="rgb(232,63,53)"/><text x="252.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="253" y="292" width="5" height="15" fill="rgb(240,40,33)"/><text x="256.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="258" y="292" width="4" height="15" fill="rgb(210,75,15)"/><text x="261.00" y="302.50"></text></g><g><title>0x7fd93098590a (libc-2.29.so) (1 samples, 0.37%)</title><rect x="258" y="308" width="4" height="15" fill="rgb(236,120,32)"/><text x="261.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="262" y="292" width="4" height="15" fill="rgb(243,219,18)"/><text x="265.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="271" y="340" width="8" height="15" fill="rgb(214,64,0)"/><text x="274.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="275" y="356" width="4" height="15" fill="rgb(207,172,34)"/><text x="278.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="275" y="372" width="4" height="15" fill="rgb(250,144,45)"/><text x="278.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="275" y="388" width="4" height="15" fill="rgb(225,122,5)"/><text x="278.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::~IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="279" y="340" width="5" height="15" fill="rgb(247,21,20)"/><text x="282.00" y="350.50"></text></g><g><title>onnxruntime::PrimitiveDataType&lt;float&gt;::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="284" y="452" width="4" height="15" fill="rgb(244,79,24)"/><text x="287.00" y="462.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.32%)</title><rect x="253" y="260" width="40" height="15" fill="rgb(221,127,44)"/><text x="256.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.32%)</title><rect x="253" y="276" width="40" height="15" fill="rgb(223,215,1)"/><text x="256.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.21%)</title><rect x="266" y="292" width="27" height="15" fill="rgb(227,56,30)"/><text x="269.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.21%)</title><rect x="266" y="308" width="27" height="15" fill="rgb(205,69,40)"/><text x="269.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 2.21%)</title><rect x="266" y="324" width="27" height="15" fill="rgb(252,108,10)"/><text x="269.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="340" width="9" height="15" fill="rgb(249,189,16)"/><text x="287.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="356" width="9" height="15" fill="rgb(242,76,43)"/><text x="287.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="372" width="9" height="15" fill="rgb(218,204,30)"/><text x="287.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="388" width="9" height="15" fill="rgb(234,107,42)"/><text x="287.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="404" width="9" height="15" fill="rgb(232,136,17)"/><text x="287.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="420" width="9" height="15" fill="rgb(217,106,31)"/><text x="287.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="284" y="436" width="9" height="15" fill="rgb(214,6,19)"/><text x="287.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="288" y="452" width="5" height="15" fill="rgb(207,126,5)"/><text x="291.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="288" y="468" width="5" height="15" fill="rgb(239,36,43)"/><text x="291.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::RoundedBytes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="288" y="484" width="5" height="15" fill="rgb(224,107,17)"/><text x="291.00" y="494.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="293" y="260" width="8" height="15" fill="rgb(248,142,37)"/><text x="296.00" y="270.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="301" y="260" width="5" height="15" fill="rgb(244,217,44)"/><text x="304.00" y="270.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.74%)</title><rect x="306" y="260" width="8" height="15" fill="rgb(240,96,37)"/><text x="309.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.37%)</title><rect x="310" y="276" width="4" height="15" fill="rgb(254,133,11)"/><text x="313.00" y="286.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="314" y="260" width="5" height="15" fill="rgb(254,31,52)"/><text x="317.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="319" y="260" width="4" height="15" fill="rgb(223,1,29)"/><text x="322.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="319" y="276" width="4" height="15" fill="rgb(224,97,30)"/><text x="322.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="319" y="292" width="4" height="15" fill="rgb(224,178,21)"/><text x="322.00" y="302.50"></text></g><g><title>0x7fd9204527a0 (libstdc++.so.6.0.28) (1 samples, 0.37%)</title><rect x="319" y="308" width="4" height="15" fill="rgb(229,94,33)"/><text x="322.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 7.75%)</title><rect x="240" y="244" width="92" height="15" fill="rgb(248,156,20)"/><text x="243.00" y="254.50">onnxruntim..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.74%)</title><rect x="323" y="260" width="9" height="15" fill="rgb(229,119,47)"/><text x="326.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="276" width="5" height="15" fill="rgb(238,209,38)"/><text x="330.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="292" width="5" height="15" fill="rgb(209,196,32)"/><text x="330.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="308" width="5" height="15" fill="rgb(250,172,3)"/><text x="330.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="324" width="5" height="15" fill="rgb(246,133,13)"/><text x="330.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="340" width="5" height="15" fill="rgb(207,110,12)"/><text x="330.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="356" width="5" height="15" fill="rgb(215,15,41)"/><text x="330.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="372" width="5" height="15" fill="rgb(222,73,51)"/><text x="330.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="327" y="388" width="5" height="15" fill="rgb(207,32,1)"/><text x="330.00" y="398.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (50 samples, 18.45%)</title><rect x="118" y="132" width="218" height="15" fill="rgb(232,30,13)"/><text x="121.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (46 samples, 16.97%)</title><rect x="136" y="148" width="200" height="15" fill="rgb(235,116,16)"/><text x="139.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (40 samples, 14.76%)</title><rect x="162" y="164" width="174" height="15" fill="rgb(205,72,28)"/><text x="165.00" y="174.50">_run_whole_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (37 samples, 13.65%)</title><rect x="175" y="180" width="161" height="15" fill="rgb(212,205,29)"/><text x="178.00" y="190.50">run (mlprodict/onnxr..</text></g><g><title>run (onnxruntime/capi/session.py) (34 samples, 12.55%)</title><rect x="188" y="196" width="148" height="15" fill="rgb(235,156,30)"/><text x="191.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 9.23%)</title><rect x="227" y="212" width="109" height="15" fill="rgb(217,7,29)"/><text x="230.00" y="222.50">pybind11::cpp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 8.12%)</title><rect x="240" y="228" width="96" height="15" fill="rgb(223,228,15)"/><text x="243.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="332" y="244" width="4" height="15" fill="rgb(205,140,33)"/><text x="335.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.37%)</title><rect x="332" y="260" width="4" height="15" fill="rgb(222,127,16)"/><text x="335.00" y="270.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (56 samples, 20.66%)</title><rect x="97" y="68" width="243" height="15" fill="rgb(234,102,14)"/><text x="100.00" y="78.50">profile_ort (bench_LinearRegress..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (56 samples, 20.66%)</title><rect x="97" y="84" width="243" height="15" fill="rgb(230,169,20)"/><text x="100.00" y="94.50">setup_profile (bench_LinearRegre..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (56 samples, 20.66%)</title><rect x="97" y="100" width="243" height="15" fill="rgb(207,147,28)"/><text x="100.00" y="110.50">profile (bench_LinearRegression_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (53 samples, 19.56%)</title><rect x="110" y="116" width="230" height="15" fill="rgb(217,142,2)"/><text x="113.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.37%)</title><rect x="336" y="132" width="4" height="15" fill="rgb(213,0,16)"/><text x="339.00" y="142.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.37%)</title><rect x="340" y="116" width="5" height="15" fill="rgb(220,193,2)"/><text x="343.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.37%)</title><rect x="340" y="132" width="5" height="15" fill="rgb(225,156,4)"/><text x="343.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.37%)</title><rect x="340" y="148" width="5" height="15" fill="rgb(220,75,41)"/><text x="343.00" y="158.50"></text></g><g><title>array_free (arrayobject.c) (1 samples, 0.37%)</title><rect x="345" y="116" width="4" height="15" fill="rgb(239,222,47)"/><text x="348.00" y="126.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.37%)</title><rect x="401" y="180" width="5" height="15" fill="rgb(243,157,15)"/><text x="404.00" y="190.50"></text></g><g><title>0x7fd92fba8dd0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.37%)</title><rect x="488" y="308" width="5" height="15" fill="rgb(217,96,52)"/><text x="491.00" y="318.50"></text></g><g><title>PyArray_ObjectType (convert_datatype.c) (1 samples, 0.37%)</title><rect x="493" y="324" width="4" height="15" fill="rgb(207,52,52)"/><text x="496.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (1 samples, 0.37%)</title><rect x="493" y="340" width="4" height="15" fill="rgb(245,212,13)"/><text x="496.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (1 samples, 0.37%)</title><rect x="493" y="356" width="4" height="15" fill="rgb(223,10,10)"/><text x="496.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.37%)</title><rect x="493" y="372" width="4" height="15" fill="rgb(212,0,10)"/><text x="496.00" y="382.50"></text></g><g><title>FLOAT_dot (arraytypes.c.src) (1 samples, 0.37%)</title><rect x="497" y="340" width="5" height="15" fill="rgb(244,165,37)"/><text x="500.00" y="350.50"></text></g><g><title>sdot_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.37%)</title><rect x="497" y="356" width="5" height="15" fill="rgb(226,112,46)"/><text x="500.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="502" y="340" width="4" height="15" fill="rgb(221,22,38)"/><text x="505.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (15 samples, 5.54%)</title><rect x="449" y="244" width="66" height="15" fill="rgb(230,91,52)"/><text x="452.00" y="254.50">numpy_d..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (11 samples, 4.06%)</title><rect x="467" y="260" width="48" height="15" fill="rgb(220,109,9)"/><text x="470.00" y="270.50">dot ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (8 samples, 2.95%)</title><rect x="480" y="276" width="35" height="15" fill="rgb(219,30,18)"/><text x="483.00" y="286.50">ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (7 samples, 2.58%)</title><rect x="484" y="292" width="31" height="15" fill="rgb(219,197,4)"/><text x="487.00" y="302.50">ar..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (5 samples, 1.85%)</title><rect x="493" y="308" width="22" height="15" fill="rgb(232,212,22)"/><text x="496.00" y="318.50">P..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (4 samples, 1.48%)</title><rect x="497" y="324" width="18" height="15" fill="rgb(219,15,34)"/><text x="500.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.74%)</title><rect x="506" y="340" width="9" height="15" fill="rgb(217,213,38)"/><text x="509.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.74%)</title><rect x="506" y="356" width="9" height="15" fill="rgb(233,7,51)"/><text x="509.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.37%)</title><rect x="510" y="372" width="5" height="15" fill="rgb(206,8,22)"/><text x="513.00" y="382.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="523" y="276" width="5" height="15" fill="rgb(222,140,41)"/><text x="526.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="523" y="292" width="5" height="15" fill="rgb(251,177,20)"/><text x="526.00" y="302.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="528" y="292" width="4" height="15" fill="rgb(234,153,53)"/><text x="531.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.37%)</title><rect x="532" y="308" width="4" height="15" fill="rgb(208,112,0)"/><text x="535.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.37%)</title><rect x="536" y="324" width="5" height="15" fill="rgb(234,142,30)"/><text x="539.00" y="334.50"></text></g><g><title>npyiter_compute_index_strides (nditer_constr.c) (1 samples, 0.37%)</title><rect x="541" y="324" width="4" height="15" fill="rgb(254,70,40)"/><text x="544.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 2.21%)</title><rect x="523" y="260" width="26" height="15" fill="rgb(222,148,35)"/><text x="526.00" y="270.50">P..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (5 samples, 1.85%)</title><rect x="528" y="276" width="21" height="15" fill="rgb(209,117,20)"/><text x="531.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.48%)</title><rect x="532" y="292" width="17" height="15" fill="rgb(231,14,44)"/><text x="535.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (3 samples, 1.11%)</title><rect x="536" y="308" width="13" height="15" fill="rgb(221,86,13)"/><text x="539.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.37%)</title><rect x="545" y="324" width="4" height="15" fill="rgb(226,107,49)"/><text x="548.00" y="334.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (50 samples, 18.45%)</title><rect x="340" y="68" width="218" height="15" fill="rgb(251,63,48)"/><text x="343.00" y="78.50">profile_pyrt (bench_LinearRe..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (50 samples, 18.45%)</title><rect x="340" y="84" width="218" height="15" fill="rgb(206,148,7)"/><text x="343.00" y="94.50">setup_profile (bench_LinearR..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (50 samples, 18.45%)</title><rect x="340" y="100" width="218" height="15" fill="rgb(227,164,54)"/><text x="343.00" y="110.50">profile (bench_LinearRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 17.71%)</title><rect x="349" y="116" width="209" height="15" fill="rgb(248,137,18)"/><text x="352.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 17.71%)</title><rect x="349" y="132" width="209" height="15" fill="rgb(209,26,2)"/><text x="352.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (47 samples, 17.34%)</title><rect x="353" y="148" width="205" height="15" fill="rgb(250,132,4)"/><text x="356.00" y="158.50">run (mlprodict/onnxrt/onnx..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (43 samples, 15.87%)</title><rect x="371" y="164" width="187" height="15" fill="rgb(229,9,32)"/><text x="374.00" y="174.50">_run_sequence_runtime (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (35 samples, 12.92%)</title><rect x="406" y="180" width="152" height="15" fill="rgb(225,104,31)"/><text x="409.00" y="190.50">run (mlprodict/onnx..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 11.07%)</title><rect x="428" y="196" width="130" height="15" fill="rgb(207,208,49)"/><text x="431.00" y="206.50">run (mlprodict/o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (28 samples, 10.33%)</title><rect x="436" y="212" width="122" height="15" fill="rgb(205,161,17)"/><text x="439.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (26 samples, 9.59%)</title><rect x="445" y="228" width="113" height="15" fill="rgb(218,145,11)"/><text x="448.00" y="238.50">_run (mlprodi..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 3.69%)</title><rect x="515" y="244" width="43" height="15" fill="rgb(214,39,22)"/><text x="518.00" y="254.50">ufun..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (2 samples, 0.74%)</title><rect x="549" y="260" width="9" height="15" fill="rgb(224,85,20)"/><text x="552.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.37%)</title><rect x="571" y="132" width="5" height="15" fill="rgb(233,162,26)"/><text x="574.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.37%)</title><rect x="571" y="148" width="5" height="15" fill="rgb(254,200,47)"/><text x="574.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.74%)</title><rect x="571" y="116" width="9" height="15" fill="rgb(238,78,49)"/><text x="574.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.37%)</title><rect x="576" y="132" width="4" height="15" fill="rgb(208,222,34)"/><text x="579.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.37%)</title><rect x="576" y="148" width="4" height="15" fill="rgb(210,193,21)"/><text x="579.00" y="158.50"></text></g><g><title>try_binary_elide (temp_elide.c) (2 samples, 0.74%)</title><rect x="632" y="196" width="9" height="15" fill="rgb(216,34,50)"/><text x="635.00" y="206.50"></text></g><g><title>can_elide_temp (temp_elide.c) (1 samples, 0.37%)</title><rect x="637" y="212" width="4" height="15" fill="rgb(227,200,11)"/><text x="640.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 1.11%)</title><rect x="641" y="212" width="13" height="15" fill="rgb(250,81,44)"/><text x="644.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 1.11%)</title><rect x="641" y="228" width="13" height="15" fill="rgb(241,124,5)"/><text x="644.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 1.11%)</title><rect x="641" y="244" width="13" height="15" fill="rgb(242,12,40)"/><text x="644.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 1.11%)</title><rect x="641" y="260" width="13" height="15" fill="rgb(239,104,50)"/><text x="644.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 1.11%)</title><rect x="641" y="276" width="13" height="15" fill="rgb(212,70,42)"/><text x="644.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="658" y="228" width="5" height="15" fill="rgb(229,193,3)"/><text x="661.00" y="238.50"></text></g><g><title>array_add (number.c) (10 samples, 3.69%)</title><rect x="628" y="180" width="43" height="15" fill="rgb(242,117,29)"/><text x="631.00" y="190.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 2.58%)</title><rect x="641" y="196" width="30" height="15" fill="rgb(218,160,36)"/><text x="644.00" y="206.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 1.48%)</title><rect x="654" y="212" width="17" height="15" fill="rgb(246,128,44)"/><text x="657.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (2 samples, 0.74%)</title><rect x="663" y="228" width="8" height="15" fill="rgb(243,62,27)"/><text x="666.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.74%)</title><rect x="663" y="244" width="8" height="15" fill="rgb(216,174,49)"/><text x="666.00" y="254.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (2 samples, 0.74%)</title><rect x="663" y="260" width="8" height="15" fill="rgb(224,210,19)"/><text x="666.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.37%)</title><rect x="667" y="276" width="4" height="15" fill="rgb(212,63,4)"/><text x="670.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.37%)</title><rect x="667" y="292" width="4" height="15" fill="rgb(229,12,52)"/><text x="670.00" y="302.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 1.11%)</title><rect x="728" y="196" width="13" height="15" fill="rgb(215,46,7)"/><text x="731.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (2 samples, 0.74%)</title><rect x="741" y="196" width="9" height="15" fill="rgb(210,90,28)"/><text x="744.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 1.11%)</title><rect x="750" y="196" width="13" height="15" fill="rgb(218,39,29)"/><text x="753.00" y="206.50"></text></g><g><title>0x7fd930a640f1 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="785" y="212" width="4" height="15" fill="rgb(213,3,9)"/><text x="788.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.74%)</title><rect x="789" y="212" width="9" height="15" fill="rgb(237,96,53)"/><text x="792.00" y="222.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.74%)</title><rect x="798" y="212" width="8" height="15" fill="rgb(244,1,19)"/><text x="801.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (15 samples, 5.54%)</title><rect x="763" y="196" width="65" height="15" fill="rgb(236,201,49)"/><text x="766.00" y="206.50">_assert..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.85%)</title><rect x="806" y="212" width="22" height="15" fill="rgb(241,163,44)"/><text x="809.00" y="222.50">p..</text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 1.11%)</title><rect x="828" y="196" width="13" height="15" fill="rgb(232,22,16)"/><text x="831.00" y="206.50"></text></g><g><title>0x7fd93099bb7f (libc-2.29.so) (1 samples, 0.37%)</title><rect x="906" y="212" width="5" height="15" fill="rgb(214,134,27)"/><text x="909.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.74%)</title><rect x="911" y="212" width="9" height="15" fill="rgb(224,14,11)"/><text x="914.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (22 samples, 8.12%)</title><rect x="841" y="196" width="96" height="15" fill="rgb(230,183,52)"/><text x="844.00" y="206.50">_num_sample..</text></g><g><title>__instancecheck__ (abc.py) (4 samples, 1.48%)</title><rect x="920" y="212" width="17" height="15" fill="rgb(240,193,12)"/><text x="923.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.37%)</title><rect x="937" y="196" width="4" height="15" fill="rgb(215,54,12)"/><text x="940.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.74%)</title><rect x="941" y="196" width="9" height="15" fill="rgb(216,150,22)"/><text x="944.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.37%)</title><rect x="954" y="212" width="5" height="15" fill="rgb(241,163,46)"/><text x="957.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (7 samples, 2.58%)</title><rect x="950" y="196" width="30" height="15" fill="rgb(248,119,14)"/><text x="953.00" y="206.50">is..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (5 samples, 1.85%)</title><rect x="959" y="212" width="21" height="15" fill="rgb(211,59,26)"/><text x="962.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (82 samples, 30.26%)</title><rect x="671" y="180" width="357" height="15" fill="rgb(232,176,8)"/><text x="674.00" y="190.50">check_array (sklearn/utils/validation.py)</text></g><g><title>simplefilter (warnings.py) (11 samples, 4.06%)</title><rect x="980" y="196" width="48" height="15" fill="rgb(206,57,50)"/><text x="983.00" y="206.50">simp..</text></g><g><title>_add_filter (warnings.py) (8 samples, 2.95%)</title><rect x="994" y="212" width="34" height="15" fill="rgb(228,222,11)"/><text x="997.00" y="222.50">_a..</text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.37%)</title><rect x="1059" y="212" width="4" height="15" fill="rgb(209,75,0)"/><text x="1062.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 4.43%)</title><rect x="1028" y="180" width="53" height="15" fill="rgb(244,2,35)"/><text x="1031.00" y="190.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 2.58%)</title><rect x="1050" y="196" width="31" height="15" fill="rgb(244,73,8)"/><text x="1053.00" y="206.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (4 samples, 1.48%)</title><rect x="1063" y="212" width="18" height="15" fill="rgb(206,30,54)"/><text x="1066.00" y="222.50"></text></g><g><title>0x7fd9309a6144 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1089" y="196" width="5" height="15" fill="rgb(220,61,15)"/><text x="1092.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (4 samples, 1.48%)</title><rect x="1094" y="196" width="17" height="15" fill="rgb(246,172,15)"/><text x="1097.00" y="206.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.37%)</title><rect x="1129" y="308" width="4" height="15" fill="rgb(239,216,18)"/><text x="1132.00" y="318.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.37%)</title><rect x="1129" y="324" width="4" height="15" fill="rgb(209,9,2)"/><text x="1132.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.37%)</title><rect x="1133" y="308" width="4" height="15" fill="rgb(238,180,14)"/><text x="1136.00" y="318.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1133" y="324" width="4" height="15" fill="rgb(211,197,23)"/><text x="1136.00" y="334.50"></text></g><g><title>0x7fd9309a5d50 (libc-2.29.so) (1 samples, 0.37%)</title><rect x="1133" y="340" width="4" height="15" fill="rgb(235,202,44)"/><text x="1136.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.37%)</title><rect x="1137" y="308" width="5" height="15" fill="rgb(214,91,37)"/><text x="1140.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.37%)</title><rect x="1142" y="308" width="4" height="15" fill="rgb(220,206,47)"/><text x="1145.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 2.21%)</title><rect x="1124" y="276" width="26" height="15" fill="rgb(212,117,8)"/><text x="1127.00" y="286.50">P..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 1.85%)</title><rect x="1129" y="292" width="21" height="15" fill="rgb(230,89,29)"/><text x="1132.00" y="302.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.37%)</title><rect x="1146" y="308" width="4" height="15" fill="rgb(222,119,7)"/><text x="1149.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (7 samples, 2.58%)</title><rect x="1124" y="260" width="31" height="15" fill="rgb(243,22,21)"/><text x="1127.00" y="270.50">np..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.37%)</title><rect x="1150" y="276" width="5" height="15" fill="rgb(251,113,45)"/><text x="1153.00" y="286.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.37%)</title><rect x="1155" y="260" width="4" height="15" fill="rgb(239,75,41)"/><text x="1158.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (9 samples, 3.32%)</title><rect x="1124" y="244" width="39" height="15" fill="rgb(211,177,2)"/><text x="1127.00" y="254.50">Npy..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.37%)</title><rect x="1159" y="260" width="4" height="15" fill="rgb(247,149,32)"/><text x="1162.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.37%)</title><rect x="1163" y="244" width="5" height="15" fill="rgb(246,143,2)"/><text x="1166.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.37%)</title><rect x="1168" y="244" width="4" height="15" fill="rgb(210,56,8)"/><text x="1171.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.37%)</title><rect x="1168" y="260" width="4" height="15" fill="rgb(214,42,34)"/><text x="1171.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.74%)</title><rect x="1172" y="244" width="9" height="15" fill="rgb(237,131,5)"/><text x="1175.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.37%)</title><rect x="1176" y="260" width="5" height="15" fill="rgb(236,51,12)"/><text x="1179.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.37%)</title><rect x="1176" y="276" width="5" height="15" fill="rgb(209,11,31)"/><text x="1179.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.37%)</title><rect x="1176" y="292" width="5" height="15" fill="rgb(236,8,10)"/><text x="1179.00" y="302.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.37%)</title><rect x="1176" y="308" width="5" height="15" fill="rgb(252,209,38)"/><text x="1179.00" y="318.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (135 samples, 49.82%)</title><rect x="597" y="132" width="588" height="15" fill="rgb(219,168,28)"/><text x="600.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (133 samples, 49.08%)</title><rect x="606" y="148" width="579" height="15" fill="rgb(205,85,22)"/><text x="609.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (132 samples, 48.71%)</title><rect x="610" y="164" width="575" height="15" fill="rgb(214,39,34)"/><text x="613.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (24 samples, 8.86%)</title><rect x="1081" y="180" width="104" height="15" fill="rgb(211,136,27)"/><text x="1084.00" y="190.50">safe_sparse_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (17 samples, 6.27%)</title><rect x="1111" y="196" width="74" height="15" fill="rgb(246,57,37)"/><text x="1114.00" y="206.50">ufunc_ge..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (16 samples, 5.90%)</title><rect x="1115" y="212" width="70" height="15" fill="rgb(211,84,53)"/><text x="1118.00" y="222.50">PyUFunc..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (15 samples, 5.54%)</title><rect x="1120" y="228" width="65" height="15" fill="rgb(236,109,13)"/><text x="1123.00" y="238.50">PyUFunc..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.37%)</title><rect x="1181" y="244" width="4" height="15" fill="rgb(242,90,20)"/><text x="1184.00" y="254.50"></text></g><g><title>all (271 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(210,40,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (271 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(221,142,34)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (145 samples, 53.51%)</title><rect x="558" y="68" width="632" height="15" fill="rgb(229,81,13)"/><text x="561.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (145 samples, 53.51%)</title><rect x="558" y="84" width="632" height="15" fill="rgb(254,66,28)"/><text x="561.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py) (145 samples, 53.51%)</title><rect x="558" y="100" width="632" height="15" fill="rgb(240,226,41)"/><text x="561.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (140 samples, 51.66%)</title><rect x="580" y="116" width="610" height="15" fill="rgb(231,185,47)"/><text x="583.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.37%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(238,17,11)"/><text x="1188.00" y="142.50"></text></g></g></svg>