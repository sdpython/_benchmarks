<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:1) (1 samples, 0.16%)</title><rect x="10" y="148" width="1" height="15" fill="rgb(212,212,32)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="164" width="1" height="15" fill="rgb(208,166,12)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="180" width="1" height="15" fill="rgb(211,202,49)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="196" width="1" height="15" fill="rgb(245,13,41)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="212" width="1" height="15" fill="rgb(220,198,44)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="228" width="1" height="15" fill="rgb(248,163,31)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.16%)</title><rect x="10" y="244" width="1" height="15" fill="rgb(224,175,7)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="10" y="260" width="1" height="15" fill="rgb(218,180,11)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="276" width="1" height="15" fill="rgb(235,207,42)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="292" width="1" height="15" fill="rgb(225,63,25)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="308" width="1" height="15" fill="rgb(248,208,0)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="324" width="1" height="15" fill="rgb(220,136,12)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="340" width="1" height="15" fill="rgb(231,112,18)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="356" width="1" height="15" fill="rgb(242,13,21)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:100) (1 samples, 0.16%)</title><rect x="10" y="372" width="1" height="15" fill="rgb(226,86,41)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="10" y="388" width="1" height="15" fill="rgb(228,190,8)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="404" width="1" height="15" fill="rgb(220,50,45)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="10" y="420" width="1" height="15" fill="rgb(217,53,6)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="10" y="436" width="1" height="15" fill="rgb(252,184,50)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="10" y="452" width="1" height="15" fill="rgb(207,217,9)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="10" y="468" width="1" height="15" fill="rgb(212,68,21)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="10" y="484" width="1" height="15" fill="rgb(233,46,3)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py:526) (1 samples, 0.16%)</title><rect x="10" y="500" width="1" height="15" fill="rgb(248,25,43)"/><text x="13.00" y="510.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(208,32,46)"/><text x="18.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.16%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(215,210,43)"/><text x="18.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (4 samples, 0.63%)</title><rect x="11" y="852" width="8" height="15" fill="rgb(205,226,37)"/><text x="14.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (4 samples, 0.63%)</title><rect x="11" y="868" width="8" height="15" fill="rgb(247,70,1)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (4 samples, 0.63%)</title><rect x="11" y="884" width="8" height="15" fill="rgb(236,119,49)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (4 samples, 0.63%)</title><rect x="11" y="900" width="8" height="15" fill="rgb(231,112,37)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (4 samples, 0.63%)</title><rect x="11" y="916" width="8" height="15" fill="rgb(247,146,13)"/><text x="14.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (4 samples, 0.63%)</title><rect x="11" y="932" width="8" height="15" fill="rgb(251,195,29)"/><text x="14.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(246,135,42)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.16%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(237,206,43)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.16%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(246,212,12)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.16%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(233,176,38)"/><text x="20.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.16%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(230,95,33)"/><text x="20.00" y="1022.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (2 samples, 0.32%)</title><rect x="19" y="964" width="4" height="15" fill="rgb(250,218,19)"/><text x="22.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (2 samples, 0.32%)</title><rect x="19" y="980" width="4" height="15" fill="rgb(206,216,7)"/><text x="22.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (2 samples, 0.32%)</title><rect x="19" y="996" width="4" height="15" fill="rgb(214,85,21)"/><text x="22.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (2 samples, 0.32%)</title><rect x="19" y="1012" width="4" height="15" fill="rgb(223,7,44)"/><text x="22.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (2 samples, 0.32%)</title><rect x="19" y="1028" width="4" height="15" fill="rgb(250,74,48)"/><text x="22.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.16%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(221,35,18)"/><text x="24.00" y="1054.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (3 samples, 0.47%)</title><rect x="19" y="852" width="5" height="15" fill="rgb(232,30,22)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (3 samples, 0.47%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(207,12,50)"/><text x="22.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (3 samples, 0.47%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(227,0,29)"/><text x="22.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (3 samples, 0.47%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(252,176,28)"/><text x="22.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 0.47%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(253,30,30)"/><text x="22.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (3 samples, 0.47%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(244,165,20)"/><text x="22.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (3 samples, 0.47%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(240,207,8)"/><text x="22.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.16%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(235,109,13)"/><text x="26.00" y="974.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.16%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(221,198,19)"/><text x="27.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.16%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(233,54,30)"/><text x="27.00" y="958.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.16%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(213,199,53)"/><text x="27.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.16%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(207,7,46)"/><text x="27.00" y="990.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.16%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(250,109,5)"/><text x="27.00" y="1006.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(245,57,12)"/><text x="27.00" y="1022.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.16%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(208,10,48)"/><text x="27.00" y="1038.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (9 samples, 1.42%)</title><rect x="11" y="148" width="17" height="15" fill="rgb(249,168,2)"/><text x="14.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="164" width="17" height="15" fill="rgb(223,36,9)"/><text x="14.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.42%)</title><rect x="11" y="180" width="17" height="15" fill="rgb(254,40,26)"/><text x="14.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="196" width="17" height="15" fill="rgb(233,103,33)"/><text x="14.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="212" width="17" height="15" fill="rgb(217,19,12)"/><text x="14.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.42%)</title><rect x="11" y="228" width="17" height="15" fill="rgb(235,224,3)"/><text x="14.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.42%)</title><rect x="11" y="244" width="17" height="15" fill="rgb(225,60,9)"/><text x="14.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.42%)</title><rect x="11" y="260" width="17" height="15" fill="rgb(248,11,36)"/><text x="14.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="276" width="17" height="15" fill="rgb(225,155,19)"/><text x="14.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (9 samples, 1.42%)</title><rect x="11" y="292" width="17" height="15" fill="rgb(223,135,9)"/><text x="14.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="308" width="17" height="15" fill="rgb(229,141,20)"/><text x="14.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.42%)</title><rect x="11" y="324" width="17" height="15" fill="rgb(236,161,48)"/><text x="14.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.42%)</title><rect x="11" y="340" width="17" height="15" fill="rgb(236,174,4)"/><text x="14.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.42%)</title><rect x="11" y="356" width="17" height="15" fill="rgb(243,164,16)"/><text x="14.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="372" width="17" height="15" fill="rgb(231,222,34)"/><text x="14.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (9 samples, 1.42%)</title><rect x="11" y="388" width="17" height="15" fill="rgb(253,121,25)"/><text x="14.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="404" width="17" height="15" fill="rgb(248,66,46)"/><text x="14.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.42%)</title><rect x="11" y="420" width="17" height="15" fill="rgb(241,89,28)"/><text x="14.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.42%)</title><rect x="11" y="436" width="17" height="15" fill="rgb(252,98,19)"/><text x="14.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.42%)</title><rect x="11" y="452" width="17" height="15" fill="rgb(233,20,24)"/><text x="14.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="468" width="17" height="15" fill="rgb(230,149,31)"/><text x="14.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (9 samples, 1.42%)</title><rect x="11" y="484" width="17" height="15" fill="rgb(213,172,50)"/><text x="14.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="500" width="17" height="15" fill="rgb(231,192,10)"/><text x="14.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.42%)</title><rect x="11" y="516" width="17" height="15" fill="rgb(236,90,32)"/><text x="14.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.42%)</title><rect x="11" y="532" width="17" height="15" fill="rgb(221,11,39)"/><text x="14.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.42%)</title><rect x="11" y="548" width="17" height="15" fill="rgb(246,191,3)"/><text x="14.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="564" width="17" height="15" fill="rgb(206,167,11)"/><text x="14.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (9 samples, 1.42%)</title><rect x="11" y="580" width="17" height="15" fill="rgb(242,221,48)"/><text x="14.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="596" width="17" height="15" fill="rgb(239,65,31)"/><text x="14.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (9 samples, 1.42%)</title><rect x="11" y="612" width="17" height="15" fill="rgb(209,87,11)"/><text x="14.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="628" width="17" height="15" fill="rgb(209,225,30)"/><text x="14.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="644" width="17" height="15" fill="rgb(222,55,31)"/><text x="14.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.42%)</title><rect x="11" y="660" width="17" height="15" fill="rgb(249,118,37)"/><text x="14.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.42%)</title><rect x="11" y="676" width="17" height="15" fill="rgb(243,14,14)"/><text x="14.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.42%)</title><rect x="11" y="692" width="17" height="15" fill="rgb(234,118,8)"/><text x="14.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="708" width="17" height="15" fill="rgb(248,157,37)"/><text x="14.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (9 samples, 1.42%)</title><rect x="11" y="724" width="17" height="15" fill="rgb(237,69,1)"/><text x="14.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 1.42%)</title><rect x="11" y="740" width="17" height="15" fill="rgb(242,34,25)"/><text x="14.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 1.42%)</title><rect x="11" y="756" width="17" height="15" fill="rgb(247,158,42)"/><text x="14.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 1.42%)</title><rect x="11" y="772" width="17" height="15" fill="rgb(227,224,1)"/><text x="14.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 1.42%)</title><rect x="11" y="788" width="17" height="15" fill="rgb(247,23,14)"/><text x="14.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 1.42%)</title><rect x="11" y="804" width="17" height="15" fill="rgb(222,229,41)"/><text x="14.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (9 samples, 1.42%)</title><rect x="11" y="820" width="17" height="15" fill="rgb(208,8,30)"/><text x="14.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (9 samples, 1.42%)</title><rect x="11" y="836" width="17" height="15" fill="rgb(207,92,18)"/><text x="14.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.32%)</title><rect x="24" y="852" width="4" height="15" fill="rgb(251,181,4)"/><text x="27.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.32%)</title><rect x="24" y="868" width="4" height="15" fill="rgb(241,90,37)"/><text x="27.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 0.32%)</title><rect x="24" y="884" width="4" height="15" fill="rgb(252,162,30)"/><text x="27.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (2 samples, 0.32%)</title><rect x="24" y="900" width="4" height="15" fill="rgb(224,41,21)"/><text x="27.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (2 samples, 0.32%)</title><rect x="24" y="916" width="4" height="15" fill="rgb(254,108,33)"/><text x="27.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.16%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(218,10,26)"/><text x="29.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.16%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(216,205,12)"/><text x="29.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.16%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(209,4,51)"/><text x="29.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:4) (1 samples, 0.16%)</title><rect x="28" y="148" width="2" height="15" fill="rgb(212,179,45)"/><text x="31.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="164" width="2" height="15" fill="rgb(230,125,49)"/><text x="31.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.16%)</title><rect x="28" y="180" width="2" height="15" fill="rgb(212,133,49)"/><text x="31.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="196" width="2" height="15" fill="rgb(211,64,16)"/><text x="31.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="212" width="2" height="15" fill="rgb(227,125,52)"/><text x="31.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="228" width="2" height="15" fill="rgb(245,143,48)"/><text x="31.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="244" width="2" height="15" fill="rgb(216,79,6)"/><text x="31.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="260" width="2" height="15" fill="rgb(250,105,20)"/><text x="31.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="276" width="2" height="15" fill="rgb(241,212,31)"/><text x="31.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.16%)</title><rect x="28" y="292" width="2" height="15" fill="rgb(227,134,5)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="308" width="2" height="15" fill="rgb(230,92,50)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="324" width="2" height="15" fill="rgb(253,121,11)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="340" width="2" height="15" fill="rgb(220,115,20)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="356" width="2" height="15" fill="rgb(233,144,53)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="372" width="2" height="15" fill="rgb(252,191,13)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.16%)</title><rect x="28" y="388" width="2" height="15" fill="rgb(228,210,11)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="404" width="2" height="15" fill="rgb(217,25,39)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="420" width="2" height="15" fill="rgb(251,14,47)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="436" width="2" height="15" fill="rgb(240,28,31)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="452" width="2" height="15" fill="rgb(216,31,18)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="468" width="2" height="15" fill="rgb(242,224,4)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.16%)</title><rect x="28" y="484" width="2" height="15" fill="rgb(216,14,34)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="500" width="2" height="15" fill="rgb(222,44,45)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="516" width="2" height="15" fill="rgb(214,162,7)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="532" width="2" height="15" fill="rgb(208,0,45)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="548" width="2" height="15" fill="rgb(235,210,16)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="564" width="2" height="15" fill="rgb(235,102,36)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.16%)</title><rect x="28" y="580" width="2" height="15" fill="rgb(217,113,27)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="596" width="2" height="15" fill="rgb(210,47,24)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="612" width="2" height="15" fill="rgb(222,93,47)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="628" width="2" height="15" fill="rgb(225,178,19)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="644" width="2" height="15" fill="rgb(207,116,15)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="660" width="2" height="15" fill="rgb(242,161,35)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.16%)</title><rect x="28" y="676" width="2" height="15" fill="rgb(210,128,31)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="692" width="2" height="15" fill="rgb(232,136,37)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="708" width="2" height="15" fill="rgb(216,200,3)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="724" width="2" height="15" fill="rgb(226,223,26)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="740" width="2" height="15" fill="rgb(245,44,4)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="756" width="2" height="15" fill="rgb(220,1,51)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.16%)</title><rect x="28" y="772" width="2" height="15" fill="rgb(240,113,11)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="28" y="788" width="2" height="15" fill="rgb(235,18,16)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="804" width="2" height="15" fill="rgb(238,201,19)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="820" width="2" height="15" fill="rgb(231,102,24)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="836" width="2" height="15" fill="rgb(226,127,3)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="852" width="2" height="15" fill="rgb(222,26,19)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="868" width="2" height="15" fill="rgb(235,162,44)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="884" width="2" height="15" fill="rgb(215,203,52)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.16%)</title><rect x="28" y="900" width="2" height="15" fill="rgb(219,190,9)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="28" y="916" width="2" height="15" fill="rgb(251,166,5)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="932" width="2" height="15" fill="rgb(231,155,45)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="948" width="2" height="15" fill="rgb(222,148,21)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="964" width="2" height="15" fill="rgb(243,24,33)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="980" width="2" height="15" fill="rgb(248,73,43)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="996" width="2" height="15" fill="rgb(237,41,22)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1012" width="2" height="15" fill="rgb(213,104,35)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.16%)</title><rect x="28" y="1028" width="2" height="15" fill="rgb(235,17,33)"/><text x="31.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="28" y="1044" width="2" height="15" fill="rgb(217,6,38)"/><text x="31.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1060" width="2" height="15" fill="rgb(230,13,51)"/><text x="31.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1076" width="2" height="15" fill="rgb(235,144,43)"/><text x="31.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1092" width="2" height="15" fill="rgb(245,41,35)"/><text x="31.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1108" width="2" height="15" fill="rgb(243,112,37)"/><text x="31.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="1124" width="2" height="15" fill="rgb(213,205,35)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1140" width="2" height="15" fill="rgb(230,220,18)"/><text x="31.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.16%)</title><rect x="28" y="1156" width="2" height="15" fill="rgb(243,151,40)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1172" width="2" height="15" fill="rgb(252,211,53)"/><text x="31.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1188" width="2" height="15" fill="rgb(231,172,37)"/><text x="31.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1204" width="2" height="15" fill="rgb(233,108,15)"/><text x="31.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="1220" width="2" height="15" fill="rgb(217,123,31)"/><text x="31.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1236" width="2" height="15" fill="rgb(241,219,28)"/><text x="31.00" y="1246.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/interpolate.py:20) (1 samples, 0.16%)</title><rect x="28" y="1252" width="2" height="15" fill="rgb(252,155,3)"/><text x="31.00" y="1262.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="28" y="1268" width="2" height="15" fill="rgb(226,87,0)"/><text x="31.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1284" width="2" height="15" fill="rgb(242,86,35)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1300" width="2" height="15" fill="rgb(210,162,13)"/><text x="31.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1316" width="2" height="15" fill="rgb(233,98,21)"/><text x="31.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1332" width="2" height="15" fill="rgb(232,122,29)"/><text x="31.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="1348" width="2" height="15" fill="rgb(250,22,15)"/><text x="31.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1364" width="2" height="15" fill="rgb(237,98,26)"/><text x="31.00" y="1374.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/fitpack.py:12) (1 samples, 0.16%)</title><rect x="28" y="1380" width="2" height="15" fill="rgb(252,211,28)"/><text x="31.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1396" width="2" height="15" fill="rgb(205,65,23)"/><text x="31.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1412" width="2" height="15" fill="rgb(230,99,43)"/><text x="31.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="28" y="1428" width="2" height="15" fill="rgb(217,112,32)"/><text x="31.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="28" y="1444" width="2" height="15" fill="rgb(254,80,7)"/><text x="31.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1460" width="2" height="15" fill="rgb(206,207,51)"/><text x="31.00" y="1470.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/_bsplines.py:10) (1 samples, 0.16%)</title><rect x="28" y="1476" width="2" height="15" fill="rgb(227,174,52)"/><text x="31.00" y="1486.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(249,77,0)"/><text x="31.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(218,220,54)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="28" y="1524" width="2" height="15" fill="rgb(239,167,33)"/><text x="31.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="28" y="1540" width="2" height="15" fill="rgb(205,74,42)"/><text x="31.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.16%)</title><rect x="28" y="1556" width="2" height="15" fill="rgb(231,154,28)"/><text x="31.00" y="1566.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.16%)</title><rect x="28" y="1572" width="2" height="15" fill="rgb(213,29,51)"/><text x="31.00" y="1582.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.16%)</title><rect x="28" y="1588" width="2" height="15" fill="rgb(247,188,11)"/><text x="31.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="28" y="1604" width="2" height="15" fill="rgb(219,186,2)"/><text x="31.00" y="1614.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1620" width="2" height="15" fill="rgb(219,91,37)"/><text x="31.00" y="1630.50"></text></g><g><title>0x7f180f3b5995 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1636" width="2" height="15" fill="rgb(238,89,46)"/><text x="31.00" y="1646.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1652" width="2" height="15" fill="rgb(232,25,44)"/><text x="31.00" y="1662.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1668" width="2" height="15" fill="rgb(213,166,8)"/><text x="31.00" y="1678.50"></text></g><g><title>0x7f180f3b5258 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1684" width="2" height="15" fill="rgb(234,23,47)"/><text x="31.00" y="1694.50"></text></g><g><title>0x7f180f402d7a (ld-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1700" width="2" height="15" fill="rgb(252,132,8)"/><text x="31.00" y="1710.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1716" width="2" height="15" fill="rgb(234,6,9)"/><text x="31.00" y="1726.50"></text></g><g><title>0x7f180f403345 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1732" width="2" height="15" fill="rgb(238,91,4)"/><text x="31.00" y="1742.50"></text></g><g><title>0x7f180f3fbfec (ld-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1748" width="2" height="15" fill="rgb(219,194,38)"/><text x="31.00" y="1758.50"></text></g><g><title>0x7f180f3fa56b (ld-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1764" width="2" height="15" fill="rgb(247,49,18)"/><text x="31.00" y="1774.50"></text></g><g><title>0x7f180f3f9bb0 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="28" y="1780" width="2" height="15" fill="rgb(213,41,44)"/><text x="31.00" y="1790.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.16%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(245,3,42)"/><text x="33.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(239,58,10)"/><text x="33.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1044" width="2" height="15" fill="rgb(233,89,32)"/><text x="33.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1060" width="2" height="15" fill="rgb(245,87,42)"/><text x="33.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1076" width="2" height="15" fill="rgb(222,57,48)"/><text x="33.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1092" width="2" height="15" fill="rgb(224,204,42)"/><text x="33.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.16%)</title><rect x="30" y="1108" width="2" height="15" fill="rgb(215,110,20)"/><text x="33.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(235,106,49)"/><text x="33.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1140" width="2" height="15" fill="rgb(215,196,40)"/><text x="33.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1156" width="2" height="15" fill="rgb(218,173,20)"/><text x="33.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1172" width="2" height="15" fill="rgb(253,135,14)"/><text x="33.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1188" width="2" height="15" fill="rgb(220,145,46)"/><text x="33.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.16%)</title><rect x="30" y="1204" width="2" height="15" fill="rgb(235,28,46)"/><text x="33.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1220" width="2" height="15" fill="rgb(229,192,31)"/><text x="33.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1236" width="2" height="15" fill="rgb(253,225,13)"/><text x="33.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1252" width="2" height="15" fill="rgb(239,205,25)"/><text x="33.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1268" width="2" height="15" fill="rgb(222,129,17)"/><text x="33.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1284" width="2" height="15" fill="rgb(251,220,40)"/><text x="33.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.16%)</title><rect x="30" y="1300" width="2" height="15" fill="rgb(212,22,44)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1316" width="2" height="15" fill="rgb(237,192,4)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1332" width="2" height="15" fill="rgb(214,35,33)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(224,132,12)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(239,116,37)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(241,179,26)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.16%)</title><rect x="30" y="1396" width="2" height="15" fill="rgb(219,63,3)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1412" width="2" height="15" fill="rgb(248,182,19)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1428" width="2" height="15" fill="rgb(248,227,31)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1444" width="2" height="15" fill="rgb(247,219,10)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1460" width="2" height="15" fill="rgb(241,172,14)"/><text x="33.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1476" width="2" height="15" fill="rgb(231,43,49)"/><text x="33.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.16%)</title><rect x="30" y="1492" width="2" height="15" fill="rgb(253,212,5)"/><text x="33.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(211,201,48)"/><text x="33.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(254,224,2)"/><text x="33.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(245,72,2)"/><text x="33.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(227,63,35)"/><text x="33.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(251,195,17)"/><text x="33.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.16%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(246,117,48)"/><text x="33.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(217,150,19)"/><text x="33.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1620" width="2" height="15" fill="rgb(219,75,54)"/><text x="33.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1636" width="2" height="15" fill="rgb(205,69,8)"/><text x="33.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1652" width="2" height="15" fill="rgb(229,9,37)"/><text x="33.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1668" width="2" height="15" fill="rgb(244,112,43)"/><text x="33.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.16%)</title><rect x="30" y="1684" width="2" height="15" fill="rgb(225,154,13)"/><text x="33.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1700" width="2" height="15" fill="rgb(234,77,30)"/><text x="33.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1716" width="2" height="15" fill="rgb(233,25,39)"/><text x="33.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1732" width="2" height="15" fill="rgb(205,159,42)"/><text x="33.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1748" width="2" height="15" fill="rgb(211,183,11)"/><text x="33.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1764" width="2" height="15" fill="rgb(222,75,3)"/><text x="33.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:24) (1 samples, 0.16%)</title><rect x="30" y="1780" width="2" height="15" fill="rgb(235,165,39)"/><text x="33.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1796" width="2" height="15" fill="rgb(230,211,4)"/><text x="33.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1812" width="2" height="15" fill="rgb(205,228,54)"/><text x="33.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1828" width="2" height="15" fill="rgb(227,164,33)"/><text x="33.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1844" width="2" height="15" fill="rgb(248,21,48)"/><text x="33.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1860" width="2" height="15" fill="rgb(212,145,54)"/><text x="33.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py:11) (1 samples, 0.16%)</title><rect x="30" y="1876" width="2" height="15" fill="rgb(210,159,42)"/><text x="33.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="30" y="1892" width="2" height="15" fill="rgb(241,73,15)"/><text x="33.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1908" width="2" height="15" fill="rgb(205,151,49)"/><text x="33.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="30" y="1924" width="2" height="15" fill="rgb(223,93,44)"/><text x="33.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="30" y="1940" width="2" height="15" fill="rgb(244,87,22)"/><text x="33.00" y="1950.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="30" y="1956" width="2" height="15" fill="rgb(206,194,32)"/><text x="33.00" y="1966.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="30" y="1972" width="2" height="15" fill="rgb(222,71,35)"/><text x="33.00" y="1982.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="30" y="1988" width="2" height="15" fill="rgb(205,46,30)"/><text x="33.00" y="1998.50"></text></g><g><title>&lt;module&gt; (matplotlib/lines.py:1528) (1 samples, 0.16%)</title><rect x="30" y="2004" width="2" height="15" fill="rgb(212,152,3)"/><text x="33.00" y="2014.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.16%)</title><rect x="30" y="2020" width="2" height="15" fill="rgb(223,161,8)"/><text x="33.00" y="2030.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1371) (1 samples, 0.16%)</title><rect x="30" y="2036" width="2" height="15" fill="rgb(222,37,48)"/><text x="33.00" y="2046.50"></text></g><g><title>get_valid_values (matplotlib/artist.py:1271) (1 samples, 0.16%)</title><rect x="30" y="2052" width="2" height="15" fill="rgb(249,130,24)"/><text x="33.00" y="2062.50"></text></g><g><title>search (re.py:183) (1 samples, 0.16%)</title><rect x="30" y="2068" width="2" height="15" fill="rgb(250,175,20)"/><text x="33.00" y="2078.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.16%)</title><rect x="30" y="2084" width="2" height="15" fill="rgb(227,78,7)"/><text x="33.00" y="2094.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.16%)</title><rect x="30" y="2100" width="2" height="15" fill="rgb(222,106,53)"/><text x="33.00" y="2110.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.16%)</title><rect x="30" y="2116" width="2" height="15" fill="rgb(216,30,17)"/><text x="33.00" y="2126.50"></text></g><g><title>_compile (sre_compile.py:149) (1 samples, 0.16%)</title><rect x="30" y="2132" width="2" height="15" fill="rgb(215,15,24)"/><text x="33.00" y="2142.50"></text></g><g><title>0x7f180f20b143 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="2148" width="2" height="15" fill="rgb(219,222,26)"/><text x="33.00" y="2158.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.47%)</title><rect x="30" y="436" width="6" height="15" fill="rgb(221,185,19)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.47%)</title><rect x="30" y="452" width="6" height="15" fill="rgb(233,210,37)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.47%)</title><rect x="30" y="468" width="6" height="15" fill="rgb(220,171,45)"/><text x="33.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.47%)</title><rect x="30" y="484" width="6" height="15" fill="rgb(251,217,15)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.47%)</title><rect x="30" y="500" width="6" height="15" fill="rgb(221,31,0)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.47%)</title><rect x="30" y="516" width="6" height="15" fill="rgb(252,64,3)"/><text x="33.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.47%)</title><rect x="30" y="532" width="6" height="15" fill="rgb(247,162,32)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.47%)</title><rect x="30" y="548" width="6" height="15" fill="rgb(223,214,6)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.47%)</title><rect x="30" y="564" width="6" height="15" fill="rgb(246,203,39)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.47%)</title><rect x="30" y="580" width="6" height="15" fill="rgb(221,122,54)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.47%)</title><rect x="30" y="596" width="6" height="15" fill="rgb(229,84,13)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.47%)</title><rect x="30" y="612" width="6" height="15" fill="rgb(220,92,50)"/><text x="33.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.47%)</title><rect x="30" y="628" width="6" height="15" fill="rgb(233,76,4)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.47%)</title><rect x="30" y="644" width="6" height="15" fill="rgb(216,226,39)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.47%)</title><rect x="30" y="660" width="6" height="15" fill="rgb(209,96,2)"/><text x="33.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.47%)</title><rect x="30" y="676" width="6" height="15" fill="rgb(220,44,6)"/><text x="33.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.47%)</title><rect x="30" y="692" width="6" height="15" fill="rgb(222,8,25)"/><text x="33.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.47%)</title><rect x="30" y="708" width="6" height="15" fill="rgb(234,99,45)"/><text x="33.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.47%)</title><rect x="30" y="724" width="6" height="15" fill="rgb(217,71,47)"/><text x="33.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.47%)</title><rect x="30" y="740" width="6" height="15" fill="rgb(236,21,19)"/><text x="33.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.47%)</title><rect x="30" y="756" width="6" height="15" fill="rgb(217,202,36)"/><text x="33.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.47%)</title><rect x="30" y="772" width="6" height="15" fill="rgb(225,96,33)"/><text x="33.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.47%)</title><rect x="30" y="788" width="6" height="15" fill="rgb(231,128,54)"/><text x="33.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.47%)</title><rect x="30" y="804" width="6" height="15" fill="rgb(207,91,21)"/><text x="33.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.47%)</title><rect x="30" y="820" width="6" height="15" fill="rgb(216,142,24)"/><text x="33.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.47%)</title><rect x="30" y="836" width="6" height="15" fill="rgb(237,49,7)"/><text x="33.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.47%)</title><rect x="30" y="852" width="6" height="15" fill="rgb(246,143,8)"/><text x="33.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.47%)</title><rect x="30" y="868" width="6" height="15" fill="rgb(219,30,38)"/><text x="33.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.47%)</title><rect x="30" y="884" width="6" height="15" fill="rgb(226,97,34)"/><text x="33.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.47%)</title><rect x="30" y="900" width="6" height="15" fill="rgb(235,228,47)"/><text x="33.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.47%)</title><rect x="30" y="916" width="6" height="15" fill="rgb(244,57,14)"/><text x="33.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.47%)</title><rect x="30" y="932" width="6" height="15" fill="rgb(207,117,16)"/><text x="33.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.47%)</title><rect x="30" y="948" width="6" height="15" fill="rgb(254,40,6)"/><text x="33.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.47%)</title><rect x="30" y="964" width="6" height="15" fill="rgb(244,206,7)"/><text x="33.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.47%)</title><rect x="30" y="980" width="6" height="15" fill="rgb(206,199,36)"/><text x="33.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.47%)</title><rect x="30" y="996" width="6" height="15" fill="rgb(222,145,42)"/><text x="33.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 0.32%)</title><rect x="32" y="1012" width="4" height="15" fill="rgb(249,135,25)"/><text x="35.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="1028" width="4" height="15" fill="rgb(224,103,51)"/><text x="35.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="1044" width="4" height="15" fill="rgb(234,68,24)"/><text x="35.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="1060" width="4" height="15" fill="rgb(250,116,47)"/><text x="35.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="1076" width="4" height="15" fill="rgb(225,69,50)"/><text x="35.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="1092" width="4" height="15" fill="rgb(254,128,20)"/><text x="35.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 0.32%)</title><rect x="32" y="1108" width="4" height="15" fill="rgb(209,58,40)"/><text x="35.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="1124" width="4" height="15" fill="rgb(216,226,26)"/><text x="35.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="1140" width="4" height="15" fill="rgb(249,194,32)"/><text x="35.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="1156" width="4" height="15" fill="rgb(220,14,5)"/><text x="35.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="1172" width="4" height="15" fill="rgb(220,206,38)"/><text x="35.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="1188" width="4" height="15" fill="rgb(242,31,33)"/><text x="35.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 0.32%)</title><rect x="32" y="1204" width="4" height="15" fill="rgb(237,45,48)"/><text x="35.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="1220" width="4" height="15" fill="rgb(219,101,21)"/><text x="35.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="1236" width="4" height="15" fill="rgb(225,167,14)"/><text x="35.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="1252" width="4" height="15" fill="rgb(213,123,53)"/><text x="35.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="1268" width="4" height="15" fill="rgb(240,191,18)"/><text x="35.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="1284" width="4" height="15" fill="rgb(215,90,19)"/><text x="35.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:16) (2 samples, 0.32%)</title><rect x="32" y="1300" width="4" height="15" fill="rgb(208,165,7)"/><text x="35.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="1316" width="4" height="15" fill="rgb(224,188,23)"/><text x="35.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="1332" width="4" height="15" fill="rgb(217,15,42)"/><text x="35.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="1348" width="4" height="15" fill="rgb(239,177,34)"/><text x="35.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.32%)</title><rect x="32" y="1364" width="4" height="15" fill="rgb(234,69,49)"/><text x="35.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.32%)</title><rect x="32" y="1380" width="4" height="15" fill="rgb(234,158,21)"/><text x="35.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py:51) (2 samples, 0.32%)</title><rect x="32" y="1396" width="4" height="15" fill="rgb(222,126,49)"/><text x="35.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.32%)</title><rect x="32" y="1412" width="4" height="15" fill="rgb(244,55,33)"/><text x="35.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.32%)</title><rect x="32" y="1428" width="4" height="15" fill="rgb(254,160,44)"/><text x="35.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.32%)</title><rect x="32" y="1444" width="4" height="15" fill="rgb(222,117,45)"/><text x="35.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (2 samples, 0.32%)</title><rect x="32" y="1460" width="4" height="15" fill="rgb(251,7,39)"/><text x="35.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (2 samples, 0.32%)</title><rect x="32" y="1476" width="4" height="15" fill="rgb(248,115,32)"/><text x="35.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (2 samples, 0.32%)</title><rect x="32" y="1492" width="4" height="15" fill="rgb(222,10,49)"/><text x="35.00" y="1502.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:14) (1 samples, 0.16%)</title><rect x="36" y="1108" width="1" height="15" fill="rgb(218,119,6)"/><text x="39.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="36" y="1124" width="1" height="15" fill="rgb(223,156,28)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="36" y="1140" width="1" height="15" fill="rgb(213,167,18)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="36" y="1156" width="1" height="15" fill="rgb(226,201,36)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="36" y="1172" width="1" height="15" fill="rgb(239,33,25)"/><text x="39.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="36" y="1188" width="1" height="15" fill="rgb(214,20,2)"/><text x="39.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="36" y="1204" width="1" height="15" fill="rgb(219,22,50)"/><text x="39.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="36" y="1220" width="1" height="15" fill="rgb(233,39,28)"/><text x="39.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py:33) (1 samples, 0.16%)</title><rect x="36" y="1236" width="1" height="15" fill="rgb(205,163,8)"/><text x="39.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.16%)</title><rect x="36" y="1252" width="1" height="15" fill="rgb(244,189,6)"/><text x="39.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="36" y="1268" width="1" height="15" fill="rgb(234,143,37)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.16%)</title><rect x="36" y="1284" width="1" height="15" fill="rgb(244,151,35)"/><text x="39.00" y="1294.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:149) (1 samples, 0.16%)</title><rect x="36" y="1300" width="1" height="15" fill="rgb(224,38,54)"/><text x="39.00" y="1310.50"></text></g><g><title>acquire (&lt;frozen importlib._bootstrap&gt;:88) (1 samples, 0.16%)</title><rect x="36" y="1316" width="1" height="15" fill="rgb(253,22,41)"/><text x="39.00" y="1326.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.16%)</title><rect x="37" y="1572" width="2" height="15" fill="rgb(252,170,3)"/><text x="40.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.16%)</title><rect x="37" y="1588" width="2" height="15" fill="rgb(253,37,15)"/><text x="40.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:152) (1 samples, 0.16%)</title><rect x="37" y="1604" width="2" height="15" fill="rgb(250,73,54)"/><text x="40.00" y="1614.50"></text></g><g><title>0x7f17ff1e90e9 (?) (1 samples, 0.16%)</title><rect x="37" y="1620" width="2" height="15" fill="rgb(247,187,43)"/><text x="40.00" y="1630.50"></text></g><g><title>0x7f17ff1da548 (?) (1 samples, 0.16%)</title><rect x="37" y="1636" width="2" height="15" fill="rgb(214,135,3)"/><text x="40.00" y="1646.50"></text></g><g><title>0x7f17ff1d6944 (?) (1 samples, 0.16%)</title><rect x="37" y="1652" width="2" height="15" fill="rgb(248,58,22)"/><text x="40.00" y="1662.50"></text></g><g><title>root (&lt;template&gt;:123) (1 samples, 0.16%)</title><rect x="39" y="1572" width="2" height="15" fill="rgb(236,210,11)"/><text x="42.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.16%)</title><rect x="39" y="1588" width="2" height="15" fill="rgb(214,228,51)"/><text x="42.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.16%)</title><rect x="39" y="1604" width="2" height="15" fill="rgb(236,165,12)"/><text x="42.00" y="1614.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="39" y="1620" width="2" height="15" fill="rgb(237,18,26)"/><text x="42.00" y="1630.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="39" y="1636" width="2" height="15" fill="rgb(213,166,22)"/><text x="42.00" y="1646.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.47%)</title><rect x="37" y="1460" width="6" height="15" fill="rgb(228,216,13)"/><text x="40.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.47%)</title><rect x="37" y="1476" width="6" height="15" fill="rgb(232,173,45)"/><text x="40.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.47%)</title><rect x="37" y="1492" width="6" height="15" fill="rgb(217,176,46)"/><text x="40.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.47%)</title><rect x="37" y="1508" width="6" height="15" fill="rgb(235,64,48)"/><text x="40.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.47%)</title><rect x="37" y="1524" width="6" height="15" fill="rgb(239,90,43)"/><text x="40.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.47%)</title><rect x="37" y="1540" width="6" height="15" fill="rgb(249,167,17)"/><text x="40.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.47%)</title><rect x="37" y="1556" width="6" height="15" fill="rgb(215,20,7)"/><text x="40.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:23) (1 samples, 0.16%)</title><rect x="41" y="1572" width="2" height="15" fill="rgb(219,164,30)"/><text x="44.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.16%)</title><rect x="41" y="1588" width="2" height="15" fill="rgb(241,87,20)"/><text x="44.00" y="1598.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:4) (19 samples, 3.00%)</title><rect x="10" y="52" width="35" height="15" fill="rgb(218,24,20)"/><text x="13.00" y="62.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (19 samples, 3.00%)</title><rect x="10" y="68" width="35" height="15" fill="rgb(231,164,13)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (19 samples, 3.00%)</title><rect x="10" y="84" width="35" height="15" fill="rgb(244,33,47)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (19 samples, 3.00%)</title><rect x="10" y="100" width="35" height="15" fill="rgb(215,194,49)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (19 samples, 3.00%)</title><rect x="10" y="116" width="35" height="15" fill="rgb(235,4,44)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (19 samples, 3.00%)</title><rect x="10" y="132" width="35" height="15" fill="rgb(230,110,23)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (8 samples, 1.26%)</title><rect x="30" y="148" width="15" height="15" fill="rgb(244,221,53)"/><text x="33.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.26%)</title><rect x="30" y="164" width="15" height="15" fill="rgb(231,2,49)"/><text x="33.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.26%)</title><rect x="30" y="180" width="15" height="15" fill="rgb(224,218,7)"/><text x="33.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.26%)</title><rect x="30" y="196" width="15" height="15" fill="rgb(254,159,54)"/><text x="33.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.26%)</title><rect x="30" y="212" width="15" height="15" fill="rgb(210,217,19)"/><text x="33.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.26%)</title><rect x="30" y="228" width="15" height="15" fill="rgb(223,51,40)"/><text x="33.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 1.26%)</title><rect x="30" y="244" width="15" height="15" fill="rgb(241,220,11)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.26%)</title><rect x="30" y="260" width="15" height="15" fill="rgb(230,59,12)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.26%)</title><rect x="30" y="276" width="15" height="15" fill="rgb(227,29,17)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.26%)</title><rect x="30" y="292" width="15" height="15" fill="rgb(219,170,26)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.26%)</title><rect x="30" y="308" width="15" height="15" fill="rgb(247,43,6)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.26%)</title><rect x="30" y="324" width="15" height="15" fill="rgb(224,132,12)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 1.26%)</title><rect x="30" y="340" width="15" height="15" fill="rgb(229,146,52)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 1.26%)</title><rect x="30" y="356" width="15" height="15" fill="rgb(232,166,13)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 1.26%)</title><rect x="30" y="372" width="15" height="15" fill="rgb(229,75,23)"/><text x="33.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 1.26%)</title><rect x="30" y="388" width="15" height="15" fill="rgb(253,146,18)"/><text x="33.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 1.26%)</title><rect x="30" y="404" width="15" height="15" fill="rgb(233,47,25)"/><text x="33.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 1.26%)</title><rect x="30" y="420" width="15" height="15" fill="rgb(244,97,27)"/><text x="33.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 0.79%)</title><rect x="36" y="436" width="9" height="15" fill="rgb(227,116,5)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="452" width="9" height="15" fill="rgb(229,13,18)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.79%)</title><rect x="36" y="468" width="9" height="15" fill="rgb(235,106,24)"/><text x="39.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="484" width="9" height="15" fill="rgb(228,84,16)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="500" width="9" height="15" fill="rgb(227,24,1)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.79%)</title><rect x="36" y="516" width="9" height="15" fill="rgb(230,62,23)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.79%)</title><rect x="36" y="532" width="9" height="15" fill="rgb(221,156,4)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.79%)</title><rect x="36" y="548" width="9" height="15" fill="rgb(220,211,50)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="564" width="9" height="15" fill="rgb(246,1,10)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 0.79%)</title><rect x="36" y="580" width="9" height="15" fill="rgb(235,102,20)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="596" width="9" height="15" fill="rgb(234,119,23)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.79%)</title><rect x="36" y="612" width="9" height="15" fill="rgb(230,132,9)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.79%)</title><rect x="36" y="628" width="9" height="15" fill="rgb(213,138,10)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.79%)</title><rect x="36" y="644" width="9" height="15" fill="rgb(254,72,3)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="660" width="9" height="15" fill="rgb(242,50,44)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 0.79%)</title><rect x="36" y="676" width="9" height="15" fill="rgb(220,149,50)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="692" width="9" height="15" fill="rgb(220,69,45)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.79%)</title><rect x="36" y="708" width="9" height="15" fill="rgb(206,14,25)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.79%)</title><rect x="36" y="724" width="9" height="15" fill="rgb(252,37,19)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.79%)</title><rect x="36" y="740" width="9" height="15" fill="rgb(224,219,3)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="756" width="9" height="15" fill="rgb(240,75,46)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 0.79%)</title><rect x="36" y="772" width="9" height="15" fill="rgb(223,66,44)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="788" width="9" height="15" fill="rgb(214,152,47)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.79%)</title><rect x="36" y="804" width="9" height="15" fill="rgb(211,148,39)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.79%)</title><rect x="36" y="820" width="9" height="15" fill="rgb(206,25,40)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.79%)</title><rect x="36" y="836" width="9" height="15" fill="rgb(247,17,43)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="852" width="9" height="15" fill="rgb(221,161,9)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 0.79%)</title><rect x="36" y="868" width="9" height="15" fill="rgb(241,153,1)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="884" width="9" height="15" fill="rgb(218,172,23)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.79%)</title><rect x="36" y="900" width="9" height="15" fill="rgb(211,222,34)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="916" width="9" height="15" fill="rgb(254,119,53)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="932" width="9" height="15" fill="rgb(229,136,54)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.79%)</title><rect x="36" y="948" width="9" height="15" fill="rgb(238,145,30)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.79%)</title><rect x="36" y="964" width="9" height="15" fill="rgb(242,179,51)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.79%)</title><rect x="36" y="980" width="9" height="15" fill="rgb(211,148,45)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="996" width="9" height="15" fill="rgb(225,12,46)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 0.79%)</title><rect x="36" y="1012" width="9" height="15" fill="rgb(231,93,8)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.79%)</title><rect x="36" y="1028" width="9" height="15" fill="rgb(211,30,18)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.79%)</title><rect x="36" y="1044" width="9" height="15" fill="rgb(222,211,32)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.79%)</title><rect x="36" y="1060" width="9" height="15" fill="rgb(235,54,30)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.79%)</title><rect x="36" y="1076" width="9" height="15" fill="rgb(231,180,39)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.79%)</title><rect x="36" y="1092" width="9" height="15" fill="rgb(208,165,28)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 0.63%)</title><rect x="37" y="1108" width="8" height="15" fill="rgb(215,113,15)"/><text x="40.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.63%)</title><rect x="37" y="1124" width="8" height="15" fill="rgb(249,74,22)"/><text x="40.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.63%)</title><rect x="37" y="1140" width="8" height="15" fill="rgb(246,137,25)"/><text x="40.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.63%)</title><rect x="37" y="1156" width="8" height="15" fill="rgb(223,222,13)"/><text x="40.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.63%)</title><rect x="37" y="1172" width="8" height="15" fill="rgb(230,65,40)"/><text x="40.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.63%)</title><rect x="37" y="1188" width="8" height="15" fill="rgb(226,93,40)"/><text x="40.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.63%)</title><rect x="37" y="1204" width="8" height="15" fill="rgb(210,46,18)"/><text x="40.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.63%)</title><rect x="37" y="1220" width="8" height="15" fill="rgb(223,70,8)"/><text x="40.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 0.63%)</title><rect x="37" y="1236" width="8" height="15" fill="rgb(210,34,28)"/><text x="40.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 0.63%)</title><rect x="37" y="1252" width="8" height="15" fill="rgb(250,144,23)"/><text x="40.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.63%)</title><rect x="37" y="1268" width="8" height="15" fill="rgb(218,67,24)"/><text x="40.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.63%)</title><rect x="37" y="1284" width="8" height="15" fill="rgb(229,125,7)"/><text x="40.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.63%)</title><rect x="37" y="1300" width="8" height="15" fill="rgb(248,131,39)"/><text x="40.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.63%)</title><rect x="37" y="1316" width="8" height="15" fill="rgb(218,103,20)"/><text x="40.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.63%)</title><rect x="37" y="1332" width="8" height="15" fill="rgb(214,186,10)"/><text x="40.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.63%)</title><rect x="37" y="1348" width="8" height="15" fill="rgb(242,43,31)"/><text x="40.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 0.63%)</title><rect x="37" y="1364" width="8" height="15" fill="rgb(246,229,19)"/><text x="40.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.63%)</title><rect x="37" y="1380" width="8" height="15" fill="rgb(226,9,32)"/><text x="40.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.63%)</title><rect x="37" y="1396" width="8" height="15" fill="rgb(236,146,19)"/><text x="40.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.63%)</title><rect x="37" y="1412" width="8" height="15" fill="rgb(206,123,1)"/><text x="40.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.63%)</title><rect x="37" y="1428" width="8" height="15" fill="rgb(232,179,34)"/><text x="40.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.63%)</title><rect x="37" y="1444" width="8" height="15" fill="rgb(209,203,6)"/><text x="40.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.16%)</title><rect x="43" y="1460" width="2" height="15" fill="rgb(233,229,8)"/><text x="46.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="43" y="1476" width="2" height="15" fill="rgb(219,106,23)"/><text x="46.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="43" y="1492" width="2" height="15" fill="rgb(214,141,22)"/><text x="46.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="43" y="1508" width="2" height="15" fill="rgb(213,137,16)"/><text x="46.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="43" y="1524" width="2" height="15" fill="rgb(213,35,13)"/><text x="46.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="43" y="1540" width="2" height="15" fill="rgb(246,32,42)"/><text x="46.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.16%)</title><rect x="43" y="1556" width="2" height="15" fill="rgb(241,14,38)"/><text x="46.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:14) (1 samples, 0.16%)</title><rect x="43" y="1572" width="2" height="15" fill="rgb(240,151,46)"/><text x="46.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="43" y="1588" width="2" height="15" fill="rgb(252,56,25)"/><text x="46.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="43" y="1604" width="2" height="15" fill="rgb(235,14,17)"/><text x="46.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="43" y="1620" width="2" height="15" fill="rgb(213,32,49)"/><text x="46.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="43" y="1636" width="2" height="15" fill="rgb(209,200,39)"/><text x="46.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="43" y="1652" width="2" height="15" fill="rgb(230,82,50)"/><text x="46.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py:33) (1 samples, 0.16%)</title><rect x="43" y="1668" width="2" height="15" fill="rgb(249,143,19)"/><text x="46.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="43" y="1684" width="2" height="15" fill="rgb(212,144,50)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="43" y="1700" width="2" height="15" fill="rgb(247,74,21)"/><text x="46.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="43" y="1716" width="2" height="15" fill="rgb(252,189,7)"/><text x="46.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="43" y="1732" width="2" height="15" fill="rgb(206,116,13)"/><text x="46.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="43" y="1748" width="2" height="15" fill="rgb(214,106,8)"/><text x="46.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py:16) (1 samples, 0.16%)</title><rect x="43" y="1764" width="2" height="15" fill="rgb(214,45,42)"/><text x="46.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="43" y="1780" width="2" height="15" fill="rgb(205,207,39)"/><text x="46.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="43" y="1796" width="2" height="15" fill="rgb(211,33,35)"/><text x="46.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="43" y="1812" width="2" height="15" fill="rgb(239,30,41)"/><text x="46.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="43" y="1828" width="2" height="15" fill="rgb(241,69,20)"/><text x="46.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="43" y="1844" width="2" height="15" fill="rgb(253,147,54)"/><text x="46.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/defaults.py:31) (1 samples, 0.16%)</title><rect x="43" y="1860" width="2" height="15" fill="rgb(233,152,43)"/><text x="46.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="43" y="1876" width="2" height="15" fill="rgb(249,41,15)"/><text x="46.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="43" y="1892" width="2" height="15" fill="rgb(214,40,34)"/><text x="46.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="43" y="1908" width="2" height="15" fill="rgb(252,132,8)"/><text x="46.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="43" y="1924" width="2" height="15" fill="rgb(230,214,35)"/><text x="46.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="43" y="1940" width="2" height="15" fill="rgb(224,179,54)"/><text x="46.00" y="1950.50"></text></g><g><title>&lt;module&gt; (jinja2/filters.py:20) (1 samples, 0.16%)</title><rect x="43" y="1956" width="2" height="15" fill="rgb(223,6,44)"/><text x="46.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="43" y="1972" width="2" height="15" fill="rgb(229,131,34)"/><text x="46.00" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="43" y="1988" width="2" height="15" fill="rgb(236,128,47)"/><text x="46.00" y="1998.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="43" y="2004" width="2" height="15" fill="rgb(242,191,8)"/><text x="46.00" y="2014.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="43" y="2020" width="2" height="15" fill="rgb(220,122,30)"/><text x="46.00" y="2030.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="43" y="2036" width="2" height="15" fill="rgb(209,117,35)"/><text x="46.00" y="2046.50"></text></g><g><title>&lt;module&gt; (jinja2/runtime.py:316) (1 samples, 0.16%)</title><rect x="43" y="2052" width="2" height="15" fill="rgb(210,74,35)"/><text x="46.00" y="2062.50"></text></g><g><title>register (abc.py:135) (1 samples, 0.16%)</title><rect x="43" y="2068" width="2" height="15" fill="rgb(218,194,4)"/><text x="46.00" y="2078.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.16%)</title><rect x="43" y="2084" width="2" height="15" fill="rgb(232,188,29)"/><text x="46.00" y="2094.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.16%)</title><rect x="43" y="2100" width="2" height="15" fill="rgb(214,131,41)"/><text x="46.00" y="2110.50"></text></g><g><title>__subclasshook__ (_collections_abc.py:396) (1 samples, 0.16%)</title><rect x="43" y="2116" width="2" height="15" fill="rgb(219,55,46)"/><text x="46.00" y="2126.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:47) (1 samples, 0.16%)</title><rect x="45" y="52" width="2" height="15" fill="rgb(209,165,1)"/><text x="48.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:46) (1 samples, 0.16%)</title><rect x="45" y="68" width="2" height="15" fill="rgb(246,21,6)"/><text x="48.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:26) (1 samples, 0.16%)</title><rect x="45" y="84" width="2" height="15" fill="rgb(245,145,20)"/><text x="48.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:18) (1 samples, 0.16%)</title><rect x="45" y="100" width="2" height="15" fill="rgb(240,204,8)"/><text x="48.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.16%)</title><rect x="45" y="116" width="2" height="15" fill="rgb(250,203,44)"/><text x="48.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.16%)</title><rect x="45" y="132" width="2" height="15" fill="rgb(235,47,37)"/><text x="48.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (1 samples, 0.16%)</title><rect x="45" y="148" width="2" height="15" fill="rgb(213,18,1)"/><text x="48.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (1 samples, 0.16%)</title><rect x="45" y="164" width="2" height="15" fill="rgb(210,20,1)"/><text x="48.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="45" y="180" width="2" height="15" fill="rgb(240,220,5)"/><text x="48.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="45" y="196" width="2" height="15" fill="rgb(246,151,7)"/><text x="48.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.16%)</title><rect x="45" y="212" width="2" height="15" fill="rgb(216,55,20)"/><text x="48.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.16%)</title><rect x="45" y="228" width="2" height="15" fill="rgb(230,133,52)"/><text x="48.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (1 samples, 0.16%)</title><rect x="45" y="244" width="2" height="15" fill="rgb(235,91,12)"/><text x="48.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (1 samples, 0.16%)</title><rect x="45" y="260" width="2" height="15" fill="rgb(217,112,38)"/><text x="48.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.16%)</title><rect x="45" y="276" width="2" height="15" fill="rgb(211,11,28)"/><text x="48.00" y="286.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (2 samples, 0.32%)</title><rect x="49" y="148" width="3" height="15" fill="rgb(219,89,37)"/><text x="52.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (2 samples, 0.32%)</title><rect x="49" y="164" width="3" height="15" fill="rgb(242,1,20)"/><text x="52.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.16%)</title><rect x="52" y="180" width="2" height="15" fill="rgb(230,103,11)"/><text x="55.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.16%)</title><rect x="54" y="180" width="2" height="15" fill="rgb(207,168,41)"/><text x="57.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.16%)</title><rect x="56" y="180" width="2" height="15" fill="rgb(226,178,46)"/><text x="59.00" y="190.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (4 samples, 0.63%)</title><rect x="52" y="148" width="8" height="15" fill="rgb(245,109,41)"/><text x="55.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (4 samples, 0.63%)</title><rect x="52" y="164" width="8" height="15" fill="rgb(227,125,18)"/><text x="55.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.16%)</title><rect x="58" y="180" width="2" height="15" fill="rgb(205,189,29)"/><text x="61.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.16%)</title><rect x="58" y="196" width="2" height="15" fill="rgb(211,133,25)"/><text x="61.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.16%)</title><rect x="64" y="228" width="1" height="15" fill="rgb(211,93,3)"/><text x="67.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.32%)</title><rect x="73" y="244" width="4" height="15" fill="rgb(216,73,54)"/><text x="76.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (8 samples, 1.26%)</title><rect x="64" y="196" width="14" height="15" fill="rgb(237,5,41)"/><text x="67.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 1.26%)</title><rect x="64" y="212" width="14" height="15" fill="rgb(215,21,30)"/><text x="67.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 1.11%)</title><rect x="65" y="228" width="13" height="15" fill="rgb(229,140,43)"/><text x="68.00" y="238.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.16%)</title><rect x="77" y="244" width="1" height="15" fill="rgb(218,129,1)"/><text x="80.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.16%)</title><rect x="78" y="228" width="2" height="15" fill="rgb(214,72,37)"/><text x="81.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.16%)</title><rect x="80" y="228" width="2" height="15" fill="rgb(220,213,40)"/><text x="83.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.16%)</title><rect x="80" y="244" width="2" height="15" fill="rgb(229,26,35)"/><text x="83.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.16%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(233,18,24)"/><text x="85.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.16%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(228,116,10)"/><text x="85.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.47%)</title><rect x="84" y="228" width="6" height="15" fill="rgb(240,42,44)"/><text x="87.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (2 samples, 0.32%)</title><rect x="86" y="244" width="4" height="15" fill="rgb(234,48,12)"/><text x="89.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.32%)</title><rect x="86" y="260" width="4" height="15" fill="rgb(205,129,53)"/><text x="89.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.16%)</title><rect x="90" y="228" width="2" height="15" fill="rgb(239,99,53)"/><text x="93.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.16%)</title><rect x="90" y="244" width="2" height="15" fill="rgb(238,210,24)"/><text x="93.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.16%)</title><rect x="90" y="260" width="2" height="15" fill="rgb(228,140,2)"/><text x="93.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.16%)</title><rect x="90" y="276" width="2" height="15" fill="rgb(212,77,41)"/><text x="93.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.16%)</title><rect x="90" y="292" width="2" height="15" fill="rgb(254,33,52)"/><text x="93.00" y="302.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.16%)</title><rect x="90" y="308" width="2" height="15" fill="rgb(246,112,49)"/><text x="93.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.32%)</title><rect x="92" y="228" width="3" height="15" fill="rgb(236,189,10)"/><text x="95.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.16%)</title><rect x="93" y="244" width="2" height="15" fill="rgb(254,65,46)"/><text x="96.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.32%)</title><rect x="95" y="228" width="4" height="15" fill="rgb(230,229,50)"/><text x="98.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.16%)</title><rect x="97" y="244" width="2" height="15" fill="rgb(234,3,7)"/><text x="100.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.16%)</title><rect x="99" y="244" width="2" height="15" fill="rgb(247,189,46)"/><text x="102.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.16%)</title><rect x="99" y="260" width="2" height="15" fill="rgb(217,4,15)"/><text x="102.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.32%)</title><rect x="99" y="228" width="4" height="15" fill="rgb(210,6,32)"/><text x="102.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.16%)</title><rect x="101" y="244" width="2" height="15" fill="rgb(246,171,10)"/><text x="104.00" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (14 samples, 2.21%)</title><rect x="78" y="212" width="27" height="15" fill="rgb(231,140,12)"/><text x="81.00" y="222.50">_..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.16%)</title><rect x="103" y="228" width="2" height="15" fill="rgb(236,167,26)"/><text x="106.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.16%)</title><rect x="103" y="244" width="2" height="15" fill="rgb(233,109,40)"/><text x="106.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (15 samples, 2.37%)</title><rect x="78" y="196" width="28" height="15" fill="rgb(237,183,46)"/><text x="81.00" y="206.50">p..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.16%)</title><rect x="105" y="212" width="1" height="15" fill="rgb(242,7,39)"/><text x="108.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.16%)</title><rect x="105" y="228" width="1" height="15" fill="rgb(209,49,35)"/><text x="108.00" y="238.50"></text></g><g><title>0x7f17e8b70f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="106" y="228" width="2" height="15" fill="rgb(224,180,46)"/><text x="109.00" y="238.50"></text></g><g><title>0x7f17e8b60d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="106" y="244" width="2" height="15" fill="rgb(206,63,34)"/><text x="109.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.16%)</title><rect x="106" y="260" width="2" height="15" fill="rgb(210,206,23)"/><text x="109.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.16%)</title><rect x="106" y="276" width="2" height="15" fill="rgb(232,228,52)"/><text x="109.00" y="286.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.16%)</title><rect x="106" y="292" width="2" height="15" fill="rgb(226,185,14)"/><text x="109.00" y="302.50"></text></g><g><title>0x7f17e8b70f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="108" y="228" width="2" height="15" fill="rgb(209,60,27)"/><text x="111.00" y="238.50"></text></g><g><title>0x7f17e8b63666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="110" y="292" width="2" height="15" fill="rgb(222,32,34)"/><text x="113.00" y="302.50"></text></g><g><title>0x7f17e8b592fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="110" y="308" width="2" height="15" fill="rgb(223,129,42)"/><text x="113.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.16%)</title><rect x="110" y="324" width="2" height="15" fill="rgb(251,164,34)"/><text x="113.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.16%)</title><rect x="110" y="340" width="2" height="15" fill="rgb(221,219,34)"/><text x="113.00" y="350.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.16%)</title><rect x="110" y="356" width="2" height="15" fill="rgb(222,43,40)"/><text x="113.00" y="366.50"></text></g><g><title>0x7f180f12d902 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="110" y="372" width="2" height="15" fill="rgb(252,76,51)"/><text x="113.00" y="382.50"></text></g><g><title>0x7f17e8b7f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="110" y="260" width="4" height="15" fill="rgb(207,151,24)"/><text x="113.00" y="270.50"></text></g><g><title>0x7f17e8b63d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="110" y="276" width="4" height="15" fill="rgb(233,22,3)"/><text x="113.00" y="286.50"></text></g><g><title>0x7f17e8b636fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="112" y="292" width="2" height="15" fill="rgb(220,71,44)"/><text x="115.00" y="302.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.16%)</title><rect x="114" y="276" width="2" height="15" fill="rgb(229,210,27)"/><text x="117.00" y="286.50"></text></g><g><title>0x7f17e8b7f592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="114" y="260" width="4" height="15" fill="rgb(254,63,26)"/><text x="117.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.16%)</title><rect x="116" y="276" width="2" height="15" fill="rgb(218,126,38)"/><text x="119.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.16%)</title><rect x="116" y="292" width="2" height="15" fill="rgb(213,47,14)"/><text x="119.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.16%)</title><rect x="116" y="308" width="2" height="15" fill="rgb(220,124,5)"/><text x="119.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.16%)</title><rect x="116" y="324" width="2" height="15" fill="rgb(207,173,54)"/><text x="119.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.16%)</title><rect x="116" y="340" width="2" height="15" fill="rgb(252,225,36)"/><text x="119.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.16%)</title><rect x="116" y="356" width="2" height="15" fill="rgb(252,204,39)"/><text x="119.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="116" y="372" width="2" height="15" fill="rgb(245,47,13)"/><text x="119.00" y="382.50"></text></g><g><title>0x7f17e8b7f698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="118" y="260" width="1" height="15" fill="rgb(223,92,44)"/><text x="121.00" y="270.50"></text></g><g><title>0x7f17e8b7f6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="119" y="260" width="4" height="15" fill="rgb(216,133,45)"/><text x="122.00" y="270.50"></text></g><g><title>0x7f17e8b7f6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="123" y="260" width="2" height="15" fill="rgb(232,97,53)"/><text x="126.00" y="270.50"></text></g><g><title>0x7f17e8b7f6c6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="125" y="260" width="2" height="15" fill="rgb(239,205,25)"/><text x="128.00" y="270.50"></text></g><g><title>0x7f17e8b70fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.58%)</title><rect x="110" y="228" width="19" height="15" fill="rgb(231,143,54)"/><text x="113.00" y="238.50"></text></g><g><title>0x7f17e8b80405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 1.58%)</title><rect x="110" y="244" width="19" height="15" fill="rgb(245,137,5)"/><text x="113.00" y="254.50"></text></g><g><title>0x7f17e8b7f6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="127" y="260" width="2" height="15" fill="rgb(248,134,23)"/><text x="130.00" y="270.50"></text></g><g><title>0x7f17e8b70ff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="129" y="228" width="2" height="15" fill="rgb(231,33,35)"/><text x="132.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.16%)</title><rect x="131" y="244" width="2" height="15" fill="rgb(243,57,45)"/><text x="134.00" y="254.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.16%)</title><rect x="131" y="260" width="2" height="15" fill="rgb(232,47,11)"/><text x="134.00" y="270.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.16%)</title><rect x="131" y="276" width="2" height="15" fill="rgb(226,35,30)"/><text x="134.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.16%)</title><rect x="131" y="292" width="2" height="15" fill="rgb(248,25,10)"/><text x="134.00" y="302.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.16%)</title><rect x="133" y="276" width="1" height="15" fill="rgb(240,164,34)"/><text x="136.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.32%)</title><rect x="133" y="260" width="3" height="15" fill="rgb(249,198,44)"/><text x="136.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3950) (1 samples, 0.16%)</title><rect x="134" y="276" width="2" height="15" fill="rgb(239,211,52)"/><text x="137.00" y="286.50"></text></g><g><title>0x7f17e8b7105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.63%)</title><rect x="131" y="228" width="7" height="15" fill="rgb(229,55,13)"/><text x="134.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.47%)</title><rect x="133" y="244" width="5" height="15" fill="rgb(226,158,8)"/><text x="136.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.16%)</title><rect x="136" y="260" width="2" height="15" fill="rgb(207,89,52)"/><text x="139.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="136" y="276" width="2" height="15" fill="rgb(223,185,25)"/><text x="139.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.16%)</title><rect x="136" y="292" width="2" height="15" fill="rgb(239,55,3)"/><text x="139.00" y="302.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:156) (1 samples, 0.16%)</title><rect x="136" y="308" width="2" height="15" fill="rgb(240,186,20)"/><text x="139.00" y="318.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (18 samples, 2.84%)</title><rect x="106" y="196" width="34" height="15" fill="rgb(228,50,9)"/><text x="109.00" y="206.50">pr..</text></g><g><title>0x7f17e8b71d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 2.84%)</title><rect x="106" y="212" width="34" height="15" fill="rgb(230,53,29)"/><text x="109.00" y="222.50">0x..</text></g><g><title>0x7f17e8b71328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="138" y="228" width="2" height="15" fill="rgb(210,16,15)"/><text x="141.00" y="238.50"></text></g><g><title>array_reshape (methods.c:179) (1 samples, 0.16%)</title><rect x="138" y="244" width="2" height="15" fill="rgb(245,86,28)"/><text x="141.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.47%)</title><rect x="140" y="196" width="6" height="15" fill="rgb(242,159,10)"/><text x="143.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (3 samples, 0.47%)</title><rect x="140" y="212" width="6" height="15" fill="rgb(216,130,33)"/><text x="143.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (46 samples, 7.27%)</title><rect x="62" y="180" width="85" height="15" fill="rgb(243,154,10)"/><text x="65.00" y="190.50">&lt;listcomp&gt;..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.16%)</title><rect x="146" y="196" width="1" height="15" fill="rgb(247,143,50)"/><text x="149.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (47 samples, 7.42%)</title><rect x="62" y="164" width="87" height="15" fill="rgb(241,70,52)"/><text x="65.00" y="174.50">_get_media..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.16%)</title><rect x="147" y="180" width="2" height="15" fill="rgb(254,16,10)"/><text x="150.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.16%)</title><rect x="147" y="196" width="2" height="15" fill="rgb(242,0,21)"/><text x="150.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.16%)</title><rect x="147" y="212" width="2" height="15" fill="rgb(245,126,22)"/><text x="150.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.16%)</title><rect x="147" y="228" width="2" height="15" fill="rgb(246,14,5)"/><text x="150.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:540) (1 samples, 0.16%)</title><rect x="147" y="244" width="2" height="15" fill="rgb(209,167,48)"/><text x="150.00" y="254.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (1 samples, 0.16%)</title><rect x="147" y="260" width="2" height="15" fill="rgb(212,0,28)"/><text x="150.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.16%)</title><rect x="147" y="276" width="2" height="15" fill="rgb(209,5,49)"/><text x="150.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.16%)</title><rect x="147" y="292" width="2" height="15" fill="rgb(224,228,42)"/><text x="150.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.16%)</title><rect x="147" y="308" width="2" height="15" fill="rgb(251,164,37)"/><text x="150.00" y="318.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c:201) (1 samples, 0.16%)</title><rect x="147" y="324" width="2" height="15" fill="rgb(230,222,38)"/><text x="150.00" y="334.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:56) (1 samples, 0.16%)</title><rect x="149" y="228" width="2" height="15" fill="rgb(230,185,50)"/><text x="152.00" y="238.50"></text></g><g><title>_new_argsortlike (item_selection.c:1045) (1 samples, 0.16%)</title><rect x="151" y="276" width="2" height="15" fill="rgb(223,172,45)"/><text x="154.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (1 samples, 0.16%)</title><rect x="153" y="276" width="2" height="15" fill="rgb(247,93,39)"/><text x="156.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (3 samples, 0.47%)</title><rect x="155" y="292" width="5" height="15" fill="rgb(236,112,49)"/><text x="158.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (2 samples, 0.32%)</title><rect x="157" y="308" width="3" height="15" fill="rgb(234,201,22)"/><text x="160.00" y="318.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (8 samples, 1.26%)</title><rect x="149" y="164" width="15" height="15" fill="rgb(237,54,13)"/><text x="152.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (8 samples, 1.26%)</title><rect x="149" y="180" width="15" height="15" fill="rgb(252,145,8)"/><text x="152.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 1.26%)</title><rect x="149" y="196" width="15" height="15" fill="rgb(246,76,40)"/><text x="152.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (8 samples, 1.26%)</title><rect x="149" y="212" width="15" height="15" fill="rgb(235,48,32)"/><text x="152.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (7 samples, 1.11%)</title><rect x="151" y="228" width="13" height="15" fill="rgb(250,158,20)"/><text x="154.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1395) (7 samples, 1.11%)</title><rect x="151" y="244" width="13" height="15" fill="rgb(244,198,52)"/><text x="154.00" y="254.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (7 samples, 1.11%)</title><rect x="151" y="260" width="13" height="15" fill="rgb(232,68,53)"/><text x="154.00" y="270.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (5 samples, 0.79%)</title><rect x="155" y="276" width="9" height="15" fill="rgb(232,205,28)"/><text x="158.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:223) (2 samples, 0.32%)</title><rect x="160" y="292" width="4" height="15" fill="rgb(219,34,31)"/><text x="163.00" y="302.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1425) (1 samples, 0.16%)</title><rect x="164" y="196" width="2" height="15" fill="rgb(244,15,33)"/><text x="167.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:127) (1 samples, 0.16%)</title><rect x="164" y="212" width="2" height="15" fill="rgb(248,226,50)"/><text x="167.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1521) (2 samples, 0.32%)</title><rect x="164" y="180" width="4" height="15" fill="rgb(243,179,12)"/><text x="167.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1433) (1 samples, 0.16%)</title><rect x="166" y="196" width="2" height="15" fill="rgb(254,161,25)"/><text x="169.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1617) (1 samples, 0.16%)</title><rect x="168" y="180" width="2" height="15" fill="rgb(221,218,7)"/><text x="171.00" y="190.50"></text></g><g><title>array_subscript (mapping.c:1619) (1 samples, 0.16%)</title><rect x="170" y="180" width="2" height="15" fill="rgb(214,209,22)"/><text x="173.00" y="190.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.16%)</title><rect x="170" y="196" width="2" height="15" fill="rgb(224,185,12)"/><text x="173.00" y="206.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5531) (1 samples, 0.16%)</title><rect x="172" y="308" width="2" height="15" fill="rgb(220,205,46)"/><text x="175.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="172" y="324" width="2" height="15" fill="rgb(205,142,24)"/><text x="175.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.16%)</title><rect x="172" y="340" width="2" height="15" fill="rgb(216,160,33)"/><text x="175.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.16%)</title><rect x="172" y="356" width="2" height="15" fill="rgb(228,195,38)"/><text x="175.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (1 samples, 0.16%)</title><rect x="174" y="340" width="1" height="15" fill="rgb(224,216,22)"/><text x="177.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:176) (1 samples, 0.16%)</title><rect x="174" y="356" width="1" height="15" fill="rgb(224,97,20)"/><text x="177.00" y="366.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c:827) (1 samples, 0.16%)</title><rect x="174" y="372" width="1" height="15" fill="rgb(249,62,43)"/><text x="177.00" y="382.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3878) (1 samples, 0.16%)</title><rect x="175" y="340" width="2" height="15" fill="rgb(254,18,34)"/><text x="178.00" y="350.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src:350) (1 samples, 0.16%)</title><rect x="175" y="356" width="2" height="15" fill="rgb(254,84,45)"/><text x="178.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3902) (1 samples, 0.16%)</title><rect x="177" y="340" width="2" height="15" fill="rgb(243,65,1)"/><text x="180.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.16%)</title><rect x="181" y="356" width="2" height="15" fill="rgb(216,2,2)"/><text x="184.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.16%)</title><rect x="183" y="356" width="2" height="15" fill="rgb(232,226,20)"/><text x="186.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1756) (1 samples, 0.16%)</title><rect x="185" y="356" width="2" height="15" fill="rgb(242,219,21)"/><text x="188.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (9 samples, 1.42%)</title><rect x="172" y="180" width="16" height="15" fill="rgb(251,172,43)"/><text x="175.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (9 samples, 1.42%)</title><rect x="172" y="196" width="16" height="15" fill="rgb(246,7,13)"/><text x="175.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 1.42%)</title><rect x="172" y="212" width="16" height="15" fill="rgb(206,86,4)"/><text x="175.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (9 samples, 1.42%)</title><rect x="172" y="228" width="16" height="15" fill="rgb(216,167,10)"/><text x="175.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (9 samples, 1.42%)</title><rect x="172" y="244" width="16" height="15" fill="rgb(252,63,39)"/><text x="175.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (9 samples, 1.42%)</title><rect x="172" y="260" width="16" height="15" fill="rgb(251,12,24)"/><text x="175.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (9 samples, 1.42%)</title><rect x="172" y="276" width="16" height="15" fill="rgb(236,31,42)"/><text x="175.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (9 samples, 1.42%)</title><rect x="172" y="292" width="16" height="15" fill="rgb(206,54,53)"/><text x="175.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (8 samples, 1.26%)</title><rect x="174" y="308" width="14" height="15" fill="rgb(209,52,10)"/><text x="177.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (8 samples, 1.26%)</title><rect x="174" y="324" width="14" height="15" fill="rgb(211,9,25)"/><text x="177.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (5 samples, 0.79%)</title><rect x="179" y="340" width="9" height="15" fill="rgb(223,43,48)"/><text x="182.00" y="350.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src:88) (1 samples, 0.16%)</title><rect x="187" y="356" width="1" height="15" fill="rgb(226,111,14)"/><text x="190.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.16%)</title><rect x="192" y="308" width="2" height="15" fill="rgb(241,63,3)"/><text x="195.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.16%)</title><rect x="192" y="324" width="2" height="15" fill="rgb(250,152,46)"/><text x="195.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.16%)</title><rect x="192" y="340" width="2" height="15" fill="rgb(211,216,47)"/><text x="195.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:80) (1 samples, 0.16%)</title><rect x="192" y="356" width="2" height="15" fill="rgb(223,101,53)"/><text x="195.00" y="366.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="192" y="372" width="2" height="15" fill="rgb(245,229,27)"/><text x="195.00" y="382.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.16%)</title><rect x="194" y="308" width="2" height="15" fill="rgb(237,147,6)"/><text x="197.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.16%)</title><rect x="194" y="324" width="2" height="15" fill="rgb(212,204,34)"/><text x="197.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3137) (1 samples, 0.16%)</title><rect x="194" y="340" width="2" height="15" fill="rgb(212,27,53)"/><text x="197.00" y="350.50"></text></g><g><title>reduce_loop (ufunc_object.c:3537) (1 samples, 0.16%)</title><rect x="196" y="324" width="2" height="15" fill="rgb(237,72,28)"/><text x="199.00" y="334.50"></text></g><g><title>reduce_loop (ufunc_object.c:3540) (1 samples, 0.16%)</title><rect x="198" y="324" width="2" height="15" fill="rgb(225,49,47)"/><text x="201.00" y="334.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.16%)</title><rect x="200" y="340" width="2" height="15" fill="rgb(241,24,22)"/><text x="203.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (1 samples, 0.16%)</title><rect x="202" y="340" width="1" height="15" fill="rgb(228,46,19)"/><text x="205.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.16%)</title><rect x="202" y="356" width="1" height="15" fill="rgb(244,125,42)"/><text x="205.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1762) (1 samples, 0.16%)</title><rect x="203" y="340" width="2" height="15" fill="rgb(248,15,37)"/><text x="206.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:235) (1 samples, 0.16%)</title><rect x="205" y="340" width="2" height="15" fill="rgb(228,186,32)"/><text x="208.00" y="350.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:240) (1 samples, 0.16%)</title><rect x="207" y="340" width="2" height="15" fill="rgb(231,190,52)"/><text x="210.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (12 samples, 1.90%)</title><rect x="188" y="180" width="23" height="15" fill="rgb(206,23,33)"/><text x="191.00" y="190.50">s..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (12 samples, 1.90%)</title><rect x="188" y="196" width="23" height="15" fill="rgb(210,204,14)"/><text x="191.00" y="206.50">s..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.90%)</title><rect x="188" y="212" width="23" height="15" fill="rgb(244,23,16)"/><text x="191.00" y="222.50">a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (12 samples, 1.90%)</title><rect x="188" y="228" width="23" height="15" fill="rgb(225,31,21)"/><text x="191.00" y="238.50">s..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (11 samples, 1.74%)</title><rect x="190" y="244" width="21" height="15" fill="rgb(230,16,53)"/><text x="193.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (10 samples, 1.58%)</title><rect x="192" y="260" width="19" height="15" fill="rgb(238,216,15)"/><text x="195.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (10 samples, 1.58%)</title><rect x="192" y="276" width="19" height="15" fill="rgb(223,212,29)"/><text x="195.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (10 samples, 1.58%)</title><rect x="192" y="292" width="19" height="15" fill="rgb(230,150,36)"/><text x="195.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (8 samples, 1.26%)</title><rect x="196" y="308" width="15" height="15" fill="rgb(215,21,43)"/><text x="199.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (6 samples, 0.95%)</title><rect x="200" y="324" width="11" height="15" fill="rgb(218,220,5)"/><text x="203.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:268) (1 samples, 0.16%)</title><rect x="209" y="340" width="2" height="15" fill="rgb(230,181,54)"/><text x="212.00" y="350.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="211" y="196" width="2" height="15" fill="rgb(253,97,9)"/><text x="214.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="211" y="212" width="2" height="15" fill="rgb(242,3,2)"/><text x="214.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (1 samples, 0.16%)</title><rect x="211" y="228" width="2" height="15" fill="rgb(225,110,14)"/><text x="214.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.16%)</title><rect x="211" y="244" width="2" height="15" fill="rgb(237,147,5)"/><text x="214.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.16%)</title><rect x="211" y="260" width="2" height="15" fill="rgb(210,97,17)"/><text x="214.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.16%)</title><rect x="211" y="276" width="2" height="15" fill="rgb(221,43,41)"/><text x="214.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.16%)</title><rect x="211" y="292" width="2" height="15" fill="rgb(244,23,36)"/><text x="214.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.16%)</title><rect x="211" y="308" width="2" height="15" fill="rgb(222,166,54)"/><text x="214.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:110) (1 samples, 0.16%)</title><rect x="211" y="324" width="2" height="15" fill="rgb(249,191,44)"/><text x="214.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="213" y="196" width="2" height="15" fill="rgb(206,43,3)"/><text x="216.00" y="206.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="213" y="212" width="2" height="15" fill="rgb(252,209,39)"/><text x="216.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2272) (1 samples, 0.16%)</title><rect x="213" y="228" width="2" height="15" fill="rgb(205,0,35)"/><text x="216.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (1 samples, 0.16%)</title><rect x="213" y="244" width="2" height="15" fill="rgb(245,103,41)"/><text x="216.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (1 samples, 0.16%)</title><rect x="213" y="260" width="2" height="15" fill="rgb(244,131,31)"/><text x="216.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.16%)</title><rect x="213" y="276" width="2" height="15" fill="rgb(224,219,49)"/><text x="216.00" y="286.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (1 samples, 0.16%)</title><rect x="215" y="228" width="1" height="15" fill="rgb(248,120,16)"/><text x="218.00" y="238.50"></text></g><g><title>isclose (numpy/core/numeric.py:2270) (1 samples, 0.16%)</title><rect x="216" y="228" width="2" height="15" fill="rgb(228,7,11)"/><text x="219.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="216" y="244" width="2" height="15" fill="rgb(249,155,10)"/><text x="219.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(244,22,9)"/><text x="219.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (1 samples, 0.16%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(241,100,29)"/><text x="219.00" y="286.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (1 samples, 0.16%)</title><rect x="216" y="292" width="2" height="15" fill="rgb(207,153,40)"/><text x="219.00" y="302.50"></text></g><g><title>DOUBLE_isfinite (loops.c.src:1809) (1 samples, 0.16%)</title><rect x="216" y="308" width="2" height="15" fill="rgb(238,142,10)"/><text x="219.00" y="318.50"></text></g><g><title>run_isfinite_simd_DOUBLE (simd.inc.src:325) (1 samples, 0.16%)</title><rect x="216" y="324" width="2" height="15" fill="rgb(208,209,36)"/><text x="219.00" y="334.50"></text></g><g><title>sse2_isfinite_DOUBLE (simd.inc.src:881) (1 samples, 0.16%)</title><rect x="216" y="340" width="2" height="15" fill="rgb(226,64,14)"/><text x="219.00" y="350.50"></text></g><g><title>_mm_andnot_pd (emmintrin.h:321) (1 samples, 0.16%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(238,224,34)"/><text x="219.00" y="366.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:2) (1 samples, 0.16%)</title><rect x="218" y="244" width="2" height="15" fill="rgb(254,10,45)"/><text x="221.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.16%)</title><rect x="220" y="292" width="2" height="15" fill="rgb(233,111,8)"/><text x="223.00" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (3 samples, 0.47%)</title><rect x="218" y="228" width="6" height="15" fill="rgb(210,121,15)"/><text x="221.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (2 samples, 0.32%)</title><rect x="220" y="244" width="4" height="15" fill="rgb(234,207,37)"/><text x="223.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.32%)</title><rect x="220" y="260" width="4" height="15" fill="rgb(253,202,4)"/><text x="223.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (2 samples, 0.32%)</title><rect x="220" y="276" width="4" height="15" fill="rgb(232,173,30)"/><text x="223.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (1 samples, 0.16%)</title><rect x="222" y="292" width="2" height="15" fill="rgb(223,60,17)"/><text x="225.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.16%)</title><rect x="222" y="308" width="2" height="15" fill="rgb(231,15,50)"/><text x="225.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.16%)</title><rect x="222" y="324" width="2" height="15" fill="rgb(234,199,11)"/><text x="225.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.16%)</title><rect x="222" y="340" width="2" height="15" fill="rgb(252,83,43)"/><text x="225.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.16%)</title><rect x="222" y="356" width="2" height="15" fill="rgb(248,221,15)"/><text x="225.00" y="366.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (1 samples, 0.16%)</title><rect x="224" y="244" width="2" height="15" fill="rgb(208,129,2)"/><text x="227.00" y="254.50"></text></g><g><title>__init__ (numpy/core/_ufunc_config.py:438) (1 samples, 0.16%)</title><rect x="224" y="260" width="2" height="15" fill="rgb(249,179,8)"/><text x="227.00" y="270.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4849) (1 samples, 0.16%)</title><rect x="228" y="292" width="1" height="15" fill="rgb(229,67,11)"/><text x="231.00" y="302.50"></text></g><g><title>0x7f180e3510d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="228" y="308" width="1" height="15" fill="rgb(225,76,24)"/><text x="231.00" y="318.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (3 samples, 0.47%)</title><rect x="226" y="260" width="5" height="15" fill="rgb(226,99,14)"/><text x="229.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:135) (3 samples, 0.47%)</title><rect x="226" y="276" width="5" height="15" fill="rgb(254,204,48)"/><text x="229.00" y="286.50"></text></g><g><title>ufunc_seterr (ufunc_object.c:4853) (1 samples, 0.16%)</title><rect x="229" y="292" width="2" height="15" fill="rgb(224,185,50)"/><text x="232.00" y="302.50"></text></g><g><title>ufunc_update_use_defaults (extobj.c:35) (1 samples, 0.16%)</title><rect x="229" y="308" width="2" height="15" fill="rgb(238,226,33)"/><text x="232.00" y="318.50"></text></g><g><title>_extract_pyvals (extobj.c:260) (1 samples, 0.16%)</title><rect x="229" y="324" width="2" height="15" fill="rgb(212,14,51)"/><text x="232.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.16%)</title><rect x="231" y="324" width="2" height="15" fill="rgb(210,14,0)"/><text x="234.00" y="334.50"></text></g><g><title>array_multiply (number.c:354) (2 samples, 0.32%)</title><rect x="231" y="260" width="4" height="15" fill="rgb(231,94,43)"/><text x="234.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.32%)</title><rect x="231" y="276" width="4" height="15" fill="rgb(223,202,6)"/><text x="234.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.32%)</title><rect x="231" y="292" width="4" height="15" fill="rgb(253,102,25)"/><text x="234.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.32%)</title><rect x="231" y="308" width="4" height="15" fill="rgb(215,19,22)"/><text x="234.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.16%)</title><rect x="233" y="324" width="2" height="15" fill="rgb(231,4,42)"/><text x="236.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1628) (1 samples, 0.16%)</title><rect x="233" y="340" width="2" height="15" fill="rgb(244,29,27)"/><text x="236.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:77) (1 samples, 0.16%)</title><rect x="233" y="356" width="2" height="15" fill="rgb(243,190,29)"/><text x="236.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.16%)</title><rect x="233" y="372" width="2" height="15" fill="rgb(208,152,16)"/><text x="236.00" y="382.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (39 samples, 6.16%)</title><rect x="164" y="164" width="73" height="15" fill="rgb(221,60,37)"/><text x="167.00" y="174.50">_get_med..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (14 samples, 2.21%)</title><rect x="211" y="180" width="26" height="15" fill="rgb(235,207,31)"/><text x="214.00" y="190.50">s..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (12 samples, 1.90%)</title><rect x="215" y="196" width="22" height="15" fill="rgb(251,201,43)"/><text x="218.00" y="206.50">i..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.90%)</title><rect x="215" y="212" width="22" height="15" fill="rgb(243,190,16)"/><text x="218.00" y="222.50">a..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (7 samples, 1.11%)</title><rect x="224" y="228" width="13" height="15" fill="rgb(224,30,13)"/><text x="227.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (6 samples, 0.95%)</title><rect x="226" y="244" width="11" height="15" fill="rgb(216,71,28)"/><text x="229.00" y="254.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.16%)</title><rect x="235" y="260" width="2" height="15" fill="rgb(233,217,9)"/><text x="238.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.16%)</title><rect x="235" y="276" width="2" height="15" fill="rgb(246,125,37)"/><text x="238.00" y="286.50"></text></g><g><title>_apply_array_wrap (ufunc_object.c:516) (1 samples, 0.16%)</title><rect x="235" y="292" width="2" height="15" fill="rgb(237,25,19)"/><text x="238.00" y="302.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="239" y="180" width="2" height="15" fill="rgb(235,93,12)"/><text x="242.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="239" y="196" width="2" height="15" fill="rgb(245,58,11)"/><text x="242.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.16%)</title><rect x="239" y="212" width="2" height="15" fill="rgb(207,217,25)"/><text x="242.00" y="222.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.16%)</title><rect x="241" y="180" width="2" height="15" fill="rgb(250,40,1)"/><text x="244.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="241" y="196" width="2" height="15" fill="rgb(254,217,1)"/><text x="244.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="241" y="212" width="2" height="15" fill="rgb(240,23,27)"/><text x="244.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.16%)</title><rect x="241" y="228" width="2" height="15" fill="rgb(232,93,26)"/><text x="244.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.16%)</title><rect x="241" y="244" width="2" height="15" fill="rgb(232,9,6)"/><text x="244.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="241" y="260" width="2" height="15" fill="rgb(229,78,54)"/><text x="244.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2835) (1 samples, 0.16%)</title><rect x="241" y="276" width="2" height="15" fill="rgb(244,95,10)"/><text x="244.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (4 samples, 0.63%)</title><rect x="237" y="164" width="7" height="15" fill="rgb(208,34,0)"/><text x="240.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.16%)</title><rect x="243" y="180" width="1" height="15" fill="rgb(230,149,25)"/><text x="246.00" y="190.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.16%)</title><rect x="243" y="196" width="1" height="15" fill="rgb(239,199,1)"/><text x="246.00" y="206.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:908) (1 samples, 0.16%)</title><rect x="243" y="212" width="1" height="15" fill="rgb(230,5,21)"/><text x="246.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (1 samples, 0.16%)</title><rect x="244" y="164" width="2" height="15" fill="rgb(246,99,40)"/><text x="247.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (1 samples, 0.16%)</title><rect x="244" y="180" width="2" height="15" fill="rgb(213,103,7)"/><text x="247.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (1 samples, 0.16%)</title><rect x="244" y="196" width="2" height="15" fill="rgb(247,129,10)"/><text x="247.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src:3057) (1 samples, 0.16%)</title><rect x="244" y="212" width="2" height="15" fill="rgb(239,192,32)"/><text x="247.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3480) (1 samples, 0.16%)</title><rect x="246" y="196" width="2" height="15" fill="rgb(225,91,13)"/><text x="249.00" y="206.50"></text></g><g><title>LONG_fill (arraytypes.c.src:3710) (1 samples, 0.16%)</title><rect x="246" y="212" width="2" height="15" fill="rgb(215,73,48)"/><text x="249.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (2 samples, 0.32%)</title><rect x="246" y="164" width="4" height="15" fill="rgb(216,16,54)"/><text x="249.00" y="174.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (2 samples, 0.32%)</title><rect x="246" y="180" width="4" height="15" fill="rgb(253,226,30)"/><text x="249.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3504) (1 samples, 0.16%)</title><rect x="248" y="196" width="2" height="15" fill="rgb(215,18,40)"/><text x="251.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.16%)</title><rect x="252" y="180" width="2" height="15" fill="rgb(242,114,2)"/><text x="255.00" y="190.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.16%)</title><rect x="254" y="180" width="2" height="15" fill="rgb(214,87,35)"/><text x="257.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (1 samples, 0.16%)</title><rect x="254" y="196" width="2" height="15" fill="rgb(206,114,7)"/><text x="257.00" y="206.50"></text></g><g><title>_calc_length (ctors.c:3276) (1 samples, 0.16%)</title><rect x="254" y="212" width="2" height="15" fill="rgb(218,111,9)"/><text x="257.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.16%)</title><rect x="256" y="196" width="1" height="15" fill="rgb(237,16,13)"/><text x="259.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.32%)</title><rect x="256" y="180" width="3" height="15" fill="rgb(208,32,48)"/><text x="259.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.16%)</title><rect x="257" y="196" width="2" height="15" fill="rgb(252,70,19)"/><text x="260.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.16%)</title><rect x="257" y="212" width="2" height="15" fill="rgb(241,71,53)"/><text x="260.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.16%)</title><rect x="259" y="196" width="2" height="15" fill="rgb(247,111,5)"/><text x="262.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (115 samples, 18.17%)</title><rect x="49" y="132" width="214" height="15" fill="rgb(227,124,11)"/><text x="52.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (109 samples, 17.22%)</title><rect x="60" y="148" width="203" height="15" fill="rgb(250,207,35)"/><text x="63.00" y="158.50">predict (sklearn/ensemble/..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (7 samples, 1.11%)</title><rect x="250" y="164" width="13" height="15" fill="rgb(238,209,53)"/><text x="253.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.32%)</title><rect x="259" y="180" width="4" height="15" fill="rgb(205,158,27)"/><text x="262.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.16%)</title><rect x="261" y="196" width="2" height="15" fill="rgb(251,117,51)"/><text x="264.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:54) (117 samples, 18.48%)</title><rect x="47" y="52" width="218" height="15" fill="rgb(223,164,21)"/><text x="50.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegr..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:53) (117 samples, 18.48%)</title><rect x="47" y="68" width="218" height="15" fill="rgb(209,164,36)"/><text x="50.00" y="78.50">profile_skl (bench_AdaBoostR..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:37) (117 samples, 18.48%)</title><rect x="47" y="84" width="218" height="15" fill="rgb(244,87,40)"/><text x="50.00" y="94.50">setup_profile (bench_AdaBoos..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:31) (117 samples, 18.48%)</title><rect x="47" y="100" width="218" height="15" fill="rgb(224,4,8)"/><text x="50.00" y="110.50">profile (bench_AdaBoostRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (117 samples, 18.48%)</title><rect x="47" y="116" width="218" height="15" fill="rgb(209,181,26)"/><text x="50.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="263" y="132" width="2" height="15" fill="rgb(210,132,49)"/><text x="266.00" y="142.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:36) (1 samples, 0.16%)</title><rect x="265" y="84" width="2" height="15" fill="rgb(215,193,22)"/><text x="268.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.16%)</title><rect x="265" y="100" width="2" height="15" fill="rgb(214,93,37)"/><text x="268.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.16%)</title><rect x="265" y="116" width="2" height="15" fill="rgb(222,178,53)"/><text x="268.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.16%)</title><rect x="265" y="132" width="2" height="15" fill="rgb(246,115,20)"/><text x="268.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.16%)</title><rect x="265" y="148" width="2" height="15" fill="rgb(230,182,11)"/><text x="268.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.16%)</title><rect x="265" y="164" width="2" height="15" fill="rgb(227,141,44)"/><text x="268.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.16%)</title><rect x="265" y="180" width="2" height="15" fill="rgb(230,186,28)"/><text x="268.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.16%)</title><rect x="265" y="196" width="2" height="15" fill="rgb(230,8,50)"/><text x="268.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="212" width="2" height="15" fill="rgb(249,19,51)"/><text x="268.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="228" width="2" height="15" fill="rgb(216,16,1)"/><text x="268.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="244" width="2" height="15" fill="rgb(229,202,49)"/><text x="268.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="260" width="2" height="15" fill="rgb(252,53,43)"/><text x="268.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="276" width="2" height="15" fill="rgb(240,204,29)"/><text x="268.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.16%)</title><rect x="265" y="292" width="2" height="15" fill="rgb(244,132,19)"/><text x="268.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="308" width="2" height="15" fill="rgb(206,24,45)"/><text x="268.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="324" width="2" height="15" fill="rgb(217,172,15)"/><text x="268.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="340" width="2" height="15" fill="rgb(208,97,38)"/><text x="268.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="356" width="2" height="15" fill="rgb(231,158,19)"/><text x="268.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="372" width="2" height="15" fill="rgb(223,187,15)"/><text x="268.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.16%)</title><rect x="265" y="388" width="2" height="15" fill="rgb(242,11,15)"/><text x="268.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.16%)</title><rect x="265" y="404" width="2" height="15" fill="rgb(244,76,7)"/><text x="268.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.16%)</title><rect x="265" y="420" width="2" height="15" fill="rgb(247,102,21)"/><text x="268.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.16%)</title><rect x="265" y="436" width="2" height="15" fill="rgb(238,26,22)"/><text x="268.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.16%)</title><rect x="265" y="452" width="2" height="15" fill="rgb(207,48,0)"/><text x="268.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.16%)</title><rect x="265" y="468" width="2" height="15" fill="rgb(226,192,3)"/><text x="268.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.16%)</title><rect x="265" y="484" width="2" height="15" fill="rgb(241,90,32)"/><text x="268.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.16%)</title><rect x="265" y="500" width="2" height="15" fill="rgb(236,177,38)"/><text x="268.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.16%)</title><rect x="265" y="516" width="2" height="15" fill="rgb(236,112,40)"/><text x="268.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.16%)</title><rect x="265" y="532" width="2" height="15" fill="rgb(253,178,21)"/><text x="268.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.16%)</title><rect x="265" y="548" width="2" height="15" fill="rgb(246,52,11)"/><text x="268.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.16%)</title><rect x="265" y="564" width="2" height="15" fill="rgb(212,110,19)"/><text x="268.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.16%)</title><rect x="265" y="580" width="2" height="15" fill="rgb(240,11,24)"/><text x="268.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.16%)</title><rect x="265" y="596" width="2" height="15" fill="rgb(237,113,8)"/><text x="268.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.16%)</title><rect x="265" y="612" width="2" height="15" fill="rgb(207,22,41)"/><text x="268.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.16%)</title><rect x="265" y="628" width="2" height="15" fill="rgb(251,138,51)"/><text x="268.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.16%)</title><rect x="265" y="644" width="2" height="15" fill="rgb(206,219,38)"/><text x="268.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1034) (1 samples, 0.16%)</title><rect x="265" y="660" width="2" height="15" fill="rgb(250,145,1)"/><text x="268.00" y="670.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:112) (1 samples, 0.16%)</title><rect x="265" y="676" width="2" height="15" fill="rgb(241,92,10)"/><text x="268.00" y="686.50"></text></g><g><title>__init__ (jinja2/compiler.py:223) (1 samples, 0.16%)</title><rect x="265" y="692" width="2" height="15" fill="rgb(234,137,36)"/><text x="268.00" y="702.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.16%)</title><rect x="269" y="164" width="1" height="15" fill="rgb(238,225,14)"/><text x="272.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.32%)</title><rect x="274" y="180" width="4" height="15" fill="rgb(238,7,20)"/><text x="277.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.16%)</title><rect x="276" y="196" width="2" height="15" fill="rgb(221,165,5)"/><text x="279.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (1 samples, 0.16%)</title><rect x="289" y="212" width="2" height="15" fill="rgb(246,38,11)"/><text x="292.00" y="222.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.16%)</title><rect x="289" y="228" width="2" height="15" fill="rgb(208,34,1)"/><text x="292.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:38) (1 samples, 0.16%)</title><rect x="291" y="212" width="2" height="15" fill="rgb(239,28,25)"/><text x="294.00" y="222.50"></text></g><g><title>recursive_tolist (convert.c:100) (1 samples, 0.16%)</title><rect x="293" y="244" width="2" height="15" fill="rgb(220,142,20)"/><text x="296.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:196) (1 samples, 0.16%)</title><rect x="295" y="260" width="2" height="15" fill="rgb(207,55,47)"/><text x="298.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (2 samples, 0.32%)</title><rect x="295" y="244" width="3" height="15" fill="rgb(236,10,25)"/><text x="298.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:112) (1 samples, 0.16%)</title><rect x="297" y="260" width="1" height="15" fill="rgb(226,23,13)"/><text x="300.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (5 samples, 0.79%)</title><rect x="293" y="212" width="9" height="15" fill="rgb(243,169,1)"/><text x="296.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (5 samples, 0.79%)</title><rect x="293" y="228" width="9" height="15" fill="rgb(234,212,26)"/><text x="296.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (2 samples, 0.32%)</title><rect x="298" y="244" width="4" height="15" fill="rgb(246,187,40)"/><text x="301.00" y="254.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.32%)</title><rect x="298" y="260" width="4" height="15" fill="rgb(254,121,16)"/><text x="301.00" y="270.50"></text></g><g><title>0x7f180f12f700 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="300" y="276" width="2" height="15" fill="rgb(243,13,50)"/><text x="303.00" y="286.50"></text></g><g><title>0x7f180f12cab9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="300" y="292" width="2" height="15" fill="rgb(223,25,41)"/><text x="303.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:43) (1 samples, 0.16%)</title><rect x="302" y="212" width="2" height="15" fill="rgb(239,94,0)"/><text x="305.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1644) (1 samples, 0.16%)</title><rect x="304" y="276" width="2" height="15" fill="rgb(222,79,27)"/><text x="307.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:337) (1 samples, 0.16%)</title><rect x="306" y="308" width="2" height="15" fill="rgb(215,9,12)"/><text x="309.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial_OnInstance (get_attr_string.h:119) (1 samples, 0.16%)</title><rect x="306" y="324" width="2" height="15" fill="rgb(215,16,25)"/><text x="309.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:478) (2 samples, 0.32%)</title><rect x="308" y="308" width="3" height="15" fill="rgb(229,171,45)"/><text x="311.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:127) (2 samples, 0.32%)</title><rect x="311" y="324" width="4" height="15" fill="rgb(205,34,41)"/><text x="314.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (3 samples, 0.47%)</title><rect x="315" y="324" width="6" height="15" fill="rgb(227,220,12)"/><text x="318.00" y="334.50"></text></g><g><title>0x7f180e3500a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="319" y="340" width="2" height="15" fill="rgb(251,17,33)"/><text x="322.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (2 samples, 0.32%)</title><rect x="321" y="340" width="4" height="15" fill="rgb(225,36,8)"/><text x="324.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (2 samples, 0.32%)</title><rect x="325" y="340" width="3" height="15" fill="rgb(208,193,20)"/><text x="328.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (3 samples, 0.47%)</title><rect x="328" y="340" width="6" height="15" fill="rgb(253,169,5)"/><text x="331.00" y="350.50"></text></g><g><title>0x7f180e34f950 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="332" y="356" width="2" height="15" fill="rgb(248,69,25)"/><text x="335.00" y="366.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4478) (1 samples, 0.16%)</title><rect x="334" y="356" width="2" height="15" fill="rgb(223,228,42)"/><text x="337.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (9 samples, 1.42%)</title><rect x="321" y="324" width="17" height="15" fill="rgb(232,206,36)"/><text x="324.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:53) (2 samples, 0.32%)</title><rect x="334" y="340" width="4" height="15" fill="rgb(241,115,49)"/><text x="337.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.16%)</title><rect x="336" y="356" width="2" height="15" fill="rgb(209,73,29)"/><text x="339.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:497) (1 samples, 0.16%)</title><rect x="338" y="324" width="1" height="15" fill="rgb(235,175,23)"/><text x="341.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (3 samples, 0.47%)</title><rect x="339" y="324" width="6" height="15" fill="rgb(211,188,24)"/><text x="342.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (3 samples, 0.47%)</title><rect x="339" y="340" width="6" height="15" fill="rgb(214,201,28)"/><text x="342.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (3 samples, 0.47%)</title><rect x="345" y="324" width="6" height="15" fill="rgb(228,143,27)"/><text x="348.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (26 samples, 4.11%)</title><rect x="306" y="276" width="48" height="15" fill="rgb(232,43,15)"/><text x="309.00" y="286.50">PyAr..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (26 samples, 4.11%)</title><rect x="306" y="292" width="48" height="15" fill="rgb(243,142,36)"/><text x="309.00" y="302.50">PyAr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (23 samples, 3.63%)</title><rect x="311" y="308" width="43" height="15" fill="rgb(211,35,53)"/><text x="314.00" y="318.50">PyAr..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:537) (2 samples, 0.32%)</title><rect x="351" y="324" width="3" height="15" fill="rgb(245,211,48)"/><text x="354.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:829) (1 samples, 0.16%)</title><rect x="354" y="292" width="2" height="15" fill="rgb(228,228,6)"/><text x="357.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:883) (1 samples, 0.16%)</title><rect x="356" y="292" width="2" height="15" fill="rgb(251,229,32)"/><text x="359.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:668) (3 samples, 0.47%)</title><rect x="360" y="308" width="6" height="15" fill="rgb(206,100,17)"/><text x="363.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (3 samples, 0.47%)</title><rect x="366" y="308" width="5" height="15" fill="rgb(219,34,36)"/><text x="369.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (5 samples, 0.79%)</title><rect x="371" y="308" width="9" height="15" fill="rgb(221,70,27)"/><text x="374.00" y="318.50"></text></g><g><title>0x7f180e3500a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="379" y="324" width="1" height="15" fill="rgb(243,201,11)"/><text x="382.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:699) (4 samples, 0.63%)</title><rect x="380" y="308" width="8" height="15" fill="rgb(251,105,43)"/><text x="383.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:703) (6 samples, 0.95%)</title><rect x="388" y="308" width="11" height="15" fill="rgb(245,89,29)"/><text x="391.00" y="318.50"></text></g><g><title>0x7f180e350a40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="397" y="324" width="2" height="15" fill="rgb(237,115,48)"/><text x="400.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:884) (23 samples, 3.63%)</title><rect x="358" y="292" width="43" height="15" fill="rgb(207,226,12)"/><text x="361.00" y="302.50">disc..</text></g><g><title>discover_dimensions (ctors.c:912) (1 samples, 0.16%)</title><rect x="399" y="308" width="2" height="15" fill="rgb(254,46,15)"/><text x="402.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (53 samples, 8.37%)</title><rect x="304" y="260" width="99" height="15" fill="rgb(222,218,54)"/><text x="307.00" y="270.50">PyArray_Fro..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (26 samples, 4.11%)</title><rect x="354" y="276" width="49" height="15" fill="rgb(205,204,19)"/><text x="357.00" y="286.50">PyAr..</text></g><g><title>discover_dimensions (ctors.c:897) (1 samples, 0.16%)</title><rect x="401" y="292" width="2" height="15" fill="rgb(213,99,23)"/><text x="404.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.16%)</title><rect x="403" y="260" width="2" height="15" fill="rgb(207,72,29)"/><text x="406.00" y="270.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (2 samples, 0.32%)</title><rect x="405" y="292" width="3" height="15" fill="rgb(208,182,36)"/><text x="408.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:549) (1 samples, 0.16%)</title><rect x="408" y="292" width="2" height="15" fill="rgb(224,37,20)"/><text x="411.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (2 samples, 0.32%)</title><rect x="410" y="324" width="4" height="15" fill="rgb(205,208,8)"/><text x="413.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (2 samples, 0.32%)</title><rect x="414" y="324" width="4" height="15" fill="rgb(211,184,8)"/><text x="417.00" y="334.50"></text></g><g><title>0x7f180e3500a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="416" y="340" width="2" height="15" fill="rgb(247,52,34)"/><text x="419.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (3 samples, 0.47%)</title><rect x="420" y="340" width="5" height="15" fill="rgb(254,58,52)"/><text x="423.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (9 samples, 1.42%)</title><rect x="418" y="324" width="17" height="15" fill="rgb(223,26,53)"/><text x="421.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (5 samples, 0.79%)</title><rect x="425" y="340" width="10" height="15" fill="rgb(245,43,38)"/><text x="428.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (2 samples, 0.32%)</title><rect x="435" y="324" width="3" height="15" fill="rgb(247,121,34)"/><text x="438.00" y="334.50"></text></g><g><title>prepare_index (mapping.c:516) (73 samples, 11.53%)</title><rect x="304" y="244" width="136" height="15" fill="rgb(233,9,37)"/><text x="307.00" y="254.50">prepare_index (ma..</text></g><g><title>PyArray_FromAny (ctors.c:1938) (19 samples, 3.00%)</title><rect x="405" y="260" width="35" height="15" fill="rgb(239,41,25)"/><text x="408.00" y="270.50">Py..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (19 samples, 3.00%)</title><rect x="405" y="276" width="35" height="15" fill="rgb(216,215,11)"/><text x="408.00" y="286.50">Py..</text></g><g><title>setArrayFromSequence (ctors.c:550) (16 samples, 2.53%)</title><rect x="410" y="292" width="30" height="15" fill="rgb(244,131,46)"/><text x="413.00" y="302.50">se..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (16 samples, 2.53%)</title><rect x="410" y="308" width="30" height="15" fill="rgb(250,207,35)"/><text x="413.00" y="318.50">Py..</text></g><g><title>LONG_setitem (arraytypes.c.src:242) (1 samples, 0.16%)</title><rect x="438" y="324" width="2" height="15" fill="rgb(242,44,0)"/><text x="441.00" y="334.50"></text></g><g><title>prepare_index (mapping.c:525) (1 samples, 0.16%)</title><rect x="440" y="244" width="2" height="15" fill="rgb(253,2,3)"/><text x="443.00" y="254.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.16%)</title><rect x="440" y="260" width="2" height="15" fill="rgb(254,189,45)"/><text x="443.00" y="270.50"></text></g><g><title>array_subscript (mapping.c:1539) (75 samples, 11.85%)</title><rect x="304" y="228" width="140" height="15" fill="rgb(230,223,3)"/><text x="307.00" y="238.50">array_subscript (..</text></g><g><title>prepare_index (mapping.c:682) (1 samples, 0.16%)</title><rect x="442" y="244" width="2" height="15" fill="rgb(212,216,9)"/><text x="445.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2643) (1 samples, 0.16%)</title><rect x="444" y="244" width="2" height="15" fill="rgb(234,28,40)"/><text x="447.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.32%)</title><rect x="444" y="228" width="4" height="15" fill="rgb(234,152,11)"/><text x="447.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2853) (1 samples, 0.16%)</title><rect x="446" y="244" width="2" height="15" fill="rgb(208,99,46)"/><text x="449.00" y="254.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.16%)</title><rect x="446" y="260" width="2" height="15" fill="rgb(227,62,17)"/><text x="449.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1473) (1 samples, 0.16%)</title><rect x="448" y="244" width="1" height="15" fill="rgb(220,76,4)"/><text x="451.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.16%)</title><rect x="449" y="244" width="2" height="15" fill="rgb(243,74,4)"/><text x="452.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (80 samples, 12.64%)</title><rect x="304" y="212" width="149" height="15" fill="rgb(212,5,48)"/><text x="307.00" y="222.50">_run (mlprodict/onn..</text></g><g><title>array_subscript (mapping.c:1676) (3 samples, 0.47%)</title><rect x="448" y="228" width="5" height="15" fill="rgb(234,164,43)"/><text x="451.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.16%)</title><rect x="451" y="244" width="2" height="15" fill="rgb(212,89,51)"/><text x="454.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.16%)</title><rect x="453" y="212" width="2" height="15" fill="rgb(215,56,49)"/><text x="456.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.16%)</title><rect x="453" y="228" width="2" height="15" fill="rgb(252,39,5)"/><text x="456.00" y="238.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.16%)</title><rect x="457" y="244" width="2" height="15" fill="rgb(239,97,19)"/><text x="460.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.16%)</title><rect x="457" y="260" width="2" height="15" fill="rgb(205,171,26)"/><text x="460.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.16%)</title><rect x="457" y="276" width="2" height="15" fill="rgb(228,33,32)"/><text x="460.00" y="286.50"></text></g><g><title>array_astype (methods.c:841) (1 samples, 0.16%)</title><rect x="459" y="244" width="2" height="15" fill="rgb(209,127,22)"/><text x="462.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (1 samples, 0.16%)</title><rect x="459" y="260" width="2" height="15" fill="rgb(215,224,17)"/><text x="462.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.16%)</title><rect x="459" y="276" width="2" height="15" fill="rgb(210,17,37)"/><text x="462.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.16%)</title><rect x="459" y="292" width="2" height="15" fill="rgb(222,7,3)"/><text x="462.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.16%)</title><rect x="459" y="308" width="2" height="15" fill="rgb(246,128,41)"/><text x="462.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.16%)</title><rect x="459" y="324" width="2" height="15" fill="rgb(228,138,54)"/><text x="462.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.16%)</title><rect x="459" y="340" width="2" height="15" fill="rgb(254,158,6)"/><text x="462.00" y="350.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.16%)</title><rect x="459" y="356" width="2" height="15" fill="rgb(209,162,7)"/><text x="462.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="459" y="372" width="2" height="15" fill="rgb(212,141,51)"/><text x="462.00" y="382.50"></text></g><g><title>0x7f180f12f2f8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="459" y="388" width="2" height="15" fill="rgb(234,62,34)"/><text x="462.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (4 samples, 0.63%)</title><rect x="455" y="212" width="7" height="15" fill="rgb(237,208,1)"/><text x="458.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (4 samples, 0.63%)</title><rect x="455" y="228" width="7" height="15" fill="rgb(251,59,1)"/><text x="458.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.16%)</title><rect x="461" y="244" width="1" height="15" fill="rgb(219,214,23)"/><text x="464.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.16%)</title><rect x="461" y="260" width="1" height="15" fill="rgb(232,136,40)"/><text x="464.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.16%)</title><rect x="461" y="276" width="1" height="15" fill="rgb(206,103,41)"/><text x="464.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.16%)</title><rect x="461" y="292" width="1" height="15" fill="rgb(251,191,3)"/><text x="464.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:22) (1 samples, 0.16%)</title><rect x="462" y="212" width="2" height="15" fill="rgb(252,42,4)"/><text x="465.00" y="222.50"></text></g><g><title>FLOAT_add (loops.c.src:1756) (1 samples, 0.16%)</title><rect x="466" y="388" width="2" height="15" fill="rgb(210,82,6)"/><text x="469.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (3 samples, 0.47%)</title><rect x="464" y="212" width="6" height="15" fill="rgb(233,79,38)"/><text x="467.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (3 samples, 0.47%)</title><rect x="464" y="228" width="6" height="15" fill="rgb(218,165,15)"/><text x="467.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.47%)</title><rect x="464" y="244" width="6" height="15" fill="rgb(215,58,7)"/><text x="467.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (3 samples, 0.47%)</title><rect x="464" y="260" width="6" height="15" fill="rgb(220,62,48)"/><text x="467.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.47%)</title><rect x="464" y="276" width="6" height="15" fill="rgb(243,64,31)"/><text x="467.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (3 samples, 0.47%)</title><rect x="464" y="292" width="6" height="15" fill="rgb(217,168,44)"/><text x="467.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (3 samples, 0.47%)</title><rect x="464" y="308" width="6" height="15" fill="rgb(233,55,33)"/><text x="467.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.47%)</title><rect x="464" y="324" width="6" height="15" fill="rgb(254,85,11)"/><text x="467.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (3 samples, 0.47%)</title><rect x="464" y="340" width="6" height="15" fill="rgb(219,229,35)"/><text x="467.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (3 samples, 0.47%)</title><rect x="464" y="356" width="6" height="15" fill="rgb(243,189,20)"/><text x="467.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (3 samples, 0.47%)</title><rect x="464" y="372" width="6" height="15" fill="rgb(245,173,44)"/><text x="467.00" y="382.50"></text></g><g><title>npyiter_iternext_itflags0_dims1_iters2 (nditer_templ.c.src:80) (1 samples, 0.16%)</title><rect x="468" y="388" width="2" height="15" fill="rgb(216,137,47)"/><text x="471.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (1 samples, 0.16%)</title><rect x="470" y="212" width="2" height="15" fill="rgb(218,51,53)"/><text x="473.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="470" y="228" width="2" height="15" fill="rgb(232,162,43)"/><text x="473.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="470" y="244" width="2" height="15" fill="rgb(220,133,2)"/><text x="473.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.16%)</title><rect x="470" y="260" width="2" height="15" fill="rgb(206,165,52)"/><text x="473.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.16%)</title><rect x="470" y="276" width="2" height="15" fill="rgb(211,144,52)"/><text x="473.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.16%)</title><rect x="470" y="292" width="2" height="15" fill="rgb(205,95,13)"/><text x="473.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.16%)</title><rect x="470" y="308" width="2" height="15" fill="rgb(232,127,26)"/><text x="473.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:715) (1 samples, 0.16%)</title><rect x="470" y="324" width="2" height="15" fill="rgb(215,104,3)"/><text x="473.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.16%)</title><rect x="470" y="340" width="2" height="15" fill="rgb(217,36,50)"/><text x="473.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (2 samples, 0.32%)</title><rect x="472" y="244" width="4" height="15" fill="rgb(205,171,33)"/><text x="475.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (2 samples, 0.32%)</title><rect x="472" y="260" width="4" height="15" fill="rgb(234,23,16)"/><text x="475.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (2 samples, 0.32%)</title><rect x="472" y="276" width="4" height="15" fill="rgb(253,129,18)"/><text x="475.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (2 samples, 0.32%)</title><rect x="472" y="292" width="4" height="15" fill="rgb(220,92,53)"/><text x="475.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:937) (2 samples, 0.32%)</title><rect x="472" y="308" width="4" height="15" fill="rgb(249,193,49)"/><text x="475.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.16%)</title><rect x="474" y="324" width="2" height="15" fill="rgb(241,136,25)"/><text x="477.00" y="334.50"></text></g><g><title>0x7f180f11eab0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="474" y="340" width="2" height="15" fill="rgb(242,39,7)"/><text x="477.00" y="350.50"></text></g><g><title>0x7f180f1128a0 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(232,180,54)"/><text x="477.00" y="366.50"></text></g><g><title>0x7f180f0f8f50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="474" y="372" width="2" height="15" fill="rgb(240,138,1)"/><text x="477.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:133) (1 samples, 0.16%)</title><rect x="476" y="388" width="1" height="15" fill="rgb(217,134,46)"/><text x="479.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.32%)</title><rect x="476" y="372" width="3" height="15" fill="rgb(212,164,8)"/><text x="479.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (1 samples, 0.16%)</title><rect x="477" y="388" width="2" height="15" fill="rgb(227,198,31)"/><text x="480.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.47%)</title><rect x="476" y="356" width="5" height="15" fill="rgb(236,58,33)"/><text x="479.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.16%)</title><rect x="479" y="372" width="2" height="15" fill="rgb(245,214,7)"/><text x="482.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="479" y="388" width="2" height="15" fill="rgb(230,72,24)"/><text x="482.00" y="398.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (4 samples, 0.63%)</title><rect x="476" y="340" width="7" height="15" fill="rgb(224,140,37)"/><text x="479.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:443) (1 samples, 0.16%)</title><rect x="481" y="356" width="2" height="15" fill="rgb(224,28,34)"/><text x="484.00" y="366.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (5 samples, 0.79%)</title><rect x="476" y="308" width="9" height="15" fill="rgb(243,28,7)"/><text x="479.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (5 samples, 0.79%)</title><rect x="476" y="324" width="9" height="15" fill="rgb(233,145,6)"/><text x="479.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:479) (1 samples, 0.16%)</title><rect x="483" y="340" width="2" height="15" fill="rgb(249,30,4)"/><text x="486.00" y="350.50"></text></g><g><title>array_iter_base_init (iterators.c:136) (1 samples, 0.16%)</title><rect x="485" y="372" width="2" height="15" fill="rgb(218,163,11)"/><text x="488.00" y="382.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.16%)</title><rect x="485" y="388" width="2" height="15" fill="rgb(252,121,51)"/><text x="488.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (2 samples, 0.32%)</title><rect x="485" y="308" width="4" height="15" fill="rgb(233,210,36)"/><text x="488.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (2 samples, 0.32%)</title><rect x="485" y="324" width="4" height="15" fill="rgb(207,130,40)"/><text x="488.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1296) (2 samples, 0.32%)</title><rect x="485" y="340" width="4" height="15" fill="rgb(250,96,37)"/><text x="488.00" y="350.50"></text></g><g><title>PyArray_IterNew (iterators.c:189) (2 samples, 0.32%)</title><rect x="485" y="356" width="4" height="15" fill="rgb(214,182,33)"/><text x="488.00" y="366.50"></text></g><g><title>array_iter_base_init (iterators.c:156) (1 samples, 0.16%)</title><rect x="487" y="372" width="2" height="15" fill="rgb(253,72,24)"/><text x="490.00" y="382.50"></text></g><g><title>0x7f180f14e144 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="487" y="388" width="2" height="15" fill="rgb(216,116,21)"/><text x="490.00" y="398.50"></text></g><g><title>PyArray_Choose (item_selection.c:757) (2 samples, 0.32%)</title><rect x="489" y="308" width="3" height="15" fill="rgb(219,19,19)"/><text x="492.00" y="318.50"></text></g><g><title>PyArray_Choose (item_selection.c:786) (1 samples, 0.16%)</title><rect x="492" y="308" width="2" height="15" fill="rgb(226,113,22)"/><text x="495.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (16 samples, 2.53%)</title><rect x="472" y="212" width="30" height="15" fill="rgb(236,195,5)"/><text x="475.00" y="222.50">_r..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (16 samples, 2.53%)</title><rect x="472" y="228" width="30" height="15" fill="rgb(243,117,48)"/><text x="475.00" y="238.50">ch..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 2.21%)</title><rect x="476" y="244" width="26" height="15" fill="rgb(230,180,4)"/><text x="479.00" y="254.50">a..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (14 samples, 2.21%)</title><rect x="476" y="260" width="26" height="15" fill="rgb(208,117,10)"/><text x="479.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (14 samples, 2.21%)</title><rect x="476" y="276" width="26" height="15" fill="rgb(236,141,13)"/><text x="479.00" y="286.50">_..</text></g><g><title>array_choose (methods.c:1224) (14 samples, 2.21%)</title><rect x="476" y="292" width="26" height="15" fill="rgb(239,75,16)"/><text x="479.00" y="302.50">a..</text></g><g><title>PyArray_Choose (item_selection.c:788) (4 samples, 0.63%)</title><rect x="494" y="308" width="8" height="15" fill="rgb(205,117,1)"/><text x="497.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (1 samples, 0.16%)</title><rect x="502" y="212" width="1" height="15" fill="rgb(210,15,50)"/><text x="505.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.16%)</title><rect x="502" y="228" width="1" height="15" fill="rgb(246,37,52)"/><text x="505.00" y="238.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.16%)</title><rect x="505" y="260" width="2" height="15" fill="rgb(238,16,51)"/><text x="508.00" y="270.50"></text></g><g><title>array_item (mapping.c:1378) (1 samples, 0.16%)</title><rect x="505" y="276" width="2" height="15" fill="rgb(248,4,29)"/><text x="508.00" y="286.50"></text></g><g><title>get_item_pointer (mapping.c:891) (1 samples, 0.16%)</title><rect x="505" y="292" width="2" height="15" fill="rgb(228,157,18)"/><text x="508.00" y="302.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.16%)</title><rect x="505" y="308" width="2" height="15" fill="rgb(217,52,44)"/><text x="508.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (3 samples, 0.47%)</title><rect x="503" y="212" width="6" height="15" fill="rgb(254,216,35)"/><text x="506.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (2 samples, 0.32%)</title><rect x="505" y="228" width="4" height="15" fill="rgb(208,11,7)"/><text x="508.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (2 samples, 0.32%)</title><rect x="505" y="244" width="4" height="15" fill="rgb(242,200,20)"/><text x="508.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.16%)</title><rect x="507" y="260" width="2" height="15" fill="rgb(214,85,38)"/><text x="510.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.16%)</title><rect x="507" y="276" width="2" height="15" fill="rgb(208,185,25)"/><text x="510.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:872) (1 samples, 0.16%)</title><rect x="507" y="292" width="2" height="15" fill="rgb(229,176,36)"/><text x="510.00" y="302.50"></text></g><g><title>array_argpartition (methods.c:1414) (1 samples, 0.16%)</title><rect x="511" y="324" width="2" height="15" fill="rgb(247,188,51)"/><text x="514.00" y="334.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.16%)</title><rect x="511" y="340" width="2" height="15" fill="rgb(233,16,2)"/><text x="514.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.16%)</title><rect x="511" y="356" width="2" height="15" fill="rgb(242,131,30)"/><text x="514.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.16%)</title><rect x="511" y="372" width="2" height="15" fill="rgb(245,207,21)"/><text x="514.00" y="382.50"></text></g><g><title>array_argpartition (methods.c:1451) (1 samples, 0.16%)</title><rect x="513" y="324" width="2" height="15" fill="rgb(225,77,2)"/><text x="516.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.16%)</title><rect x="513" y="340" width="2" height="15" fill="rgb(216,131,31)"/><text x="516.00" y="350.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.16%)</title><rect x="513" y="356" width="2" height="15" fill="rgb(251,224,4)"/><text x="516.00" y="366.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:546) (1 samples, 0.16%)</title><rect x="513" y="372" width="2" height="15" fill="rgb(235,62,27)"/><text x="516.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1027) (1 samples, 0.16%)</title><rect x="515" y="356" width="2" height="15" fill="rgb(226,108,48)"/><text x="518.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (2 samples, 0.32%)</title><rect x="517" y="356" width="3" height="15" fill="rgb(227,83,4)"/><text x="520.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:331) (1 samples, 0.16%)</title><rect x="520" y="372" width="2" height="15" fill="rgb(227,182,23)"/><text x="523.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (2 samples, 0.32%)</title><rect x="520" y="356" width="4" height="15" fill="rgb(221,167,2)"/><text x="523.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:334) (1 samples, 0.16%)</title><rect x="522" y="372" width="2" height="15" fill="rgb(220,194,6)"/><text x="525.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.16%)</title><rect x="524" y="356" width="2" height="15" fill="rgb(246,178,49)"/><text x="527.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.16%)</title><rect x="526" y="356" width="2" height="15" fill="rgb(206,207,11)"/><text x="529.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1117) (1 samples, 0.16%)</title><rect x="528" y="356" width="2" height="15" fill="rgb(211,194,31)"/><text x="531.00" y="366.50"></text></g><g><title>0x7f180f12ddfb (libc-2.29.so) (1 samples, 0.16%)</title><rect x="528" y="372" width="2" height="15" fill="rgb(222,162,36)"/><text x="531.00" y="382.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (12 samples, 1.90%)</title><rect x="509" y="244" width="22" height="15" fill="rgb(243,136,7)"/><text x="512.00" y="254.50">t..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (11 samples, 1.74%)</title><rect x="511" y="260" width="20" height="15" fill="rgb(224,134,3)"/><text x="514.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 1.74%)</title><rect x="511" y="276" width="20" height="15" fill="rgb(216,0,36)"/><text x="514.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (11 samples, 1.74%)</title><rect x="511" y="292" width="20" height="15" fill="rgb(236,36,54)"/><text x="514.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 1.74%)</title><rect x="511" y="308" width="20" height="15" fill="rgb(216,160,17)"/><text x="514.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (9 samples, 1.42%)</title><rect x="515" y="324" width="16" height="15" fill="rgb(244,79,45)"/><text x="518.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (9 samples, 1.42%)</title><rect x="515" y="340" width="16" height="15" fill="rgb(234,121,25)"/><text x="518.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:984) (1 samples, 0.16%)</title><rect x="530" y="356" width="1" height="15" fill="rgb(215,83,53)"/><text x="533.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.16%)</title><rect x="530" y="372" width="1" height="15" fill="rgb(244,212,35)"/><text x="533.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.16%)</title><rect x="530" y="388" width="1" height="15" fill="rgb(243,133,46)"/><text x="533.00" y="398.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.16%)</title><rect x="530" y="404" width="1" height="15" fill="rgb(205,11,25)"/><text x="533.00" y="414.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:35) (3 samples, 0.47%)</title><rect x="531" y="244" width="6" height="15" fill="rgb(241,74,11)"/><text x="534.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.16%)</title><rect x="535" y="260" width="2" height="15" fill="rgb(231,86,27)"/><text x="538.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.16%)</title><rect x="535" y="276" width="2" height="15" fill="rgb(209,178,6)"/><text x="538.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1023) (1 samples, 0.16%)</title><rect x="539" y="356" width="2" height="15" fill="rgb(240,149,24)"/><text x="542.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1027) (1 samples, 0.16%)</title><rect x="541" y="356" width="2" height="15" fill="rgb(239,13,42)"/><text x="544.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1061) (1 samples, 0.16%)</title><rect x="543" y="356" width="2" height="15" fill="rgb(252,87,40)"/><text x="546.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:165) (1 samples, 0.16%)</title><rect x="545" y="372" width="1" height="15" fill="rgb(239,49,20)"/><text x="548.00" y="382.50"></text></g><g><title>aquicksort_float (quicksort.c.src:175) (1 samples, 0.16%)</title><rect x="546" y="372" width="2" height="15" fill="rgb(228,217,39)"/><text x="549.00" y="382.50"></text></g><g><title>npy_get_msb (npy_sort.h.src:15) (1 samples, 0.16%)</title><rect x="546" y="388" width="2" height="15" fill="rgb(229,191,29)"/><text x="549.00" y="398.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (1 samples, 0.16%)</title><rect x="548" y="372" width="2" height="15" fill="rgb(253,20,4)"/><text x="551.00" y="382.50"></text></g><g><title>FLOAT_LT (npysort_common.h:123) (1 samples, 0.16%)</title><rect x="548" y="388" width="2" height="15" fill="rgb(217,112,51)"/><text x="551.00" y="398.50"></text></g><g><title>aquicksort_float (quicksort.c.src:223) (1 samples, 0.16%)</title><rect x="550" y="372" width="2" height="15" fill="rgb(233,99,40)"/><text x="553.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (5 samples, 0.79%)</title><rect x="545" y="356" width="9" height="15" fill="rgb(216,73,53)"/><text x="548.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:237) (1 samples, 0.16%)</title><rect x="552" y="372" width="2" height="15" fill="rgb(242,73,29)"/><text x="555.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (2 samples, 0.32%)</title><rect x="554" y="356" width="4" height="15" fill="rgb(214,181,42)"/><text x="557.00" y="366.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (12 samples, 1.90%)</title><rect x="537" y="260" width="22" height="15" fill="rgb(212,98,2)"/><text x="540.00" y="270.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 1.90%)</title><rect x="537" y="276" width="22" height="15" fill="rgb(231,60,43)"/><text x="540.00" y="286.50">a..</text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (11 samples, 1.74%)</title><rect x="539" y="292" width="20" height="15" fill="rgb(244,221,21)"/><text x="542.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (11 samples, 1.74%)</title><rect x="539" y="308" width="20" height="15" fill="rgb(224,100,29)"/><text x="542.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (11 samples, 1.74%)</title><rect x="539" y="324" width="20" height="15" fill="rgb(249,120,52)"/><text x="542.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (11 samples, 1.74%)</title><rect x="539" y="340" width="20" height="15" fill="rgb(215,125,51)"/><text x="542.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.16%)</title><rect x="558" y="356" width="1" height="15" fill="rgb(214,142,26)"/><text x="561.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (2 samples, 0.32%)</title><rect x="559" y="276" width="4" height="15" fill="rgb(242,224,35)"/><text x="562.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.16%)</title><rect x="561" y="292" width="2" height="15" fill="rgb(244,133,53)"/><text x="564.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="561" y="308" width="2" height="15" fill="rgb(210,131,25)"/><text x="564.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2818) (1 samples, 0.16%)</title><rect x="561" y="324" width="2" height="15" fill="rgb(249,121,17)"/><text x="564.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.16%)</title><rect x="563" y="340" width="2" height="15" fill="rgb(250,224,42)"/><text x="566.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.16%)</title><rect x="565" y="356" width="2" height="15" fill="rgb(232,150,30)"/><text x="568.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1656) (5 samples, 0.79%)</title><rect x="559" y="260" width="10" height="15" fill="rgb(239,59,37)"/><text x="562.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (3 samples, 0.47%)</title><rect x="563" y="276" width="6" height="15" fill="rgb(247,209,37)"/><text x="566.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (3 samples, 0.47%)</title><rect x="563" y="292" width="6" height="15" fill="rgb(254,93,27)"/><text x="566.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (3 samples, 0.47%)</title><rect x="563" y="308" width="6" height="15" fill="rgb(242,55,14)"/><text x="566.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.47%)</title><rect x="563" y="324" width="6" height="15" fill="rgb(209,66,14)"/><text x="566.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.32%)</title><rect x="565" y="340" width="4" height="15" fill="rgb(242,113,34)"/><text x="568.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:234) (1 samples, 0.16%)</title><rect x="567" y="356" width="2" height="15" fill="rgb(218,116,41)"/><text x="570.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (3 samples, 0.47%)</title><rect x="569" y="276" width="5" height="15" fill="rgb(222,69,25)"/><text x="572.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1666) (4 samples, 0.63%)</title><rect x="569" y="260" width="7" height="15" fill="rgb(228,206,44)"/><text x="572.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.16%)</title><rect x="574" y="276" width="2" height="15" fill="rgb(208,133,50)"/><text x="577.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.16%)</title><rect x="574" y="292" width="2" height="15" fill="rgb(234,30,6)"/><text x="577.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (1 samples, 0.16%)</title><rect x="576" y="276" width="2" height="15" fill="rgb(238,201,48)"/><text x="579.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (3 samples, 0.47%)</title><rect x="578" y="276" width="6" height="15" fill="rgb(231,23,40)"/><text x="581.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (5 samples, 0.79%)</title><rect x="576" y="260" width="10" height="15" fill="rgb(232,205,38)"/><text x="579.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.16%)</title><rect x="584" y="276" width="2" height="15" fill="rgb(254,167,1)"/><text x="587.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (27 samples, 4.27%)</title><rect x="537" y="244" width="50" height="15" fill="rgb(219,35,15)"/><text x="540.00" y="254.50">topk_..</text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.16%)</title><rect x="586" y="260" width="1" height="15" fill="rgb(251,72,29)"/><text x="589.00" y="270.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.16%)</title><rect x="586" y="276" width="1" height="15" fill="rgb(219,96,44)"/><text x="589.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.16%)</title><rect x="586" y="292" width="1" height="15" fill="rgb(215,143,12)"/><text x="589.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="586" y="308" width="1" height="15" fill="rgb(241,103,13)"/><text x="589.00" y="318.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.16%)</title><rect x="589" y="276" width="2" height="15" fill="rgb(219,57,23)"/><text x="592.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.16%)</title><rect x="589" y="292" width="2" height="15" fill="rgb(251,36,13)"/><text x="592.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.16%)</title><rect x="589" y="308" width="2" height="15" fill="rgb(246,61,14)"/><text x="592.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.16%)</title><rect x="589" y="324" width="2" height="15" fill="rgb(253,119,11)"/><text x="592.00" y="334.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:2016) (1 samples, 0.16%)</title><rect x="589" y="340" width="2" height="15" fill="rgb(253,26,6)"/><text x="592.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (2 samples, 0.32%)</title><rect x="589" y="260" width="4" height="15" fill="rgb(228,185,16)"/><text x="592.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.16%)</title><rect x="591" y="276" width="2" height="15" fill="rgb(251,26,27)"/><text x="594.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.16%)</title><rect x="591" y="292" width="2" height="15" fill="rgb(243,182,45)"/><text x="594.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.16%)</title><rect x="591" y="308" width="2" height="15" fill="rgb(230,5,40)"/><text x="594.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.16%)</title><rect x="591" y="324" width="2" height="15" fill="rgb(250,89,44)"/><text x="594.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.16%)</title><rect x="591" y="340" width="2" height="15" fill="rgb(246,116,33)"/><text x="594.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.16%)</title><rect x="591" y="356" width="2" height="15" fill="rgb(249,224,46)"/><text x="594.00" y="366.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.16%)</title><rect x="593" y="260" width="2" height="15" fill="rgb(230,226,53)"/><text x="596.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.16%)</title><rect x="593" y="276" width="2" height="15" fill="rgb(246,132,22)"/><text x="596.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.16%)</title><rect x="593" y="292" width="2" height="15" fill="rgb(210,133,22)"/><text x="596.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.16%)</title><rect x="595" y="276" width="2" height="15" fill="rgb(234,129,27)"/><text x="598.00" y="286.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (48 samples, 7.58%)</title><rect x="509" y="228" width="90" height="15" fill="rgb(221,182,43)"/><text x="512.00" y="238.50">_common_ru..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (6 samples, 0.95%)</title><rect x="587" y="244" width="12" height="15" fill="rgb(252,9,27)"/><text x="590.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.32%)</title><rect x="595" y="260" width="4" height="15" fill="rgb(236,43,37)"/><text x="598.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.16%)</title><rect x="597" y="276" width="2" height="15" fill="rgb(251,24,32)"/><text x="600.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (49 samples, 7.74%)</title><rect x="509" y="212" width="91" height="15" fill="rgb(210,87,21)"/><text x="512.00" y="222.50">_run (mlpr..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.16%)</title><rect x="599" y="228" width="1" height="15" fill="rgb(238,52,51)"/><text x="602.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.16%)</title><rect x="599" y="244" width="1" height="15" fill="rgb(228,100,5)"/><text x="602.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.16%)</title><rect x="599" y="260" width="1" height="15" fill="rgb(252,64,37)"/><text x="602.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:130) (1 samples, 0.16%)</title><rect x="599" y="276" width="1" height="15" fill="rgb(218,100,3)"/><text x="602.00" y="286.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="599" y="292" width="1" height="15" fill="rgb(208,47,0)"/><text x="602.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (170 samples, 26.86%)</title><rect x="285" y="196" width="317" height="15" fill="rgb(218,60,42)"/><text x="288.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:118)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.16%)</title><rect x="600" y="212" width="2" height="15" fill="rgb(221,227,36)"/><text x="603.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.16%)</title><rect x="600" y="228" width="2" height="15" fill="rgb(210,142,2)"/><text x="603.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.16%)</title><rect x="600" y="244" width="2" height="15" fill="rgb(250,185,24)"/><text x="603.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (1 samples, 0.16%)</title><rect x="602" y="196" width="2" height="15" fill="rgb(218,182,46)"/><text x="605.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.16%)</title><rect x="602" y="212" width="2" height="15" fill="rgb(252,221,18)"/><text x="605.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (1 samples, 0.16%)</title><rect x="602" y="228" width="2" height="15" fill="rgb(254,101,35)"/><text x="605.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (1 samples, 0.16%)</title><rect x="602" y="244" width="2" height="15" fill="rgb(231,122,49)"/><text x="605.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (1 samples, 0.16%)</title><rect x="602" y="260" width="2" height="15" fill="rgb(250,87,18)"/><text x="605.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (1 samples, 0.16%)</title><rect x="602" y="276" width="2" height="15" fill="rgb(214,16,34)"/><text x="605.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.16%)</title><rect x="602" y="292" width="2" height="15" fill="rgb(246,115,32)"/><text x="605.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (1 samples, 0.16%)</title><rect x="602" y="308" width="2" height="15" fill="rgb(210,82,15)"/><text x="605.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.16%)</title><rect x="602" y="324" width="2" height="15" fill="rgb(245,168,29)"/><text x="605.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (1 samples, 0.16%)</title><rect x="602" y="340" width="2" height="15" fill="rgb(212,139,12)"/><text x="605.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:248) (1 samples, 0.16%)</title><rect x="602" y="356" width="2" height="15" fill="rgb(247,144,43)"/><text x="605.00" y="366.50"></text></g><g><title>0x7f17cfbc654f (?) (1 samples, 0.16%)</title><rect x="606" y="244" width="2" height="15" fill="rgb(218,28,46)"/><text x="609.00" y="254.50"></text></g><g><title>0x7f17cfbcc65e (?) (1 samples, 0.16%)</title><rect x="606" y="260" width="2" height="15" fill="rgb(216,129,23)"/><text x="609.00" y="270.50"></text></g><g><title>0x7f17cfbcc50f (?) (1 samples, 0.16%)</title><rect x="606" y="276" width="2" height="15" fill="rgb(254,200,53)"/><text x="609.00" y="286.50"></text></g><g><title>0x7f17cfbd2d6c (?) (1 samples, 0.16%)</title><rect x="606" y="292" width="2" height="15" fill="rgb(234,14,42)"/><text x="609.00" y="302.50"></text></g><g><title>0x7f17d9133ab9 (?) (1 samples, 0.16%)</title><rect x="606" y="308" width="2" height="15" fill="rgb(237,204,19)"/><text x="609.00" y="318.50"></text></g><g><title>0x7f17d9134eab (?) (1 samples, 0.16%)</title><rect x="606" y="324" width="2" height="15" fill="rgb(247,28,50)"/><text x="609.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:137) (1 samples, 0.16%)</title><rect x="608" y="276" width="2" height="15" fill="rgb(239,13,42)"/><text x="611.00" y="286.50"></text></g><g><title>0x7f17d9134ea0 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="610" y="484" width="2" height="15" fill="rgb(234,193,4)"/><text x="613.00" y="494.50"></text></g><g><title>0x7f17d9134ea9 (libgomp.so.1.0.0) (7 samples, 1.11%)</title><rect x="612" y="484" width="13" height="15" fill="rgb(249,122,28)"/><text x="615.00" y="494.50"></text></g><g><title>0x7f17d9134eab (libgomp.so.1.0.0) (11 samples, 1.74%)</title><rect x="625" y="484" width="20" height="15" fill="rgb(228,36,51)"/><text x="628.00" y="494.50"></text></g><g><title>0x7f17d9134ead (libgomp.so.1.0.0) (10 samples, 1.58%)</title><rect x="645" y="484" width="19" height="15" fill="rgb(236,95,50)"/><text x="648.00" y="494.50"></text></g><g><title>0x7f17d9133ab9 (libgomp.so.1.0.0) (30 samples, 4.74%)</title><rect x="610" y="468" width="56" height="15" fill="rgb(216,143,14)"/><text x="613.00" y="478.50">0x7f1..</text></g><g><title>0x7f17d9134ff0 (libgomp.so.1.0.0) (1 samples, 0.16%)</title><rect x="664" y="484" width="2" height="15" fill="rgb(207,190,7)"/><text x="667.00" y="494.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:473) (1 samples, 0.16%)</title><rect x="666" y="516" width="2" height="15" fill="rgb(211,225,50)"/><text x="669.00" y="526.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:554) (1 samples, 0.16%)</title><rect x="668" y="516" width="1" height="15" fill="rgb(228,199,43)"/><text x="671.00" y="526.50"></text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h:855) (1 samples, 0.16%)</title><rect x="668" y="532" width="1" height="15" fill="rgb(243,182,26)"/><text x="671.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h:1309) (1 samples, 0.16%)</title><rect x="668" y="548" width="1" height="15" fill="rgb(221,102,36)"/><text x="671.00" y="558.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h:623) (1 samples, 0.16%)</title><rect x="668" y="564" width="1" height="15" fill="rgb(244,177,31)"/><text x="671.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h:1171) (1 samples, 0.16%)</title><rect x="668" y="580" width="1" height="15" fill="rgb(223,108,30)"/><text x="671.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h:446) (1 samples, 0.16%)</title><rect x="668" y="596" width="1" height="15" fill="rgb(223,170,17)"/><text x="671.00" y="606.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:568) (1 samples, 0.16%)</title><rect x="669" y="516" width="2" height="15" fill="rgb(205,155,51)"/><text x="672.00" y="526.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 5.85%)</title><rect x="604" y="196" width="69" height="15" fill="rgb(234,227,29)"/><text x="607.00" y="206.50">run (ml..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (36 samples, 5.69%)</title><rect x="606" y="212" width="67" height="15" fill="rgb(229,29,24)"/><text x="609.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (36 samples, 5.69%)</title><rect x="606" y="228" width="67" height="15" fill="rgb(205,21,0)"/><text x="609.00" y="238.50">_run (m..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (35 samples, 5.53%)</title><rect x="608" y="244" width="65" height="15" fill="rgb(231,136,43)"/><text x="611.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (35 samples, 5.53%)</title><rect x="608" y="260" width="65" height="15" fill="rgb(246,130,20)"/><text x="611.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (34 samples, 5.37%)</title><rect x="610" y="276" width="63" height="15" fill="rgb(210,191,35)"/><text x="613.00" y="286.50">void p..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (34 samples, 5.37%)</title><rect x="610" y="292" width="63" height="15" fill="rgb(216,166,47)"/><text x="613.00" y="302.50">pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (34 samples, 5.37%)</title><rect x="610" y="308" width="63" height="15" fill="rgb(213,145,11)"/><text x="613.00" y="318.50">pybind..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (34 samples, 5.37%)</title><rect x="610" y="324" width="63" height="15" fill="rgb(251,178,49)"/><text x="613.00" y="334.50">pybind..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (34 samples, 5.37%)</title><rect x="610" y="340" width="63" height="15" fill="rgb(242,209,54)"/><text x="613.00" y="350.50">pybind..</text></g><g><title>pybind11::array::~array (numpy.h:538) (34 samples, 5.37%)</title><rect x="610" y="356" width="63" height="15" fill="rgb(227,22,13)"/><text x="613.00" y="366.50">pybind..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (34 samples, 5.37%)</title><rect x="610" y="372" width="63" height="15" fill="rgb(219,118,35)"/><text x="613.00" y="382.50">pybind..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (34 samples, 5.37%)</title><rect x="610" y="388" width="63" height="15" fill="rgb(212,212,33)"/><text x="613.00" y="398.50">pybind..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (34 samples, 5.37%)</title><rect x="610" y="404" width="63" height="15" fill="rgb(207,112,6)"/><text x="613.00" y="414.50">pybind..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (34 samples, 5.37%)</title><rect x="610" y="420" width="63" height="15" fill="rgb(250,11,22)"/><text x="613.00" y="430.50">Runtim..</text></g><g><title>pybind11::array::size (numpy.h:619) (34 samples, 5.37%)</title><rect x="610" y="436" width="63" height="15" fill="rgb(217,188,19)"/><text x="613.00" y="446.50">pybind..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (34 samples, 5.37%)</title><rect x="610" y="452" width="63" height="15" fill="rgb(234,167,14)"/><text x="613.00" y="462.50">std::a..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.63%)</title><rect x="666" y="468" width="7" height="15" fill="rgb(235,25,44)"/><text x="669.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (4 samples, 0.63%)</title><rect x="666" y="484" width="7" height="15" fill="rgb(208,19,16)"/><text x="669.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (4 samples, 0.63%)</title><rect x="666" y="500" width="7" height="15" fill="rgb(223,227,38)"/><text x="669.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.16%)</title><rect x="671" y="516" width="2" height="15" fill="rgb(244,60,33)"/><text x="674.00" y="526.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (213 samples, 33.65%)</title><rect x="278" y="180" width="397" height="15" fill="rgb(232,169,40)"/><text x="281.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.16%)</title><rect x="673" y="196" width="2" height="15" fill="rgb(244,197,36)"/><text x="676.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (1 samples, 0.16%)</title><rect x="673" y="212" width="2" height="15" fill="rgb(205,144,40)"/><text x="676.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.16%)</title><rect x="673" y="228" width="2" height="15" fill="rgb(219,32,38)"/><text x="676.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.16%)</title><rect x="673" y="244" width="2" height="15" fill="rgb(213,8,8)"/><text x="676.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.16%)</title><rect x="673" y="260" width="2" height="15" fill="rgb(246,138,51)"/><text x="676.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.16%)</title><rect x="673" y="276" width="2" height="15" fill="rgb(240,63,48)"/><text x="676.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.16%)</title><rect x="673" y="292" width="2" height="15" fill="rgb(227,91,3)"/><text x="676.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (1 samples, 0.16%)</title><rect x="673" y="308" width="2" height="15" fill="rgb(238,69,12)"/><text x="676.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (1 samples, 0.16%)</title><rect x="673" y="324" width="2" height="15" fill="rgb(236,71,23)"/><text x="676.00" y="334.50"></text></g><g><title>_aligned_strided_to_contig_size4_srcstride0 (lowlevel_strided_loops.c.src:238) (1 samples, 0.16%)</title><rect x="673" y="340" width="2" height="15" fill="rgb(214,203,18)"/><text x="676.00" y="350.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (221 samples, 34.91%)</title><rect x="267" y="132" width="412" height="15" fill="rgb(216,115,43)"/><text x="270.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (221 samples, 34.91%)</title><rect x="267" y="148" width="412" height="15" fill="rgb(225,21,5)"/><text x="270.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (219 samples, 34.60%)</title><rect x="270" y="164" width="409" height="15" fill="rgb(232,137,21)"/><text x="273.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference...</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.32%)</title><rect x="675" y="180" width="4" height="15" fill="rgb(224,49,21)"/><text x="678.00" y="190.50"></text></g><g><title>0x7f180f14e1d6 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="677" y="196" width="2" height="15" fill="rgb(224,52,7)"/><text x="680.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:61) (223 samples, 35.23%)</title><rect x="265" y="52" width="416" height="15" fill="rgb(223,14,50)"/><text x="268.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_est..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:60) (223 samples, 35.23%)</title><rect x="265" y="68" width="416" height="15" fill="rgb(249,49,12)"/><text x="268.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:37) (222 samples, 35.07%)</title><rect x="267" y="84" width="414" height="15" fill="rgb(231,36,6)"/><text x="270.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:31) (222 samples, 35.07%)</title><rect x="267" y="100" width="414" height="15" fill="rgb(232,30,15)"/><text x="270.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_esti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (222 samples, 35.07%)</title><rect x="267" y="116" width="414" height="15" fill="rgb(220,146,30)"/><text x="270.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="679" y="132" width="2" height="15" fill="rgb(250,170,19)"/><text x="682.00" y="142.50"></text></g><g><title>0x7f17cf16bff9 (?) (1 samples, 0.16%)</title><rect x="686" y="212" width="2" height="15" fill="rgb(251,93,15)"/><text x="689.00" y="222.50"></text></g><g><title>0x7f17cf166ef6 (?) (1 samples, 0.16%)</title><rect x="686" y="228" width="2" height="15" fill="rgb(252,139,9)"/><text x="689.00" y="238.50"></text></g><g><title>0x7f17cf15b962 (?) (1 samples, 0.16%)</title><rect x="686" y="244" width="2" height="15" fill="rgb(223,157,4)"/><text x="689.00" y="254.50"></text></g><g><title>0x7f17cf18f7a7 (?) (1 samples, 0.16%)</title><rect x="686" y="260" width="2" height="15" fill="rgb(206,66,41)"/><text x="689.00" y="270.50"></text></g><g><title>0x7f17cf18f379 (?) (1 samples, 0.16%)</title><rect x="686" y="276" width="2" height="15" fill="rgb(225,89,14)"/><text x="689.00" y="286.50"></text></g><g><title>0x7f17cf5ed8b8 (?) (1 samples, 0.16%)</title><rect x="686" y="292" width="2" height="15" fill="rgb(237,186,14)"/><text x="689.00" y="302.50"></text></g><g><title>0x7f17cf5ebc7f (?) (1 samples, 0.16%)</title><rect x="686" y="308" width="2" height="15" fill="rgb(249,138,2)"/><text x="689.00" y="318.50"></text></g><g><title>0x7f17cf5fe99c (?) (1 samples, 0.16%)</title><rect x="686" y="324" width="2" height="15" fill="rgb(208,217,36)"/><text x="689.00" y="334.50"></text></g><g><title>0x7f17cf325dc2 (?) (1 samples, 0.16%)</title><rect x="686" y="340" width="2" height="15" fill="rgb(206,198,32)"/><text x="689.00" y="350.50"></text></g><g><title>0x7f17cf325557 (?) (1 samples, 0.16%)</title><rect x="686" y="356" width="2" height="15" fill="rgb(235,156,2)"/><text x="689.00" y="366.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="690" y="340" width="6" height="15" fill="rgb(241,154,49)"/><text x="693.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="692" y="356" width="4" height="15" fill="rgb(217,26,28)"/><text x="695.00" y="366.50"></text></g><g><title>0x7f180f14dd50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="703" y="372" width="2" height="15" fill="rgb(243,220,40)"/><text x="706.00" y="382.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.95%)</title><rect x="696" y="356" width="11" height="15" fill="rgb(234,93,15)"/><text x="699.00" y="366.50"></text></g><g><title>0x7f180f14ddc9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="705" y="372" width="2" height="15" fill="rgb(207,84,13)"/><text x="708.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.11%)</title><rect x="696" y="340" width="13" height="15" fill="rgb(230,28,33)"/><text x="699.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="356" width="2" height="15" fill="rgb(247,151,40)"/><text x="710.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="372" width="2" height="15" fill="rgb(213,210,35)"/><text x="710.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="388" width="2" height="15" fill="rgb(238,61,36)"/><text x="710.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="404" width="2" height="15" fill="rgb(224,39,49)"/><text x="710.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="420" width="2" height="15" fill="rgb(209,16,15)"/><text x="710.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="436" width="2" height="15" fill="rgb(230,219,36)"/><text x="710.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="452" width="2" height="15" fill="rgb(232,73,28)"/><text x="710.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="468" width="2" height="15" fill="rgb(235,28,33)"/><text x="710.00" y="478.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="707" y="484" width="2" height="15" fill="rgb(248,3,32)"/><text x="710.00" y="494.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="709" y="356" width="1" height="15" fill="rgb(248,225,15)"/><text x="712.00" y="366.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector [clone .constprop.161] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="709" y="372" width="1" height="15" fill="rgb(221,176,8)"/><text x="712.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="709" y="388" width="1" height="15" fill="rgb(227,4,5)"/><text x="712.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="709" y="404" width="1" height="15" fill="rgb(208,99,7)"/><text x="712.00" y="414.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.42%)</title><rect x="709" y="340" width="16" height="15" fill="rgb(213,43,38)"/><text x="712.00" y="350.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.26%)</title><rect x="710" y="356" width="15" height="15" fill="rgb(241,41,37)"/><text x="713.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="727" y="356" width="2" height="15" fill="rgb(226,99,5)"/><text x="730.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="727" y="372" width="2" height="15" fill="rgb(236,186,52)"/><text x="730.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="727" y="388" width="2" height="15" fill="rgb(230,108,53)"/><text x="730.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="725" y="340" width="6" height="15" fill="rgb(252,24,5)"/><text x="728.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="729" y="356" width="2" height="15" fill="rgb(228,178,7)"/><text x="732.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="729" y="372" width="2" height="15" fill="rgb(244,52,45)"/><text x="732.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="729" y="388" width="2" height="15" fill="rgb(207,196,7)"/><text x="732.00" y="398.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.63%)</title><rect x="731" y="340" width="7" height="15" fill="rgb(214,186,33)"/><text x="734.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="737" y="356" width="1" height="15" fill="rgb(233,183,5)"/><text x="740.00" y="366.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="738" y="340" width="6" height="15" fill="rgb(212,42,22)"/><text x="741.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="738" y="356" width="6" height="15" fill="rgb(213,223,50)"/><text x="741.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="740" y="372" width="4" height="15" fill="rgb(249,183,31)"/><text x="743.00" y="382.50"></text></g><g><title>0x7f180f12dd07 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="744" y="372" width="2" height="15" fill="rgb(220,97,12)"/><text x="747.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="746" y="372" width="5" height="15" fill="rgb(234,52,2)"/><text x="749.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.79%)</title><rect x="744" y="340" width="9" height="15" fill="rgb(253,64,11)"/><text x="747.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.79%)</title><rect x="744" y="356" width="9" height="15" fill="rgb(225,0,28)"/><text x="747.00" y="366.50"></text></g><g><title>onnxruntime::Broadcaster::~Broadcaster (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="751" y="372" width="2" height="15" fill="rgb(215,14,45)"/><text x="754.00" y="382.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="751" y="388" width="2" height="15" fill="rgb(216,165,23)"/><text x="754.00" y="398.50"></text></g><g><title>0x7f180f2ffe7e (libm-2.29.so) (1 samples, 0.16%)</title><rect x="785" y="388" width="2" height="15" fill="rgb(244,204,17)"/><text x="788.00" y="398.50"></text></g><g><title>0x7f180f2ffeb6 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="787" y="388" width="2" height="15" fill="rgb(235,47,28)"/><text x="790.00" y="398.50"></text></g><g><title>0x7f180f2ffee6 (libm-2.29.so) (1 samples, 0.16%)</title><rect x="789" y="388" width="2" height="15" fill="rgb(242,156,50)"/><text x="792.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.47%)</title><rect x="791" y="388" width="5" height="15" fill="rgb(230,127,36)"/><text x="794.00" y="398.50"></text></g><g><title>0x7f180f12d91e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="807" y="404" width="2" height="15" fill="rgb(227,67,42)"/><text x="810.00" y="414.50"></text></g><g><title>0x7f180f12d982 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="809" y="404" width="2" height="15" fill="rgb(236,120,51)"/><text x="812.00" y="414.50"></text></g><g><title>0x7f180f12da38 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="811" y="404" width="2" height="15" fill="rgb(209,16,16)"/><text x="814.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.16%)</title><rect x="813" y="404" width="2" height="15" fill="rgb(248,90,13)"/><text x="816.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 6.48%)</title><rect x="753" y="340" width="77" height="15" fill="rgb(238,150,11)"/><text x="756.00" y="350.50">onnxrunt..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 6.48%)</title><rect x="753" y="356" width="77" height="15" fill="rgb(214,117,52)"/><text x="756.00" y="366.50">onnxrunt..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 6.48%)</title><rect x="753" y="372" width="77" height="15" fill="rgb(237,127,48)"/><text x="756.00" y="382.50">onnxrunt..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.84%)</title><rect x="796" y="388" width="34" height="15" fill="rgb(205,68,17)"/><text x="799.00" y="398.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.26%)</title><rect x="815" y="404" width="15" height="15" fill="rgb(233,25,41)"/><text x="818.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 1.26%)</title><rect x="815" y="420" width="15" height="15" fill="rgb(224,41,8)"/><text x="818.00" y="430.50"></text></g><g><title>onnxruntime::DataTypeImpl::GetType&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="833" y="420" width="2" height="15" fill="rgb(219,177,15)"/><text x="836.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.63%)</title><rect x="830" y="340" width="7" height="15" fill="rgb(231,201,52)"/><text x="833.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="833" y="356" width="4" height="15" fill="rgb(230,91,43)"/><text x="836.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="833" y="372" width="4" height="15" fill="rgb(234,210,4)"/><text x="836.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="833" y="388" width="4" height="15" fill="rgb(214,102,28)"/><text x="836.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="833" y="404" width="4" height="15" fill="rgb(244,138,13)"/><text x="836.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="835" y="420" width="2" height="15" fill="rgb(248,27,10)"/><text x="838.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="835" y="436" width="2" height="15" fill="rgb(233,124,45)"/><text x="838.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="835" y="452" width="2" height="15" fill="rgb(247,165,38)"/><text x="838.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="835" y="468" width="2" height="15" fill="rgb(221,86,39)"/><text x="838.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="835" y="484" width="2" height="15" fill="rgb(251,194,1)"/><text x="838.00" y="494.50"></text></g><g><title>0x7f180f12d906 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="880" y="356" width="4" height="15" fill="rgb(245,56,7)"/><text x="883.00" y="366.50"></text></g><g><title>0x7f180f12d90e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="884" y="356" width="2" height="15" fill="rgb(212,45,37)"/><text x="887.00" y="366.50"></text></g><g><title>0x7f180f12d91c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="886" y="356" width="2" height="15" fill="rgb(206,73,38)"/><text x="889.00" y="366.50"></text></g><g><title>0x7f180f12d91e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="888" y="356" width="1" height="15" fill="rgb(238,5,0)"/><text x="891.00" y="366.50"></text></g><g><title>0x7f180f12d929 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="889" y="356" width="2" height="15" fill="rgb(217,172,34)"/><text x="892.00" y="366.50"></text></g><g><title>0x7f180f12d96a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="891" y="356" width="2" height="15" fill="rgb(239,157,32)"/><text x="894.00" y="366.50"></text></g><g><title>0x7f180f12d991 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="893" y="356" width="6" height="15" fill="rgb(223,112,26)"/><text x="896.00" y="366.50"></text></g><g><title>0x7f180f12d998 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="899" y="356" width="3" height="15" fill="rgb(230,18,37)"/><text x="902.00" y="366.50"></text></g><g><title>0x7f180f12da38 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="902" y="356" width="2" height="15" fill="rgb(245,31,16)"/><text x="905.00" y="366.50"></text></g><g><title>0x7f180f12da55 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="904" y="356" width="2" height="15" fill="rgb(209,64,27)"/><text x="907.00" y="366.50"></text></g><g><title>0x7f180f12dbd8 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="906" y="356" width="4" height="15" fill="rgb(250,78,7)"/><text x="909.00" y="366.50"></text></g><g><title>0x7f180f12dbe4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="910" y="356" width="2" height="15" fill="rgb(225,74,28)"/><text x="913.00" y="366.50"></text></g><g><title>0x7f180f12dbe8 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="912" y="356" width="5" height="15" fill="rgb(240,87,21)"/><text x="915.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.79%)</title><rect x="917" y="356" width="10" height="15" fill="rgb(217,21,54)"/><text x="920.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="927" y="356" width="2" height="15" fill="rgb(242,44,9)"/><text x="930.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="927" y="372" width="2" height="15" fill="rgb(226,90,28)"/><text x="930.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="927" y="388" width="2" height="15" fill="rgb(252,88,15)"/><text x="930.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="927" y="404" width="2" height="15" fill="rgb(235,104,4)"/><text x="930.00" y="414.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="927" y="420" width="2" height="15" fill="rgb(235,213,25)"/><text x="930.00" y="430.50"></text></g><g><title>0x7f17cf132930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1033" y="388" width="2" height="15" fill="rgb(217,165,22)"/><text x="1036.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 0.63%)</title><rect x="1035" y="388" width="7" height="15" fill="rgb(219,45,23)"/><text x="1038.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (4 samples, 0.63%)</title><rect x="1035" y="404" width="7" height="15" fill="rgb(244,161,30)"/><text x="1038.00" y="414.50"></text></g><g><title>0x7f180f14e120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1055" y="420" width="2" height="15" fill="rgb(216,190,21)"/><text x="1058.00" y="430.50"></text></g><g><title>0x7f17febf9d50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="1063" y="436" width="2" height="15" fill="rgb(252,213,45)"/><text x="1066.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.37%)</title><rect x="1046" y="404" width="28" height="15" fill="rgb(230,50,4)"/><text x="1049.00" y="414.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.42%)</title><rect x="1057" y="420" width="17" height="15" fill="rgb(231,47,6)"/><text x="1060.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.79%)</title><rect x="1065" y="436" width="9" height="15" fill="rgb(230,76,36)"/><text x="1068.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (111 samples, 17.54%)</title><rect x="929" y="356" width="206" height="15" fill="rgb(240,184,46)"/><text x="932.00" y="366.50">onnxruntime::ml::TreeEnsemb..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (57 samples, 9.00%)</title><rect x="1029" y="372" width="106" height="15" fill="rgb(211,100,21)"/><text x="1032.00" y="382.50">std::_Hashta..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (50 samples, 7.90%)</title><rect x="1042" y="388" width="93" height="15" fill="rgb(242,120,1)"/><text x="1045.00" y="398.50">std::_Hasht..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (33 samples, 5.21%)</title><rect x="1074" y="404" width="61" height="15" fill="rgb(244,57,5)"/><text x="1077.00" y="414.50">std::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (17 samples, 2.69%)</title><rect x="1104" y="420" width="31" height="15" fill="rgb(237,80,4)"/><text x="1107.00" y="430.50">st..</text></g><g><title>0x7f17cf132850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="1145" y="372" width="2" height="15" fill="rgb(241,92,52)"/><text x="1148.00" y="382.50"></text></g><g><title>0x7f180f14ddc9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1147" y="372" width="1" height="15" fill="rgb(248,110,28)"/><text x="1150.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 1.26%)</title><rect x="1135" y="356" width="15" height="15" fill="rgb(233,15,32)"/><text x="1138.00" y="366.50"></text></g><g><title>0x7f180f14ddcb (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1148" y="372" width="2" height="15" fill="rgb(226,114,19)"/><text x="1151.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.63%)</title><rect x="1150" y="356" width="8" height="15" fill="rgb(209,89,52)"/><text x="1153.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 2.05%)</title><rect x="1158" y="356" width="24" height="15" fill="rgb(243,169,52)"/><text x="1161.00" y="366.50">s..</text></g><g><title>all (633 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(218,12,3)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:68) (273 samples, 43.13%)</title><rect x="681" y="52" width="509" height="15" fill="rgb(234,197,22)"/><text x="684.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:67) (273 samples, 43.13%)</title><rect x="681" y="68" width="509" height="15" fill="rgb(209,130,52)"/><text x="684.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:37) (273 samples, 43.13%)</title><rect x="681" y="84" width="509" height="15" fill="rgb(227,47,17)"/><text x="684.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:31) (273 samples, 43.13%)</title><rect x="681" y="100" width="509" height="15" fill="rgb(245,102,48)"/><text x="684.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (273 samples, 43.13%)</title><rect x="681" y="116" width="509" height="15" fill="rgb(210,25,20)"/><text x="684.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (273 samples, 43.13%)</title><rect x="681" y="132" width="509" height="15" fill="rgb(212,205,40)"/><text x="684.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (272 samples, 42.97%)</title><rect x="682" y="148" width="508" height="15" fill="rgb(247,22,8)"/><text x="685.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (271 samples, 42.81%)</title><rect x="684" y="164" width="506" height="15" fill="rgb(230,32,20)"/><text x="687.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (271 samples, 42.81%)</title><rect x="684" y="180" width="506" height="15" fill="rgb(228,154,20)"/><text x="687.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (270 samples, 42.65%)</title><rect x="686" y="196" width="504" height="15" fill="rgb(233,72,7)"/><text x="689.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 42.50%)</title><rect x="688" y="212" width="502" height="15" fill="rgb(207,112,19)"/><text x="691.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 42.50%)</title><rect x="688" y="228" width="502" height="15" fill="rgb(218,9,45)"/><text x="691.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObje..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 42.34%)</title><rect x="690" y="244" width="500" height="15" fill="rgb(219,167,5)"/><text x="693.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 42.34%)</title><rect x="690" y="260" width="500" height="15" fill="rgb(242,211,36)"/><text x="693.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 42.34%)</title><rect x="690" y="276" width="500" height="15" fill="rgb(221,226,0)"/><text x="693.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pyb..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 42.34%)</title><rect x="690" y="292" width="500" height="15" fill="rgb(214,90,27)"/><text x="693.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybin..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 42.34%)</title><rect x="690" y="308" width="500" height="15" fill="rgb(245,131,52)"/><text x="693.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_p..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (268 samples, 42.34%)</title><rect x="690" y="324" width="500" height="15" fill="rgb(246,116,44)"/><text x="693.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxrunti..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (189 samples, 29.86%)</title><rect x="837" y="340" width="353" height="15" fill="rgb(236,10,26)"/><text x="840.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.63%)</title><rect x="1182" y="356" width="8" height="15" fill="rgb(249,171,28)"/><text x="1185.00" y="366.50"></text></g></g></svg>