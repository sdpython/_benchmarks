<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1382) (1 samples, 0.10%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(239,14,52)"/><text x="13.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 0.21%)</title><rect x="10" y="852" width="2" height="15" fill="rgb(234,44,43)"/><text x="13.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 0.21%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(247,107,7)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 0.21%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(220,82,27)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (2 samples, 0.21%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(229,125,18)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (2 samples, 0.21%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(239,180,51)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.21%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(218,98,52)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.21%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(222,46,30)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.10%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(226,1,22)"/><text x="14.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.10%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(223,209,20)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.10%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(244,152,31)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.10%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(242,139,53)"/><text x="14.00" y="1022.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.10%)</title><rect x="12" y="884" width="1" height="15" fill="rgb(238,85,21)"/><text x="15.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.10%)</title><rect x="12" y="900" width="1" height="15" fill="rgb(217,185,9)"/><text x="15.00" y="910.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.10%)</title><rect x="12" y="916" width="1" height="15" fill="rgb(233,221,34)"/><text x="15.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (4 samples, 0.42%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(225,75,19)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(220,5,39)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.42%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(206,187,15)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(248,24,53)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(215,209,43)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.42%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(214,22,42)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.42%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(233,122,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.42%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(233,72,7)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(229,108,27)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 0.42%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(210,215,54)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(210,190,38)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.42%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(227,50,50)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.42%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(217,17,9)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.42%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(233,198,29)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(237,179,13)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 0.42%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(227,7,41)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(226,73,21)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.42%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(250,217,45)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.42%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(251,225,39)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.42%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(238,11,29)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(252,171,5)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 0.42%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(236,228,14)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(225,194,39)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.42%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(234,137,33)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.42%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(211,73,49)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.42%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(207,114,5)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(218,130,36)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 0.42%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(226,170,46)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(249,61,39)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 0.42%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(216,4,24)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(213,126,1)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(227,15,44)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.42%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(217,95,43)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.42%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(249,140,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.42%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(251,64,49)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(224,107,3)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 0.42%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(224,183,33)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 0.42%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(248,19,47)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 0.42%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(208,209,37)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 0.42%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(212,152,4)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 0.42%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(244,191,5)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 0.42%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(216,40,27)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.42%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(214,17,42)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.42%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(211,61,10)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.21%)</title><rect x="12" y="852" width="2" height="15" fill="rgb(238,177,34)"/><text x="15.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.21%)</title><rect x="12" y="868" width="2" height="15" fill="rgb(241,122,18)"/><text x="15.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.10%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(242,159,31)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.10%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(207,183,22)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.10%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(212,158,50)"/><text x="16.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.10%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(226,58,9)"/><text x="16.00" y="942.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:112) (1 samples, 0.10%)</title><rect x="14" y="1092" width="2" height="15" fill="rgb(219,201,2)"/><text x="17.00" y="1102.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.10%)</title><rect x="14" y="1108" width="2" height="15" fill="rgb(227,113,2)"/><text x="17.00" y="1118.50"></text></g><g><title>verify_interface (cryptography/utils.py:106) (1 samples, 0.10%)</title><rect x="14" y="1124" width="2" height="15" fill="rgb(231,152,44)"/><text x="17.00" y="1134.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="14" y="1140" width="2" height="15" fill="rgb(238,14,36)"/><text x="17.00" y="1150.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="14" y="1156" width="2" height="15" fill="rgb(205,10,25)"/><text x="17.00" y="1166.50"></text></g><g><title>_signature_from_callable (inspect.py:2225) (1 samples, 0.10%)</title><rect x="14" y="1172" width="2" height="15" fill="rgb(212,151,35)"/><text x="17.00" y="1182.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.21%)</title><rect x="14" y="244" width="3" height="15" fill="rgb(247,165,53)"/><text x="17.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="260" width="3" height="15" fill="rgb(248,219,6)"/><text x="17.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="276" width="3" height="15" fill="rgb(235,156,12)"/><text x="17.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="292" width="3" height="15" fill="rgb(206,94,28)"/><text x="17.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="308" width="3" height="15" fill="rgb(241,114,8)"/><text x="17.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="324" width="3" height="15" fill="rgb(246,105,40)"/><text x="17.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.21%)</title><rect x="14" y="340" width="3" height="15" fill="rgb(253,94,15)"/><text x="17.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="356" width="3" height="15" fill="rgb(220,16,44)"/><text x="17.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.21%)</title><rect x="14" y="372" width="3" height="15" fill="rgb(253,167,48)"/><text x="17.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="388" width="3" height="15" fill="rgb(253,125,52)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="404" width="3" height="15" fill="rgb(251,176,25)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="420" width="3" height="15" fill="rgb(222,215,44)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="436" width="3" height="15" fill="rgb(254,114,38)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="452" width="3" height="15" fill="rgb(224,227,26)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="468" width="3" height="15" fill="rgb(234,132,29)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 0.21%)</title><rect x="14" y="484" width="3" height="15" fill="rgb(238,188,2)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="500" width="3" height="15" fill="rgb(212,76,52)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="516" width="3" height="15" fill="rgb(226,166,1)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="532" width="3" height="15" fill="rgb(220,46,51)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="548" width="3" height="15" fill="rgb(224,13,14)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="564" width="3" height="15" fill="rgb(252,107,51)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.21%)</title><rect x="14" y="580" width="3" height="15" fill="rgb(247,4,27)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="596" width="3" height="15" fill="rgb(234,28,29)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="612" width="3" height="15" fill="rgb(246,99,46)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="628" width="3" height="15" fill="rgb(215,65,49)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="644" width="3" height="15" fill="rgb(219,94,38)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="660" width="3" height="15" fill="rgb(244,16,51)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.21%)</title><rect x="14" y="676" width="3" height="15" fill="rgb(229,15,9)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="692" width="3" height="15" fill="rgb(249,191,13)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="708" width="3" height="15" fill="rgb(215,18,31)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="724" width="3" height="15" fill="rgb(249,4,50)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="740" width="3" height="15" fill="rgb(242,183,23)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="756" width="3" height="15" fill="rgb(242,177,12)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 0.21%)</title><rect x="14" y="772" width="3" height="15" fill="rgb(207,129,1)"/><text x="17.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.21%)</title><rect x="14" y="788" width="3" height="15" fill="rgb(210,135,6)"/><text x="17.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="804" width="3" height="15" fill="rgb(242,9,47)"/><text x="17.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="820" width="3" height="15" fill="rgb(220,50,24)"/><text x="17.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="836" width="3" height="15" fill="rgb(207,205,52)"/><text x="17.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="852" width="3" height="15" fill="rgb(241,148,50)"/><text x="17.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="868" width="3" height="15" fill="rgb(213,221,12)"/><text x="17.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="884" width="3" height="15" fill="rgb(237,91,53)"/><text x="17.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:48) (2 samples, 0.21%)</title><rect x="14" y="900" width="3" height="15" fill="rgb(222,12,40)"/><text x="17.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="916" width="3" height="15" fill="rgb(243,60,13)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="932" width="3" height="15" fill="rgb(213,96,16)"/><text x="17.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="948" width="3" height="15" fill="rgb(229,172,38)"/><text x="17.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="964" width="3" height="15" fill="rgb(247,3,25)"/><text x="17.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="980" width="3" height="15" fill="rgb(226,112,0)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py:7) (2 samples, 0.21%)</title><rect x="14" y="996" width="3" height="15" fill="rgb(220,222,7)"/><text x="17.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="14" y="1012" width="3" height="15" fill="rgb(208,70,42)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="14" y="1028" width="3" height="15" fill="rgb(238,52,35)"/><text x="17.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="14" y="1044" width="3" height="15" fill="rgb(226,129,44)"/><text x="17.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="14" y="1060" width="3" height="15" fill="rgb(206,139,7)"/><text x="17.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="14" y="1076" width="3" height="15" fill="rgb(221,126,19)"/><text x="17.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py:56) (1 samples, 0.10%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(223,26,25)"/><text x="19.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="16" y="1108" width="1" height="15" fill="rgb(237,121,28)"/><text x="19.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(217,57,31)"/><text x="19.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(239,124,23)"/><text x="19.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(222,121,41)"/><text x="19.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="16" y="1172" width="1" height="15" fill="rgb(229,149,29)"/><text x="19.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py:17) (1 samples, 0.10%)</title><rect x="16" y="1188" width="1" height="15" fill="rgb(226,20,28)"/><text x="19.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="16" y="1204" width="1" height="15" fill="rgb(235,116,17)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="16" y="1220" width="1" height="15" fill="rgb(212,5,17)"/><text x="19.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="16" y="1236" width="1" height="15" fill="rgb(232,110,40)"/><text x="19.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="16" y="1252" width="1" height="15" fill="rgb(245,130,54)"/><text x="19.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="16" y="1268" width="1" height="15" fill="rgb(205,202,30)"/><text x="19.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x509.py:378) (1 samples, 0.10%)</title><rect x="16" y="1284" width="1" height="15" fill="rgb(219,36,13)"/><text x="19.00" y="1294.50"></text></g><g><title>register_decorator (cryptography/utils.py:47) (1 samples, 0.10%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(253,2,23)"/><text x="19.00" y="1310.50"></text></g><g><title>verify_interface (cryptography/utils.py:107) (1 samples, 0.10%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(249,146,33)"/><text x="19.00" y="1326.50"></text></g><g><title>signature (inspect.py:3083) (1 samples, 0.10%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(228,216,52)"/><text x="19.00" y="1342.50"></text></g><g><title>from_callable (inspect.py:2833) (1 samples, 0.10%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(253,177,41)"/><text x="19.00" y="1358.50"></text></g><g><title>_signature_from_callable (inspect.py:2284) (1 samples, 0.10%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(249,6,1)"/><text x="19.00" y="1374.50"></text></g><g><title>_signature_from_function (inspect.py:2154) (1 samples, 0.10%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(241,10,37)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.10%)</title><rect x="17" y="1492" width="1" height="15" fill="rgb(233,209,37)"/><text x="20.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="17" y="1508" width="1" height="15" fill="rgb(247,26,23)"/><text x="20.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="17" y="1524" width="1" height="15" fill="rgb(245,213,0)"/><text x="20.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="17" y="1540" width="1" height="15" fill="rgb(240,168,44)"/><text x="20.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="17" y="1556" width="1" height="15" fill="rgb(247,62,11)"/><text x="20.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="17" y="1572" width="1" height="15" fill="rgb(221,175,7)"/><text x="20.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="17" y="1588" width="1" height="15" fill="rgb(236,77,0)"/><text x="20.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="17" y="1604" width="1" height="15" fill="rgb(236,211,19)"/><text x="20.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.10%)</title><rect x="17" y="1620" width="1" height="15" fill="rgb(250,112,52)"/><text x="20.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="17" y="1636" width="1" height="15" fill="rgb(229,138,22)"/><text x="20.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="17" y="1652" width="1" height="15" fill="rgb(207,35,34)"/><text x="20.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="17" y="1668" width="1" height="15" fill="rgb(225,49,7)"/><text x="20.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="17" y="1684" width="1" height="15" fill="rgb(234,159,12)"/><text x="20.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="17" y="1700" width="1" height="15" fill="rgb(233,55,2)"/><text x="20.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py:157) (1 samples, 0.10%)</title><rect x="17" y="1716" width="1" height="15" fill="rgb(211,167,14)"/><text x="20.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="17" y="1732" width="1" height="15" fill="rgb(254,91,26)"/><text x="20.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="17" y="1748" width="1" height="15" fill="rgb(221,138,14)"/><text x="20.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="17" y="1764" width="1" height="15" fill="rgb(249,68,7)"/><text x="20.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="17" y="1780" width="1" height="15" fill="rgb(227,212,12)"/><text x="20.00" y="1790.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.10%)</title><rect x="17" y="1796" width="1" height="15" fill="rgb(227,30,22)"/><text x="20.00" y="1806.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:917) (1 samples, 0.10%)</title><rect x="17" y="1812" width="1" height="15" fill="rgb(253,7,46)"/><text x="20.00" y="1822.50"></text></g><g><title>lseek64 (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="17" y="1828" width="1" height="15" fill="rgb(250,44,10)"/><text x="20.00" y="1838.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (2 samples, 0.21%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(249,117,8)"/><text x="20.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(244,138,41)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(209,165,22)"/><text x="20.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(250,22,7)"/><text x="20.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(218,153,41)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(210,144,46)"/><text x="20.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (2 samples, 0.21%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(233,91,34)"/><text x="20.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(228,21,18)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(217,0,53)"/><text x="20.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(227,108,29)"/><text x="20.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(243,52,35)"/><text x="20.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(239,191,6)"/><text x="20.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (2 samples, 0.21%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(229,172,18)"/><text x="20.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(242,229,7)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(249,23,12)"/><text x="20.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(249,56,43)"/><text x="20.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(240,46,54)"/><text x="20.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(234,189,8)"/><text x="20.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (2 samples, 0.21%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(208,148,53)"/><text x="20.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(233,96,1)"/><text x="20.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(226,20,44)"/><text x="20.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(254,104,51)"/><text x="20.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(205,31,47)"/><text x="20.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(209,3,51)"/><text x="20.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (2 samples, 0.21%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(240,204,32)"/><text x="20.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(232,89,25)"/><text x="20.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(229,201,10)"/><text x="20.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(213,34,34)"/><text x="20.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(239,157,53)"/><text x="20.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(226,40,35)"/><text x="20.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.10%)</title><rect x="18" y="1492" width="1" height="15" fill="rgb(210,101,20)"/><text x="21.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="18" y="1508" width="1" height="15" fill="rgb(234,61,43)"/><text x="21.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="18" y="1524" width="1" height="15" fill="rgb(207,202,18)"/><text x="21.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="18" y="1540" width="1" height="15" fill="rgb(218,95,52)"/><text x="21.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="18" y="1556" width="1" height="15" fill="rgb(208,80,53)"/><text x="21.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="18" y="1572" width="1" height="15" fill="rgb(247,137,39)"/><text x="21.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:33) (1 samples, 0.10%)</title><rect x="18" y="1588" width="1" height="15" fill="rgb(208,142,21)"/><text x="21.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="18" y="1604" width="1" height="15" fill="rgb(221,177,34)"/><text x="21.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="18" y="1620" width="1" height="15" fill="rgb(230,228,12)"/><text x="21.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="18" y="1636" width="1" height="15" fill="rgb(245,56,26)"/><text x="21.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="18" y="1652" width="1" height="15" fill="rgb(217,58,44)"/><text x="21.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="18" y="1668" width="1" height="15" fill="rgb(254,93,5)"/><text x="21.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py:4) (1 samples, 0.10%)</title><rect x="18" y="1684" width="1" height="15" fill="rgb(252,148,45)"/><text x="21.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="18" y="1700" width="1" height="15" fill="rgb(233,214,14)"/><text x="21.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="18" y="1716" width="1" height="15" fill="rgb(235,153,13)"/><text x="21.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="18" y="1732" width="1" height="15" fill="rgb(224,203,53)"/><text x="21.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="18" y="1748" width="1" height="15" fill="rgb(236,90,19)"/><text x="21.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="18" y="1764" width="1" height="15" fill="rgb(222,120,50)"/><text x="21.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py:106) (1 samples, 0.10%)</title><rect x="18" y="1780" width="1" height="15" fill="rgb(237,167,4)"/><text x="21.00" y="1790.50"></text></g><g><title>_generate_cmap (matplotlib/cm.py:93) (1 samples, 0.10%)</title><rect x="18" y="1796" width="1" height="15" fill="rgb(213,88,4)"/><text x="21.00" y="1806.50"></text></g><g><title>from_list (matplotlib/colors.py:752) (1 samples, 0.10%)</title><rect x="18" y="1812" width="1" height="15" fill="rgb(205,105,11)"/><text x="21.00" y="1822.50"></text></g><g><title>to_rgba (matplotlib/colors.py:177) (1 samples, 0.10%)</title><rect x="18" y="1828" width="1" height="15" fill="rgb(244,27,44)"/><text x="21.00" y="1838.50"></text></g><g><title>_to_rgba_no_colorcycle (matplotlib/colors.py:236) (1 samples, 0.10%)</title><rect x="18" y="1844" width="1" height="15" fill="rgb(252,181,24)"/><text x="21.00" y="1854.50"></text></g><g><title>array_ndim_get (getset.c:30) (1 samples, 0.10%)</title><rect x="18" y="1860" width="1" height="15" fill="rgb(248,104,54)"/><text x="21.00" y="1870.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (3 samples, 0.31%)</title><rect x="17" y="436" width="4" height="15" fill="rgb(239,131,24)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="17" y="452" width="4" height="15" fill="rgb(221,13,52)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="17" y="468" width="4" height="15" fill="rgb(254,12,49)"/><text x="20.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="17" y="484" width="4" height="15" fill="rgb(249,101,8)"/><text x="20.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="17" y="500" width="4" height="15" fill="rgb(227,187,9)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="17" y="516" width="4" height="15" fill="rgb(216,10,8)"/><text x="20.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (3 samples, 0.31%)</title><rect x="17" y="532" width="4" height="15" fill="rgb(241,79,46)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="17" y="548" width="4" height="15" fill="rgb(205,194,51)"/><text x="20.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="17" y="564" width="4" height="15" fill="rgb(232,108,2)"/><text x="20.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(233,75,25)"/><text x="20.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="17" y="596" width="4" height="15" fill="rgb(232,136,4)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="17" y="612" width="4" height="15" fill="rgb(241,81,40)"/><text x="20.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (3 samples, 0.31%)</title><rect x="17" y="628" width="4" height="15" fill="rgb(231,195,23)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="17" y="644" width="4" height="15" fill="rgb(238,105,38)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="17" y="660" width="4" height="15" fill="rgb(243,50,8)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="17" y="676" width="4" height="15" fill="rgb(226,115,18)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="17" y="692" width="4" height="15" fill="rgb(254,155,28)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="17" y="708" width="4" height="15" fill="rgb(222,110,13)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.31%)</title><rect x="17" y="724" width="4" height="15" fill="rgb(246,84,9)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="17" y="740" width="4" height="15" fill="rgb(232,77,4)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="17" y="756" width="4" height="15" fill="rgb(232,30,29)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(207,6,38)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(245,223,3)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(252,37,31)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.31%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(208,30,18)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(236,19,39)"/><text x="20.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(233,100,48)"/><text x="20.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(240,226,32)"/><text x="20.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(214,156,25)"/><text x="20.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(226,92,40)"/><text x="20.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (3 samples, 0.31%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(205,113,25)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(215,69,9)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(249,179,8)"/><text x="20.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(218,83,40)"/><text x="20.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(251,47,32)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(213,55,35)"/><text x="20.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (1 samples, 0.10%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(227,29,53)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(229,112,41)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(211,183,5)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(215,81,25)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(240,66,27)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(209,53,53)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (1 samples, 0.10%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(218,93,53)"/><text x="22.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:980) (1 samples, 0.10%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(210,199,3)"/><text x="22.00" y="1134.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;:148) (1 samples, 0.10%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(212,105,16)"/><text x="22.00" y="1150.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;:174) (1 samples, 0.10%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(249,87,40)"/><text x="22.00" y="1166.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap&gt;:59) (1 samples, 0.10%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(254,82,39)"/><text x="22.00" y="1182.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.10%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(220,146,39)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(214,63,13)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(247,95,52)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(233,56,37)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(239,218,44)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(211,20,6)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.10%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(230,213,20)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(214,154,47)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(223,108,45)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(229,143,27)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(205,45,51)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(247,50,13)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.10%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(236,84,52)"/><text x="24.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.10%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(221,72,7)"/><text x="24.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.10%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(246,51,34)"/><text x="24.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.10%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(242,100,30)"/><text x="24.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.10%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(223,123,39)"/><text x="24.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.10%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(238,139,24)"/><text x="24.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.10%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(235,138,31)"/><text x="24.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.10%)</title><rect x="21" y="1412" width="1" height="15" fill="rgb(212,114,42)"/><text x="24.00" y="1422.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.10%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(231,96,26)"/><text x="25.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(230,113,30)"/><text x="25.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="22" y="1268" width="1" height="15" fill="rgb(224,29,9)"/><text x="25.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="22" y="1284" width="1" height="15" fill="rgb(207,90,46)"/><text x="25.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="22" y="1300" width="1" height="15" fill="rgb(223,40,9)"/><text x="25.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="22" y="1316" width="1" height="15" fill="rgb(241,224,32)"/><text x="25.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="22" y="1332" width="1" height="15" fill="rgb(228,229,31)"/><text x="25.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="22" y="1348" width="1" height="15" fill="rgb(228,169,39)"/><text x="25.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.10%)</title><rect x="22" y="1364" width="1" height="15" fill="rgb(220,176,49)"/><text x="25.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="22" y="1380" width="1" height="15" fill="rgb(224,50,7)"/><text x="25.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="22" y="1396" width="1" height="15" fill="rgb(223,187,41)"/><text x="25.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="22" y="1412" width="1" height="15" fill="rgb(238,137,41)"/><text x="25.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="22" y="1428" width="1" height="15" fill="rgb(240,23,37)"/><text x="25.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="22" y="1444" width="1" height="15" fill="rgb(240,199,46)"/><text x="25.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (1 samples, 0.10%)</title><rect x="22" y="1460" width="1" height="15" fill="rgb(223,71,6)"/><text x="25.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (1 samples, 0.10%)</title><rect x="22" y="1476" width="1" height="15" fill="rgb(223,54,17)"/><text x="25.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.10%)</title><rect x="22" y="1492" width="1" height="15" fill="rgb(218,218,22)"/><text x="25.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.10%)</title><rect x="22" y="1508" width="1" height="15" fill="rgb(226,58,32)"/><text x="25.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.10%)</title><rect x="22" y="1524" width="1" height="15" fill="rgb(206,30,29)"/><text x="25.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.10%)</title><rect x="22" y="1540" width="1" height="15" fill="rgb(247,74,48)"/><text x="25.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.10%)</title><rect x="22" y="1556" width="1" height="15" fill="rgb(232,192,37)"/><text x="25.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.10%)</title><rect x="22" y="1572" width="1" height="15" fill="rgb(224,26,13)"/><text x="25.00" y="1582.50"></text></g><g><title>0x7f1bfb9ffc58 (?) (1 samples, 0.10%)</title><rect x="22" y="1588" width="1" height="15" fill="rgb(238,153,17)"/><text x="25.00" y="1598.50"></text></g><g><title>0x7f1bfbad2479 (?) (1 samples, 0.10%)</title><rect x="22" y="1604" width="1" height="15" fill="rgb(223,82,33)"/><text x="25.00" y="1614.50"></text></g><g><title>0x7f1bfbad23dc (?) (1 samples, 0.10%)</title><rect x="22" y="1620" width="1" height="15" fill="rgb(217,38,8)"/><text x="25.00" y="1630.50"></text></g><g><title>0x7f1bfbad2103 (?) (1 samples, 0.10%)</title><rect x="22" y="1636" width="1" height="15" fill="rgb(231,43,31)"/><text x="25.00" y="1646.50"></text></g><g><title>0x7f1bfbad36d3 (?) (1 samples, 0.10%)</title><rect x="22" y="1652" width="1" height="15" fill="rgb(215,159,43)"/><text x="25.00" y="1662.50"></text></g><g><title>0x7f1bfbad2e01 (?) (1 samples, 0.10%)</title><rect x="22" y="1668" width="1" height="15" fill="rgb(220,214,31)"/><text x="25.00" y="1678.50"></text></g><g><title>0x7f1bfd1c9e40 (?) (1 samples, 0.10%)</title><rect x="22" y="1684" width="1" height="15" fill="rgb(210,24,49)"/><text x="25.00" y="1694.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:4) (12 samples, 1.26%)</title><rect x="10" y="52" width="14" height="15" fill="rgb(229,59,33)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 1.26%)</title><rect x="10" y="68" width="14" height="15" fill="rgb(216,45,54)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 1.26%)</title><rect x="10" y="84" width="14" height="15" fill="rgb(215,143,22)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 1.26%)</title><rect x="10" y="100" width="14" height="15" fill="rgb(229,63,27)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 1.26%)</title><rect x="10" y="116" width="14" height="15" fill="rgb(207,159,40)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 1.26%)</title><rect x="10" y="132" width="14" height="15" fill="rgb(205,31,34)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (8 samples, 0.84%)</title><rect x="14" y="148" width="10" height="15" fill="rgb(244,86,37)"/><text x="17.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 0.84%)</title><rect x="14" y="164" width="10" height="15" fill="rgb(247,16,53)"/><text x="17.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 0.84%)</title><rect x="14" y="180" width="10" height="15" fill="rgb(205,19,26)"/><text x="17.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 0.84%)</title><rect x="14" y="196" width="10" height="15" fill="rgb(214,195,42)"/><text x="17.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 0.84%)</title><rect x="14" y="212" width="10" height="15" fill="rgb(239,210,6)"/><text x="17.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 0.84%)</title><rect x="14" y="228" width="10" height="15" fill="rgb(229,178,43)"/><text x="17.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (6 samples, 0.63%)</title><rect x="17" y="244" width="7" height="15" fill="rgb(235,2,40)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.63%)</title><rect x="17" y="260" width="7" height="15" fill="rgb(251,221,11)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.63%)</title><rect x="17" y="276" width="7" height="15" fill="rgb(253,143,35)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.63%)</title><rect x="17" y="292" width="7" height="15" fill="rgb(238,2,16)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.63%)</title><rect x="17" y="308" width="7" height="15" fill="rgb(225,178,54)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.63%)</title><rect x="17" y="324" width="7" height="15" fill="rgb(253,57,6)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (6 samples, 0.63%)</title><rect x="17" y="340" width="7" height="15" fill="rgb(206,58,50)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 0.63%)</title><rect x="17" y="356" width="7" height="15" fill="rgb(234,173,53)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 0.63%)</title><rect x="17" y="372" width="7" height="15" fill="rgb(222,165,24)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 0.63%)</title><rect x="17" y="388" width="7" height="15" fill="rgb(223,224,0)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 0.63%)</title><rect x="17" y="404" width="7" height="15" fill="rgb(208,216,45)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 0.63%)</title><rect x="17" y="420" width="7" height="15" fill="rgb(215,91,24)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 0.31%)</title><rect x="21" y="436" width="3" height="15" fill="rgb(206,32,3)"/><text x="24.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="452" width="3" height="15" fill="rgb(240,117,13)"/><text x="24.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.31%)</title><rect x="21" y="468" width="3" height="15" fill="rgb(206,151,12)"/><text x="24.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(215,95,10)"/><text x="24.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(229,169,18)"/><text x="24.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(243,36,33)"/><text x="24.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(212,15,41)"/><text x="24.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(206,12,51)"/><text x="24.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(212,43,50)"/><text x="24.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 0.31%)</title><rect x="21" y="580" width="3" height="15" fill="rgb(223,119,53)"/><text x="24.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="596" width="3" height="15" fill="rgb(245,141,35)"/><text x="24.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="21" y="612" width="3" height="15" fill="rgb(227,30,14)"/><text x="24.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(213,101,30)"/><text x="24.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(233,35,41)"/><text x="24.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(247,84,49)"/><text x="24.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 0.31%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(212,73,39)"/><text x="24.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(220,150,26)"/><text x="24.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(210,23,37)"/><text x="24.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(236,146,29)"/><text x="24.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(227,32,11)"/><text x="24.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(241,33,53)"/><text x="24.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 0.31%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(210,143,22)"/><text x="24.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(242,178,47)"/><text x="24.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(254,91,18)"/><text x="24.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(234,115,40)"/><text x="24.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(219,126,20)"/><text x="24.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(213,107,51)"/><text x="24.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 0.31%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(252,72,12)"/><text x="24.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(221,3,40)"/><text x="24.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.31%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(208,172,7)"/><text x="24.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(211,196,11)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(233,129,39)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(249,192,54)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(238,146,32)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(213,150,5)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(236,155,46)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 0.31%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(246,11,53)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.31%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(230,90,13)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.31%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(218,130,48)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.31%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(219,11,28)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.31%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(216,174,0)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.31%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(227,138,42)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.21%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(233,180,1)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.21%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(228,182,5)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(220,193,33)"/><text x="25.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.21%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(205,176,38)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.21%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(252,202,19)"/><text x="25.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.21%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(211,207,16)"/><text x="25.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.21%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(236,167,38)"/><text x="25.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.21%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(244,107,25)"/><text x="25.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:35) (1 samples, 0.10%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(210,22,44)"/><text x="26.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.10%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(239,201,15)"/><text x="26.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(220,176,10)"/><text x="26.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(252,212,48)"/><text x="26.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(221,143,36)"/><text x="26.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(217,114,22)"/><text x="26.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.10%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(248,8,35)"/><text x="26.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:812) (1 samples, 0.10%)</title><rect x="23" y="1348" width="1" height="15" fill="rgb(246,175,37)"/><text x="26.00" y="1358.50"></text></g><g><title>path_stats (&lt;frozen importlib._bootstrap_external&gt;:954) (1 samples, 0.10%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(236,110,4)"/><text x="26.00" y="1374.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:25) (1 samples, 0.10%)</title><rect x="24" y="84" width="2" height="15" fill="rgb(208,211,24)"/><text x="27.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.10%)</title><rect x="24" y="100" width="2" height="15" fill="rgb(212,64,2)"/><text x="27.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:370) (1 samples, 0.10%)</title><rect x="24" y="116" width="2" height="15" fill="rgb(238,29,11)"/><text x="27.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py:110) (1 samples, 0.10%)</title><rect x="24" y="132" width="2" height="15" fill="rgb(235,60,42)"/><text x="27.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py:346) (1 samples, 0.10%)</title><rect x="24" y="148" width="2" height="15" fill="rgb(233,196,12)"/><text x="27.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py:139) (1 samples, 0.10%)</title><rect x="24" y="164" width="2" height="15" fill="rgb(217,32,34)"/><text x="27.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py:973) (1 samples, 0.10%)</title><rect x="24" y="180" width="2" height="15" fill="rgb(207,91,1)"/><text x="27.00" y="190.50"></text></g><g><title>convert_sklearn_ada_boost_regressor (mlprodict/onnx_conv/sklconv/ada_boost.py:85) (1 samples, 0.10%)</title><rect x="24" y="196" width="2" height="15" fill="rgb(247,54,22)"/><text x="27.00" y="206.50"></text></g><g><title>_get_estimators_label (mlprodict/onnx_conv/sklconv/ada_boost.py:46) (1 samples, 0.10%)</title><rect x="24" y="212" width="2" height="15" fill="rgb(220,42,18)"/><text x="27.00" y="222.50"></text></g><g><title>apply_concat (onnxconverter_common/onnx_ops.py:259) (1 samples, 0.10%)</title><rect x="24" y="228" width="2" height="15" fill="rgb(238,135,43)"/><text x="27.00" y="238.50"></text></g><g><title>add_node (skl2onnx/common/_container.py:410) (1 samples, 0.10%)</title><rect x="24" y="244" width="2" height="15" fill="rgb(240,150,20)"/><text x="27.00" y="254.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py:364) (1 samples, 0.10%)</title><rect x="24" y="260" width="2" height="15" fill="rgb(247,127,9)"/><text x="27.00" y="270.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.10%)</title><rect x="24" y="276" width="2" height="15" fill="rgb(210,38,27)"/><text x="27.00" y="286.50"></text></g><g><title>extract (traceback.py:363) (1 samples, 0.10%)</title><rect x="24" y="292" width="2" height="15" fill="rgb(207,229,45)"/><text x="27.00" y="302.50"></text></g><g><title>line (traceback.py:285) (1 samples, 0.10%)</title><rect x="24" y="308" width="2" height="15" fill="rgb(211,0,32)"/><text x="27.00" y="318.50"></text></g><g><title>getline (linecache.py:16) (1 samples, 0.10%)</title><rect x="24" y="324" width="2" height="15" fill="rgb(235,149,28)"/><text x="27.00" y="334.50"></text></g><g><title>getlines (linecache.py:47) (1 samples, 0.10%)</title><rect x="24" y="340" width="2" height="15" fill="rgb(243,67,28)"/><text x="27.00" y="350.50"></text></g><g><title>updatecache (linecache.py:136) (1 samples, 0.10%)</title><rect x="24" y="356" width="2" height="15" fill="rgb(227,70,13)"/><text x="27.00" y="366.50"></text></g><g><title>open (tokenize.py:449) (1 samples, 0.10%)</title><rect x="24" y="372" width="2" height="15" fill="rgb(232,215,24)"/><text x="27.00" y="382.50"></text></g><g><title>detect_encoding (tokenize.py:426) (1 samples, 0.10%)</title><rect x="24" y="388" width="2" height="15" fill="rgb(246,65,6)"/><text x="27.00" y="398.50"></text></g><g><title>find_cookie (tokenize.py:395) (1 samples, 0.10%)</title><rect x="24" y="404" width="2" height="15" fill="rgb(254,96,41)"/><text x="27.00" y="414.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:47) (2 samples, 0.21%)</title><rect x="24" y="52" width="3" height="15" fill="rgb(218,198,52)"/><text x="27.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:46) (2 samples, 0.21%)</title><rect x="24" y="68" width="3" height="15" fill="rgb(248,37,33)"/><text x="27.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:26) (1 samples, 0.10%)</title><rect x="26" y="84" width="1" height="15" fill="rgb(233,72,16)"/><text x="29.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:18) (1 samples, 0.10%)</title><rect x="26" y="100" width="1" height="15" fill="rgb(233,108,1)"/><text x="29.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.10%)</title><rect x="26" y="116" width="1" height="15" fill="rgb(229,149,29)"/><text x="29.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.10%)</title><rect x="26" y="132" width="1" height="15" fill="rgb(252,68,46)"/><text x="29.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (1 samples, 0.10%)</title><rect x="26" y="148" width="1" height="15" fill="rgb(227,156,15)"/><text x="29.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (1 samples, 0.10%)</title><rect x="26" y="164" width="1" height="15" fill="rgb(248,121,5)"/><text x="29.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (1 samples, 0.10%)</title><rect x="26" y="180" width="1" height="15" fill="rgb(221,12,36)"/><text x="29.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.10%)</title><rect x="26" y="196" width="1" height="15" fill="rgb(213,65,37)"/><text x="29.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.10%)</title><rect x="26" y="212" width="1" height="15" fill="rgb(233,223,19)"/><text x="29.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.10%)</title><rect x="26" y="228" width="1" height="15" fill="rgb(235,139,26)"/><text x="29.00" y="238.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.10%)</title><rect x="26" y="244" width="1" height="15" fill="rgb(231,194,13)"/><text x="29.00" y="254.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (1 samples, 0.10%)</title><rect x="27" y="148" width="1" height="15" fill="rgb(223,137,48)"/><text x="30.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.10%)</title><rect x="27" y="164" width="1" height="15" fill="rgb(221,21,32)"/><text x="30.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.10%)</title><rect x="27" y="180" width="1" height="15" fill="rgb(242,89,35)"/><text x="30.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.10%)</title><rect x="27" y="196" width="1" height="15" fill="rgb(231,105,23)"/><text x="30.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.10%)</title><rect x="31" y="180" width="1" height="15" fill="rgb(208,36,28)"/><text x="34.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.21%)</title><rect x="32" y="180" width="2" height="15" fill="rgb(218,209,5)"/><text x="35.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.10%)</title><rect x="33" y="196" width="1" height="15" fill="rgb(219,5,49)"/><text x="36.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.31%)</title><rect x="34" y="180" width="4" height="15" fill="rgb(241,169,11)"/><text x="37.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.31%)</title><rect x="34" y="196" width="4" height="15" fill="rgb(208,188,45)"/><text x="37.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (3 samples, 0.31%)</title><rect x="34" y="212" width="4" height="15" fill="rgb(216,28,53)"/><text x="37.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="38" y="180" width="1" height="15" fill="rgb(230,222,8)"/><text x="41.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.10%)</title><rect x="38" y="196" width="1" height="15" fill="rgb(232,123,20)"/><text x="41.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.10%)</title><rect x="39" y="180" width="1" height="15" fill="rgb(221,70,48)"/><text x="42.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.10%)</title><rect x="39" y="196" width="1" height="15" fill="rgb(251,143,39)"/><text x="42.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (2 samples, 0.21%)</title><rect x="40" y="180" width="3" height="15" fill="rgb(229,147,45)"/><text x="43.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.21%)</title><rect x="40" y="196" width="3" height="15" fill="rgb(252,129,54)"/><text x="43.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.10%)</title><rect x="42" y="212" width="1" height="15" fill="rgb(219,114,23)"/><text x="45.00" y="222.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (13 samples, 1.36%)</title><rect x="28" y="148" width="16" height="15" fill="rgb(216,116,27)"/><text x="31.00" y="158.50"></text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (13 samples, 1.36%)</title><rect x="28" y="164" width="16" height="15" fill="rgb(252,140,39)"/><text x="31.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (1 samples, 0.10%)</title><rect x="43" y="180" width="1" height="15" fill="rgb(209,77,44)"/><text x="46.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.10%)</title><rect x="49" y="228" width="1" height="15" fill="rgb(230,141,38)"/><text x="52.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 0.73%)</title><rect x="50" y="228" width="9" height="15" fill="rgb(238,151,22)"/><text x="53.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.21%)</title><rect x="57" y="244" width="2" height="15" fill="rgb(249,149,4)"/><text x="60.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (12 samples, 1.26%)</title><rect x="45" y="196" width="15" height="15" fill="rgb(252,123,22)"/><text x="48.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 1.26%)</title><rect x="45" y="212" width="15" height="15" fill="rgb(215,189,10)"/><text x="48.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.10%)</title><rect x="59" y="228" width="1" height="15" fill="rgb(233,65,12)"/><text x="62.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.10%)</title><rect x="62" y="228" width="1" height="15" fill="rgb(244,65,23)"/><text x="65.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.10%)</title><rect x="63" y="228" width="1" height="15" fill="rgb(250,37,45)"/><text x="66.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.10%)</title><rect x="64" y="228" width="1" height="15" fill="rgb(247,126,36)"/><text x="67.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (2 samples, 0.21%)</title><rect x="65" y="228" width="3" height="15" fill="rgb(247,174,41)"/><text x="68.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.10%)</title><rect x="69" y="260" width="1" height="15" fill="rgb(210,155,27)"/><text x="72.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (3 samples, 0.31%)</title><rect x="68" y="228" width="3" height="15" fill="rgb(254,93,24)"/><text x="71.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.31%)</title><rect x="68" y="244" width="3" height="15" fill="rgb(217,98,32)"/><text x="71.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.10%)</title><rect x="70" y="260" width="1" height="15" fill="rgb(231,61,44)"/><text x="73.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.31%)</title><rect x="71" y="228" width="4" height="15" fill="rgb(237,11,1)"/><text x="74.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.21%)</title><rect x="73" y="244" width="2" height="15" fill="rgb(212,24,34)"/><text x="76.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.10%)</title><rect x="74" y="260" width="1" height="15" fill="rgb(215,200,38)"/><text x="77.00" y="270.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="74" y="276" width="1" height="15" fill="rgb(245,86,8)"/><text x="77.00" y="286.50"></text></g><g><title>0x7f1c0d78cdf3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="74" y="292" width="1" height="15" fill="rgb(243,56,52)"/><text x="77.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.10%)</title><rect x="75" y="228" width="1" height="15" fill="rgb(236,172,39)"/><text x="78.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.10%)</title><rect x="75" y="244" width="1" height="15" fill="rgb(230,216,48)"/><text x="78.00" y="254.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (2 samples, 0.21%)</title><rect x="76" y="244" width="3" height="15" fill="rgb(223,17,23)"/><text x="79.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.31%)</title><rect x="76" y="228" width="4" height="15" fill="rgb(239,164,21)"/><text x="79.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:336) (1 samples, 0.10%)</title><rect x="79" y="244" width="1" height="15" fill="rgb(231,197,41)"/><text x="82.00" y="254.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (2 samples, 0.21%)</title><rect x="81" y="244" width="3" height="15" fill="rgb(230,202,16)"/><text x="84.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.10%)</title><rect x="83" y="260" width="1" height="15" fill="rgb(218,214,33)"/><text x="86.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 0.42%)</title><rect x="80" y="228" width="5" height="15" fill="rgb(235,161,49)"/><text x="83.00" y="238.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.10%)</title><rect x="84" y="244" width="1" height="15" fill="rgb(212,91,35)"/><text x="87.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.10%)</title><rect x="85" y="244" width="1" height="15" fill="rgb(243,80,7)"/><text x="88.00" y="254.50"></text></g><g><title>0x7f1c0d6c4b89 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="85" y="260" width="1" height="15" fill="rgb(228,103,39)"/><text x="88.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.10%)</title><rect x="86" y="244" width="2" height="15" fill="rgb(228,17,54)"/><text x="89.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.21%)</title><rect x="88" y="244" width="2" height="15" fill="rgb(242,5,19)"/><text x="91.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="89" y="260" width="1" height="15" fill="rgb(207,172,50)"/><text x="92.00" y="270.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.10%)</title><rect x="89" y="276" width="1" height="15" fill="rgb(206,131,2)"/><text x="92.00" y="286.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 0.52%)</title><rect x="85" y="228" width="6" height="15" fill="rgb(245,93,16)"/><text x="88.00" y="238.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.10%)</title><rect x="90" y="244" width="1" height="15" fill="rgb(222,36,48)"/><text x="93.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.10%)</title><rect x="90" y="260" width="1" height="15" fill="rgb(212,156,33)"/><text x="93.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (26 samples, 2.73%)</title><rect x="60" y="196" width="32" height="15" fill="rgb(254,59,10)"/><text x="63.00" y="206.50">pr..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (25 samples, 2.62%)</title><rect x="62" y="212" width="30" height="15" fill="rgb(233,222,16)"/><text x="65.00" y="222.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.10%)</title><rect x="91" y="228" width="1" height="15" fill="rgb(219,24,44)"/><text x="94.00" y="238.50"></text></g><g><title>0x7f1be70f1f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="92" y="228" width="2" height="15" fill="rgb(231,219,52)"/><text x="95.00" y="238.50"></text></g><g><title>0x7f1be70e1d11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="92" y="244" width="2" height="15" fill="rgb(209,144,36)"/><text x="95.00" y="254.50"></text></g><g><title>0x7f1be7100225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="94" y="260" width="1" height="15" fill="rgb(213,98,35)"/><text x="97.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3228) (1 samples, 0.10%)</title><rect x="94" y="276" width="1" height="15" fill="rgb(250,122,37)"/><text x="97.00" y="286.50"></text></g><g><title>0x7f1be70e4652 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="95" y="292" width="1" height="15" fill="rgb(229,70,49)"/><text x="98.00" y="302.50"></text></g><g><title>array_getbuffer (buffer.c:763) (1 samples, 0.10%)</title><rect x="96" y="324" width="1" height="15" fill="rgb(235,111,34)"/><text x="99.00" y="334.50"></text></g><g><title>0x7f1be70e4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="95" y="276" width="4" height="15" fill="rgb(228,31,13)"/><text x="98.00" y="286.50"></text></g><g><title>0x7f1be70e4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="96" y="292" width="3" height="15" fill="rgb(253,138,11)"/><text x="99.00" y="302.50"></text></g><g><title>0x7f1be70da2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="96" y="308" width="3" height="15" fill="rgb(230,50,45)"/><text x="99.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.10%)</title><rect x="97" y="324" width="2" height="15" fill="rgb(213,62,37)"/><text x="100.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.10%)</title><rect x="97" y="340" width="2" height="15" fill="rgb(227,26,38)"/><text x="100.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.10%)</title><rect x="97" y="356" width="2" height="15" fill="rgb(210,105,36)"/><text x="100.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c:406) (1 samples, 0.10%)</title><rect x="97" y="372" width="2" height="15" fill="rgb(216,54,0)"/><text x="100.00" y="382.50"></text></g><g><title>0x7f1be71002df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.42%)</title><rect x="95" y="260" width="5" height="15" fill="rgb(211,139,47)"/><text x="98.00" y="270.50"></text></g><g><title>0x7f1be70e4e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="99" y="276" width="1" height="15" fill="rgb(213,204,7)"/><text x="102.00" y="286.50"></text></g><g><title>0x7f1be70d82bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="99" y="292" width="1" height="15" fill="rgb(220,3,34)"/><text x="102.00" y="302.50"></text></g><g><title>0x7f1be70d7dec (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="99" y="308" width="1" height="15" fill="rgb(235,99,41)"/><text x="102.00" y="318.50"></text></g><g><title>0x7f1be71004b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="100" y="260" width="1" height="15" fill="rgb(246,124,10)"/><text x="103.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 0.31%)</title><rect x="101" y="276" width="4" height="15" fill="rgb(232,145,16)"/><text x="104.00" y="286.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:252) (1 samples, 0.10%)</title><rect x="105" y="356" width="1" height="15" fill="rgb(224,77,9)"/><text x="108.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="105" y="372" width="1" height="15" fill="rgb(234,179,54)"/><text x="108.00" y="382.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.21%)</title><rect x="105" y="340" width="2" height="15" fill="rgb(231,82,14)"/><text x="108.00" y="350.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.10%)</title><rect x="106" y="356" width="1" height="15" fill="rgb(248,59,19)"/><text x="109.00" y="366.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="106" y="372" width="1" height="15" fill="rgb(238,157,1)"/><text x="109.00" y="382.50"></text></g><g><title>0x7f1c0d6cf103 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="106" y="388" width="1" height="15" fill="rgb(247,84,54)"/><text x="109.00" y="398.50"></text></g><g><title>0x7f1be7100592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.63%)</title><rect x="101" y="260" width="8" height="15" fill="rgb(235,167,15)"/><text x="104.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (3 samples, 0.31%)</title><rect x="105" y="276" width="4" height="15" fill="rgb(239,118,24)"/><text x="108.00" y="286.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (3 samples, 0.31%)</title><rect x="105" y="292" width="4" height="15" fill="rgb(226,95,13)"/><text x="108.00" y="302.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (3 samples, 0.31%)</title><rect x="105" y="308" width="4" height="15" fill="rgb(238,135,2)"/><text x="108.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (3 samples, 0.31%)</title><rect x="105" y="324" width="4" height="15" fill="rgb(207,127,3)"/><text x="108.00" y="334.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:142) (1 samples, 0.10%)</title><rect x="107" y="340" width="2" height="15" fill="rgb(229,177,25)"/><text x="110.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="107" y="356" width="2" height="15" fill="rgb(232,42,17)"/><text x="110.00" y="366.50"></text></g><g><title>0x7f1be710069b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="109" y="260" width="1" height="15" fill="rgb(228,222,36)"/><text x="112.00" y="270.50"></text></g><g><title>0x7f1be71006a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="110" y="260" width="1" height="15" fill="rgb(232,194,19)"/><text x="113.00" y="270.50"></text></g><g><title>0x7f1be71006aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="111" y="260" width="1" height="15" fill="rgb(250,118,5)"/><text x="114.00" y="270.50"></text></g><g><title>0x7f1be71006b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="112" y="260" width="3" height="15" fill="rgb(221,172,5)"/><text x="115.00" y="270.50"></text></g><g><title>0x7f1be71006e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="115" y="260" width="1" height="15" fill="rgb(211,174,22)"/><text x="118.00" y="270.50"></text></g><g><title>0x7f1be71007b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="116" y="260" width="2" height="15" fill="rgb(244,95,41)"/><text x="119.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:522) (1 samples, 0.10%)</title><rect x="118" y="324" width="2" height="15" fill="rgb(229,156,0)"/><text x="121.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.21%)</title><rect x="118" y="308" width="3" height="15" fill="rgb(213,37,0)"/><text x="121.00" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.10%)</title><rect x="120" y="324" width="1" height="15" fill="rgb(241,181,10)"/><text x="123.00" y="334.50"></text></g><g><title>_buffer_format_string (buffer.c:419) (1 samples, 0.10%)</title><rect x="120" y="340" width="1" height="15" fill="rgb(248,107,30)"/><text x="123.00" y="350.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.10%)</title><rect x="120" y="356" width="1" height="15" fill="rgb(239,77,26)"/><text x="123.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="120" y="372" width="1" height="15" fill="rgb(234,98,37)"/><text x="123.00" y="382.50"></text></g><g><title>0x7f1be70f1fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 2.41%)</title><rect x="94" y="228" width="28" height="15" fill="rgb(231,22,11)"/><text x="97.00" y="238.50">0..</text></g><g><title>0x7f1be7101405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 2.41%)</title><rect x="94" y="244" width="28" height="15" fill="rgb(244,225,47)"/><text x="97.00" y="254.50">0..</text></g><g><title>0x7f1be7100c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="118" y="260" width="4" height="15" fill="rgb(244,215,31)"/><text x="121.00" y="270.50"></text></g><g><title>0x7f1be70d8529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="118" y="276" width="4" height="15" fill="rgb(216,135,27)"/><text x="121.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.31%)</title><rect x="118" y="292" width="4" height="15" fill="rgb(212,13,16)"/><text x="121.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:660) (1 samples, 0.10%)</title><rect x="121" y="308" width="1" height="15" fill="rgb(236,163,52)"/><text x="124.00" y="318.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.10%)</title><rect x="122" y="244" width="1" height="15" fill="rgb(234,185,28)"/><text x="125.00" y="254.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="122" y="260" width="1" height="15" fill="rgb(228,13,9)"/><text x="125.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.10%)</title><rect x="123" y="260" width="2" height="15" fill="rgb(243,144,19)"/><text x="126.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (1 samples, 0.10%)</title><rect x="123" y="276" width="2" height="15" fill="rgb(226,52,39)"/><text x="126.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.10%)</title><rect x="125" y="260" width="1" height="15" fill="rgb(249,182,37)"/><text x="128.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.10%)</title><rect x="125" y="276" width="1" height="15" fill="rgb(232,159,31)"/><text x="128.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.10%)</title><rect x="125" y="292" width="1" height="15" fill="rgb(207,115,25)"/><text x="128.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.10%)</title><rect x="125" y="308" width="1" height="15" fill="rgb(212,166,43)"/><text x="128.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2148) (1 samples, 0.10%)</title><rect x="125" y="324" width="1" height="15" fill="rgb(227,209,34)"/><text x="128.00" y="334.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1477) (1 samples, 0.10%)</title><rect x="125" y="340" width="1" height="15" fill="rgb(250,187,22)"/><text x="128.00" y="350.50"></text></g><g><title>0x7f1be70f205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.42%)</title><rect x="122" y="228" width="5" height="15" fill="rgb(205,191,51)"/><text x="125.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.31%)</title><rect x="123" y="244" width="4" height="15" fill="rgb(244,50,4)"/><text x="126.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:52) (1 samples, 0.10%)</title><rect x="126" y="260" width="1" height="15" fill="rgb(251,106,9)"/><text x="129.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="126" y="276" width="1" height="15" fill="rgb(236,84,51)"/><text x="129.00" y="286.50"></text></g><g><title>0x7f1be70f213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="127" y="228" width="1" height="15" fill="rgb(251,209,38)"/><text x="130.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="127" y="244" width="1" height="15" fill="rgb(214,5,29)"/><text x="130.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.10%)</title><rect x="127" y="260" width="1" height="15" fill="rgb(215,169,50)"/><text x="130.00" y="270.50"></text></g><g><title>array_reshape (methods.c:186) (1 samples, 0.10%)</title><rect x="128" y="244" width="2" height="15" fill="rgb(218,172,13)"/><text x="131.00" y="254.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:45) (1 samples, 0.10%)</title><rect x="128" y="260" width="2" height="15" fill="rgb(212,170,5)"/><text x="131.00" y="270.50"></text></g><g><title>0x7f1be70f2328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.21%)</title><rect x="128" y="228" width="3" height="15" fill="rgb(233,90,48)"/><text x="131.00" y="238.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.10%)</title><rect x="130" y="244" width="1" height="15" fill="rgb(232,162,31)"/><text x="133.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.10%)</title><rect x="130" y="260" width="1" height="15" fill="rgb(238,166,20)"/><text x="133.00" y="270.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.10%)</title><rect x="130" y="276" width="1" height="15" fill="rgb(235,198,34)"/><text x="133.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (32 samples, 3.36%)</title><rect x="92" y="196" width="40" height="15" fill="rgb(233,127,45)"/><text x="95.00" y="206.50">pre..</text></g><g><title>0x7f1be70f2d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (32 samples, 3.36%)</title><rect x="92" y="212" width="40" height="15" fill="rgb(241,140,40)"/><text x="95.00" y="222.50">0x7..</text></g><g><title>0x7f1be70f25f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="131" y="228" width="1" height="15" fill="rgb(209,224,51)"/><text x="134.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.10%)</title><rect x="132" y="196" width="1" height="15" fill="rgb(240,89,33)"/><text x="135.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.10%)</title><rect x="132" y="212" width="1" height="15" fill="rgb(247,106,50)"/><text x="135.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (72 samples, 7.56%)</title><rect x="45" y="180" width="90" height="15" fill="rgb(207,201,32)"/><text x="48.00" y="190.50">&lt;listcomp&gt;..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (1 samples, 0.10%)</title><rect x="133" y="196" width="2" height="15" fill="rgb(250,111,11)"/><text x="136.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.10%)</title><rect x="133" y="212" width="2" height="15" fill="rgb(254,88,1)"/><text x="136.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c:955) (1 samples, 0.10%)</title><rect x="133" y="228" width="2" height="15" fill="rgb(220,176,13)"/><text x="136.00" y="238.50"></text></g><g><title>0x7f1c0c8d0ae0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="133" y="244" width="2" height="15" fill="rgb(237,189,35)"/><text x="136.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="135" y="212" width="1" height="15" fill="rgb(219,185,10)"/><text x="138.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="135" y="228" width="1" height="15" fill="rgb(215,60,6)"/><text x="138.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.10%)</title><rect x="135" y="244" width="1" height="15" fill="rgb(210,177,5)"/><text x="138.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:143) (1 samples, 0.10%)</title><rect x="135" y="260" width="1" height="15" fill="rgb(250,15,12)"/><text x="138.00" y="270.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (75 samples, 7.87%)</title><rect x="44" y="164" width="93" height="15" fill="rgb(208,58,9)"/><text x="47.00" y="174.50">_get_median..</text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (2 samples, 0.21%)</title><rect x="135" y="180" width="2" height="15" fill="rgb(218,73,26)"/><text x="138.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.21%)</title><rect x="135" y="196" width="2" height="15" fill="rgb(212,71,26)"/><text x="138.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.10%)</title><rect x="136" y="212" width="1" height="15" fill="rgb(232,207,12)"/><text x="139.00" y="222.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.10%)</title><rect x="136" y="228" width="1" height="15" fill="rgb(227,37,20)"/><text x="139.00" y="238.50"></text></g><g><title>setArrayFromSequence (ctors.c:546) (1 samples, 0.10%)</title><rect x="136" y="244" width="1" height="15" fill="rgb(218,96,53)"/><text x="139.00" y="254.50"></text></g><g><title>setArrayFromSequence (ctors.c:467) (1 samples, 0.10%)</title><rect x="136" y="260" width="1" height="15" fill="rgb(210,82,32)"/><text x="139.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.10%)</title><rect x="136" y="276" width="1" height="15" fill="rgb(216,144,40)"/><text x="139.00" y="286.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (1 samples, 0.10%)</title><rect x="136" y="292" width="1" height="15" fill="rgb(251,3,2)"/><text x="139.00" y="302.50"></text></g><g><title>0x7f1c0d6ced94 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="136" y="308" width="1" height="15" fill="rgb(246,134,17)"/><text x="139.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1022) (1 samples, 0.10%)</title><rect x="137" y="276" width="1" height="15" fill="rgb(217,203,51)"/><text x="140.00" y="286.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:315) (1 samples, 0.10%)</title><rect x="138" y="308" width="2" height="15" fill="rgb(227,178,7)"/><text x="141.00" y="318.50"></text></g><g><title>_new_argsortlike (item_selection.c:1048) (2 samples, 0.21%)</title><rect x="138" y="276" width="3" height="15" fill="rgb(251,29,1)"/><text x="141.00" y="286.50"></text></g><g><title>DOUBLE_copyswapn (arraytypes.c.src:1915) (2 samples, 0.21%)</title><rect x="138" y="292" width="3" height="15" fill="rgb(211,130,43)"/><text x="141.00" y="302.50"></text></g><g><title>_unaligned_strided_byte_copy (ctors.c:331) (1 samples, 0.10%)</title><rect x="140" y="308" width="1" height="15" fill="rgb(206,123,22)"/><text x="143.00" y="318.50"></text></g><g><title>npy_get_msb (npy_sort.h.src:15) (1 samples, 0.10%)</title><rect x="142" y="308" width="1" height="15" fill="rgb(224,1,38)"/><text x="145.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:175) (2 samples, 0.21%)</title><rect x="142" y="292" width="2" height="15" fill="rgb(242,29,29)"/><text x="145.00" y="302.50"></text></g><g><title>npy_get_msb (npy_sort.h.src:16) (1 samples, 0.10%)</title><rect x="143" y="308" width="1" height="15" fill="rgb(210,158,13)"/><text x="146.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:222) (4 samples, 0.42%)</title><rect x="144" y="292" width="5" height="15" fill="rgb(238,196,26)"/><text x="147.00" y="302.50"></text></g><g><title>DOUBLE_LT (npysort_common.h:130) (4 samples, 0.42%)</title><rect x="144" y="308" width="5" height="15" fill="rgb(251,116,39)"/><text x="147.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src:223) (1 samples, 0.10%)</title><rect x="149" y="292" width="2" height="15" fill="rgb(253,171,50)"/><text x="152.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (10 samples, 1.05%)</title><rect x="141" y="276" width="12" height="15" fill="rgb(220,66,41)"/><text x="144.00" y="286.50"></text></g><g><title>aquicksort_double (quicksort.c.src:237) (2 samples, 0.21%)</title><rect x="151" y="292" width="2" height="15" fill="rgb(217,75,51)"/><text x="154.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c:1100) (1 samples, 0.10%)</title><rect x="153" y="276" width="1" height="15" fill="rgb(228,155,0)"/><text x="156.00" y="286.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (3 samples, 0.31%)</title><rect x="154" y="276" width="4" height="15" fill="rgb(224,169,45)"/><text x="157.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (18 samples, 1.89%)</title><rect x="137" y="164" width="22" height="15" fill="rgb(247,166,54)"/><text x="140.00" y="174.50">_..</text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (18 samples, 1.89%)</title><rect x="137" y="180" width="22" height="15" fill="rgb(205,221,19)"/><text x="140.00" y="190.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (18 samples, 1.89%)</title><rect x="137" y="196" width="22" height="15" fill="rgb(240,82,47)"/><text x="140.00" y="206.50">a..</text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (18 samples, 1.89%)</title><rect x="137" y="212" width="22" height="15" fill="rgb(250,63,16)"/><text x="140.00" y="222.50">a..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (18 samples, 1.89%)</title><rect x="137" y="228" width="22" height="15" fill="rgb(253,121,24)"/><text x="140.00" y="238.50">_..</text></g><g><title>array_argsort (methods.c:1395) (18 samples, 1.89%)</title><rect x="137" y="244" width="22" height="15" fill="rgb(241,16,51)"/><text x="140.00" y="254.50">a..</text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (18 samples, 1.89%)</title><rect x="137" y="260" width="22" height="15" fill="rgb(218,203,44)"/><text x="140.00" y="270.50">P..</text></g><g><title>_new_argsortlike (item_selection.c:997) (1 samples, 0.10%)</title><rect x="158" y="276" width="1" height="15" fill="rgb(242,180,9)"/><text x="161.00" y="286.50"></text></g><g><title>PyArray_IterAllButAxis (iterators.c:288) (1 samples, 0.10%)</title><rect x="158" y="292" width="1" height="15" fill="rgb(247,109,12)"/><text x="161.00" y="302.50"></text></g><g><title>PyArray_IterNew (iterators.c:183) (1 samples, 0.10%)</title><rect x="158" y="308" width="1" height="15" fill="rgb(235,181,4)"/><text x="161.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="158" y="324" width="1" height="15" fill="rgb(253,165,23)"/><text x="161.00" y="334.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1373) (1 samples, 0.10%)</title><rect x="159" y="196" width="2" height="15" fill="rgb(217,155,24)"/><text x="162.00" y="206.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1425) (1 samples, 0.10%)</title><rect x="161" y="196" width="1" height="15" fill="rgb(242,206,0)"/><text x="164.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.10%)</title><rect x="161" y="212" width="1" height="15" fill="rgb(207,5,48)"/><text x="164.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1521) (4 samples, 0.42%)</title><rect x="159" y="180" width="5" height="15" fill="rgb(250,69,0)"/><text x="162.00" y="190.50"></text></g><g><title>mapiter_trivial_get (lowlevel_strided_loops.c.src:1439) (2 samples, 0.21%)</title><rect x="162" y="196" width="2" height="15" fill="rgb(254,118,54)"/><text x="165.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="164" y="212" width="2" height="15" fill="rgb(230,74,33)"/><text x="167.00" y="222.50"></text></g><g><title>array_alloc (arrayobject.c:1765) (1 samples, 0.10%)</title><rect x="164" y="228" width="2" height="15" fill="rgb(208,137,10)"/><text x="167.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1634) (2 samples, 0.21%)</title><rect x="164" y="180" width="3" height="15" fill="rgb(249,112,25)"/><text x="167.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.21%)</title><rect x="164" y="196" width="3" height="15" fill="rgb(218,182,3)"/><text x="167.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="166" y="212" width="1" height="15" fill="rgb(234,160,48)"/><text x="169.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="166" y="228" width="1" height="15" fill="rgb(251,163,4)"/><text x="169.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="166" y="244" width="1" height="15" fill="rgb(254,128,2)"/><text x="169.00" y="254.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="166" y="260" width="1" height="15" fill="rgb(232,38,48)"/><text x="169.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="166" y="276" width="1" height="15" fill="rgb(221,53,8)"/><text x="169.00" y="286.50"></text></g><g><title>0x7f1c0d6afde9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="166" y="292" width="1" height="15" fill="rgb(205,9,28)"/><text x="169.00" y="302.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:4) (2 samples, 0.21%)</title><rect x="167" y="196" width="2" height="15" fill="rgb(249,192,44)"/><text x="170.00" y="206.50"></text></g><g><title>_get_keywords (number.c:208) (1 samples, 0.10%)</title><rect x="172" y="308" width="1" height="15" fill="rgb(226,114,24)"/><text x="175.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:259) (2 samples, 0.21%)</title><rect x="172" y="292" width="2" height="15" fill="rgb(231,222,38)"/><text x="175.00" y="302.50"></text></g><g><title>_get_keywords (number.c:215) (1 samples, 0.10%)</title><rect x="173" y="308" width="1" height="15" fill="rgb(245,47,50)"/><text x="176.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4491) (1 samples, 0.10%)</title><rect x="174" y="324" width="1" height="15" fill="rgb(232,206,31)"/><text x="177.00" y="334.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (8 samples, 0.84%)</title><rect x="167" y="180" width="10" height="15" fill="rgb(205,3,13)"/><text x="170.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (6 samples, 0.63%)</title><rect x="169" y="196" width="8" height="15" fill="rgb(222,155,25)"/><text x="172.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 0.52%)</title><rect x="170" y="212" width="7" height="15" fill="rgb(234,197,17)"/><text x="173.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (5 samples, 0.52%)</title><rect x="170" y="228" width="7" height="15" fill="rgb(226,155,51)"/><text x="173.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 0.42%)</title><rect x="172" y="244" width="5" height="15" fill="rgb(247,72,14)"/><text x="175.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 0.42%)</title><rect x="172" y="260" width="5" height="15" fill="rgb(237,163,23)"/><text x="175.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 0.42%)</title><rect x="172" y="276" width="5" height="15" fill="rgb(206,104,9)"/><text x="175.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (2 samples, 0.21%)</title><rect x="174" y="292" width="3" height="15" fill="rgb(247,23,11)"/><text x="177.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (2 samples, 0.21%)</title><rect x="174" y="308" width="3" height="15" fill="rgb(238,131,48)"/><text x="177.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.10%)</title><rect x="175" y="324" width="2" height="15" fill="rgb(207,206,26)"/><text x="178.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (1 samples, 0.10%)</title><rect x="175" y="340" width="2" height="15" fill="rgb(253,0,16)"/><text x="178.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1756) (1 samples, 0.10%)</title><rect x="175" y="356" width="2" height="15" fill="rgb(215,131,54)"/><text x="178.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="180" y="276" width="2" height="15" fill="rgb(234,24,5)"/><text x="183.00" y="286.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.10%)</title><rect x="180" y="292" width="2" height="15" fill="rgb(210,178,16)"/><text x="183.00" y="302.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.10%)</title><rect x="180" y="308" width="2" height="15" fill="rgb(231,183,40)"/><text x="183.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="182" y="308" width="1" height="15" fill="rgb(251,199,45)"/><text x="185.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="182" y="324" width="1" height="15" fill="rgb(233,218,40)"/><text x="185.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="182" y="340" width="1" height="15" fill="rgb(218,125,18)"/><text x="185.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="182" y="356" width="1" height="15" fill="rgb(229,35,25)"/><text x="185.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="182" y="372" width="1" height="15" fill="rgb(239,77,46)"/><text x="185.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="182" y="388" width="1" height="15" fill="rgb(227,140,45)"/><text x="185.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="182" y="404" width="1" height="15" fill="rgb(228,38,15)"/><text x="185.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="182" y="420" width="1" height="15" fill="rgb(242,151,29)"/><text x="185.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="182" y="436" width="1" height="15" fill="rgb(228,214,8)"/><text x="185.00" y="446.50"></text></g><g><title>0x7f1c0d6b09c3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="182" y="452" width="1" height="15" fill="rgb(248,80,24)"/><text x="185.00" y="462.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="183" y="324" width="1" height="15" fill="rgb(254,226,39)"/><text x="186.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.10%)</title><rect x="183" y="340" width="1" height="15" fill="rgb(243,99,1)"/><text x="186.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.10%)</title><rect x="184" y="324" width="1" height="15" fill="rgb(235,173,48)"/><text x="187.00" y="334.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3241) (1 samples, 0.10%)</title><rect x="184" y="340" width="1" height="15" fill="rgb(215,5,29)"/><text x="187.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (3 samples, 0.31%)</title><rect x="183" y="308" width="4" height="15" fill="rgb(225,58,19)"/><text x="186.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="185" y="324" width="2" height="15" fill="rgb(210,92,47)"/><text x="188.00" y="334.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2165) (1 samples, 0.10%)</title><rect x="185" y="340" width="2" height="15" fill="rgb(233,32,52)"/><text x="188.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1741) (1 samples, 0.10%)</title><rect x="187" y="340" width="1" height="15" fill="rgb(216,40,28)"/><text x="190.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="188" y="340" width="1" height="15" fill="rgb(219,104,44)"/><text x="191.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1662) (1 samples, 0.10%)</title><rect x="190" y="356" width="2" height="15" fill="rgb(210,124,31)"/><text x="193.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src:1747) (3 samples, 0.31%)</title><rect x="189" y="340" width="4" height="15" fill="rgb(243,148,26)"/><text x="192.00" y="350.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src:1667) (1 samples, 0.10%)</title><rect x="192" y="356" width="1" height="15" fill="rgb(218,74,2)"/><text x="195.00" y="366.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (7 samples, 0.73%)</title><rect x="187" y="308" width="8" height="15" fill="rgb(251,69,12)"/><text x="190.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (7 samples, 0.73%)</title><rect x="187" y="324" width="8" height="15" fill="rgb(220,43,17)"/><text x="190.00" y="334.50"></text></g><g><title>npyiter_buffered_reduce_iternext_iters2 (nditer_templ.c.src:229) (2 samples, 0.21%)</title><rect x="193" y="340" width="2" height="15" fill="rgb(232,211,53)"/><text x="196.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (16 samples, 1.68%)</title><rect x="177" y="180" width="19" height="15" fill="rgb(212,185,13)"/><text x="180.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (14 samples, 1.47%)</title><rect x="179" y="196" width="17" height="15" fill="rgb(226,204,19)"/><text x="182.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (14 samples, 1.47%)</title><rect x="179" y="212" width="17" height="15" fill="rgb(252,83,49)"/><text x="182.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (14 samples, 1.47%)</title><rect x="179" y="228" width="17" height="15" fill="rgb(230,90,6)"/><text x="182.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (13 samples, 1.36%)</title><rect x="180" y="244" width="16" height="15" fill="rgb(245,177,33)"/><text x="183.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (13 samples, 1.36%)</title><rect x="180" y="260" width="16" height="15" fill="rgb(224,33,8)"/><text x="183.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (12 samples, 1.26%)</title><rect x="182" y="276" width="14" height="15" fill="rgb(245,149,31)"/><text x="185.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (12 samples, 1.26%)</title><rect x="182" y="292" width="14" height="15" fill="rgb(211,193,40)"/><text x="185.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.10%)</title><rect x="195" y="308" width="1" height="15" fill="rgb(206,65,17)"/><text x="198.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="195" y="324" width="1" height="15" fill="rgb(212,194,25)"/><text x="198.00" y="334.50"></text></g><g><title>0x7f1c0d6ae929 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="195" y="340" width="1" height="15" fill="rgb(226,66,8)"/><text x="198.00" y="350.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3899) (1 samples, 0.10%)</title><rect x="196" y="228" width="2" height="15" fill="rgb(238,12,10)"/><text x="199.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3900) (1 samples, 0.10%)</title><rect x="198" y="228" width="1" height="15" fill="rgb(215,21,46)"/><text x="201.00" y="238.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (3 samples, 0.31%)</title><rect x="196" y="180" width="4" height="15" fill="rgb(218,182,9)"/><text x="199.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.31%)</title><rect x="196" y="196" width="4" height="15" fill="rgb(236,114,29)"/><text x="199.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (3 samples, 0.31%)</title><rect x="196" y="212" width="4" height="15" fill="rgb(233,222,50)"/><text x="199.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3909) (1 samples, 0.10%)</title><rect x="199" y="228" width="1" height="15" fill="rgb(212,199,17)"/><text x="202.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:5) (1 samples, 0.10%)</title><rect x="200" y="196" width="1" height="15" fill="rgb(229,123,41)"/><text x="203.00" y="206.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.10%)</title><rect x="201" y="276" width="2" height="15" fill="rgb(214,178,42)"/><text x="204.00" y="286.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:575) (1 samples, 0.10%)</title><rect x="203" y="308" width="1" height="15" fill="rgb(228,200,28)"/><text x="206.00" y="318.50"></text></g><g><title>reduce_loop (ufunc_object.c:3569) (1 samples, 0.10%)</title><rect x="203" y="324" width="1" height="15" fill="rgb(248,56,21)"/><text x="206.00" y="334.50"></text></g><g><title>BOOL_logical_and (loops.c.src:584) (1 samples, 0.10%)</title><rect x="203" y="340" width="1" height="15" fill="rgb(233,229,23)"/><text x="206.00" y="350.50"></text></g><g><title>run_reduce_simd_logical_and_BOOL (simd.inc.src:376) (1 samples, 0.10%)</title><rect x="203" y="356" width="1" height="15" fill="rgb(210,72,46)"/><text x="206.00" y="366.50"></text></g><g><title>sse2_reduce_logical_and_BOOL (simd.inc.src:1710) (1 samples, 0.10%)</title><rect x="203" y="372" width="1" height="15" fill="rgb(251,39,38)"/><text x="206.00" y="382.50"></text></g><g><title>_mm_cmpeq_epi8 (emmintrin.h:1256) (1 samples, 0.10%)</title><rect x="203" y="388" width="1" height="15" fill="rgb(218,110,5)"/><text x="206.00" y="398.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (3 samples, 0.31%)</title><rect x="201" y="196" width="4" height="15" fill="rgb(217,212,42)"/><text x="204.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.31%)</title><rect x="201" y="212" width="4" height="15" fill="rgb(230,189,6)"/><text x="204.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (3 samples, 0.31%)</title><rect x="201" y="228" width="4" height="15" fill="rgb(218,96,47)"/><text x="204.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.31%)</title><rect x="201" y="244" width="4" height="15" fill="rgb(205,107,8)"/><text x="204.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.31%)</title><rect x="201" y="260" width="4" height="15" fill="rgb(233,81,2)"/><text x="204.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.21%)</title><rect x="203" y="276" width="2" height="15" fill="rgb(223,127,30)"/><text x="206.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.21%)</title><rect x="203" y="292" width="2" height="15" fill="rgb(220,81,14)"/><text x="206.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:589) (1 samples, 0.10%)</title><rect x="204" y="308" width="1" height="15" fill="rgb(244,152,48)"/><text x="207.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="204" y="324" width="1" height="15" fill="rgb(233,159,46)"/><text x="207.00" y="334.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:5) (1 samples, 0.10%)</title><rect x="205" y="196" width="1" height="15" fill="rgb(223,133,53)"/><text x="208.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.10%)</title><rect x="206" y="260" width="2" height="15" fill="rgb(232,212,45)"/><text x="209.00" y="270.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:69) (1 samples, 0.10%)</title><rect x="206" y="276" width="2" height="15" fill="rgb(215,103,54)"/><text x="209.00" y="286.50"></text></g><g><title>isclose (numpy/core/numeric.py:2266) (2 samples, 0.21%)</title><rect x="206" y="228" width="3" height="15" fill="rgb(254,157,10)"/><text x="209.00" y="238.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="206" y="244" width="3" height="15" fill="rgb(252,67,34)"/><text x="209.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="208" y="260" width="1" height="15" fill="rgb(214,53,10)"/><text x="211.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c:3259) (1 samples, 0.10%)</title><rect x="208" y="276" width="1" height="15" fill="rgb(205,29,8)"/><text x="211.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.10%)</title><rect x="208" y="292" width="1" height="15" fill="rgb(243,33,51)"/><text x="211.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.10%)</title><rect x="208" y="308" width="1" height="15" fill="rgb(220,96,9)"/><text x="211.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (1 samples, 0.10%)</title><rect x="208" y="324" width="1" height="15" fill="rgb(243,182,37)"/><text x="211.00" y="334.50"></text></g><g><title>isclose (numpy/core/numeric.py:2269) (1 samples, 0.10%)</title><rect x="209" y="228" width="1" height="15" fill="rgb(247,125,35)"/><text x="212.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="209" y="244" width="1" height="15" fill="rgb(240,98,50)"/><text x="212.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3271) (1 samples, 0.10%)</title><rect x="209" y="260" width="1" height="15" fill="rgb(247,62,35)"/><text x="212.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.10%)</title><rect x="210" y="292" width="1" height="15" fill="rgb(254,101,6)"/><text x="213.00" y="302.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.10%)</title><rect x="210" y="308" width="1" height="15" fill="rgb(245,111,16)"/><text x="213.00" y="318.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.10%)</title><rect x="211" y="356" width="2" height="15" fill="rgb(232,171,51)"/><text x="214.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.10%)</title><rect x="211" y="372" width="2" height="15" fill="rgb(239,129,36)"/><text x="214.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.10%)</title><rect x="211" y="388" width="2" height="15" fill="rgb(237,49,42)"/><text x="214.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="211" y="404" width="2" height="15" fill="rgb(232,176,8)"/><text x="214.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.10%)</title><rect x="211" y="420" width="2" height="15" fill="rgb(231,142,9)"/><text x="214.00" y="430.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.10%)</title><rect x="211" y="436" width="2" height="15" fill="rgb(225,192,45)"/><text x="214.00" y="446.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.10%)</title><rect x="213" y="356" width="1" height="15" fill="rgb(210,158,47)"/><text x="216.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.10%)</title><rect x="213" y="372" width="1" height="15" fill="rgb(205,226,37)"/><text x="216.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="213" y="388" width="1" height="15" fill="rgb(235,150,51)"/><text x="216.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:53) (1 samples, 0.10%)</title><rect x="213" y="404" width="1" height="15" fill="rgb(244,86,51)"/><text x="216.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.10%)</title><rect x="213" y="420" width="1" height="15" fill="rgb(245,160,36)"/><text x="216.00" y="430.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (4 samples, 0.42%)</title><rect x="210" y="228" width="5" height="15" fill="rgb(241,219,7)"/><text x="213.00" y="238.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (4 samples, 0.42%)</title><rect x="210" y="244" width="5" height="15" fill="rgb(251,170,12)"/><text x="213.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 0.42%)</title><rect x="210" y="260" width="5" height="15" fill="rgb(228,56,21)"/><text x="213.00" y="270.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (4 samples, 0.42%)</title><rect x="210" y="276" width="5" height="15" fill="rgb(236,15,51)"/><text x="213.00" y="286.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.31%)</title><rect x="211" y="292" width="4" height="15" fill="rgb(234,11,33)"/><text x="214.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.31%)</title><rect x="211" y="308" width="4" height="15" fill="rgb(253,100,35)"/><text x="214.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.31%)</title><rect x="211" y="324" width="4" height="15" fill="rgb(253,207,32)"/><text x="214.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (3 samples, 0.31%)</title><rect x="211" y="340" width="4" height="15" fill="rgb(232,214,26)"/><text x="214.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.10%)</title><rect x="214" y="356" width="1" height="15" fill="rgb(234,33,54)"/><text x="217.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:477) (1 samples, 0.10%)</title><rect x="214" y="372" width="1" height="15" fill="rgb(236,22,43)"/><text x="217.00" y="382.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2175) (1 samples, 0.10%)</title><rect x="214" y="388" width="1" height="15" fill="rgb(239,3,52)"/><text x="217.00" y="398.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (1 samples, 0.10%)</title><rect x="215" y="260" width="1" height="15" fill="rgb(213,128,4)"/><text x="218.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.10%)</title><rect x="215" y="276" width="1" height="15" fill="rgb(244,165,25)"/><text x="218.00" y="286.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.10%)</title><rect x="216" y="260" width="2" height="15" fill="rgb(228,192,10)"/><text x="219.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.10%)</title><rect x="216" y="276" width="2" height="15" fill="rgb(213,44,10)"/><text x="219.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.10%)</title><rect x="216" y="292" width="2" height="15" fill="rgb(240,0,10)"/><text x="219.00" y="302.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:272) (1 samples, 0.10%)</title><rect x="216" y="308" width="2" height="15" fill="rgb(247,89,6)"/><text x="219.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1699) (1 samples, 0.10%)</title><rect x="218" y="292" width="1" height="15" fill="rgb(252,53,44)"/><text x="221.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="218" y="308" width="1" height="15" fill="rgb(222,69,32)"/><text x="221.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.10%)</title><rect x="218" y="324" width="1" height="15" fill="rgb(248,130,28)"/><text x="221.00" y="334.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.10%)</title><rect x="218" y="340" width="1" height="15" fill="rgb(243,153,1)"/><text x="221.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (49 samples, 5.14%)</title><rect x="159" y="164" width="61" height="15" fill="rgb(213,194,18)"/><text x="162.00" y="174.50">_get_m..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (16 samples, 1.68%)</title><rect x="200" y="180" width="20" height="15" fill="rgb(236,198,28)"/><text x="203.00" y="190.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (11 samples, 1.15%)</title><rect x="206" y="196" width="14" height="15" fill="rgb(239,227,8)"/><text x="209.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (11 samples, 1.15%)</title><rect x="206" y="212" width="14" height="15" fill="rgb(229,158,29)"/><text x="209.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2272) (4 samples, 0.42%)</title><rect x="215" y="228" width="5" height="15" fill="rgb(205,178,27)"/><text x="218.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (4 samples, 0.42%)</title><rect x="215" y="244" width="5" height="15" fill="rgb(225,115,23)"/><text x="218.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="218" y="260" width="2" height="15" fill="rgb(218,203,45)"/><text x="221.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="218" y="276" width="2" height="15" fill="rgb(208,110,40)"/><text x="221.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.10%)</title><rect x="219" y="292" width="1" height="15" fill="rgb(228,228,18)"/><text x="222.00" y="302.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1385) (1 samples, 0.10%)</title><rect x="219" y="308" width="1" height="15" fill="rgb(223,95,42)"/><text x="222.00" y="318.50"></text></g><g><title>DOUBLE_less_equal (loops.c.src:1773) (1 samples, 0.10%)</title><rect x="219" y="324" width="1" height="15" fill="rgb(210,146,2)"/><text x="222.00" y="334.50"></text></g><g><title>run_binary_simd_less_equal_DOUBLE (simd.inc.src:298) (1 samples, 0.10%)</title><rect x="219" y="340" width="1" height="15" fill="rgb(206,37,28)"/><text x="222.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.10%)</title><rect x="220" y="212" width="1" height="15" fill="rgb(216,193,47)"/><text x="223.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.10%)</title><rect x="220" y="228" width="1" height="15" fill="rgb(227,156,54)"/><text x="223.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.10%)</title><rect x="220" y="244" width="1" height="15" fill="rgb(231,101,53)"/><text x="223.00" y="254.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.10%)</title><rect x="220" y="260" width="1" height="15" fill="rgb(243,167,48)"/><text x="223.00" y="270.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:216) (1 samples, 0.10%)</title><rect x="220" y="276" width="1" height="15" fill="rgb(220,136,52)"/><text x="223.00" y="286.50"></text></g><g><title>MyPyFloat_AsDouble (arraytypes.c.src:71) (1 samples, 0.10%)</title><rect x="220" y="292" width="1" height="15" fill="rgb(248,152,50)"/><text x="223.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.10%)</title><rect x="221" y="212" width="1" height="15" fill="rgb(227,22,31)"/><text x="224.00" y="222.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.10%)</title><rect x="221" y="228" width="1" height="15" fill="rgb(249,122,14)"/><text x="224.00" y="238.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1937) (1 samples, 0.10%)</title><rect x="221" y="244" width="1" height="15" fill="rgb(249,101,41)"/><text x="224.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:183) (1 samples, 0.10%)</title><rect x="222" y="260" width="2" height="15" fill="rgb(249,213,35)"/><text x="225.00" y="270.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c:776) (1 samples, 0.10%)</title><rect x="222" y="276" width="2" height="15" fill="rgb(205,104,22)"/><text x="225.00" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1455) (1 samples, 0.10%)</title><rect x="224" y="276" width="1" height="15" fill="rgb(241,161,9)"/><text x="227.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.31%)</title><rect x="222" y="244" width="4" height="15" fill="rgb(213,199,50)"/><text x="225.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.21%)</title><rect x="224" y="260" width="2" height="15" fill="rgb(208,149,1)"/><text x="227.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1554) (1 samples, 0.10%)</title><rect x="225" y="276" width="1" height="15" fill="rgb(220,64,12)"/><text x="228.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="226" y="244" width="1" height="15" fill="rgb(209,108,42)"/><text x="229.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:319) (1 samples, 0.10%)</title><rect x="226" y="260" width="1" height="15" fill="rgb(247,72,36)"/><text x="229.00" y="270.50"></text></g><g><title>array_multiply (number.c:354) (7 samples, 0.73%)</title><rect x="220" y="180" width="9" height="15" fill="rgb(251,222,49)"/><text x="223.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.73%)</title><rect x="220" y="196" width="9" height="15" fill="rgb(217,138,27)"/><text x="223.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="222" y="212" width="7" height="15" fill="rgb(227,121,0)"/><text x="225.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.52%)</title><rect x="222" y="228" width="7" height="15" fill="rgb(227,202,36)"/><text x="225.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="227" y="244" width="2" height="15" fill="rgb(211,36,22)"/><text x="230.00" y="254.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1756) (1 samples, 0.10%)</title><rect x="227" y="260" width="2" height="15" fill="rgb(226,177,45)"/><text x="230.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (1 samples, 0.10%)</title><rect x="229" y="212" width="1" height="15" fill="rgb(231,64,15)"/><text x="232.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="230" y="244" width="1" height="15" fill="rgb(231,137,5)"/><text x="233.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="230" y="260" width="1" height="15" fill="rgb(223,216,46)"/><text x="233.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2821) (1 samples, 0.10%)</title><rect x="230" y="276" width="1" height="15" fill="rgb(250,162,8)"/><text x="233.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:306) (1 samples, 0.10%)</title><rect x="231" y="260" width="1" height="15" fill="rgb(227,7,13)"/><text x="234.00" y="270.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c:1720) (1 samples, 0.10%)</title><rect x="231" y="276" width="1" height="15" fill="rgb(210,163,30)"/><text x="234.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="231" y="292" width="1" height="15" fill="rgb(239,16,22)"/><text x="234.00" y="302.50"></text></g><g><title>0x7f1c0d6b08fd (libc-2.29.so) (1 samples, 0.10%)</title><rect x="231" y="308" width="1" height="15" fill="rgb(248,147,21)"/><text x="234.00" y="318.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (2 samples, 0.21%)</title><rect x="231" y="244" width="3" height="15" fill="rgb(246,17,5)"/><text x="234.00" y="254.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:318) (1 samples, 0.10%)</title><rect x="232" y="260" width="2" height="15" fill="rgb(239,17,20)"/><text x="235.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1582) (1 samples, 0.10%)</title><rect x="234" y="244" width="1" height="15" fill="rgb(254,44,4)"/><text x="237.00" y="254.50"></text></g><g><title>DOUBLE_greater_equal (loops.c.src:1773) (1 samples, 0.10%)</title><rect x="234" y="260" width="1" height="15" fill="rgb(242,66,7)"/><text x="237.00" y="270.50"></text></g><g><title>run_binary_simd_greater_equal_DOUBLE (simd.inc.src:299) (1 samples, 0.10%)</title><rect x="234" y="276" width="1" height="15" fill="rgb(225,26,8)"/><text x="237.00" y="286.50"></text></g><g><title>sse2_binary_greater_equal_DOUBLE (simd.inc.src:937) (1 samples, 0.10%)</title><rect x="234" y="292" width="1" height="15" fill="rgb(206,28,19)"/><text x="237.00" y="302.50"></text></g><g><title>sse2_compress4_to_byte_DOUBLE (simd.inc.src:795) (1 samples, 0.10%)</title><rect x="234" y="308" width="1" height="15" fill="rgb(233,13,40)"/><text x="237.00" y="318.50"></text></g><g><title>_mm_packs_epi32 (emmintrin.h:931) (1 samples, 0.10%)</title><rect x="234" y="324" width="1" height="15" fill="rgb(248,47,7)"/><text x="237.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 0.52%)</title><rect x="230" y="212" width="6" height="15" fill="rgb(233,36,20)"/><text x="233.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 0.52%)</title><rect x="230" y="228" width="6" height="15" fill="rgb(249,152,21)"/><text x="233.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.10%)</title><rect x="235" y="244" width="1" height="15" fill="rgb(251,38,32)"/><text x="238.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="235" y="260" width="1" height="15" fill="rgb(218,50,37)"/><text x="238.00" y="270.50"></text></g><g><title>0x7f1c0d6ae9a8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="235" y="276" width="1" height="15" fill="rgb(253,158,51)"/><text x="238.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (14 samples, 1.47%)</title><rect x="220" y="164" width="17" height="15" fill="rgb(211,46,4)"/><text x="223.00" y="174.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (7 samples, 0.73%)</title><rect x="229" y="180" width="8" height="15" fill="rgb(208,49,24)"/><text x="232.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (7 samples, 0.73%)</title><rect x="229" y="196" width="8" height="15" fill="rgb(206,144,51)"/><text x="232.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3308) (1 samples, 0.10%)</title><rect x="236" y="212" width="1" height="15" fill="rgb(246,103,31)"/><text x="239.00" y="222.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.10%)</title><rect x="239" y="196" width="1" height="15" fill="rgb(232,72,19)"/><text x="242.00" y="206.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.10%)</title><rect x="239" y="212" width="1" height="15" fill="rgb(216,81,29)"/><text x="242.00" y="222.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:853) (1 samples, 0.10%)</title><rect x="239" y="228" width="1" height="15" fill="rgb(220,131,52)"/><text x="242.00" y="238.50"></text></g><g><title>array_argmax (methods.c:297) (3 samples, 0.31%)</title><rect x="237" y="180" width="4" height="15" fill="rgb(205,209,21)"/><text x="240.00" y="190.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="240" y="196" width="1" height="15" fill="rgb(234,71,0)"/><text x="243.00" y="206.50"></text></g><g><title>0x7f1c0d78cd21 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="240" y="212" width="1" height="15" fill="rgb(210,105,49)"/><text x="243.00" y="222.50"></text></g><g><title>PyArray_ArgMax (calculation.c:108) (1 samples, 0.10%)</title><rect x="241" y="196" width="1" height="15" fill="rgb(248,194,35)"/><text x="244.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="241" y="212" width="1" height="15" fill="rgb(235,218,25)"/><text x="244.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="241" y="228" width="1" height="15" fill="rgb(228,149,51)"/><text x="244.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="241" y="244" width="1" height="15" fill="rgb(209,13,25)"/><text x="244.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="241" y="260" width="1" height="15" fill="rgb(219,52,48)"/><text x="244.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="241" y="276" width="1" height="15" fill="rgb(220,105,38)"/><text x="244.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="241" y="292" width="1" height="15" fill="rgb(212,57,47)"/><text x="244.00" y="302.50"></text></g><g><title>0x7f1c0d6afcc7 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="241" y="308" width="1" height="15" fill="rgb(206,115,49)"/><text x="244.00" y="318.50"></text></g><g><title>PyArray_ArgMax (calculation.c:128) (1 samples, 0.10%)</title><rect x="242" y="196" width="2" height="15" fill="rgb(239,199,42)"/><text x="245.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src:3046) (1 samples, 0.10%)</title><rect x="244" y="212" width="1" height="15" fill="rgb(245,119,1)"/><text x="247.00" y="222.50"></text></g><g><title>PyArray_ArgMax (calculation.c:131) (2 samples, 0.21%)</title><rect x="244" y="196" width="2" height="15" fill="rgb(230,210,1)"/><text x="247.00" y="206.50"></text></g><g><title>BOOL_argmax (arraytypes.c.src:3057) (1 samples, 0.10%)</title><rect x="245" y="212" width="1" height="15" fill="rgb(236,44,0)"/><text x="248.00" y="222.50"></text></g><g><title>PyArray_ArgMax (calculation.c:137) (1 samples, 0.10%)</title><rect x="246" y="196" width="1" height="15" fill="rgb(216,164,37)"/><text x="249.00" y="206.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="246" y="212" width="1" height="15" fill="rgb(240,162,10)"/><text x="249.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1104) (9 samples, 0.94%)</title><rect x="237" y="164" width="11" height="15" fill="rgb(221,92,27)"/><text x="240.00" y="174.50"></text></g><g><title>array_argmax (methods.c:302) (6 samples, 0.63%)</title><rect x="241" y="180" width="7" height="15" fill="rgb(246,123,42)"/><text x="244.00" y="190.50"></text></g><g><title>PyArray_ArgMax (calculation.c:83) (1 samples, 0.10%)</title><rect x="247" y="196" width="1" height="15" fill="rgb(254,171,29)"/><text x="250.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.10%)</title><rect x="250" y="180" width="1" height="15" fill="rgb(250,55,46)"/><text x="253.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="250" y="196" width="1" height="15" fill="rgb(222,149,15)"/><text x="253.00" y="206.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (1 samples, 0.10%)</title><rect x="251" y="180" width="1" height="15" fill="rgb(249,129,31)"/><text x="254.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3378) (1 samples, 0.10%)</title><rect x="251" y="196" width="1" height="15" fill="rgb(220,225,26)"/><text x="254.00" y="206.50"></text></g><g><title>PyArray_DescrFromObject (ctors.c:2668) (1 samples, 0.10%)</title><rect x="251" y="212" width="1" height="15" fill="rgb(241,146,24)"/><text x="254.00" y="222.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:108) (1 samples, 0.10%)</title><rect x="251" y="228" width="1" height="15" fill="rgb(245,6,43)"/><text x="254.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (1 samples, 0.10%)</title><rect x="251" y="244" width="1" height="15" fill="rgb(227,173,32)"/><text x="254.00" y="254.50"></text></g><g><title>0x7f1c0c8d10a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="251" y="260" width="1" height="15" fill="rgb(244,229,26)"/><text x="254.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="252" y="180" width="1" height="15" fill="rgb(205,38,14)"/><text x="255.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="252" y="196" width="1" height="15" fill="rgb(230,193,5)"/><text x="255.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="252" y="212" width="1" height="15" fill="rgb(236,140,18)"/><text x="255.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.10%)</title><rect x="253" y="180" width="2" height="15" fill="rgb(225,103,12)"/><text x="256.00" y="190.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.10%)</title><rect x="253" y="196" width="2" height="15" fill="rgb(247,166,11)"/><text x="256.00" y="206.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.10%)</title><rect x="253" y="212" width="2" height="15" fill="rgb(214,147,19)"/><text x="256.00" y="222.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:196) (1 samples, 0.10%)</title><rect x="253" y="228" width="2" height="15" fill="rgb(209,120,51)"/><text x="256.00" y="238.50"></text></g><g><title>array_subscript (mapping.c:1666) (1 samples, 0.10%)</title><rect x="255" y="180" width="1" height="15" fill="rgb(212,136,5)"/><text x="258.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2513) (1 samples, 0.10%)</title><rect x="255" y="196" width="1" height="15" fill="rgb(205,18,18)"/><text x="258.00" y="206.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.10%)</title><rect x="255" y="212" width="1" height="15" fill="rgb(211,62,14)"/><text x="258.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.10%)</title><rect x="255" y="228" width="1" height="15" fill="rgb(243,219,17)"/><text x="258.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.10%)</title><rect x="256" y="196" width="1" height="15" fill="rgb(207,123,54)"/><text x="259.00" y="206.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.10%)</title><rect x="257" y="196" width="1" height="15" fill="rgb(229,187,2)"/><text x="260.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1676) (3 samples, 0.31%)</title><rect x="256" y="180" width="4" height="15" fill="rgb(208,15,43)"/><text x="259.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.10%)</title><rect x="258" y="196" width="2" height="15" fill="rgb(242,75,0)"/><text x="261.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (10 samples, 1.05%)</title><rect x="248" y="164" width="13" height="15" fill="rgb(228,68,16)"/><text x="251.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.10%)</title><rect x="260" y="180" width="1" height="15" fill="rgb(211,226,21)"/><text x="263.00" y="190.50"></text></g><g><title>arraymapiter_dealloc (mapping.c:3313) (1 samples, 0.10%)</title><rect x="260" y="196" width="1" height="15" fill="rgb(240,216,1)"/><text x="263.00" y="206.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.10%)</title><rect x="260" y="212" width="1" height="15" fill="rgb(237,47,31)"/><text x="263.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 0.21%)</title><rect x="261" y="180" width="2" height="15" fill="rgb(212,145,43)"/><text x="264.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.10%)</title><rect x="262" y="196" width="1" height="15" fill="rgb(220,196,38)"/><text x="265.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.10%)</title><rect x="262" y="212" width="1" height="15" fill="rgb(235,127,46)"/><text x="265.00" y="222.50"></text></g><g><title>array_subscript (mapping.c:1524) (1 samples, 0.10%)</title><rect x="263" y="180" width="2" height="15" fill="rgb(210,12,0)"/><text x="266.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (2 samples, 0.21%)</title><rect x="265" y="196" width="2" height="15" fill="rgb(252,163,26)"/><text x="268.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1666) (3 samples, 0.31%)</title><rect x="265" y="180" width="3" height="15" fill="rgb(209,23,46)"/><text x="268.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.10%)</title><rect x="267" y="196" width="1" height="15" fill="rgb(245,70,43)"/><text x="270.00" y="206.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.10%)</title><rect x="267" y="212" width="1" height="15" fill="rgb(210,128,46)"/><text x="270.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.10%)</title><rect x="268" y="196" width="2" height="15" fill="rgb(240,75,8)"/><text x="271.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:54) (197 samples, 20.67%)</title><rect x="27" y="52" width="244" height="15" fill="rgb(234,53,47)"/><text x="30.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegresso..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:53) (197 samples, 20.67%)</title><rect x="27" y="68" width="244" height="15" fill="rgb(208,160,41)"/><text x="30.00" y="78.50">profile_skl (bench_AdaBoostRegre..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:37) (197 samples, 20.67%)</title><rect x="27" y="84" width="244" height="15" fill="rgb(205,221,39)"/><text x="30.00" y="94.50">setup_profile (bench_AdaBoostReg..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:31) (197 samples, 20.67%)</title><rect x="27" y="100" width="244" height="15" fill="rgb(242,42,52)"/><text x="30.00" y="110.50">profile (bench_AdaBoostRegressor..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (197 samples, 20.67%)</title><rect x="27" y="116" width="244" height="15" fill="rgb(231,110,35)"/><text x="30.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (197 samples, 20.67%)</title><rect x="27" y="132" width="244" height="15" fill="rgb(213,36,45)"/><text x="30.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (183 samples, 19.20%)</title><rect x="44" y="148" width="227" height="15" fill="rgb(236,22,20)"/><text x="47.00" y="158.50">predict (sklearn/ensemble/_wei..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (8 samples, 0.84%)</title><rect x="261" y="164" width="10" height="15" fill="rgb(249,194,26)"/><text x="264.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1676) (2 samples, 0.21%)</title><rect x="268" y="180" width="3" height="15" fill="rgb(225,208,38)"/><text x="271.00" y="190.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.10%)</title><rect x="270" y="196" width="1" height="15" fill="rgb(252,205,32)"/><text x="273.00" y="206.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:36) (1 samples, 0.10%)</title><rect x="271" y="84" width="1" height="15" fill="rgb(214,67,35)"/><text x="274.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.10%)</title><rect x="271" y="100" width="1" height="15" fill="rgb(230,154,41)"/><text x="274.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.10%)</title><rect x="271" y="116" width="1" height="15" fill="rgb(228,225,27)"/><text x="274.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.10%)</title><rect x="271" y="132" width="1" height="15" fill="rgb(241,198,25)"/><text x="274.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.10%)</title><rect x="271" y="148" width="1" height="15" fill="rgb(241,208,24)"/><text x="274.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.10%)</title><rect x="271" y="164" width="1" height="15" fill="rgb(233,199,1)"/><text x="274.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.10%)</title><rect x="271" y="180" width="1" height="15" fill="rgb(230,5,26)"/><text x="274.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.10%)</title><rect x="271" y="196" width="1" height="15" fill="rgb(205,1,26)"/><text x="274.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="212" width="1" height="15" fill="rgb(244,31,30)"/><text x="274.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="228" width="1" height="15" fill="rgb(249,17,22)"/><text x="274.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="271" y="244" width="1" height="15" fill="rgb(247,221,42)"/><text x="274.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="271" y="260" width="1" height="15" fill="rgb(231,192,0)"/><text x="274.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="276" width="1" height="15" fill="rgb(248,135,54)"/><text x="274.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.10%)</title><rect x="271" y="292" width="1" height="15" fill="rgb(213,28,11)"/><text x="274.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="308" width="1" height="15" fill="rgb(230,189,39)"/><text x="274.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="324" width="1" height="15" fill="rgb(213,112,46)"/><text x="274.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="271" y="340" width="1" height="15" fill="rgb(218,125,13)"/><text x="274.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="271" y="356" width="1" height="15" fill="rgb(242,125,8)"/><text x="274.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="372" width="1" height="15" fill="rgb(232,10,23)"/><text x="274.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.10%)</title><rect x="271" y="388" width="1" height="15" fill="rgb(229,106,29)"/><text x="274.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.10%)</title><rect x="271" y="404" width="1" height="15" fill="rgb(237,207,7)"/><text x="274.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.10%)</title><rect x="271" y="420" width="1" height="15" fill="rgb(235,175,2)"/><text x="274.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.10%)</title><rect x="271" y="436" width="1" height="15" fill="rgb(250,78,14)"/><text x="274.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.10%)</title><rect x="271" y="452" width="1" height="15" fill="rgb(241,129,10)"/><text x="274.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.10%)</title><rect x="271" y="468" width="1" height="15" fill="rgb(219,54,39)"/><text x="274.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.10%)</title><rect x="271" y="484" width="1" height="15" fill="rgb(234,219,49)"/><text x="274.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.10%)</title><rect x="271" y="500" width="1" height="15" fill="rgb(206,88,23)"/><text x="274.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.10%)</title><rect x="271" y="516" width="1" height="15" fill="rgb(243,114,27)"/><text x="274.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.10%)</title><rect x="271" y="532" width="1" height="15" fill="rgb(211,196,1)"/><text x="274.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.10%)</title><rect x="271" y="548" width="1" height="15" fill="rgb(212,213,7)"/><text x="274.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.10%)</title><rect x="271" y="564" width="1" height="15" fill="rgb(229,135,39)"/><text x="274.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.10%)</title><rect x="271" y="580" width="1" height="15" fill="rgb(233,183,28)"/><text x="274.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="271" y="596" width="1" height="15" fill="rgb(227,53,13)"/><text x="274.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:754) (1 samples, 0.10%)</title><rect x="271" y="612" width="1" height="15" fill="rgb(235,149,41)"/><text x="274.00" y="622.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.10%)</title><rect x="271" y="628" width="1" height="15" fill="rgb(209,203,17)"/><text x="274.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="271" y="644" width="1" height="15" fill="rgb(252,36,3)"/><text x="274.00" y="654.50"></text></g><g><title>visit_For (jinja2/compiler.py:1122) (1 samples, 0.10%)</title><rect x="271" y="660" width="1" height="15" fill="rgb(216,90,14)"/><text x="274.00" y="670.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.10%)</title><rect x="271" y="676" width="1" height="15" fill="rgb(223,130,12)"/><text x="274.00" y="686.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="271" y="692" width="1" height="15" fill="rgb(230,203,4)"/><text x="274.00" y="702.50"></text></g><g><title>visit_If (jinja2/compiler.py:1160) (1 samples, 0.10%)</title><rect x="271" y="708" width="1" height="15" fill="rgb(250,2,3)"/><text x="274.00" y="718.50"></text></g><g><title>blockvisit (jinja2/compiler.py:378) (1 samples, 0.10%)</title><rect x="271" y="724" width="1" height="15" fill="rgb(250,133,14)"/><text x="274.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="271" y="740" width="1" height="15" fill="rgb(243,62,45)"/><text x="274.00" y="750.50"></text></g><g><title>visit_For (jinja2/compiler.py:1040) (1 samples, 0.10%)</title><rect x="271" y="756" width="1" height="15" fill="rgb(216,118,3)"/><text x="274.00" y="766.50"></text></g><g><title>analyze_node (jinja2/idtracking.py:41) (1 samples, 0.10%)</title><rect x="271" y="772" width="1" height="15" fill="rgb(219,99,31)"/><text x="274.00" y="782.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="271" y="788" width="1" height="15" fill="rgb(229,45,24)"/><text x="274.00" y="798.50"></text></g><g><title>visit_For (jinja2/idtracking.py:190) (1 samples, 0.10%)</title><rect x="271" y="804" width="1" height="15" fill="rgb(222,175,7)"/><text x="274.00" y="814.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.10%)</title><rect x="271" y="820" width="1" height="15" fill="rgb(244,131,29)"/><text x="274.00" y="830.50"></text></g><g><title>visit_If (jinja2/idtracking.py:233) (1 samples, 0.10%)</title><rect x="271" y="836" width="1" height="15" fill="rgb(249,32,13)"/><text x="274.00" y="846.50"></text></g><g><title>inner_visit (jinja2/idtracking.py:229) (1 samples, 0.10%)</title><rect x="271" y="852" width="1" height="15" fill="rgb(229,9,30)"/><text x="274.00" y="862.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.10%)</title><rect x="271" y="868" width="1" height="15" fill="rgb(249,67,29)"/><text x="274.00" y="878.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.10%)</title><rect x="271" y="884" width="1" height="15" fill="rgb(221,89,22)"/><text x="274.00" y="894.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.10%)</title><rect x="271" y="900" width="1" height="15" fill="rgb(237,102,17)"/><text x="274.00" y="910.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.10%)</title><rect x="271" y="916" width="1" height="15" fill="rgb(226,103,44)"/><text x="274.00" y="926.50"></text></g><g><title>visit (jinja2/visitor.py:36) (1 samples, 0.10%)</title><rect x="271" y="932" width="1" height="15" fill="rgb(238,186,0)"/><text x="274.00" y="942.50"></text></g><g><title>get_visitor (jinja2/visitor.py:31) (1 samples, 0.10%)</title><rect x="271" y="948" width="1" height="15" fill="rgb(242,35,39)"/><text x="274.00" y="958.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:401) (1 samples, 0.10%)</title><rect x="272" y="148" width="1" height="15" fill="rgb(215,195,46)"/><text x="275.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:445) (1 samples, 0.10%)</title><rect x="273" y="164" width="1" height="15" fill="rgb(224,102,23)"/><text x="276.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.10%)</title><rect x="277" y="180" width="1" height="15" fill="rgb(208,59,28)"/><text x="280.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (1 samples, 0.10%)</title><rect x="278" y="180" width="1" height="15" fill="rgb(246,140,50)"/><text x="281.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 0.52%)</title><rect x="279" y="180" width="7" height="15" fill="rgb(232,153,14)"/><text x="282.00" y="190.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (1 samples, 0.10%)</title><rect x="284" y="196" width="2" height="15" fill="rgb(218,192,27)"/><text x="287.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:34) (1 samples, 0.10%)</title><rect x="292" y="212" width="1" height="15" fill="rgb(242,213,44)"/><text x="295.00" y="222.50"></text></g><g><title>recursive_tolist (convert.c:100) (1 samples, 0.10%)</title><rect x="293" y="244" width="1" height="15" fill="rgb(249,117,40)"/><text x="296.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.10%)</title><rect x="294" y="260" width="2" height="15" fill="rgb(245,82,54)"/><text x="297.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:112) (3 samples, 0.31%)</title><rect x="296" y="260" width="3" height="15" fill="rgb(213,68,22)"/><text x="299.00" y="270.50"></text></g><g><title>recursive_tolist (convert.c:102) (6 samples, 0.63%)</title><rect x="294" y="244" width="8" height="15" fill="rgb(232,17,27)"/><text x="297.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c:83) (2 samples, 0.21%)</title><rect x="299" y="260" width="3" height="15" fill="rgb(228,160,33)"/><text x="302.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:39) (9 samples, 0.94%)</title><rect x="293" y="212" width="11" height="15" fill="rgb(225,217,51)"/><text x="296.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (9 samples, 0.94%)</title><rect x="293" y="228" width="11" height="15" fill="rgb(242,192,1)"/><text x="296.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:96) (2 samples, 0.21%)</title><rect x="302" y="244" width="2" height="15" fill="rgb(236,111,21)"/><text x="305.00" y="254.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="302" y="260" width="2" height="15" fill="rgb(207,42,16)"/><text x="305.00" y="270.50"></text></g><g><title>0x7f1c0d6cf103 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="303" y="276" width="1" height="15" fill="rgb(250,71,24)"/><text x="306.00" y="286.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.10%)</title><rect x="304" y="244" width="1" height="15" fill="rgb(240,151,45)"/><text x="307.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.10%)</title><rect x="304" y="260" width="1" height="15" fill="rgb(211,99,21)"/><text x="307.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.10%)</title><rect x="304" y="276" width="1" height="15" fill="rgb(252,15,48)"/><text x="307.00" y="286.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:458) (2 samples, 0.21%)</title><rect x="305" y="308" width="3" height="15" fill="rgb(250,170,0)"/><text x="308.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:138) (3 samples, 0.31%)</title><rect x="309" y="324" width="4" height="15" fill="rgb(212,207,32)"/><text x="312.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:145) (1 samples, 0.10%)</title><rect x="313" y="324" width="1" height="15" fill="rgb(247,91,34)"/><text x="316.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (4 samples, 0.42%)</title><rect x="314" y="324" width="5" height="15" fill="rgb(217,39,8)"/><text x="317.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c:41) (9 samples, 0.94%)</title><rect x="319" y="340" width="11" height="15" fill="rgb(247,53,42)"/><text x="322.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:44) (5 samples, 0.52%)</title><rect x="330" y="340" width="6" height="15" fill="rgb(236,147,24)"/><text x="333.00" y="350.50"></text></g><g><title>_array_find_python_scalar_type (common.c:47) (6 samples, 0.63%)</title><rect x="336" y="340" width="8" height="15" fill="rgb(252,0,28)"/><text x="339.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h:37) (2 samples, 0.21%)</title><rect x="341" y="356" width="3" height="15" fill="rgb(207,145,18)"/><text x="344.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:212) (21 samples, 2.20%)</title><rect x="319" y="324" width="26" height="15" fill="rgb(249,208,25)"/><text x="322.00" y="334.50">P..</text></g><g><title>_array_find_python_scalar_type (common.c:53) (1 samples, 0.10%)</title><rect x="344" y="340" width="1" height="15" fill="rgb(235,145,5)"/><text x="347.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.10%)</title><rect x="344" y="356" width="1" height="15" fill="rgb(218,189,47)"/><text x="347.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:511) (1 samples, 0.10%)</title><rect x="345" y="324" width="1" height="15" fill="rgb(214,58,25)"/><text x="348.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (3 samples, 0.31%)</title><rect x="349" y="340" width="3" height="15" fill="rgb(250,102,19)"/><text x="352.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1372) (3 samples, 0.31%)</title><rect x="352" y="340" width="4" height="15" fill="rgb(243,110,21)"/><text x="355.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c:1056) (3 samples, 0.31%)</title><rect x="352" y="356" width="4" height="15" fill="rgb(211,84,13)"/><text x="355.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:512) (9 samples, 0.94%)</title><rect x="346" y="324" width="11" height="15" fill="rgb(228,41,52)"/><text x="349.00" y="334.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1386) (1 samples, 0.10%)</title><rect x="356" y="340" width="1" height="15" fill="rgb(245,11,48)"/><text x="359.00" y="350.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:513) (1 samples, 0.10%)</title><rect x="357" y="324" width="2" height="15" fill="rgb(215,133,51)"/><text x="360.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:516) (1 samples, 0.10%)</title><rect x="359" y="324" width="1" height="15" fill="rgb(223,14,34)"/><text x="362.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:522) (1 samples, 0.10%)</title><rect x="360" y="324" width="1" height="15" fill="rgb(232,62,2)"/><text x="363.00" y="334.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:528) (2 samples, 0.21%)</title><rect x="361" y="324" width="3" height="15" fill="rgb(217,27,12)"/><text x="364.00" y="334.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (49 samples, 5.14%)</title><rect x="305" y="276" width="61" height="15" fill="rgb(230,42,35)"/><text x="308.00" y="286.50">PyArra..</text></g><g><title>PyArray_DTypeFromObject (common.c:108) (49 samples, 5.14%)</title><rect x="305" y="292" width="61" height="15" fill="rgb(246,212,29)"/><text x="308.00" y="302.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (47 samples, 4.93%)</title><rect x="308" y="308" width="58" height="15" fill="rgb(231,64,46)"/><text x="311.00" y="318.50">PyArra..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:537) (2 samples, 0.21%)</title><rect x="364" y="324" width="2" height="15" fill="rgb(226,19,53)"/><text x="367.00" y="334.50"></text></g><g><title>discover_dimensions (ctors.c:883) (2 samples, 0.21%)</title><rect x="366" y="292" width="3" height="15" fill="rgb(225,126,6)"/><text x="369.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c:668) (3 samples, 0.31%)</title><rect x="369" y="308" width="3" height="15" fill="rgb(231,145,27)"/><text x="372.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:679) (4 samples, 0.42%)</title><rect x="372" y="308" width="5" height="15" fill="rgb(216,32,9)"/><text x="375.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:693) (2 samples, 0.21%)</title><rect x="377" y="308" width="3" height="15" fill="rgb(220,154,14)"/><text x="380.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:699) (2 samples, 0.21%)</title><rect x="380" y="308" width="2" height="15" fill="rgb(223,201,41)"/><text x="383.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:703) (8 samples, 0.84%)</title><rect x="382" y="308" width="10" height="15" fill="rgb(207,219,28)"/><text x="385.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c:884) (20 samples, 2.10%)</title><rect x="369" y="292" width="24" height="15" fill="rgb(234,209,0)"/><text x="372.00" y="302.50">d..</text></g><g><title>discover_dimensions (ctors.c:912) (1 samples, 0.10%)</title><rect x="392" y="308" width="1" height="15" fill="rgb(244,1,26)"/><text x="395.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (72 samples, 7.56%)</title><rect x="305" y="260" width="90" height="15" fill="rgb(219,141,40)"/><text x="308.00" y="270.50">PyArray_Fr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (23 samples, 2.41%)</title><rect x="366" y="276" width="29" height="15" fill="rgb(206,47,52)"/><text x="369.00" y="286.50">Py..</text></g><g><title>discover_dimensions (ctors.c:897) (1 samples, 0.10%)</title><rect x="393" y="292" width="2" height="15" fill="rgb(219,164,50)"/><text x="396.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.10%)</title><rect x="395" y="260" width="1" height="15" fill="rgb(217,184,21)"/><text x="398.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.10%)</title><rect x="395" y="276" width="1" height="15" fill="rgb(209,51,8)"/><text x="398.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.10%)</title><rect x="395" y="292" width="1" height="15" fill="rgb(239,120,7)"/><text x="398.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.10%)</title><rect x="395" y="308" width="1" height="15" fill="rgb(210,213,1)"/><text x="398.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="395" y="324" width="1" height="15" fill="rgb(239,152,11)"/><text x="398.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="395" y="340" width="1" height="15" fill="rgb(245,70,49)"/><text x="398.00" y="350.50"></text></g><g><title>0x7f1c0d6afcef (libc-2.29.so) (1 samples, 0.10%)</title><rect x="395" y="356" width="1" height="15" fill="rgb(206,49,6)"/><text x="398.00" y="366.50"></text></g><g><title>setArrayFromSequence (ctors.c:535) (1 samples, 0.10%)</title><rect x="396" y="292" width="1" height="15" fill="rgb(233,206,29)"/><text x="399.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:536) (10 samples, 1.05%)</title><rect x="397" y="292" width="12" height="15" fill="rgb(229,147,17)"/><text x="400.00" y="302.50"></text></g><g><title>setArrayFromSequence (ctors.c:537) (1 samples, 0.10%)</title><rect x="409" y="292" width="2" height="15" fill="rgb(250,171,36)"/><text x="412.00" y="302.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:208) (2 samples, 0.21%)</title><rect x="414" y="324" width="3" height="15" fill="rgb(240,66,49)"/><text x="417.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:212) (15 samples, 1.57%)</title><rect x="417" y="324" width="18" height="15" fill="rgb(236,134,12)"/><text x="420.00" y="334.50"></text></g><g><title>0x7f1c0c8d10a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="434" y="340" width="1" height="15" fill="rgb(245,152,19)"/><text x="437.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:117) (2 samples, 0.21%)</title><rect x="439" y="340" width="3" height="15" fill="rgb(241,85,29)"/><text x="442.00" y="350.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:119) (11 samples, 1.15%)</title><rect x="442" y="340" width="13" height="15" fill="rgb(214,109,17)"/><text x="445.00" y="350.50"></text></g><g><title>0x7f1c0c8d0740 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.31%)</title><rect x="452" y="356" width="3" height="15" fill="rgb(231,149,34)"/><text x="455.00" y="366.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:122) (1 samples, 0.10%)</title><rect x="455" y="340" width="1" height="15" fill="rgb(215,159,46)"/><text x="458.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (33 samples, 3.46%)</title><rect x="435" y="324" width="41" height="15" fill="rgb(226,85,35)"/><text x="438.00" y="334.50">LON..</text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (16 samples, 1.68%)</title><rect x="456" y="340" width="20" height="15" fill="rgb(240,226,43)"/><text x="459.00" y="350.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:218) (2 samples, 0.21%)</title><rect x="476" y="324" width="3" height="15" fill="rgb(220,73,40)"/><text x="479.00" y="334.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:233) (3 samples, 0.31%)</title><rect x="479" y="324" width="3" height="15" fill="rgb(250,166,24)"/><text x="482.00" y="334.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (2 samples, 0.21%)</title><rect x="480" y="340" width="2" height="15" fill="rgb(234,125,40)"/><text x="483.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1539) (147 samples, 15.42%)</title><rect x="304" y="228" width="182" height="15" fill="rgb(235,101,2)"/><text x="307.00" y="238.50">array_subscript (mappin..</text></g><g><title>prepare_index (mapping.c:516) (146 samples, 15.32%)</title><rect x="305" y="244" width="181" height="15" fill="rgb(226,144,20)"/><text x="308.00" y="254.50">prepare_index (mapping...</text></g><g><title>PyArray_FromAny (ctors.c:1938) (73 samples, 7.66%)</title><rect x="396" y="260" width="90" height="15" fill="rgb(210,188,9)"/><text x="399.00" y="270.50">PyArray_Fr..</text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (73 samples, 7.66%)</title><rect x="396" y="276" width="90" height="15" fill="rgb(213,103,5)"/><text x="399.00" y="286.50">PyArray_As..</text></g><g><title>setArrayFromSequence (ctors.c:550) (61 samples, 6.40%)</title><rect x="411" y="292" width="75" height="15" fill="rgb(213,214,45)"/><text x="414.00" y="302.50">setArray..</text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (61 samples, 6.40%)</title><rect x="411" y="308" width="75" height="15" fill="rgb(254,85,22)"/><text x="414.00" y="318.50">PyArray_..</text></g><g><title>LONG_setitem (arraytypes.c.src:242) (3 samples, 0.31%)</title><rect x="482" y="324" width="4" height="15" fill="rgb(226,189,37)"/><text x="485.00" y="334.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.10%)</title><rect x="486" y="228" width="1" height="15" fill="rgb(208,154,14)"/><text x="489.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2662) (1 samples, 0.10%)</title><rect x="486" y="244" width="1" height="15" fill="rgb(242,89,41)"/><text x="489.00" y="254.50"></text></g><g><title>mapiter_fill_info (mapping.c:2424) (1 samples, 0.10%)</title><rect x="486" y="260" width="1" height="15" fill="rgb(219,124,32)"/><text x="489.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1567) (1 samples, 0.10%)</title><rect x="487" y="244" width="2" height="15" fill="rgb(244,142,22)"/><text x="490.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1581) (1 samples, 0.10%)</title><rect x="489" y="244" width="1" height="15" fill="rgb(232,54,16)"/><text x="492.00" y="254.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (1 samples, 0.10%)</title><rect x="490" y="244" width="1" height="15" fill="rgb(253,40,14)"/><text x="493.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (152 samples, 15.95%)</title><rect x="304" y="212" width="188" height="15" fill="rgb(223,47,18)"/><text x="307.00" y="222.50">_run (mlprodict/onnxrt/o..</text></g><g><title>array_subscript (mapping.c:1676) (4 samples, 0.42%)</title><rect x="487" y="228" width="5" height="15" fill="rgb(223,210,5)"/><text x="490.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.10%)</title><rect x="491" y="244" width="1" height="15" fill="rgb(250,151,47)"/><text x="494.00" y="254.50"></text></g><g><title>array_astype (methods.c:828) (1 samples, 0.10%)</title><rect x="492" y="244" width="2" height="15" fill="rgb(247,42,12)"/><text x="495.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.10%)</title><rect x="492" y="260" width="2" height="15" fill="rgb(248,160,8)"/><text x="495.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:685) (1 samples, 0.10%)</title><rect x="492" y="276" width="2" height="15" fill="rgb(227,215,26)"/><text x="495.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.31%)</title><rect x="492" y="212" width="4" height="15" fill="rgb(235,36,22)"/><text x="495.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.31%)</title><rect x="492" y="228" width="4" height="15" fill="rgb(237,41,4)"/><text x="495.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.21%)</title><rect x="494" y="244" width="2" height="15" fill="rgb(247,202,12)"/><text x="497.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.21%)</title><rect x="494" y="260" width="2" height="15" fill="rgb(243,212,3)"/><text x="497.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (2 samples, 0.21%)</title><rect x="494" y="276" width="2" height="15" fill="rgb(226,43,20)"/><text x="497.00" y="286.50"></text></g><g><title>_aligned_contig_cast_bool_to_float (lowlevel_strided_loops.c.src:816) (2 samples, 0.21%)</title><rect x="494" y="292" width="2" height="15" fill="rgb(216,134,49)"/><text x="497.00" y="302.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:260) (1 samples, 0.10%)</title><rect x="496" y="324" width="1" height="15" fill="rgb(208,222,52)"/><text x="499.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (1 samples, 0.10%)</title><rect x="497" y="372" width="2" height="15" fill="rgb(220,50,16)"/><text x="500.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="497" y="388" width="2" height="15" fill="rgb(211,33,0)"/><text x="500.00" y="398.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3911) (1 samples, 0.10%)</title><rect x="499" y="372" width="1" height="15" fill="rgb(224,94,9)"/><text x="502.00" y="382.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3922) (1 samples, 0.10%)</title><rect x="500" y="372" width="1" height="15" fill="rgb(221,157,7)"/><text x="503.00" y="382.50"></text></g><g><title>0x7f1c0d6cedc9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="500" y="388" width="1" height="15" fill="rgb(212,44,52)"/><text x="503.00" y="398.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3925) (1 samples, 0.10%)</title><rect x="501" y="372" width="1" height="15" fill="rgb(229,130,9)"/><text x="504.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1742) (1 samples, 0.10%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(224,62,44)"/><text x="505.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (8 samples, 0.84%)</title><rect x="496" y="212" width="10" height="15" fill="rgb(213,111,9)"/><text x="499.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (8 samples, 0.84%)</title><rect x="496" y="228" width="10" height="15" fill="rgb(209,141,12)"/><text x="499.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (8 samples, 0.84%)</title><rect x="496" y="244" width="10" height="15" fill="rgb(240,134,2)"/><text x="499.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (8 samples, 0.84%)</title><rect x="496" y="260" width="10" height="15" fill="rgb(214,175,44)"/><text x="499.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 0.84%)</title><rect x="496" y="276" width="10" height="15" fill="rgb(251,202,27)"/><text x="499.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (8 samples, 0.84%)</title><rect x="496" y="292" width="10" height="15" fill="rgb(239,47,47)"/><text x="499.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (8 samples, 0.84%)</title><rect x="496" y="308" width="10" height="15" fill="rgb(246,81,20)"/><text x="499.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (7 samples, 0.73%)</title><rect x="497" y="324" width="9" height="15" fill="rgb(246,109,43)"/><text x="500.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (7 samples, 0.73%)</title><rect x="497" y="340" width="9" height="15" fill="rgb(251,14,21)"/><text x="500.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (7 samples, 0.73%)</title><rect x="497" y="356" width="9" height="15" fill="rgb(214,145,19)"/><text x="500.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3934) (3 samples, 0.31%)</title><rect x="502" y="372" width="4" height="15" fill="rgb(250,80,32)"/><text x="505.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src:1756) (2 samples, 0.21%)</title><rect x="504" y="388" width="2" height="15" fill="rgb(230,146,15)"/><text x="507.00" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (1 samples, 0.10%)</title><rect x="506" y="212" width="1" height="15" fill="rgb(207,130,22)"/><text x="509.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="506" y="228" width="1" height="15" fill="rgb(253,66,0)"/><text x="509.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="506" y="244" width="1" height="15" fill="rgb(208,159,42)"/><text x="509.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.10%)</title><rect x="506" y="260" width="1" height="15" fill="rgb(221,151,34)"/><text x="509.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.10%)</title><rect x="506" y="276" width="1" height="15" fill="rgb(240,102,18)"/><text x="509.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:344) (1 samples, 0.10%)</title><rect x="506" y="292" width="1" height="15" fill="rgb(247,91,46)"/><text x="509.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (1 samples, 0.10%)</title><rect x="507" y="212" width="1" height="15" fill="rgb(212,76,5)"/><text x="510.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="507" y="228" width="1" height="15" fill="rgb(213,205,48)"/><text x="510.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:225) (1 samples, 0.10%)</title><rect x="507" y="244" width="1" height="15" fill="rgb(227,14,29)"/><text x="510.00" y="254.50"></text></g><g><title>get_view_from_index (mapping.c:937) (1 samples, 0.10%)</title><rect x="511" y="308" width="1" height="15" fill="rgb(218,168,36)"/><text x="514.00" y="318.50"></text></g><g><title>sprintf (libc-2.29.so) (1 samples, 0.10%)</title><rect x="511" y="324" width="1" height="15" fill="rgb(242,105,32)"/><text x="514.00" y="334.50"></text></g><g><title>0x7f1c0d69fab0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="511" y="340" width="1" height="15" fill="rgb(247,2,6)"/><text x="514.00" y="350.50"></text></g><g><title>0x7f1c0d6931e3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="511" y="356" width="1" height="15" fill="rgb(232,113,15)"/><text x="514.00" y="366.50"></text></g><g><title>0x7f1c0d6c499a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="511" y="372" width="1" height="15" fill="rgb(235,69,8)"/><text x="514.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="512" y="340" width="1" height="15" fill="rgb(244,137,31)"/><text x="515.00" y="350.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.10%)</title><rect x="512" y="356" width="1" height="15" fill="rgb(246,108,11)"/><text x="515.00" y="366.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (5 samples, 0.52%)</title><rect x="508" y="244" width="7" height="15" fill="rgb(239,53,12)"/><text x="511.00" y="254.50"></text></g><g><title>_choose_dispatcher (numpy/core/fromnumeric.py:306) (4 samples, 0.42%)</title><rect x="510" y="260" width="5" height="15" fill="rgb(225,163,48)"/><text x="513.00" y="270.50"></text></g><g><title>array_item (mapping.c:1384) (3 samples, 0.31%)</title><rect x="511" y="276" width="4" height="15" fill="rgb(206,169,24)"/><text x="514.00" y="286.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (3 samples, 0.31%)</title><rect x="511" y="292" width="4" height="15" fill="rgb(206,26,14)"/><text x="514.00" y="302.50"></text></g><g><title>get_view_from_index (mapping.c:988) (2 samples, 0.21%)</title><rect x="512" y="308" width="3" height="15" fill="rgb(221,175,42)"/><text x="515.00" y="318.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (2 samples, 0.21%)</title><rect x="512" y="324" width="3" height="15" fill="rgb(213,184,14)"/><text x="515.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.10%)</title><rect x="513" y="340" width="2" height="15" fill="rgb(207,62,6)"/><text x="516.00" y="350.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.10%)</title><rect x="513" y="356" width="2" height="15" fill="rgb(236,106,16)"/><text x="516.00" y="366.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.10%)</title><rect x="513" y="372" width="2" height="15" fill="rgb(243,13,21)"/><text x="516.00" y="382.50"></text></g><g><title>0x7f1c0d6cf1ef (libc-2.29.so) (1 samples, 0.10%)</title><rect x="515" y="276" width="1" height="15" fill="rgb(231,222,40)"/><text x="518.00" y="286.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1250) (1 samples, 0.10%)</title><rect x="516" y="356" width="1" height="15" fill="rgb(217,70,0)"/><text x="519.00" y="366.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.10%)</title><rect x="516" y="372" width="1" height="15" fill="rgb(205,210,19)"/><text x="519.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1047) (1 samples, 0.10%)</title><rect x="517" y="404" width="1" height="15" fill="rgb(219,1,45)"/><text x="520.00" y="414.50"></text></g><g><title>PyArray_NewCopy (convert.c:556) (4 samples, 0.42%)</title><rect x="516" y="340" width="5" height="15" fill="rgb(215,124,18)"/><text x="519.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c:1285) (3 samples, 0.31%)</title><rect x="517" y="356" width="4" height="15" fill="rgb(234,153,3)"/><text x="520.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (3 samples, 0.31%)</title><rect x="517" y="372" width="4" height="15" fill="rgb(231,184,21)"/><text x="520.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (3 samples, 0.31%)</title><rect x="517" y="388" width="4" height="15" fill="rgb(216,63,7)"/><text x="520.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.21%)</title><rect x="518" y="404" width="3" height="15" fill="rgb(245,51,26)"/><text x="521.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.21%)</title><rect x="518" y="420" width="3" height="15" fill="rgb(253,127,54)"/><text x="521.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.21%)</title><rect x="518" y="436" width="3" height="15" fill="rgb(249,73,54)"/><text x="521.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (2 samples, 0.21%)</title><rect x="518" y="452" width="3" height="15" fill="rgb(250,138,18)"/><text x="521.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="518" y="468" width="3" height="15" fill="rgb(249,199,25)"/><text x="521.00" y="478.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.10%)</title><rect x="521" y="372" width="1" height="15" fill="rgb(233,59,12)"/><text x="524.00" y="382.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3673) (1 samples, 0.10%)</title><rect x="521" y="388" width="1" height="15" fill="rgb(223,57,7)"/><text x="524.00" y="398.50"></text></g><g><title>PyArray_GetStridedZeroPadCopyFn (dtype_transfer.c:274) (1 samples, 0.10%)</title><rect x="521" y="404" width="1" height="15" fill="rgb(239,168,20)"/><text x="524.00" y="414.50"></text></g><g><title>PyArray_GetStridedCopyFn (lowlevel_strided_loops.c.src:366) (1 samples, 0.10%)</title><rect x="521" y="420" width="1" height="15" fill="rgb(252,165,43)"/><text x="524.00" y="430.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src:169) (1 samples, 0.10%)</title><rect x="522" y="388" width="1" height="15" fill="rgb(241,46,33)"/><text x="525.00" y="398.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (3 samples, 0.31%)</title><rect x="522" y="372" width="4" height="15" fill="rgb(238,54,14)"/><text x="525.00" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size8 (lowlevel_strided_loops.c.src:169) (2 samples, 0.21%)</title><rect x="523" y="388" width="3" height="15" fill="rgb(227,128,49)"/><text x="526.00" y="398.50"></text></g><g><title>PyArray_NewCopy (convert.c:560) (6 samples, 0.63%)</title><rect x="521" y="340" width="7" height="15" fill="rgb(238,201,29)"/><text x="524.00" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (6 samples, 0.63%)</title><rect x="521" y="356" width="7" height="15" fill="rgb(213,112,7)"/><text x="524.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (2 samples, 0.21%)</title><rect x="526" y="372" width="2" height="15" fill="rgb(227,2,25)"/><text x="529.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="527" y="388" width="1" height="15" fill="rgb(235,131,21)"/><text x="530.00" y="398.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.10%)</title><rect x="528" y="340" width="2" height="15" fill="rgb(249,99,5)"/><text x="531.00" y="350.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (12 samples, 1.26%)</title><rect x="516" y="308" width="15" height="15" fill="rgb(243,216,16)"/><text x="519.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2150) (12 samples, 1.26%)</title><rect x="516" y="324" width="15" height="15" fill="rgb(232,103,46)"/><text x="519.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="530" y="340" width="1" height="15" fill="rgb(248,219,1)"/><text x="533.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:932) (1 samples, 0.10%)</title><rect x="530" y="356" width="1" height="15" fill="rgb(239,10,12)"/><text x="533.00" y="366.50"></text></g><g><title>PyArray_Choose (item_selection.c:757) (1 samples, 0.10%)</title><rect x="531" y="308" width="1" height="15" fill="rgb(219,167,30)"/><text x="534.00" y="318.50"></text></g><g><title>0x7f1c0d6ced97 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="544" y="324" width="3" height="15" fill="rgb(246,15,27)"/><text x="547.00" y="334.50"></text></g><g><title>0x7f1c0d6cedb3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="547" y="324" width="1" height="15" fill="rgb(241,9,13)"/><text x="550.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (33 samples, 3.46%)</title><rect x="508" y="212" width="41" height="15" fill="rgb(235,82,47)"/><text x="511.00" y="222.50">_ru..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (33 samples, 3.46%)</title><rect x="508" y="228" width="41" height="15" fill="rgb(243,64,23)"/><text x="511.00" y="238.50">cho..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (28 samples, 2.94%)</title><rect x="515" y="244" width="34" height="15" fill="rgb(242,9,26)"/><text x="518.00" y="254.50">ar..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (28 samples, 2.94%)</title><rect x="515" y="260" width="34" height="15" fill="rgb(245,52,4)"/><text x="518.00" y="270.50">ch..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (27 samples, 2.83%)</title><rect x="516" y="276" width="33" height="15" fill="rgb(205,199,37)"/><text x="519.00" y="286.50">_w..</text></g><g><title>array_choose (methods.c:1224) (27 samples, 2.83%)</title><rect x="516" y="292" width="33" height="15" fill="rgb(243,143,15)"/><text x="519.00" y="302.50">ar..</text></g><g><title>PyArray_Choose (item_selection.c:788) (14 samples, 1.47%)</title><rect x="532" y="308" width="17" height="15" fill="rgb(236,221,44)"/><text x="535.00" y="318.50"></text></g><g><title>0x7f1c0d6cedbf (libc-2.29.so) (1 samples, 0.10%)</title><rect x="548" y="324" width="1" height="15" fill="rgb(208,99,0)"/><text x="551.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (3 samples, 0.31%)</title><rect x="549" y="212" width="4" height="15" fill="rgb(212,75,9)"/><text x="552.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.10%)</title><rect x="552" y="228" width="1" height="15" fill="rgb(212,214,17)"/><text x="555.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="552" y="244" width="1" height="15" fill="rgb(250,90,17)"/><text x="555.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.10%)</title><rect x="552" y="260" width="1" height="15" fill="rgb(236,117,17)"/><text x="555.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:57) (1 samples, 0.10%)</title><rect x="552" y="276" width="1" height="15" fill="rgb(225,71,26)"/><text x="555.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="553" y="244" width="1" height="15" fill="rgb(248,73,14)"/><text x="556.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="553" y="260" width="1" height="15" fill="rgb(240,180,31)"/><text x="556.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.10%)</title><rect x="553" y="276" width="1" height="15" fill="rgb(247,203,49)"/><text x="556.00" y="286.50"></text></g><g><title>array_argpartition (methods.c:1451) (1 samples, 0.10%)</title><rect x="557" y="324" width="1" height="15" fill="rgb(210,21,36)"/><text x="560.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c:1881) (1 samples, 0.10%)</title><rect x="557" y="340" width="1" height="15" fill="rgb(246,119,0)"/><text x="560.00" y="350.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1365) (1 samples, 0.10%)</title><rect x="558" y="340" width="1" height="15" fill="rgb(246,59,11)"/><text x="561.00" y="350.50"></text></g><g><title>partition_prep_kth_array (item_selection.c:1197) (1 samples, 0.10%)</title><rect x="558" y="356" width="1" height="15" fill="rgb(210,137,36)"/><text x="561.00" y="366.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.10%)</title><rect x="558" y="372" width="1" height="15" fill="rgb(220,226,53)"/><text x="561.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.10%)</title><rect x="558" y="388" width="1" height="15" fill="rgb(251,87,10)"/><text x="561.00" y="398.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.10%)</title><rect x="558" y="404" width="1" height="15" fill="rgb(219,6,5)"/><text x="561.00" y="414.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:87) (1 samples, 0.10%)</title><rect x="558" y="420" width="1" height="15" fill="rgb(217,169,48)"/><text x="561.00" y="430.50"></text></g><g><title>_aligned_strided_to_strided_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (1 samples, 0.10%)</title><rect x="558" y="436" width="1" height="15" fill="rgb(224,199,51)"/><text x="561.00" y="446.50"></text></g><g><title>_new_argsortlike (item_selection.c:1022) (1 samples, 0.10%)</title><rect x="559" y="356" width="1" height="15" fill="rgb(239,65,26)"/><text x="562.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1052) (1 samples, 0.10%)</title><rect x="560" y="356" width="2" height="15" fill="rgb(223,129,1)"/><text x="563.00" y="366.50"></text></g><g><title>_new_argsortlike (item_selection.c:1076) (1 samples, 0.10%)</title><rect x="562" y="356" width="1" height="15" fill="rgb(248,74,45)"/><text x="565.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:330) (1 samples, 0.10%)</title><rect x="563" y="372" width="1" height="15" fill="rgb(247,125,41)"/><text x="566.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1084) (2 samples, 0.21%)</title><rect x="563" y="356" width="2" height="15" fill="rgb(243,106,53)"/><text x="566.00" y="366.50"></text></g><g><title>aintroselect_float (selection.c.src:332) (1 samples, 0.10%)</title><rect x="564" y="372" width="1" height="15" fill="rgb(212,126,23)"/><text x="567.00" y="382.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;:6) (9 samples, 0.94%)</title><rect x="556" y="260" width="11" height="15" fill="rgb(238,89,17)"/><text x="559.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 0.94%)</title><rect x="556" y="276" width="11" height="15" fill="rgb(217,44,50)"/><text x="559.00" y="286.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py:819) (9 samples, 0.94%)</title><rect x="556" y="292" width="11" height="15" fill="rgb(217,26,25)"/><text x="559.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (8 samples, 0.84%)</title><rect x="557" y="308" width="10" height="15" fill="rgb(251,5,2)"/><text x="560.00" y="318.50"></text></g><g><title>array_argpartition (methods.c:1454) (7 samples, 0.73%)</title><rect x="558" y="324" width="9" height="15" fill="rgb(243,70,21)"/><text x="561.00" y="334.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c:1373) (6 samples, 0.63%)</title><rect x="559" y="340" width="8" height="15" fill="rgb(253,189,39)"/><text x="562.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.10%)</title><rect x="565" y="356" width="2" height="15" fill="rgb(237,149,42)"/><text x="568.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:34) (11 samples, 1.15%)</title><rect x="554" y="244" width="14" height="15" fill="rgb(235,93,45)"/><text x="557.00" y="254.50"></text></g><g><title>long_subtract (scalarmath.c.src:827) (1 samples, 0.10%)</title><rect x="567" y="260" width="1" height="15" fill="rgb(240,187,23)"/><text x="570.00" y="270.50"></text></g><g><title>_long_convert2_to_ctypes (scalarmath.c.src:716) (1 samples, 0.10%)</title><rect x="567" y="276" width="1" height="15" fill="rgb(205,173,5)"/><text x="570.00" y="286.50"></text></g><g><title>_long_convert_to_ctype (scalarmath.c.src:633) (1 samples, 0.10%)</title><rect x="567" y="292" width="1" height="15" fill="rgb(216,215,3)"/><text x="570.00" y="302.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.10%)</title><rect x="567" y="308" width="1" height="15" fill="rgb(226,162,49)"/><text x="570.00" y="318.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="567" y="324" width="1" height="15" fill="rgb(216,126,54)"/><text x="570.00" y="334.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.10%)</title><rect x="567" y="340" width="1" height="15" fill="rgb(216,140,1)"/><text x="570.00" y="350.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:4) (1 samples, 0.10%)</title><rect x="568" y="260" width="1" height="15" fill="rgb(251,5,38)"/><text x="571.00" y="270.50"></text></g><g><title>aquicksort_float (quicksort.c.src:165) (1 samples, 0.10%)</title><rect x="569" y="372" width="1" height="15" fill="rgb(210,117,19)"/><text x="572.00" y="382.50"></text></g><g><title>aquicksort_float (quicksort.c.src:171) (1 samples, 0.10%)</title><rect x="570" y="372" width="2" height="15" fill="rgb(231,225,48)"/><text x="573.00" y="382.50"></text></g><g><title>aquicksort_float (quicksort.c.src:217) (1 samples, 0.10%)</title><rect x="572" y="372" width="1" height="15" fill="rgb(229,77,12)"/><text x="575.00" y="382.50"></text></g><g><title>aquicksort_float (quicksort.c.src:222) (1 samples, 0.10%)</title><rect x="573" y="372" width="1" height="15" fill="rgb(216,35,18)"/><text x="576.00" y="382.50"></text></g><g><title>_new_argsortlike (item_selection.c:1064) (5 samples, 0.52%)</title><rect x="569" y="356" width="6" height="15" fill="rgb(249,179,1)"/><text x="572.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src:223) (1 samples, 0.10%)</title><rect x="574" y="372" width="1" height="15" fill="rgb(211,40,48)"/><text x="577.00" y="382.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (6 samples, 0.63%)</title><rect x="569" y="260" width="8" height="15" fill="rgb(226,82,16)"/><text x="572.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 0.63%)</title><rect x="569" y="276" width="8" height="15" fill="rgb(231,99,31)"/><text x="572.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (6 samples, 0.63%)</title><rect x="569" y="292" width="8" height="15" fill="rgb(216,208,27)"/><text x="572.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (6 samples, 0.63%)</title><rect x="569" y="308" width="8" height="15" fill="rgb(252,11,23)"/><text x="572.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1395) (6 samples, 0.63%)</title><rect x="569" y="324" width="8" height="15" fill="rgb(236,212,54)"/><text x="572.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c:1322) (6 samples, 0.63%)</title><rect x="569" y="340" width="8" height="15" fill="rgb(216,158,8)"/><text x="572.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c:1101) (1 samples, 0.10%)</title><rect x="575" y="356" width="2" height="15" fill="rgb(231,205,7)"/><text x="578.00" y="366.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.10%)</title><rect x="577" y="276" width="1" height="15" fill="rgb(233,16,1)"/><text x="580.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.10%)</title><rect x="577" y="292" width="1" height="15" fill="rgb(227,4,34)"/><text x="580.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:465) (1 samples, 0.10%)</title><rect x="577" y="308" width="1" height="15" fill="rgb(231,182,32)"/><text x="580.00" y="318.50"></text></g><g><title>npyiter_allocate_transfer_functions (nditer_constr.c:3168) (1 samples, 0.10%)</title><rect x="577" y="324" width="1" height="15" fill="rgb(241,187,50)"/><text x="580.00" y="334.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3451) (1 samples, 0.10%)</title><rect x="577" y="340" width="1" height="15" fill="rgb(245,60,26)"/><text x="580.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.31%)</title><rect x="577" y="260" width="3" height="15" fill="rgb(213,123,15)"/><text x="580.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (2 samples, 0.21%)</title><rect x="578" y="276" width="2" height="15" fill="rgb(207,36,36)"/><text x="581.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (2 samples, 0.21%)</title><rect x="578" y="292" width="2" height="15" fill="rgb(220,149,9)"/><text x="581.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (2 samples, 0.21%)</title><rect x="578" y="308" width="2" height="15" fill="rgb(246,62,48)"/><text x="581.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (2 samples, 0.21%)</title><rect x="578" y="324" width="2" height="15" fill="rgb(216,209,25)"/><text x="581.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="578" y="340" width="2" height="15" fill="rgb(254,205,45)"/><text x="581.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.21%)</title><rect x="578" y="356" width="2" height="15" fill="rgb(230,142,33)"/><text x="581.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2493) (1 samples, 0.10%)</title><rect x="580" y="276" width="2" height="15" fill="rgb(252,89,44)"/><text x="583.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="580" y="292" width="2" height="15" fill="rgb(218,86,51)"/><text x="583.00" y="302.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2515) (2 samples, 0.21%)</title><rect x="582" y="276" width="2" height="15" fill="rgb(222,9,7)"/><text x="585.00" y="286.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.10%)</title><rect x="584" y="276" width="1" height="15" fill="rgb(249,129,3)"/><text x="587.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:110) (2 samples, 0.21%)</title><rect x="585" y="292" width="3" height="15" fill="rgb(239,0,41)"/><text x="588.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1666) (7 samples, 0.73%)</title><rect x="580" y="260" width="9" height="15" fill="rgb(228,17,9)"/><text x="583.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (3 samples, 0.31%)</title><rect x="585" y="276" width="4" height="15" fill="rgb(222,51,19)"/><text x="588.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.10%)</title><rect x="588" y="292" width="1" height="15" fill="rgb(225,184,43)"/><text x="591.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1564) (2 samples, 0.21%)</title><rect x="589" y="276" width="2" height="15" fill="rgb(247,5,38)"/><text x="592.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1566) (1 samples, 0.10%)</title><rect x="591" y="276" width="2" height="15" fill="rgb(247,207,25)"/><text x="594.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.10%)</title><rect x="593" y="276" width="1" height="15" fill="rgb(212,60,5)"/><text x="596.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (3 samples, 0.31%)</title><rect x="594" y="276" width="4" height="15" fill="rgb(252,215,16)"/><text x="597.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1676) (9 samples, 0.94%)</title><rect x="589" y="260" width="11" height="15" fill="rgb(223,188,24)"/><text x="592.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (2 samples, 0.21%)</title><rect x="598" y="276" width="2" height="15" fill="rgb(222,85,46)"/><text x="601.00" y="286.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src:1055) (1 samples, 0.10%)</title><rect x="600" y="356" width="1" height="15" fill="rgb(221,15,49)"/><text x="603.00" y="366.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (28 samples, 2.94%)</title><rect x="568" y="244" width="35" height="15" fill="rgb(221,219,25)"/><text x="571.00" y="254.50">to..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="600" y="260" width="3" height="15" fill="rgb(231,229,28)"/><text x="603.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="600" y="276" width="3" height="15" fill="rgb(230,202,19)"/><text x="603.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1670) (2 samples, 0.21%)</title><rect x="600" y="292" width="3" height="15" fill="rgb(234,45,35)"/><text x="603.00" y="302.50"></text></g><g><title>trivial_two_operand_loop (ufunc_object.c:1354) (2 samples, 0.21%)</title><rect x="600" y="308" width="3" height="15" fill="rgb(246,11,32)"/><text x="603.00" y="318.50"></text></g><g><title>FLOAT_negative (loops.c.src:1999) (2 samples, 0.21%)</title><rect x="600" y="324" width="3" height="15" fill="rgb(229,3,17)"/><text x="603.00" y="334.50"></text></g><g><title>run_unary_simd_negative_FLOAT (simd.inc.src:195) (2 samples, 0.21%)</title><rect x="600" y="340" width="3" height="15" fill="rgb(229,7,40)"/><text x="603.00" y="350.50"></text></g><g><title>sse2_negative_FLOAT (simd.inc.src:1057) (1 samples, 0.10%)</title><rect x="601" y="356" width="2" height="15" fill="rgb(209,212,5)"/><text x="604.00" y="366.50"></text></g><g><title>_mm_store_ps (xmmintrin.h:947) (1 samples, 0.10%)</title><rect x="601" y="372" width="2" height="15" fill="rgb(222,64,7)"/><text x="604.00" y="382.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1020) (1 samples, 0.10%)</title><rect x="603" y="340" width="1" height="15" fill="rgb(224,218,27)"/><text x="606.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.31%)</title><rect x="603" y="260" width="3" height="15" fill="rgb(249,72,8)"/><text x="606.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (3 samples, 0.31%)</title><rect x="603" y="276" width="3" height="15" fill="rgb(243,224,31)"/><text x="606.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (3 samples, 0.31%)</title><rect x="603" y="292" width="3" height="15" fill="rgb(234,113,29)"/><text x="606.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (3 samples, 0.31%)</title><rect x="603" y="308" width="3" height="15" fill="rgb(245,54,41)"/><text x="606.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2515) (3 samples, 0.31%)</title><rect x="603" y="324" width="3" height="15" fill="rgb(244,69,49)"/><text x="606.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src:1024) (2 samples, 0.21%)</title><rect x="604" y="340" width="2" height="15" fill="rgb(206,90,24)"/><text x="607.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src:226) (2 samples, 0.21%)</title><rect x="604" y="356" width="2" height="15" fill="rgb(234,48,26)"/><text x="607.00" y="366.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2516) (1 samples, 0.10%)</title><rect x="606" y="276" width="2" height="15" fill="rgb(207,91,18)"/><text x="609.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.21%)</title><rect x="606" y="260" width="3" height="15" fill="rgb(223,12,30)"/><text x="609.00" y="270.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2517) (1 samples, 0.10%)</title><rect x="608" y="276" width="1" height="15" fill="rgb(212,36,25)"/><text x="611.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h:126) (1 samples, 0.10%)</title><rect x="608" y="292" width="1" height="15" fill="rgb(229,195,31)"/><text x="611.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1577) (1 samples, 0.10%)</title><rect x="609" y="276" width="1" height="15" fill="rgb(212,191,25)"/><text x="612.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1584) (1 samples, 0.10%)</title><rect x="610" y="276" width="1" height="15" fill="rgb(206,11,27)"/><text x="613.00" y="286.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1593) (2 samples, 0.21%)</title><rect x="611" y="276" width="3" height="15" fill="rgb(216,100,17)"/><text x="614.00" y="286.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (50 samples, 5.25%)</title><rect x="553" y="228" width="62" height="15" fill="rgb(240,215,23)"/><text x="556.00" y="238.50">_commo..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (10 samples, 1.05%)</title><rect x="603" y="244" width="12" height="15" fill="rgb(212,16,51)"/><text x="606.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1676) (5 samples, 0.52%)</title><rect x="609" y="260" width="6" height="15" fill="rgb(252,47,39)"/><text x="612.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1609) (1 samples, 0.10%)</title><rect x="614" y="276" width="1" height="15" fill="rgb(210,46,30)"/><text x="617.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (51 samples, 5.35%)</title><rect x="553" y="212" width="63" height="15" fill="rgb(244,25,14)"/><text x="556.00" y="222.50">_run (..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (1 samples, 0.10%)</title><rect x="615" y="228" width="1" height="15" fill="rgb(221,38,20)"/><text x="618.00" y="238.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (265 samples, 27.81%)</title><rect x="289" y="196" width="328" height="15" fill="rgb(225,152,36)"/><text x="292.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py:118)</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.10%)</title><rect x="616" y="212" width="1" height="15" fill="rgb(217,135,5)"/><text x="619.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.10%)</title><rect x="616" y="228" width="1" height="15" fill="rgb(222,189,0)"/><text x="619.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.10%)</title><rect x="616" y="244" width="1" height="15" fill="rgb(229,81,38)"/><text x="619.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.10%)</title><rect x="620" y="292" width="1" height="15" fill="rgb(233,115,7)"/><text x="623.00" y="302.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (3 samples, 0.31%)</title><rect x="619" y="260" width="3" height="15" fill="rgb(233,107,10)"/><text x="622.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="620" y="276" width="2" height="15" fill="rgb(220,28,41)"/><text x="623.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.10%)</title><rect x="621" y="292" width="1" height="15" fill="rgb(248,29,26)"/><text x="624.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (1 samples, 0.10%)</title><rect x="621" y="308" width="1" height="15" fill="rgb(228,167,24)"/><text x="624.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.10%)</title><rect x="621" y="324" width="1" height="15" fill="rgb(253,69,15)"/><text x="624.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (1 samples, 0.10%)</title><rect x="621" y="340" width="1" height="15" fill="rgb(239,226,10)"/><text x="624.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:247) (1 samples, 0.10%)</title><rect x="621" y="356" width="1" height="15" fill="rgb(228,152,22)"/><text x="624.00" y="366.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:571) (1 samples, 0.10%)</title><rect x="622" y="308" width="2" height="15" fill="rgb(210,65,17)"/><text x="625.00" y="318.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (2 samples, 0.21%)</title><rect x="622" y="260" width="3" height="15" fill="rgb(213,115,16)"/><text x="625.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (2 samples, 0.21%)</title><rect x="622" y="276" width="3" height="15" fill="rgb(207,191,23)"/><text x="625.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.21%)</title><rect x="622" y="292" width="3" height="15" fill="rgb(234,176,29)"/><text x="625.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.10%)</title><rect x="624" y="308" width="1" height="15" fill="rgb(228,90,19)"/><text x="627.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (7 samples, 0.73%)</title><rect x="617" y="196" width="9" height="15" fill="rgb(227,100,48)"/><text x="620.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (7 samples, 0.73%)</title><rect x="617" y="212" width="9" height="15" fill="rgb(227,117,20)"/><text x="620.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (6 samples, 0.63%)</title><rect x="619" y="228" width="7" height="15" fill="rgb(233,102,47)"/><text x="622.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (6 samples, 0.63%)</title><rect x="619" y="244" width="7" height="15" fill="rgb(244,185,26)"/><text x="622.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (1 samples, 0.10%)</title><rect x="625" y="260" width="1" height="15" fill="rgb(225,26,20)"/><text x="628.00" y="270.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.10%)</title><rect x="625" y="276" width="1" height="15" fill="rgb(241,117,51)"/><text x="628.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.10%)</title><rect x="625" y="292" width="1" height="15" fill="rgb(219,40,24)"/><text x="628.00" y="302.50"></text></g><g><title>0x7f1bce14754f (?) (1 samples, 0.10%)</title><rect x="626" y="244" width="1" height="15" fill="rgb(232,85,51)"/><text x="629.00" y="254.50"></text></g><g><title>0x7f1bce14d65e (?) (1 samples, 0.10%)</title><rect x="626" y="260" width="1" height="15" fill="rgb(242,102,45)"/><text x="629.00" y="270.50"></text></g><g><title>0x7f1bce14d50f (?) (1 samples, 0.10%)</title><rect x="626" y="276" width="1" height="15" fill="rgb(247,208,17)"/><text x="629.00" y="286.50"></text></g><g><title>0x7f1bce153d6c (?) (1 samples, 0.10%)</title><rect x="626" y="292" width="1" height="15" fill="rgb(238,157,50)"/><text x="629.00" y="302.50"></text></g><g><title>0x7f1bd76b4ab9 (?) (1 samples, 0.10%)</title><rect x="626" y="308" width="1" height="15" fill="rgb(236,68,5)"/><text x="629.00" y="318.50"></text></g><g><title>0x7f1bd76b5ea0 (?) (1 samples, 0.10%)</title><rect x="626" y="324" width="1" height="15" fill="rgb(236,78,35)"/><text x="629.00" y="334.50"></text></g><g><title>0x7f1bd76b5ea0 (libgomp.so.1.0.0) (3 samples, 0.31%)</title><rect x="629" y="484" width="3" height="15" fill="rgb(226,73,40)"/><text x="632.00" y="494.50"></text></g><g><title>0x7f1bd76b5ea9 (libgomp.so.1.0.0) (5 samples, 0.52%)</title><rect x="632" y="484" width="7" height="15" fill="rgb(234,179,17)"/><text x="635.00" y="494.50"></text></g><g><title>0x7f1bd76b5eab (libgomp.so.1.0.0) (12 samples, 1.26%)</title><rect x="639" y="484" width="14" height="15" fill="rgb(246,140,5)"/><text x="642.00" y="494.50"></text></g><g><title>0x7f1bd76b4ab9 (libgomp.so.1.0.0) (34 samples, 3.57%)</title><rect x="629" y="468" width="42" height="15" fill="rgb(226,86,13)"/><text x="632.00" y="478.50">0x7..</text></g><g><title>0x7f1bd76b5ead (libgomp.so.1.0.0) (14 samples, 1.47%)</title><rect x="653" y="484" width="18" height="15" fill="rgb(234,101,42)"/><text x="656.00" y="494.50"></text></g><g><title>0x7f1bd76b5cf9 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="671" y="500" width="1" height="15" fill="rgb(254,72,45)"/><text x="674.00" y="510.50"></text></g><g><title>0x7f1bd76b5cfb (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="672" y="500" width="2" height="15" fill="rgb(216,70,54)"/><text x="675.00" y="510.50"></text></g><g><title>0x7f1bd76b5cfd (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="674" y="500" width="2" height="15" fill="rgb(212,144,8)"/><text x="677.00" y="510.50"></text></g><g><title>0x7f1bd76b3daa (libgomp.so.1.0.0) (6 samples, 0.63%)</title><rect x="671" y="484" width="7" height="15" fill="rgb(220,127,19)"/><text x="674.00" y="494.50"></text></g><g><title>0x7f1bd76b5d6d (libgomp.so.1.0.0) (2 samples, 0.21%)</title><rect x="676" y="500" width="2" height="15" fill="rgb(224,31,6)"/><text x="679.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (43 samples, 4.51%)</title><rect x="626" y="196" width="53" height="15" fill="rgb(208,129,48)"/><text x="629.00" y="206.50">run (..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 4.51%)</title><rect x="626" y="212" width="53" height="15" fill="rgb(221,71,27)"/><text x="629.00" y="222.50">run (..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (43 samples, 4.51%)</title><rect x="626" y="228" width="53" height="15" fill="rgb(250,196,39)"/><text x="629.00" y="238.50">_run ..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (42 samples, 4.41%)</title><rect x="627" y="244" width="52" height="15" fill="rgb(234,78,6)"/><text x="630.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (42 samples, 4.41%)</title><rect x="627" y="260" width="52" height="15" fill="rgb(251,219,2)"/><text x="630.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (42 samples, 4.41%)</title><rect x="627" y="276" width="52" height="15" fill="rgb(224,129,44)"/><text x="630.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (42 samples, 4.41%)</title><rect x="627" y="292" width="52" height="15" fill="rgb(238,180,14)"/><text x="630.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (42 samples, 4.41%)</title><rect x="627" y="308" width="52" height="15" fill="rgb(237,190,45)"/><text x="630.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (42 samples, 4.41%)</title><rect x="627" y="324" width="52" height="15" fill="rgb(230,135,53)"/><text x="630.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (42 samples, 4.41%)</title><rect x="627" y="340" width="52" height="15" fill="rgb(245,215,27)"/><text x="630.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (42 samples, 4.41%)</title><rect x="627" y="356" width="52" height="15" fill="rgb(245,97,24)"/><text x="630.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (42 samples, 4.41%)</title><rect x="627" y="372" width="52" height="15" fill="rgb(215,201,15)"/><text x="630.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (42 samples, 4.41%)</title><rect x="627" y="388" width="52" height="15" fill="rgb(224,161,46)"/><text x="630.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (42 samples, 4.41%)</title><rect x="627" y="404" width="52" height="15" fill="rgb(211,124,54)"/><text x="630.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (42 samples, 4.41%)</title><rect x="627" y="420" width="52" height="15" fill="rgb(243,141,12)"/><text x="630.00" y="430.50">Runti..</text></g><g><title>pybind11::array::size (numpy.h:619) (42 samples, 4.41%)</title><rect x="627" y="436" width="52" height="15" fill="rgb(212,45,53)"/><text x="630.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (42 samples, 4.41%)</title><rect x="627" y="452" width="52" height="15" fill="rgb(245,99,39)"/><text x="630.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (7 samples, 0.73%)</title><rect x="671" y="468" width="8" height="15" fill="rgb(240,96,16)"/><text x="674.00" y="478.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:371) (1 samples, 0.10%)</title><rect x="678" y="484" width="1" height="15" fill="rgb(225,7,19)"/><text x="681.00" y="494.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h:656) (1 samples, 0.10%)</title><rect x="678" y="500" width="1" height="15" fill="rgb(222,229,19)"/><text x="681.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:569) (1 samples, 0.10%)</title><rect x="678" y="516" width="1" height="15" fill="rgb(220,220,19)"/><text x="681.00" y="526.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="679" y="276" width="2" height="15" fill="rgb(211,204,1)"/><text x="682.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="679" y="292" width="2" height="15" fill="rgb(218,52,39)"/><text x="682.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.10%)</title><rect x="679" y="308" width="2" height="15" fill="rgb(214,228,12)"/><text x="682.00" y="318.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.10%)</title><rect x="679" y="324" width="2" height="15" fill="rgb(244,142,10)"/><text x="682.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.10%)</title><rect x="679" y="340" width="2" height="15" fill="rgb(243,91,49)"/><text x="682.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1041) (1 samples, 0.10%)</title><rect x="679" y="356" width="2" height="15" fill="rgb(205,71,28)"/><text x="682.00" y="366.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.21%)</title><rect x="679" y="196" width="3" height="15" fill="rgb(251,130,51)"/><text x="682.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (2 samples, 0.21%)</title><rect x="679" y="212" width="3" height="15" fill="rgb(250,183,27)"/><text x="682.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="679" y="228" width="3" height="15" fill="rgb(248,29,4)"/><text x="682.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="679" y="244" width="3" height="15" fill="rgb(235,149,16)"/><text x="682.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.21%)</title><rect x="679" y="260" width="3" height="15" fill="rgb(250,33,53)"/><text x="682.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.10%)</title><rect x="681" y="276" width="1" height="15" fill="rgb(247,149,30)"/><text x="684.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:295) (1 samples, 0.10%)</title><rect x="681" y="292" width="1" height="15" fill="rgb(254,5,7)"/><text x="684.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.10%)</title><rect x="682" y="244" width="1" height="15" fill="rgb(205,103,13)"/><text x="685.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.10%)</title><rect x="682" y="260" width="1" height="15" fill="rgb(246,199,45)"/><text x="685.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.10%)</title><rect x="682" y="276" width="1" height="15" fill="rgb(251,109,45)"/><text x="685.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.10%)</title><rect x="682" y="292" width="1" height="15" fill="rgb(217,126,11)"/><text x="685.00" y="302.50"></text></g><g><title>0x7f1c0d6c4e50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="682" y="308" width="1" height="15" fill="rgb(242,121,26)"/><text x="685.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.10%)</title><rect x="683" y="276" width="1" height="15" fill="rgb(222,216,50)"/><text x="686.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.10%)</title><rect x="683" y="292" width="1" height="15" fill="rgb(230,157,2)"/><text x="686.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.10%)</title><rect x="683" y="308" width="1" height="15" fill="rgb(232,57,43)"/><text x="686.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:3047) (1 samples, 0.10%)</title><rect x="683" y="324" width="1" height="15" fill="rgb(252,208,41)"/><text x="686.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (323 samples, 33.89%)</title><rect x="286" y="180" width="400" height="15" fill="rgb(217,131,42)"/><text x="289.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (3 samples, 0.31%)</title><rect x="682" y="196" width="4" height="15" fill="rgb(206,13,20)"/><text x="685.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (3 samples, 0.31%)</title><rect x="682" y="212" width="4" height="15" fill="rgb(243,189,6)"/><text x="685.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (3 samples, 0.31%)</title><rect x="682" y="228" width="4" height="15" fill="rgb(205,149,26)"/><text x="685.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.21%)</title><rect x="683" y="244" width="3" height="15" fill="rgb(251,71,23)"/><text x="686.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.21%)</title><rect x="683" y="260" width="3" height="15" fill="rgb(232,64,22)"/><text x="686.00" y="270.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.10%)</title><rect x="684" y="276" width="2" height="15" fill="rgb(206,59,53)"/><text x="687.00" y="286.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:799) (1 samples, 0.10%)</title><rect x="684" y="292" width="2" height="15" fill="rgb(244,132,35)"/><text x="687.00" y="302.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.10%)</title><rect x="684" y="308" width="2" height="15" fill="rgb(232,72,46)"/><text x="687.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (2 samples, 0.21%)</title><rect x="686" y="180" width="2" height="15" fill="rgb(247,58,32)"/><text x="689.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (341 samples, 35.78%)</title><rect x="274" y="164" width="423" height="15" fill="rgb(219,29,51)"/><text x="277.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 0.73%)</title><rect x="688" y="180" width="9" height="15" fill="rgb(249,88,23)"/><text x="691.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.10%)</title><rect x="697" y="164" width="1" height="15" fill="rgb(240,175,37)"/><text x="700.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c:523) (1 samples, 0.10%)</title><rect x="698" y="164" width="1" height="15" fill="rgb(235,89,53)"/><text x="701.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:61) (347 samples, 36.41%)</title><rect x="271" y="52" width="429" height="15" fill="rgb(237,225,11)"/><text x="274.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estim..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:60) (347 samples, 36.41%)</title><rect x="271" y="68" width="429" height="15" fill="rgb(235,201,39)"/><text x="274.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_e..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:37) (346 samples, 36.31%)</title><rect x="272" y="84" width="428" height="15" fill="rgb(221,4,47)"/><text x="275.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:31) (346 samples, 36.31%)</title><rect x="272" y="100" width="428" height="15" fill="rgb(234,181,35)"/><text x="275.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estima..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (346 samples, 36.31%)</title><rect x="272" y="116" width="428" height="15" fill="rgb(207,157,50)"/><text x="275.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:18..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (346 samples, 36.31%)</title><rect x="272" y="132" width="428" height="15" fill="rgb(216,224,22)"/><text x="275.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (345 samples, 36.20%)</title><rect x="273" y="148" width="427" height="15" fill="rgb(233,100,40)"/><text x="276.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.10%)</title><rect x="699" y="164" width="1" height="15" fill="rgb(217,160,11)"/><text x="702.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.10%)</title><rect x="699" y="180" width="1" height="15" fill="rgb(236,12,35)"/><text x="702.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.10%)</title><rect x="702" y="148" width="1" height="15" fill="rgb(223,138,22)"/><text x="705.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.10%)</title><rect x="703" y="196" width="1" height="15" fill="rgb(218,62,31)"/><text x="706.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.10%)</title><rect x="703" y="212" width="1" height="15" fill="rgb(222,192,8)"/><text x="706.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="703" y="228" width="1" height="15" fill="rgb(232,191,52)"/><text x="706.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="703" y="244" width="1" height="15" fill="rgb(206,226,27)"/><text x="706.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="703" y="260" width="1" height="15" fill="rgb(250,24,27)"/><text x="706.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="703" y="276" width="1" height="15" fill="rgb(242,16,54)"/><text x="706.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="703" y="292" width="1" height="15" fill="rgb(247,159,54)"/><text x="706.00" y="302.50"></text></g><g><title>0x7f1bcd6ecff9 (?) (1 samples, 0.10%)</title><rect x="704" y="212" width="1" height="15" fill="rgb(210,220,17)"/><text x="707.00" y="222.50"></text></g><g><title>0x7f1bcd6e7ef6 (?) (1 samples, 0.10%)</title><rect x="704" y="228" width="1" height="15" fill="rgb(243,68,8)"/><text x="707.00" y="238.50"></text></g><g><title>0x7f1bcd6dc962 (?) (1 samples, 0.10%)</title><rect x="704" y="244" width="1" height="15" fill="rgb(231,175,33)"/><text x="707.00" y="254.50"></text></g><g><title>0x7f1bcd7107a7 (?) (1 samples, 0.10%)</title><rect x="704" y="260" width="1" height="15" fill="rgb(225,26,49)"/><text x="707.00" y="270.50"></text></g><g><title>0x7f1bcd710379 (?) (1 samples, 0.10%)</title><rect x="704" y="276" width="1" height="15" fill="rgb(251,2,3)"/><text x="707.00" y="286.50"></text></g><g><title>0x7f1bcdb6e8b8 (?) (1 samples, 0.10%)</title><rect x="704" y="292" width="1" height="15" fill="rgb(252,132,2)"/><text x="707.00" y="302.50"></text></g><g><title>0x7f1bcdb6cc7f (?) (1 samples, 0.10%)</title><rect x="704" y="308" width="1" height="15" fill="rgb(245,196,49)"/><text x="707.00" y="318.50"></text></g><g><title>0x7f1bcdb7f99c (?) (1 samples, 0.10%)</title><rect x="704" y="324" width="1" height="15" fill="rgb(246,182,3)"/><text x="707.00" y="334.50"></text></g><g><title>0x7f1bcd8a6dc2 (?) (1 samples, 0.10%)</title><rect x="704" y="340" width="1" height="15" fill="rgb(236,138,22)"/><text x="707.00" y="350.50"></text></g><g><title>0x7f1bcd8a665b (?) (1 samples, 0.10%)</title><rect x="704" y="356" width="1" height="15" fill="rgb(205,151,21)"/><text x="707.00" y="366.50"></text></g><g><title>0x7f1bcd8a62a6 (?) (1 samples, 0.10%)</title><rect x="704" y="372" width="1" height="15" fill="rgb(254,110,10)"/><text x="707.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="704" y="388" width="1" height="15" fill="rgb(244,137,26)"/><text x="707.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="704" y="404" width="1" height="15" fill="rgb(233,217,12)"/><text x="707.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="707" y="292" width="1" height="15" fill="rgb(205,131,32)"/><text x="710.00" y="302.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.05%)</title><rect x="708" y="340" width="12" height="15" fill="rgb(217,81,26)"/><text x="711.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.73%)</title><rect x="712" y="356" width="8" height="15" fill="rgb(219,177,46)"/><text x="715.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Input&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="719" y="372" width="1" height="15" fill="rgb(249,174,6)"/><text x="722.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="719" y="388" width="1" height="15" fill="rgb(241,196,29)"/><text x="722.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="719" y="404" width="1" height="15" fill="rgb(209,192,28)"/><text x="722.00" y="414.50"></text></g><g><title>onnxruntime::Cast&lt;bool&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="720" y="340" width="3" height="15" fill="rgb(207,197,17)"/><text x="723.00" y="350.50"></text></g><g><title>0x7f1c0d6ced50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="729" y="372" width="1" height="15" fill="rgb(242,119,53)"/><text x="732.00" y="382.50"></text></g><g><title>0x7f1c0d6cedc3 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="730" y="372" width="3" height="15" fill="rgb(254,217,48)"/><text x="733.00" y="382.50"></text></g><g><title>0x7f1c0d6cedc9 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="733" y="372" width="2" height="15" fill="rgb(229,22,22)"/><text x="736.00" y="382.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.15%)</title><rect x="723" y="340" width="13" height="15" fill="rgb(218,115,33)"/><text x="726.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::ComputeImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.15%)</title><rect x="723" y="356" width="13" height="15" fill="rgb(222,70,12)"/><text x="726.00" y="366.50"></text></g><g><title>0x7f1c0d6cedcb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="735" y="372" width="1" height="15" fill="rgb(230,5,24)"/><text x="738.00" y="382.50"></text></g><g><title>(anonymous namespace)::CopySlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="739" y="356" width="2" height="15" fill="rgb(251,215,4)"/><text x="742.00" y="366.50"></text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.15%)</title><rect x="741" y="356" width="14" height="15" fill="rgb(231,134,6)"/><text x="744.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 1.68%)</title><rect x="736" y="340" width="20" height="15" fill="rgb(234,9,5)"/><text x="739.00" y="350.50"></text></g><g><title>0x7f1c0d6ae982 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="755" y="356" width="1" height="15" fill="rgb(220,227,15)"/><text x="758.00" y="366.50"></text></g><g><title>0x7f1c0d6ced50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="759" y="356" width="1" height="15" fill="rgb(237,21,14)"/><text x="762.00" y="366.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.52%)</title><rect x="756" y="340" width="6" height="15" fill="rgb(216,177,42)"/><text x="759.00" y="350.50"></text></g><g><title>onnxruntime::parse_and_validate_indices_tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.21%)</title><rect x="760" y="356" width="2" height="15" fill="rgb(212,103,11)"/><text x="763.00" y="366.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="762" y="340" width="2" height="15" fill="rgb(205,150,34)"/><text x="765.00" y="350.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="764" y="340" width="1" height="15" fill="rgb(229,48,19)"/><text x="767.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="764" y="356" width="1" height="15" fill="rgb(248,119,42)"/><text x="767.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="764" y="372" width="1" height="15" fill="rgb(231,125,13)"/><text x="767.00" y="382.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="765" y="340" width="5" height="15" fill="rgb(243,138,12)"/><text x="768.00" y="350.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="765" y="356" width="5" height="15" fill="rgb(217,51,11)"/><text x="768.00" y="366.50"></text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.42%)</title><rect x="765" y="372" width="5" height="15" fill="rgb(208,32,52)"/><text x="768.00" y="382.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="769" y="388" width="1" height="15" fill="rgb(233,210,26)"/><text x="772.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="770" y="340" width="1" height="15" fill="rgb(234,7,0)"/><text x="773.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="770" y="356" width="1" height="15" fill="rgb(233,49,42)"/><text x="773.00" y="366.50"></text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="771" y="340" width="1" height="15" fill="rgb(206,31,31)"/><text x="774.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="771" y="356" width="1" height="15" fill="rgb(213,166,22)"/><text x="774.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="771" y="372" width="1" height="15" fill="rgb(212,82,43)"/><text x="774.00" y="382.50"></text></g><g><title>0x7f1c0d880dd0 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="804" y="388" width="2" height="15" fill="rgb(246,79,33)"/><text x="807.00" y="398.50"></text></g><g><title>0x7f1c0d880ec6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="806" y="388" width="1" height="15" fill="rgb(207,2,13)"/><text x="809.00" y="398.50"></text></g><g><title>0x7f1c0d880ece (libm-2.29.so) (1 samples, 0.10%)</title><rect x="807" y="388" width="1" height="15" fill="rgb(221,192,46)"/><text x="810.00" y="398.50"></text></g><g><title>0x7f1c0d880ee6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="808" y="388" width="1" height="15" fill="rgb(239,10,31)"/><text x="811.00" y="398.50"></text></g><g><title>0x7f1c0d880eee (libm-2.29.so) (1 samples, 0.10%)</title><rect x="809" y="388" width="2" height="15" fill="rgb(252,18,39)"/><text x="812.00" y="398.50"></text></g><g><title>0x7f1c0d880ef6 (libm-2.29.so) (1 samples, 0.10%)</title><rect x="811" y="388" width="1" height="15" fill="rgb(209,30,54)"/><text x="814.00" y="398.50"></text></g><g><title>0x7f1c0d880efa (libm-2.29.so) (1 samples, 0.10%)</title><rect x="812" y="388" width="1" height="15" fill="rgb(210,76,15)"/><text x="815.00" y="398.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 0.84%)</title><rect x="813" y="388" width="10" height="15" fill="rgb(217,75,25)"/><text x="816.00" y="398.50"></text></g><g><title>0x7f1c0d6ae92c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="834" y="404" width="1" height="15" fill="rgb(247,199,21)"/><text x="837.00" y="414.50"></text></g><g><title>0x7f1c0d6ae945 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="835" y="404" width="2" height="15" fill="rgb(254,166,47)"/><text x="838.00" y="414.50"></text></g><g><title>0x7f1c0d6aea4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="837" y="404" width="1" height="15" fill="rgb(246,144,10)"/><text x="840.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.21%)</title><rect x="838" y="404" width="2" height="15" fill="rgb(230,49,9)"/><text x="841.00" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 6.72%)</title><rect x="772" y="340" width="79" height="15" fill="rgb(217,78,45)"/><text x="775.00" y="350.50">onnxrunti..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 6.72%)</title><rect x="772" y="356" width="79" height="15" fill="rgb(209,84,10)"/><text x="775.00" y="366.50">onnxrunti..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 6.72%)</title><rect x="772" y="372" width="79" height="15" fill="rgb(236,74,7)"/><text x="775.00" y="382.50">onnxrunti..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.41%)</title><rect x="823" y="388" width="28" height="15" fill="rgb(233,222,11)"/><text x="826.00" y="398.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.94%)</title><rect x="840" y="404" width="11" height="15" fill="rgb(240,175,23)"/><text x="843.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.84%)</title><rect x="842" y="420" width="9" height="15" fill="rgb(227,193,38)"/><text x="845.00" y="430.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="851" y="340" width="2" height="15" fill="rgb(205,85,48)"/><text x="854.00" y="350.50"></text></g><g><title>0x7f1bcd6b40f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="901" y="356" width="1" height="15" fill="rgb(250,14,44)"/><text x="904.00" y="366.50"></text></g><g><title>0x7f1bfd17b7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="902" y="356" width="1" height="15" fill="rgb(208,180,19)"/><text x="905.00" y="366.50"></text></g><g><title>0x7f1c0d6ae906 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="903" y="356" width="2" height="15" fill="rgb(221,175,47)"/><text x="906.00" y="366.50"></text></g><g><title>0x7f1c0d6ae91c (libc-2.29.so) (2 samples, 0.21%)</title><rect x="905" y="356" width="2" height="15" fill="rgb(252,4,39)"/><text x="908.00" y="366.50"></text></g><g><title>0x7f1c0d6ae91e (libc-2.29.so) (3 samples, 0.31%)</title><rect x="907" y="356" width="4" height="15" fill="rgb(214,101,11)"/><text x="910.00" y="366.50"></text></g><g><title>0x7f1c0d6ae922 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="911" y="356" width="1" height="15" fill="rgb(206,166,44)"/><text x="914.00" y="366.50"></text></g><g><title>0x7f1c0d6ae929 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="912" y="356" width="1" height="15" fill="rgb(244,37,16)"/><text x="915.00" y="366.50"></text></g><g><title>0x7f1c0d6ae93b (libc-2.29.so) (2 samples, 0.21%)</title><rect x="913" y="356" width="3" height="15" fill="rgb(212,43,47)"/><text x="916.00" y="366.50"></text></g><g><title>0x7f1c0d6ae945 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="916" y="356" width="1" height="15" fill="rgb(249,102,43)"/><text x="919.00" y="366.50"></text></g><g><title>0x7f1c0d6ae965 (libc-2.29.so) (3 samples, 0.31%)</title><rect x="917" y="356" width="4" height="15" fill="rgb(235,158,15)"/><text x="920.00" y="366.50"></text></g><g><title>0x7f1c0d6ae97c (libc-2.29.so) (3 samples, 0.31%)</title><rect x="921" y="356" width="4" height="15" fill="rgb(254,133,17)"/><text x="924.00" y="366.50"></text></g><g><title>0x7f1c0d6ae991 (libc-2.29.so) (7 samples, 0.73%)</title><rect x="925" y="356" width="8" height="15" fill="rgb(231,33,1)"/><text x="928.00" y="366.50"></text></g><g><title>0x7f1c0d6ae998 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="933" y="356" width="1" height="15" fill="rgb(210,64,1)"/><text x="936.00" y="366.50"></text></g><g><title>0x7f1c0d6aea41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="934" y="356" width="2" height="15" fill="rgb(215,18,34)"/><text x="937.00" y="366.50"></text></g><g><title>0x7f1c0d6aea4d (libc-2.29.so) (1 samples, 0.10%)</title><rect x="936" y="356" width="1" height="15" fill="rgb(241,163,3)"/><text x="939.00" y="366.50"></text></g><g><title>0x7f1c0d6aea55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="937" y="356" width="1" height="15" fill="rgb(222,168,23)"/><text x="940.00" y="366.50"></text></g><g><title>0x7f1c0d6aebc0 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="938" y="356" width="3" height="15" fill="rgb(218,162,50)"/><text x="941.00" y="366.50"></text></g><g><title>0x7f1c0d6aebd8 (libc-2.29.so) (2 samples, 0.21%)</title><rect x="941" y="356" width="2" height="15" fill="rgb(240,109,0)"/><text x="944.00" y="366.50"></text></g><g><title>0x7f1c0d6cf144 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="943" y="356" width="1" height="15" fill="rgb(239,121,14)"/><text x="946.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (5 samples, 0.52%)</title><rect x="944" y="356" width="7" height="15" fill="rgb(253,53,24)"/><text x="947.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="951" y="356" width="1" height="15" fill="rgb(236,0,48)"/><text x="954.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="951" y="372" width="1" height="15" fill="rgb(250,86,48)"/><text x="954.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="951" y="388" width="1" height="15" fill="rgb(251,135,4)"/><text x="954.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="951" y="404" width="1" height="15" fill="rgb(229,95,47)"/><text x="954.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="951" y="420" width="1" height="15" fill="rgb(209,55,2)"/><text x="954.00" y="430.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.52%)</title><rect x="1052" y="388" width="6" height="15" fill="rgb(254,73,24)"/><text x="1055.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.21%)</title><rect x="1056" y="404" width="2" height="15" fill="rgb(229,172,46)"/><text x="1059.00" y="414.50"></text></g><g><title>0x7f1c0d6cf12f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1076" y="420" width="1" height="15" fill="rgb(233,164,5)"/><text x="1079.00" y="430.50"></text></g><g><title>0x7f1bfd17ad50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1078" y="436" width="1" height="15" fill="rgb(254,19,13)"/><text x="1081.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 1.05%)</title><rect x="1071" y="404" width="12" height="15" fill="rgb(213,227,32)"/><text x="1074.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.52%)</title><rect x="1077" y="420" width="6" height="15" fill="rgb(250,74,6)"/><text x="1080.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.31%)</title><rect x="1079" y="436" width="4" height="15" fill="rgb(205,17,28)"/><text x="1082.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (141 samples, 14.80%)</title><rect x="952" y="356" width="174" height="15" fill="rgb(213,199,52)"/><text x="955.00" y="366.50">onnxruntime::ml::TreeE..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (73 samples, 7.66%)</title><rect x="1036" y="372" width="90" height="15" fill="rgb(242,72,50)"/><text x="1039.00" y="382.50">std::_Hash..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (55 samples, 5.77%)</title><rect x="1058" y="388" width="68" height="15" fill="rgb(238,228,9)"/><text x="1061.00" y="398.50">std::_H..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (35 samples, 3.67%)</title><rect x="1083" y="404" width="43" height="15" fill="rgb(246,217,41)"/><text x="1086.00" y="414.50">std:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (20 samples, 2.10%)</title><rect x="1102" y="420" width="24" height="15" fill="rgb(217,92,39)"/><text x="1105.00" y="430.50">s..</text></g><g><title>0x7f1bcd6b3850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="1136" y="372" width="1" height="15" fill="rgb(224,175,48)"/><text x="1139.00" y="382.50"></text></g><g><title>0x7f1c0d6ced50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1137" y="372" width="2" height="15" fill="rgb(216,105,53)"/><text x="1140.00" y="382.50"></text></g><g><title>0x7f1c0d6cedbf (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1139" y="372" width="1" height="15" fill="rgb(225,1,41)"/><text x="1142.00" y="382.50"></text></g><g><title>0x7f1c0d6cedc9 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1140" y="372" width="1" height="15" fill="rgb(219,221,4)"/><text x="1143.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 1.36%)</title><rect x="1126" y="356" width="16" height="15" fill="rgb(225,73,21)"/><text x="1129.00" y="366.50"></text></g><g><title>0x7f1c0d6cedcb (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1141" y="372" width="1" height="15" fill="rgb(241,5,28)"/><text x="1144.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (3 samples, 0.31%)</title><rect x="1142" y="356" width="4" height="15" fill="rgb(220,161,43)"/><text x="1145.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.26%)</title><rect x="1146" y="356" width="15" height="15" fill="rgb(250,169,23)"/><text x="1149.00" y="366.50"></text></g><g><title>0x7f1bfd17ad50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="1177" y="388" width="1" height="15" fill="rgb(217,131,31)"/><text x="1180.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (388 samples, 40.71%)</title><rect x="705" y="260" width="481" height="15" fill="rgb(226,25,15)"/><text x="708.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (388 samples, 40.71%)</title><rect x="705" y="276" width="481" height="15" fill="rgb(250,96,15)"/><text x="708.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 40.50%)</title><rect x="708" y="292" width="478" height="15" fill="rgb(216,163,13)"/><text x="711.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_py..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 40.50%)</title><rect x="708" y="308" width="478" height="15" fill="rgb(251,46,53)"/><text x="711.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntim..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 40.50%)</title><rect x="708" y="324" width="478" height="15" fill="rgb(251,60,16)"/><text x="711.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (269 samples, 28.23%)</title><rect x="853" y="340" width="333" height="15" fill="rgb(243,88,24)"/><text x="856.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (20 samples, 2.10%)</title><rect x="1161" y="356" width="25" height="15" fill="rgb(231,24,20)"/><text x="1164.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.94%)</title><rect x="1175" y="372" width="11" height="15" fill="rgb(252,28,29)"/><text x="1178.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.63%)</title><rect x="1178" y="388" width="8" height="15" fill="rgb(210,41,24)"/><text x="1181.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.10%)</title><rect x="1186" y="292" width="1" height="15" fill="rgb(213,120,7)"/><text x="1189.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.10%)</title><rect x="1186" y="308" width="1" height="15" fill="rgb(241,73,7)"/><text x="1189.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:230) (1 samples, 0.10%)</title><rect x="1187" y="340" width="1" height="15" fill="rgb(254,202,37)"/><text x="1190.00" y="350.50"></text></g><g><title>all (953 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(214,138,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:68) (395 samples, 41.45%)</title><rect x="700" y="52" width="490" height="15" fill="rgb(214,214,29)"/><text x="703.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_10..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:67) (395 samples, 41.45%)</title><rect x="700" y="68" width="490" height="15" fill="rgb(238,72,22)"/><text x="703.00" y="78.50">profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:37) (395 samples, 41.45%)</title><rect x="700" y="84" width="490" height="15" fill="rgb(236,228,32)"/><text x="703.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimator..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1000_50_12_float_.py:31) (395 samples, 41.45%)</title><rect x="700" y="100" width="490" height="15" fill="rgb(240,181,2)"/><text x="703.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_100..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (395 samples, 41.45%)</title><rect x="700" y="116" width="490" height="15" fill="rgb(250,92,2)"/><text x="703.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (394 samples, 41.34%)</title><rect x="702" y="132" width="488" height="15" fill="rgb(246,15,39)"/><text x="705.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (393 samples, 41.24%)</title><rect x="703" y="148" width="487" height="15" fill="rgb(245,42,16)"/><text x="706.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (393 samples, 41.24%)</title><rect x="703" y="164" width="487" height="15" fill="rgb(239,156,19)"/><text x="706.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (393 samples, 41.24%)</title><rect x="703" y="180" width="487" height="15" fill="rgb(220,15,13)"/><text x="706.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (392 samples, 41.13%)</title><rect x="704" y="196" width="486" height="15" fill="rgb(208,188,5)"/><text x="707.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (391 samples, 41.03%)</title><rect x="705" y="212" width="485" height="15" fill="rgb(232,143,26)"/><text x="708.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (391 samples, 41.03%)</title><rect x="705" y="228" width="485" height="15" fill="rgb(225,66,47)"/><text x="708.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addOb..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (391 samples, 41.03%)</title><rect x="705" y="244" width="485" height="15" fill="rgb(247,208,9)"/><text x="708.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.31%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(235,11,20)"/><text x="1189.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.31%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(250,48,31)"/><text x="1189.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (2 samples, 0.21%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(233,81,12)"/><text x="1190.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (2 samples, 0.21%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(216,140,44)"/><text x="1190.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (2 samples, 0.21%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(254,33,45)"/><text x="1190.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.10%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(241,77,17)"/><text x="1191.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="356" width="2" height="15" fill="rgb(224,21,31)"/><text x="1191.00" y="366.50"></text></g><g><title>0x7f1c0d6b0028 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="372" width="2" height="15" fill="rgb(223,203,11)"/><text x="1191.00" y="382.50"></text></g><g><title>0x7f1c0d6adb9b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="388" width="2" height="15" fill="rgb(228,29,20)"/><text x="1191.00" y="398.50"></text></g></g></svg>