<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(207,199,27)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(253,76,38)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(231,117,24)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(223,115,51)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="10" y="932" width="6" height="15" fill="rgb(216,81,52)"/><text x="13.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="10" y="948" width="6" height="15" fill="rgb(233,130,28)"/><text x="13.00" y="958.50"></text></g><g><title>splitext (posixpath.py) (1 samples, 0.53%)</title><rect x="10" y="964" width="6" height="15" fill="rgb(225,102,40)"/><text x="13.00" y="974.50"></text></g><g><title>_splitext (genericpath.py) (1 samples, 0.53%)</title><rect x="10" y="980" width="6" height="15" fill="rgb(248,228,16)"/><text x="13.00" y="990.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.53%)</title><rect x="10" y="996" width="6" height="15" fill="rgb(242,115,34)"/><text x="13.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 1.05%)</title><rect x="10" y="836" width="12" height="15" fill="rgb(249,110,19)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 1.05%)</title><rect x="10" y="852" width="12" height="15" fill="rgb(212,179,53)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="16" y="868" width="6" height="15" fill="rgb(240,219,12)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="16" y="884" width="6" height="15" fill="rgb(239,110,30)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="16" y="900" width="6" height="15" fill="rgb(206,139,35)"/><text x="19.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.53%)</title><rect x="16" y="916" width="6" height="15" fill="rgb(214,217,23)"/><text x="19.00" y="926.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.53%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(229,174,44)"/><text x="19.00" y="942.50"></text></g><g><title>0x7fb6d0e0cb35 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(224,140,0)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 1.58%)</title><rect x="10" y="292" width="18" height="15" fill="rgb(241,84,6)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="308" width="18" height="15" fill="rgb(243,46,15)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="324" width="18" height="15" fill="rgb(224,156,28)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="340" width="18" height="15" fill="rgb(230,25,38)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="10" y="356" width="18" height="15" fill="rgb(218,157,38)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="372" width="18" height="15" fill="rgb(234,190,17)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 1.58%)</title><rect x="10" y="388" width="18" height="15" fill="rgb(240,160,19)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="404" width="18" height="15" fill="rgb(208,44,51)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="420" width="18" height="15" fill="rgb(247,60,20)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="436" width="18" height="15" fill="rgb(214,196,22)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="10" y="452" width="18" height="15" fill="rgb(218,103,53)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="468" width="18" height="15" fill="rgb(209,192,25)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 1.58%)</title><rect x="10" y="484" width="18" height="15" fill="rgb(225,130,40)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="500" width="18" height="15" fill="rgb(254,196,13)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="516" width="18" height="15" fill="rgb(252,87,5)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="532" width="18" height="15" fill="rgb(243,223,40)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="10" y="548" width="18" height="15" fill="rgb(235,133,23)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="564" width="18" height="15" fill="rgb(213,155,15)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 1.58%)</title><rect x="10" y="580" width="18" height="15" fill="rgb(217,203,51)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="596" width="18" height="15" fill="rgb(251,189,44)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="612" width="18" height="15" fill="rgb(236,140,7)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="628" width="18" height="15" fill="rgb(231,68,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="644" width="18" height="15" fill="rgb(228,68,32)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="660" width="18" height="15" fill="rgb(231,179,4)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="676" width="18" height="15" fill="rgb(233,215,45)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="10" y="692" width="18" height="15" fill="rgb(230,211,46)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="708" width="18" height="15" fill="rgb(221,104,32)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 1.58%)</title><rect x="10" y="724" width="18" height="15" fill="rgb(241,10,3)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="740" width="18" height="15" fill="rgb(227,85,37)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="756" width="18" height="15" fill="rgb(248,32,43)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="772" width="18" height="15" fill="rgb(240,68,38)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="10" y="788" width="18" height="15" fill="rgb(249,14,18)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="10" y="804" width="18" height="15" fill="rgb(216,116,1)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 1.58%)</title><rect x="10" y="820" width="18" height="15" fill="rgb(213,74,3)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="22" y="836" width="6" height="15" fill="rgb(228,213,21)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="22" y="852" width="6" height="15" fill="rgb(241,124,4)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="22" y="868" width="6" height="15" fill="rgb(206,188,25)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="22" y="884" width="6" height="15" fill="rgb(237,112,40)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="22" y="900" width="6" height="15" fill="rgb(231,79,18)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.53%)</title><rect x="22" y="916" width="6" height="15" fill="rgb(250,86,48)"/><text x="25.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.53%)</title><rect x="22" y="932" width="6" height="15" fill="rgb(218,59,7)"/><text x="25.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.53%)</title><rect x="22" y="948" width="6" height="15" fill="rgb(219,63,20)"/><text x="25.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.53%)</title><rect x="22" y="964" width="6" height="15" fill="rgb(205,50,1)"/><text x="25.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.53%)</title><rect x="22" y="980" width="6" height="15" fill="rgb(253,103,29)"/><text x="25.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="996" width="6" height="15" fill="rgb(248,9,38)"/><text x="25.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1012" width="6" height="15" fill="rgb(244,55,39)"/><text x="25.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1028" width="6" height="15" fill="rgb(254,93,51)"/><text x="25.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1044" width="6" height="15" fill="rgb(254,180,28)"/><text x="25.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1060" width="6" height="15" fill="rgb(207,198,35)"/><text x="25.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1076" width="6" height="15" fill="rgb(242,127,43)"/><text x="25.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1092" width="6" height="15" fill="rgb(247,14,34)"/><text x="25.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1108" width="6" height="15" fill="rgb(214,108,10)"/><text x="25.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1124" width="6" height="15" fill="rgb(251,48,37)"/><text x="25.00" y="1134.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.53%)</title><rect x="22" y="1140" width="6" height="15" fill="rgb(213,227,44)"/><text x="25.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.11%)</title><rect x="10" y="196" width="24" height="15" fill="rgb(231,121,10)"/><text x="13.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.11%)</title><rect x="10" y="212" width="24" height="15" fill="rgb(223,88,16)"/><text x="13.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.11%)</title><rect x="10" y="228" width="24" height="15" fill="rgb(219,202,24)"/><text x="13.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.11%)</title><rect x="10" y="244" width="24" height="15" fill="rgb(245,2,46)"/><text x="13.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 2.11%)</title><rect x="10" y="260" width="24" height="15" fill="rgb(206,138,30)"/><text x="13.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 2.11%)</title><rect x="10" y="276" width="24" height="15" fill="rgb(238,124,24)"/><text x="13.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="292" width="6" height="15" fill="rgb(216,219,46)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="308" width="6" height="15" fill="rgb(250,50,39)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="324" width="6" height="15" fill="rgb(246,9,37)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="340" width="6" height="15" fill="rgb(216,30,16)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="356" width="6" height="15" fill="rgb(247,152,1)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="372" width="6" height="15" fill="rgb(229,129,11)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.53%)</title><rect x="28" y="388" width="6" height="15" fill="rgb(234,77,33)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="404" width="6" height="15" fill="rgb(224,108,41)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="420" width="6" height="15" fill="rgb(234,13,13)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="436" width="6" height="15" fill="rgb(244,6,32)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="452" width="6" height="15" fill="rgb(217,189,45)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="468" width="6" height="15" fill="rgb(245,83,30)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="484" width="6" height="15" fill="rgb(236,8,2)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="500" width="6" height="15" fill="rgb(225,109,46)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="516" width="6" height="15" fill="rgb(227,115,48)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="532" width="6" height="15" fill="rgb(229,87,26)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="548" width="6" height="15" fill="rgb(235,26,44)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="564" width="6" height="15" fill="rgb(207,96,18)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.53%)</title><rect x="28" y="580" width="6" height="15" fill="rgb(206,86,32)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="596" width="6" height="15" fill="rgb(237,225,51)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="612" width="6" height="15" fill="rgb(231,68,20)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="628" width="6" height="15" fill="rgb(208,64,49)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="644" width="6" height="15" fill="rgb(253,120,39)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="660" width="6" height="15" fill="rgb(217,50,35)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="676" width="6" height="15" fill="rgb(221,35,41)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="692" width="6" height="15" fill="rgb(212,165,32)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="708" width="6" height="15" fill="rgb(222,164,23)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="724" width="6" height="15" fill="rgb(240,3,51)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="740" width="6" height="15" fill="rgb(242,146,44)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="756" width="6" height="15" fill="rgb(213,95,8)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.53%)</title><rect x="28" y="772" width="6" height="15" fill="rgb(221,125,11)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="788" width="6" height="15" fill="rgb(210,118,9)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="804" width="6" height="15" fill="rgb(214,195,22)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="820" width="6" height="15" fill="rgb(206,52,18)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="836" width="6" height="15" fill="rgb(232,88,31)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="852" width="6" height="15" fill="rgb(206,19,10)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="868" width="6" height="15" fill="rgb(242,170,3)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="884" width="6" height="15" fill="rgb(238,162,28)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.53%)</title><rect x="28" y="900" width="6" height="15" fill="rgb(225,105,13)"/><text x="31.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="916" width="6" height="15" fill="rgb(223,124,34)"/><text x="31.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="932" width="6" height="15" fill="rgb(241,10,12)"/><text x="31.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="948" width="6" height="15" fill="rgb(208,143,36)"/><text x="31.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="964" width="6" height="15" fill="rgb(219,227,34)"/><text x="31.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="980" width="6" height="15" fill="rgb(242,171,32)"/><text x="31.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.53%)</title><rect x="28" y="996" width="6" height="15" fill="rgb(206,221,53)"/><text x="31.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1012" width="6" height="15" fill="rgb(211,127,30)"/><text x="31.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1028" width="6" height="15" fill="rgb(213,83,26)"/><text x="31.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1044" width="6" height="15" fill="rgb(211,151,51)"/><text x="31.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1060" width="6" height="15" fill="rgb(233,59,35)"/><text x="31.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1076" width="6" height="15" fill="rgb(219,114,37)"/><text x="31.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1092" width="6" height="15" fill="rgb(226,122,17)"/><text x="31.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1108" width="6" height="15" fill="rgb(251,34,15)"/><text x="31.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="1124" width="6" height="15" fill="rgb(249,38,35)"/><text x="31.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1140" width="6" height="15" fill="rgb(210,182,16)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1156" width="6" height="15" fill="rgb(242,195,38)"/><text x="31.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1172" width="6" height="15" fill="rgb(246,82,14)"/><text x="31.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1188" width="6" height="15" fill="rgb(239,225,12)"/><text x="31.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1204" width="6" height="15" fill="rgb(252,2,10)"/><text x="31.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.53%)</title><rect x="28" y="1220" width="6" height="15" fill="rgb(253,184,48)"/><text x="31.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1236" width="6" height="15" fill="rgb(230,37,51)"/><text x="31.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1252" width="6" height="15" fill="rgb(245,63,54)"/><text x="31.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1268" width="6" height="15" fill="rgb(232,0,51)"/><text x="31.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1284" width="6" height="15" fill="rgb(236,42,40)"/><text x="31.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1300" width="6" height="15" fill="rgb(206,142,44)"/><text x="31.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="1316" width="6" height="15" fill="rgb(227,208,41)"/><text x="31.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1332" width="6" height="15" fill="rgb(249,168,21)"/><text x="31.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1348" width="6" height="15" fill="rgb(243,59,16)"/><text x="31.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1364" width="6" height="15" fill="rgb(222,16,48)"/><text x="31.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1380" width="6" height="15" fill="rgb(251,214,52)"/><text x="31.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1396" width="6" height="15" fill="rgb(228,23,29)"/><text x="31.00" y="1406.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_trustregion_constr/minimize_trustregion_constr.py) (1 samples, 0.53%)</title><rect x="28" y="1412" width="6" height="15" fill="rgb(232,40,9)"/><text x="31.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1428" width="6" height="15" fill="rgb(215,165,1)"/><text x="31.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1444" width="6" height="15" fill="rgb(246,182,48)"/><text x="31.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1460" width="6" height="15" fill="rgb(244,196,35)"/><text x="31.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1476" width="6" height="15" fill="rgb(233,130,53)"/><text x="31.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1492" width="6" height="15" fill="rgb(237,192,42)"/><text x="31.00" y="1502.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="1508" width="6" height="15" fill="rgb(222,210,46)"/><text x="31.00" y="1518.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1524" width="6" height="15" fill="rgb(222,9,36)"/><text x="31.00" y="1534.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1540" width="6" height="15" fill="rgb(211,154,51)"/><text x="31.00" y="1550.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1556" width="6" height="15" fill="rgb(215,159,9)"/><text x="31.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1572" width="6" height="15" fill="rgb(253,83,22)"/><text x="31.00" y="1582.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1588" width="6" height="15" fill="rgb(224,59,27)"/><text x="31.00" y="1598.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/eigen/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="1604" width="6" height="15" fill="rgb(254,190,26)"/><text x="31.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1620" width="6" height="15" fill="rgb(210,61,11)"/><text x="31.00" y="1630.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1636" width="6" height="15" fill="rgb(209,107,27)"/><text x="31.00" y="1646.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1652" width="6" height="15" fill="rgb(229,115,6)"/><text x="31.00" y="1662.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1668" width="6" height="15" fill="rgb(208,85,44)"/><text x="31.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1684" width="6" height="15" fill="rgb(253,114,5)"/><text x="31.00" y="1694.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/eigen/arpack/__init__.py) (1 samples, 0.53%)</title><rect x="28" y="1700" width="6" height="15" fill="rgb(221,83,23)"/><text x="31.00" y="1710.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1716" width="6" height="15" fill="rgb(249,86,9)"/><text x="31.00" y="1726.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1732" width="6" height="15" fill="rgb(227,79,30)"/><text x="31.00" y="1742.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="28" y="1748" width="6" height="15" fill="rgb(219,84,52)"/><text x="31.00" y="1758.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1764" width="6" height="15" fill="rgb(239,15,47)"/><text x="31.00" y="1774.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1780" width="6" height="15" fill="rgb(253,138,18)"/><text x="31.00" y="1790.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="28" y="1796" width="6" height="15" fill="rgb(222,42,0)"/><text x="31.00" y="1806.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="484" width="13" height="15" fill="rgb(214,157,2)"/><text x="37.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="500" width="13" height="15" fill="rgb(220,107,48)"/><text x="37.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="516" width="13" height="15" fill="rgb(209,169,24)"/><text x="37.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="532" width="13" height="15" fill="rgb(250,29,2)"/><text x="37.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="548" width="13" height="15" fill="rgb(226,126,2)"/><text x="37.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="564" width="13" height="15" fill="rgb(223,216,32)"/><text x="37.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 1.05%)</title><rect x="34" y="580" width="13" height="15" fill="rgb(215,107,39)"/><text x="37.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="596" width="13" height="15" fill="rgb(235,75,21)"/><text x="37.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="612" width="13" height="15" fill="rgb(254,193,34)"/><text x="37.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="628" width="13" height="15" fill="rgb(211,107,42)"/><text x="37.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="644" width="13" height="15" fill="rgb(246,28,9)"/><text x="37.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="660" width="13" height="15" fill="rgb(223,117,13)"/><text x="37.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 1.05%)</title><rect x="34" y="676" width="13" height="15" fill="rgb(224,88,26)"/><text x="37.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="692" width="13" height="15" fill="rgb(244,144,25)"/><text x="37.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="708" width="13" height="15" fill="rgb(219,173,17)"/><text x="37.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="724" width="13" height="15" fill="rgb(242,212,12)"/><text x="37.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="740" width="13" height="15" fill="rgb(238,16,28)"/><text x="37.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="756" width="13" height="15" fill="rgb(208,120,36)"/><text x="37.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 1.05%)</title><rect x="34" y="772" width="13" height="15" fill="rgb(244,45,45)"/><text x="37.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="788" width="13" height="15" fill="rgb(251,209,53)"/><text x="37.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="804" width="13" height="15" fill="rgb(232,203,49)"/><text x="37.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="820" width="13" height="15" fill="rgb(224,101,19)"/><text x="37.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="836" width="13" height="15" fill="rgb(248,8,16)"/><text x="37.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="852" width="13" height="15" fill="rgb(244,36,44)"/><text x="37.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 1.05%)</title><rect x="34" y="868" width="13" height="15" fill="rgb(208,50,7)"/><text x="37.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="884" width="13" height="15" fill="rgb(224,194,30)"/><text x="37.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="900" width="13" height="15" fill="rgb(232,174,36)"/><text x="37.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="916" width="13" height="15" fill="rgb(245,66,43)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="932" width="13" height="15" fill="rgb(207,169,38)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="948" width="13" height="15" fill="rgb(209,116,11)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="964" width="13" height="15" fill="rgb(245,184,11)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="980" width="13" height="15" fill="rgb(244,181,3)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="996" width="13" height="15" fill="rgb(233,219,32)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 1.05%)</title><rect x="34" y="1012" width="13" height="15" fill="rgb(220,83,6)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1028" width="13" height="15" fill="rgb(224,120,13)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1044" width="13" height="15" fill="rgb(213,165,26)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1060" width="13" height="15" fill="rgb(205,201,52)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="1076" width="13" height="15" fill="rgb(210,79,5)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1092" width="13" height="15" fill="rgb(222,214,22)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 1.05%)</title><rect x="34" y="1108" width="13" height="15" fill="rgb(221,145,28)"/><text x="37.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1124" width="13" height="15" fill="rgb(209,187,11)"/><text x="37.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1140" width="13" height="15" fill="rgb(223,195,47)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1156" width="13" height="15" fill="rgb(208,102,42)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1172" width="13" height="15" fill="rgb(219,63,6)"/><text x="37.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1188" width="13" height="15" fill="rgb(254,70,40)"/><text x="37.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="1204" width="13" height="15" fill="rgb(238,27,2)"/><text x="37.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1220" width="13" height="15" fill="rgb(242,138,50)"/><text x="37.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 1.05%)</title><rect x="34" y="1236" width="13" height="15" fill="rgb(220,178,35)"/><text x="37.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1252" width="13" height="15" fill="rgb(208,142,21)"/><text x="37.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1268" width="13" height="15" fill="rgb(250,90,29)"/><text x="37.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1284" width="13" height="15" fill="rgb(230,106,32)"/><text x="37.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1300" width="13" height="15" fill="rgb(238,104,18)"/><text x="37.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1316" width="13" height="15" fill="rgb(214,151,40)"/><text x="37.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="1332" width="13" height="15" fill="rgb(234,207,31)"/><text x="37.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1348" width="13" height="15" fill="rgb(241,9,32)"/><text x="37.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 1.05%)</title><rect x="34" y="1364" width="13" height="15" fill="rgb(228,176,23)"/><text x="37.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1380" width="13" height="15" fill="rgb(251,178,17)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1396" width="13" height="15" fill="rgb(235,62,6)"/><text x="37.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1412" width="13" height="15" fill="rgb(243,172,16)"/><text x="37.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="34" y="1428" width="13" height="15" fill="rgb(215,51,37)"/><text x="37.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="34" y="1444" width="13" height="15" fill="rgb(236,63,15)"/><text x="37.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 1.05%)</title><rect x="34" y="1460" width="13" height="15" fill="rgb(212,25,5)"/><text x="37.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 1.05%)</title><rect x="34" y="1476" width="13" height="15" fill="rgb(239,129,50)"/><text x="37.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 1.05%)</title><rect x="34" y="1492" width="13" height="15" fill="rgb(231,117,14)"/><text x="37.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 1.05%)</title><rect x="34" y="1508" width="13" height="15" fill="rgb(239,119,48)"/><text x="37.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 1.05%)</title><rect x="34" y="1524" width="13" height="15" fill="rgb(232,23,16)"/><text x="37.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 1.05%)</title><rect x="34" y="1540" width="13" height="15" fill="rgb(209,137,25)"/><text x="37.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 1.05%)</title><rect x="34" y="1556" width="13" height="15" fill="rgb(215,49,29)"/><text x="37.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 1.05%)</title><rect x="34" y="1572" width="13" height="15" fill="rgb(221,38,0)"/><text x="37.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 1.05%)</title><rect x="34" y="1588" width="13" height="15" fill="rgb(239,139,10)"/><text x="37.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (2 samples, 1.05%)</title><rect x="34" y="1604" width="13" height="15" fill="rgb(216,164,8)"/><text x="37.00" y="1614.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="41" y="1620" width="6" height="15" fill="rgb(254,28,51)"/><text x="44.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object, pybind11::object)#5}, bool, pybind11::object, pybind11::object, pybind11::is_method&gt;(pybind11::detail::enum_base::init(bool, bool)::{lambda(pybind11::object&amp;&amp;, pybind11::object)#5}, bool (*)(pybind11::object, pybind11::object), pybind11::is_method const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="41" y="1636" width="6" height="15" fill="rgb(232,23,50)"/><text x="44.00" y="1646.50"></text></g><g><title>pybind11::int_::int_ (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="41" y="1652" width="6" height="15" fill="rgb(254,45,41)"/><text x="44.00" y="1662.50"></text></g><g><title>0x7fb6a65f440e (?) (1 samples, 0.53%)</title><rect x="47" y="916" width="6" height="15" fill="rgb(237,98,48)"/><text x="50.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="932" width="6" height="15" fill="rgb(235,68,16)"/><text x="50.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="948" width="6" height="15" fill="rgb(234,93,35)"/><text x="50.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="964" width="6" height="15" fill="rgb(231,25,21)"/><text x="50.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="47" y="980" width="6" height="15" fill="rgb(247,24,41)"/><text x="50.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="996" width="6" height="15" fill="rgb(227,76,23)"/><text x="50.00" y="1006.50"></text></g><g><title>0x7fb6a63adcd2 (?) (1 samples, 0.53%)</title><rect x="47" y="1012" width="6" height="15" fill="rgb(233,54,28)"/><text x="50.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1028" width="6" height="15" fill="rgb(211,13,34)"/><text x="50.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1044" width="6" height="15" fill="rgb(233,58,38)"/><text x="50.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1060" width="6" height="15" fill="rgb(208,144,33)"/><text x="50.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="47" y="1076" width="6" height="15" fill="rgb(245,56,23)"/><text x="50.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1092" width="6" height="15" fill="rgb(239,12,9)"/><text x="50.00" y="1102.50"></text></g><g><title>0x7fb6a5aa30e5 (?) (1 samples, 0.53%)</title><rect x="47" y="1108" width="6" height="15" fill="rgb(236,191,3)"/><text x="50.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1124" width="6" height="15" fill="rgb(234,170,31)"/><text x="50.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1140" width="6" height="15" fill="rgb(233,188,2)"/><text x="50.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1156" width="6" height="15" fill="rgb(216,49,3)"/><text x="50.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="47" y="1172" width="6" height="15" fill="rgb(254,8,4)"/><text x="50.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1188" width="6" height="15" fill="rgb(220,19,20)"/><text x="50.00" y="1198.50"></text></g><g><title>0x7fb6a5827e68 (?) (1 samples, 0.53%)</title><rect x="47" y="1204" width="6" height="15" fill="rgb(244,102,39)"/><text x="50.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1220" width="6" height="15" fill="rgb(210,216,7)"/><text x="50.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1236" width="6" height="15" fill="rgb(220,24,49)"/><text x="50.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1252" width="6" height="15" fill="rgb(222,41,0)"/><text x="50.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="47" y="1268" width="6" height="15" fill="rgb(248,85,14)"/><text x="50.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1284" width="6" height="15" fill="rgb(226,48,11)"/><text x="50.00" y="1294.50"></text></g><g><title>0x7fb6a55b82fb (?) (1 samples, 0.53%)</title><rect x="47" y="1300" width="6" height="15" fill="rgb(235,96,33)"/><text x="50.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1316" width="6" height="15" fill="rgb(226,175,22)"/><text x="50.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1332" width="6" height="15" fill="rgb(206,49,45)"/><text x="50.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1348" width="6" height="15" fill="rgb(214,93,32)"/><text x="50.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="47" y="1364" width="6" height="15" fill="rgb(224,66,7)"/><text x="50.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1380" width="6" height="15" fill="rgb(221,184,50)"/><text x="50.00" y="1390.50"></text></g><g><title>0x7fb6a539c153 (?) (1 samples, 0.53%)</title><rect x="47" y="1396" width="6" height="15" fill="rgb(216,49,40)"/><text x="50.00" y="1406.50"></text></g><g><title>0x7fb6a539ac13 (?) (1 samples, 0.53%)</title><rect x="47" y="1412" width="6" height="15" fill="rgb(245,12,53)"/><text x="50.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1428" width="6" height="15" fill="rgb(235,149,7)"/><text x="50.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1444" width="6" height="15" fill="rgb(214,132,51)"/><text x="50.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1460" width="6" height="15" fill="rgb(247,123,34)"/><text x="50.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="47" y="1476" width="6" height="15" fill="rgb(254,120,41)"/><text x="50.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="47" y="1492" width="6" height="15" fill="rgb(226,203,45)"/><text x="50.00" y="1502.50"></text></g><g><title>0x7fb6a5137181 (?) (1 samples, 0.53%)</title><rect x="47" y="1508" width="6" height="15" fill="rgb(210,97,6)"/><text x="50.00" y="1518.50"></text></g><g><title>0x7fb6a513a1c9 (?) (1 samples, 0.53%)</title><rect x="47" y="1524" width="6" height="15" fill="rgb(238,216,1)"/><text x="50.00" y="1534.50"></text></g><g><title>0x7fb6a5166167 (?) (1 samples, 0.53%)</title><rect x="47" y="1540" width="6" height="15" fill="rgb(224,122,50)"/><text x="50.00" y="1550.50"></text></g><g><title>0x7fb6a5161b64 (?) (1 samples, 0.53%)</title><rect x="47" y="1556" width="6" height="15" fill="rgb(212,176,54)"/><text x="50.00" y="1566.50"></text></g><g><title>0x7fb6a514507b (?) (1 samples, 0.53%)</title><rect x="47" y="1572" width="6" height="15" fill="rgb(242,133,6)"/><text x="50.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.53%)</title><rect x="47" y="1588" width="6" height="15" fill="rgb(242,22,38)"/><text x="50.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.53%)</title><rect x="47" y="1604" width="6" height="15" fill="rgb(224,207,6)"/><text x="50.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.53%)</title><rect x="47" y="1620" width="6" height="15" fill="rgb(243,56,31)"/><text x="50.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.53%)</title><rect x="47" y="1636" width="6" height="15" fill="rgb(206,113,19)"/><text x="50.00" y="1646.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.53%)</title><rect x="47" y="1652" width="6" height="15" fill="rgb(225,186,51)"/><text x="50.00" y="1662.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.53%)</title><rect x="47" y="1668" width="6" height="15" fill="rgb(223,147,4)"/><text x="50.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (2 samples, 1.05%)</title><rect x="47" y="724" width="12" height="15" fill="rgb(223,13,5)"/><text x="50.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="740" width="12" height="15" fill="rgb(240,89,2)"/><text x="50.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="756" width="12" height="15" fill="rgb(253,157,37)"/><text x="50.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="772" width="12" height="15" fill="rgb(219,145,45)"/><text x="50.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="47" y="788" width="12" height="15" fill="rgb(241,114,19)"/><text x="50.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="804" width="12" height="15" fill="rgb(230,156,12)"/><text x="50.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (2 samples, 1.05%)</title><rect x="47" y="820" width="12" height="15" fill="rgb(213,227,10)"/><text x="50.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="836" width="12" height="15" fill="rgb(243,174,23)"/><text x="50.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="852" width="12" height="15" fill="rgb(241,82,16)"/><text x="50.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="868" width="12" height="15" fill="rgb(232,74,12)"/><text x="50.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="47" y="884" width="12" height="15" fill="rgb(249,71,44)"/><text x="50.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="47" y="900" width="12" height="15" fill="rgb(245,13,38)"/><text x="50.00" y="910.50"></text></g><g><title>0x7fb6a65f5403 (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="53" y="916" width="6" height="15" fill="rgb(248,128,30)"/><text x="56.00" y="926.50"></text></g><g><title>0x7fb6a65f7b8a (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="53" y="932" width="6" height="15" fill="rgb(230,212,52)"/><text x="56.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="948" width="6" height="15" fill="rgb(254,48,37)"/><text x="56.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="964" width="6" height="15" fill="rgb(245,186,22)"/><text x="56.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="980" width="6" height="15" fill="rgb(238,211,47)"/><text x="56.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="53" y="996" width="6" height="15" fill="rgb(237,217,49)"/><text x="56.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="1012" width="6" height="15" fill="rgb(244,37,15)"/><text x="56.00" y="1022.50"></text></g><g><title>0x7fb6a4c3e109 (pandas/_libs/tslibs/parsing.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="53" y="1028" width="6" height="15" fill="rgb(227,91,44)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="1044" width="6" height="15" fill="rgb(240,37,52)"/><text x="56.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="1060" width="6" height="15" fill="rgb(210,95,15)"/><text x="56.00" y="1070.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="1076" width="6" height="15" fill="rgb(230,44,13)"/><text x="56.00" y="1086.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="53" y="1092" width="6" height="15" fill="rgb(241,146,52)"/><text x="56.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 2.63%)</title><rect x="34" y="436" width="31" height="15" fill="rgb(242,9,25)"/><text x="37.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.63%)</title><rect x="34" y="452" width="31" height="15" fill="rgb(226,114,3)"/><text x="37.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.63%)</title><rect x="34" y="468" width="31" height="15" fill="rgb(240,201,22)"/><text x="37.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="484" width="18" height="15" fill="rgb(215,216,25)"/><text x="50.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="47" y="500" width="18" height="15" fill="rgb(252,218,1)"/><text x="50.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="516" width="18" height="15" fill="rgb(209,50,54)"/><text x="50.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.58%)</title><rect x="47" y="532" width="18" height="15" fill="rgb(206,206,3)"/><text x="50.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="548" width="18" height="15" fill="rgb(246,204,37)"/><text x="50.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="564" width="18" height="15" fill="rgb(240,74,46)"/><text x="50.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="580" width="18" height="15" fill="rgb(240,60,3)"/><text x="50.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="47" y="596" width="18" height="15" fill="rgb(216,221,29)"/><text x="50.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="612" width="18" height="15" fill="rgb(254,74,41)"/><text x="50.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.58%)</title><rect x="47" y="628" width="18" height="15" fill="rgb(241,203,20)"/><text x="50.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="644" width="18" height="15" fill="rgb(229,101,16)"/><text x="50.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="660" width="18" height="15" fill="rgb(220,158,42)"/><text x="50.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="676" width="18" height="15" fill="rgb(224,185,23)"/><text x="50.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.58%)</title><rect x="47" y="692" width="18" height="15" fill="rgb(238,83,40)"/><text x="50.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="47" y="708" width="18" height="15" fill="rgb(244,22,15)"/><text x="50.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.53%)</title><rect x="59" y="724" width="6" height="15" fill="rgb(211,21,23)"/><text x="62.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="740" width="6" height="15" fill="rgb(244,28,40)"/><text x="62.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="756" width="6" height="15" fill="rgb(228,38,22)"/><text x="62.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="772" width="6" height="15" fill="rgb(221,78,13)"/><text x="62.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="59" y="788" width="6" height="15" fill="rgb(230,14,40)"/><text x="62.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="804" width="6" height="15" fill="rgb(222,31,42)"/><text x="62.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.53%)</title><rect x="59" y="820" width="6" height="15" fill="rgb(224,178,38)"/><text x="62.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="836" width="6" height="15" fill="rgb(207,138,9)"/><text x="62.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="852" width="6" height="15" fill="rgb(224,79,37)"/><text x="62.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="868" width="6" height="15" fill="rgb(213,181,4)"/><text x="62.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="59" y="884" width="6" height="15" fill="rgb(216,8,7)"/><text x="62.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="900" width="6" height="15" fill="rgb(228,95,30)"/><text x="62.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.53%)</title><rect x="59" y="916" width="6" height="15" fill="rgb(235,218,32)"/><text x="62.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="932" width="6" height="15" fill="rgb(240,178,38)"/><text x="62.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="948" width="6" height="15" fill="rgb(253,49,27)"/><text x="62.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="964" width="6" height="15" fill="rgb(251,75,19)"/><text x="62.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="59" y="980" width="6" height="15" fill="rgb(252,127,39)"/><text x="62.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="59" y="996" width="6" height="15" fill="rgb(253,188,32)"/><text x="62.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.53%)</title><rect x="59" y="1012" width="6" height="15" fill="rgb(253,37,54)"/><text x="62.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py) (1 samples, 0.53%)</title><rect x="59" y="1028" width="6" height="15" fill="rgb(239,99,3)"/><text x="62.00" y="1038.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 3.16%)</title><rect x="34" y="244" width="38" height="15" fill="rgb(232,141,53)"/><text x="37.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="260" width="38" height="15" fill="rgb(220,43,47)"/><text x="37.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="276" width="38" height="15" fill="rgb(215,109,51)"/><text x="37.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="292" width="38" height="15" fill="rgb(216,134,20)"/><text x="37.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.16%)</title><rect x="34" y="308" width="38" height="15" fill="rgb(230,150,4)"/><text x="37.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="324" width="38" height="15" fill="rgb(210,66,4)"/><text x="37.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 3.16%)</title><rect x="34" y="340" width="38" height="15" fill="rgb(240,19,5)"/><text x="37.00" y="350.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="356" width="38" height="15" fill="rgb(250,66,45)"/><text x="37.00" y="366.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="372" width="38" height="15" fill="rgb(218,131,21)"/><text x="37.00" y="382.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="388" width="38" height="15" fill="rgb(219,50,50)"/><text x="37.00" y="398.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 3.16%)</title><rect x="34" y="404" width="38" height="15" fill="rgb(246,83,21)"/><text x="37.00" y="414.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 3.16%)</title><rect x="34" y="420" width="38" height="15" fill="rgb(232,213,45)"/><text x="37.00" y="430.50">_ca..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.53%)</title><rect x="65" y="436" width="7" height="15" fill="rgb(205,171,14)"/><text x="68.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="452" width="7" height="15" fill="rgb(220,163,48)"/><text x="68.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="468" width="7" height="15" fill="rgb(232,72,51)"/><text x="68.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="484" width="7" height="15" fill="rgb(205,102,33)"/><text x="68.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="65" y="500" width="7" height="15" fill="rgb(230,9,11)"/><text x="68.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="516" width="7" height="15" fill="rgb(218,228,20)"/><text x="68.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_twenty_newsgroups.py) (1 samples, 0.53%)</title><rect x="65" y="532" width="7" height="15" fill="rgb(229,45,5)"/><text x="68.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="548" width="7" height="15" fill="rgb(227,33,48)"/><text x="68.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="564" width="7" height="15" fill="rgb(214,226,21)"/><text x="68.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="580" width="7" height="15" fill="rgb(243,219,53)"/><text x="68.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="596" width="7" height="15" fill="rgb(238,216,1)"/><text x="68.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="612" width="7" height="15" fill="rgb(243,156,2)"/><text x="68.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="628" width="7" height="15" fill="rgb(235,100,54)"/><text x="68.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="65" y="644" width="7" height="15" fill="rgb(224,134,23)"/><text x="68.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="660" width="7" height="15" fill="rgb(249,209,30)"/><text x="68.00" y="670.50"></text></g><g><title>&lt;module&gt; (sklearn/feature_extraction/__init__.py) (1 samples, 0.53%)</title><rect x="65" y="676" width="7" height="15" fill="rgb(236,79,31)"/><text x="68.00" y="686.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="692" width="7" height="15" fill="rgb(225,50,19)"/><text x="68.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="708" width="7" height="15" fill="rgb(220,80,48)"/><text x="68.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="724" width="7" height="15" fill="rgb(251,29,35)"/><text x="68.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="740" width="7" height="15" fill="rgb(233,56,9)"/><text x="68.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="65" y="756" width="7" height="15" fill="rgb(217,221,25)"/><text x="68.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="65" y="772" width="7" height="15" fill="rgb(227,12,37)"/><text x="68.00" y="782.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="65" y="788" width="7" height="15" fill="rgb(241,134,34)"/><text x="68.00" y="798.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="65" y="804" width="7" height="15" fill="rgb(250,89,30)"/><text x="68.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="260" width="6" height="15" fill="rgb(243,61,10)"/><text x="75.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="276" width="6" height="15" fill="rgb(209,119,33)"/><text x="75.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="292" width="6" height="15" fill="rgb(221,117,16)"/><text x="75.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="72" y="308" width="6" height="15" fill="rgb(228,63,45)"/><text x="75.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="324" width="6" height="15" fill="rgb(210,210,53)"/><text x="75.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.53%)</title><rect x="72" y="340" width="6" height="15" fill="rgb(211,224,32)"/><text x="75.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="356" width="6" height="15" fill="rgb(205,25,54)"/><text x="75.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="372" width="6" height="15" fill="rgb(211,83,9)"/><text x="75.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="388" width="6" height="15" fill="rgb(245,124,38)"/><text x="75.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="72" y="404" width="6" height="15" fill="rgb(206,44,53)"/><text x="75.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="420" width="6" height="15" fill="rgb(252,145,26)"/><text x="75.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.53%)</title><rect x="72" y="436" width="6" height="15" fill="rgb(235,176,54)"/><text x="75.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="452" width="6" height="15" fill="rgb(214,33,50)"/><text x="75.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="468" width="6" height="15" fill="rgb(248,163,38)"/><text x="75.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="484" width="6" height="15" fill="rgb(252,58,4)"/><text x="75.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="72" y="500" width="6" height="15" fill="rgb(245,137,2)"/><text x="75.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="516" width="6" height="15" fill="rgb(215,171,42)"/><text x="75.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.53%)</title><rect x="72" y="532" width="6" height="15" fill="rgb(242,210,5)"/><text x="75.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="548" width="6" height="15" fill="rgb(210,93,22)"/><text x="75.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="564" width="6" height="15" fill="rgb(233,7,44)"/><text x="75.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="72" y="580" width="6" height="15" fill="rgb(209,145,44)"/><text x="75.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="72" y="596" width="6" height="15" fill="rgb(228,65,41)"/><text x="75.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="72" y="612" width="6" height="15" fill="rgb(211,90,23)"/><text x="75.00" y="622.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="72" y="628" width="6" height="15" fill="rgb(224,196,51)"/><text x="75.00" y="638.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.53%)</title><rect x="72" y="644" width="6" height="15" fill="rgb(219,227,35)"/><text x="75.00" y="654.50"></text></g><g><title>0x7fb6d0e0db39 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="72" y="660" width="6" height="15" fill="rgb(206,46,15)"/><text x="75.00" y="670.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.53%)</title><rect x="78" y="468" width="6" height="15" fill="rgb(230,33,23)"/><text x="81.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="78" y="484" width="6" height="15" fill="rgb(236,217,28)"/><text x="81.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="78" y="500" width="6" height="15" fill="rgb(239,27,16)"/><text x="81.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="78" y="516" width="6" height="15" fill="rgb(224,52,0)"/><text x="81.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="78" y="532" width="6" height="15" fill="rgb(234,171,7)"/><text x="81.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="78" y="548" width="6" height="15" fill="rgb(238,8,11)"/><text x="81.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.53%)</title><rect x="78" y="564" width="6" height="15" fill="rgb(213,45,2)"/><text x="81.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.53%)</title><rect x="78" y="580" width="6" height="15" fill="rgb(207,111,46)"/><text x="81.00" y="590.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.53%)</title><rect x="78" y="596" width="6" height="15" fill="rgb(225,88,26)"/><text x="81.00" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 6.84%)</title><rect x="10" y="68" width="80" height="15" fill="rgb(205,202,46)"/><text x="13.00" y="78.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 6.84%)</title><rect x="10" y="84" width="80" height="15" fill="rgb(224,92,6)"/><text x="13.00" y="94.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 6.84%)</title><rect x="10" y="100" width="80" height="15" fill="rgb(220,213,13)"/><text x="13.00" y="110.50">_load_unl..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 6.84%)</title><rect x="10" y="116" width="80" height="15" fill="rgb(243,73,20)"/><text x="13.00" y="126.50">exec_modu..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 6.84%)</title><rect x="10" y="132" width="80" height="15" fill="rgb(210,121,32)"/><text x="13.00" y="142.50">_call_wit..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (13 samples, 6.84%)</title><rect x="10" y="148" width="80" height="15" fill="rgb(210,9,23)"/><text x="13.00" y="158.50">&lt;module&gt; ..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 6.84%)</title><rect x="10" y="164" width="80" height="15" fill="rgb(220,73,6)"/><text x="13.00" y="174.50">_find_and..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 6.84%)</title><rect x="10" y="180" width="80" height="15" fill="rgb(237,80,4)"/><text x="13.00" y="190.50">_find_and..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.74%)</title><rect x="34" y="196" width="56" height="15" fill="rgb(244,219,14)"/><text x="37.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.74%)</title><rect x="34" y="212" width="56" height="15" fill="rgb(213,212,12)"/><text x="37.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.74%)</title><rect x="34" y="228" width="56" height="15" fill="rgb(225,144,37)"/><text x="37.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (3 samples, 1.58%)</title><rect x="72" y="244" width="18" height="15" fill="rgb(223,138,50)"/><text x="75.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="260" width="12" height="15" fill="rgb(246,128,29)"/><text x="81.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="276" width="12" height="15" fill="rgb(243,97,41)"/><text x="81.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="292" width="12" height="15" fill="rgb(231,212,51)"/><text x="81.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="308" width="12" height="15" fill="rgb(214,17,43)"/><text x="81.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="324" width="12" height="15" fill="rgb(208,51,12)"/><text x="81.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="78" y="340" width="12" height="15" fill="rgb(235,44,9)"/><text x="81.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="356" width="12" height="15" fill="rgb(244,205,32)"/><text x="81.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 1.05%)</title><rect x="78" y="372" width="12" height="15" fill="rgb(246,204,48)"/><text x="81.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="388" width="12" height="15" fill="rgb(242,49,2)"/><text x="81.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="404" width="12" height="15" fill="rgb(235,196,14)"/><text x="81.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="420" width="12" height="15" fill="rgb(246,49,37)"/><text x="81.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 1.05%)</title><rect x="78" y="436" width="12" height="15" fill="rgb(243,227,45)"/><text x="81.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 1.05%)</title><rect x="78" y="452" width="12" height="15" fill="rgb(235,16,0)"/><text x="81.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/mixins.py) (1 samples, 0.53%)</title><rect x="84" y="468" width="6" height="15" fill="rgb(210,183,53)"/><text x="87.00" y="478.50"></text></g><g><title>profile0_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.53%)</title><rect x="90" y="68" width="6" height="15" fill="rgb(246,13,31)"/><text x="93.00" y="78.50"></text></g><g><title>setup_profile0 (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.53%)</title><rect x="90" y="84" width="6" height="15" fill="rgb(246,128,46)"/><text x="93.00" y="94.50"></text></g><g><title>profile0 (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (1 samples, 0.53%)</title><rect x="90" y="100" width="6" height="15" fill="rgb(233,2,41)"/><text x="93.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.53%)</title><rect x="90" y="116" width="6" height="15" fill="rgb(251,141,31)"/><text x="93.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.53%)</title><rect x="90" y="132" width="6" height="15" fill="rgb(252,139,51)"/><text x="93.00" y="142.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.53%)</title><rect x="90" y="148" width="6" height="15" fill="rgb(206,15,43)"/><text x="93.00" y="158.50"></text></g><g><title>0x7fb6ab478d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="90" y="164" width="6" height="15" fill="rgb(228,142,41)"/><text x="93.00" y="174.50"></text></g><g><title>0x7fb6ab477fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="90" y="180" width="6" height="15" fill="rgb(251,147,35)"/><text x="93.00" y="190.50"></text></g><g><title>0x7fb6ab487405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="90" y="196" width="6" height="15" fill="rgb(212,46,26)"/><text x="93.00" y="206.50"></text></g><g><title>0x7fb6ab4862df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="90" y="212" width="6" height="15" fill="rgb(214,218,12)"/><text x="93.00" y="222.50"></text></g><g><title>0x7fb6ab46ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="90" y="228" width="6" height="15" fill="rgb(242,9,9)"/><text x="93.00" y="238.50"></text></g><g><title>0x7fb6ab46a604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="90" y="244" width="6" height="15" fill="rgb(246,159,54)"/><text x="93.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.53%)</title><rect x="115" y="116" width="6" height="15" fill="rgb(212,228,30)"/><text x="118.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.53%)</title><rect x="115" y="132" width="6" height="15" fill="rgb(216,103,50)"/><text x="118.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.53%)</title><rect x="115" y="148" width="6" height="15" fill="rgb(219,44,12)"/><text x="118.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.53%)</title><rect x="177" y="180" width="6" height="15" fill="rgb(227,4,33)"/><text x="180.00" y="190.50"></text></g><g><title>0x7fb690ecaff9 (?) (1 samples, 0.53%)</title><rect x="190" y="212" width="6" height="15" fill="rgb(228,140,46)"/><text x="193.00" y="222.50"></text></g><g><title>0x7fb690ec5ef6 (?) (1 samples, 0.53%)</title><rect x="190" y="228" width="6" height="15" fill="rgb(223,171,4)"/><text x="193.00" y="238.50"></text></g><g><title>0x7fb690eba458 (?) (1 samples, 0.53%)</title><rect x="190" y="244" width="6" height="15" fill="rgb(207,95,38)"/><text x="193.00" y="254.50"></text></g><g><title>0x7fb690eab0ab (?) (1 samples, 0.53%)</title><rect x="190" y="260" width="6" height="15" fill="rgb(242,42,15)"/><text x="193.00" y="270.50"></text></g><g><title>0x7fb6912ed447 (?) (1 samples, 0.53%)</title><rect x="190" y="276" width="6" height="15" fill="rgb(206,62,38)"/><text x="193.00" y="286.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="202" y="260" width="6" height="15" fill="rgb(232,22,35)"/><text x="205.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (3 samples, 1.58%)</title><rect x="196" y="212" width="18" height="15" fill="rgb(216,13,24)"/><text x="199.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.05%)</title><rect x="202" y="228" width="12" height="15" fill="rgb(254,12,48)"/><text x="205.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.05%)</title><rect x="202" y="244" width="12" height="15" fill="rgb(219,102,23)"/><text x="205.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="208" y="260" width="6" height="15" fill="rgb(228,72,31)"/><text x="211.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="208" y="276" width="6" height="15" fill="rgb(252,118,11)"/><text x="211.00" y="286.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.53%)</title><rect x="208" y="292" width="6" height="15" fill="rgb(226,89,25)"/><text x="211.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="214" y="292" width="7" height="15" fill="rgb(234,39,5)"/><text x="217.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="214" y="308" width="7" height="15" fill="rgb(211,61,22)"/><text x="217.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="214" y="324" width="7" height="15" fill="rgb(252,150,46)"/><text x="217.00" y="334.50"></text></g><g><title>0x7fb6d0eea166 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="214" y="340" width="7" height="15" fill="rgb(215,162,33)"/><text x="217.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="221" y="292" width="6" height="15" fill="rgb(229,50,29)"/><text x="224.00" y="302.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.53%)</title><rect x="221" y="308" width="6" height="15" fill="rgb(248,70,14)"/><text x="224.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="227" y="292" width="6" height="15" fill="rgb(235,185,18)"/><text x="230.00" y="302.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="239" y="356" width="7" height="15" fill="rgb(242,37,1)"/><text x="242.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="239" y="372" width="7" height="15" fill="rgb(243,168,42)"/><text x="242.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.05%)</title><rect x="239" y="340" width="13" height="15" fill="rgb(218,92,5)"/><text x="242.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.53%)</title><rect x="246" y="356" width="6" height="15" fill="rgb(226,69,36)"/><text x="249.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="252" y="340" width="6" height="15" fill="rgb(205,85,48)"/><text x="255.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.21%)</title><rect x="214" y="260" width="50" height="15" fill="rgb(221,50,53)"/><text x="217.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (8 samples, 4.21%)</title><rect x="214" y="276" width="50" height="15" fill="rgb(250,56,10)"/><text x="217.00" y="286.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.63%)</title><rect x="233" y="292" width="31" height="15" fill="rgb(245,119,31)"/><text x="236.00" y="302.50">on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.63%)</title><rect x="233" y="308" width="31" height="15" fill="rgb(231,137,24)"/><text x="236.00" y="318.50">on..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.63%)</title><rect x="233" y="324" width="31" height="15" fill="rgb(222,87,25)"/><text x="236.00" y="334.50">on..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="340" width="6" height="15" fill="rgb(222,76,3)"/><text x="261.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="356" width="6" height="15" fill="rgb(214,114,6)"/><text x="261.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="372" width="6" height="15" fill="rgb(240,167,8)"/><text x="261.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="388" width="6" height="15" fill="rgb(212,175,45)"/><text x="261.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="404" width="6" height="15" fill="rgb(210,104,11)"/><text x="261.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="420" width="6" height="15" fill="rgb(207,89,39)"/><text x="261.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="436" width="6" height="15" fill="rgb(242,165,47)"/><text x="261.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="452" width="6" height="15" fill="rgb(207,40,48)"/><text x="261.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="258" y="468" width="6" height="15" fill="rgb(230,121,16)"/><text x="261.00" y="478.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="264" y="260" width="6" height="15" fill="rgb(206,32,17)"/><text x="267.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.53%)</title><rect x="264" y="276" width="6" height="15" fill="rgb(233,193,15)"/><text x="267.00" y="286.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.53%)</title><rect x="264" y="292" width="6" height="15" fill="rgb(250,4,29)"/><text x="267.00" y="302.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="270" y="260" width="7" height="15" fill="rgb(241,35,11)"/><text x="273.00" y="270.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_destroy [clone .localalias.102] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="277" y="276" width="6" height="15" fill="rgb(247,96,54)"/><text x="280.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 6.32%)</title><rect x="214" y="244" width="75" height="15" fill="rgb(253,29,45)"/><text x="217.00" y="254.50">onnxrunt..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.05%)</title><rect x="277" y="260" width="12" height="15" fill="rgb(247,95,47)"/><text x="280.00" y="270.50"></text></g><g><title>std::_Sp_counted_deleter&lt;void*, void (*)(void*), std::allocator&lt;void&gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="283" y="276" width="6" height="15" fill="rgb(243,148,32)"/><text x="286.00" y="286.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.58%)</title><rect x="289" y="244" width="19" height="15" fill="rgb(252,105,37)"/><text x="292.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="301" y="260" width="7" height="15" fill="rgb(218,140,13)"/><text x="304.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (29 samples, 15.26%)</title><rect x="134" y="132" width="180" height="15" fill="rgb(222,107,6)"/><text x="137.00" y="142.50">&lt;lambda&gt; (mlprodict/asv..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (26 samples, 13.68%)</title><rect x="152" y="148" width="162" height="15" fill="rgb(228,148,43)"/><text x="155.00" y="158.50">run (mlprodict/onnxr..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (24 samples, 12.63%)</title><rect x="165" y="164" width="149" height="15" fill="rgb(249,210,36)"/><text x="168.00" y="174.50">_run_whole_runtime ..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (21 samples, 11.05%)</title><rect x="183" y="180" width="131" height="15" fill="rgb(240,32,18)"/><text x="186.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (21 samples, 11.05%)</title><rect x="183" y="196" width="131" height="15" fill="rgb(226,209,40)"/><text x="186.00" y="206.50">run (onnxruntime..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 8.42%)</title><rect x="214" y="212" width="100" height="15" fill="rgb(236,87,28)"/><text x="217.00" y="222.50">pybind11::cp..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 8.42%)</title><rect x="214" y="228" width="100" height="15" fill="rgb(213,39,34)"/><text x="217.00" y="238.50">void pybind1..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="308" y="244" width="6" height="15" fill="rgb(241,176,14)"/><text x="311.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="308" y="260" width="6" height="15" fill="rgb(236,55,3)"/><text x="311.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="308" y="276" width="6" height="15" fill="rgb(225,82,31)"/><text x="311.00" y="286.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (36 samples, 18.95%)</title><rect x="96" y="68" width="224" height="15" fill="rgb(232,78,9)"/><text x="99.00" y="78.50">profile_ort (bench_DecisionTr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (36 samples, 18.95%)</title><rect x="96" y="84" width="224" height="15" fill="rgb(217,20,45)"/><text x="99.00" y="94.50">setup_profile (bench_Decision..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (36 samples, 18.95%)</title><rect x="96" y="100" width="224" height="15" fill="rgb(210,154,43)"/><text x="99.00" y="110.50">profile (bench_DecisionTreeRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (32 samples, 16.84%)</title><rect x="121" y="116" width="199" height="15" fill="rgb(251,70,35)"/><text x="124.00" y="126.50">time_predict (mlprodict/as..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.53%)</title><rect x="314" y="132" width="6" height="15" fill="rgb(237,3,19)"/><text x="317.00" y="142.50"></text></g><g><title>0x7fb6918e554f (?) (1 samples, 0.53%)</title><rect x="320" y="244" width="6" height="15" fill="rgb(206,199,49)"/><text x="323.00" y="254.50"></text></g><g><title>0x7fb6918eb65e (?) (1 samples, 0.53%)</title><rect x="320" y="260" width="6" height="15" fill="rgb(205,176,2)"/><text x="323.00" y="270.50"></text></g><g><title>0x7fb6918eb50f (?) (1 samples, 0.53%)</title><rect x="320" y="276" width="6" height="15" fill="rgb(239,189,12)"/><text x="323.00" y="286.50"></text></g><g><title>0x7fb6918f1d6c (?) (1 samples, 0.53%)</title><rect x="320" y="292" width="6" height="15" fill="rgb(243,77,21)"/><text x="323.00" y="302.50"></text></g><g><title>0x7fb69ae12ab9 (?) (1 samples, 0.53%)</title><rect x="320" y="308" width="6" height="15" fill="rgb(237,86,15)"/><text x="323.00" y="318.50"></text></g><g><title>0x7fb69ae13eab (?) (1 samples, 0.53%)</title><rect x="320" y="324" width="6" height="15" fill="rgb(223,218,45)"/><text x="323.00" y="334.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h) (1 samples, 0.53%)</title><rect x="326" y="260" width="6" height="15" fill="rgb(247,175,34)"/><text x="329.00" y="270.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::push_back (stl_vector.h) (1 samples, 0.53%)</title><rect x="326" y="276" width="6" height="15" fill="rgb(249,50,23)"/><text x="329.00" y="286.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::emplace_back&lt;_object*&gt; (vector.tcc) (1 samples, 0.53%)</title><rect x="326" y="292" width="6" height="15" fill="rgb(246,218,31)"/><text x="329.00" y="302.50"></text></g><g><title>pybind11::detail::get_internals (internals.h) (1 samples, 0.53%)</title><rect x="326" y="308" width="6" height="15" fill="rgb(229,83,1)"/><text x="329.00" y="318.50"></text></g><g><title>0x7fb69ae13ea0 (libgomp.so.1.0.0) (3 samples, 1.58%)</title><rect x="332" y="484" width="19" height="15" fill="rgb(250,195,4)"/><text x="335.00" y="494.50"></text></g><g><title>0x7fb69ae13ea9 (libgomp.so.1.0.0) (10 samples, 5.26%)</title><rect x="351" y="484" width="62" height="15" fill="rgb(236,225,16)"/><text x="354.00" y="494.50">0x7fb6..</text></g><g><title>0x7fb69ae13eab (libgomp.so.1.0.0) (15 samples, 7.89%)</title><rect x="413" y="484" width="93" height="15" fill="rgb(211,128,5)"/><text x="416.00" y="494.50">0x7fb69ae13..</text></g><g><title>0x7fb69ae12ab9 (libgomp.so.1.0.0) (42 samples, 22.11%)</title><rect x="332" y="468" width="261" height="15" fill="rgb(228,229,1)"/><text x="335.00" y="478.50">0x7fb69ae12ab9 (libgomp.so.1.0.0)</text></g><g><title>0x7fb69ae13ead (libgomp.so.1.0.0) (14 samples, 7.37%)</title><rect x="506" y="484" width="87" height="15" fill="rgb(228,108,23)"/><text x="509.00" y="494.50">0x7fb69ae1..</text></g><g><title>0x7fb69ae13cf0 (libgomp.so.1.0.0) (1 samples, 0.53%)</title><rect x="593" y="500" width="7" height="15" fill="rgb(228,166,17)"/><text x="596.00" y="510.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (48 samples, 25.26%)</title><rect x="320" y="100" width="298" height="15" fill="rgb(240,151,23)"/><text x="323.00" y="110.50">profile (bench_DecisionTreeRegressor_def..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 25.26%)</title><rect x="320" y="116" width="298" height="15" fill="rgb(213,205,33)"/><text x="323.00" y="126.50">time_predict (mlprodict/asv_benchmark/co..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (48 samples, 25.26%)</title><rect x="320" y="132" width="298" height="15" fill="rgb(234,21,42)"/><text x="323.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (48 samples, 25.26%)</title><rect x="320" y="148" width="298" height="15" fill="rgb(212,21,33)"/><text x="323.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (48 samples, 25.26%)</title><rect x="320" y="164" width="298" height="15" fill="rgb(246,83,18)"/><text x="323.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (48 samples, 25.26%)</title><rect x="320" y="180" width="298" height="15" fill="rgb(228,10,38)"/><text x="323.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_nod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (48 samples, 25.26%)</title><rect x="320" y="196" width="298" height="15" fill="rgb(249,191,13)"/><text x="323.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (48 samples, 25.26%)</title><rect x="320" y="212" width="298" height="15" fill="rgb(214,100,42)"/><text x="323.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (48 samples, 25.26%)</title><rect x="320" y="228" width="298" height="15" fill="rgb(242,12,32)"/><text x="323.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_tree_e..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (47 samples, 24.74%)</title><rect x="326" y="244" width="292" height="15" fill="rgb(250,63,35)"/><text x="329.00" y="254.50">pybind11::cpp_function::dispatcher (pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (46 samples, 24.21%)</title><rect x="332" y="260" width="286" height="15" fill="rgb(253,183,9)"/><text x="335.00" y="270.50">void pybind11::cpp_function::initializ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (46 samples, 24.21%)</title><rect x="332" y="276" width="286" height="15" fill="rgb(231,111,31)"/><text x="335.00" y="286.50">void pybind11::cpp_function::initializ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (46 samples, 24.21%)</title><rect x="332" y="292" width="286" height="15" fill="rgb(207,143,45)"/><text x="335.00" y="302.50">pybind11::detail::argument_loader&lt;Runt..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (46 samples, 24.21%)</title><rect x="332" y="308" width="286" height="15" fill="rgb(248,106,2)"/><text x="335.00" y="318.50">pybind11::detail::argument_loader&lt;Runt..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (46 samples, 24.21%)</title><rect x="332" y="324" width="286" height="15" fill="rgb(211,85,54)"/><text x="335.00" y="334.50">pybind11::cpp_function::cpp_function&lt;p..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (46 samples, 24.21%)</title><rect x="332" y="340" width="286" height="15" fill="rgb(248,181,28)"/><text x="335.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::~array_t..</text></g><g><title>pybind11::array::~array (numpy.h) (46 samples, 24.21%)</title><rect x="332" y="356" width="286" height="15" fill="rgb(208,188,28)"/><text x="335.00" y="366.50">pybind11::array::~array (numpy.h)</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (46 samples, 24.21%)</title><rect x="332" y="372" width="286" height="15" fill="rgb(208,139,31)"/><text x="335.00" y="382.50">pybind11::buffer::~buffer (pytypes.h)</text></g><g><title>pybind11::object::~object (pytypes.h) (46 samples, 24.21%)</title><rect x="332" y="388" width="286" height="15" fill="rgb(248,227,33)"/><text x="335.00" y="398.50">pybind11::object::~object (pytypes.h)</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (46 samples, 24.21%)</title><rect x="332" y="404" width="286" height="15" fill="rgb(234,118,40)"/><text x="335.00" y="414.50">pybind11::handle::dec_ref &amp; (pytypes.h)</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (46 samples, 24.21%)</title><rect x="332" y="420" width="286" height="15" fill="rgb(214,211,28)"/><text x="335.00" y="430.50">RuntimeTreeEnsembleRegressor&lt;float&gt;::c..</text></g><g><title>pybind11::array::size (numpy.h) (46 samples, 24.21%)</title><rect x="332" y="436" width="286" height="15" fill="rgb(237,182,22)"/><text x="335.00" y="446.50">pybind11::array::size (numpy.h)</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (46 samples, 24.21%)</title><rect x="332" y="452" width="286" height="15" fill="rgb(251,224,50)"/><text x="335.00" y="462.50">std::accumulate&lt;long const*, long, std..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 2.11%)</title><rect x="593" y="468" width="25" height="15" fill="rgb(241,25,29)"/><text x="596.00" y="478.50">G..</text></g><g><title>0x7fb69ae11daa (libgomp.so.1.0.0) (4 samples, 2.11%)</title><rect x="593" y="484" width="25" height="15" fill="rgb(244,15,10)"/><text x="596.00" y="494.50">0..</text></g><g><title>0x7fb69ae13cfb (libgomp.so.1.0.0) (3 samples, 1.58%)</title><rect x="600" y="500" width="18" height="15" fill="rgb(207,209,53)"/><text x="603.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (49 samples, 25.79%)</title><rect x="320" y="68" width="304" height="15" fill="rgb(213,76,38)"/><text x="323.00" y="78.50">profile_pyrt (bench_DecisionTreeRegresso..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (49 samples, 25.79%)</title><rect x="320" y="84" width="304" height="15" fill="rgb(249,66,16)"/><text x="323.00" y="94.50">setup_profile (bench_DecisionTreeRegress..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.53%)</title><rect x="618" y="100" width="6" height="15" fill="rgb(243,157,18)"/><text x="621.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.53%)</title><rect x="618" y="116" width="6" height="15" fill="rgb(215,217,41)"/><text x="621.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.53%)</title><rect x="618" y="132" width="6" height="15" fill="rgb(228,171,18)"/><text x="621.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.53%)</title><rect x="618" y="148" width="6" height="15" fill="rgb(217,12,2)"/><text x="621.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.53%)</title><rect x="618" y="164" width="6" height="15" fill="rgb(223,174,49)"/><text x="621.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.53%)</title><rect x="618" y="180" width="6" height="15" fill="rgb(205,1,37)"/><text x="621.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.53%)</title><rect x="618" y="196" width="6" height="15" fill="rgb(249,89,4)"/><text x="621.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="212" width="6" height="15" fill="rgb(238,31,7)"/><text x="621.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="228" width="6" height="15" fill="rgb(226,44,2)"/><text x="621.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="244" width="6" height="15" fill="rgb(243,56,1)"/><text x="621.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="618" y="260" width="6" height="15" fill="rgb(243,155,32)"/><text x="621.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="276" width="6" height="15" fill="rgb(241,222,41)"/><text x="621.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.53%)</title><rect x="618" y="292" width="6" height="15" fill="rgb(220,163,36)"/><text x="621.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="308" width="6" height="15" fill="rgb(237,105,3)"/><text x="621.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="324" width="6" height="15" fill="rgb(218,11,18)"/><text x="621.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="340" width="6" height="15" fill="rgb(247,65,14)"/><text x="621.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.53%)</title><rect x="618" y="356" width="6" height="15" fill="rgb(241,148,32)"/><text x="621.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.53%)</title><rect x="618" y="372" width="6" height="15" fill="rgb(207,109,30)"/><text x="621.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.53%)</title><rect x="618" y="388" width="6" height="15" fill="rgb(254,143,41)"/><text x="621.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.53%)</title><rect x="618" y="404" width="6" height="15" fill="rgb(220,79,25)"/><text x="621.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.53%)</title><rect x="618" y="420" width="6" height="15" fill="rgb(228,11,2)"/><text x="621.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.53%)</title><rect x="618" y="436" width="6" height="15" fill="rgb(222,30,2)"/><text x="621.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.53%)</title><rect x="618" y="452" width="6" height="15" fill="rgb(207,184,32)"/><text x="621.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.53%)</title><rect x="618" y="468" width="6" height="15" fill="rgb(231,129,37)"/><text x="621.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.53%)</title><rect x="618" y="484" width="6" height="15" fill="rgb(224,188,33)"/><text x="621.00" y="494.50"></text></g><g><title>process_documentation (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.53%)</title><rect x="618" y="500" width="6" height="15" fill="rgb(205,192,28)"/><text x="621.00" y="510.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.53%)</title><rect x="618" y="516" width="6" height="15" fill="rgb(210,221,13)"/><text x="621.00" y="526.50"></text></g><g><title>0x7fb6ab478d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="649" y="148" width="6" height="15" fill="rgb(248,45,29)"/><text x="652.00" y="158.50"></text></g><g><title>0x7fb6ab477fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="649" y="164" width="6" height="15" fill="rgb(229,32,14)"/><text x="652.00" y="174.50"></text></g><g><title>0x7fb6ab487540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="649" y="180" width="6" height="15" fill="rgb(236,153,22)"/><text x="652.00" y="190.50"></text></g><g><title>0x7fb6ab45c2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="649" y="196" width="6" height="15" fill="rgb(224,185,0)"/><text x="652.00" y="206.50"></text></g><g><title>0x7fb6ab45b530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="649" y="212" width="6" height="15" fill="rgb(228,100,12)"/><text x="652.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (1 samples, 0.53%)</title><rect x="649" y="228" width="6" height="15" fill="rgb(209,153,9)"/><text x="652.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.53%)</title><rect x="686" y="228" width="7" height="15" fill="rgb(236,157,28)"/><text x="689.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.53%)</title><rect x="693" y="244" width="6" height="15" fill="rgb(239,208,48)"/><text x="696.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.53%)</title><rect x="693" y="260" width="6" height="15" fill="rgb(244,108,25)"/><text x="696.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.53%)</title><rect x="693" y="276" width="6" height="15" fill="rgb(242,145,44)"/><text x="696.00" y="286.50"></text></g><g><title>0x7fb6ab477f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.11%)</title><rect x="680" y="180" width="25" height="15" fill="rgb(234,46,15)"/><text x="683.00" y="190.50">0..</text></g><g><title>0x7fb6ab467d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.11%)</title><rect x="680" y="196" width="25" height="15" fill="rgb(225,89,43)"/><text x="683.00" y="206.50">0..</text></g><g><title>PyArray_New (ctors.c) (4 samples, 2.11%)</title><rect x="680" y="212" width="25" height="15" fill="rgb(246,146,26)"/><text x="683.00" y="222.50">P..</text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.05%)</title><rect x="693" y="228" width="12" height="15" fill="rgb(230,167,33)"/><text x="696.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.53%)</title><rect x="699" y="244" width="6" height="15" fill="rgb(205,161,17)"/><text x="702.00" y="254.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.53%)</title><rect x="718" y="308" width="6" height="15" fill="rgb(243,183,2)"/><text x="721.00" y="318.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.53%)</title><rect x="724" y="308" width="6" height="15" fill="rgb(219,138,21)"/><text x="727.00" y="318.50"></text></g><g><title>0x7fb6d0e0c902 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="724" y="324" width="6" height="15" fill="rgb(215,25,9)"/><text x="727.00" y="334.50"></text></g><g><title>0x7fb6ab46ad04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.16%)</title><rect x="705" y="228" width="37" height="15" fill="rgb(211,107,23)"/><text x="708.00" y="238.50">0x7..</text></g><g><title>0x7fb6ab46a666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.16%)</title><rect x="705" y="244" width="37" height="15" fill="rgb(208,64,37)"/><text x="708.00" y="254.50">0x7..</text></g><g><title>0x7fb6ab4602fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 3.16%)</title><rect x="705" y="260" width="37" height="15" fill="rgb(225,30,12)"/><text x="708.00" y="270.50">0x7..</text></g><g><title>array_getbuffer (buffer.c) (6 samples, 3.16%)</title><rect x="705" y="276" width="37" height="15" fill="rgb(218,174,48)"/><text x="708.00" y="286.50">arr..</text></g><g><title>_buffer_get_info (buffer.c) (5 samples, 2.63%)</title><rect x="711" y="292" width="31" height="15" fill="rgb(228,42,22)"/><text x="714.00" y="302.50">_b..</text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 1.05%)</title><rect x="730" y="308" width="12" height="15" fill="rgb(219,75,1)"/><text x="733.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 1.05%)</title><rect x="730" y="324" width="12" height="15" fill="rgb(226,54,8)"/><text x="733.00" y="334.50"></text></g><g><title>0x7fb6ab4862df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.68%)</title><rect x="705" y="212" width="44" height="15" fill="rgb(219,102,46)"/><text x="708.00" y="222.50">0x7f..</text></g><g><title>0x7fb6ab46ae72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="742" y="228" width="7" height="15" fill="rgb(239,136,29)"/><text x="745.00" y="238.50"></text></g><g><title>0x7fb6ab45e2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="742" y="244" width="7" height="15" fill="rgb(240,12,48)"/><text x="745.00" y="254.50"></text></g><g><title>0x7fb6ab45ddad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="742" y="260" width="7" height="15" fill="rgb(252,145,15)"/><text x="745.00" y="270.50"></text></g><g><title>0x7fb6ab486364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="749" y="212" width="6" height="15" fill="rgb(213,62,28)"/><text x="752.00" y="222.50"></text></g><g><title>0x7fb6ab4864b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="755" y="212" width="6" height="15" fill="rgb(248,0,52)"/><text x="758.00" y="222.50"></text></g><g><title>0x7fb6ab486592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="761" y="212" width="6" height="15" fill="rgb(254,46,32)"/><text x="764.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.53%)</title><rect x="761" y="228" width="6" height="15" fill="rgb(235,132,36)"/><text x="764.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.53%)</title><rect x="761" y="244" width="6" height="15" fill="rgb(220,227,10)"/><text x="764.00" y="254.50"></text></g><g><title>0x7fb6ab477fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.79%)</title><rect x="705" y="180" width="68" height="15" fill="rgb(253,2,51)"/><text x="708.00" y="190.50">0x7fb6a..</text></g><g><title>0x7fb6ab487405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.79%)</title><rect x="705" y="196" width="68" height="15" fill="rgb(215,42,39)"/><text x="708.00" y="206.50">0x7fb6a..</text></g><g><title>0x7fb6ab486c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="767" y="212" width="6" height="15" fill="rgb(225,165,36)"/><text x="770.00" y="222.50"></text></g><g><title>0x7fb6ab45e529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="767" y="228" width="6" height="15" fill="rgb(245,66,43)"/><text x="770.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.53%)</title><rect x="767" y="244" width="6" height="15" fill="rgb(213,94,43)"/><text x="770.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.53%)</title><rect x="767" y="260" width="6" height="15" fill="rgb(239,49,11)"/><text x="770.00" y="270.50"></text></g><g><title>0x7fb6d0e22e50 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="780" y="212" width="6" height="15" fill="rgb(216,205,13)"/><text x="783.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.53%)</title><rect x="786" y="228" width="6" height="15" fill="rgb(224,208,5)"/><text x="789.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.53%)</title><rect x="786" y="244" width="6" height="15" fill="rgb(250,107,34)"/><text x="789.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 1.05%)</title><rect x="786" y="212" width="12" height="15" fill="rgb(250,228,39)"/><text x="789.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.53%)</title><rect x="792" y="228" width="6" height="15" fill="rgb(240,210,34)"/><text x="795.00" y="238.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.53%)</title><rect x="792" y="244" width="6" height="15" fill="rgb(208,225,10)"/><text x="795.00" y="254.50"></text></g><g><title>0x7fb6ab47805a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.63%)</title><rect x="773" y="180" width="31" height="15" fill="rgb(235,41,20)"/><text x="776.00" y="190.50">0x..</text></g><g><title>array_take (methods.c) (5 samples, 2.63%)</title><rect x="773" y="196" width="31" height="15" fill="rgb(205,122,47)"/><text x="776.00" y="206.50">ar..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.53%)</title><rect x="798" y="212" width="6" height="15" fill="rgb(231,36,51)"/><text x="801.00" y="222.50"></text></g><g><title>0x7fb6ab478062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="804" y="180" width="7" height="15" fill="rgb(245,89,9)"/><text x="807.00" y="190.50"></text></g><g><title>0x7fb6ab47814f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.05%)</title><rect x="811" y="180" width="12" height="15" fill="rgb(238,164,42)"/><text x="814.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 1.05%)</title><rect x="811" y="196" width="12" height="15" fill="rgb(221,183,21)"/><text x="814.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 1.05%)</title><rect x="811" y="212" width="12" height="15" fill="rgb(219,60,54)"/><text x="814.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 1.05%)</title><rect x="811" y="228" width="12" height="15" fill="rgb(245,121,13)"/><text x="814.00" y="238.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.53%)</title><rect x="823" y="260" width="6" height="15" fill="rgb(209,24,13)"/><text x="826.00" y="270.50"></text></g><g><title>0x7fb6ab478d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 13.16%)</title><rect x="680" y="164" width="156" height="15" fill="rgb(249,194,28)"/><text x="683.00" y="174.50">0x7fb6ab478d2e (skle..</text></g><g><title>0x7fb6ab478328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.05%)</title><rect x="823" y="180" width="13" height="15" fill="rgb(216,37,54)"/><text x="826.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 1.05%)</title><rect x="823" y="196" width="13" height="15" fill="rgb(232,106,2)"/><text x="826.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 1.05%)</title><rect x="823" y="212" width="13" height="15" fill="rgb(244,93,54)"/><text x="826.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 1.05%)</title><rect x="823" y="228" width="13" height="15" fill="rgb(241,59,34)"/><text x="826.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 1.05%)</title><rect x="823" y="244" width="13" height="15" fill="rgb(252,77,0)"/><text x="826.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.53%)</title><rect x="829" y="260" width="7" height="15" fill="rgb(222,30,40)"/><text x="832.00" y="270.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.53%)</title><rect x="829" y="276" width="7" height="15" fill="rgb(245,144,34)"/><text x="832.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (2 samples, 1.05%)</title><rect x="916" y="196" width="13" height="15" fill="rgb(230,116,6)"/><text x="919.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 2.11%)</title><rect x="929" y="196" width="25" height="15" fill="rgb(230,188,26)"/><text x="932.00" y="206.50">_..</text></g><g><title>__init__ (warnings.py) (3 samples, 1.58%)</title><rect x="954" y="196" width="18" height="15" fill="rgb(246,135,3)"/><text x="957.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.53%)</title><rect x="985" y="212" width="6" height="15" fill="rgb(229,91,53)"/><text x="988.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 3.16%)</title><rect x="972" y="196" width="37" height="15" fill="rgb(237,65,19)"/><text x="975.00" y="206.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.58%)</title><rect x="991" y="212" width="18" height="15" fill="rgb(210,88,1)"/><text x="994.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (12 samples, 6.32%)</title><rect x="1009" y="196" width="75" height="15" fill="rgb(221,26,28)"/><text x="1012.00" y="206.50">_num_sam..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 1.58%)</title><rect x="1065" y="212" width="19" height="15" fill="rgb(238,120,1)"/><text x="1068.00" y="222.50"></text></g><g><title>0x7fb6d002f0a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="1090" y="228" width="6" height="15" fill="rgb(214,48,31)"/><text x="1093.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 1.58%)</title><rect x="1084" y="196" width="19" height="15" fill="rgb(235,63,46)"/><text x="1087.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (3 samples, 1.58%)</title><rect x="1084" y="212" width="19" height="15" fill="rgb(206,113,45)"/><text x="1087.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.53%)</title><rect x="1096" y="228" width="7" height="15" fill="rgb(224,137,24)"/><text x="1099.00" y="238.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.53%)</title><rect x="1096" y="244" width="7" height="15" fill="rgb(211,113,18)"/><text x="1099.00" y="254.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 1.05%)</title><rect x="1103" y="196" width="12" height="15" fill="rgb(240,179,2)"/><text x="1106.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 1.05%)</title><rect x="1103" y="212" width="12" height="15" fill="rgb(222,210,25)"/><text x="1106.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.53%)</title><rect x="1109" y="228" width="6" height="15" fill="rgb(230,25,25)"/><text x="1112.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.53%)</title><rect x="1109" y="244" width="6" height="15" fill="rgb(231,185,47)"/><text x="1112.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.53%)</title><rect x="1109" y="260" width="6" height="15" fill="rgb(251,53,10)"/><text x="1112.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.53%)</title><rect x="1109" y="276" width="6" height="15" fill="rgb(232,146,26)"/><text x="1112.00" y="286.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (46 samples, 24.21%)</title><rect x="836" y="164" width="285" height="15" fill="rgb(232,191,13)"/><text x="839.00" y="174.50">_validate_X_predict (sklearn/tree/_cla..</text></g><g><title>check_array (sklearn/utils/validation.py) (44 samples, 23.16%)</title><rect x="848" y="180" width="273" height="15" fill="rgb(231,193,24)"/><text x="851.00" y="190.50">check_array (sklearn/utils/validatio..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.53%)</title><rect x="1115" y="196" width="6" height="15" fill="rgb(205,159,29)"/><text x="1118.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.53%)</title><rect x="1115" y="212" width="6" height="15" fill="rgb(231,205,7)"/><text x="1118.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 1.05%)</title><rect x="1121" y="164" width="13" height="15" fill="rgb(219,66,15)"/><text x="1124.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.53%)</title><rect x="1127" y="180" width="7" height="15" fill="rgb(209,130,20)"/><text x="1130.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 1.05%)</title><rect x="1165" y="196" width="12" height="15" fill="rgb(230,131,25)"/><text x="1168.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (8 samples, 4.21%)</title><rect x="1134" y="164" width="49" height="15" fill="rgb(219,24,20)"/><text x="1137.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 3.68%)</title><rect x="1140" y="180" width="43" height="15" fill="rgb(234,146,34)"/><text x="1143.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.53%)</title><rect x="1177" y="196" width="6" height="15" fill="rgb(235,5,20)"/><text x="1180.00" y="206.50"></text></g><g><title>all (190 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(223,223,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (190 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(248,177,16)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (91 samples, 47.89%)</title><rect x="624" y="68" width="566" height="15" fill="rgb(208,130,12)"/><text x="627.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (91 samples, 47.89%)</title><rect x="624" y="84" width="566" height="15" fill="rgb(217,210,7)"/><text x="627.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (91 samples, 47.89%)</title><rect x="624" y="100" width="566" height="15" fill="rgb(213,89,48)"/><text x="627.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (90 samples, 47.37%)</title><rect x="631" y="116" width="559" height="15" fill="rgb(230,70,53)"/><text x="634.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (88 samples, 46.32%)</title><rect x="643" y="132" width="547" height="15" fill="rgb(231,108,33)"/><text x="646.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (86 samples, 45.26%)</title><rect x="655" y="148" width="535" height="15" fill="rgb(213,167,29)"/><text x="658.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.53%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(241,102,44)"/><text x="1186.00" y="174.50"></text></g></g></svg>