<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1846" onload="init(evt)" viewBox="0 0 1200 1846" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1846" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1829.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1829.00"> </text><g id="frames"><g><title>_call_aside (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(211,76,6)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(253,67,28)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(235,9,14)"/><text x="13.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(241,148,15)"/><text x="13.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(238,106,38)"/><text x="13.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(240,197,30)"/><text x="13.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(232,37,25)"/><text x="13.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(247,184,37)"/><text x="13.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="10" y="964" width="5" height="15" fill="rgb(226,31,14)"/><text x="13.00" y="974.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.47%)</title><rect x="10" y="980" width="5" height="15" fill="rgb(225,2,45)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (2 samples, 0.93%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(239,133,40)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(246,196,39)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(238,61,34)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(217,150,3)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(225,43,28)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(241,35,46)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (2 samples, 0.93%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(211,188,52)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(207,184,20)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(225,77,50)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(227,204,50)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(218,228,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(236,135,38)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (2 samples, 0.93%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(253,185,7)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(252,87,33)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(226,39,41)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(253,172,53)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(227,209,12)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(245,118,34)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (2 samples, 0.93%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(222,165,31)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(248,87,19)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(244,87,54)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(233,67,35)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(234,20,22)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(234,165,11)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(224,105,1)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(250,41,48)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(209,158,48)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (2 samples, 0.93%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(215,121,51)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(222,216,0)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(225,208,36)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(249,24,35)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(213,37,33)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(229,26,51)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (2 samples, 0.93%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(227,17,51)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="836" width="5" height="15" fill="rgb(215,160,13)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="852" width="5" height="15" fill="rgb(210,194,9)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(215,123,3)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(227,1,48)"/><text x="18.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(221,162,32)"/><text x="18.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.47%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(226,152,29)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(235,209,46)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(240,42,25)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(227,138,45)"/><text x="18.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(208,185,1)"/><text x="18.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.47%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(223,77,6)"/><text x="18.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(218,125,36)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="1028" width="5" height="15" fill="rgb(215,196,24)"/><text x="18.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="1044" width="5" height="15" fill="rgb(233,110,22)"/><text x="18.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="15" y="1060" width="5" height="15" fill="rgb(216,154,22)"/><text x="18.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="15" y="1076" width="5" height="15" fill="rgb(207,60,20)"/><text x="18.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1092" width="5" height="15" fill="rgb(227,82,20)"/><text x="18.00" y="1102.50"></text></g><g><title>makeHTMLTags (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1108" width="5" height="15" fill="rgb(217,210,30)"/><text x="18.00" y="1118.50"></text></g><g><title>_makeTags (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1124" width="5" height="15" fill="rgb(232,75,3)"/><text x="18.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1140" width="5" height="15" fill="rgb(229,163,5)"/><text x="18.00" y="1150.50"></text></g><g><title>leaveWhitespace (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1156" width="5" height="15" fill="rgb(253,41,14)"/><text x="18.00" y="1166.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1172" width="5" height="15" fill="rgb(246,18,15)"/><text x="18.00" y="1182.50"></text></g><g><title>copy (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.47%)</title><rect x="15" y="1188" width="5" height="15" fill="rgb(223,34,7)"/><text x="18.00" y="1198.50"></text></g><g><title>copy (copy.py) (1 samples, 0.47%)</title><rect x="15" y="1204" width="5" height="15" fill="rgb(209,55,13)"/><text x="18.00" y="1214.50"></text></g><g><title>_reconstruct (copy.py) (1 samples, 0.47%)</title><rect x="15" y="1220" width="5" height="15" fill="rgb(214,206,17)"/><text x="18.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="10" y="196" width="16" height="15" fill="rgb(221,213,4)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="10" y="212" width="16" height="15" fill="rgb(251,63,54)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="10" y="228" width="16" height="15" fill="rgb(238,196,11)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="10" y="244" width="16" height="15" fill="rgb(224,48,1)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="10" y="260" width="16" height="15" fill="rgb(220,47,30)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="10" y="276" width="16" height="15" fill="rgb(233,152,54)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.47%)</title><rect x="20" y="292" width="6" height="15" fill="rgb(207,25,28)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="308" width="6" height="15" fill="rgb(210,129,26)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="324" width="6" height="15" fill="rgb(239,3,10)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="340" width="6" height="15" fill="rgb(245,89,49)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="356" width="6" height="15" fill="rgb(243,28,14)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="372" width="6" height="15" fill="rgb(249,169,13)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.47%)</title><rect x="20" y="388" width="6" height="15" fill="rgb(242,141,51)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="404" width="6" height="15" fill="rgb(210,221,9)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="420" width="6" height="15" fill="rgb(211,60,3)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="436" width="6" height="15" fill="rgb(243,90,14)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="452" width="6" height="15" fill="rgb(244,194,6)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="468" width="6" height="15" fill="rgb(251,156,36)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.47%)</title><rect x="20" y="484" width="6" height="15" fill="rgb(232,172,27)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="500" width="6" height="15" fill="rgb(225,46,34)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="516" width="6" height="15" fill="rgb(233,173,15)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="532" width="6" height="15" fill="rgb(226,73,34)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="548" width="6" height="15" fill="rgb(243,45,38)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="564" width="6" height="15" fill="rgb(211,38,4)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.47%)</title><rect x="20" y="580" width="6" height="15" fill="rgb(220,134,48)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="596" width="6" height="15" fill="rgb(241,193,9)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="612" width="6" height="15" fill="rgb(235,49,52)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="628" width="6" height="15" fill="rgb(243,58,16)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="644" width="6" height="15" fill="rgb(253,165,50)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="660" width="6" height="15" fill="rgb(240,209,24)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.47%)</title><rect x="20" y="676" width="6" height="15" fill="rgb(242,196,31)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="692" width="6" height="15" fill="rgb(223,49,54)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="708" width="6" height="15" fill="rgb(239,172,37)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="724" width="6" height="15" fill="rgb(243,179,6)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="740" width="6" height="15" fill="rgb(222,30,43)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="756" width="6" height="15" fill="rgb(242,26,10)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.47%)</title><rect x="20" y="772" width="6" height="15" fill="rgb(248,82,30)"/><text x="23.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="788" width="6" height="15" fill="rgb(254,107,8)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="804" width="6" height="15" fill="rgb(220,165,44)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="820" width="6" height="15" fill="rgb(238,158,6)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="836" width="6" height="15" fill="rgb(245,212,12)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="852" width="6" height="15" fill="rgb(206,149,26)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(251,116,42)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(219,207,14)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.47%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(246,229,18)"/><text x="23.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(208,2,26)"/><text x="23.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(214,28,17)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="948" width="6" height="15" fill="rgb(209,13,3)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="964" width="6" height="15" fill="rgb(254,78,0)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="980" width="6" height="15" fill="rgb(244,210,53)"/><text x="23.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="20" y="996" width="6" height="15" fill="rgb(253,137,27)"/><text x="23.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="20" y="1012" width="6" height="15" fill="rgb(206,134,37)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.47%)</title><rect x="20" y="1028" width="6" height="15" fill="rgb(253,48,3)"/><text x="23.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.47%)</title><rect x="20" y="1044" width="6" height="15" fill="rgb(249,28,0)"/><text x="23.00" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 0.47%)</title><rect x="20" y="1060" width="6" height="15" fill="rgb(244,23,16)"/><text x="23.00" y="1070.50"></text></g><g><title>getargspec_no_self (scipy/_lib/_util.py) (1 samples, 0.47%)</title><rect x="20" y="1076" width="6" height="15" fill="rgb(217,84,17)"/><text x="23.00" y="1086.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.47%)</title><rect x="20" y="1092" width="6" height="15" fill="rgb(218,7,2)"/><text x="23.00" y="1102.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.47%)</title><rect x="20" y="1108" width="6" height="15" fill="rgb(240,228,3)"/><text x="23.00" y="1118.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.47%)</title><rect x="20" y="1124" width="6" height="15" fill="rgb(237,196,54)"/><text x="23.00" y="1134.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.47%)</title><rect x="20" y="1140" width="6" height="15" fill="rgb(211,107,40)"/><text x="23.00" y="1150.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.47%)</title><rect x="20" y="1156" width="6" height="15" fill="rgb(213,90,40)"/><text x="23.00" y="1166.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.47%)</title><rect x="20" y="1172" width="6" height="15" fill="rgb(205,66,3)"/><text x="23.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="26" y="1476" width="5" height="15" fill="rgb(227,185,3)"/><text x="29.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="26" y="1492" width="5" height="15" fill="rgb(227,180,11)"/><text x="29.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="26" y="1508" width="5" height="15" fill="rgb(242,95,45)"/><text x="29.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="26" y="1524" width="5" height="15" fill="rgb(232,73,1)"/><text x="29.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="26" y="1540" width="5" height="15" fill="rgb(238,44,35)"/><text x="29.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.47%)</title><rect x="26" y="1556" width="5" height="15" fill="rgb(243,78,33)"/><text x="29.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.47%)</title><rect x="26" y="1572" width="5" height="15" fill="rgb(247,34,8)"/><text x="29.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.47%)</title><rect x="26" y="1588" width="5" height="15" fill="rgb(208,105,21)"/><text x="29.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.47%)</title><rect x="26" y="1604" width="5" height="15" fill="rgb(226,148,7)"/><text x="29.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.47%)</title><rect x="26" y="1620" width="5" height="15" fill="rgb(254,83,52)"/><text x="29.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.47%)</title><rect x="26" y="1636" width="5" height="15" fill="rgb(242,79,14)"/><text x="29.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (1 samples, 0.47%)</title><rect x="26" y="1652" width="5" height="15" fill="rgb(222,201,2)"/><text x="29.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.47%)</title><rect x="26" y="1668" width="5" height="15" fill="rgb(251,183,39)"/><text x="29.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (1 samples, 0.47%)</title><rect x="26" y="1684" width="5" height="15" fill="rgb(229,81,22)"/><text x="29.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.47%)</title><rect x="26" y="1700" width="5" height="15" fill="rgb(208,176,24)"/><text x="29.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.47%)</title><rect x="26" y="1716" width="5" height="15" fill="rgb(245,52,47)"/><text x="29.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.47%)</title><rect x="26" y="1732" width="5" height="15" fill="rgb(237,0,17)"/><text x="29.00" y="1742.50"></text></g><g><title>expect (jinja2/lexer.py) (1 samples, 0.47%)</title><rect x="26" y="1748" width="5" height="15" fill="rgb(217,27,30)"/><text x="29.00" y="1758.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.47%)</title><rect x="26" y="1764" width="5" height="15" fill="rgb(221,199,39)"/><text x="29.00" y="1774.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.47%)</title><rect x="26" y="1780" width="5" height="15" fill="rgb(226,118,23)"/><text x="29.00" y="1790.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.47%)</title><rect x="26" y="1796" width="5" height="15" fill="rgb(240,107,21)"/><text x="29.00" y="1806.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.47%)</title><rect x="31" y="1508" width="6" height="15" fill="rgb(225,216,8)"/><text x="34.00" y="1518.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 1.40%)</title><rect x="26" y="1236" width="16" height="15" fill="rgb(250,55,40)"/><text x="29.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1252" width="16" height="15" fill="rgb(231,203,42)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1268" width="16" height="15" fill="rgb(229,47,36)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1284" width="16" height="15" fill="rgb(235,28,2)"/><text x="29.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1300" width="16" height="15" fill="rgb(241,71,52)"/><text x="29.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1316" width="16" height="15" fill="rgb(223,34,11)"/><text x="29.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="26" y="1332" width="16" height="15" fill="rgb(239,127,32)"/><text x="29.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1348" width="16" height="15" fill="rgb(231,183,31)"/><text x="29.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 1.40%)</title><rect x="26" y="1364" width="16" height="15" fill="rgb(247,226,26)"/><text x="29.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1380" width="16" height="15" fill="rgb(238,103,29)"/><text x="29.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1396" width="16" height="15" fill="rgb(242,95,19)"/><text x="29.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1412" width="16" height="15" fill="rgb(216,166,31)"/><text x="29.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="26" y="1428" width="16" height="15" fill="rgb(234,41,47)"/><text x="29.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="26" y="1444" width="16" height="15" fill="rgb(230,11,15)"/><text x="29.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 1.40%)</title><rect x="26" y="1460" width="16" height="15" fill="rgb(248,177,17)"/><text x="29.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.93%)</title><rect x="31" y="1476" width="11" height="15" fill="rgb(233,9,45)"/><text x="34.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.93%)</title><rect x="31" y="1492" width="11" height="15" fill="rgb(231,27,8)"/><text x="34.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.47%)</title><rect x="37" y="1508" width="5" height="15" fill="rgb(243,46,0)"/><text x="40.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.47%)</title><rect x="37" y="1524" width="5" height="15" fill="rgb(252,48,13)"/><text x="40.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.47%)</title><rect x="37" y="1540" width="5" height="15" fill="rgb(245,113,12)"/><text x="40.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.47%)</title><rect x="37" y="1556" width="5" height="15" fill="rgb(220,114,44)"/><text x="40.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.47%)</title><rect x="37" y="1572" width="5" height="15" fill="rgb(234,80,4)"/><text x="40.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.47%)</title><rect x="37" y="1588" width="5" height="15" fill="rgb(238,184,25)"/><text x="40.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="484" width="22" height="15" fill="rgb(221,78,11)"/><text x="29.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="500" width="22" height="15" fill="rgb(224,226,40)"/><text x="29.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="516" width="22" height="15" fill="rgb(220,47,24)"/><text x="29.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="532" width="22" height="15" fill="rgb(215,2,47)"/><text x="29.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="548" width="22" height="15" fill="rgb(241,206,36)"/><text x="29.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="564" width="22" height="15" fill="rgb(224,202,54)"/><text x="29.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.86%)</title><rect x="26" y="580" width="22" height="15" fill="rgb(209,145,31)"/><text x="29.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="596" width="22" height="15" fill="rgb(254,66,32)"/><text x="29.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="612" width="22" height="15" fill="rgb(215,65,16)"/><text x="29.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="628" width="22" height="15" fill="rgb(206,146,17)"/><text x="29.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="644" width="22" height="15" fill="rgb(208,223,44)"/><text x="29.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="660" width="22" height="15" fill="rgb(215,160,31)"/><text x="29.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.86%)</title><rect x="26" y="676" width="22" height="15" fill="rgb(214,107,4)"/><text x="29.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="692" width="22" height="15" fill="rgb(238,150,21)"/><text x="29.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="708" width="22" height="15" fill="rgb(236,160,4)"/><text x="29.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="724" width="22" height="15" fill="rgb(222,95,4)"/><text x="29.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="740" width="22" height="15" fill="rgb(212,214,13)"/><text x="29.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="756" width="22" height="15" fill="rgb(239,107,24)"/><text x="29.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 1.86%)</title><rect x="26" y="772" width="22" height="15" fill="rgb(254,221,53)"/><text x="29.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="788" width="22" height="15" fill="rgb(243,153,35)"/><text x="29.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="804" width="22" height="15" fill="rgb(222,143,16)"/><text x="29.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="820" width="22" height="15" fill="rgb(217,195,8)"/><text x="29.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="836" width="22" height="15" fill="rgb(230,1,8)"/><text x="29.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="852" width="22" height="15" fill="rgb(219,33,47)"/><text x="29.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 1.86%)</title><rect x="26" y="868" width="22" height="15" fill="rgb(249,179,45)"/><text x="29.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="884" width="22" height="15" fill="rgb(222,81,44)"/><text x="29.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="900" width="22" height="15" fill="rgb(225,68,29)"/><text x="29.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="916" width="22" height="15" fill="rgb(232,93,22)"/><text x="29.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="932" width="22" height="15" fill="rgb(243,106,11)"/><text x="29.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="948" width="22" height="15" fill="rgb(222,135,36)"/><text x="29.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="964" width="22" height="15" fill="rgb(232,145,18)"/><text x="29.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="980" width="22" height="15" fill="rgb(213,26,22)"/><text x="29.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="996" width="22" height="15" fill="rgb(232,95,3)"/><text x="29.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 1.86%)</title><rect x="26" y="1012" width="22" height="15" fill="rgb(222,207,24)"/><text x="29.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1028" width="22" height="15" fill="rgb(242,134,10)"/><text x="29.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1044" width="22" height="15" fill="rgb(247,194,9)"/><text x="29.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1060" width="22" height="15" fill="rgb(221,101,17)"/><text x="29.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="1076" width="22" height="15" fill="rgb(237,23,37)"/><text x="29.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1092" width="22" height="15" fill="rgb(210,18,20)"/><text x="29.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 1.86%)</title><rect x="26" y="1108" width="22" height="15" fill="rgb(218,94,31)"/><text x="29.00" y="1118.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1124" width="22" height="15" fill="rgb(222,59,5)"/><text x="29.00" y="1134.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1140" width="22" height="15" fill="rgb(232,133,13)"/><text x="29.00" y="1150.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1156" width="22" height="15" fill="rgb(245,79,22)"/><text x="29.00" y="1166.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1172" width="22" height="15" fill="rgb(227,79,34)"/><text x="29.00" y="1182.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1188" width="22" height="15" fill="rgb(251,149,21)"/><text x="29.00" y="1198.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="26" y="1204" width="22" height="15" fill="rgb(250,222,52)"/><text x="29.00" y="1214.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="26" y="1220" width="22" height="15" fill="rgb(237,87,40)"/><text x="29.00" y="1230.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (1 samples, 0.47%)</title><rect x="42" y="1236" width="6" height="15" fill="rgb(205,87,41)"/><text x="45.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="42" y="1252" width="6" height="15" fill="rgb(237,219,50)"/><text x="45.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="42" y="1268" width="6" height="15" fill="rgb(220,118,48)"/><text x="45.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="42" y="1284" width="6" height="15" fill="rgb(232,68,1)"/><text x="45.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="42" y="1300" width="6" height="15" fill="rgb(220,88,8)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="42" y="1316" width="6" height="15" fill="rgb(207,118,46)"/><text x="45.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="42" y="1332" width="6" height="15" fill="rgb(243,113,18)"/><text x="45.00" y="1342.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="42" y="1348" width="6" height="15" fill="rgb(229,29,49)"/><text x="45.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="42" y="1364" width="6" height="15" fill="rgb(229,197,47)"/><text x="45.00" y="1374.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="42" y="1380" width="6" height="15" fill="rgb(213,147,13)"/><text x="45.00" y="1390.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.47%)</title><rect x="42" y="1396" width="6" height="15" fill="rgb(212,133,32)"/><text x="45.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="48" y="1188" width="5" height="15" fill="rgb(205,182,30)"/><text x="51.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (1 samples, 0.47%)</title><rect x="48" y="1204" width="5" height="15" fill="rgb(216,77,35)"/><text x="51.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="48" y="1220" width="5" height="15" fill="rgb(225,61,37)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="48" y="1236" width="5" height="15" fill="rgb(251,219,26)"/><text x="51.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="48" y="1252" width="5" height="15" fill="rgb(212,112,21)"/><text x="51.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="48" y="1268" width="5" height="15" fill="rgb(225,195,41)"/><text x="51.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="48" y="1284" width="5" height="15" fill="rgb(213,48,16)"/><text x="51.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="48" y="1300" width="5" height="15" fill="rgb(238,123,54)"/><text x="51.00" y="1310.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (2 samples, 0.93%)</title><rect x="48" y="1108" width="11" height="15" fill="rgb(231,120,50)"/><text x="51.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="48" y="1124" width="11" height="15" fill="rgb(216,80,23)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="48" y="1140" width="11" height="15" fill="rgb(209,87,27)"/><text x="51.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="48" y="1156" width="11" height="15" fill="rgb(220,11,40)"/><text x="51.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="48" y="1172" width="11" height="15" fill="rgb(206,218,17)"/><text x="51.00" y="1182.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="53" y="1188" width="6" height="15" fill="rgb(209,15,9)"/><text x="56.00" y="1198.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="53" y="1204" width="6" height="15" fill="rgb(252,84,47)"/><text x="56.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1124" width="5" height="15" fill="rgb(225,37,13)"/><text x="62.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1140" width="5" height="15" fill="rgb(248,96,0)"/><text x="62.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1156" width="5" height="15" fill="rgb(208,213,2)"/><text x="62.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="1172" width="5" height="15" fill="rgb(210,106,50)"/><text x="62.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1188" width="5" height="15" fill="rgb(237,118,47)"/><text x="62.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="1204" width="5" height="15" fill="rgb(216,29,20)"/><text x="62.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1220" width="5" height="15" fill="rgb(249,68,0)"/><text x="62.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1236" width="5" height="15" fill="rgb(227,42,2)"/><text x="62.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1252" width="5" height="15" fill="rgb(236,170,45)"/><text x="62.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="1268" width="5" height="15" fill="rgb(254,225,22)"/><text x="62.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1284" width="5" height="15" fill="rgb(254,223,52)"/><text x="62.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.47%)</title><rect x="59" y="1300" width="5" height="15" fill="rgb(241,54,43)"/><text x="62.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1316" width="5" height="15" fill="rgb(233,40,24)"/><text x="62.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1332" width="5" height="15" fill="rgb(253,177,8)"/><text x="62.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1348" width="5" height="15" fill="rgb(244,199,22)"/><text x="62.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="1364" width="5" height="15" fill="rgb(220,46,7)"/><text x="62.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1380" width="5" height="15" fill="rgb(217,92,38)"/><text x="62.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="1396" width="5" height="15" fill="rgb(246,209,53)"/><text x="62.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1412" width="5" height="15" fill="rgb(218,169,51)"/><text x="62.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1428" width="5" height="15" fill="rgb(243,208,13)"/><text x="62.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1444" width="5" height="15" fill="rgb(242,210,15)"/><text x="62.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="1460" width="5" height="15" fill="rgb(221,30,44)"/><text x="62.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1476" width="5" height="15" fill="rgb(218,53,39)"/><text x="62.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.47%)</title><rect x="59" y="1492" width="5" height="15" fill="rgb(230,193,46)"/><text x="62.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1508" width="5" height="15" fill="rgb(217,171,47)"/><text x="62.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1524" width="5" height="15" fill="rgb(250,99,10)"/><text x="62.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1540" width="5" height="15" fill="rgb(226,101,47)"/><text x="62.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1556" width="5" height="15" fill="rgb(211,87,15)"/><text x="62.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1572" width="5" height="15" fill="rgb(210,59,2)"/><text x="62.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1588" width="5" height="15" fill="rgb(240,105,54)"/><text x="62.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="1604" width="5" height="15" fill="rgb(253,22,22)"/><text x="62.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1620" width="5" height="15" fill="rgb(253,155,1)"/><text x="62.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="1636" width="5" height="15" fill="rgb(205,52,24)"/><text x="62.00" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="1652" width="5" height="15" fill="rgb(221,219,2)"/><text x="62.00" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="1668" width="5" height="15" fill="rgb(240,199,32)"/><text x="62.00" y="1678.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 0.47%)</title><rect x="59" y="1684" width="5" height="15" fill="rgb(224,204,11)"/><text x="62.00" y="1694.50"></text></g><g><title>__iter__ (matplotlib/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="1700" width="5" height="15" fill="rgb(248,66,38)"/><text x="62.00" y="1710.50"></text></g><g><title>helper (contextlib.py) (1 samples, 0.47%)</title><rect x="59" y="1716" width="5" height="15" fill="rgb(209,98,26)"/><text x="62.00" y="1726.50"></text></g><g><title>__init__ (contextlib.py) (1 samples, 0.47%)</title><rect x="59" y="1732" width="5" height="15" fill="rgb(229,15,34)"/><text x="62.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="644" width="22" height="15" fill="rgb(231,169,26)"/><text x="51.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="660" width="22" height="15" fill="rgb(238,62,6)"/><text x="51.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="676" width="22" height="15" fill="rgb(215,203,38)"/><text x="51.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="48" y="692" width="22" height="15" fill="rgb(214,137,46)"/><text x="51.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="708" width="22" height="15" fill="rgb(254,125,25)"/><text x="51.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 1.86%)</title><rect x="48" y="724" width="22" height="15" fill="rgb(216,118,33)"/><text x="51.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="740" width="22" height="15" fill="rgb(244,81,34)"/><text x="51.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="756" width="22" height="15" fill="rgb(240,184,40)"/><text x="51.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="772" width="22" height="15" fill="rgb(209,130,36)"/><text x="51.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="48" y="788" width="22" height="15" fill="rgb(247,189,1)"/><text x="51.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="804" width="22" height="15" fill="rgb(223,103,11)"/><text x="51.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 1.86%)</title><rect x="48" y="820" width="22" height="15" fill="rgb(210,154,8)"/><text x="51.00" y="830.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="836" width="22" height="15" fill="rgb(238,216,39)"/><text x="51.00" y="846.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="852" width="22" height="15" fill="rgb(215,212,3)"/><text x="51.00" y="862.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="868" width="22" height="15" fill="rgb(216,2,53)"/><text x="51.00" y="878.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="48" y="884" width="22" height="15" fill="rgb(224,87,10)"/><text x="51.00" y="894.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="900" width="22" height="15" fill="rgb(225,67,53)"/><text x="51.00" y="910.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 1.86%)</title><rect x="48" y="916" width="22" height="15" fill="rgb(226,199,51)"/><text x="51.00" y="926.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="932" width="22" height="15" fill="rgb(219,84,28)"/><text x="51.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="948" width="22" height="15" fill="rgb(221,123,11)"/><text x="51.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="964" width="22" height="15" fill="rgb(226,48,49)"/><text x="51.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="48" y="980" width="22" height="15" fill="rgb(229,62,0)"/><text x="51.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="996" width="22" height="15" fill="rgb(208,149,35)"/><text x="51.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 1.86%)</title><rect x="48" y="1012" width="22" height="15" fill="rgb(227,74,51)"/><text x="51.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="1028" width="22" height="15" fill="rgb(238,111,51)"/><text x="51.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="1044" width="22" height="15" fill="rgb(228,29,31)"/><text x="51.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="1060" width="22" height="15" fill="rgb(225,46,1)"/><text x="51.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.86%)</title><rect x="48" y="1076" width="22" height="15" fill="rgb(210,119,53)"/><text x="51.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.86%)</title><rect x="48" y="1092" width="22" height="15" fill="rgb(243,128,54)"/><text x="51.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.93%)</title><rect x="59" y="1108" width="11" height="15" fill="rgb(252,142,50)"/><text x="62.00" y="1118.50"></text></g><g><title>add_special_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.47%)</title><rect x="64" y="1124" width="6" height="15" fill="rgb(251,216,35)"/><text x="67.00" y="1134.50"></text></g><g><title>add_methods (pandas/core/ops/__init__.py) (1 samples, 0.47%)</title><rect x="64" y="1140" width="6" height="15" fill="rgb(226,180,27)"/><text x="67.00" y="1150.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py) (1 samples, 0.47%)</title><rect x="64" y="1156" width="6" height="15" fill="rgb(223,110,10)"/><text x="67.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 4.19%)</title><rect x="26" y="340" width="49" height="15" fill="rgb(245,128,19)"/><text x="29.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="26" y="356" width="49" height="15" fill="rgb(238,195,1)"/><text x="29.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="26" y="372" width="49" height="15" fill="rgb(248,104,38)"/><text x="29.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="26" y="388" width="49" height="15" fill="rgb(235,223,54)"/><text x="29.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.19%)</title><rect x="26" y="404" width="49" height="15" fill="rgb(237,92,20)"/><text x="29.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="26" y="420" width="49" height="15" fill="rgb(236,217,50)"/><text x="29.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 4.19%)</title><rect x="26" y="436" width="49" height="15" fill="rgb(207,131,14)"/><text x="29.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="26" y="452" width="49" height="15" fill="rgb(206,133,9)"/><text x="29.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="26" y="468" width="49" height="15" fill="rgb(234,77,36)"/><text x="29.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="48" y="484" width="27" height="15" fill="rgb(215,34,40)"/><text x="51.00" y="494.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.33%)</title><rect x="48" y="500" width="27" height="15" fill="rgb(208,181,4)"/><text x="51.00" y="510.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="48" y="516" width="27" height="15" fill="rgb(210,189,22)"/><text x="51.00" y="526.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 2.33%)</title><rect x="48" y="532" width="27" height="15" fill="rgb(229,90,48)"/><text x="51.00" y="542.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="48" y="548" width="27" height="15" fill="rgb(237,166,44)"/><text x="51.00" y="558.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="48" y="564" width="27" height="15" fill="rgb(216,202,3)"/><text x="51.00" y="574.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="48" y="580" width="27" height="15" fill="rgb(228,176,17)"/><text x="51.00" y="590.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 2.33%)</title><rect x="48" y="596" width="27" height="15" fill="rgb(226,117,16)"/><text x="51.00" y="606.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="48" y="612" width="27" height="15" fill="rgb(223,219,2)"/><text x="51.00" y="622.50">_..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 2.33%)</title><rect x="48" y="628" width="27" height="15" fill="rgb(237,208,48)"/><text x="51.00" y="638.50">&lt;..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="644" width="5" height="15" fill="rgb(229,120,4)"/><text x="73.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="660" width="5" height="15" fill="rgb(207,54,27)"/><text x="73.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="676" width="5" height="15" fill="rgb(219,212,31)"/><text x="73.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="692" width="5" height="15" fill="rgb(216,208,32)"/><text x="73.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="708" width="5" height="15" fill="rgb(223,115,36)"/><text x="73.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="70" y="724" width="5" height="15" fill="rgb(213,145,36)"/><text x="73.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="740" width="5" height="15" fill="rgb(226,171,23)"/><text x="73.00" y="750.50"></text></g><g><title>0x7f53a48b42ff (?) (1 samples, 0.47%)</title><rect x="70" y="756" width="5" height="15" fill="rgb(209,154,44)"/><text x="73.00" y="766.50"></text></g><g><title>0x7f53a48ba52a (?) (1 samples, 0.47%)</title><rect x="70" y="772" width="5" height="15" fill="rgb(253,50,13)"/><text x="73.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="788" width="5" height="15" fill="rgb(237,183,54)"/><text x="73.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="804" width="5" height="15" fill="rgb(230,50,24)"/><text x="73.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="820" width="5" height="15" fill="rgb(251,181,15)"/><text x="73.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="70" y="836" width="5" height="15" fill="rgb(217,185,54)"/><text x="73.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="852" width="5" height="15" fill="rgb(252,37,20)"/><text x="73.00" y="862.50"></text></g><g><title>&lt;module&gt; (fractions.py) (1 samples, 0.47%)</title><rect x="70" y="868" width="5" height="15" fill="rgb(225,156,8)"/><text x="73.00" y="878.50"></text></g><g><title>compile (re.py) (1 samples, 0.47%)</title><rect x="70" y="884" width="5" height="15" fill="rgb(222,85,33)"/><text x="73.00" y="894.50"></text></g><g><title>_compile (re.py) (1 samples, 0.47%)</title><rect x="70" y="900" width="5" height="15" fill="rgb(242,177,42)"/><text x="73.00" y="910.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.47%)</title><rect x="70" y="916" width="5" height="15" fill="rgb(207,187,28)"/><text x="73.00" y="926.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.47%)</title><rect x="70" y="932" width="5" height="15" fill="rgb(239,130,31)"/><text x="73.00" y="942.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.47%)</title><rect x="70" y="948" width="5" height="15" fill="rgb(243,41,28)"/><text x="73.00" y="958.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.47%)</title><rect x="70" y="964" width="5" height="15" fill="rgb(235,127,23)"/><text x="73.00" y="974.50"></text></g><g><title>_optimize_charset (sre_compile.py) (1 samples, 0.47%)</title><rect x="70" y="980" width="5" height="15" fill="rgb(231,65,30)"/><text x="73.00" y="990.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 4.65%)</title><rect x="26" y="244" width="55" height="15" fill="rgb(209,149,39)"/><text x="29.00" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="26" y="260" width="55" height="15" fill="rgb(220,132,15)"/><text x="29.00" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="26" y="276" width="55" height="15" fill="rgb(237,115,31)"/><text x="29.00" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="26" y="292" width="55" height="15" fill="rgb(239,20,10)"/><text x="29.00" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.65%)</title><rect x="26" y="308" width="55" height="15" fill="rgb(251,136,9)"/><text x="29.00" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="26" y="324" width="55" height="15" fill="rgb(213,134,28)"/><text x="29.00" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.47%)</title><rect x="75" y="340" width="6" height="15" fill="rgb(233,150,5)"/><text x="78.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="356" width="6" height="15" fill="rgb(220,124,25)"/><text x="78.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="372" width="6" height="15" fill="rgb(209,178,20)"/><text x="78.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="388" width="6" height="15" fill="rgb(244,99,33)"/><text x="78.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="404" width="6" height="15" fill="rgb(236,110,3)"/><text x="78.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="420" width="6" height="15" fill="rgb(222,225,48)"/><text x="78.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="436" width="6" height="15" fill="rgb(224,192,44)"/><text x="78.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="452" width="6" height="15" fill="rgb(233,225,25)"/><text x="78.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="468" width="6" height="15" fill="rgb(251,47,27)"/><text x="78.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.47%)</title><rect x="75" y="484" width="6" height="15" fill="rgb(220,103,12)"/><text x="78.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="500" width="6" height="15" fill="rgb(245,121,50)"/><text x="78.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="516" width="6" height="15" fill="rgb(250,109,20)"/><text x="78.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="532" width="6" height="15" fill="rgb(225,118,32)"/><text x="78.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="548" width="6" height="15" fill="rgb(229,129,9)"/><text x="78.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="564" width="6" height="15" fill="rgb(205,226,11)"/><text x="78.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.47%)</title><rect x="75" y="580" width="6" height="15" fill="rgb(236,141,34)"/><text x="78.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="596" width="6" height="15" fill="rgb(212,57,36)"/><text x="78.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="612" width="6" height="15" fill="rgb(233,171,27)"/><text x="78.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="628" width="6" height="15" fill="rgb(241,202,47)"/><text x="78.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="644" width="6" height="15" fill="rgb(251,189,39)"/><text x="78.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="660" width="6" height="15" fill="rgb(219,72,45)"/><text x="78.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.47%)</title><rect x="75" y="676" width="6" height="15" fill="rgb(226,121,2)"/><text x="78.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="692" width="6" height="15" fill="rgb(211,222,0)"/><text x="78.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="708" width="6" height="15" fill="rgb(210,39,24)"/><text x="78.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="724" width="6" height="15" fill="rgb(232,179,31)"/><text x="78.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="740" width="6" height="15" fill="rgb(245,164,48)"/><text x="78.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="756" width="6" height="15" fill="rgb(250,125,45)"/><text x="78.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.47%)</title><rect x="75" y="772" width="6" height="15" fill="rgb(211,179,20)"/><text x="78.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="788" width="6" height="15" fill="rgb(213,35,7)"/><text x="78.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="804" width="6" height="15" fill="rgb(219,13,24)"/><text x="78.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="820" width="6" height="15" fill="rgb(240,5,16)"/><text x="78.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="836" width="6" height="15" fill="rgb(237,105,5)"/><text x="78.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="852" width="6" height="15" fill="rgb(211,77,17)"/><text x="78.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="868" width="6" height="15" fill="rgb(232,44,34)"/><text x="78.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="884" width="6" height="15" fill="rgb(244,93,0)"/><text x="78.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.47%)</title><rect x="75" y="900" width="6" height="15" fill="rgb(217,78,32)"/><text x="78.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="916" width="6" height="15" fill="rgb(229,52,18)"/><text x="78.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="932" width="6" height="15" fill="rgb(237,66,4)"/><text x="78.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="948" width="6" height="15" fill="rgb(230,45,5)"/><text x="78.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="964" width="6" height="15" fill="rgb(216,97,43)"/><text x="78.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="980" width="6" height="15" fill="rgb(217,116,25)"/><text x="78.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.47%)</title><rect x="75" y="996" width="6" height="15" fill="rgb(242,59,15)"/><text x="78.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1012" width="6" height="15" fill="rgb(243,45,35)"/><text x="78.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1028" width="6" height="15" fill="rgb(245,80,49)"/><text x="78.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1044" width="6" height="15" fill="rgb(246,95,3)"/><text x="78.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="1060" width="6" height="15" fill="rgb(243,169,22)"/><text x="78.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1076" width="6" height="15" fill="rgb(217,83,32)"/><text x="78.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.47%)</title><rect x="75" y="1092" width="6" height="15" fill="rgb(219,1,46)"/><text x="78.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1108" width="6" height="15" fill="rgb(243,184,27)"/><text x="78.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1124" width="6" height="15" fill="rgb(251,100,21)"/><text x="78.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1140" width="6" height="15" fill="rgb(237,58,17)"/><text x="78.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1156" width="6" height="15" fill="rgb(227,51,11)"/><text x="78.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1172" width="6" height="15" fill="rgb(212,19,21)"/><text x="78.00" y="1182.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1188" width="6" height="15" fill="rgb(220,56,18)"/><text x="78.00" y="1198.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1204" width="6" height="15" fill="rgb(251,126,10)"/><text x="78.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.51%)</title><rect x="10" y="68" width="76" height="15" fill="rgb(212,33,36)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.51%)</title><rect x="10" y="84" width="76" height="15" fill="rgb(245,200,23)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.51%)</title><rect x="10" y="100" width="76" height="15" fill="rgb(229,53,32)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 6.51%)</title><rect x="10" y="116" width="76" height="15" fill="rgb(209,207,4)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.51%)</title><rect x="10" y="132" width="76" height="15" fill="rgb(219,209,30)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (14 samples, 6.51%)</title><rect x="10" y="148" width="76" height="15" fill="rgb(247,11,38)"/><text x="13.00" y="158.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.51%)</title><rect x="10" y="164" width="76" height="15" fill="rgb(246,85,2)"/><text x="13.00" y="174.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 6.51%)</title><rect x="10" y="180" width="76" height="15" fill="rgb(235,44,10)"/><text x="13.00" y="190.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 5.12%)</title><rect x="26" y="196" width="60" height="15" fill="rgb(238,229,42)"/><text x="29.00" y="206.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 5.12%)</title><rect x="26" y="212" width="60" height="15" fill="rgb(229,79,11)"/><text x="29.00" y="222.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 5.12%)</title><rect x="26" y="228" width="60" height="15" fill="rgb(227,40,38)"/><text x="29.00" y="238.50">_call_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.47%)</title><rect x="81" y="244" width="5" height="15" fill="rgb(238,136,19)"/><text x="84.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="260" width="5" height="15" fill="rgb(238,101,44)"/><text x="84.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="276" width="5" height="15" fill="rgb(207,89,6)"/><text x="84.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="292" width="5" height="15" fill="rgb(233,191,27)"/><text x="84.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="308" width="5" height="15" fill="rgb(232,42,25)"/><text x="84.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="324" width="5" height="15" fill="rgb(231,45,0)"/><text x="84.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="81" y="340" width="5" height="15" fill="rgb(228,47,7)"/><text x="84.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="356" width="5" height="15" fill="rgb(215,119,12)"/><text x="84.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.47%)</title><rect x="81" y="372" width="5" height="15" fill="rgb(245,220,14)"/><text x="84.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="388" width="5" height="15" fill="rgb(233,39,12)"/><text x="84.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="404" width="5" height="15" fill="rgb(238,169,30)"/><text x="84.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="420" width="5" height="15" fill="rgb(236,120,10)"/><text x="84.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="436" width="5" height="15" fill="rgb(205,141,0)"/><text x="84.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="452" width="5" height="15" fill="rgb(221,88,47)"/><text x="84.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="81" y="468" width="5" height="15" fill="rgb(250,151,23)"/><text x="84.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="484" width="5" height="15" fill="rgb(211,107,15)"/><text x="84.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.47%)</title><rect x="81" y="500" width="5" height="15" fill="rgb(236,214,10)"/><text x="84.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="516" width="5" height="15" fill="rgb(253,161,33)"/><text x="84.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="532" width="5" height="15" fill="rgb(225,226,14)"/><text x="84.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="548" width="5" height="15" fill="rgb(224,105,33)"/><text x="84.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="81" y="564" width="5" height="15" fill="rgb(242,203,47)"/><text x="84.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="81" y="580" width="5" height="15" fill="rgb(249,196,41)"/><text x="84.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.47%)</title><rect x="81" y="596" width="5" height="15" fill="rgb(218,93,8)"/><text x="84.00" y="606.50"></text></g><g><title>compile (re.py) (1 samples, 0.47%)</title><rect x="81" y="612" width="5" height="15" fill="rgb(210,19,40)"/><text x="84.00" y="622.50"></text></g><g><title>_compile (re.py) (1 samples, 0.47%)</title><rect x="81" y="628" width="5" height="15" fill="rgb(229,206,18)"/><text x="84.00" y="638.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.47%)</title><rect x="81" y="644" width="5" height="15" fill="rgb(232,4,32)"/><text x="84.00" y="654.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.47%)</title><rect x="81" y="660" width="5" height="15" fill="rgb(233,105,37)"/><text x="84.00" y="670.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.47%)</title><rect x="81" y="676" width="5" height="15" fill="rgb(217,100,23)"/><text x="84.00" y="686.50"></text></g><g><title>0x7f5391bf7ff9 (?) (1 samples, 0.47%)</title><rect x="169" y="212" width="5" height="15" fill="rgb(214,31,32)"/><text x="172.00" y="222.50"></text></g><g><title>0x7f5391bf2ef6 (?) (1 samples, 0.47%)</title><rect x="169" y="228" width="5" height="15" fill="rgb(218,52,13)"/><text x="172.00" y="238.50"></text></g><g><title>0x7f5391be7962 (?) (1 samples, 0.47%)</title><rect x="169" y="244" width="5" height="15" fill="rgb(209,225,2)"/><text x="172.00" y="254.50"></text></g><g><title>0x7f5391c1b7a7 (?) (1 samples, 0.47%)</title><rect x="169" y="260" width="5" height="15" fill="rgb(216,9,41)"/><text x="172.00" y="270.50"></text></g><g><title>0x7f5391c1aea2 (?) (1 samples, 0.47%)</title><rect x="169" y="276" width="5" height="15" fill="rgb(222,149,46)"/><text x="172.00" y="286.50"></text></g><g><title>0x7f5391c1ab9b (?) (1 samples, 0.47%)</title><rect x="169" y="292" width="5" height="15" fill="rgb(222,172,36)"/><text x="172.00" y="302.50"></text></g><g><title>0x7f539201b570 (?) (1 samples, 0.47%)</title><rect x="169" y="308" width="5" height="15" fill="rgb(218,51,54)"/><text x="172.00" y="318.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="191" y="244" width="5" height="15" fill="rgb(208,183,46)"/><text x="194.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 2.33%)</title><rect x="174" y="212" width="28" height="15" fill="rgb(246,75,45)"/><text x="177.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.40%)</title><rect x="185" y="228" width="17" height="15" fill="rgb(212,71,46)"/><text x="188.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="196" y="244" width="6" height="15" fill="rgb(243,47,22)"/><text x="199.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="196" y="260" width="6" height="15" fill="rgb(250,120,32)"/><text x="199.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="196" y="276" width="6" height="15" fill="rgb(239,210,14)"/><text x="199.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="196" y="292" width="6" height="15" fill="rgb(250,174,8)"/><text x="199.00" y="302.50"></text></g><g><title>0x7f5391bbfba0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="224" y="244" width="5" height="15" fill="rgb(245,41,17)"/><text x="227.00" y="254.50"></text></g><g><title>0x7f53d1b39998 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="229" y="260" width="6" height="15" fill="rgb(208,171,51)"/><text x="232.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="235" y="260" width="5" height="15" fill="rgb(244,108,4)"/><text x="238.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (2 samples, 0.93%)</title><rect x="240" y="260" width="11" height="15" fill="rgb(217,99,35)"/><text x="243.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="251" y="292" width="5" height="15" fill="rgb(246,220,11)"/><text x="254.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="251" y="308" width="5" height="15" fill="rgb(219,11,16)"/><text x="254.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="251" y="324" width="5" height="15" fill="rgb(243,72,27)"/><text x="254.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="256" y="292" width="6" height="15" fill="rgb(221,78,9)"/><text x="259.00" y="302.50"></text></g><g><title>0x7f53d1b399d3 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="256" y="308" width="6" height="15" fill="rgb(215,215,12)"/><text x="259.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="262" y="292" width="5" height="15" fill="rgb(247,16,9)"/><text x="265.00" y="302.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="356" width="6" height="15" fill="rgb(221,62,43)"/><text x="270.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="372" width="6" height="15" fill="rgb(225,171,34)"/><text x="270.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="388" width="6" height="15" fill="rgb(250,46,19)"/><text x="270.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="404" width="6" height="15" fill="rgb(250,73,38)"/><text x="270.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="420" width="6" height="15" fill="rgb(214,196,42)"/><text x="270.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="436" width="6" height="15" fill="rgb(228,141,3)"/><text x="270.00" y="446.50"></text></g><g><title>onnxruntime::TensorShape::Size (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="267" y="452" width="6" height="15" fill="rgb(236,64,26)"/><text x="270.00" y="462.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="273" y="356" width="5" height="15" fill="rgb(245,83,25)"/><text x="276.00" y="366.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="278" y="356" width="6" height="15" fill="rgb(212,37,3)"/><text x="281.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.26%)</title><rect x="251" y="260" width="38" height="15" fill="rgb(216,181,50)"/><text x="254.00" y="270.50">onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.26%)</title><rect x="251" y="276" width="38" height="15" fill="rgb(229,229,47)"/><text x="254.00" y="286.50">onn..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="267" y="292" width="22" height="15" fill="rgb(207,140,8)"/><text x="270.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="267" y="308" width="22" height="15" fill="rgb(235,9,4)"/><text x="270.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="267" y="324" width="22" height="15" fill="rgb(228,179,0)"/><text x="270.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.86%)</title><rect x="267" y="340" width="22" height="15" fill="rgb(219,11,54)"/><text x="270.00" y="350.50">o..</text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="284" y="356" width="5" height="15" fill="rgb(207,194,24)"/><text x="287.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="289" y="260" width="6" height="15" fill="rgb(226,201,10)"/><text x="292.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="289" y="276" width="6" height="15" fill="rgb(253,36,44)"/><text x="292.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.47%)</title><rect x="289" y="292" width="6" height="15" fill="rgb(210,205,42)"/><text x="292.00" y="302.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.47%)</title><rect x="295" y="276" width="5" height="15" fill="rgb(226,83,33)"/><text x="298.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.47%)</title><rect x="295" y="292" width="5" height="15" fill="rgb(239,76,49)"/><text x="298.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="295" y="260" width="11" height="15" fill="rgb(251,60,17)"/><text x="298.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="300" y="276" width="6" height="15" fill="rgb(206,139,38)"/><text x="303.00" y="286.50"></text></g><g><title>0x7f53d1b3990e (libc-2.29.so) (1 samples, 0.47%)</title><rect x="300" y="292" width="6" height="15" fill="rgb(218,11,9)"/><text x="303.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.98%)</title><rect x="229" y="244" width="82" height="15" fill="rgb(254,28,23)"/><text x="232.00" y="254.50">onnxrunti..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="260" width="5" height="15" fill="rgb(239,70,32)"/><text x="309.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="276" width="5" height="15" fill="rgb(215,187,0)"/><text x="309.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="292" width="5" height="15" fill="rgb(224,171,41)"/><text x="309.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="308" width="5" height="15" fill="rgb(224,47,23)"/><text x="309.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="324" width="5" height="15" fill="rgb(221,34,52)"/><text x="309.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="340" width="5" height="15" fill="rgb(252,57,17)"/><text x="309.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="306" y="356" width="5" height="15" fill="rgb(252,173,15)"/><text x="309.00" y="366.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="311" y="244" width="11" height="15" fill="rgb(243,159,30)"/><text x="314.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="311" y="260" width="11" height="15" fill="rgb(209,203,2)"/><text x="314.00" y="270.50"></text></g><g><title>0x7f5391bbf090 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="317" y="276" width="5" height="15" fill="rgb(231,165,26)"/><text x="320.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="322" y="244" width="6" height="15" fill="rgb(232,218,44)"/><text x="325.00" y="254.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (45 samples, 20.93%)</title><rect x="86" y="68" width="247" height="15" fill="rgb(237,97,17)"/><text x="89.00" y="78.50">profile_ort (bench_DecisionTreeR..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (45 samples, 20.93%)</title><rect x="86" y="84" width="247" height="15" fill="rgb(221,211,52)"/><text x="89.00" y="94.50">setup_profile (bench_DecisionTre..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (45 samples, 20.93%)</title><rect x="86" y="100" width="247" height="15" fill="rgb(247,116,18)"/><text x="89.00" y="110.50">profile (bench_DecisionTreeRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (41 samples, 19.07%)</title><rect x="108" y="116" width="225" height="15" fill="rgb(230,54,21)"/><text x="111.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (40 samples, 18.60%)</title><rect x="114" y="132" width="219" height="15" fill="rgb(244,123,44)"/><text x="117.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (38 samples, 17.67%)</title><rect x="125" y="148" width="208" height="15" fill="rgb(205,100,29)"/><text x="128.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (36 samples, 16.74%)</title><rect x="136" y="164" width="197" height="15" fill="rgb(253,209,48)"/><text x="139.00" y="174.50">_run_whole_runtime (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (31 samples, 14.42%)</title><rect x="163" y="180" width="170" height="15" fill="rgb(221,111,49)"/><text x="166.00" y="190.50">run (mlprodict/onnxrt/..</text></g><g><title>run (onnxruntime/capi/session.py) (31 samples, 14.42%)</title><rect x="163" y="196" width="170" height="15" fill="rgb(228,171,51)"/><text x="166.00" y="206.50">run (onnxruntime/capi/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 11.16%)</title><rect x="202" y="212" width="131" height="15" fill="rgb(212,114,3)"/><text x="205.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 10.23%)</title><rect x="213" y="228" width="120" height="15" fill="rgb(251,123,30)"/><text x="216.00" y="238.50">void pybind11:..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="328" y="244" width="5" height="15" fill="rgb(251,195,0)"/><text x="331.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="328" y="260" width="5" height="15" fill="rgb(245,53,50)"/><text x="331.00" y="270.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="328" y="276" width="5" height="15" fill="rgb(240,75,1)"/><text x="331.00" y="286.50"></text></g><g><title>0x7f539265254f (?) (1 samples, 0.47%)</title><rect x="333" y="244" width="6" height="15" fill="rgb(249,71,36)"/><text x="336.00" y="254.50"></text></g><g><title>0x7f539265865e (?) (1 samples, 0.47%)</title><rect x="333" y="260" width="6" height="15" fill="rgb(208,29,54)"/><text x="336.00" y="270.50"></text></g><g><title>0x7f539265850f (?) (1 samples, 0.47%)</title><rect x="333" y="276" width="6" height="15" fill="rgb(224,123,14)"/><text x="336.00" y="286.50"></text></g><g><title>0x7f539265ed6c (?) (1 samples, 0.47%)</title><rect x="333" y="292" width="6" height="15" fill="rgb(240,211,19)"/><text x="336.00" y="302.50"></text></g><g><title>0x7f539bb3fab9 (?) (1 samples, 0.47%)</title><rect x="333" y="308" width="6" height="15" fill="rgb(208,98,47)"/><text x="336.00" y="318.50"></text></g><g><title>0x7f539bb40ea9 (?) (1 samples, 0.47%)</title><rect x="333" y="324" width="6" height="15" fill="rgb(248,101,34)"/><text x="336.00" y="334.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::argument_loader (cast.h) (1 samples, 0.47%)</title><rect x="339" y="292" width="5" height="15" fill="rgb(208,109,17)"/><text x="342.00" y="302.50"></text></g><g><title>std::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::tuple&lt;pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt;, true&gt; (tuple) (1 samples, 0.47%)</title><rect x="339" y="308" width="5" height="15" fill="rgb(215,126,6)"/><text x="342.00" y="318.50"></text></g><g><title>std::_Tuple_impl&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, pybind11::detail::type_caster&lt;pybind11::array_t&lt;float, 16&gt;, void&gt; &gt;::_Tuple_impl (tuple) (1 samples, 0.47%)</title><rect x="339" y="324" width="5" height="15" fill="rgb(219,37,24)"/><text x="342.00" y="334.50"></text></g><g><title>std::_Head_base&lt;(unsigned long)0, pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;, false&gt;::_Head_base (tuple) (1 samples, 0.47%)</title><rect x="339" y="340" width="5" height="15" fill="rgb(232,148,21)"/><text x="342.00" y="350.50"></text></g><g><title>pybind11::detail::type_caster&lt;RuntimeTreeEnsembleRegressorFloat, void&gt;::type_caster (cast.h) (1 samples, 0.47%)</title><rect x="339" y="356" width="5" height="15" fill="rgb(217,85,42)"/><text x="342.00" y="366.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.47%)</title><rect x="339" y="372" width="5" height="15" fill="rgb(211,19,30)"/><text x="342.00" y="382.50"></text></g><g><title>pybind11::detail::type_caster_base&lt;RuntimeTreeEnsembleRegressorFloat&gt;::type_caster_base (cast.h) (1 samples, 0.47%)</title><rect x="339" y="388" width="5" height="15" fill="rgb(242,85,13)"/><text x="342.00" y="398.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.47%)</title><rect x="339" y="404" width="5" height="15" fill="rgb(231,114,6)"/><text x="342.00" y="414.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h) (1 samples, 0.47%)</title><rect x="339" y="420" width="5" height="15" fill="rgb(211,165,21)"/><text x="342.00" y="430.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h) (1 samples, 0.47%)</title><rect x="339" y="436" width="5" height="15" fill="rgb(249,147,45)"/><text x="342.00" y="446.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h) (1 samples, 0.47%)</title><rect x="339" y="452" width="5" height="15" fill="rgb(246,72,41)"/><text x="342.00" y="462.50"></text></g><g><title>pybind11::dtype::~dtype (numpy.h) (1 samples, 0.47%)</title><rect x="339" y="468" width="5" height="15" fill="rgb(241,135,45)"/><text x="342.00" y="478.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 0.47%)</title><rect x="339" y="484" width="5" height="15" fill="rgb(251,138,38)"/><text x="342.00" y="494.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 0.47%)</title><rect x="339" y="500" width="5" height="15" fill="rgb(206,70,40)"/><text x="342.00" y="510.50"></text></g><g><title>pybind11::array::array (numpy.h) (1 samples, 0.47%)</title><rect x="339" y="516" width="5" height="15" fill="rgb(227,50,21)"/><text x="342.00" y="526.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.47%)</title><rect x="339" y="532" width="5" height="15" fill="rgb(239,12,50)"/><text x="342.00" y="542.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.47%)</title><rect x="339" y="548" width="5" height="15" fill="rgb(249,96,36)"/><text x="342.00" y="558.50"></text></g><g><title>0x7f539bb40ea0 (libgomp.so.1.0.0) (2 samples, 0.93%)</title><rect x="344" y="484" width="11" height="15" fill="rgb(213,123,24)"/><text x="347.00" y="494.50"></text></g><g><title>0x7f539bb40ea9 (libgomp.so.1.0.0) (15 samples, 6.98%)</title><rect x="355" y="484" width="83" height="15" fill="rgb(228,113,41)"/><text x="358.00" y="494.50">0x7f539bb..</text></g><g><title>0x7f539bb40eab (libgomp.so.1.0.0) (11 samples, 5.12%)</title><rect x="438" y="484" width="60" height="15" fill="rgb(228,19,11)"/><text x="441.00" y="494.50">0x7f53..</text></g><g><title>0x7f539bb3fab9 (libgomp.so.1.0.0) (40 samples, 18.60%)</title><rect x="344" y="468" width="220" height="15" fill="rgb(215,86,3)"/><text x="347.00" y="478.50">0x7f539bb3fab9 (libgomp.so.1...</text></g><g><title>0x7f539bb40ead (libgomp.so.1.0.0) (12 samples, 5.58%)</title><rect x="498" y="484" width="66" height="15" fill="rgb(211,185,4)"/><text x="501.00" y="494.50">0x7f539..</text></g><g><title>0x7f539bb40cfb (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="564" y="500" width="5" height="15" fill="rgb(220,157,20)"/><text x="567.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (44 samples, 20.47%)</title><rect x="333" y="68" width="242" height="15" fill="rgb(206,152,10)"/><text x="336.00" y="78.50">profile_pyrt (bench_DecisionTree..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (44 samples, 20.47%)</title><rect x="333" y="84" width="242" height="15" fill="rgb(223,70,23)"/><text x="336.00" y="94.50">setup_profile (bench_DecisionTre..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (44 samples, 20.47%)</title><rect x="333" y="100" width="242" height="15" fill="rgb(244,210,1)"/><text x="336.00" y="110.50">profile (bench_DecisionTreeRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (44 samples, 20.47%)</title><rect x="333" y="116" width="242" height="15" fill="rgb(212,107,47)"/><text x="336.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (44 samples, 20.47%)</title><rect x="333" y="132" width="242" height="15" fill="rgb(227,204,11)"/><text x="336.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (44 samples, 20.47%)</title><rect x="333" y="148" width="242" height="15" fill="rgb(209,169,36)"/><text x="336.00" y="158.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (44 samples, 20.47%)</title><rect x="333" y="164" width="242" height="15" fill="rgb(223,75,27)"/><text x="336.00" y="174.50">_run_sequence_runtime (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (44 samples, 20.47%)</title><rect x="333" y="180" width="242" height="15" fill="rgb(254,139,49)"/><text x="336.00" y="190.50">run (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (44 samples, 20.47%)</title><rect x="333" y="196" width="242" height="15" fill="rgb(247,9,22)"/><text x="336.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (44 samples, 20.47%)</title><rect x="333" y="212" width="242" height="15" fill="rgb(223,163,33)"/><text x="336.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (44 samples, 20.47%)</title><rect x="333" y="228" width="242" height="15" fill="rgb(243,133,22)"/><text x="336.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/o..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (43 samples, 20.00%)</title><rect x="339" y="244" width="236" height="15" fill="rgb(238,41,4)"/><text x="342.00" y="254.50">pybind11::cpp_function::dispatc..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (43 samples, 20.00%)</title><rect x="339" y="260" width="236" height="15" fill="rgb(214,176,49)"/><text x="342.00" y="270.50">void pybind11::cpp_function::in..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (43 samples, 20.00%)</title><rect x="339" y="276" width="236" height="15" fill="rgb(252,75,17)"/><text x="342.00" y="286.50">void pybind11::cpp_function::in..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (42 samples, 19.53%)</title><rect x="344" y="292" width="231" height="15" fill="rgb(207,21,47)"/><text x="347.00" y="302.50">pybind11::detail::argument_loa..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (42 samples, 19.53%)</title><rect x="344" y="308" width="231" height="15" fill="rgb(211,144,31)"/><text x="347.00" y="318.50">pybind11::detail::argument_loa..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (42 samples, 19.53%)</title><rect x="344" y="324" width="231" height="15" fill="rgb(206,219,0)"/><text x="347.00" y="334.50">pybind11::cpp_function::cpp_fu..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (42 samples, 19.53%)</title><rect x="344" y="340" width="231" height="15" fill="rgb(247,183,6)"/><text x="347.00" y="350.50">pybind11::array_t&lt;float, 16&gt;::..</text></g><g><title>pybind11::array::~array (numpy.h) (42 samples, 19.53%)</title><rect x="344" y="356" width="231" height="15" fill="rgb(210,68,11)"/><text x="347.00" y="366.50">pybind11::array::~array (numpy..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (42 samples, 19.53%)</title><rect x="344" y="372" width="231" height="15" fill="rgb(207,201,23)"/><text x="347.00" y="382.50">pybind11::buffer::~buffer (pyt..</text></g><g><title>pybind11::object::~object (pytypes.h) (42 samples, 19.53%)</title><rect x="344" y="388" width="231" height="15" fill="rgb(224,156,1)"/><text x="347.00" y="398.50">pybind11::object::~object (pyt..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (42 samples, 19.53%)</title><rect x="344" y="404" width="231" height="15" fill="rgb(222,45,6)"/><text x="347.00" y="414.50">pybind11::handle::dec_ref &amp; (p..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (42 samples, 19.53%)</title><rect x="344" y="420" width="231" height="15" fill="rgb(220,224,17)"/><text x="347.00" y="430.50">RuntimeTreeEnsembleRegressor&lt;f..</text></g><g><title>pybind11::array::size (numpy.h) (42 samples, 19.53%)</title><rect x="344" y="436" width="231" height="15" fill="rgb(214,223,45)"/><text x="347.00" y="446.50">pybind11::array::size (numpy.h)</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (42 samples, 19.53%)</title><rect x="344" y="452" width="231" height="15" fill="rgb(240,157,34)"/><text x="347.00" y="462.50">std::accumulate&lt;long const*, l..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.93%)</title><rect x="564" y="468" width="11" height="15" fill="rgb(215,67,54)"/><text x="567.00" y="478.50"></text></g><g><title>0x7f539bb3edaa (libgomp.so.1.0.0) (2 samples, 0.93%)</title><rect x="564" y="484" width="11" height="15" fill="rgb(221,18,46)"/><text x="567.00" y="494.50"></text></g><g><title>0x7f539bb40cfd (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="569" y="500" width="6" height="15" fill="rgb(218,218,49)"/><text x="572.00" y="510.50"></text></g><g><title>0x7f53ac1a5d24 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="597" y="164" width="5" height="15" fill="rgb(225,158,26)"/><text x="600.00" y="174.50"></text></g><g><title>0x7f53ac1a4f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="602" y="180" width="6" height="15" fill="rgb(239,30,15)"/><text x="605.00" y="190.50"></text></g><g><title>0x7f53ac194d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="602" y="196" width="6" height="15" fill="rgb(241,176,20)"/><text x="605.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.47%)</title><rect x="602" y="212" width="6" height="15" fill="rgb(236,106,20)"/><text x="605.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.47%)</title><rect x="602" y="228" width="6" height="15" fill="rgb(221,90,46)"/><text x="605.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.47%)</title><rect x="602" y="244" width="6" height="15" fill="rgb(214,47,47)"/><text x="605.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.47%)</title><rect x="602" y="260" width="6" height="15" fill="rgb(251,116,15)"/><text x="605.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.47%)</title><rect x="602" y="276" width="6" height="15" fill="rgb(242,194,7)"/><text x="605.00" y="286.50"></text></g><g><title>0x7f53ac1a4f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="608" y="180" width="5" height="15" fill="rgb(243,167,38)"/><text x="611.00" y="190.50"></text></g><g><title>0x7f53ac197604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="613" y="244" width="6" height="15" fill="rgb(212,80,54)"/><text x="616.00" y="254.50"></text></g><g><title>0x7f53d1b5a14a (libc-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="260" width="6" height="15" fill="rgb(253,2,1)"/><text x="616.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.93%)</title><rect x="635" y="324" width="11" height="15" fill="rgb(224,194,29)"/><text x="638.00" y="334.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.47%)</title><rect x="641" y="340" width="5" height="15" fill="rgb(241,70,41)"/><text x="644.00" y="350.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="641" y="356" width="5" height="15" fill="rgb(225,85,49)"/><text x="644.00" y="366.50"></text></g><g><title>0x7f53ac197d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.72%)</title><rect x="613" y="228" width="44" height="15" fill="rgb(214,225,54)"/><text x="616.00" y="238.50">0x7f..</text></g><g><title>0x7f53ac197666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.26%)</title><rect x="619" y="244" width="38" height="15" fill="rgb(250,23,49)"/><text x="622.00" y="254.50">0x7..</text></g><g><title>0x7f53ac18d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.26%)</title><rect x="619" y="260" width="38" height="15" fill="rgb(240,94,13)"/><text x="622.00" y="270.50">0x7..</text></g><g><title>array_getbuffer (buffer.c) (7 samples, 3.26%)</title><rect x="619" y="276" width="38" height="15" fill="rgb(224,7,23)"/><text x="622.00" y="286.50">arr..</text></g><g><title>_buffer_get_info (buffer.c) (6 samples, 2.79%)</title><rect x="624" y="292" width="33" height="15" fill="rgb(214,3,34)"/><text x="627.00" y="302.50">_b..</text></g><g><title>_buffer_info_new (buffer.c) (4 samples, 1.86%)</title><rect x="635" y="308" width="22" height="15" fill="rgb(250,135,17)"/><text x="638.00" y="318.50">_..</text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.93%)</title><rect x="646" y="324" width="11" height="15" fill="rgb(231,167,23)"/><text x="649.00" y="334.50"></text></g><g><title>0x7f53ac1b32df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 4.19%)</title><rect x="613" y="212" width="50" height="15" fill="rgb(237,227,13)"/><text x="616.00" y="222.50">0x7f5..</text></g><g><title>0x7f53ac197e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="657" y="228" width="6" height="15" fill="rgb(241,82,46)"/><text x="660.00" y="238.50"></text></g><g><title>0x7f53ac18b2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="657" y="244" width="6" height="15" fill="rgb(239,198,13)"/><text x="660.00" y="254.50"></text></g><g><title>0x7f53ac18abad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="657" y="260" width="6" height="15" fill="rgb(241,131,27)"/><text x="660.00" y="270.50"></text></g><g><title>0x7f53ac1b3511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="663" y="212" width="5" height="15" fill="rgb(207,10,42)"/><text x="666.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.47%)</title><rect x="685" y="244" width="5" height="15" fill="rgb(227,3,35)"/><text x="688.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.47%)</title><rect x="685" y="260" width="5" height="15" fill="rgb(206,136,41)"/><text x="688.00" y="270.50"></text></g><g><title>0x7f53ac1b3592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.26%)</title><rect x="668" y="212" width="39" height="15" fill="rgb(227,18,53)"/><text x="671.00" y="222.50">0x7..</text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 2.79%)</title><rect x="674" y="228" width="33" height="15" fill="rgb(245,61,16)"/><text x="677.00" y="238.50">ar..</text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 1.40%)</title><rect x="690" y="244" width="17" height="15" fill="rgb(205,203,54)"/><text x="693.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 1.40%)</title><rect x="690" y="260" width="17" height="15" fill="rgb(233,117,5)"/><text x="693.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 1.40%)</title><rect x="690" y="276" width="17" height="15" fill="rgb(213,216,16)"/><text x="693.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.47%)</title><rect x="701" y="292" width="6" height="15" fill="rgb(230,112,43)"/><text x="704.00" y="302.50"></text></g><g><title>0x7f53ac1b4405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 8.37%)</title><rect x="613" y="196" width="99" height="15" fill="rgb(213,147,29)"/><text x="616.00" y="206.50">0x7f53ac1b4..</text></g><g><title>0x7f53ac1b3c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="707" y="212" width="5" height="15" fill="rgb(224,86,9)"/><text x="710.00" y="222.50"></text></g><g><title>0x7f53ac18b529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="707" y="228" width="5" height="15" fill="rgb(242,220,22)"/><text x="710.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.47%)</title><rect x="707" y="244" width="5" height="15" fill="rgb(223,23,45)"/><text x="710.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.47%)</title><rect x="707" y="260" width="5" height="15" fill="rgb(252,64,4)"/><text x="710.00" y="270.50"></text></g><g><title>0x7f53d0d5cf30 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="707" y="276" width="5" height="15" fill="rgb(226,105,12)"/><text x="710.00" y="286.50"></text></g><g><title>0x7f53ac1a4fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (19 samples, 8.84%)</title><rect x="613" y="180" width="105" height="15" fill="rgb(240,212,7)"/><text x="616.00" y="190.50">0x7f53ac1a4f..</text></g><g><title>0x7f53ac1b4540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="712" y="196" width="6" height="15" fill="rgb(222,1,14)"/><text x="715.00" y="206.50"></text></g><g><title>0x7f53ac1892f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="712" y="212" width="6" height="15" fill="rgb(223,149,7)"/><text x="715.00" y="222.50"></text></g><g><title>0x7f53ac188530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="712" y="228" width="6" height="15" fill="rgb(250,198,1)"/><text x="715.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.47%)</title><rect x="712" y="244" width="6" height="15" fill="rgb(212,206,16)"/><text x="715.00" y="254.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.47%)</title><rect x="718" y="212" width="5" height="15" fill="rgb(211,229,39)"/><text x="721.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.47%)</title><rect x="718" y="228" width="5" height="15" fill="rgb(250,224,6)"/><text x="721.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.47%)</title><rect x="718" y="244" width="5" height="15" fill="rgb(210,42,50)"/><text x="721.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (2 samples, 0.93%)</title><rect x="723" y="212" width="11" height="15" fill="rgb(221,135,37)"/><text x="726.00" y="222.50"></text></g><g><title>0x7f53d0d5bd20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="728" y="228" width="6" height="15" fill="rgb(212,205,50)"/><text x="731.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (1 samples, 0.47%)</title><rect x="734" y="228" width="5" height="15" fill="rgb(243,161,43)"/><text x="737.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.93%)</title><rect x="734" y="212" width="11" height="15" fill="rgb(229,104,7)"/><text x="737.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.47%)</title><rect x="739" y="228" width="6" height="15" fill="rgb(209,54,32)"/><text x="742.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.47%)</title><rect x="739" y="244" width="6" height="15" fill="rgb(217,210,18)"/><text x="742.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.47%)</title><rect x="739" y="260" width="6" height="15" fill="rgb(219,123,5)"/><text x="742.00" y="270.50"></text></g><g><title>0x7f53ac1a505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.79%)</title><rect x="718" y="180" width="32" height="15" fill="rgb(246,99,39)"/><text x="721.00" y="190.50">0x..</text></g><g><title>array_take (methods.c) (6 samples, 2.79%)</title><rect x="718" y="196" width="32" height="15" fill="rgb(241,87,21)"/><text x="721.00" y="206.50">ar..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.47%)</title><rect x="745" y="212" width="5" height="15" fill="rgb(245,163,40)"/><text x="748.00" y="222.50"></text></g><g><title>0x7f53d1c17d24 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="745" y="228" width="5" height="15" fill="rgb(254,161,20)"/><text x="748.00" y="238.50"></text></g><g><title>0x7f53ac1a514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="750" y="180" width="6" height="15" fill="rgb(238,92,54)"/><text x="753.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.47%)</title><rect x="750" y="196" width="6" height="15" fill="rgb(215,67,28)"/><text x="753.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.47%)</title><rect x="750" y="212" width="6" height="15" fill="rgb(250,189,1)"/><text x="753.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.47%)</title><rect x="750" y="228" width="6" height="15" fill="rgb(230,94,47)"/><text x="753.00" y="238.50"></text></g><g><title>0x7f53ac1a5d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 13.49%)</title><rect x="602" y="164" width="159" height="15" fill="rgb(225,140,15)"/><text x="605.00" y="174.50">0x7f53ac1a5d2e (skle..</text></g><g><title>0x7f53ac1a5328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="756" y="180" width="5" height="15" fill="rgb(205,21,43)"/><text x="759.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.47%)</title><rect x="756" y="196" width="5" height="15" fill="rgb(235,225,40)"/><text x="759.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.47%)</title><rect x="756" y="212" width="5" height="15" fill="rgb(229,135,42)"/><text x="759.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.47%)</title><rect x="756" y="228" width="5" height="15" fill="rgb(241,221,43)"/><text x="759.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.47%)</title><rect x="827" y="196" width="6" height="15" fill="rgb(206,152,20)"/><text x="830.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="855" y="212" width="11" height="15" fill="rgb(251,96,17)"/><text x="858.00" y="222.50"></text></g><g><title>0x7f53d1b4fe50 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="860" y="228" width="6" height="15" fill="rgb(254,11,22)"/><text x="863.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.47%)</title><rect x="866" y="212" width="5" height="15" fill="rgb(206,211,43)"/><text x="869.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (8 samples, 3.72%)</title><rect x="833" y="196" width="44" height="15" fill="rgb(213,92,7)"/><text x="836.00" y="206.50">_ass..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="871" y="212" width="6" height="15" fill="rgb(242,220,21)"/><text x="874.00" y="222.50"></text></g><g><title>0x7f53d1b4a6d0 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="871" y="228" width="6" height="15" fill="rgb(251,39,34)"/><text x="874.00" y="238.50"></text></g><g><title>0x7f53d1c17df0 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="943" y="212" width="5" height="15" fill="rgb(244,10,4)"/><text x="946.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 6.51%)</title><rect x="877" y="196" width="77" height="15" fill="rgb(213,114,33)"/><text x="880.00" y="206.50">_num_sam..</text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.47%)</title><rect x="948" y="212" width="6" height="15" fill="rgb(250,182,53)"/><text x="951.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.47%)</title><rect x="954" y="196" width="5" height="15" fill="rgb(230,209,19)"/><text x="957.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.47%)</title><rect x="954" y="212" width="5" height="15" fill="rgb(225,100,43)"/><text x="957.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.93%)</title><rect x="959" y="196" width="11" height="15" fill="rgb(247,145,12)"/><text x="962.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.47%)</title><rect x="964" y="212" width="6" height="15" fill="rgb(207,38,17)"/><text x="967.00" y="222.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="964" y="228" width="6" height="15" fill="rgb(241,31,40)"/><text x="967.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (47 samples, 21.86%)</title><rect x="772" y="180" width="258" height="15" fill="rgb(227,38,11)"/><text x="775.00" y="190.50">check_array (sklearn/utils/validat..</text></g><g><title>simplefilter (warnings.py) (11 samples, 5.12%)</title><rect x="970" y="196" width="60" height="15" fill="rgb(234,142,33)"/><text x="973.00" y="206.50">simple..</text></g><g><title>_add_filter (warnings.py) (8 samples, 3.72%)</title><rect x="986" y="212" width="44" height="15" fill="rgb(219,51,13)"/><text x="989.00" y="222.50">_add..</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.47%)</title><rect x="1025" y="228" width="5" height="15" fill="rgb(211,215,39)"/><text x="1028.00" y="238.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (50 samples, 23.26%)</title><rect x="761" y="164" width="275" height="15" fill="rgb(248,172,32)"/><text x="764.00" y="174.50">_validate_X_predict (sklearn/tree/_c..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.47%)</title><rect x="1030" y="180" width="6" height="15" fill="rgb(246,219,20)"/><text x="1033.00" y="190.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.93%)</title><rect x="1036" y="164" width="11" height="15" fill="rgb(217,10,37)"/><text x="1039.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.93%)</title><rect x="1036" y="180" width="11" height="15" fill="rgb(239,83,31)"/><text x="1039.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.40%)</title><rect x="1118" y="196" width="17" height="15" fill="rgb(219,132,16)"/><text x="1121.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (24 samples, 11.16%)</title><rect x="1047" y="164" width="132" height="15" fill="rgb(231,81,3)"/><text x="1050.00" y="174.50">check_is_fitted ..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (17 samples, 7.91%)</title><rect x="1085" y="180" width="94" height="15" fill="rgb(252,115,26)"/><text x="1088.00" y="190.50">&lt;listcomp&gt; ..</text></g><g><title>unicode_startswith (python3.7) (8 samples, 3.72%)</title><rect x="1135" y="196" width="44" height="15" fill="rgb(211,154,52)"/><text x="1138.00" y="206.50">unic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (109 samples, 50.70%)</title><rect x="586" y="132" width="598" height="15" fill="rgb(229,80,25)"/><text x="589.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/tree/_classes.py) (109 samples, 50.70%)</title><rect x="586" y="148" width="598" height="15" fill="rgb(228,138,41)"/><text x="589.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.47%)</title><rect x="1179" y="164" width="5" height="15" fill="rgb(239,74,24)"/><text x="1182.00" y="174.50"></text></g><g><title>all (215 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(224,73,54)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (215 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(249,137,36)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (112 samples, 52.09%)</title><rect x="575" y="68" width="615" height="15" fill="rgb(231,46,38)"/><text x="578.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (112 samples, 52.09%)</title><rect x="575" y="84" width="615" height="15" fill="rgb(236,70,42)"/><text x="578.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py) (112 samples, 52.09%)</title><rect x="575" y="100" width="615" height="15" fill="rgb(233,204,15)"/><text x="578.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (111 samples, 51.63%)</title><rect x="580" y="116" width="610" height="15" fill="rgb(237,18,29)"/><text x="583.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(235,29,27)"/><text x="1187.00" y="142.50"></text></g></g></svg>