<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:1) (1 samples, 0.52%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(221,84,45)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(213,138,44)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(234,217,52)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(251,203,14)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(212,209,36)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(219,15,1)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.52%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(212,19,42)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.52%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(211,170,29)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(245,134,46)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(236,205,49)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(216,40,38)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(230,171,28)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(210,183,3)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(247,69,39)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:69) (1 samples, 0.52%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(243,77,25)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.52%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(214,138,52)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(213,194,24)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(230,9,24)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(208,139,41)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(220,152,14)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.52%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(254,222,40)"/><text x="13.00" y="478.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.52%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(213,171,29)"/><text x="13.00" y="494.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:529) (1 samples, 0.52%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(227,56,38)"/><text x="13.00" y="510.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.52%)</title><rect x="16" y="932" width="6" height="15" fill="rgb(239,227,13)"/><text x="19.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.52%)</title><rect x="16" y="948" width="6" height="15" fill="rgb(206,93,26)"/><text x="19.00" y="958.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.52%)</title><rect x="16" y="964" width="6" height="15" fill="rgb(217,226,3)"/><text x="19.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 1.04%)</title><rect x="16" y="852" width="12" height="15" fill="rgb(233,165,47)"/><text x="19.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 1.04%)</title><rect x="16" y="868" width="12" height="15" fill="rgb(226,4,36)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 1.04%)</title><rect x="16" y="884" width="12" height="15" fill="rgb(231,62,53)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 1.04%)</title><rect x="16" y="900" width="12" height="15" fill="rgb(228,73,11)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (2 samples, 1.04%)</title><rect x="16" y="916" width="12" height="15" fill="rgb(232,217,53)"/><text x="19.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.52%)</title><rect x="22" y="932" width="6" height="15" fill="rgb(207,55,48)"/><text x="25.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.52%)</title><rect x="22" y="948" width="6" height="15" fill="rgb(234,38,16)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.52%)</title><rect x="22" y="964" width="6" height="15" fill="rgb(209,194,43)"/><text x="25.00" y="974.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.52%)</title><rect x="28" y="852" width="6" height="15" fill="rgb(227,189,44)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.52%)</title><rect x="28" y="868" width="6" height="15" fill="rgb(241,57,16)"/><text x="31.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.52%)</title><rect x="28" y="884" width="6" height="15" fill="rgb(245,29,42)"/><text x="31.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.52%)</title><rect x="28" y="900" width="6" height="15" fill="rgb(229,201,35)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.52%)</title><rect x="28" y="916" width="6" height="15" fill="rgb(206,170,26)"/><text x="31.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.52%)</title><rect x="28" y="932" width="6" height="15" fill="rgb(234,93,0)"/><text x="31.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.52%)</title><rect x="28" y="948" width="6" height="15" fill="rgb(249,87,41)"/><text x="31.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1392) (1 samples, 0.52%)</title><rect x="28" y="964" width="6" height="15" fill="rgb(243,168,49)"/><text x="31.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (4 samples, 2.08%)</title><rect x="16" y="148" width="24" height="15" fill="rgb(236,169,36)"/><text x="19.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="164" width="24" height="15" fill="rgb(215,88,13)"/><text x="19.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.08%)</title><rect x="16" y="180" width="24" height="15" fill="rgb(224,117,4)"/><text x="19.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="196" width="24" height="15" fill="rgb(252,199,51)"/><text x="19.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="212" width="24" height="15" fill="rgb(227,117,28)"/><text x="19.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="16" y="228" width="24" height="15" fill="rgb(253,185,14)"/><text x="19.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="16" y="244" width="24" height="15" fill="rgb(247,138,14)"/><text x="19.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="16" y="260" width="24" height="15" fill="rgb(241,53,45)"/><text x="19.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="276" width="24" height="15" fill="rgb(241,41,19)"/><text x="19.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (4 samples, 2.08%)</title><rect x="16" y="292" width="24" height="15" fill="rgb(230,117,53)"/><text x="19.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="308" width="24" height="15" fill="rgb(246,210,46)"/><text x="19.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="16" y="324" width="24" height="15" fill="rgb(231,167,15)"/><text x="19.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="16" y="340" width="24" height="15" fill="rgb(224,24,2)"/><text x="19.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="16" y="356" width="24" height="15" fill="rgb(241,146,20)"/><text x="19.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="372" width="24" height="15" fill="rgb(253,62,53)"/><text x="19.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (4 samples, 2.08%)</title><rect x="16" y="388" width="24" height="15" fill="rgb(247,38,41)"/><text x="19.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="404" width="24" height="15" fill="rgb(228,171,25)"/><text x="19.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="16" y="420" width="24" height="15" fill="rgb(237,135,21)"/><text x="19.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="16" y="436" width="24" height="15" fill="rgb(226,54,43)"/><text x="19.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="16" y="452" width="24" height="15" fill="rgb(253,18,46)"/><text x="19.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="468" width="24" height="15" fill="rgb(227,219,26)"/><text x="19.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (4 samples, 2.08%)</title><rect x="16" y="484" width="24" height="15" fill="rgb(253,167,13)"/><text x="19.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="500" width="24" height="15" fill="rgb(245,64,1)"/><text x="19.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="16" y="516" width="24" height="15" fill="rgb(237,53,36)"/><text x="19.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="16" y="532" width="24" height="15" fill="rgb(245,159,20)"/><text x="19.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="16" y="548" width="24" height="15" fill="rgb(219,225,36)"/><text x="19.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="564" width="24" height="15" fill="rgb(235,72,1)"/><text x="19.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (4 samples, 2.08%)</title><rect x="16" y="580" width="24" height="15" fill="rgb(224,13,24)"/><text x="19.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="596" width="24" height="15" fill="rgb(251,155,4)"/><text x="19.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (4 samples, 2.08%)</title><rect x="16" y="612" width="24" height="15" fill="rgb(228,43,17)"/><text x="19.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="628" width="24" height="15" fill="rgb(233,204,1)"/><text x="19.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="644" width="24" height="15" fill="rgb(205,165,46)"/><text x="19.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="16" y="660" width="24" height="15" fill="rgb(223,32,26)"/><text x="19.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="16" y="676" width="24" height="15" fill="rgb(214,222,14)"/><text x="19.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="16" y="692" width="24" height="15" fill="rgb(214,17,15)"/><text x="19.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="708" width="24" height="15" fill="rgb(241,14,3)"/><text x="19.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (4 samples, 2.08%)</title><rect x="16" y="724" width="24" height="15" fill="rgb(233,186,35)"/><text x="19.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="16" y="740" width="24" height="15" fill="rgb(243,99,2)"/><text x="19.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="16" y="756" width="24" height="15" fill="rgb(212,73,46)"/><text x="19.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="16" y="772" width="24" height="15" fill="rgb(208,35,10)"/><text x="19.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="16" y="788" width="24" height="15" fill="rgb(230,187,30)"/><text x="19.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="16" y="804" width="24" height="15" fill="rgb(212,158,6)"/><text x="19.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 2.08%)</title><rect x="16" y="820" width="24" height="15" fill="rgb(210,1,42)"/><text x="19.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 2.08%)</title><rect x="16" y="836" width="24" height="15" fill="rgb(209,74,27)"/><text x="19.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.52%)</title><rect x="34" y="852" width="6" height="15" fill="rgb(205,205,24)"/><text x="37.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.52%)</title><rect x="34" y="868" width="6" height="15" fill="rgb(231,62,45)"/><text x="37.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:703) (1 samples, 0.52%)</title><rect x="34" y="884" width="6" height="15" fill="rgb(216,135,1)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.52%)</title><rect x="40" y="244" width="6" height="15" fill="rgb(237,212,27)"/><text x="43.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="40" y="260" width="6" height="15" fill="rgb(221,161,18)"/><text x="43.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="40" y="276" width="6" height="15" fill="rgb(217,159,12)"/><text x="43.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="40" y="292" width="6" height="15" fill="rgb(245,133,5)"/><text x="43.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="40" y="308" width="6" height="15" fill="rgb(207,105,12)"/><text x="43.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="40" y="324" width="6" height="15" fill="rgb(238,170,23)"/><text x="43.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.52%)</title><rect x="40" y="340" width="6" height="15" fill="rgb(211,213,45)"/><text x="43.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="40" y="356" width="6" height="15" fill="rgb(231,183,21)"/><text x="43.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.52%)</title><rect x="40" y="372" width="6" height="15" fill="rgb(246,202,42)"/><text x="43.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="40" y="388" width="6" height="15" fill="rgb(210,167,54)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="40" y="404" width="6" height="15" fill="rgb(245,6,25)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="40" y="420" width="6" height="15" fill="rgb(215,184,34)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="40" y="436" width="6" height="15" fill="rgb(208,47,51)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="40" y="452" width="6" height="15" fill="rgb(248,79,4)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="40" y="468" width="6" height="15" fill="rgb(217,199,41)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.52%)</title><rect x="40" y="484" width="6" height="15" fill="rgb(250,35,38)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="40" y="500" width="6" height="15" fill="rgb(234,21,24)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="40" y="516" width="6" height="15" fill="rgb(215,42,31)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="40" y="532" width="6" height="15" fill="rgb(236,97,13)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="40" y="548" width="6" height="15" fill="rgb(214,213,19)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="40" y="564" width="6" height="15" fill="rgb(206,163,31)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.52%)</title><rect x="40" y="580" width="6" height="15" fill="rgb(232,81,32)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="40" y="596" width="6" height="15" fill="rgb(216,110,5)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="40" y="612" width="6" height="15" fill="rgb(229,140,49)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="40" y="628" width="6" height="15" fill="rgb(242,5,22)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.52%)</title><rect x="40" y="644" width="6" height="15" fill="rgb(230,64,49)"/><text x="43.00" y="654.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.52%)</title><rect x="40" y="660" width="6" height="15" fill="rgb(238,113,37)"/><text x="43.00" y="670.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.52%)</title><rect x="40" y="676" width="6" height="15" fill="rgb(233,208,14)"/><text x="43.00" y="686.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.52%)</title><rect x="40" y="692" width="6" height="15" fill="rgb(232,98,2)"/><text x="43.00" y="702.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:20) (1 samples, 0.52%)</title><rect x="46" y="340" width="7" height="15" fill="rgb(249,156,32)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="46" y="356" width="7" height="15" fill="rgb(216,127,36)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="46" y="372" width="7" height="15" fill="rgb(215,30,19)"/><text x="49.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="46" y="388" width="7" height="15" fill="rgb(224,17,47)"/><text x="49.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="46" y="404" width="7" height="15" fill="rgb(245,214,50)"/><text x="49.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="46" y="420" width="7" height="15" fill="rgb(205,1,7)"/><text x="49.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py:48) (1 samples, 0.52%)</title><rect x="46" y="436" width="7" height="15" fill="rgb(205,118,41)"/><text x="49.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="46" y="452" width="7" height="15" fill="rgb(226,13,14)"/><text x="49.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="46" y="468" width="7" height="15" fill="rgb(231,110,22)"/><text x="49.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="46" y="484" width="7" height="15" fill="rgb(231,71,40)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="46" y="500" width="7" height="15" fill="rgb(245,85,12)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="46" y="516" width="7" height="15" fill="rgb(210,9,45)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py:20) (1 samples, 0.52%)</title><rect x="46" y="532" width="7" height="15" fill="rgb(243,125,32)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="46" y="548" width="7" height="15" fill="rgb(205,72,11)"/><text x="49.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.52%)</title><rect x="46" y="564" width="7" height="15" fill="rgb(242,208,48)"/><text x="49.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="46" y="580" width="7" height="15" fill="rgb(249,22,45)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="46" y="596" width="7" height="15" fill="rgb(205,155,38)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="46" y="612" width="7" height="15" fill="rgb(235,134,4)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="46" y="628" width="7" height="15" fill="rgb(253,197,36)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="46" y="644" width="7" height="15" fill="rgb(229,62,30)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="46" y="660" width="7" height="15" fill="rgb(246,104,44)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py:100) (1 samples, 0.52%)</title><rect x="46" y="676" width="7" height="15" fill="rgb(241,77,20)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="46" y="692" width="7" height="15" fill="rgb(207,203,1)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="46" y="708" width="7" height="15" fill="rgb(231,162,47)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="46" y="724" width="7" height="15" fill="rgb(209,46,37)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.52%)</title><rect x="46" y="740" width="7" height="15" fill="rgb(247,80,53)"/><text x="49.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.52%)</title><rect x="46" y="756" width="7" height="15" fill="rgb(205,229,27)"/><text x="49.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.52%)</title><rect x="46" y="772" width="7" height="15" fill="rgb(215,152,20)"/><text x="49.00" y="782.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.52%)</title><rect x="53" y="628" width="6" height="15" fill="rgb(218,132,10)"/><text x="56.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="53" y="644" width="6" height="15" fill="rgb(224,9,49)"/><text x="56.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="53" y="660" width="6" height="15" fill="rgb(243,219,21)"/><text x="56.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="53" y="676" width="6" height="15" fill="rgb(215,75,49)"/><text x="56.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="53" y="692" width="6" height="15" fill="rgb(254,201,31)"/><text x="56.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="53" y="708" width="6" height="15" fill="rgb(219,74,40)"/><text x="56.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:17) (1 samples, 0.52%)</title><rect x="53" y="724" width="6" height="15" fill="rgb(239,222,16)"/><text x="56.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="53" y="740" width="6" height="15" fill="rgb(242,1,20)"/><text x="56.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="53" y="756" width="6" height="15" fill="rgb(245,111,31)"/><text x="56.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="53" y="772" width="6" height="15" fill="rgb(226,69,50)"/><text x="56.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="53" y="788" width="6" height="15" fill="rgb(215,4,13)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="53" y="804" width="6" height="15" fill="rgb(251,227,7)"/><text x="56.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/pytables.py:150) (1 samples, 0.52%)</title><rect x="53" y="820" width="6" height="15" fill="rgb(222,214,23)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.52%)</title><rect x="59" y="1332" width="6" height="15" fill="rgb(248,73,34)"/><text x="62.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.52%)</title><rect x="59" y="1348" width="6" height="15" fill="rgb(210,44,27)"/><text x="62.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.52%)</title><rect x="59" y="1364" width="6" height="15" fill="rgb(249,112,8)"/><text x="62.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.52%)</title><rect x="59" y="1380" width="6" height="15" fill="rgb(245,32,35)"/><text x="62.00" y="1390.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1394) (1 samples, 0.52%)</title><rect x="59" y="1396" width="6" height="15" fill="rgb(235,207,17)"/><text x="62.00" y="1406.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.52%)</title><rect x="59" y="1412" width="6" height="15" fill="rgb(212,180,46)"/><text x="62.00" y="1422.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:90) (1 samples, 0.52%)</title><rect x="59" y="1428" width="6" height="15" fill="rgb(205,190,19)"/><text x="62.00" y="1438.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 1.04%)</title><rect x="59" y="916" width="12" height="15" fill="rgb(218,136,7)"/><text x="62.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="59" y="932" width="12" height="15" fill="rgb(205,1,22)"/><text x="62.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="59" y="948" width="12" height="15" fill="rgb(227,161,4)"/><text x="62.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="59" y="964" width="12" height="15" fill="rgb(228,212,13)"/><text x="62.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="59" y="980" width="12" height="15" fill="rgb(249,29,24)"/><text x="62.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="59" y="996" width="12" height="15" fill="rgb(246,6,44)"/><text x="62.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:88) (2 samples, 1.04%)</title><rect x="59" y="1012" width="12" height="15" fill="rgb(241,218,5)"/><text x="62.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="59" y="1028" width="12" height="15" fill="rgb(252,224,6)"/><text x="62.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="59" y="1044" width="12" height="15" fill="rgb(249,148,21)"/><text x="62.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="59" y="1060" width="12" height="15" fill="rgb(240,68,54)"/><text x="62.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="59" y="1076" width="12" height="15" fill="rgb(239,187,7)"/><text x="62.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="59" y="1092" width="12" height="15" fill="rgb(249,135,54)"/><text x="62.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:57) (2 samples, 1.04%)</title><rect x="59" y="1108" width="12" height="15" fill="rgb(238,90,15)"/><text x="62.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="59" y="1124" width="12" height="15" fill="rgb(225,213,23)"/><text x="62.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="59" y="1140" width="12" height="15" fill="rgb(214,151,46)"/><text x="62.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="59" y="1156" width="12" height="15" fill="rgb(227,90,19)"/><text x="62.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="59" y="1172" width="12" height="15" fill="rgb(205,139,41)"/><text x="62.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="59" y="1188" width="12" height="15" fill="rgb(223,104,15)"/><text x="62.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py:1) (2 samples, 1.04%)</title><rect x="59" y="1204" width="12" height="15" fill="rgb(229,147,54)"/><text x="62.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="59" y="1220" width="12" height="15" fill="rgb(231,135,42)"/><text x="62.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="59" y="1236" width="12" height="15" fill="rgb(219,25,42)"/><text x="62.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="59" y="1252" width="12" height="15" fill="rgb(236,20,7)"/><text x="62.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="59" y="1268" width="12" height="15" fill="rgb(236,91,24)"/><text x="62.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="59" y="1284" width="12" height="15" fill="rgb(248,67,53)"/><text x="62.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py:15) (2 samples, 1.04%)</title><rect x="59" y="1300" width="12" height="15" fill="rgb(217,100,18)"/><text x="62.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="59" y="1316" width="12" height="15" fill="rgb(248,122,15)"/><text x="62.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="65" y="1332" width="6" height="15" fill="rgb(220,154,27)"/><text x="68.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="65" y="1348" width="6" height="15" fill="rgb(223,196,5)"/><text x="68.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.52%)</title><rect x="65" y="1364" width="6" height="15" fill="rgb(210,146,19)"/><text x="68.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.52%)</title><rect x="65" y="1380" width="6" height="15" fill="rgb(242,225,18)"/><text x="68.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.52%)</title><rect x="65" y="1396" width="6" height="15" fill="rgb(245,175,6)"/><text x="68.00" y="1406.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.52%)</title><rect x="65" y="1412" width="6" height="15" fill="rgb(205,170,28)"/><text x="68.00" y="1422.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 1.56%)</title><rect x="59" y="724" width="18" height="15" fill="rgb(208,46,19)"/><text x="62.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="59" y="740" width="18" height="15" fill="rgb(250,27,11)"/><text x="62.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="59" y="756" width="18" height="15" fill="rgb(231,89,49)"/><text x="62.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="59" y="772" width="18" height="15" fill="rgb(252,115,54)"/><text x="62.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="59" y="788" width="18" height="15" fill="rgb(234,198,6)"/><text x="62.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="59" y="804" width="18" height="15" fill="rgb(239,33,35)"/><text x="62.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 1.56%)</title><rect x="59" y="820" width="18" height="15" fill="rgb(243,215,47)"/><text x="62.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="59" y="836" width="18" height="15" fill="rgb(243,145,43)"/><text x="62.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="59" y="852" width="18" height="15" fill="rgb(233,207,45)"/><text x="62.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="59" y="868" width="18" height="15" fill="rgb(232,114,45)"/><text x="62.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="59" y="884" width="18" height="15" fill="rgb(254,137,45)"/><text x="62.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="59" y="900" width="18" height="15" fill="rgb(206,104,29)"/><text x="62.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (1 samples, 0.52%)</title><rect x="71" y="916" width="6" height="15" fill="rgb(231,144,41)"/><text x="74.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="71" y="932" width="6" height="15" fill="rgb(231,55,17)"/><text x="74.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="71" y="948" width="6" height="15" fill="rgb(242,59,7)"/><text x="74.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="71" y="964" width="6" height="15" fill="rgb(221,138,17)"/><text x="74.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="71" y="980" width="6" height="15" fill="rgb(237,199,0)"/><text x="74.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="71" y="996" width="6" height="15" fill="rgb(228,109,45)"/><text x="74.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:40) (1 samples, 0.52%)</title><rect x="71" y="1012" width="6" height="15" fill="rgb(214,73,8)"/><text x="74.00" y="1022.50"></text></g><g><title>SparseDataFrame (pandas/core/sparse/frame.py:860) (1 samples, 0.52%)</title><rect x="71" y="1028" width="6" height="15" fill="rgb(205,100,50)"/><text x="74.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.52%)</title><rect x="71" y="1044" width="6" height="15" fill="rgb(230,73,5)"/><text x="74.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.52%)</title><rect x="71" y="1060" width="6" height="15" fill="rgb(244,149,3)"/><text x="74.00" y="1070.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.52%)</title><rect x="71" y="1076" width="6" height="15" fill="rgb(205,91,52)"/><text x="74.00" y="1086.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.52%)</title><rect x="71" y="1092" width="6" height="15" fill="rgb(226,160,16)"/><text x="74.00" y="1102.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.52%)</title><rect x="71" y="1108" width="6" height="15" fill="rgb(212,3,27)"/><text x="74.00" y="1118.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (5 samples, 2.60%)</title><rect x="53" y="436" width="30" height="15" fill="rgb(221,51,15)"/><text x="56.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.60%)</title><rect x="53" y="452" width="30" height="15" fill="rgb(224,160,41)"/><text x="56.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.60%)</title><rect x="53" y="468" width="30" height="15" fill="rgb(210,182,32)"/><text x="56.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.60%)</title><rect x="53" y="484" width="30" height="15" fill="rgb(217,46,51)"/><text x="56.00" y="494.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.60%)</title><rect x="53" y="500" width="30" height="15" fill="rgb(224,45,42)"/><text x="56.00" y="510.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.60%)</title><rect x="53" y="516" width="30" height="15" fill="rgb(250,154,11)"/><text x="56.00" y="526.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (5 samples, 2.60%)</title><rect x="53" y="532" width="30" height="15" fill="rgb(217,118,13)"/><text x="56.00" y="542.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.60%)</title><rect x="53" y="548" width="30" height="15" fill="rgb(252,47,14)"/><text x="56.00" y="558.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.60%)</title><rect x="53" y="564" width="30" height="15" fill="rgb(220,28,15)"/><text x="56.00" y="574.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.60%)</title><rect x="53" y="580" width="30" height="15" fill="rgb(207,118,11)"/><text x="56.00" y="590.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.60%)</title><rect x="53" y="596" width="30" height="15" fill="rgb(233,178,1)"/><text x="56.00" y="606.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.60%)</title><rect x="53" y="612" width="30" height="15" fill="rgb(214,164,44)"/><text x="56.00" y="622.50">_c..</text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 2.08%)</title><rect x="59" y="628" width="24" height="15" fill="rgb(252,34,19)"/><text x="62.00" y="638.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.08%)</title><rect x="59" y="644" width="24" height="15" fill="rgb(211,11,29)"/><text x="62.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.08%)</title><rect x="59" y="660" width="24" height="15" fill="rgb(210,196,10)"/><text x="62.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.08%)</title><rect x="59" y="676" width="24" height="15" fill="rgb(213,48,26)"/><text x="62.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.08%)</title><rect x="59" y="692" width="24" height="15" fill="rgb(210,42,4)"/><text x="62.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.08%)</title><rect x="59" y="708" width="24" height="15" fill="rgb(242,95,9)"/><text x="62.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.52%)</title><rect x="77" y="724" width="6" height="15" fill="rgb(230,126,43)"/><text x="80.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="77" y="740" width="6" height="15" fill="rgb(242,93,15)"/><text x="80.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.52%)</title><rect x="77" y="756" width="6" height="15" fill="rgb(252,13,30)"/><text x="80.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="77" y="772" width="6" height="15" fill="rgb(252,148,23)"/><text x="80.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="77" y="788" width="6" height="15" fill="rgb(208,33,40)"/><text x="80.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="77" y="804" width="6" height="15" fill="rgb(253,58,20)"/><text x="80.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="77" y="820" width="6" height="15" fill="rgb(248,71,0)"/><text x="80.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="77" y="836" width="6" height="15" fill="rgb(221,10,20)"/><text x="80.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="77" y="852" width="6" height="15" fill="rgb(238,25,32)"/><text x="80.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:10) (1 samples, 0.52%)</title><rect x="77" y="868" width="6" height="15" fill="rgb(220,13,33)"/><text x="80.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="77" y="884" width="6" height="15" fill="rgb(207,166,49)"/><text x="80.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="77" y="900" width="6" height="15" fill="rgb(222,206,20)"/><text x="80.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="77" y="916" width="6" height="15" fill="rgb(244,221,41)"/><text x="80.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="77" y="932" width="6" height="15" fill="rgb(244,220,30)"/><text x="80.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="77" y="948" width="6" height="15" fill="rgb(206,50,13)"/><text x="80.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py:38) (1 samples, 0.52%)</title><rect x="77" y="964" width="6" height="15" fill="rgb(235,1,19)"/><text x="80.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="77" y="980" width="6" height="15" fill="rgb(243,154,18)"/><text x="80.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="77" y="996" width="6" height="15" fill="rgb(219,32,37)"/><text x="80.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="77" y="1012" width="6" height="15" fill="rgb(225,37,2)"/><text x="80.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="77" y="1028" width="6" height="15" fill="rgb(219,153,23)"/><text x="80.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="77" y="1044" width="6" height="15" fill="rgb(223,225,14)"/><text x="80.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py:186) (1 samples, 0.52%)</title><rect x="77" y="1060" width="6" height="15" fill="rgb(221,173,35)"/><text x="80.00" y="1070.50"></text></g><g><title>Index (pandas/core/indexes/base.py:4010) (1 samples, 0.52%)</title><rect x="77" y="1076" width="6" height="15" fill="rgb(236,82,11)"/><text x="80.00" y="1086.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.52%)</title><rect x="77" y="1092" width="6" height="15" fill="rgb(212,35,13)"/><text x="80.00" y="1102.50"></text></g><g><title>dedent (textwrap.py:432) (1 samples, 0.52%)</title><rect x="77" y="1108" width="6" height="15" fill="rgb(230,54,7)"/><text x="80.00" y="1118.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.52%)</title><rect x="83" y="1108" width="6" height="15" fill="rgb(230,37,28)"/><text x="86.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="83" y="1124" width="6" height="15" fill="rgb(205,199,2)"/><text x="86.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="83" y="1140" width="6" height="15" fill="rgb(252,11,1)"/><text x="86.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="83" y="1156" width="6" height="15" fill="rgb(251,140,10)"/><text x="86.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="83" y="1172" width="6" height="15" fill="rgb(253,151,5)"/><text x="86.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="83" y="1188" width="6" height="15" fill="rgb(221,9,7)"/><text x="86.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.52%)</title><rect x="83" y="1204" width="6" height="15" fill="rgb(244,200,34)"/><text x="86.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.52%)</title><rect x="83" y="1220" width="6" height="15" fill="rgb(233,193,43)"/><text x="86.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.52%)</title><rect x="83" y="1236" width="6" height="15" fill="rgb(233,45,2)"/><text x="86.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.52%)</title><rect x="83" y="1252" width="6" height="15" fill="rgb(236,82,37)"/><text x="86.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.52%)</title><rect x="83" y="1268" width="6" height="15" fill="rgb(210,145,28)"/><text x="86.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.52%)</title><rect x="83" y="1284" width="6" height="15" fill="rgb(211,0,40)"/><text x="86.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.52%)</title><rect x="83" y="1300" width="6" height="15" fill="rgb(230,198,46)"/><text x="86.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.52%)</title><rect x="83" y="1316" width="6" height="15" fill="rgb(229,205,19)"/><text x="86.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.52%)</title><rect x="83" y="1332" width="6" height="15" fill="rgb(240,45,0)"/><text x="86.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.52%)</title><rect x="83" y="1348" width="6" height="15" fill="rgb(208,114,35)"/><text x="86.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.52%)</title><rect x="83" y="1364" width="6" height="15" fill="rgb(250,88,48)"/><text x="86.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.52%)</title><rect x="83" y="1380" width="6" height="15" fill="rgb(241,135,46)"/><text x="86.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.52%)</title><rect x="83" y="1396" width="6" height="15" fill="rgb(224,12,17)"/><text x="86.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.52%)</title><rect x="83" y="1412" width="6" height="15" fill="rgb(221,151,48)"/><text x="86.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.52%)</title><rect x="83" y="1428" width="6" height="15" fill="rgb(233,21,37)"/><text x="86.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.52%)</title><rect x="83" y="1444" width="6" height="15" fill="rgb(247,44,24)"/><text x="86.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.52%)</title><rect x="83" y="1460" width="6" height="15" fill="rgb(211,217,53)"/><text x="86.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.52%)</title><rect x="83" y="1476" width="6" height="15" fill="rgb(213,106,49)"/><text x="86.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.52%)</title><rect x="83" y="1492" width="6" height="15" fill="rgb(243,136,27)"/><text x="86.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.52%)</title><rect x="83" y="1508" width="6" height="15" fill="rgb(225,70,40)"/><text x="86.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.52%)</title><rect x="83" y="1524" width="6" height="15" fill="rgb(215,49,0)"/><text x="86.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.52%)</title><rect x="83" y="1540" width="6" height="15" fill="rgb(248,86,7)"/><text x="86.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.52%)</title><rect x="83" y="1556" width="6" height="15" fill="rgb(225,33,15)"/><text x="86.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.52%)</title><rect x="83" y="1572" width="6" height="15" fill="rgb(217,33,29)"/><text x="86.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.52%)</title><rect x="83" y="1588" width="6" height="15" fill="rgb(208,143,36)"/><text x="86.00" y="1598.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.52%)</title><rect x="83" y="1604" width="6" height="15" fill="rgb(254,66,32)"/><text x="86.00" y="1614.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.52%)</title><rect x="83" y="1620" width="6" height="15" fill="rgb(213,22,36)"/><text x="86.00" y="1630.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.52%)</title><rect x="83" y="1636" width="6" height="15" fill="rgb(216,60,19)"/><text x="86.00" y="1646.50"></text></g><g><title>_parse (sre_parse.py:834) (1 samples, 0.52%)</title><rect x="83" y="1652" width="6" height="15" fill="rgb(225,86,39)"/><text x="86.00" y="1662.50"></text></g><g><title>root (&lt;template&gt;:100) (1 samples, 0.52%)</title><rect x="89" y="1572" width="7" height="15" fill="rgb(217,180,42)"/><text x="92.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.52%)</title><rect x="89" y="1588" width="7" height="15" fill="rgb(212,12,1)"/><text x="92.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py:154) (1 samples, 0.52%)</title><rect x="89" y="1604" width="7" height="15" fill="rgb(240,93,23)"/><text x="92.00" y="1614.50"></text></g><g><title>0x7fc3f52800c0 (?) (1 samples, 0.52%)</title><rect x="89" y="1620" width="7" height="15" fill="rgb(224,74,7)"/><text x="92.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:4) (15 samples, 7.81%)</title><rect x="10" y="52" width="92" height="15" fill="rgb(239,199,16)"/><text x="13.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 7.81%)</title><rect x="10" y="68" width="92" height="15" fill="rgb(248,119,3)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 7.81%)</title><rect x="10" y="84" width="92" height="15" fill="rgb(216,113,44)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 7.81%)</title><rect x="10" y="100" width="92" height="15" fill="rgb(210,157,27)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 7.81%)</title><rect x="10" y="116" width="92" height="15" fill="rgb(234,162,27)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 7.81%)</title><rect x="10" y="132" width="92" height="15" fill="rgb(210,179,29)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (10 samples, 5.21%)</title><rect x="40" y="148" width="62" height="15" fill="rgb(238,55,51)"/><text x="43.00" y="158.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 5.21%)</title><rect x="40" y="164" width="62" height="15" fill="rgb(249,68,34)"/><text x="43.00" y="174.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 5.21%)</title><rect x="40" y="180" width="62" height="15" fill="rgb(233,82,54)"/><text x="43.00" y="190.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 5.21%)</title><rect x="40" y="196" width="62" height="15" fill="rgb(212,203,29)"/><text x="43.00" y="206.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 5.21%)</title><rect x="40" y="212" width="62" height="15" fill="rgb(213,141,15)"/><text x="43.00" y="222.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 5.21%)</title><rect x="40" y="228" width="62" height="15" fill="rgb(207,168,21)"/><text x="43.00" y="238.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 4.69%)</title><rect x="46" y="244" width="56" height="15" fill="rgb(240,61,35)"/><text x="49.00" y="254.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 4.69%)</title><rect x="46" y="260" width="56" height="15" fill="rgb(242,127,1)"/><text x="49.00" y="270.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 4.69%)</title><rect x="46" y="276" width="56" height="15" fill="rgb(209,214,45)"/><text x="49.00" y="286.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 4.69%)</title><rect x="46" y="292" width="56" height="15" fill="rgb(212,166,27)"/><text x="49.00" y="302.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 4.69%)</title><rect x="46" y="308" width="56" height="15" fill="rgb(224,76,30)"/><text x="49.00" y="318.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 4.69%)</title><rect x="46" y="324" width="56" height="15" fill="rgb(209,70,11)"/><text x="49.00" y="334.50">_call..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 4.17%)</title><rect x="53" y="340" width="49" height="15" fill="rgb(213,208,38)"/><text x="56.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 4.17%)</title><rect x="53" y="356" width="49" height="15" fill="rgb(254,64,2)"/><text x="56.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 4.17%)</title><rect x="53" y="372" width="49" height="15" fill="rgb(206,112,4)"/><text x="56.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 4.17%)</title><rect x="53" y="388" width="49" height="15" fill="rgb(239,19,12)"/><text x="56.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 4.17%)</title><rect x="53" y="404" width="49" height="15" fill="rgb(215,214,28)"/><text x="56.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 4.17%)</title><rect x="53" y="420" width="49" height="15" fill="rgb(227,109,14)"/><text x="56.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.56%)</title><rect x="83" y="436" width="19" height="15" fill="rgb(210,106,8)"/><text x="86.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="452" width="19" height="15" fill="rgb(231,143,5)"/><text x="86.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.56%)</title><rect x="83" y="468" width="19" height="15" fill="rgb(216,212,12)"/><text x="86.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="484" width="19" height="15" fill="rgb(232,24,51)"/><text x="86.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="500" width="19" height="15" fill="rgb(249,17,9)"/><text x="86.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="83" y="516" width="19" height="15" fill="rgb(211,197,44)"/><text x="86.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="83" y="532" width="19" height="15" fill="rgb(236,143,0)"/><text x="86.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="83" y="548" width="19" height="15" fill="rgb(250,57,36)"/><text x="86.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="564" width="19" height="15" fill="rgb(218,11,51)"/><text x="86.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.56%)</title><rect x="83" y="580" width="19" height="15" fill="rgb(208,149,51)"/><text x="86.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="596" width="19" height="15" fill="rgb(248,205,21)"/><text x="86.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="83" y="612" width="19" height="15" fill="rgb(206,207,39)"/><text x="86.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="83" y="628" width="19" height="15" fill="rgb(252,41,9)"/><text x="86.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="83" y="644" width="19" height="15" fill="rgb(224,119,31)"/><text x="86.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="660" width="19" height="15" fill="rgb(230,12,50)"/><text x="86.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.56%)</title><rect x="83" y="676" width="19" height="15" fill="rgb(225,156,12)"/><text x="86.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="692" width="19" height="15" fill="rgb(217,174,16)"/><text x="86.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="83" y="708" width="19" height="15" fill="rgb(250,166,0)"/><text x="86.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="83" y="724" width="19" height="15" fill="rgb(237,98,45)"/><text x="86.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="83" y="740" width="19" height="15" fill="rgb(239,128,47)"/><text x="86.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="756" width="19" height="15" fill="rgb(221,15,53)"/><text x="86.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.56%)</title><rect x="83" y="772" width="19" height="15" fill="rgb(253,101,17)"/><text x="86.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="788" width="19" height="15" fill="rgb(213,135,40)"/><text x="86.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="83" y="804" width="19" height="15" fill="rgb(251,64,50)"/><text x="86.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="83" y="820" width="19" height="15" fill="rgb(219,11,52)"/><text x="86.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="83" y="836" width="19" height="15" fill="rgb(248,15,34)"/><text x="86.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="852" width="19" height="15" fill="rgb(241,49,1)"/><text x="86.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.56%)</title><rect x="83" y="868" width="19" height="15" fill="rgb(245,111,36)"/><text x="86.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="884" width="19" height="15" fill="rgb(224,206,48)"/><text x="86.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.56%)</title><rect x="83" y="900" width="19" height="15" fill="rgb(212,114,15)"/><text x="86.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="916" width="19" height="15" fill="rgb(250,162,15)"/><text x="86.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="932" width="19" height="15" fill="rgb(225,12,20)"/><text x="86.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="83" y="948" width="19" height="15" fill="rgb(212,207,19)"/><text x="86.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="83" y="964" width="19" height="15" fill="rgb(208,113,43)"/><text x="86.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="83" y="980" width="19" height="15" fill="rgb(205,145,34)"/><text x="86.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="996" width="19" height="15" fill="rgb(225,68,8)"/><text x="86.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.56%)</title><rect x="83" y="1012" width="19" height="15" fill="rgb(237,185,36)"/><text x="86.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.56%)</title><rect x="83" y="1028" width="19" height="15" fill="rgb(216,67,39)"/><text x="86.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.56%)</title><rect x="83" y="1044" width="19" height="15" fill="rgb(251,8,27)"/><text x="86.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.56%)</title><rect x="83" y="1060" width="19" height="15" fill="rgb(233,94,6)"/><text x="86.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.56%)</title><rect x="83" y="1076" width="19" height="15" fill="rgb(251,220,30)"/><text x="86.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.56%)</title><rect x="83" y="1092" width="19" height="15" fill="rgb(227,175,11)"/><text x="86.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 1.04%)</title><rect x="89" y="1108" width="13" height="15" fill="rgb(206,227,18)"/><text x="92.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.04%)</title><rect x="89" y="1124" width="13" height="15" fill="rgb(247,116,50)"/><text x="92.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="89" y="1140" width="13" height="15" fill="rgb(254,3,4)"/><text x="92.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="89" y="1156" width="13" height="15" fill="rgb(207,108,18)"/><text x="92.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="89" y="1172" width="13" height="15" fill="rgb(242,122,53)"/><text x="92.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="89" y="1188" width="13" height="15" fill="rgb(222,54,29)"/><text x="92.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="89" y="1204" width="13" height="15" fill="rgb(247,96,37)"/><text x="92.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="89" y="1220" width="13" height="15" fill="rgb(223,131,29)"/><text x="92.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 1.04%)</title><rect x="89" y="1236" width="13" height="15" fill="rgb(215,13,52)"/><text x="92.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.04%)</title><rect x="89" y="1252" width="13" height="15" fill="rgb(227,64,22)"/><text x="92.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="89" y="1268" width="13" height="15" fill="rgb(246,158,26)"/><text x="92.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="89" y="1284" width="13" height="15" fill="rgb(207,212,17)"/><text x="92.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="89" y="1300" width="13" height="15" fill="rgb(225,202,46)"/><text x="92.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="89" y="1316" width="13" height="15" fill="rgb(248,49,4)"/><text x="92.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="89" y="1332" width="13" height="15" fill="rgb(243,77,26)"/><text x="92.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="89" y="1348" width="13" height="15" fill="rgb(216,46,50)"/><text x="92.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 1.04%)</title><rect x="89" y="1364" width="13" height="15" fill="rgb(220,57,43)"/><text x="92.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.04%)</title><rect x="89" y="1380" width="13" height="15" fill="rgb(225,11,19)"/><text x="92.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.04%)</title><rect x="89" y="1396" width="13" height="15" fill="rgb(252,161,8)"/><text x="92.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.04%)</title><rect x="89" y="1412" width="13" height="15" fill="rgb(211,63,37)"/><text x="92.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.04%)</title><rect x="89" y="1428" width="13" height="15" fill="rgb(227,205,5)"/><text x="92.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.04%)</title><rect x="89" y="1444" width="13" height="15" fill="rgb(254,39,51)"/><text x="92.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 1.04%)</title><rect x="89" y="1460" width="13" height="15" fill="rgb(219,84,43)"/><text x="92.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 1.04%)</title><rect x="89" y="1476" width="13" height="15" fill="rgb(244,40,51)"/><text x="92.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 1.04%)</title><rect x="89" y="1492" width="13" height="15" fill="rgb(210,37,19)"/><text x="92.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 1.04%)</title><rect x="89" y="1508" width="13" height="15" fill="rgb(223,37,50)"/><text x="92.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 1.04%)</title><rect x="89" y="1524" width="13" height="15" fill="rgb(219,153,14)"/><text x="92.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 1.04%)</title><rect x="89" y="1540" width="13" height="15" fill="rgb(242,75,51)"/><text x="92.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 1.04%)</title><rect x="89" y="1556" width="13" height="15" fill="rgb(209,96,27)"/><text x="92.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.52%)</title><rect x="96" y="1572" width="6" height="15" fill="rgb(237,194,24)"/><text x="99.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.52%)</title><rect x="96" y="1588" width="6" height="15" fill="rgb(224,82,8)"/><text x="99.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:202) (1 samples, 0.52%)</title><rect x="96" y="1604" width="6" height="15" fill="rgb(242,41,30)"/><text x="99.00" y="1614.50"></text></g><g><title>unicode_split (python3.7) (1 samples, 0.52%)</title><rect x="96" y="1620" width="6" height="15" fill="rgb(216,145,24)"/><text x="99.00" y="1630.50"></text></g><g><title>fit (sklearn/tree/_classes.py:149) (1 samples, 0.52%)</title><rect x="102" y="132" width="6" height="15" fill="rgb(228,43,49)"/><text x="105.00" y="142.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.52%)</title><rect x="102" y="148" width="6" height="15" fill="rgb(212,109,43)"/><text x="105.00" y="158.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.52%)</title><rect x="102" y="164" width="6" height="15" fill="rgb(224,44,15)"/><text x="105.00" y="174.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.52%)</title><rect x="102" y="180" width="6" height="15" fill="rgb(221,182,6)"/><text x="105.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:40) (2 samples, 1.04%)</title><rect x="102" y="52" width="12" height="15" fill="rgb(220,204,46)"/><text x="105.00" y="62.50"></text></g><g><title>start (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:11) (2 samples, 1.04%)</title><rect x="102" y="68" width="12" height="15" fill="rgb(236,48,6)"/><text x="105.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:39) (2 samples, 1.04%)</title><rect x="102" y="84" width="12" height="15" fill="rgb(253,182,25)"/><text x="105.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (2 samples, 1.04%)</title><rect x="102" y="100" width="12" height="15" fill="rgb(208,85,8)"/><text x="105.00" y="110.50"></text></g><g><title>fit (sklearn/tree/_classes.py:1226) (2 samples, 1.04%)</title><rect x="102" y="116" width="12" height="15" fill="rgb(242,182,45)"/><text x="105.00" y="126.50"></text></g><g><title>fit (sklearn/tree/_classes.py:272) (1 samples, 0.52%)</title><rect x="108" y="132" width="6" height="15" fill="rgb(230,202,32)"/><text x="111.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:47) (1 samples, 0.52%)</title><rect x="114" y="52" width="6" height="15" fill="rgb(218,144,50)"/><text x="117.00" y="62.50"></text></g><g><title>profile0_skl (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:46) (1 samples, 0.52%)</title><rect x="114" y="68" width="6" height="15" fill="rgb(239,168,39)"/><text x="117.00" y="78.50"></text></g><g><title>setup_profile0 (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:26) (1 samples, 0.52%)</title><rect x="114" y="84" width="6" height="15" fill="rgb(224,50,27)"/><text x="117.00" y="94.50"></text></g><g><title>profile0 (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:18) (1 samples, 0.52%)</title><rect x="114" y="100" width="6" height="15" fill="rgb(245,28,24)"/><text x="117.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.52%)</title><rect x="114" y="116" width="6" height="15" fill="rgb(208,185,52)"/><text x="117.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.52%)</title><rect x="114" y="132" width="6" height="15" fill="rgb(239,204,53)"/><text x="117.00" y="142.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (1 samples, 0.52%)</title><rect x="114" y="148" width="6" height="15" fill="rgb(238,128,5)"/><text x="117.00" y="158.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (1 samples, 0.52%)</title><rect x="114" y="164" width="6" height="15" fill="rgb(228,95,8)"/><text x="117.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.52%)</title><rect x="114" y="180" width="6" height="15" fill="rgb(224,202,32)"/><text x="117.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.52%)</title><rect x="114" y="196" width="6" height="15" fill="rgb(215,220,38)"/><text x="117.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 1.04%)</title><rect x="151" y="196" width="12" height="15" fill="rgb(205,83,26)"/><text x="154.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (8 samples, 4.17%)</title><rect x="126" y="148" width="49" height="15" fill="rgb(240,70,42)"/><text x="129.00" y="158.50">pred..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (8 samples, 4.17%)</title><rect x="126" y="164" width="49" height="15" fill="rgb(244,63,24)"/><text x="129.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (7 samples, 3.65%)</title><rect x="132" y="180" width="43" height="15" fill="rgb(242,132,53)"/><text x="135.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 1.04%)</title><rect x="163" y="196" width="12" height="15" fill="rgb(235,88,52)"/><text x="166.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.52%)</title><rect x="188" y="196" width="6" height="15" fill="rgb(234,12,5)"/><text x="191.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.52%)</title><rect x="194" y="196" width="6" height="15" fill="rgb(238,83,13)"/><text x="197.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 2.08%)</title><rect x="182" y="180" width="24" height="15" fill="rgb(233,173,9)"/><text x="185.00" y="190.50">c..</text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.52%)</title><rect x="200" y="196" width="6" height="15" fill="rgb(242,118,14)"/><text x="203.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.52%)</title><rect x="206" y="180" width="6" height="15" fill="rgb(220,107,53)"/><text x="209.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.52%)</title><rect x="206" y="196" width="6" height="15" fill="rgb(234,4,25)"/><text x="209.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.52%)</title><rect x="206" y="212" width="6" height="15" fill="rgb(220,34,38)"/><text x="209.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (1 samples, 0.52%)</title><rect x="212" y="180" width="6" height="15" fill="rgb(221,29,51)"/><text x="215.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.52%)</title><rect x="218" y="180" width="7" height="15" fill="rgb(209,14,23)"/><text x="221.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.52%)</title><rect x="218" y="196" width="7" height="15" fill="rgb(241,215,13)"/><text x="221.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 3.12%)</title><rect x="225" y="180" width="36" height="15" fill="rgb(241,193,46)"/><text x="228.00" y="190.50">che..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 3.12%)</title><rect x="225" y="196" width="36" height="15" fill="rgb(206,25,42)"/><text x="228.00" y="206.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.52%)</title><rect x="255" y="212" width="6" height="15" fill="rgb(252,168,54)"/><text x="258.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.52%)</title><rect x="268" y="196" width="6" height="15" fill="rgb(223,51,47)"/><text x="271.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.52%)</title><rect x="274" y="196" width="6" height="15" fill="rgb(240,3,46)"/><text x="277.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (19 samples, 9.90%)</title><rect x="175" y="148" width="117" height="15" fill="rgb(213,186,27)"/><text x="178.00" y="158.50">predict (sklea..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (19 samples, 9.90%)</title><rect x="175" y="164" width="117" height="15" fill="rgb(216,67,39)"/><text x="178.00" y="174.50">_validate_X_pr..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (5 samples, 2.60%)</title><rect x="261" y="180" width="31" height="15" fill="rgb(232,29,29)"/><text x="264.00" y="190.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 1.04%)</title><rect x="280" y="196" width="12" height="15" fill="rgb(253,218,20)"/><text x="283.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (2 samples, 1.04%)</title><rect x="280" y="212" width="12" height="15" fill="rgb(205,40,54)"/><text x="283.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 1.04%)</title><rect x="280" y="228" width="12" height="15" fill="rgb(246,91,50)"/><text x="283.00" y="238.50"></text></g><g><title>0x7fc3df82ff12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="292" y="180" width="6" height="15" fill="rgb(212,33,17)"/><text x="295.00" y="190.50"></text></g><g><title>0x7fc3df82ff55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="298" y="180" width="7" height="15" fill="rgb(241,28,39)"/><text x="301.00" y="190.50"></text></g><g><title>0x7fc3df81fd11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="298" y="196" width="7" height="15" fill="rgb(251,17,29)"/><text x="301.00" y="206.50"></text></g><g><title>0x7fc3df82ff81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="305" y="180" width="6" height="15" fill="rgb(224,86,54)"/><text x="308.00" y="190.50"></text></g><g><title>0x7fc3df81810c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="311" y="260" width="6" height="15" fill="rgb(228,206,46)"/><text x="314.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.52%)</title><rect x="317" y="276" width="6" height="15" fill="rgb(237,67,30)"/><text x="320.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.52%)</title><rect x="317" y="292" width="6" height="15" fill="rgb(207,6,53)"/><text x="320.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.52%)</title><rect x="317" y="308" width="6" height="15" fill="rgb(246,163,27)"/><text x="320.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.52%)</title><rect x="317" y="324" width="6" height="15" fill="rgb(252,224,16)"/><text x="320.00" y="334.50"></text></g><g><title>0x7fc3df822d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.56%)</title><rect x="311" y="228" width="18" height="15" fill="rgb(226,101,30)"/><text x="314.00" y="238.50"></text></g><g><title>0x7fc3df822666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.56%)</title><rect x="311" y="244" width="18" height="15" fill="rgb(212,181,23)"/><text x="314.00" y="254.50"></text></g><g><title>0x7fc3df8182fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.04%)</title><rect x="317" y="260" width="12" height="15" fill="rgb(230,207,20)"/><text x="320.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.52%)</title><rect x="323" y="276" width="6" height="15" fill="rgb(222,98,9)"/><text x="326.00" y="286.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.52%)</title><rect x="323" y="292" width="6" height="15" fill="rgb(221,82,7)"/><text x="326.00" y="302.50"></text></g><g><title>0x7fc3df83e2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.08%)</title><rect x="311" y="212" width="24" height="15" fill="rgb(210,172,29)"/><text x="314.00" y="222.50">0..</text></g><g><title>0x7fc3df822efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="329" y="228" width="6" height="15" fill="rgb(232,192,41)"/><text x="332.00" y="238.50"></text></g><g><title>0x7fc3df8132b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="329" y="244" width="6" height="15" fill="rgb(239,135,39)"/><text x="332.00" y="254.50"></text></g><g><title>0x7fc3df83e364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="335" y="212" width="6" height="15" fill="rgb(220,16,17)"/><text x="338.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1965) (1 samples, 0.52%)</title><rect x="341" y="228" width="7" height="15" fill="rgb(243,53,21)"/><text x="344.00" y="238.50"></text></g><g><title>PyArray_Zeros (ctors.c:3058) (1 samples, 0.52%)</title><rect x="348" y="260" width="6" height="15" fill="rgb(250,214,17)"/><text x="351.00" y="270.50"></text></g><g><title>0x7fc3df83e592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.56%)</title><rect x="341" y="212" width="19" height="15" fill="rgb(242,199,36)"/><text x="344.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 1.04%)</title><rect x="348" y="228" width="12" height="15" fill="rgb(216,178,49)"/><text x="351.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 1.04%)</title><rect x="348" y="244" width="12" height="15" fill="rgb(209,79,26)"/><text x="351.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.52%)</title><rect x="354" y="260" width="6" height="15" fill="rgb(253,115,28)"/><text x="357.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.52%)</title><rect x="354" y="276" width="6" height="15" fill="rgb(206,4,15)"/><text x="357.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (1 samples, 0.52%)</title><rect x="354" y="292" width="6" height="15" fill="rgb(220,130,41)"/><text x="357.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (1 samples, 0.52%)</title><rect x="354" y="308" width="6" height="15" fill="rgb(222,88,2)"/><text x="357.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.52%)</title><rect x="354" y="324" width="6" height="15" fill="rgb(225,177,19)"/><text x="357.00" y="334.50"></text></g><g><title>0x7fc4051c6700 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="354" y="340" width="6" height="15" fill="rgb(253,100,48)"/><text x="357.00" y="350.50"></text></g><g><title>0x7fc4051c3aa4 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="354" y="356" width="6" height="15" fill="rgb(245,8,47)"/><text x="357.00" y="366.50"></text></g><g><title>0x7fc3df83e69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="360" y="212" width="6" height="15" fill="rgb(237,175,27)"/><text x="363.00" y="222.50"></text></g><g><title>0x7fc3df83e6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.08%)</title><rect x="366" y="212" width="25" height="15" fill="rgb(221,45,50)"/><text x="369.00" y="222.50">0..</text></g><g><title>0x7fc3df83e6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="391" y="212" width="6" height="15" fill="rgb(251,169,45)"/><text x="394.00" y="222.50"></text></g><g><title>0x7fc3df83e6fc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="397" y="212" width="6" height="15" fill="rgb(231,25,21)"/><text x="400.00" y="222.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.52%)</title><rect x="397" y="228" width="6" height="15" fill="rgb(248,135,20)"/><text x="400.00" y="238.50"></text></g><g><title>0x7fc3df83e7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="403" y="212" width="6" height="15" fill="rgb(227,182,27)"/><text x="406.00" y="222.50"></text></g><g><title>0x7fc3df82ffa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 8.85%)</title><rect x="311" y="180" width="104" height="15" fill="rgb(217,151,2)"/><text x="314.00" y="190.50">0x7fc3df82ff..</text></g><g><title>0x7fc3df83f405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 8.85%)</title><rect x="311" y="196" width="104" height="15" fill="rgb(242,188,50)"/><text x="314.00" y="206.50">0x7fc3df83f4..</text></g><g><title>0x7fc3df83ec27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="409" y="212" width="6" height="15" fill="rgb(238,103,2)"/><text x="412.00" y="222.50"></text></g><g><title>0x7fc3df8165f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="409" y="228" width="6" height="15" fill="rgb(235,222,4)"/><text x="412.00" y="238.50"></text></g><g><title>0x7fc3df8162bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="409" y="244" width="6" height="15" fill="rgb(245,32,28)"/><text x="412.00" y="254.50"></text></g><g><title>0x7fc3df815b94 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.52%)</title><rect x="409" y="260" width="6" height="15" fill="rgb(246,192,45)"/><text x="412.00" y="270.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.52%)</title><rect x="415" y="196" width="6" height="15" fill="rgb(251,224,28)"/><text x="418.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.52%)</title><rect x="421" y="212" width="6" height="15" fill="rgb(254,115,40)"/><text x="424.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3949) (1 samples, 0.52%)</title><rect x="421" y="228" width="6" height="15" fill="rgb(237,207,29)"/><text x="424.00" y="238.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:54) (51 samples, 26.56%)</title><rect x="120" y="52" width="314" height="15" fill="rgb(221,26,18)"/><text x="123.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_defa..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:53) (51 samples, 26.56%)</title><rect x="120" y="68" width="314" height="15" fill="rgb(246,115,19)"/><text x="123.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_d..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37) (51 samples, 26.56%)</title><rect x="120" y="84" width="314" height="15" fill="rgb(233,181,53)"/><text x="123.00" y="94.50">setup_profile (bench_DecisionTreeRegressor..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31) (51 samples, 26.56%)</title><rect x="120" y="100" width="314" height="15" fill="rgb(223,117,43)"/><text x="123.00" y="110.50">profile (bench_DecisionTreeRegressor_defau..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 26.04%)</title><rect x="126" y="116" width="308" height="15" fill="rgb(216,95,43)"/><text x="129.00" y="126.50">time_predict (mlprodict/asv_benchmark/com..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (50 samples, 26.04%)</title><rect x="126" y="132" width="308" height="15" fill="rgb(217,55,43)"/><text x="129.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_..</text></g><g><title>predict (sklearn/tree/_classes.py:420) (23 samples, 11.98%)</title><rect x="292" y="148" width="142" height="15" fill="rgb(211,125,12)"/><text x="295.00" y="158.50">predict (sklearn/t..</text></g><g><title>0x7fc3df830d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (23 samples, 11.98%)</title><rect x="292" y="164" width="142" height="15" fill="rgb(210,162,9)"/><text x="295.00" y="174.50">0x7fc3df830d2e (sk..</text></g><g><title>0x7fc3df83005a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.56%)</title><rect x="415" y="180" width="19" height="15" fill="rgb(249,20,13)"/><text x="418.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 1.04%)</title><rect x="421" y="196" width="13" height="15" fill="rgb(254,20,3)"/><text x="424.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.52%)</title><rect x="427" y="212" width="7" height="15" fill="rgb(242,184,10)"/><text x="430.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.52%)</title><rect x="427" y="228" width="7" height="15" fill="rgb(252,153,0)"/><text x="430.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.52%)</title><rect x="427" y="244" width="7" height="15" fill="rgb(232,134,34)"/><text x="430.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.52%)</title><rect x="427" y="260" width="7" height="15" fill="rgb(211,193,51)"/><text x="430.00" y="270.50"></text></g><g><title>0x7fc3c5cdd54f (?) (1 samples, 0.52%)</title><rect x="434" y="244" width="6" height="15" fill="rgb(251,185,29)"/><text x="437.00" y="254.50"></text></g><g><title>0x7fc3c5ce365e (?) (1 samples, 0.52%)</title><rect x="434" y="260" width="6" height="15" fill="rgb(207,208,28)"/><text x="437.00" y="270.50"></text></g><g><title>0x7fc3c5ce350f (?) (1 samples, 0.52%)</title><rect x="434" y="276" width="6" height="15" fill="rgb(216,5,15)"/><text x="437.00" y="286.50"></text></g><g><title>0x7fc3c5ce9d6c (?) (1 samples, 0.52%)</title><rect x="434" y="292" width="6" height="15" fill="rgb(251,102,4)"/><text x="437.00" y="302.50"></text></g><g><title>0x7fc3cf1caab9 (?) (1 samples, 0.52%)</title><rect x="434" y="308" width="6" height="15" fill="rgb(235,38,17)"/><text x="437.00" y="318.50"></text></g><g><title>0x7fc3cf1cbeab (?) (1 samples, 0.52%)</title><rect x="434" y="324" width="6" height="15" fill="rgb(238,221,13)"/><text x="437.00" y="334.50"></text></g><g><title>0x7fc3cf1cbeab (libgomp.so.1.0.0) (5 samples, 2.60%)</title><rect x="440" y="484" width="30" height="15" fill="rgb(228,224,30)"/><text x="443.00" y="494.50">0x..</text></g><g><title>0x7fc3cf1caab9 (libgomp.so.1.0.0) (8 samples, 4.17%)</title><rect x="440" y="468" width="49" height="15" fill="rgb(218,2,42)"/><text x="443.00" y="478.50">0x7f..</text></g><g><title>0x7fc3cf1cbead (libgomp.so.1.0.0) (3 samples, 1.56%)</title><rect x="470" y="484" width="19" height="15" fill="rgb(216,174,14)"/><text x="473.00" y="494.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:61) (10 samples, 5.21%)</title><rect x="434" y="52" width="61" height="15" fill="rgb(206,89,20)"/><text x="437.00" y="62.50">&lt;modul..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:60) (10 samples, 5.21%)</title><rect x="434" y="68" width="61" height="15" fill="rgb(238,156,17)"/><text x="437.00" y="78.50">profil..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37) (10 samples, 5.21%)</title><rect x="434" y="84" width="61" height="15" fill="rgb(247,42,5)"/><text x="437.00" y="94.50">setup_..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31) (10 samples, 5.21%)</title><rect x="434" y="100" width="61" height="15" fill="rgb(254,74,5)"/><text x="437.00" y="110.50">profil..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (10 samples, 5.21%)</title><rect x="434" y="116" width="61" height="15" fill="rgb(247,135,23)"/><text x="437.00" y="126.50">time_p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (10 samples, 5.21%)</title><rect x="434" y="132" width="61" height="15" fill="rgb(238,198,39)"/><text x="437.00" y="142.50">&lt;lambd..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (10 samples, 5.21%)</title><rect x="434" y="148" width="61" height="15" fill="rgb(220,102,38)"/><text x="437.00" y="158.50">run (m..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (10 samples, 5.21%)</title><rect x="434" y="164" width="61" height="15" fill="rgb(211,29,4)"/><text x="437.00" y="174.50">_run_s..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (10 samples, 5.21%)</title><rect x="434" y="180" width="61" height="15" fill="rgb(216,103,17)"/><text x="437.00" y="190.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (10 samples, 5.21%)</title><rect x="434" y="196" width="61" height="15" fill="rgb(239,114,17)"/><text x="437.00" y="206.50">run (m..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (10 samples, 5.21%)</title><rect x="434" y="212" width="61" height="15" fill="rgb(231,164,17)"/><text x="437.00" y="222.50">run (m..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (10 samples, 5.21%)</title><rect x="434" y="228" width="61" height="15" fill="rgb(242,156,14)"/><text x="437.00" y="238.50">_run (..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (9 samples, 4.69%)</title><rect x="440" y="244" width="55" height="15" fill="rgb(215,45,27)"/><text x="443.00" y="254.50">pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (9 samples, 4.69%)</title><rect x="440" y="260" width="55" height="15" fill="rgb(245,35,48)"/><text x="443.00" y="270.50">void ..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (9 samples, 4.69%)</title><rect x="440" y="276" width="55" height="15" fill="rgb(229,146,9)"/><text x="443.00" y="286.50">void ..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (9 samples, 4.69%)</title><rect x="440" y="292" width="55" height="15" fill="rgb(230,102,34)"/><text x="443.00" y="302.50">pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (9 samples, 4.69%)</title><rect x="440" y="308" width="55" height="15" fill="rgb(223,164,19)"/><text x="443.00" y="318.50">pybin..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (9 samples, 4.69%)</title><rect x="440" y="324" width="55" height="15" fill="rgb(249,1,11)"/><text x="443.00" y="334.50">pybin..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (9 samples, 4.69%)</title><rect x="440" y="340" width="55" height="15" fill="rgb(208,69,12)"/><text x="443.00" y="350.50">pybin..</text></g><g><title>pybind11::array::~array (numpy.h:538) (9 samples, 4.69%)</title><rect x="440" y="356" width="55" height="15" fill="rgb(223,42,22)"/><text x="443.00" y="366.50">pybin..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (9 samples, 4.69%)</title><rect x="440" y="372" width="55" height="15" fill="rgb(216,12,42)"/><text x="443.00" y="382.50">pybin..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (9 samples, 4.69%)</title><rect x="440" y="388" width="55" height="15" fill="rgb(231,110,54)"/><text x="443.00" y="398.50">pybin..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (9 samples, 4.69%)</title><rect x="440" y="404" width="55" height="15" fill="rgb(235,187,9)"/><text x="443.00" y="414.50">pybin..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (9 samples, 4.69%)</title><rect x="440" y="420" width="55" height="15" fill="rgb(254,155,54)"/><text x="443.00" y="430.50">Runti..</text></g><g><title>pybind11::array::size (numpy.h:619) (9 samples, 4.69%)</title><rect x="440" y="436" width="55" height="15" fill="rgb(205,205,48)"/><text x="443.00" y="446.50">pybin..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (9 samples, 4.69%)</title><rect x="440" y="452" width="55" height="15" fill="rgb(241,28,2)"/><text x="443.00" y="462.50">std::..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.52%)</title><rect x="489" y="468" width="6" height="15" fill="rgb(211,23,17)"/><text x="492.00" y="478.50"></text></g><g><title>0x7fc3cf1c9daa (libgomp.so.1.0.0) (1 samples, 0.52%)</title><rect x="489" y="484" width="6" height="15" fill="rgb(233,27,8)"/><text x="492.00" y="494.50"></text></g><g><title>0x7fc3cf1cbcfb (libgomp.so.1.0.0) (1 samples, 0.52%)</title><rect x="489" y="500" width="6" height="15" fill="rgb(227,140,31)"/><text x="492.00" y="510.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:607) (1 samples, 0.52%)</title><rect x="495" y="164" width="6" height="15" fill="rgb(208,119,33)"/><text x="498.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 1.04%)</title><rect x="501" y="196" width="12" height="15" fill="rgb(230,184,5)"/><text x="504.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.52%)</title><rect x="507" y="212" width="6" height="15" fill="rgb(205,227,22)"/><text x="510.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="507" y="228" width="6" height="15" fill="rgb(218,40,46)"/><text x="510.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="507" y="244" width="6" height="15" fill="rgb(230,72,16)"/><text x="510.00" y="254.50"></text></g><g><title>onnxruntime::NodeArg::Name[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="507" y="260" width="6" height="15" fill="rgb(232,152,19)"/><text x="510.00" y="270.50"></text></g><g><title>0x7fc3c5282ff9 (?) (1 samples, 0.52%)</title><rect x="513" y="212" width="7" height="15" fill="rgb(233,185,52)"/><text x="516.00" y="222.50"></text></g><g><title>0x7fc3c527def6 (?) (1 samples, 0.52%)</title><rect x="513" y="228" width="7" height="15" fill="rgb(227,72,11)"/><text x="516.00" y="238.50"></text></g><g><title>0x7fc3c5272962 (?) (1 samples, 0.52%)</title><rect x="513" y="244" width="7" height="15" fill="rgb(241,76,20)"/><text x="516.00" y="254.50"></text></g><g><title>0x7fc3c52a67a7 (?) (1 samples, 0.52%)</title><rect x="513" y="260" width="7" height="15" fill="rgb(207,8,16)"/><text x="516.00" y="270.50"></text></g><g><title>0x7fc3c52a6379 (?) (1 samples, 0.52%)</title><rect x="513" y="276" width="7" height="15" fill="rgb(246,120,29)"/><text x="516.00" y="286.50"></text></g><g><title>0x7fc3c57048b8 (?) (1 samples, 0.52%)</title><rect x="513" y="292" width="7" height="15" fill="rgb(249,220,43)"/><text x="516.00" y="302.50"></text></g><g><title>0x7fc3c5702c7f (?) (1 samples, 0.52%)</title><rect x="513" y="308" width="7" height="15" fill="rgb(223,227,19)"/><text x="516.00" y="318.50"></text></g><g><title>0x7fc3c571599c (?) (1 samples, 0.52%)</title><rect x="513" y="324" width="7" height="15" fill="rgb(253,69,1)"/><text x="516.00" y="334.50"></text></g><g><title>0x7fc3c543d30b (?) (1 samples, 0.52%)</title><rect x="513" y="340" width="7" height="15" fill="rgb(212,147,30)"/><text x="516.00" y="350.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.52%)</title><rect x="513" y="356" width="7" height="15" fill="rgb(239,69,43)"/><text x="516.00" y="366.50"></text></g><g><title>0x7fc4051c491c (libc-2.29.so) (1 samples, 0.52%)</title><rect x="556" y="356" width="7" height="15" fill="rgb(219,179,38)"/><text x="559.00" y="366.50"></text></g><g><title>0x7fc4051c4965 (libc-2.29.so) (2 samples, 1.04%)</title><rect x="563" y="356" width="12" height="15" fill="rgb(212,147,20)"/><text x="566.00" y="366.50"></text></g><g><title>0x7fc4051c496a (libc-2.29.so) (1 samples, 0.52%)</title><rect x="575" y="356" width="6" height="15" fill="rgb(219,141,13)"/><text x="578.00" y="366.50"></text></g><g><title>0x7fc4051c497c (libc-2.29.so) (1 samples, 0.52%)</title><rect x="581" y="356" width="6" height="15" fill="rgb(250,204,6)"/><text x="584.00" y="366.50"></text></g><g><title>0x7fc4051c4982 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="587" y="356" width="6" height="15" fill="rgb(216,193,35)"/><text x="590.00" y="366.50"></text></g><g><title>0x7fc4051c4991 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="593" y="356" width="7" height="15" fill="rgb(235,90,16)"/><text x="596.00" y="366.50"></text></g><g><title>0x7fc4051c4a41 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="600" y="356" width="6" height="15" fill="rgb(229,41,25)"/><text x="603.00" y="366.50"></text></g><g><title>0x7fc4051c4a4d (libc-2.29.so) (1 samples, 0.52%)</title><rect x="606" y="356" width="6" height="15" fill="rgb(254,183,28)"/><text x="609.00" y="366.50"></text></g><g><title>0x7fc4051c4a55 (libc-2.29.so) (1 samples, 0.52%)</title><rect x="612" y="356" width="6" height="15" fill="rgb(233,206,46)"/><text x="615.00" y="366.50"></text></g><g><title>0x7fc4051e514a (libc-2.29.so) (2 samples, 1.04%)</title><rect x="618" y="356" width="12" height="15" fill="rgb(223,42,20)"/><text x="621.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="356" width="6" height="15" fill="rgb(208,217,0)"/><text x="633.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="372" width="6" height="15" fill="rgb(217,190,46)"/><text x="633.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="388" width="6" height="15" fill="rgb(207,7,32)"/><text x="633.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="404" width="6" height="15" fill="rgb(235,48,13)"/><text x="633.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="420" width="6" height="15" fill="rgb(248,89,16)"/><text x="633.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="436" width="6" height="15" fill="rgb(209,0,13)"/><text x="633.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="452" width="6" height="15" fill="rgb(231,117,6)"/><text x="633.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="468" width="6" height="15" fill="rgb(219,156,35)"/><text x="633.00" y="478.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="630" y="484" width="6" height="15" fill="rgb(225,84,21)"/><text x="633.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 1.04%)</title><rect x="864" y="388" width="12" height="15" fill="rgb(239,17,22)"/><text x="867.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.52%)</title><rect x="870" y="404" width="6" height="15" fill="rgb(235,201,1)"/><text x="873.00" y="414.50"></text></g><g><title>0x7fc4051e514a (libc-2.29.so) (1 samples, 0.52%)</title><rect x="938" y="420" width="6" height="15" fill="rgb(226,66,33)"/><text x="941.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.65%)</title><rect x="919" y="404" width="43" height="15" fill="rgb(241,141,31)"/><text x="922.00" y="414.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (3 samples, 1.56%)</title><rect x="944" y="420" width="18" height="15" fill="rgb(228,68,6)"/><text x="947.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 1.56%)</title><rect x="944" y="436" width="18" height="15" fill="rgb(240,227,14)"/><text x="947.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (70 samples, 36.46%)</title><rect x="636" y="356" width="431" height="15" fill="rgb(221,94,4)"/><text x="639.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTree..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (37 samples, 19.27%)</title><rect x="839" y="372" width="228" height="15" fill="rgb(231,56,37)"/><text x="842.00" y="382.50">std::_Hashtable&lt;long, std::pai..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 16.15%)</title><rect x="876" y="388" width="191" height="15" fill="rgb(239,191,1)"/><text x="879.00" y="398.50">std::_Hashtable&lt;long, st..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (17 samples, 8.85%)</title><rect x="962" y="404" width="105" height="15" fill="rgb(206,24,0)"/><text x="965.00" y="414.50">std::__detai..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (7 samples, 3.65%)</title><rect x="1024" y="420" width="43" height="15" fill="rgb(215,14,27)"/><text x="1027.00" y="430.50">std:..</text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.56%)</title><rect x="1067" y="356" width="18" height="15" fill="rgb(214,164,15)"/><text x="1070.00" y="366.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 1.04%)</title><rect x="1085" y="356" width="12" height="15" fill="rgb(230,184,2)"/><text x="1088.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.65%)</title><rect x="1097" y="356" width="43" height="15" fill="rgb(221,19,36)"/><text x="1100.00" y="366.50">std:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 55.21%)</title><rect x="520" y="260" width="651" height="15" fill="rgb(225,74,38)"/><text x="523.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 55.21%)</title><rect x="520" y="276" width="651" height="15" fill="rgb(236,144,47)"/><text x="523.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 55.21%)</title><rect x="520" y="292" width="651" height="15" fill="rgb(218,27,50)"/><text x="523.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 55.21%)</title><rect x="520" y="308" width="651" height="15" fill="rgb(219,3,43)"/><text x="523.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 55.21%)</title><rect x="520" y="324" width="651" height="15" fill="rgb(230,222,20)"/><text x="523.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 55.21%)</title><rect x="520" y="340" width="651" height="15" fill="rgb(230,10,1)"/><text x="523.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybi..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.60%)</title><rect x="1140" y="356" width="31" height="15" fill="rgb(222,111,12)"/><text x="1143.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (4 samples, 2.08%)</title><rect x="1146" y="372" width="25" height="15" fill="rgb(228,43,34)"/><text x="1149.00" y="382.50">o..</text></g><g><title>malloc (libc-2.29.so) (3 samples, 1.56%)</title><rect x="1153" y="388" width="18" height="15" fill="rgb(249,166,7)"/><text x="1156.00" y="398.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="1171" y="260" width="6" height="15" fill="rgb(213,48,46)"/><text x="1174.00" y="270.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:68) (112 samples, 58.33%)</title><rect x="495" y="52" width="688" height="15" fill="rgb(231,124,27)"/><text x="498.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:67) (112 samples, 58.33%)</title><rect x="495" y="68" width="688" height="15" fill="rgb(249,27,48)"/><text x="498.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37) (112 samples, 58.33%)</title><rect x="495" y="84" width="688" height="15" fill="rgb(221,79,38)"/><text x="498.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31) (112 samples, 58.33%)</title><rect x="495" y="100" width="688" height="15" fill="rgb(241,107,13)"/><text x="498.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (112 samples, 58.33%)</title><rect x="495" y="116" width="688" height="15" fill="rgb(253,201,21)"/><text x="498.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (112 samples, 58.33%)</title><rect x="495" y="132" width="688" height="15" fill="rgb(209,128,35)"/><text x="498.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (112 samples, 58.33%)</title><rect x="495" y="148" width="688" height="15" fill="rgb(209,130,32)"/><text x="498.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (111 samples, 57.81%)</title><rect x="501" y="164" width="682" height="15" fill="rgb(222,123,12)"/><text x="504.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (111 samples, 57.81%)</title><rect x="501" y="180" width="682" height="15" fill="rgb(228,125,15)"/><text x="504.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (109 samples, 56.77%)</title><rect x="513" y="196" width="670" height="15" fill="rgb(222,48,45)"/><text x="516.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 56.25%)</title><rect x="520" y="212" width="663" height="15" fill="rgb(254,210,25)"/><text x="523.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 56.25%)</title><rect x="520" y="228" width="663" height="15" fill="rgb(232,88,31)"/><text x="523.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::mod..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (108 samples, 56.25%)</title><rect x="520" y="244" width="663" height="15" fill="rgb(245,175,46)"/><text x="523.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSes..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="1177" y="260" width="6" height="15" fill="rgb(230,176,44)"/><text x="1180.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="1177" y="276" width="6" height="15" fill="rgb(244,75,45)"/><text x="1180.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="1177" y="292" width="6" height="15" fill="rgb(213,112,13)"/><text x="1180.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.52%)</title><rect x="1177" y="308" width="6" height="15" fill="rgb(207,103,39)"/><text x="1180.00" y="318.50"></text></g><g><title>all (192 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(225,224,13)"/><text x="13.00" y="46.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.52%)</title><rect x="1183" y="52" width="7" height="15" fill="rgb(208,181,34)"/><text x="1186.00" y="62.50"></text></g></g></svg>