<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1718" onload="init(evt)" viewBox="0 0 1200 1718" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1718" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1701.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1701.00"> </text><g id="frames"><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.17%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(236,190,48)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.17%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(216,167,52)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2030) (1 samples, 0.17%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(212,157,47)"/><text x="13.00" y="958.50"></text></g><g><title>splitext (posixpath.py:129) (1 samples, 0.17%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(223,201,16)"/><text x="13.00" y="974.50"></text></g><g><title>_splitext (genericpath.py:129) (1 samples, 0.17%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(226,163,31)"/><text x="13.00" y="990.50"></text></g><g><title>unicode_rfind (python3.7) (1 samples, 0.17%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(205,160,20)"/><text x="13.00" y="1006.50"></text></g><g><title>0x7f31a17053db (libc-2.29.so) (1 samples, 0.17%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(244,31,24)"/><text x="13.00" y="1022.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.35%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(220,70,22)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.35%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(237,130,27)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.35%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(245,97,32)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.35%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(211,225,53)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.17%)</title><rect x="12" y="916" width="2" height="15" fill="rgb(250,165,1)"/><text x="15.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2126) (1 samples, 0.17%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(239,57,25)"/><text x="15.00" y="942.50"></text></g><g><title>isdir (genericpath.py:42) (1 samples, 0.17%)</title><rect x="12" y="948" width="2" height="15" fill="rgb(206,150,12)"/><text x="15.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="12" y="964" width="2" height="15" fill="rgb(214,81,27)"/><text x="15.00" y="974.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.17%)</title><rect x="12" y="980" width="2" height="15" fill="rgb(246,1,36)"/><text x="15.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.17%)</title><rect x="14" y="852" width="2" height="15" fill="rgb(225,147,38)"/><text x="17.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.17%)</title><rect x="14" y="868" width="2" height="15" fill="rgb(252,65,7)"/><text x="17.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.17%)</title><rect x="14" y="884" width="2" height="15" fill="rgb(225,42,44)"/><text x="17.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.17%)</title><rect x="14" y="900" width="2" height="15" fill="rgb(210,137,4)"/><text x="17.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.17%)</title><rect x="14" y="916" width="2" height="15" fill="rgb(233,108,18)"/><text x="17.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.17%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(214,31,3)"/><text x="17.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.17%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(217,156,16)"/><text x="17.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.17%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(243,203,40)"/><text x="17.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.17%)</title><rect x="14" y="980" width="2" height="15" fill="rgb(220,212,33)"/><text x="17.00" y="990.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.17%)</title><rect x="14" y="996" width="2" height="15" fill="rgb(218,198,42)"/><text x="17.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (4 samples, 0.69%)</title><rect x="10" y="820" width="8" height="15" fill="rgb(236,180,13)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (4 samples, 0.69%)</title><rect x="10" y="836" width="8" height="15" fill="rgb(218,202,23)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.17%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(253,122,2)"/><text x="19.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.17%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(246,121,40)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.17%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(248,202,35)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.17%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(240,133,54)"/><text x="19.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.17%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(240,164,3)"/><text x="19.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.17%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(237,200,47)"/><text x="19.00" y="942.50"></text></g><g><title>safe_name (pkg_resources/__init__.py:1322) (1 samples, 0.17%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(225,42,53)"/><text x="19.00" y="958.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.17%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(217,27,7)"/><text x="19.00" y="974.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.17%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(239,106,11)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (5 samples, 0.87%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(254,80,5)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="164" width="10" height="15" fill="rgb(206,103,12)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.87%)</title><rect x="10" y="180" width="10" height="15" fill="rgb(239,206,40)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(224,116,13)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(212,179,8)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.87%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(245,74,45)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.87%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(245,24,47)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.87%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(225,142,34)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(247,59,38)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 0.87%)</title><rect x="10" y="292" width="10" height="15" fill="rgb(234,91,14)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="308" width="10" height="15" fill="rgb(210,18,3)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.87%)</title><rect x="10" y="324" width="10" height="15" fill="rgb(217,32,33)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.87%)</title><rect x="10" y="340" width="10" height="15" fill="rgb(222,217,21)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.87%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(234,70,48)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(252,135,39)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 0.87%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(212,107,4)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(208,173,51)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.87%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(253,192,54)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.87%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(209,191,40)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.87%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(237,84,46)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(222,8,3)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 0.87%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(251,171,17)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(229,52,25)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.87%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(232,77,5)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.87%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(206,105,38)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.87%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(229,143,46)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(243,150,18)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 0.87%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(213,129,28)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(221,3,46)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 0.87%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(228,96,37)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(246,13,44)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(235,157,16)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.87%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(253,127,19)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.87%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(223,93,25)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.87%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(250,197,18)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(211,136,24)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 0.87%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(244,181,9)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 0.87%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(238,146,44)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 0.87%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(245,131,36)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 0.87%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(212,57,41)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 0.87%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(237,0,28)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 0.87%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(212,185,6)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:83) (1 samples, 0.17%)</title><rect x="18" y="820" width="2" height="15" fill="rgb(248,168,23)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="18" y="836" width="2" height="15" fill="rgb(239,11,49)"/><text x="21.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="18" y="852" width="2" height="15" fill="rgb(233,52,51)"/><text x="21.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="18" y="868" width="2" height="15" fill="rgb(252,149,22)"/><text x="21.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="18" y="884" width="2" height="15" fill="rgb(247,7,33)"/><text x="21.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="18" y="900" width="2" height="15" fill="rgb(240,137,13)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py:275) (1 samples, 0.17%)</title><rect x="18" y="916" width="2" height="15" fill="rgb(233,108,1)"/><text x="21.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py:373) (1 samples, 0.17%)</title><rect x="18" y="932" width="2" height="15" fill="rgb(209,101,33)"/><text x="21.00" y="942.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.17%)</title><rect x="18" y="948" width="2" height="15" fill="rgb(218,133,29)"/><text x="21.00" y="958.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.17%)</title><rect x="18" y="964" width="2" height="15" fill="rgb(244,108,7)"/><text x="21.00" y="974.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.17%)</title><rect x="18" y="980" width="2" height="15" fill="rgb(224,133,36)"/><text x="21.00" y="990.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.17%)</title><rect x="18" y="996" width="2" height="15" fill="rgb(207,27,14)"/><text x="21.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="18" y="1012" width="2" height="15" fill="rgb(219,79,31)"/><text x="21.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.17%)</title><rect x="18" y="1028" width="2" height="15" fill="rgb(222,136,54)"/><text x="21.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="18" y="1044" width="2" height="15" fill="rgb(235,23,23)"/><text x="21.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.17%)</title><rect x="18" y="1060" width="2" height="15" fill="rgb(252,191,2)"/><text x="21.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="18" y="1076" width="2" height="15" fill="rgb(250,139,0)"/><text x="21.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.17%)</title><rect x="18" y="1092" width="2" height="15" fill="rgb(211,174,54)"/><text x="21.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="18" y="1108" width="2" height="15" fill="rgb(230,111,28)"/><text x="21.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.17%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(241,131,51)"/><text x="21.00" y="1134.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.17%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(210,226,36)"/><text x="21.00" y="1150.50"></text></g><g><title>_parse (sre_parse.py:529) (1 samples, 0.17%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(245,56,43)"/><text x="21.00" y="1166.50"></text></g><g><title>get (sre_parse.py:256) (1 samples, 0.17%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(210,92,37)"/><text x="21.00" y="1182.50"></text></g><g><title>__next (sre_parse.py:247) (1 samples, 0.17%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(227,153,51)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (1 samples, 0.17%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(247,228,28)"/><text x="23.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(248,105,2)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(210,23,18)"/><text x="23.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(238,57,9)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="548" width="2" height="15" fill="rgb(226,135,45)"/><text x="23.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="564" width="2" height="15" fill="rgb(247,104,0)"/><text x="23.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="580" width="2" height="15" fill="rgb(250,188,33)"/><text x="23.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="596" width="2" height="15" fill="rgb(213,122,37)"/><text x="23.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (1 samples, 0.17%)</title><rect x="20" y="612" width="2" height="15" fill="rgb(235,53,15)"/><text x="23.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="628" width="2" height="15" fill="rgb(222,126,2)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="644" width="2" height="15" fill="rgb(226,114,40)"/><text x="23.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="660" width="2" height="15" fill="rgb(247,116,21)"/><text x="23.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="676" width="2" height="15" fill="rgb(210,196,19)"/><text x="23.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="692" width="2" height="15" fill="rgb(243,79,17)"/><text x="23.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (1 samples, 0.17%)</title><rect x="20" y="708" width="2" height="15" fill="rgb(208,217,52)"/><text x="23.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="724" width="2" height="15" fill="rgb(225,16,23)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="740" width="2" height="15" fill="rgb(244,140,24)"/><text x="23.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="756" width="2" height="15" fill="rgb(210,228,37)"/><text x="23.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="772" width="2" height="15" fill="rgb(224,63,18)"/><text x="23.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="788" width="2" height="15" fill="rgb(210,13,27)"/><text x="23.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (1 samples, 0.17%)</title><rect x="20" y="804" width="2" height="15" fill="rgb(251,74,2)"/><text x="23.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="820" width="2" height="15" fill="rgb(206,28,37)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="836" width="2" height="15" fill="rgb(252,106,7)"/><text x="23.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="852" width="2" height="15" fill="rgb(217,161,31)"/><text x="23.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="868" width="2" height="15" fill="rgb(221,126,13)"/><text x="23.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="884" width="2" height="15" fill="rgb(207,138,43)"/><text x="23.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (1 samples, 0.17%)</title><rect x="20" y="900" width="2" height="15" fill="rgb(218,195,41)"/><text x="23.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="916" width="2" height="15" fill="rgb(209,26,52)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(223,122,42)"/><text x="23.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(233,199,30)"/><text x="23.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(251,175,28)"/><text x="23.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(228,2,33)"/><text x="23.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (1 samples, 0.17%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(222,140,45)"/><text x="23.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(214,45,29)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="20" y="1028" width="2" height="15" fill="rgb(219,150,40)"/><text x="23.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1044" width="2" height="15" fill="rgb(243,171,9)"/><text x="23.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1060" width="2" height="15" fill="rgb(223,71,27)"/><text x="23.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="1076" width="2" height="15" fill="rgb(244,181,23)"/><text x="23.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="1092" width="2" height="15" fill="rgb(242,110,30)"/><text x="23.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="1108" width="2" height="15" fill="rgb(212,189,50)"/><text x="23.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1124" width="2" height="15" fill="rgb(215,20,50)"/><text x="23.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.17%)</title><rect x="20" y="1140" width="2" height="15" fill="rgb(207,216,2)"/><text x="23.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1156" width="2" height="15" fill="rgb(222,175,38)"/><text x="23.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="1172" width="2" height="15" fill="rgb(237,1,44)"/><text x="23.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="1188" width="2" height="15" fill="rgb(238,163,0)"/><text x="23.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="1204" width="2" height="15" fill="rgb(240,10,13)"/><text x="23.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1220" width="2" height="15" fill="rgb(235,229,17)"/><text x="23.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.17%)</title><rect x="20" y="1236" width="2" height="15" fill="rgb(206,197,4)"/><text x="23.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1252" width="2" height="15" fill="rgb(227,174,47)"/><text x="23.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="1268" width="2" height="15" fill="rgb(210,225,19)"/><text x="23.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="1284" width="2" height="15" fill="rgb(236,195,18)"/><text x="23.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="1300" width="2" height="15" fill="rgb(218,144,40)"/><text x="23.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1316" width="2" height="15" fill="rgb(213,100,9)"/><text x="23.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.17%)</title><rect x="20" y="1332" width="2" height="15" fill="rgb(252,80,44)"/><text x="23.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1348" width="2" height="15" fill="rgb(208,183,32)"/><text x="23.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="1364" width="2" height="15" fill="rgb(253,193,13)"/><text x="23.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="1380" width="2" height="15" fill="rgb(244,219,50)"/><text x="23.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="1396" width="2" height="15" fill="rgb(250,48,47)"/><text x="23.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1412" width="2" height="15" fill="rgb(213,183,13)"/><text x="23.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.17%)</title><rect x="20" y="1428" width="2" height="15" fill="rgb(205,172,32)"/><text x="23.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1444" width="2" height="15" fill="rgb(216,173,43)"/><text x="23.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="1460" width="2" height="15" fill="rgb(226,197,26)"/><text x="23.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="1476" width="2" height="15" fill="rgb(228,159,48)"/><text x="23.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="1492" width="2" height="15" fill="rgb(221,45,19)"/><text x="23.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1508" width="2" height="15" fill="rgb(252,112,52)"/><text x="23.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:96) (1 samples, 0.17%)</title><rect x="20" y="1524" width="2" height="15" fill="rgb(209,199,51)"/><text x="23.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="20" y="1540" width="2" height="15" fill="rgb(247,113,25)"/><text x="23.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1556" width="2" height="15" fill="rgb(251,151,42)"/><text x="23.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="20" y="1572" width="2" height="15" fill="rgb(214,162,10)"/><text x="23.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="20" y="1588" width="2" height="15" fill="rgb(214,48,29)"/><text x="23.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="20" y="1604" width="2" height="15" fill="rgb(239,189,8)"/><text x="23.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="20" y="1620" width="2" height="15" fill="rgb(243,130,10)"/><text x="23.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="20" y="1636" width="2" height="15" fill="rgb(252,179,4)"/><text x="23.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_pslinux.py:202) (1 samples, 0.17%)</title><rect x="20" y="1652" width="2" height="15" fill="rgb(214,197,23)"/><text x="23.00" y="1662.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.17%)</title><rect x="20" y="1668" width="2" height="15" fill="rgb(248,125,12)"/><text x="23.00" y="1678.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:4) (2 samples, 0.35%)</title><rect x="20" y="148" width="4" height="15" fill="rgb(253,212,22)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="20" y="164" width="4" height="15" fill="rgb(217,225,16)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.35%)</title><rect x="20" y="180" width="4" height="15" fill="rgb(250,25,40)"/><text x="23.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="20" y="196" width="4" height="15" fill="rgb(248,164,45)"/><text x="23.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="20" y="212" width="4" height="15" fill="rgb(230,137,10)"/><text x="23.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="20" y="228" width="4" height="15" fill="rgb(217,180,18)"/><text x="23.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="20" y="244" width="4" height="15" fill="rgb(251,220,24)"/><text x="23.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="20" y="260" width="4" height="15" fill="rgb(234,79,15)"/><text x="23.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="20" y="276" width="4" height="15" fill="rgb(215,80,53)"/><text x="23.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.35%)</title><rect x="20" y="292" width="4" height="15" fill="rgb(232,53,48)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="20" y="308" width="4" height="15" fill="rgb(212,199,52)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="20" y="324" width="4" height="15" fill="rgb(209,53,30)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="20" y="340" width="4" height="15" fill="rgb(232,115,29)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="20" y="356" width="4" height="15" fill="rgb(221,53,1)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="20" y="372" width="4" height="15" fill="rgb(224,75,25)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.35%)</title><rect x="20" y="388" width="4" height="15" fill="rgb(254,96,26)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="20" y="404" width="4" height="15" fill="rgb(212,36,17)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="20" y="420" width="4" height="15" fill="rgb(231,193,52)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="20" y="436" width="4" height="15" fill="rgb(250,46,27)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="20" y="452" width="4" height="15" fill="rgb(250,205,14)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="20" y="468" width="4" height="15" fill="rgb(207,68,48)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.17%)</title><rect x="22" y="484" width="2" height="15" fill="rgb(213,225,0)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="22" y="500" width="2" height="15" fill="rgb(232,229,33)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="22" y="516" width="2" height="15" fill="rgb(222,42,23)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="22" y="532" width="2" height="15" fill="rgb(247,173,31)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="22" y="548" width="2" height="15" fill="rgb(236,14,30)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="564" width="2" height="15" fill="rgb(251,120,43)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.17%)</title><rect x="22" y="580" width="2" height="15" fill="rgb(206,122,24)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="22" y="596" width="2" height="15" fill="rgb(237,122,11)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="22" y="612" width="2" height="15" fill="rgb(236,114,0)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="22" y="628" width="2" height="15" fill="rgb(224,128,14)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="22" y="644" width="2" height="15" fill="rgb(225,160,32)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="660" width="2" height="15" fill="rgb(210,40,33)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.17%)</title><rect x="22" y="676" width="2" height="15" fill="rgb(239,209,47)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="22" y="692" width="2" height="15" fill="rgb(221,210,12)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="22" y="708" width="2" height="15" fill="rgb(230,13,2)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="22" y="724" width="2" height="15" fill="rgb(247,56,1)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="22" y="740" width="2" height="15" fill="rgb(243,139,16)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="756" width="2" height="15" fill="rgb(225,115,0)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (1 samples, 0.17%)</title><rect x="22" y="772" width="2" height="15" fill="rgb(232,25,19)"/><text x="25.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="22" y="788" width="2" height="15" fill="rgb(242,58,25)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="804" width="2" height="15" fill="rgb(240,127,12)"/><text x="25.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="22" y="820" width="2" height="15" fill="rgb(249,191,29)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="22" y="836" width="2" height="15" fill="rgb(242,141,24)"/><text x="25.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="22" y="852" width="2" height="15" fill="rgb(213,64,12)"/><text x="25.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="22" y="868" width="2" height="15" fill="rgb(246,166,48)"/><text x="25.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="884" width="2" height="15" fill="rgb(236,106,18)"/><text x="25.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.17%)</title><rect x="22" y="900" width="2" height="15" fill="rgb(223,218,11)"/><text x="25.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.17%)</title><rect x="22" y="916" width="2" height="15" fill="rgb(234,24,54)"/><text x="25.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="932" width="2" height="15" fill="rgb(238,136,5)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="22" y="948" width="2" height="15" fill="rgb(221,200,7)"/><text x="25.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="22" y="964" width="2" height="15" fill="rgb(254,105,12)"/><text x="25.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="22" y="980" width="2" height="15" fill="rgb(218,139,32)"/><text x="25.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="22" y="996" width="2" height="15" fill="rgb(251,52,7)"/><text x="25.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="22" y="1012" width="2" height="15" fill="rgb(205,20,8)"/><text x="25.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:5134) (1 samples, 0.17%)</title><rect x="22" y="1028" width="2" height="15" fill="rgb(214,229,54)"/><text x="25.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1615) (1 samples, 0.17%)</title><rect x="22" y="1044" width="2" height="15" fill="rgb(254,219,4)"/><text x="25.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py:711) (1 samples, 0.17%)</title><rect x="22" y="1060" width="2" height="15" fill="rgb(244,50,45)"/><text x="25.00" y="1070.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.17%)</title><rect x="24" y="244" width="2" height="15" fill="rgb(251,172,31)"/><text x="27.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="260" width="2" height="15" fill="rgb(214,32,17)"/><text x="27.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="276" width="2" height="15" fill="rgb(210,223,8)"/><text x="27.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="292" width="2" height="15" fill="rgb(234,43,22)"/><text x="27.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="308" width="2" height="15" fill="rgb(241,87,17)"/><text x="27.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="324" width="2" height="15" fill="rgb(250,221,46)"/><text x="27.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.17%)</title><rect x="24" y="340" width="2" height="15" fill="rgb(252,222,33)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="356" width="2" height="15" fill="rgb(217,229,19)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="24" y="372" width="2" height="15" fill="rgb(238,79,3)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="388" width="2" height="15" fill="rgb(247,135,39)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="404" width="2" height="15" fill="rgb(233,115,46)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="420" width="2" height="15" fill="rgb(222,223,48)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="436" width="2" height="15" fill="rgb(212,30,52)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="452" width="2" height="15" fill="rgb(211,23,49)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="468" width="2" height="15" fill="rgb(213,227,49)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.17%)</title><rect x="24" y="484" width="2" height="15" fill="rgb(254,215,31)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="500" width="2" height="15" fill="rgb(237,103,30)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="516" width="2" height="15" fill="rgb(207,142,26)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="532" width="2" height="15" fill="rgb(238,102,54)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="548" width="2" height="15" fill="rgb(230,61,9)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="564" width="2" height="15" fill="rgb(229,186,48)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.17%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(253,225,2)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(240,224,10)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(229,92,50)"/><text x="27.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(210,125,29)"/><text x="27.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(226,11,0)"/><text x="27.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(254,62,23)"/><text x="27.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(246,26,28)"/><text x="27.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(211,202,51)"/><text x="27.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(221,97,47)"/><text x="27.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.17%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(209,190,10)"/><text x="27.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(226,95,52)"/><text x="27.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(206,165,34)"/><text x="27.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(223,44,20)"/><text x="27.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(220,85,25)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(238,134,0)"/><text x="27.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.17%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(252,38,27)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(238,194,33)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(235,62,3)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(223,97,6)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(213,221,39)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(236,24,22)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.17%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(213,72,4)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(241,102,12)"/><text x="27.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.17%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(205,36,51)"/><text x="27.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(245,177,48)"/><text x="27.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(225,9,37)"/><text x="27.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(223,30,48)"/><text x="27.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(235,214,52)"/><text x="27.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.17%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(225,151,33)"/><text x="27.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.17%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(240,60,1)"/><text x="27.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.17%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(237,206,34)"/><text x="27.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.17%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(226,15,15)"/><text x="27.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.17%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(249,42,41)"/><text x="27.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.17%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(238,74,0)"/><text x="27.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.17%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(254,75,37)"/><text x="27.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.17%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(234,39,44)"/><text x="27.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.17%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(233,223,42)"/><text x="27.00" y="1166.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (1 samples, 0.17%)</title><rect x="26" y="1492" width="2" height="15" fill="rgb(206,63,36)"/><text x="29.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (1 samples, 0.17%)</title><rect x="26" y="1508" width="2" height="15" fill="rgb(209,155,39)"/><text x="29.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (1 samples, 0.17%)</title><rect x="26" y="1524" width="2" height="15" fill="rgb(226,90,9)"/><text x="29.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (1 samples, 0.17%)</title><rect x="26" y="1540" width="2" height="15" fill="rgb(214,55,8)"/><text x="29.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.17%)</title><rect x="26" y="1556" width="2" height="15" fill="rgb(230,124,22)"/><text x="29.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:67) (1 samples, 0.17%)</title><rect x="26" y="1572" width="2" height="15" fill="rgb(250,20,34)"/><text x="29.00" y="1582.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:4) (10 samples, 1.73%)</title><rect x="10" y="52" width="20" height="15" fill="rgb(251,209,47)"/><text x="13.00" y="62.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 1.73%)</title><rect x="10" y="68" width="20" height="15" fill="rgb(231,201,28)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 1.73%)</title><rect x="10" y="84" width="20" height="15" fill="rgb(230,9,2)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 1.73%)</title><rect x="10" y="100" width="20" height="15" fill="rgb(221,46,8)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 1.73%)</title><rect x="10" y="116" width="20" height="15" fill="rgb(220,132,7)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 1.73%)</title><rect x="10" y="132" width="20" height="15" fill="rgb(236,110,3)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (3 samples, 0.52%)</title><rect x="24" y="148" width="6" height="15" fill="rgb(236,127,7)"/><text x="27.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.52%)</title><rect x="24" y="164" width="6" height="15" fill="rgb(222,17,11)"/><text x="27.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.52%)</title><rect x="24" y="180" width="6" height="15" fill="rgb(235,56,16)"/><text x="27.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.52%)</title><rect x="24" y="196" width="6" height="15" fill="rgb(230,101,47)"/><text x="27.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.52%)</title><rect x="24" y="212" width="6" height="15" fill="rgb(218,21,28)"/><text x="27.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.52%)</title><rect x="24" y="228" width="6" height="15" fill="rgb(220,57,39)"/><text x="27.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (2 samples, 0.35%)</title><rect x="26" y="244" width="4" height="15" fill="rgb(226,79,30)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="260" width="4" height="15" fill="rgb(221,175,28)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="276" width="4" height="15" fill="rgb(219,187,10)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="292" width="4" height="15" fill="rgb(246,16,8)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="308" width="4" height="15" fill="rgb(239,148,31)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="324" width="4" height="15" fill="rgb(218,188,34)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (2 samples, 0.35%)</title><rect x="26" y="340" width="4" height="15" fill="rgb(252,217,3)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="356" width="4" height="15" fill="rgb(216,194,23)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="372" width="4" height="15" fill="rgb(221,16,2)"/><text x="29.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="388" width="4" height="15" fill="rgb(215,153,33)"/><text x="29.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="404" width="4" height="15" fill="rgb(222,90,52)"/><text x="29.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="420" width="4" height="15" fill="rgb(231,183,1)"/><text x="29.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.35%)</title><rect x="26" y="436" width="4" height="15" fill="rgb(205,70,54)"/><text x="29.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="452" width="4" height="15" fill="rgb(226,226,46)"/><text x="29.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.35%)</title><rect x="26" y="468" width="4" height="15" fill="rgb(238,17,35)"/><text x="29.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="484" width="4" height="15" fill="rgb(223,193,13)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="500" width="4" height="15" fill="rgb(249,9,9)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="516" width="4" height="15" fill="rgb(252,8,14)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="532" width="4" height="15" fill="rgb(213,117,27)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="548" width="4" height="15" fill="rgb(249,208,45)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="564" width="4" height="15" fill="rgb(226,111,19)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.35%)</title><rect x="26" y="580" width="4" height="15" fill="rgb(205,70,34)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="596" width="4" height="15" fill="rgb(241,200,11)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="612" width="4" height="15" fill="rgb(254,106,18)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="628" width="4" height="15" fill="rgb(216,210,2)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="644" width="4" height="15" fill="rgb(233,161,17)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="660" width="4" height="15" fill="rgb(234,135,33)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.35%)</title><rect x="26" y="676" width="4" height="15" fill="rgb(213,31,49)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="692" width="4" height="15" fill="rgb(251,100,22)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="708" width="4" height="15" fill="rgb(226,14,54)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="724" width="4" height="15" fill="rgb(234,154,21)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="740" width="4" height="15" fill="rgb(247,68,52)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="756" width="4" height="15" fill="rgb(232,65,10)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 0.35%)</title><rect x="26" y="772" width="4" height="15" fill="rgb(251,11,8)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="788" width="4" height="15" fill="rgb(248,147,0)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="804" width="4" height="15" fill="rgb(247,55,40)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="820" width="4" height="15" fill="rgb(216,26,50)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="836" width="4" height="15" fill="rgb(209,166,10)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="852" width="4" height="15" fill="rgb(230,156,2)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 0.35%)</title><rect x="26" y="868" width="4" height="15" fill="rgb(211,23,18)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="884" width="4" height="15" fill="rgb(225,113,38)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.35%)</title><rect x="26" y="900" width="4" height="15" fill="rgb(209,144,33)"/><text x="29.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="916" width="4" height="15" fill="rgb(242,163,43)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="932" width="4" height="15" fill="rgb(211,35,4)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="948" width="4" height="15" fill="rgb(247,132,44)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="964" width="4" height="15" fill="rgb(222,47,20)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="980" width="4" height="15" fill="rgb(229,200,10)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="996" width="4" height="15" fill="rgb(242,107,21)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 0.35%)</title><rect x="26" y="1012" width="4" height="15" fill="rgb(244,172,47)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="1028" width="4" height="15" fill="rgb(253,107,31)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="1044" width="4" height="15" fill="rgb(251,46,23)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="1060" width="4" height="15" fill="rgb(215,25,42)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="1076" width="4" height="15" fill="rgb(244,33,29)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="1092" width="4" height="15" fill="rgb(221,201,29)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.35%)</title><rect x="26" y="1108" width="4" height="15" fill="rgb(253,49,6)"/><text x="29.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.35%)</title><rect x="26" y="1124" width="4" height="15" fill="rgb(248,181,3)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="1140" width="4" height="15" fill="rgb(248,75,6)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="1156" width="4" height="15" fill="rgb(207,205,53)"/><text x="29.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="1172" width="4" height="15" fill="rgb(231,223,1)"/><text x="29.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="1188" width="4" height="15" fill="rgb(206,121,54)"/><text x="29.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="1204" width="4" height="15" fill="rgb(239,145,21)"/><text x="29.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="1220" width="4" height="15" fill="rgb(241,78,43)"/><text x="29.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.35%)</title><rect x="26" y="1236" width="4" height="15" fill="rgb(245,68,8)"/><text x="29.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.35%)</title><rect x="26" y="1252" width="4" height="15" fill="rgb(223,139,35)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="1268" width="4" height="15" fill="rgb(236,62,1)"/><text x="29.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="1284" width="4" height="15" fill="rgb(207,48,18)"/><text x="29.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="1300" width="4" height="15" fill="rgb(234,158,24)"/><text x="29.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="1316" width="4" height="15" fill="rgb(218,45,50)"/><text x="29.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="1332" width="4" height="15" fill="rgb(214,108,27)"/><text x="29.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="1348" width="4" height="15" fill="rgb(238,223,44)"/><text x="29.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.35%)</title><rect x="26" y="1364" width="4" height="15" fill="rgb(236,199,20)"/><text x="29.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.35%)</title><rect x="26" y="1380" width="4" height="15" fill="rgb(213,33,0)"/><text x="29.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.35%)</title><rect x="26" y="1396" width="4" height="15" fill="rgb(208,119,30)"/><text x="29.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.35%)</title><rect x="26" y="1412" width="4" height="15" fill="rgb(252,229,52)"/><text x="29.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.35%)</title><rect x="26" y="1428" width="4" height="15" fill="rgb(254,96,17)"/><text x="29.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.35%)</title><rect x="26" y="1444" width="4" height="15" fill="rgb(226,182,42)"/><text x="29.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.35%)</title><rect x="26" y="1460" width="4" height="15" fill="rgb(245,37,18)"/><text x="29.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.35%)</title><rect x="26" y="1476" width="4" height="15" fill="rgb(221,157,47)"/><text x="29.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:134) (1 samples, 0.17%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(226,64,7)"/><text x="31.00" y="1502.50"></text></g><g><title>ClassFactory (skl2onnx/algebra/onnx_ops.py:82) (1 samples, 0.17%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(229,133,42)"/><text x="31.00" y="1518.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="30" y="116" width="2" height="15" fill="rgb(210,164,51)"/><text x="33.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="30" y="132" width="2" height="15" fill="rgb(248,57,53)"/><text x="33.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.17%)</title><rect x="30" y="148" width="2" height="15" fill="rgb(253,190,22)"/><text x="33.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="36" y="148" width="2" height="15" fill="rgb(239,2,19)"/><text x="39.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="36" y="164" width="2" height="15" fill="rgb(225,121,54)"/><text x="39.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.17%)</title><rect x="36" y="180" width="2" height="15" fill="rgb(222,38,47)"/><text x="39.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.17%)</title><rect x="38" y="164" width="2" height="15" fill="rgb(209,63,40)"/><text x="41.00" y="174.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.69%)</title><rect x="50" y="196" width="9" height="15" fill="rgb(234,19,21)"/><text x="53.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (13 samples, 2.25%)</title><rect x="38" y="148" width="27" height="15" fill="rgb(211,61,43)"/><text x="41.00" y="158.50">p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (12 samples, 2.08%)</title><rect x="40" y="164" width="25" height="15" fill="rgb(208,88,48)"/><text x="43.00" y="174.50">c..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 1.91%)</title><rect x="42" y="180" width="23" height="15" fill="rgb(249,211,6)"/><text x="45.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.52%)</title><rect x="59" y="196" width="6" height="15" fill="rgb(251,93,4)"/><text x="62.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (1 samples, 0.17%)</title><rect x="67" y="180" width="2" height="15" fill="rgb(212,7,18)"/><text x="70.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.17%)</title><rect x="69" y="180" width="2" height="15" fill="rgb(212,199,17)"/><text x="72.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.17%)</title><rect x="71" y="180" width="2" height="15" fill="rgb(222,190,33)"/><text x="74.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:477) (1 samples, 0.17%)</title><rect x="75" y="196" width="2" height="15" fill="rgb(240,113,38)"/><text x="78.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.17%)</title><rect x="77" y="196" width="2" height="15" fill="rgb(251,67,51)"/><text x="80.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 0.69%)</title><rect x="73" y="180" width="8" height="15" fill="rgb(228,144,0)"/><text x="76.00" y="190.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.17%)</title><rect x="79" y="196" width="2" height="15" fill="rgb(215,81,12)"/><text x="82.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (2 samples, 0.35%)</title><rect x="83" y="212" width="4" height="15" fill="rgb(226,229,51)"/><text x="86.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 0.69%)</title><rect x="81" y="180" width="8" height="15" fill="rgb(210,52,50)"/><text x="84.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (3 samples, 0.52%)</title><rect x="83" y="196" width="6" height="15" fill="rgb(241,214,12)"/><text x="86.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.17%)</title><rect x="87" y="212" width="2" height="15" fill="rgb(220,76,34)"/><text x="90.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.17%)</title><rect x="89" y="180" width="2" height="15" fill="rgb(211,46,32)"/><text x="92.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.17%)</title><rect x="89" y="196" width="2" height="15" fill="rgb(245,92,18)"/><text x="92.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.17%)</title><rect x="89" y="212" width="2" height="15" fill="rgb(221,141,0)"/><text x="92.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:432) (1 samples, 0.17%)</title><rect x="89" y="228" width="2" height="15" fill="rgb(207,10,45)"/><text x="92.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.17%)</title><rect x="91" y="212" width="2" height="15" fill="rgb(246,210,24)"/><text x="94.00" y="222.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.17%)</title><rect x="93" y="212" width="2" height="15" fill="rgb(239,4,44)"/><text x="96.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.52%)</title><rect x="91" y="180" width="6" height="15" fill="rgb(213,140,50)"/><text x="94.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (3 samples, 0.52%)</title><rect x="91" y="196" width="6" height="15" fill="rgb(254,153,7)"/><text x="94.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1697) (1 samples, 0.17%)</title><rect x="95" y="212" width="2" height="15" fill="rgb(220,197,19)"/><text x="98.00" y="222.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.17%)</title><rect x="95" y="228" width="2" height="15" fill="rgb(212,137,2)"/><text x="98.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:494) (1 samples, 0.17%)</title><rect x="102" y="196" width="2" height="15" fill="rgb(211,1,45)"/><text x="105.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (4 samples, 0.69%)</title><rect x="97" y="180" width="9" height="15" fill="rgb(250,206,15)"/><text x="100.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.17%)</title><rect x="104" y="196" width="2" height="15" fill="rgb(216,213,11)"/><text x="107.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.17%)</title><rect x="106" y="180" width="2" height="15" fill="rgb(249,159,10)"/><text x="109.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.17%)</title><rect x="106" y="196" width="2" height="15" fill="rgb(241,82,34)"/><text x="109.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (1 samples, 0.17%)</title><rect x="108" y="180" width="2" height="15" fill="rgb(249,27,21)"/><text x="111.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (6 samples, 1.04%)</title><rect x="110" y="180" width="12" height="15" fill="rgb(243,2,15)"/><text x="113.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (5 samples, 0.87%)</title><rect x="112" y="196" width="10" height="15" fill="rgb(233,128,26)"/><text x="115.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 0.69%)</title><rect x="114" y="212" width="8" height="15" fill="rgb(215,193,35)"/><text x="117.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 0.69%)</title><rect x="122" y="196" width="8" height="15" fill="rgb(249,24,25)"/><text x="125.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.17%)</title><rect x="128" y="212" width="2" height="15" fill="rgb(230,222,14)"/><text x="131.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.17%)</title><rect x="130" y="212" width="2" height="15" fill="rgb(238,134,1)"/><text x="133.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (3 samples, 0.52%)</title><rect x="130" y="196" width="6" height="15" fill="rgb(223,191,28)"/><text x="133.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (2 samples, 0.35%)</title><rect x="132" y="212" width="4" height="15" fill="rgb(219,218,45)"/><text x="135.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 2.08%)</title><rect x="122" y="180" width="25" height="15" fill="rgb(224,195,48)"/><text x="125.00" y="190.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 0.87%)</title><rect x="136" y="196" width="11" height="15" fill="rgb(231,7,22)"/><text x="139.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 0.69%)</title><rect x="138" y="212" width="9" height="15" fill="rgb(249,148,16)"/><text x="141.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (41 samples, 7.11%)</title><rect x="65" y="164" width="84" height="15" fill="rgb(209,58,26)"/><text x="68.00" y="174.50">_validate..</text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.17%)</title><rect x="147" y="180" width="2" height="15" fill="rgb(224,50,14)"/><text x="150.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (42 samples, 7.28%)</title><rect x="65" y="148" width="86" height="15" fill="rgb(254,178,2)"/><text x="68.00" y="158.50">predict (s..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (1 samples, 0.17%)</title><rect x="149" y="164" width="2" height="15" fill="rgb(213,6,22)"/><text x="152.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.17%)</title><rect x="149" y="180" width="2" height="15" fill="rgb(225,68,30)"/><text x="152.00" y="190.50"></text></g><g><title>0x7f31a170a120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="149" y="196" width="2" height="15" fill="rgb(207,8,17)"/><text x="152.00" y="206.50"></text></g><g><title>0x7f317bd55d2e (?) (1 samples, 0.17%)</title><rect x="151" y="164" width="2" height="15" fill="rgb(254,104,22)"/><text x="154.00" y="174.50"></text></g><g><title>0x7f317bd54fa6 (?) (1 samples, 0.17%)</title><rect x="151" y="180" width="2" height="15" fill="rgb(214,126,8)"/><text x="154.00" y="190.50"></text></g><g><title>0x7f317bd64405 (?) (1 samples, 0.17%)</title><rect x="151" y="196" width="2" height="15" fill="rgb(247,64,28)"/><text x="154.00" y="206.50"></text></g><g><title>0x7f317bd636b1 (?) (1 samples, 0.17%)</title><rect x="151" y="212" width="2" height="15" fill="rgb(214,76,23)"/><text x="154.00" y="222.50"></text></g><g><title>0x7f317bd54f12 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="153" y="180" width="2" height="15" fill="rgb(219,214,13)"/><text x="156.00" y="190.50"></text></g><g><title>0x7f317bd54f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="155" y="180" width="2" height="15" fill="rgb(245,83,41)"/><text x="158.00" y="190.50"></text></g><g><title>0x7f317bd44d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="155" y="196" width="2" height="15" fill="rgb(209,26,53)"/><text x="158.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.17%)</title><rect x="155" y="212" width="2" height="15" fill="rgb(247,166,7)"/><text x="158.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.17%)</title><rect x="155" y="228" width="2" height="15" fill="rgb(228,207,1)"/><text x="158.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.17%)</title><rect x="155" y="244" width="2" height="15" fill="rgb(210,209,0)"/><text x="158.00" y="254.50"></text></g><g><title>0x7f317bd64380 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="157" y="196" width="2" height="15" fill="rgb(238,30,37)"/><text x="160.00" y="206.50"></text></g><g><title>0x7f317bd3d277 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="159" y="260" width="2" height="15" fill="rgb(232,165,40)"/><text x="162.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.17%)</title><rect x="161" y="308" width="2" height="15" fill="rgb(233,170,37)"/><text x="164.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="161" y="324" width="2" height="15" fill="rgb(254,169,28)"/><text x="164.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 0.35%)</title><rect x="161" y="292" width="4" height="15" fill="rgb(205,179,2)"/><text x="164.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:568) (1 samples, 0.17%)</title><rect x="163" y="308" width="2" height="15" fill="rgb(246,208,13)"/><text x="166.00" y="318.50"></text></g><g><title>0x7f317bd632df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="159" y="212" width="8" height="15" fill="rgb(254,219,9)"/><text x="162.00" y="222.50"></text></g><g><title>0x7f317bd47d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="159" y="228" width="8" height="15" fill="rgb(243,3,10)"/><text x="162.00" y="238.50"></text></g><g><title>0x7f317bd47666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="159" y="244" width="8" height="15" fill="rgb(229,19,0)"/><text x="162.00" y="254.50"></text></g><g><title>0x7f317bd3d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="161" y="260" width="6" height="15" fill="rgb(240,187,7)"/><text x="164.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 0.52%)</title><rect x="161" y="276" width="6" height="15" fill="rgb(205,202,32)"/><text x="164.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.17%)</title><rect x="165" y="292" width="2" height="15" fill="rgb(233,219,20)"/><text x="168.00" y="302.50"></text></g><g><title>0x7f317bd6353e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="167" y="212" width="2" height="15" fill="rgb(243,86,42)"/><text x="170.00" y="222.50"></text></g><g><title>0x7f31a16eb700 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="169" y="340" width="2" height="15" fill="rgb(244,147,40)"/><text x="172.00" y="350.50"></text></g><g><title>0x7f31a16e8aa4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="169" y="356" width="2" height="15" fill="rgb(245,110,10)"/><text x="172.00" y="366.50"></text></g><g><title>0x7f317bd63592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="169" y="212" width="4" height="15" fill="rgb(248,113,19)"/><text x="172.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (2 samples, 0.35%)</title><rect x="169" y="228" width="4" height="15" fill="rgb(238,170,30)"/><text x="172.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.35%)</title><rect x="169" y="244" width="4" height="15" fill="rgb(211,80,28)"/><text x="172.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (2 samples, 0.35%)</title><rect x="169" y="260" width="4" height="15" fill="rgb(247,142,41)"/><text x="172.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (2 samples, 0.35%)</title><rect x="169" y="276" width="4" height="15" fill="rgb(217,59,45)"/><text x="172.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:139) (2 samples, 0.35%)</title><rect x="169" y="292" width="4" height="15" fill="rgb(223,126,6)"/><text x="172.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c:253) (2 samples, 0.35%)</title><rect x="169" y="308" width="4" height="15" fill="rgb(232,228,36)"/><text x="172.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (2 samples, 0.35%)</title><rect x="169" y="324" width="4" height="15" fill="rgb(238,119,1)"/><text x="172.00" y="334.50"></text></g><g><title>0x7f31a170a103 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="171" y="340" width="2" height="15" fill="rgb(241,118,38)"/><text x="174.00" y="350.50"></text></g><g><title>0x7f317bd63687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="173" y="212" width="2" height="15" fill="rgb(237,171,38)"/><text x="176.00" y="222.50"></text></g><g><title>0x7f317bd63693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="175" y="212" width="2" height="15" fill="rgb(205,28,40)"/><text x="178.00" y="222.50"></text></g><g><title>0x7f317bd636aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.21%)</title><rect x="177" y="212" width="15" height="15" fill="rgb(250,92,16)"/><text x="180.00" y="222.50"></text></g><g><title>0x7f317bd636ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.69%)</title><rect x="192" y="212" width="8" height="15" fill="rgb(247,85,49)"/><text x="195.00" y="222.50"></text></g><g><title>0x7f317bd636b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="200" y="212" width="6" height="15" fill="rgb(237,78,44)"/><text x="203.00" y="222.50"></text></g><g><title>0x7f317bd637b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="206" y="212" width="2" height="15" fill="rgb(221,59,12)"/><text x="209.00" y="222.50"></text></g><g><title>0x7f317bd63887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="208" y="212" width="2" height="15" fill="rgb(236,22,28)"/><text x="211.00" y="222.50"></text></g><g><title>0x7f317bd388b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="210" y="228" width="2" height="15" fill="rgb(251,79,8)"/><text x="213.00" y="238.50"></text></g><g><title>0x7f317bd54fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 4.85%)</title><rect x="157" y="180" width="57" height="15" fill="rgb(233,51,47)"/><text x="160.00" y="190.50">0x7f31..</text></g><g><title>0x7f317bd64405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 4.68%)</title><rect x="159" y="196" width="55" height="15" fill="rgb(234,225,9)"/><text x="162.00" y="206.50">0x7f3..</text></g><g><title>0x7f317bd6392f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="210" y="212" width="4" height="15" fill="rgb(208,126,28)"/><text x="213.00" y="222.50"></text></g><g><title>0x7f317bd389af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="212" y="228" width="2" height="15" fill="rgb(240,80,16)"/><text x="215.00" y="238.50"></text></g><g><title>array_take (methods.c:138) (3 samples, 0.52%)</title><rect x="214" y="196" width="6" height="15" fill="rgb(229,198,49)"/><text x="217.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="218" y="212" width="2" height="15" fill="rgb(243,72,5)"/><text x="221.00" y="222.50"></text></g><g><title>0x7f317bd5505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.87%)</title><rect x="214" y="180" width="10" height="15" fill="rgb(231,164,47)"/><text x="217.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (2 samples, 0.35%)</title><rect x="220" y="196" width="4" height="15" fill="rgb(229,101,46)"/><text x="223.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.35%)</title><rect x="220" y="212" width="4" height="15" fill="rgb(229,86,27)"/><text x="223.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3957) (2 samples, 0.35%)</title><rect x="220" y="228" width="4" height="15" fill="rgb(233,215,45)"/><text x="223.00" y="238.50"></text></g><g><title>0x7f317bd5513a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="224" y="180" width="2" height="15" fill="rgb(230,186,26)"/><text x="227.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.17%)</title><rect x="224" y="196" width="2" height="15" fill="rgb(221,229,1)"/><text x="227.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.17%)</title><rect x="224" y="212" width="2" height="15" fill="rgb(229,32,23)"/><text x="227.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.17%)</title><rect x="224" y="228" width="2" height="15" fill="rgb(220,32,8)"/><text x="227.00" y="238.50"></text></g><g><title>0x7f317bd5514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="226" y="180" width="2" height="15" fill="rgb(243,67,17)"/><text x="229.00" y="190.50"></text></g><g><title>0x7f317bd5518f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.52%)</title><rect x="228" y="180" width="6" height="15" fill="rgb(219,204,19)"/><text x="231.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.17%)</title><rect x="234" y="196" width="3" height="15" fill="rgb(205,117,52)"/><text x="237.00" y="206.50"></text></g><g><title>0x7f317bd551bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.35%)</title><rect x="234" y="180" width="5" height="15" fill="rgb(241,152,11)"/><text x="237.00" y="190.50"></text></g><g><title>array_shape_get (getset.c:42) (1 samples, 0.17%)</title><rect x="237" y="196" width="2" height="15" fill="rgb(242,77,15)"/><text x="240.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (44 samples, 7.63%)</title><rect x="151" y="148" width="90" height="15" fill="rgb(254,142,42)"/><text x="154.00" y="158.50">predict (s..</text></g><g><title>0x7f317bd55d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (43 samples, 7.45%)</title><rect x="153" y="164" width="88" height="15" fill="rgb(251,203,22)"/><text x="156.00" y="174.50">0x7f317bd5..</text></g><g><title>0x7f317bd55328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="239" y="180" width="2" height="15" fill="rgb(221,224,47)"/><text x="242.00" y="190.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.17%)</title><rect x="239" y="196" width="2" height="15" fill="rgb(212,108,14)"/><text x="242.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.17%)</title><rect x="239" y="212" width="2" height="15" fill="rgb(224,172,15)"/><text x="242.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:954) (1 samples, 0.17%)</title><rect x="239" y="228" width="2" height="15" fill="rgb(210,35,34)"/><text x="242.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:421) (1 samples, 0.17%)</title><rect x="241" y="148" width="2" height="15" fill="rgb(211,67,21)"/><text x="244.00" y="158.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.52%)</title><rect x="243" y="148" width="6" height="15" fill="rgb(214,96,10)"/><text x="246.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (2 samples, 0.35%)</title><rect x="245" y="164" width="4" height="15" fill="rgb(220,10,7)"/><text x="248.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.17%)</title><rect x="249" y="164" width="2" height="15" fill="rgb(210,214,6)"/><text x="252.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.17%)</title><rect x="249" y="180" width="2" height="15" fill="rgb(242,34,4)"/><text x="252.00" y="190.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:908) (1 samples, 0.17%)</title><rect x="249" y="196" width="2" height="15" fill="rgb(254,125,2)"/><text x="252.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (106 samples, 18.37%)</title><rect x="36" y="132" width="217" height="15" fill="rgb(219,164,19)"/><text x="39.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.35%)</title><rect x="249" y="148" width="4" height="15" fill="rgb(236,160,45)"/><text x="252.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.17%)</title><rect x="251" y="164" width="2" height="15" fill="rgb(227,213,3)"/><text x="254.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.17%)</title><rect x="251" y="180" width="2" height="15" fill="rgb(246,195,30)"/><text x="254.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.17%)</title><rect x="251" y="196" width="2" height="15" fill="rgb(244,121,39)"/><text x="254.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1141) (1 samples, 0.17%)</title><rect x="251" y="212" width="2" height="15" fill="rgb(243,68,49)"/><text x="254.00" y="222.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:54) (110 samples, 19.06%)</title><rect x="30" y="52" width="225" height="15" fill="rgb(233,68,27)"/><text x="33.00" y="62.50">&lt;module&gt; (bench_DecisionTreeR..</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:53) (110 samples, 19.06%)</title><rect x="30" y="68" width="225" height="15" fill="rgb(227,227,27)"/><text x="33.00" y="78.50">profile_skl (bench_DecisionTr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37) (110 samples, 19.06%)</title><rect x="30" y="84" width="225" height="15" fill="rgb(244,47,28)"/><text x="33.00" y="94.50">setup_profile (bench_Decision..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31) (110 samples, 19.06%)</title><rect x="30" y="100" width="225" height="15" fill="rgb(253,154,42)"/><text x="33.00" y="110.50">profile (bench_DecisionTreeRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (109 samples, 18.89%)</title><rect x="32" y="116" width="223" height="15" fill="rgb(237,125,20)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_b..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.17%)</title><rect x="253" y="132" width="2" height="15" fill="rgb(235,167,34)"/><text x="256.00" y="142.50"></text></g><g><title>0x7f31621c254f (?) (1 samples, 0.17%)</title><rect x="255" y="244" width="2" height="15" fill="rgb(216,118,4)"/><text x="258.00" y="254.50"></text></g><g><title>0x7f31621c865e (?) (1 samples, 0.17%)</title><rect x="255" y="260" width="2" height="15" fill="rgb(214,220,53)"/><text x="258.00" y="270.50"></text></g><g><title>0x7f31621c850f (?) (1 samples, 0.17%)</title><rect x="255" y="276" width="2" height="15" fill="rgb(220,0,27)"/><text x="258.00" y="286.50"></text></g><g><title>0x7f31621ced6c (?) (1 samples, 0.17%)</title><rect x="255" y="292" width="2" height="15" fill="rgb(206,152,0)"/><text x="258.00" y="302.50"></text></g><g><title>0x7f316b6efab9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="255" y="308" width="2" height="15" fill="rgb(220,54,16)"/><text x="258.00" y="318.50"></text></g><g><title>0x7f316b6f0ead (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="255" y="324" width="2" height="15" fill="rgb(220,153,14)"/><text x="258.00" y="334.50"></text></g><g><title>0x7f316b6f0ea9 (libgomp.so.1.0.0) (8 samples, 1.39%)</title><rect x="257" y="484" width="16" height="15" fill="rgb(236,55,5)"/><text x="260.00" y="494.50"></text></g><g><title>0x7f316b6f0eab (libgomp.so.1.0.0) (14 samples, 2.43%)</title><rect x="273" y="484" width="29" height="15" fill="rgb(243,168,32)"/><text x="276.00" y="494.50">0x..</text></g><g><title>0x7f316b6efab9 (libgomp.so.1.0.0) (31 samples, 5.37%)</title><rect x="257" y="468" width="63" height="15" fill="rgb(238,153,34)"/><text x="260.00" y="478.50">0x7f31..</text></g><g><title>0x7f316b6f0ead (libgomp.so.1.0.0) (9 samples, 1.56%)</title><rect x="302" y="484" width="18" height="15" fill="rgb(231,57,43)"/><text x="305.00" y="494.50"></text></g><g><title>0x7f316b6f0cf9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="320" y="500" width="2" height="15" fill="rgb(254,168,50)"/><text x="323.00" y="510.50"></text></g><g><title>0x7f316b6f0cfb (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="322" y="500" width="2" height="15" fill="rgb(225,194,3)"/><text x="325.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:61) (35 samples, 6.07%)</title><rect x="255" y="52" width="71" height="15" fill="rgb(225,92,17)"/><text x="258.00" y="62.50">&lt;module&gt;..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:60) (35 samples, 6.07%)</title><rect x="255" y="68" width="71" height="15" fill="rgb(244,156,9)"/><text x="258.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37) (35 samples, 6.07%)</title><rect x="255" y="84" width="71" height="15" fill="rgb(234,66,26)"/><text x="258.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31) (35 samples, 6.07%)</title><rect x="255" y="100" width="71" height="15" fill="rgb(222,48,15)"/><text x="258.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (35 samples, 6.07%)</title><rect x="255" y="116" width="71" height="15" fill="rgb(248,203,50)"/><text x="258.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (35 samples, 6.07%)</title><rect x="255" y="132" width="71" height="15" fill="rgb(205,85,27)"/><text x="258.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (35 samples, 6.07%)</title><rect x="255" y="148" width="71" height="15" fill="rgb(228,199,17)"/><text x="258.00" y="158.50">run (mlp..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (35 samples, 6.07%)</title><rect x="255" y="164" width="71" height="15" fill="rgb(251,144,37)"/><text x="258.00" y="174.50">_run_seq..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (35 samples, 6.07%)</title><rect x="255" y="180" width="71" height="15" fill="rgb(209,214,27)"/><text x="258.00" y="190.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (35 samples, 6.07%)</title><rect x="255" y="196" width="71" height="15" fill="rgb(246,176,27)"/><text x="258.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (35 samples, 6.07%)</title><rect x="255" y="212" width="71" height="15" fill="rgb(205,193,26)"/><text x="258.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (35 samples, 6.07%)</title><rect x="255" y="228" width="71" height="15" fill="rgb(251,66,50)"/><text x="258.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (34 samples, 5.89%)</title><rect x="257" y="244" width="69" height="15" fill="rgb(207,177,26)"/><text x="260.00" y="254.50">pybind1..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (34 samples, 5.89%)</title><rect x="257" y="260" width="69" height="15" fill="rgb(209,75,19)"/><text x="260.00" y="270.50">void py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (34 samples, 5.89%)</title><rect x="257" y="276" width="69" height="15" fill="rgb(242,209,53)"/><text x="260.00" y="286.50">void py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (34 samples, 5.89%)</title><rect x="257" y="292" width="69" height="15" fill="rgb(246,28,5)"/><text x="260.00" y="302.50">pybind1..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (34 samples, 5.89%)</title><rect x="257" y="308" width="69" height="15" fill="rgb(226,184,12)"/><text x="260.00" y="318.50">pybind1..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (34 samples, 5.89%)</title><rect x="257" y="324" width="69" height="15" fill="rgb(244,30,32)"/><text x="260.00" y="334.50">pybind1..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (34 samples, 5.89%)</title><rect x="257" y="340" width="69" height="15" fill="rgb(210,123,13)"/><text x="260.00" y="350.50">pybind1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (34 samples, 5.89%)</title><rect x="257" y="356" width="69" height="15" fill="rgb(230,97,40)"/><text x="260.00" y="366.50">pybind1..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (34 samples, 5.89%)</title><rect x="257" y="372" width="69" height="15" fill="rgb(236,84,43)"/><text x="260.00" y="382.50">pybind1..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (34 samples, 5.89%)</title><rect x="257" y="388" width="69" height="15" fill="rgb(248,10,53)"/><text x="260.00" y="398.50">pybind1..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (34 samples, 5.89%)</title><rect x="257" y="404" width="69" height="15" fill="rgb(229,158,22)"/><text x="260.00" y="414.50">pybind1..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (34 samples, 5.89%)</title><rect x="257" y="420" width="69" height="15" fill="rgb(217,118,2)"/><text x="260.00" y="430.50">Runtime..</text></g><g><title>pybind11::array::size (numpy.h:619) (34 samples, 5.89%)</title><rect x="257" y="436" width="69" height="15" fill="rgb(221,43,51)"/><text x="260.00" y="446.50">pybind1..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (34 samples, 5.89%)</title><rect x="257" y="452" width="69" height="15" fill="rgb(219,99,18)"/><text x="260.00" y="462.50">std::ac..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.52%)</title><rect x="320" y="468" width="6" height="15" fill="rgb(213,209,50)"/><text x="323.00" y="478.50"></text></g><g><title>0x7f316b6eedaa (libgomp.so.1.0.0) (3 samples, 0.52%)</title><rect x="320" y="484" width="6" height="15" fill="rgb(248,156,43)"/><text x="323.00" y="494.50"></text></g><g><title>0x7f316b6f0cfd (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="324" y="500" width="2" height="15" fill="rgb(231,8,25)"/><text x="327.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.17%)</title><rect x="335" y="148" width="2" height="15" fill="rgb(246,209,49)"/><text x="338.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:567) (1 samples, 0.17%)</title><rect x="337" y="164" width="2" height="15" fill="rgb(231,136,32)"/><text x="340.00" y="174.50"></text></g><g><title>run (onnxruntime/capi/session.py:133) (1 samples, 0.17%)</title><rect x="345" y="196" width="2" height="15" fill="rgb(248,50,32)"/><text x="348.00" y="206.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.35%)</title><rect x="347" y="196" width="4" height="15" fill="rgb(214,188,50)"/><text x="350.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.35%)</title><rect x="347" y="212" width="4" height="15" fill="rgb(205,58,15)"/><text x="350.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.35%)</title><rect x="347" y="228" width="4" height="15" fill="rgb(223,13,4)"/><text x="350.00" y="238.50"></text></g><g><title>0x7f31617a7ff9 (?) (1 samples, 0.17%)</title><rect x="353" y="212" width="2" height="15" fill="rgb(249,105,39)"/><text x="356.00" y="222.50"></text></g><g><title>0x7f31617a2ef6 (?) (1 samples, 0.17%)</title><rect x="353" y="228" width="2" height="15" fill="rgb(240,171,37)"/><text x="356.00" y="238.50"></text></g><g><title>0x7f3161797962 (?) (1 samples, 0.17%)</title><rect x="353" y="244" width="2" height="15" fill="rgb(245,19,18)"/><text x="356.00" y="254.50"></text></g><g><title>0x7f31617cb7a7 (?) (1 samples, 0.17%)</title><rect x="353" y="260" width="2" height="15" fill="rgb(254,162,20)"/><text x="356.00" y="270.50"></text></g><g><title>0x7f31617cb379 (?) (1 samples, 0.17%)</title><rect x="353" y="276" width="2" height="15" fill="rgb(238,74,12)"/><text x="356.00" y="286.50"></text></g><g><title>0x7f3161c298b8 (?) (1 samples, 0.17%)</title><rect x="353" y="292" width="2" height="15" fill="rgb(208,40,46)"/><text x="356.00" y="302.50"></text></g><g><title>0x7f3161c27c7f (?) (1 samples, 0.17%)</title><rect x="353" y="308" width="2" height="15" fill="rgb(232,8,39)"/><text x="356.00" y="318.50"></text></g><g><title>0x7f3161c3a99c (?) (1 samples, 0.17%)</title><rect x="353" y="324" width="2" height="15" fill="rgb(210,99,27)"/><text x="356.00" y="334.50"></text></g><g><title>0x7f316196234f (?) (1 samples, 0.17%)</title><rect x="353" y="340" width="2" height="15" fill="rgb(238,194,25)"/><text x="356.00" y="350.50"></text></g><g><title>0x7f31a170a12f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="353" y="356" width="2" height="15" fill="rgb(206,94,22)"/><text x="356.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="355" y="260" width="2" height="15" fill="rgb(207,10,20)"/><text x="358.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="357" y="260" width="2" height="15" fill="rgb(228,168,23)"/><text x="360.00" y="270.50"></text></g><g><title>0x7f31a16e9929 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="359" y="276" width="2" height="15" fill="rgb(222,64,2)"/><text x="362.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="361" y="292" width="2" height="15" fill="rgb(234,167,17)"/><text x="364.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="361" y="308" width="2" height="15" fill="rgb(229,123,16)"/><text x="364.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="363" y="292" width="2" height="15" fill="rgb(253,165,52)"/><text x="366.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="363" y="308" width="2" height="15" fill="rgb(252,112,9)"/><text x="366.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="363" y="324" width="2" height="15" fill="rgb(227,45,50)"/><text x="366.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="363" y="340" width="2" height="15" fill="rgb(217,137,13)"/><text x="366.00" y="350.50"></text></g><g><title>0x7f31a16eab49 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="363" y="356" width="2" height="15" fill="rgb(224,22,23)"/><text x="366.00" y="366.50"></text></g><g><title>0x7f316176f0f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="468" y="356" width="2" height="15" fill="rgb(227,176,34)"/><text x="471.00" y="366.50"></text></g><g><title>0x7f31911b67a0 (libstdc++.so.6.0.28) (2 samples, 0.35%)</title><rect x="470" y="356" width="4" height="15" fill="rgb(212,184,3)"/><text x="473.00" y="366.50"></text></g><g><title>0x7f31a16e990e (libc-2.29.so) (1 samples, 0.17%)</title><rect x="474" y="356" width="2" height="15" fill="rgb(223,55,30)"/><text x="477.00" y="366.50"></text></g><g><title>0x7f31a16e9929 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="476" y="356" width="4" height="15" fill="rgb(205,90,15)"/><text x="479.00" y="366.50"></text></g><g><title>0x7f31a16e992c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="480" y="356" width="2" height="15" fill="rgb(213,109,30)"/><text x="483.00" y="366.50"></text></g><g><title>0x7f31a16e993b (libc-2.29.so) (1 samples, 0.17%)</title><rect x="482" y="356" width="2" height="15" fill="rgb(206,142,23)"/><text x="485.00" y="366.50"></text></g><g><title>0x7f31a16e995e (libc-2.29.so) (1 samples, 0.17%)</title><rect x="484" y="356" width="2" height="15" fill="rgb(234,78,49)"/><text x="487.00" y="366.50"></text></g><g><title>0x7f31a16e9965 (libc-2.29.so) (3 samples, 0.52%)</title><rect x="486" y="356" width="6" height="15" fill="rgb(250,24,19)"/><text x="489.00" y="366.50"></text></g><g><title>0x7f31a16e996a (libc-2.29.so) (2 samples, 0.35%)</title><rect x="492" y="356" width="4" height="15" fill="rgb(229,14,30)"/><text x="495.00" y="366.50"></text></g><g><title>0x7f31a16e9971 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="496" y="356" width="2" height="15" fill="rgb(215,31,22)"/><text x="499.00" y="366.50"></text></g><g><title>0x7f31a16e997c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="498" y="356" width="2" height="15" fill="rgb(242,195,23)"/><text x="501.00" y="366.50"></text></g><g><title>0x7f31a16e9991 (libc-2.29.so) (8 samples, 1.39%)</title><rect x="500" y="356" width="17" height="15" fill="rgb(233,96,39)"/><text x="503.00" y="366.50"></text></g><g><title>0x7f31a16e9998 (libc-2.29.so) (6 samples, 1.04%)</title><rect x="517" y="356" width="12" height="15" fill="rgb(245,75,20)"/><text x="520.00" y="366.50"></text></g><g><title>0x7f31a16e9a38 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="529" y="356" width="2" height="15" fill="rgb(219,2,15)"/><text x="532.00" y="366.50"></text></g><g><title>0x7f31a16e9a41 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="531" y="356" width="2" height="15" fill="rgb(227,21,9)"/><text x="534.00" y="366.50"></text></g><g><title>0x7f31a16e9a4d (libc-2.29.so) (1 samples, 0.17%)</title><rect x="533" y="356" width="2" height="15" fill="rgb(212,39,48)"/><text x="536.00" y="366.50"></text></g><g><title>0x7f31a16e9a53 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="535" y="356" width="2" height="15" fill="rgb(218,58,38)"/><text x="538.00" y="366.50"></text></g><g><title>0x7f31a16e9a55 (libc-2.29.so) (2 samples, 0.35%)</title><rect x="537" y="356" width="4" height="15" fill="rgb(234,146,15)"/><text x="540.00" y="366.50"></text></g><g><title>0x7f31a16e9bc0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="541" y="356" width="2" height="15" fill="rgb(220,74,43)"/><text x="544.00" y="366.50"></text></g><g><title>0x7f31a16e9bd8 (libc-2.29.so) (3 samples, 0.52%)</title><rect x="543" y="356" width="6" height="15" fill="rgb(211,202,12)"/><text x="546.00" y="366.50"></text></g><g><title>0x7f31a16e9be4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="549" y="356" width="2" height="15" fill="rgb(220,77,8)"/><text x="552.00" y="366.50"></text></g><g><title>0x7f31a16e9be8 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="551" y="356" width="2" height="15" fill="rgb(210,155,52)"/><text x="554.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (13 samples, 2.25%)</title><rect x="553" y="356" width="27" height="15" fill="rgb(212,187,31)"/><text x="556.00" y="366.50">f..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.39%)</title><rect x="834" y="388" width="16" height="15" fill="rgb(235,39,26)"/><text x="837.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 1.21%)</title><rect x="836" y="404" width="14" height="15" fill="rgb(230,152,23)"/><text x="839.00" y="414.50"></text></g><g><title>0x7f31a170a12f (libc-2.29.so) (2 samples, 0.35%)</title><rect x="889" y="420" width="4" height="15" fill="rgb(244,46,25)"/><text x="892.00" y="430.50"></text></g><g><title>0x7f31a170a14a (libc-2.29.so) (2 samples, 0.35%)</title><rect x="893" y="420" width="4" height="15" fill="rgb(246,129,54)"/><text x="896.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.29%)</title><rect x="881" y="404" width="39" height="15" fill="rgb(243,42,1)"/><text x="884.00" y="414.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.91%)</title><rect x="897" y="420" width="23" height="15" fill="rgb(212,13,2)"/><text x="900.00" y="430.50">o..</text></g><g><title>malloc (libc-2.29.so) (9 samples, 1.56%)</title><rect x="901" y="436" width="19" height="15" fill="rgb(217,98,44)"/><text x="904.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (232 samples, 40.21%)</title><rect x="580" y="356" width="475" height="15" fill="rgb(235,114,14)"/><text x="583.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (o..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 20.80%)</title><rect x="809" y="372" width="246" height="15" fill="rgb(207,21,33)"/><text x="812.00" y="382.50">std::_Hashtable&lt;long, std::pair&lt;..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (100 samples, 17.33%)</title><rect x="850" y="388" width="205" height="15" fill="rgb(226,159,34)"/><text x="853.00" y="398.50">std::_Hashtable&lt;long, std:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (66 samples, 11.44%)</title><rect x="920" y="404" width="135" height="15" fill="rgb(207,211,25)"/><text x="923.00" y="414.50">std::__detail::_P..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (30 samples, 5.20%)</title><rect x="993" y="420" width="62" height="15" fill="rgb(244,166,30)"/><text x="996.00" y="430.50">std::_..</text></g><g><title>0x7f316176e850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1065" y="372" width="2" height="15" fill="rgb(232,107,54)"/><text x="1068.00" y="382.50"></text></g><g><title>0x7f31a1709d50 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1067" y="372" width="2" height="15" fill="rgb(214,57,2)"/><text x="1070.00" y="382.50"></text></g><g><title>0x7f31a1709d97 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1069" y="372" width="2" height="15" fill="rgb(218,181,16)"/><text x="1072.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.56%)</title><rect x="1055" y="356" width="18" height="15" fill="rgb(244,78,15)"/><text x="1058.00" y="366.50"></text></g><g><title>0x7f31a1709dbf (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1071" y="372" width="2" height="15" fill="rgb(248,221,30)"/><text x="1074.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.35%)</title><rect x="1073" y="356" width="4" height="15" fill="rgb(214,136,4)"/><text x="1076.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.60%)</title><rect x="1077" y="356" width="31" height="15" fill="rgb(207,152,11)"/><text x="1080.00" y="366.50">st..</text></g><g><title>0x7f31911b5d50 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="1126" y="388" width="2" height="15" fill="rgb(245,222,39)"/><text x="1129.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 66.03%)</title><rect x="365" y="308" width="780" height="15" fill="rgb(245,69,0)"/><text x="368.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 66.03%)</title><rect x="365" y="324" width="780" height="15" fill="rgb(210,54,21)"/><text x="368.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (380 samples, 65.86%)</title><rect x="367" y="340" width="778" height="15" fill="rgb(225,205,50)"/><text x="370.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 3.12%)</title><rect x="1108" y="356" width="37" height="15" fill="rgb(230,207,9)"/><text x="1111.00" y="366.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 2.43%)</title><rect x="1116" y="372" width="29" height="15" fill="rgb(228,152,30)"/><text x="1119.00" y="382.50">op..</text></g><g><title>malloc (libc-2.29.so) (8 samples, 1.39%)</title><rect x="1128" y="388" width="17" height="15" fill="rgb(210,161,25)"/><text x="1131.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (384 samples, 66.55%)</title><rect x="361" y="276" width="786" height="15" fill="rgb(237,219,35)"/><text x="364.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (382 samples, 66.20%)</title><rect x="365" y="292" width="782" height="15" fill="rgb(251,59,10)"/><text x="368.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1145" y="308" width="2" height="15" fill="rgb(213,162,37)"/><text x="1148.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (386 samples, 66.90%)</title><rect x="359" y="260" width="790" height="15" fill="rgb(225,144,51)"/><text x="362.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1147" y="276" width="2" height="15" fill="rgb(240,109,45)"/><text x="1150.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.52%)</title><rect x="1149" y="260" width="6" height="15" fill="rgb(233,221,36)"/><text x="1152.00" y="270.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1153" y="276" width="2" height="15" fill="rgb(218,154,44)"/><text x="1156.00" y="286.50"></text></g><g><title>0x7f316176e850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1155" y="276" width="2" height="15" fill="rgb(220,49,2)"/><text x="1158.00" y="286.50"></text></g><g><title>0x7f31a1709d94 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1157" y="276" width="2" height="15" fill="rgb(221,207,24)"/><text x="1160.00" y="286.50"></text></g><g><title>0x7f31a16eac68 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1159" y="372" width="2" height="15" fill="rgb(219,80,6)"/><text x="1162.00" y="382.50"></text></g><g><title>0x7f31a16eadd6 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1161" y="372" width="2" height="15" fill="rgb(234,53,31)"/><text x="1164.00" y="382.50"></text></g><g><title>PyArray_New (ctors.c:1378) (3 samples, 0.52%)</title><rect x="1159" y="276" width="6" height="15" fill="rgb(237,205,12)"/><text x="1162.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (3 samples, 0.52%)</title><rect x="1159" y="292" width="6" height="15" fill="rgb(230,31,53)"/><text x="1162.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (3 samples, 0.52%)</title><rect x="1159" y="308" width="6" height="15" fill="rgb(213,170,28)"/><text x="1162.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (3 samples, 0.52%)</title><rect x="1159" y="324" width="6" height="15" fill="rgb(236,107,21)"/><text x="1162.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (3 samples, 0.52%)</title><rect x="1159" y="340" width="6" height="15" fill="rgb(209,204,24)"/><text x="1162.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.52%)</title><rect x="1159" y="356" width="6" height="15" fill="rgb(244,35,21)"/><text x="1162.00" y="366.50"></text></g><g><title>0x7f31a16eb028 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1163" y="372" width="2" height="15" fill="rgb(251,58,16)"/><text x="1166.00" y="382.50"></text></g><g><title>0x7f31a16e8ba4 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1163" y="388" width="2" height="15" fill="rgb(248,106,43)"/><text x="1166.00" y="398.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.04%)</title><rect x="1155" y="260" width="12" height="15" fill="rgb(243,58,36)"/><text x="1158.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1165" y="276" width="2" height="15" fill="rgb(228,40,32)"/><text x="1168.00" y="286.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1167" y="260" width="2" height="15" fill="rgb(210,214,16)"/><text x="1170.00" y="270.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="1169" y="260" width="2" height="15" fill="rgb(212,180,4)"/><text x="1172.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (400 samples, 69.32%)</title><rect x="355" y="244" width="818" height="15" fill="rgb(240,165,32)"/><text x="358.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="260" width="2" height="15" fill="rgb(239,74,17)"/><text x="1174.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="276" width="2" height="15" fill="rgb(254,79,27)"/><text x="1174.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="292" width="2" height="15" fill="rgb(251,139,51)"/><text x="1174.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="308" width="2" height="15" fill="rgb(233,32,21)"/><text x="1174.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="324" width="2" height="15" fill="rgb(212,95,17)"/><text x="1174.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="340" width="2" height="15" fill="rgb(247,12,40)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1171" y="356" width="2" height="15" fill="rgb(251,167,35)"/><text x="1174.00" y="366.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (409 samples, 70.88%)</title><rect x="339" y="164" width="836" height="15" fill="rgb(207,87,9)"/><text x="342.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (408 samples, 70.71%)</title><rect x="341" y="180" width="834" height="15" fill="rgb(252,75,12)"/><text x="344.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (403 samples, 69.84%)</title><rect x="351" y="196" width="824" height="15" fill="rgb(245,53,15)"/><text x="354.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (401 samples, 69.50%)</title><rect x="355" y="212" width="820" height="15" fill="rgb(227,44,37)"/><text x="358.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (401 samples, 69.50%)</title><rect x="355" y="228" width="820" height="15" fill="rgb(222,188,41)"/><text x="358.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrun..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1173" y="244" width="2" height="15" fill="rgb(233,194,23)"/><text x="1176.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="1173" y="260" width="2" height="15" fill="rgb(250,164,54)"/><text x="1176.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (419 samples, 72.62%)</title><rect x="331" y="132" width="856" height="15" fill="rgb(225,145,47)"/><text x="334.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (416 samples, 72.10%)</title><rect x="337" y="148" width="850" height="15" fill="rgb(238,173,32)"/><text x="340.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 1.04%)</title><rect x="1175" y="164" width="12" height="15" fill="rgb(233,148,22)"/><text x="1178.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.17%)</title><rect x="1185" y="180" width="2" height="15" fill="rgb(212,215,2)"/><text x="1188.00" y="190.50"></text></g><g><title>all (577 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,121,13)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:68) (422 samples, 73.14%)</title><rect x="326" y="52" width="864" height="15" fill="rgb(246,177,42)"/><text x="329.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:68)</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:67) (422 samples, 73.14%)</title><rect x="326" y="68" width="864" height="15" fill="rgb(249,220,25)"/><text x="329.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:67)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37) (422 samples, 73.14%)</title><rect x="326" y="84" width="864" height="15" fill="rgb(215,98,48)"/><text x="329.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31) (422 samples, 73.14%)</title><rect x="326" y="100" width="864" height="15" fill="rgb(227,113,19)"/><text x="329.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (420 samples, 72.79%)</title><rect x="331" y="116" width="859" height="15" fill="rgb(227,26,40)"/><text x="334.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.17%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(218,196,9)"/><text x="1190.00" y="142.50"></text></g></g></svg>