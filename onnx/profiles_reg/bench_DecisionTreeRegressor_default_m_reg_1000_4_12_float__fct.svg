<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2102" onload="init(evt)" viewBox="0 0 1200 2102" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2102" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2085.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2085.00"> </text><g id="frames"><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(241,173,6)"/><text x="13.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(211,183,23)"/><text x="13.00" y="974.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(231,102,28)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(205,45,40)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(231,74,51)"/><text x="14.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(218,115,26)"/><text x="14.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(222,119,14)"/><text x="14.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(228,99,31)"/><text x="14.00" y="1022.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 0.39%)</title><rect x="10" y="868" width="4" height="15" fill="rgb(225,140,24)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 0.39%)</title><rect x="10" y="884" width="4" height="15" fill="rgb(251,192,22)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 0.39%)</title><rect x="10" y="900" width="4" height="15" fill="rgb(237,129,51)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 0.39%)</title><rect x="10" y="916" width="4" height="15" fill="rgb(242,104,44)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="12" y="932" width="2" height="15" fill="rgb(239,123,47)"/><text x="15.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.10%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(251,17,12)"/><text x="16.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(232,172,26)"/><text x="16.00" y="974.50"></text></g><g><title>0x7f7f61ae0237 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(206,211,39)"/><text x="16.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.49%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(216,50,3)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.49%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(254,54,53)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(218,168,37)"/><text x="17.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(242,103,44)"/><text x="17.00" y="894.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.10%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(210,151,53)"/><text x="17.00" y="910.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.10%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(232,125,0)"/><text x="17.00" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.59%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(252,26,53)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(214,171,45)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(235,0,3)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(222,135,38)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.59%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(220,214,42)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(251,224,1)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.59%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(236,200,4)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(242,209,23)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(249,203,13)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(230,219,23)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.59%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(233,79,50)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(234,117,13)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.59%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(241,19,5)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(221,136,11)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(221,102,40)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(208,146,11)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.59%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(253,99,28)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(240,103,36)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.59%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(248,64,1)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(250,207,13)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(251,195,20)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(212,105,40)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(207,22,7)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(246,223,38)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(236,39,1)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.59%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(206,206,19)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(238,102,1)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 0.59%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(217,216,4)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(206,23,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(248,167,37)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(247,119,3)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.59%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(240,69,34)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.59%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(247,135,15)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 0.59%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(224,143,50)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(239,121,22)"/><text x="18.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(236,21,27)"/><text x="18.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(247,113,37)"/><text x="18.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(243,16,30)"/><text x="18.00" y="894.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="900" width="1" height="15" fill="rgb(228,177,34)"/><text x="18.00" y="910.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="15" y="916" width="1" height="15" fill="rgb(241,95,11)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py) (1 samples, 0.10%)</title><rect x="16" y="1124" width="2" height="15" fill="rgb(247,135,16)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1140" width="2" height="15" fill="rgb(207,120,38)"/><text x="19.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1156" width="2" height="15" fill="rgb(251,171,45)"/><text x="19.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="1172" width="2" height="15" fill="rgb(239,178,3)"/><text x="19.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="16" y="1188" width="2" height="15" fill="rgb(218,175,21)"/><text x="19.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="16" y="1204" width="2" height="15" fill="rgb(243,161,41)"/><text x="19.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="16" y="1220" width="2" height="15" fill="rgb(239,50,47)"/><text x="19.00" y="1230.50"></text></g><g><title>0x7f7f61b7eda2 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="16" y="1236" width="2" height="15" fill="rgb(227,178,48)"/><text x="19.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(254,139,13)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(208,95,28)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(241,134,23)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="10" y="244" width="9" height="15" fill="rgb(245,219,37)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.78%)</title><rect x="10" y="260" width="9" height="15" fill="rgb(225,33,15)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="10" y="276" width="9" height="15" fill="rgb(237,138,39)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.20%)</title><rect x="16" y="292" width="3" height="15" fill="rgb(231,203,15)"/><text x="19.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="308" width="3" height="15" fill="rgb(245,0,24)"/><text x="19.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="324" width="3" height="15" fill="rgb(232,147,33)"/><text x="19.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="340" width="3" height="15" fill="rgb(217,88,3)"/><text x="19.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="356" width="3" height="15" fill="rgb(206,190,41)"/><text x="19.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="372" width="3" height="15" fill="rgb(252,214,17)"/><text x="19.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.20%)</title><rect x="16" y="388" width="3" height="15" fill="rgb(238,209,29)"/><text x="19.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="404" width="3" height="15" fill="rgb(227,126,28)"/><text x="19.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="420" width="3" height="15" fill="rgb(239,111,51)"/><text x="19.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="436" width="3" height="15" fill="rgb(241,12,53)"/><text x="19.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="452" width="3" height="15" fill="rgb(207,89,43)"/><text x="19.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="468" width="3" height="15" fill="rgb(252,177,26)"/><text x="19.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.20%)</title><rect x="16" y="484" width="3" height="15" fill="rgb(234,164,10)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="500" width="3" height="15" fill="rgb(247,151,19)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="516" width="3" height="15" fill="rgb(233,87,9)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="532" width="3" height="15" fill="rgb(205,114,51)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="548" width="3" height="15" fill="rgb(221,7,25)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="564" width="3" height="15" fill="rgb(251,71,10)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.20%)</title><rect x="16" y="580" width="3" height="15" fill="rgb(252,116,0)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="596" width="3" height="15" fill="rgb(213,188,54)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="612" width="3" height="15" fill="rgb(227,203,3)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="628" width="3" height="15" fill="rgb(245,117,31)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="644" width="3" height="15" fill="rgb(230,26,9)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="660" width="3" height="15" fill="rgb(244,59,11)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.20%)</title><rect x="16" y="676" width="3" height="15" fill="rgb(216,221,34)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="692" width="3" height="15" fill="rgb(221,83,5)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="708" width="3" height="15" fill="rgb(239,182,8)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="724" width="3" height="15" fill="rgb(233,92,5)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="740" width="3" height="15" fill="rgb(226,125,28)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="756" width="3" height="15" fill="rgb(238,135,24)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.20%)</title><rect x="16" y="772" width="3" height="15" fill="rgb(226,61,50)"/><text x="19.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="788" width="3" height="15" fill="rgb(233,193,33)"/><text x="19.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="804" width="3" height="15" fill="rgb(209,215,25)"/><text x="19.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="820" width="3" height="15" fill="rgb(238,123,13)"/><text x="19.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="836" width="3" height="15" fill="rgb(239,152,9)"/><text x="19.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(239,149,9)"/><text x="19.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(241,115,53)"/><text x="19.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(222,203,33)"/><text x="19.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.20%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(224,74,47)"/><text x="19.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(207,136,51)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(220,221,27)"/><text x="19.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(210,99,16)"/><text x="19.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="964" width="3" height="15" fill="rgb(233,120,15)"/><text x="19.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(245,187,45)"/><text x="19.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (2 samples, 0.20%)</title><rect x="16" y="996" width="3" height="15" fill="rgb(244,213,20)"/><text x="19.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="1012" width="3" height="15" fill="rgb(211,56,35)"/><text x="19.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="1028" width="3" height="15" fill="rgb(228,143,17)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="1044" width="3" height="15" fill="rgb(246,168,21)"/><text x="19.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="1060" width="3" height="15" fill="rgb(221,26,18)"/><text x="19.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="1076" width="3" height="15" fill="rgb(238,176,14)"/><text x="19.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="16" y="1092" width="3" height="15" fill="rgb(211,108,5)"/><text x="19.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="16" y="1108" width="3" height="15" fill="rgb(248,179,48)"/><text x="19.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py) (1 samples, 0.10%)</title><rect x="18" y="1124" width="1" height="15" fill="rgb(242,195,18)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1140" width="1" height="15" fill="rgb(245,97,26)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1156" width="1" height="15" fill="rgb(235,155,33)"/><text x="21.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1172" width="1" height="15" fill="rgb(221,210,38)"/><text x="21.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1188" width="1" height="15" fill="rgb(252,81,10)"/><text x="21.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1204" width="1" height="15" fill="rgb(240,182,43)"/><text x="21.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_minimize.py) (1 samples, 0.10%)</title><rect x="18" y="1220" width="1" height="15" fill="rgb(252,214,16)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1236" width="1" height="15" fill="rgb(247,212,14)"/><text x="21.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1252" width="1" height="15" fill="rgb(208,49,50)"/><text x="21.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1268" width="1" height="15" fill="rgb(221,72,22)"/><text x="21.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="18" y="1284" width="1" height="15" fill="rgb(245,79,51)"/><text x="21.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1300" width="1" height="15" fill="rgb(206,72,29)"/><text x="21.00" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/lbfgsb.py) (1 samples, 0.10%)</title><rect x="18" y="1316" width="1" height="15" fill="rgb(214,68,36)"/><text x="21.00" y="1326.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="18" y="1332" width="1" height="15" fill="rgb(238,38,9)"/><text x="21.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1476" width="1" height="15" fill="rgb(239,208,50)"/><text x="22.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1492" width="1" height="15" fill="rgb(216,172,12)"/><text x="22.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1508" width="1" height="15" fill="rgb(236,105,4)"/><text x="22.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1524" width="1" height="15" fill="rgb(218,64,43)"/><text x="22.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1540" width="1" height="15" fill="rgb(221,80,16)"/><text x="22.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.10%)</title><rect x="19" y="1556" width="1" height="15" fill="rgb(251,180,37)"/><text x="22.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.10%)</title><rect x="19" y="1572" width="1" height="15" fill="rgb(252,186,19)"/><text x="22.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1588" width="1" height="15" fill="rgb(212,165,16)"/><text x="22.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1604" width="1" height="15" fill="rgb(248,25,34)"/><text x="22.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1620" width="1" height="15" fill="rgb(253,29,19)"/><text x="22.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1636" width="1" height="15" fill="rgb(209,97,22)"/><text x="22.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1652" width="1" height="15" fill="rgb(223,199,10)"/><text x="22.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="1668" width="1" height="15" fill="rgb(220,130,21)"/><text x="22.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1684" width="1" height="15" fill="rgb(230,57,24)"/><text x="22.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1700" width="1" height="15" fill="rgb(236,142,9)"/><text x="22.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1716" width="1" height="15" fill="rgb(209,169,54)"/><text x="22.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1732" width="1" height="15" fill="rgb(249,134,1)"/><text x="22.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1748" width="1" height="15" fill="rgb(221,74,47)"/><text x="22.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.10%)</title><rect x="19" y="1764" width="1" height="15" fill="rgb(212,71,39)"/><text x="22.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1780" width="1" height="15" fill="rgb(242,111,27)"/><text x="22.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1796" width="1" height="15" fill="rgb(252,229,20)"/><text x="22.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="1812" width="1" height="15" fill="rgb(216,119,49)"/><text x="22.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1828" width="1" height="15" fill="rgb(247,4,21)"/><text x="22.00" y="1838.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1844" width="1" height="15" fill="rgb(210,102,13)"/><text x="22.00" y="1854.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="1860" width="1" height="15" fill="rgb(245,188,7)"/><text x="22.00" y="1870.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="484" width="2" height="15" fill="rgb(236,139,22)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="500" width="2" height="15" fill="rgb(215,134,30)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="516" width="2" height="15" fill="rgb(249,176,21)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="532" width="2" height="15" fill="rgb(207,147,32)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="548" width="2" height="15" fill="rgb(253,60,48)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="564" width="2" height="15" fill="rgb(239,24,48)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.20%)</title><rect x="19" y="580" width="2" height="15" fill="rgb(224,158,36)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="596" width="2" height="15" fill="rgb(207,80,37)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="612" width="2" height="15" fill="rgb(208,34,6)"/><text x="22.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="628" width="2" height="15" fill="rgb(209,87,34)"/><text x="22.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="644" width="2" height="15" fill="rgb(225,166,35)"/><text x="22.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="660" width="2" height="15" fill="rgb(236,73,23)"/><text x="22.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.20%)</title><rect x="19" y="676" width="2" height="15" fill="rgb(209,58,47)"/><text x="22.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="692" width="2" height="15" fill="rgb(237,51,22)"/><text x="22.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="708" width="2" height="15" fill="rgb(217,204,39)"/><text x="22.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="724" width="2" height="15" fill="rgb(227,53,42)"/><text x="22.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="740" width="2" height="15" fill="rgb(223,53,17)"/><text x="22.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="756" width="2" height="15" fill="rgb(247,135,16)"/><text x="22.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.20%)</title><rect x="19" y="772" width="2" height="15" fill="rgb(250,11,34)"/><text x="22.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="788" width="2" height="15" fill="rgb(231,141,43)"/><text x="22.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="804" width="2" height="15" fill="rgb(252,112,22)"/><text x="22.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="820" width="2" height="15" fill="rgb(221,198,45)"/><text x="22.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="836" width="2" height="15" fill="rgb(218,9,50)"/><text x="22.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="852" width="2" height="15" fill="rgb(208,69,54)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.20%)</title><rect x="19" y="868" width="2" height="15" fill="rgb(239,130,23)"/><text x="22.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="884" width="2" height="15" fill="rgb(219,13,16)"/><text x="22.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="900" width="2" height="15" fill="rgb(238,138,47)"/><text x="22.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(218,161,10)"/><text x="22.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(230,8,4)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(254,224,37)"/><text x="22.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(237,189,29)"/><text x="22.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(221,37,30)"/><text x="22.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(225,90,30)"/><text x="22.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.20%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(208,207,14)"/><text x="22.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(241,189,33)"/><text x="22.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(211,196,26)"/><text x="22.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(206,218,27)"/><text x="22.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(226,177,39)"/><text x="22.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(210,204,10)"/><text x="22.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.20%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(226,131,10)"/><text x="22.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1124" width="2" height="15" fill="rgb(250,131,19)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1140" width="2" height="15" fill="rgb(250,83,24)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1156" width="2" height="15" fill="rgb(226,221,24)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1172" width="2" height="15" fill="rgb(223,57,23)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1188" width="2" height="15" fill="rgb(254,180,2)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="1204" width="2" height="15" fill="rgb(209,27,17)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1220" width="2" height="15" fill="rgb(222,67,0)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.20%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(233,170,50)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(205,131,8)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(230,72,8)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(220,110,15)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(229,13,52)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(249,213,3)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="1332" width="2" height="15" fill="rgb(220,201,19)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1348" width="2" height="15" fill="rgb(216,66,17)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.20%)</title><rect x="19" y="1364" width="2" height="15" fill="rgb(240,93,48)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1380" width="2" height="15" fill="rgb(231,91,47)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1396" width="2" height="15" fill="rgb(211,169,39)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1412" width="2" height="15" fill="rgb(254,85,17)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="19" y="1428" width="2" height="15" fill="rgb(238,115,36)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="19" y="1444" width="2" height="15" fill="rgb(208,175,17)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.20%)</title><rect x="19" y="1460" width="2" height="15" fill="rgb(252,10,33)"/><text x="22.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(216,17,26)"/><text x="23.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.10%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(227,94,35)"/><text x="23.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.10%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(242,130,1)"/><text x="23.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.10%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(236,197,41)"/><text x="23.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.10%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(205,138,12)"/><text x="23.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.10%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(233,190,52)"/><text x="23.00" y="1566.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.10%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(244,205,11)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(243,162,33)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(239,216,42)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(241,69,16)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(216,116,19)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(224,60,10)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(227,152,18)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(237,54,54)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(228,101,24)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(233,158,16)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(240,200,4)"/><text x="24.00" y="1278.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(217,189,44)"/><text x="24.00" y="1294.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(207,115,30)"/><text x="24.00" y="1310.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.10%)</title><rect x="22" y="1124" width="1" height="15" fill="rgb(216,24,34)"/><text x="25.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1140" width="1" height="15" fill="rgb(239,36,24)"/><text x="25.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1156" width="1" height="15" fill="rgb(220,163,27)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1172" width="1" height="15" fill="rgb(231,207,32)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1188" width="1" height="15" fill="rgb(230,202,35)"/><text x="25.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1204" width="1" height="15" fill="rgb(211,175,11)"/><text x="25.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="1220" width="1" height="15" fill="rgb(223,17,31)"/><text x="25.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(216,6,46)"/><text x="25.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.10%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(241,128,1)"/><text x="25.00" y="1262.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.49%)</title><rect x="19" y="340" width="5" height="15" fill="rgb(217,56,8)"/><text x="22.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="19" y="356" width="5" height="15" fill="rgb(206,14,25)"/><text x="22.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="19" y="372" width="5" height="15" fill="rgb(217,46,50)"/><text x="22.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="19" y="388" width="5" height="15" fill="rgb(254,167,16)"/><text x="22.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="19" y="404" width="5" height="15" fill="rgb(221,88,1)"/><text x="22.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="19" y="420" width="5" height="15" fill="rgb(234,141,52)"/><text x="22.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.49%)</title><rect x="19" y="436" width="5" height="15" fill="rgb(240,171,8)"/><text x="22.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="19" y="452" width="5" height="15" fill="rgb(212,226,6)"/><text x="22.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="19" y="468" width="5" height="15" fill="rgb(219,12,45)"/><text x="22.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(247,111,16)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(251,27,13)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(219,16,26)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.29%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(223,196,34)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(241,124,49)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(235,26,51)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="580" width="3" height="15" fill="rgb(243,68,8)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="596" width="3" height="15" fill="rgb(224,88,29)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="612" width="3" height="15" fill="rgb(253,26,51)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.29%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(216,48,28)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(240,9,53)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(230,47,47)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(238,192,6)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(222,28,38)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(242,27,39)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.29%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(211,6,53)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(208,123,11)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(208,140,41)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(225,195,31)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(223,105,14)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(236,14,11)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.29%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(247,110,32)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(231,161,13)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(244,8,44)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(215,163,25)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(246,49,41)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(227,83,22)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.29%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(212,30,18)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(253,5,10)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(252,202,15)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(212,64,31)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(205,160,40)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(212,70,12)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 0.29%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(243,141,14)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(208,22,50)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(225,40,28)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(252,229,38)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(236,28,7)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(252,127,16)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.20%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(205,202,34)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(228,29,45)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(227,147,14)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(238,197,4)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(252,38,25)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(250,91,49)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.10%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(241,9,15)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(224,138,16)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(244,158,22)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(238,155,22)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(250,136,8)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(224,119,13)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.10%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(248,55,8)"/><text x="26.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(228,215,12)"/><text x="26.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(242,215,48)"/><text x="26.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1348" width="1" height="15" fill="rgb(238,39,20)"/><text x="26.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(226,118,23)"/><text x="26.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(233,141,13)"/><text x="26.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.10%)</title><rect x="23" y="1396" width="1" height="15" fill="rgb(239,166,47)"/><text x="26.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1412" width="1" height="15" fill="rgb(246,60,5)"/><text x="26.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1428" width="1" height="15" fill="rgb(207,47,27)"/><text x="26.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1444" width="1" height="15" fill="rgb(218,9,19)"/><text x="26.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1460" width="1" height="15" fill="rgb(208,160,20)"/><text x="26.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1476" width="1" height="15" fill="rgb(220,179,4)"/><text x="26.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.10%)</title><rect x="23" y="1492" width="1" height="15" fill="rgb(247,196,16)"/><text x="26.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1508" width="1" height="15" fill="rgb(223,10,8)"/><text x="26.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1524" width="1" height="15" fill="rgb(219,45,37)"/><text x="26.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1540" width="1" height="15" fill="rgb(233,160,4)"/><text x="26.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1556" width="1" height="15" fill="rgb(224,126,32)"/><text x="26.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1572" width="1" height="15" fill="rgb(237,209,45)"/><text x="26.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.10%)</title><rect x="23" y="1588" width="1" height="15" fill="rgb(247,176,30)"/><text x="26.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1604" width="1" height="15" fill="rgb(241,154,11)"/><text x="26.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1620" width="1" height="15" fill="rgb(237,201,47)"/><text x="26.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1636" width="1" height="15" fill="rgb(253,47,52)"/><text x="26.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1652" width="1" height="15" fill="rgb(217,144,38)"/><text x="26.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1668" width="1" height="15" fill="rgb(242,88,1)"/><text x="26.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.10%)</title><rect x="23" y="1684" width="1" height="15" fill="rgb(238,70,41)"/><text x="26.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1700" width="1" height="15" fill="rgb(245,110,38)"/><text x="26.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1716" width="1" height="15" fill="rgb(205,195,27)"/><text x="26.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1732" width="1" height="15" fill="rgb(249,50,48)"/><text x="26.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1748" width="1" height="15" fill="rgb(216,20,33)"/><text x="26.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1764" width="1" height="15" fill="rgb(213,114,17)"/><text x="26.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.10%)</title><rect x="23" y="1780" width="1" height="15" fill="rgb(211,22,26)"/><text x="26.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1796" width="1" height="15" fill="rgb(228,45,37)"/><text x="26.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1812" width="1" height="15" fill="rgb(235,48,10)"/><text x="26.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1828" width="1" height="15" fill="rgb(225,152,44)"/><text x="26.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1844" width="1" height="15" fill="rgb(218,118,36)"/><text x="26.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1860" width="1" height="15" fill="rgb(243,68,21)"/><text x="26.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.10%)</title><rect x="23" y="1876" width="1" height="15" fill="rgb(239,16,34)"/><text x="26.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1892" width="1" height="15" fill="rgb(208,226,21)"/><text x="26.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1908" width="1" height="15" fill="rgb(238,105,10)"/><text x="26.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1924" width="1" height="15" fill="rgb(246,187,29)"/><text x="26.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1940" width="1" height="15" fill="rgb(248,224,2)"/><text x="26.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1956" width="1" height="15" fill="rgb(227,156,17)"/><text x="26.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.10%)</title><rect x="23" y="1972" width="1" height="15" fill="rgb(211,169,6)"/><text x="26.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1988" width="1" height="15" fill="rgb(250,92,46)"/><text x="26.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="2004" width="1" height="15" fill="rgb(218,145,33)"/><text x="26.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="2020" width="1" height="15" fill="rgb(251,212,52)"/><text x="26.00" y="2030.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="2036" width="1" height="15" fill="rgb(228,182,22)"/><text x="26.00" y="2046.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="2052" width="1" height="15" fill="rgb(234,120,24)"/><text x="26.00" y="2062.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(243,155,37)"/><text x="27.00" y="638.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(229,112,34)"/><text x="27.00" y="654.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(251,8,8)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.10%)</title><rect x="26" y="900" width="1" height="15" fill="rgb(212,96,50)"/><text x="29.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(228,121,50)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(218,68,39)"/><text x="29.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(242,194,41)"/><text x="29.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(245,84,36)"/><text x="29.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(233,214,31)"/><text x="29.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.10%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(219,61,36)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(224,13,47)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(249,117,20)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(248,76,2)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(244,20,47)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(219,40,4)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.10%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(234,120,31)"/><text x="29.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(246,8,54)"/><text x="29.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(218,130,44)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(235,18,25)"/><text x="29.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(238,90,29)"/><text x="29.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(234,31,8)"/><text x="29.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(210,105,4)"/><text x="29.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(213,124,38)"/><text x="29.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1220" width="1" height="15" fill="rgb(233,64,14)"/><text x="29.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 0.78%)</title><rect x="19" y="244" width="9" height="15" fill="rgb(224,192,27)"/><text x="22.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="19" y="260" width="9" height="15" fill="rgb(247,175,5)"/><text x="22.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="19" y="276" width="9" height="15" fill="rgb(245,102,47)"/><text x="22.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="19" y="292" width="9" height="15" fill="rgb(205,88,7)"/><text x="22.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.78%)</title><rect x="19" y="308" width="9" height="15" fill="rgb(222,220,25)"/><text x="22.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.78%)</title><rect x="19" y="324" width="9" height="15" fill="rgb(215,8,14)"/><text x="22.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.29%)</title><rect x="24" y="340" width="4" height="15" fill="rgb(228,140,17)"/><text x="27.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="356" width="4" height="15" fill="rgb(252,192,28)"/><text x="27.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="372" width="4" height="15" fill="rgb(218,4,13)"/><text x="27.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="388" width="4" height="15" fill="rgb(250,17,18)"/><text x="27.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="404" width="4" height="15" fill="rgb(215,35,43)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="420" width="4" height="15" fill="rgb(214,183,54)"/><text x="27.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="436" width="4" height="15" fill="rgb(215,101,21)"/><text x="27.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="24" y="452" width="4" height="15" fill="rgb(222,176,26)"/><text x="27.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="468" width="4" height="15" fill="rgb(252,165,20)"/><text x="27.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.29%)</title><rect x="24" y="484" width="4" height="15" fill="rgb(219,65,10)"/><text x="27.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="500" width="4" height="15" fill="rgb(250,114,42)"/><text x="27.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="516" width="4" height="15" fill="rgb(224,189,23)"/><text x="27.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="532" width="4" height="15" fill="rgb(252,90,36)"/><text x="27.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="24" y="548" width="4" height="15" fill="rgb(219,55,46)"/><text x="27.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="564" width="4" height="15" fill="rgb(211,80,45)"/><text x="27.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.29%)</title><rect x="24" y="580" width="4" height="15" fill="rgb(244,168,28)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="596" width="4" height="15" fill="rgb(228,103,27)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="24" y="612" width="4" height="15" fill="rgb(235,124,13)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="628" width="2" height="15" fill="rgb(209,18,5)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="26" y="644" width="2" height="15" fill="rgb(236,183,31)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="660" width="2" height="15" fill="rgb(227,105,19)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.20%)</title><rect x="26" y="676" width="2" height="15" fill="rgb(207,196,40)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="692" width="2" height="15" fill="rgb(205,116,46)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="708" width="2" height="15" fill="rgb(250,112,18)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="724" width="2" height="15" fill="rgb(211,134,37)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="26" y="740" width="2" height="15" fill="rgb(227,108,24)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="756" width="2" height="15" fill="rgb(215,89,12)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.20%)</title><rect x="26" y="772" width="2" height="15" fill="rgb(237,168,0)"/><text x="29.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(235,95,1)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(237,183,31)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(238,153,24)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(209,55,49)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(248,99,49)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(212,18,5)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(253,87,41)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.10%)</title><rect x="27" y="900" width="1" height="15" fill="rgb(216,50,44)"/><text x="30.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="916" width="1" height="15" fill="rgb(230,170,23)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="932" width="1" height="15" fill="rgb(224,165,42)"/><text x="30.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="948" width="1" height="15" fill="rgb(244,124,52)"/><text x="30.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="964" width="1" height="15" fill="rgb(232,218,53)"/><text x="30.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="980" width="1" height="15" fill="rgb(238,150,52)"/><text x="30.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="996" width="1" height="15" fill="rgb(205,15,19)"/><text x="30.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="1012" width="1" height="15" fill="rgb(218,14,19)"/><text x="30.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1028" width="1" height="15" fill="rgb(240,120,17)"/><text x="30.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py) (1 samples, 0.10%)</title><rect x="27" y="1044" width="1" height="15" fill="rgb(207,44,14)"/><text x="30.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1060" width="1" height="15" fill="rgb(225,37,48)"/><text x="30.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1076" width="1" height="15" fill="rgb(209,0,13)"/><text x="30.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1092" width="1" height="15" fill="rgb(218,79,38)"/><text x="30.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1108" width="1" height="15" fill="rgb(224,41,54)"/><text x="30.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1124" width="1" height="15" fill="rgb(217,228,5)"/><text x="30.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="1140" width="1" height="15" fill="rgb(223,175,42)"/><text x="30.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1156" width="1" height="15" fill="rgb(231,107,15)"/><text x="30.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py) (1 samples, 0.10%)</title><rect x="27" y="1172" width="1" height="15" fill="rgb(245,32,32)"/><text x="30.00" y="1182.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1188" width="1" height="15" fill="rgb(221,164,9)"/><text x="30.00" y="1198.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1204" width="1" height="15" fill="rgb(224,203,40)"/><text x="30.00" y="1214.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1220" width="1" height="15" fill="rgb(230,46,38)"/><text x="30.00" y="1230.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="1236" width="1" height="15" fill="rgb(207,222,39)"/><text x="30.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1252" width="1" height="15" fill="rgb(254,105,3)"/><text x="30.00" y="1262.50"></text></g><g><title>&lt;module&gt; (OpenSSL/_util.py) (1 samples, 0.10%)</title><rect x="27" y="1268" width="1" height="15" fill="rgb(231,218,43)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1284" width="1" height="15" fill="rgb(218,141,28)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1300" width="1" height="15" fill="rgb(250,64,38)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1316" width="1" height="15" fill="rgb(216,182,44)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="1332" width="1" height="15" fill="rgb(241,144,35)"/><text x="30.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="1348" width="1" height="15" fill="rgb(239,38,36)"/><text x="30.00" y="1358.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.10%)</title><rect x="27" y="1364" width="1" height="15" fill="rgb(222,11,32)"/><text x="30.00" y="1374.50"></text></g><g><title>init_static_locks (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.10%)</title><rect x="27" y="1380" width="1" height="15" fill="rgb(219,86,44)"/><text x="30.00" y="1390.50"></text></g><g><title>_ensure_ffi_initialized (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.10%)</title><rect x="27" y="1396" width="1" height="15" fill="rgb(207,7,27)"/><text x="30.00" y="1406.50"></text></g><g><title>build_conditional_library (cryptography/hazmat/bindings/openssl/binding.py) (1 samples, 0.10%)</title><rect x="27" y="1412" width="1" height="15" fill="rgb(238,121,38)"/><text x="30.00" y="1422.50"></text></g><g><title>0x7f7f2d086ebd (?) (1 samples, 0.10%)</title><rect x="27" y="1428" width="1" height="15" fill="rgb(232,26,16)"/><text x="30.00" y="1438.50"></text></g><g><title>0x7f7f2d08682f (?) (1 samples, 0.10%)</title><rect x="27" y="1444" width="1" height="15" fill="rgb(247,144,24)"/><text x="30.00" y="1454.50"></text></g><g><title>0x7f7f61b70903 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="27" y="1460" width="1" height="15" fill="rgb(249,192,3)"/><text x="30.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.66%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(233,16,45)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.66%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(210,96,43)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.66%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(243,12,46)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 1.66%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(253,29,21)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.66%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(229,19,13)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (17 samples, 1.66%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(243,60,31)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.66%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(233,174,54)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.66%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(232,33,5)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.88%)</title><rect x="19" y="196" width="10" height="15" fill="rgb(231,84,54)"/><text x="22.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.88%)</title><rect x="19" y="212" width="10" height="15" fill="rgb(241,119,28)"/><text x="22.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.88%)</title><rect x="19" y="228" width="10" height="15" fill="rgb(245,62,4)"/><text x="22.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.10%)</title><rect x="28" y="244" width="1" height="15" fill="rgb(205,210,24)"/><text x="31.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(247,84,30)"/><text x="31.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(217,26,28)"/><text x="31.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="292" width="1" height="15" fill="rgb(240,219,11)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="308" width="1" height="15" fill="rgb(214,32,16)"/><text x="31.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="324" width="1" height="15" fill="rgb(215,190,13)"/><text x="31.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(239,93,42)"/><text x="31.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(244,107,12)"/><text x="31.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.10%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(248,88,23)"/><text x="31.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(215,153,40)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="404" width="1" height="15" fill="rgb(243,41,49)"/><text x="31.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="420" width="1" height="15" fill="rgb(231,149,34)"/><text x="31.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="436" width="1" height="15" fill="rgb(225,96,51)"/><text x="31.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="452" width="1" height="15" fill="rgb(234,121,15)"/><text x="31.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.10%)</title><rect x="28" y="468" width="1" height="15" fill="rgb(222,12,32)"/><text x="31.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="484" width="1" height="15" fill="rgb(236,57,5)"/><text x="31.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="500" width="1" height="15" fill="rgb(217,116,31)"/><text x="31.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="516" width="1" height="15" fill="rgb(209,217,18)"/><text x="31.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="532" width="1" height="15" fill="rgb(217,163,42)"/><text x="31.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="548" width="1" height="15" fill="rgb(237,151,1)"/><text x="31.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py) (1 samples, 0.10%)</title><rect x="28" y="564" width="1" height="15" fill="rgb(232,80,47)"/><text x="31.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.10%)</title><rect x="28" y="580" width="1" height="15" fill="rgb(217,24,1)"/><text x="31.00" y="590.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.20%)</title><rect x="33" y="132" width="2" height="15" fill="rgb(217,111,32)"/><text x="36.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="34" y="148" width="1" height="15" fill="rgb(211,84,48)"/><text x="37.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.29%)</title><rect x="33" y="116" width="3" height="15" fill="rgb(205,219,36)"/><text x="36.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="35" y="132" width="1" height="15" fill="rgb(211,164,48)"/><text x="38.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="35" y="148" width="1" height="15" fill="rgb(210,100,46)"/><text x="38.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="35" y="164" width="1" height="15" fill="rgb(233,63,20)"/><text x="38.00" y="174.50"></text></g><g><title>0x7f7f61aa0eb0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="35" y="180" width="1" height="15" fill="rgb(250,207,10)"/><text x="38.00" y="190.50"></text></g><g><title>0x7f7f61a9fb9b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="35" y="196" width="1" height="15" fill="rgb(228,119,35)"/><text x="38.00" y="206.50"></text></g><g><title>0x7f7f21b5eff9 (?) (1 samples, 0.10%)</title><rect x="65" y="212" width="1" height="15" fill="rgb(218,176,29)"/><text x="68.00" y="222.50"></text></g><g><title>0x7f7f21b59ef6 (?) (1 samples, 0.10%)</title><rect x="65" y="228" width="1" height="15" fill="rgb(245,168,32)"/><text x="68.00" y="238.50"></text></g><g><title>0x7f7f21b4e962 (?) (1 samples, 0.10%)</title><rect x="65" y="244" width="1" height="15" fill="rgb(236,41,19)"/><text x="68.00" y="254.50"></text></g><g><title>0x7f7f21b827a7 (?) (1 samples, 0.10%)</title><rect x="65" y="260" width="1" height="15" fill="rgb(211,139,0)"/><text x="68.00" y="270.50"></text></g><g><title>0x7f7f21b82379 (?) (1 samples, 0.10%)</title><rect x="65" y="276" width="1" height="15" fill="rgb(225,81,2)"/><text x="68.00" y="286.50"></text></g><g><title>0x7f7f21fe08b8 (?) (1 samples, 0.10%)</title><rect x="65" y="292" width="1" height="15" fill="rgb(207,154,18)"/><text x="68.00" y="302.50"></text></g><g><title>0x7f7f21fdec7f (?) (1 samples, 0.10%)</title><rect x="65" y="308" width="1" height="15" fill="rgb(236,46,49)"/><text x="68.00" y="318.50"></text></g><g><title>0x7f7f21ff199c (?) (1 samples, 0.10%)</title><rect x="65" y="324" width="1" height="15" fill="rgb(230,63,16)"/><text x="68.00" y="334.50"></text></g><g><title>0x7f7f21d18dc2 (?) (1 samples, 0.10%)</title><rect x="65" y="340" width="1" height="15" fill="rgb(240,215,29)"/><text x="68.00" y="350.50"></text></g><g><title>0x7f7f21d1852c (?) (1 samples, 0.10%)</title><rect x="65" y="356" width="1" height="15" fill="rgb(250,204,1)"/><text x="68.00" y="366.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="71" y="244" width="1" height="15" fill="rgb(218,15,21)"/><text x="74.00" y="254.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="72" y="260" width="1" height="15" fill="rgb(237,51,11)"/><text x="75.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="72" y="276" width="1" height="15" fill="rgb(239,43,22)"/><text x="75.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (7 samples, 0.68%)</title><rect x="66" y="212" width="8" height="15" fill="rgb(250,177,25)"/><text x="69.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.59%)</title><rect x="67" y="228" width="7" height="15" fill="rgb(247,139,25)"/><text x="70.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="72" y="244" width="2" height="15" fill="rgb(243,154,17)"/><text x="75.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="73" y="260" width="1" height="15" fill="rgb(243,133,34)"/><text x="76.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="80" y="260" width="1" height="15" fill="rgb(237,108,15)"/><text x="83.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="81" y="260" width="1" height="15" fill="rgb(240,77,7)"/><text x="84.00" y="270.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="81" y="276" width="1" height="15" fill="rgb(228,46,10)"/><text x="84.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="83" y="292" width="1" height="15" fill="rgb(246,138,26)"/><text x="86.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="83" y="308" width="1" height="15" fill="rgb(230,73,36)"/><text x="86.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="83" y="324" width="1" height="15" fill="rgb(240,137,23)"/><text x="86.00" y="334.50"></text></g><g><title>0x7f7f61aa2040 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="83" y="340" width="1" height="15" fill="rgb(243,4,24)"/><text x="86.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="84" y="340" width="3" height="15" fill="rgb(239,171,53)"/><text x="87.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="86" y="356" width="1" height="15" fill="rgb(212,106,33)"/><text x="89.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="86" y="372" width="1" height="15" fill="rgb(217,89,6)"/><text x="89.00" y="382.50"></text></g><g><title>0x7f7f21b260f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="183" y="356" width="4" height="15" fill="rgb(251,193,15)"/><text x="186.00" y="366.50"></text></g><g><title>0x7f7f5156d7a0 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="187" y="356" width="1" height="15" fill="rgb(249,134,20)"/><text x="190.00" y="366.50"></text></g><g><title>0x7f7f61aa0906 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="188" y="356" width="4" height="15" fill="rgb(225,11,12)"/><text x="191.00" y="366.50"></text></g><g><title>0x7f7f61aa090e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="192" y="356" width="1" height="15" fill="rgb(225,64,5)"/><text x="195.00" y="366.50"></text></g><g><title>0x7f7f61aa0929 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="193" y="356" width="1" height="15" fill="rgb(205,102,30)"/><text x="196.00" y="366.50"></text></g><g><title>0x7f7f61aa092c (libc-2.29.so) (3 samples, 0.29%)</title><rect x="194" y="356" width="4" height="15" fill="rgb(241,97,34)"/><text x="197.00" y="366.50"></text></g><g><title>0x7f7f61aa0945 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="198" y="356" width="4" height="15" fill="rgb(241,57,52)"/><text x="201.00" y="366.50"></text></g><g><title>0x7f7f61aa0961 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="202" y="356" width="2" height="15" fill="rgb(237,1,54)"/><text x="205.00" y="366.50"></text></g><g><title>0x7f7f61aa0965 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="204" y="356" width="2" height="15" fill="rgb(244,55,39)"/><text x="207.00" y="366.50"></text></g><g><title>0x7f7f61aa096a (libc-2.29.so) (2 samples, 0.20%)</title><rect x="206" y="356" width="2" height="15" fill="rgb(227,32,30)"/><text x="209.00" y="366.50"></text></g><g><title>0x7f7f61aa0971 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="208" y="356" width="2" height="15" fill="rgb(242,72,6)"/><text x="211.00" y="366.50"></text></g><g><title>0x7f7f61aa097c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="210" y="356" width="1" height="15" fill="rgb(249,69,45)"/><text x="213.00" y="366.50"></text></g><g><title>0x7f7f61aa0982 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="211" y="356" width="4" height="15" fill="rgb(253,101,23)"/><text x="214.00" y="366.50"></text></g><g><title>0x7f7f61aa0991 (libc-2.29.so) (12 samples, 1.17%)</title><rect x="215" y="356" width="14" height="15" fill="rgb(242,38,38)"/><text x="218.00" y="366.50"></text></g><g><title>0x7f7f61aa0998 (libc-2.29.so) (5 samples, 0.49%)</title><rect x="229" y="356" width="5" height="15" fill="rgb(238,21,10)"/><text x="232.00" y="366.50"></text></g><g><title>0x7f7f61aa0a38 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="234" y="356" width="2" height="15" fill="rgb(213,150,5)"/><text x="237.00" y="366.50"></text></g><g><title>0x7f7f61aa0a41 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="236" y="356" width="2" height="15" fill="rgb(238,109,5)"/><text x="239.00" y="366.50"></text></g><g><title>0x7f7f61aa0a4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="238" y="356" width="1" height="15" fill="rgb(227,4,4)"/><text x="241.00" y="366.50"></text></g><g><title>0x7f7f61aa0a4d (libc-2.29.so) (3 samples, 0.29%)</title><rect x="239" y="356" width="4" height="15" fill="rgb(209,222,19)"/><text x="242.00" y="366.50"></text></g><g><title>0x7f7f61aa0a55 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="243" y="356" width="3" height="15" fill="rgb(222,198,35)"/><text x="246.00" y="366.50"></text></g><g><title>0x7f7f61aa0bc0 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="246" y="356" width="3" height="15" fill="rgb(249,195,14)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f7f61aa0bd8 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="249" y="356" width="3" height="15" fill="rgb(206,115,36)"/><text x="252.00" y="366.50"></text></g><g><title>0x7f7f61aa0be4 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="252" y="356" width="4" height="15" fill="rgb(232,48,48)"/><text x="255.00" y="366.50"></text></g><g><title>0x7f7f61aa0be8 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="256" y="356" width="4" height="15" fill="rgb(217,84,30)"/><text x="259.00" y="366.50"></text></g><g><title>0x7f7f61ac1120 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="260" y="356" width="2" height="15" fill="rgb(234,113,39)"/><text x="263.00" y="366.50"></text></g><g><title>0x7f7f61ac112f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="262" y="356" width="1" height="15" fill="rgb(237,59,4)"/><text x="265.00" y="366.50"></text></g><g><title>0x7f7f61ac1144 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="263" y="356" width="3" height="15" fill="rgb(230,184,33)"/><text x="266.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (37 samples, 3.62%)</title><rect x="266" y="356" width="42" height="15" fill="rgb(239,165,41)"/><text x="269.00" y="366.50">fre..</text></g><g><title>onnxruntime::BFCArena::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="309" y="468" width="2" height="15" fill="rgb(233,182,3)"/><text x="312.00" y="478.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="356" width="4" height="15" fill="rgb(215,138,11)"/><text x="311.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="372" width="4" height="15" fill="rgb(248,190,43)"/><text x="311.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="388" width="4" height="15" fill="rgb(237,66,21)"/><text x="311.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="404" width="4" height="15" fill="rgb(206,158,22)"/><text x="311.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="420" width="4" height="15" fill="rgb(253,104,51)"/><text x="311.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="436" width="4" height="15" fill="rgb(247,31,16)"/><text x="311.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="308" y="452" width="4" height="15" fill="rgb(246,216,0)"/><text x="311.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="311" y="468" width="1" height="15" fill="rgb(214,53,8)"/><text x="314.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="311" y="484" width="1" height="15" fill="rgb(232,179,3)"/><text x="314.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="311" y="500" width="1" height="15" fill="rgb(208,123,13)"/><text x="314.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="311" y="516" width="1" height="15" fill="rgb(215,19,8)"/><text x="314.00" y="526.50"></text></g><g><title>0x7f7f21b25930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="569" y="388" width="2" height="15" fill="rgb(226,185,24)"/><text x="572.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 1.37%)</title><rect x="571" y="388" width="16" height="15" fill="rgb(223,40,52)"/><text x="574.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (11 samples, 1.08%)</title><rect x="575" y="404" width="12" height="15" fill="rgb(217,165,13)"/><text x="578.00" y="414.50"></text></g><g><title>0x7f7f61ac1120 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="619" y="420" width="1" height="15" fill="rgb(248,11,40)"/><text x="622.00" y="430.50"></text></g><g><title>0x7f7f61ac112f (libc-2.29.so) (3 samples, 0.29%)</title><rect x="620" y="420" width="3" height="15" fill="rgb(252,220,7)"/><text x="623.00" y="430.50"></text></g><g><title>0x7f7f61ac114a (libc-2.29.so) (4 samples, 0.39%)</title><rect x="623" y="420" width="5" height="15" fill="rgb(240,62,14)"/><text x="626.00" y="430.50"></text></g><g><title>0x7f7f5156cd50 (libstdc++.so.6.0.28) (3 samples, 0.29%)</title><rect x="630" y="436" width="4" height="15" fill="rgb(251,145,23)"/><text x="633.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 2.83%)</title><rect x="609" y="404" width="34" height="15" fill="rgb(241,109,17)"/><text x="612.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 1.27%)</title><rect x="628" y="420" width="15" height="15" fill="rgb(213,50,44)"/><text x="631.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (8 samples, 0.78%)</title><rect x="634" y="436" width="9" height="15" fill="rgb(218,218,18)"/><text x="637.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (387 samples, 37.83%)</title><rect x="312" y="356" width="446" height="15" fill="rgb(247,95,42)"/><text x="315.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNo..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (182 samples, 17.79%)</title><rect x="548" y="372" width="210" height="15" fill="rgb(238,214,53)"/><text x="551.00" y="382.50">std::_Hashtable&lt;long, std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (148 samples, 14.47%)</title><rect x="587" y="388" width="171" height="15" fill="rgb(249,74,1)"/><text x="590.00" y="398.50">std::_Hashtable&lt;long, ..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (100 samples, 9.78%)</title><rect x="643" y="404" width="115" height="15" fill="rgb(249,179,24)"/><text x="646.00" y="414.50">std::__detail:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (44 samples, 4.30%)</title><rect x="707" y="420" width="51" height="15" fill="rgb(207,142,25)"/><text x="710.00" y="430.50">std::..</text></g><g><title>0x7f7f61ac0d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="780" y="372" width="1" height="15" fill="rgb(243,74,0)"/><text x="783.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 2.35%)</title><rect x="758" y="356" width="28" height="15" fill="rgb(215,228,31)"/><text x="761.00" y="366.50">o..</text></g><g><title>0x7f7f61ac0d97 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="781" y="372" width="5" height="15" fill="rgb(226,34,18)"/><text x="784.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.39%)</title><rect x="786" y="356" width="4" height="15" fill="rgb(238,12,30)"/><text x="789.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 2.74%)</title><rect x="790" y="356" width="33" height="15" fill="rgb(207,8,29)"/><text x="793.00" y="366.50">st..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (671 samples, 65.59%)</title><rect x="84" y="324" width="774" height="15" fill="rgb(244,133,13)"/><text x="87.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (669 samples, 65.40%)</title><rect x="87" y="340" width="771" height="15" fill="rgb(242,132,50)"/><text x="90.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (31 samples, 3.03%)</title><rect x="823" y="356" width="35" height="15" fill="rgb(222,191,0)"/><text x="826.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (18 samples, 1.76%)</title><rect x="838" y="372" width="20" height="15" fill="rgb(229,223,11)"/><text x="841.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (16 samples, 1.56%)</title><rect x="840" y="388" width="18" height="15" fill="rgb(254,6,46)"/><text x="843.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (673 samples, 65.79%)</title><rect x="83" y="276" width="777" height="15" fill="rgb(227,67,28)"/><text x="86.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (672 samples, 65.69%)</title><rect x="84" y="292" width="776" height="15" fill="rgb(243,113,1)"/><text x="87.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (672 samples, 65.69%)</title><rect x="84" y="308" width="776" height="15" fill="rgb(232,181,4)"/><text x="87.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="858" y="324" width="2" height="15" fill="rgb(244,178,20)"/><text x="861.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (675 samples, 65.98%)</title><rect x="82" y="260" width="779" height="15" fill="rgb(245,97,46)"/><text x="85.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="860" y="276" width="1" height="15" fill="rgb(239,77,44)"/><text x="863.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="860" y="292" width="1" height="15" fill="rgb(217,88,6)"/><text x="863.00" y="302.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="862" y="324" width="1" height="15" fill="rgb(239,72,27)"/><text x="865.00" y="334.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="862" y="292" width="2" height="15" fill="rgb(233,188,41)"/><text x="865.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="862" y="308" width="2" height="15" fill="rgb(242,59,48)"/><text x="865.00" y="318.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="863" y="324" width="1" height="15" fill="rgb(212,130,12)"/><text x="866.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="863" y="340" width="1" height="15" fill="rgb(249,96,46)"/><text x="866.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="863" y="356" width="1" height="15" fill="rgb(207,188,23)"/><text x="866.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="861" y="276" width="4" height="15" fill="rgb(219,151,8)"/><text x="864.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="864" y="292" width="1" height="15" fill="rgb(248,50,49)"/><text x="867.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="864" y="308" width="1" height="15" fill="rgb(216,158,23)"/><text x="867.00" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="865" y="276" width="2" height="15" fill="rgb(251,141,6)"/><text x="868.00" y="286.50"></text></g><g><title>0x7f7f61b7e130 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="865" y="292" width="2" height="15" fill="rgb(210,228,20)"/><text x="868.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.59%)</title><rect x="861" y="260" width="7" height="15" fill="rgb(223,169,7)"/><text x="864.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="867" y="276" width="1" height="15" fill="rgb(243,44,16)"/><text x="870.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="868" y="308" width="1" height="15" fill="rgb(233,17,7)"/><text x="871.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="868" y="260" width="4" height="15" fill="rgb(239,48,6)"/><text x="871.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (4 samples, 0.39%)</title><rect x="868" y="276" width="4" height="15" fill="rgb(245,140,7)"/><text x="871.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (4 samples, 0.39%)</title><rect x="868" y="292" width="4" height="15" fill="rgb(221,171,39)"/><text x="871.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (3 samples, 0.29%)</title><rect x="869" y="308" width="3" height="15" fill="rgb(212,191,33)"/><text x="872.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (3 samples, 0.29%)</title><rect x="869" y="324" width="3" height="15" fill="rgb(206,33,26)"/><text x="872.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (3 samples, 0.29%)</title><rect x="869" y="340" width="3" height="15" fill="rgb(226,112,42)"/><text x="872.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (3 samples, 0.29%)</title><rect x="869" y="356" width="3" height="15" fill="rgb(212,158,3)"/><text x="872.00" y="366.50"></text></g><g><title>0x7f7f61aa2281 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="871" y="372" width="1" height="15" fill="rgb(246,221,12)"/><text x="874.00" y="382.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="872" y="260" width="1" height="15" fill="rgb(213,43,5)"/><text x="875.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="873" y="356" width="3" height="15" fill="rgb(250,121,38)"/><text x="876.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="873" y="372" width="3" height="15" fill="rgb(246,154,35)"/><text x="876.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RegionManager::RegionFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="873" y="388" width="3" height="15" fill="rgb(250,130,10)"/><text x="876.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="873" y="308" width="4" height="15" fill="rgb(225,19,13)"/><text x="876.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="873" y="324" width="4" height="15" fill="rgb(227,102,29)"/><text x="876.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="873" y="340" width="4" height="15" fill="rgb(210,152,36)"/><text x="876.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="876" y="356" width="1" height="15" fill="rgb(245,137,41)"/><text x="879.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="876" y="372" width="1" height="15" fill="rgb(237,226,16)"/><text x="879.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (694 samples, 67.84%)</title><rect x="78" y="244" width="800" height="15" fill="rgb(252,194,32)"/><text x="81.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="873" y="260" width="5" height="15" fill="rgb(253,102,49)"/><text x="876.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="873" y="276" width="5" height="15" fill="rgb(212,112,21)"/><text x="876.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="873" y="292" width="5" height="15" fill="rgb(228,72,36)"/><text x="876.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::ReleaseBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="877" y="308" width="1" height="15" fill="rgb(212,23,29)"/><text x="880.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="878" y="244" width="2" height="15" fill="rgb(205,201,46)"/><text x="881.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="878" y="260" width="2" height="15" fill="rgb(228,64,37)"/><text x="881.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="880" y="244" width="2" height="15" fill="rgb(227,19,44)"/><text x="883.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="880" y="260" width="2" height="15" fill="rgb(245,33,14)"/><text x="883.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="880" y="276" width="2" height="15" fill="rgb(217,206,44)"/><text x="883.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (730 samples, 71.36%)</title><rect x="41" y="132" width="842" height="15" fill="rgb(219,194,0)"/><text x="44.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (725 samples, 70.87%)</title><rect x="46" y="148" width="837" height="15" fill="rgb(206,14,31)"/><text x="49.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (722 samples, 70.58%)</title><rect x="50" y="164" width="833" height="15" fill="rgb(243,44,17)"/><text x="53.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (714 samples, 69.79%)</title><rect x="59" y="180" width="824" height="15" fill="rgb(243,209,46)"/><text x="62.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (714 samples, 69.79%)</title><rect x="59" y="196" width="824" height="15" fill="rgb(219,124,33)"/><text x="62.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (701 samples, 68.52%)</title><rect x="74" y="212" width="809" height="15" fill="rgb(241,171,22)"/><text x="77.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (700 samples, 68.43%)</title><rect x="75" y="228" width="808" height="15" fill="rgb(219,226,35)"/><text x="78.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxru..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="882" y="244" width="1" height="15" fill="rgb(223,30,29)"/><text x="885.00" y="254.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (741 samples, 72.43%)</title><rect x="29" y="68" width="855" height="15" fill="rgb(247,89,40)"/><text x="32.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (741 samples, 72.43%)</title><rect x="29" y="84" width="855" height="15" fill="rgb(251,133,20)"/><text x="32.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (741 samples, 72.43%)</title><rect x="29" y="100" width="855" height="15" fill="rgb(252,180,10)"/><text x="32.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (735 samples, 71.85%)</title><rect x="36" y="116" width="848" height="15" fill="rgb(223,3,5)"/><text x="39.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="883" y="132" width="1" height="15" fill="rgb(215,213,44)"/><text x="886.00" y="142.50"></text></g><g><title>0x7f7f225b954f (?) (1 samples, 0.10%)</title><rect x="884" y="244" width="1" height="15" fill="rgb(222,35,51)"/><text x="887.00" y="254.50"></text></g><g><title>0x7f7f225bf65e (?) (1 samples, 0.10%)</title><rect x="884" y="260" width="1" height="15" fill="rgb(243,108,31)"/><text x="887.00" y="270.50"></text></g><g><title>0x7f7f225bf50f (?) (1 samples, 0.10%)</title><rect x="884" y="276" width="1" height="15" fill="rgb(239,148,19)"/><text x="887.00" y="286.50"></text></g><g><title>0x7f7f225c5d6c (?) (1 samples, 0.10%)</title><rect x="884" y="292" width="1" height="15" fill="rgb(223,46,22)"/><text x="887.00" y="302.50"></text></g><g><title>0x7f7f2ba9ccfa (?) (1 samples, 0.10%)</title><rect x="884" y="308" width="1" height="15" fill="rgb(240,108,18)"/><text x="887.00" y="318.50"></text></g><g><title>0x7f7f2baa5daa (?) (1 samples, 0.10%)</title><rect x="884" y="324" width="1" height="15" fill="rgb(216,80,0)"/><text x="887.00" y="334.50"></text></g><g><title>0x7f7f2baa7cf9 (?) (1 samples, 0.10%)</title><rect x="884" y="340" width="1" height="15" fill="rgb(247,176,21)"/><text x="887.00" y="350.50"></text></g><g><title>0x7f7f2baa7ea0 (libgomp.so.1.0.0) (7 samples, 0.68%)</title><rect x="885" y="484" width="8" height="15" fill="rgb(208,214,30)"/><text x="888.00" y="494.50"></text></g><g><title>0x7f7f2baa7ea9 (libgomp.so.1.0.0) (29 samples, 2.83%)</title><rect x="893" y="484" width="34" height="15" fill="rgb(209,206,16)"/><text x="896.00" y="494.50">0x..</text></g><g><title>0x7f7f2baa7eab (libgomp.so.1.0.0) (24 samples, 2.35%)</title><rect x="927" y="484" width="27" height="15" fill="rgb(240,134,30)"/><text x="930.00" y="494.50">0..</text></g><g><title>0x7f7f2baa6ab9 (libgomp.so.1.0.0) (77 samples, 7.53%)</title><rect x="885" y="468" width="89" height="15" fill="rgb(219,28,30)"/><text x="888.00" y="478.50">0x7f7f2baa..</text></g><g><title>0x7f7f2baa7ead (libgomp.so.1.0.0) (17 samples, 1.66%)</title><rect x="954" y="484" width="20" height="15" fill="rgb(244,191,0)"/><text x="957.00" y="494.50"></text></g><g><title>0x7f7f2baa7cf0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="974" y="500" width="1" height="15" fill="rgb(251,224,4)"/><text x="977.00" y="510.50"></text></g><g><title>0x7f7f2baa7cf9 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="975" y="500" width="1" height="15" fill="rgb(212,226,9)"/><text x="978.00" y="510.50"></text></g><g><title>0x7f7f2baa7cfb (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="976" y="500" width="1" height="15" fill="rgb(249,186,31)"/><text x="979.00" y="510.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (82 samples, 8.02%)</title><rect x="884" y="100" width="94" height="15" fill="rgb(232,165,49)"/><text x="887.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 8.02%)</title><rect x="884" y="116" width="94" height="15" fill="rgb(232,47,3)"/><text x="887.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 8.02%)</title><rect x="884" y="132" width="94" height="15" fill="rgb(231,74,41)"/><text x="887.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (82 samples, 8.02%)</title><rect x="884" y="148" width="94" height="15" fill="rgb(242,149,44)"/><text x="887.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (82 samples, 8.02%)</title><rect x="884" y="164" width="94" height="15" fill="rgb(240,63,2)"/><text x="887.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (82 samples, 8.02%)</title><rect x="884" y="180" width="94" height="15" fill="rgb(231,97,18)"/><text x="887.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 8.02%)</title><rect x="884" y="196" width="94" height="15" fill="rgb(241,86,7)"/><text x="887.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 8.02%)</title><rect x="884" y="212" width="94" height="15" fill="rgb(240,182,17)"/><text x="887.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (82 samples, 8.02%)</title><rect x="884" y="228" width="94" height="15" fill="rgb(251,192,33)"/><text x="887.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (81 samples, 7.92%)</title><rect x="885" y="244" width="93" height="15" fill="rgb(234,157,0)"/><text x="888.00" y="254.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (81 samples, 7.92%)</title><rect x="885" y="260" width="93" height="15" fill="rgb(250,115,26)"/><text x="888.00" y="270.50">void pybind..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (81 samples, 7.92%)</title><rect x="885" y="276" width="93" height="15" fill="rgb(253,223,22)"/><text x="888.00" y="286.50">void pybind..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (81 samples, 7.92%)</title><rect x="885" y="292" width="93" height="15" fill="rgb(212,30,45)"/><text x="888.00" y="302.50">pybind11::d..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (81 samples, 7.92%)</title><rect x="885" y="308" width="93" height="15" fill="rgb(206,102,36)"/><text x="888.00" y="318.50">pybind11::d..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (81 samples, 7.92%)</title><rect x="885" y="324" width="93" height="15" fill="rgb(240,73,42)"/><text x="888.00" y="334.50">pybind11::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (81 samples, 7.92%)</title><rect x="885" y="340" width="93" height="15" fill="rgb(214,0,42)"/><text x="888.00" y="350.50">pybind11::a..</text></g><g><title>pybind11::array::~array (numpy.h) (81 samples, 7.92%)</title><rect x="885" y="356" width="93" height="15" fill="rgb(206,119,45)"/><text x="888.00" y="366.50">pybind11::a..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (81 samples, 7.92%)</title><rect x="885" y="372" width="93" height="15" fill="rgb(208,16,48)"/><text x="888.00" y="382.50">pybind11::b..</text></g><g><title>pybind11::object::~object (pytypes.h) (81 samples, 7.92%)</title><rect x="885" y="388" width="93" height="15" fill="rgb(205,102,10)"/><text x="888.00" y="398.50">pybind11::o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (81 samples, 7.92%)</title><rect x="885" y="404" width="93" height="15" fill="rgb(207,75,3)"/><text x="888.00" y="414.50">pybind11::h..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (81 samples, 7.92%)</title><rect x="885" y="420" width="93" height="15" fill="rgb(217,81,3)"/><text x="888.00" y="430.50">RuntimeTree..</text></g><g><title>pybind11::array::size (numpy.h) (81 samples, 7.92%)</title><rect x="885" y="436" width="93" height="15" fill="rgb(216,201,4)"/><text x="888.00" y="446.50">pybind11::a..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (81 samples, 7.92%)</title><rect x="885" y="452" width="93" height="15" fill="rgb(209,8,31)"/><text x="888.00" y="462.50">std::accumu..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.39%)</title><rect x="974" y="468" width="4" height="15" fill="rgb(215,215,41)"/><text x="977.00" y="478.50"></text></g><g><title>0x7f7f2baa5daa (libgomp.so.1.0.0) (4 samples, 0.39%)</title><rect x="974" y="484" width="4" height="15" fill="rgb(242,143,17)"/><text x="977.00" y="494.50"></text></g><g><title>0x7f7f2baa7cfd (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="977" y="500" width="1" height="15" fill="rgb(242,188,39)"/><text x="980.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (83 samples, 8.11%)</title><rect x="884" y="68" width="96" height="15" fill="rgb(205,216,48)"/><text x="887.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (83 samples, 8.11%)</title><rect x="884" y="84" width="96" height="15" fill="rgb(230,172,30)"/><text x="887.00" y="94.50">setup_profi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="978" y="100" width="2" height="15" fill="rgb(208,154,0)"/><text x="981.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="978" y="116" width="2" height="15" fill="rgb(235,206,30)"/><text x="981.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="978" y="132" width="2" height="15" fill="rgb(233,195,43)"/><text x="981.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="978" y="148" width="2" height="15" fill="rgb(214,52,26)"/><text x="981.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="978" y="164" width="2" height="15" fill="rgb(254,60,53)"/><text x="981.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.10%)</title><rect x="978" y="180" width="2" height="15" fill="rgb(244,175,22)"/><text x="981.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.10%)</title><rect x="978" y="196" width="2" height="15" fill="rgb(248,143,46)"/><text x="981.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="212" width="2" height="15" fill="rgb(243,154,29)"/><text x="981.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="228" width="2" height="15" fill="rgb(216,6,13)"/><text x="981.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="244" width="2" height="15" fill="rgb(248,116,33)"/><text x="981.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="978" y="260" width="2" height="15" fill="rgb(247,157,37)"/><text x="981.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="276" width="2" height="15" fill="rgb(220,53,31)"/><text x="981.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.10%)</title><rect x="978" y="292" width="2" height="15" fill="rgb(250,31,28)"/><text x="981.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="308" width="2" height="15" fill="rgb(207,146,45)"/><text x="981.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="324" width="2" height="15" fill="rgb(240,47,53)"/><text x="981.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="340" width="2" height="15" fill="rgb(242,181,36)"/><text x="981.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="978" y="356" width="2" height="15" fill="rgb(227,228,21)"/><text x="981.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="978" y="372" width="2" height="15" fill="rgb(226,53,46)"/><text x="981.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.10%)</title><rect x="978" y="388" width="2" height="15" fill="rgb(237,113,49)"/><text x="981.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.10%)</title><rect x="978" y="404" width="2" height="15" fill="rgb(239,103,37)"/><text x="981.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.10%)</title><rect x="978" y="420" width="2" height="15" fill="rgb(252,124,43)"/><text x="981.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.10%)</title><rect x="978" y="436" width="2" height="15" fill="rgb(215,40,23)"/><text x="981.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.10%)</title><rect x="978" y="452" width="2" height="15" fill="rgb(231,183,2)"/><text x="981.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.10%)</title><rect x="978" y="468" width="2" height="15" fill="rgb(239,74,41)"/><text x="981.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.10%)</title><rect x="978" y="484" width="2" height="15" fill="rgb(231,187,8)"/><text x="981.00" y="494.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.20%)</title><rect x="981" y="116" width="2" height="15" fill="rgb(219,127,32)"/><text x="984.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.20%)</title><rect x="981" y="132" width="2" height="15" fill="rgb(226,86,42)"/><text x="984.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c) (2 samples, 0.20%)</title><rect x="981" y="148" width="2" height="15" fill="rgb(237,175,2)"/><text x="984.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c) (2 samples, 0.20%)</title><rect x="981" y="164" width="2" height="15" fill="rgb(210,222,10)"/><text x="984.00" y="174.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (2 samples, 0.20%)</title><rect x="981" y="180" width="2" height="15" fill="rgb(242,104,52)"/><text x="984.00" y="190.50"></text></g><g><title>0x7f7f61aa0f35 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="982" y="196" width="1" height="15" fill="rgb(224,172,36)"/><text x="985.00" y="206.50"></text></g><g><title>0x7f7f3c0fbd11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="991" y="196" width="1" height="15" fill="rgb(238,134,39)"/><text x="994.00" y="206.50"></text></g><g><title>0x7f7f3c10bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="991" y="180" width="2" height="15" fill="rgb(227,163,21)"/><text x="994.00" y="190.50"></text></g><g><title>0x7f7f3c0fbd7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="992" y="196" width="1" height="15" fill="rgb(248,153,37)"/><text x="995.00" y="206.50"></text></g><g><title>0x7f7f3c0e8bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="992" y="212" width="1" height="15" fill="rgb(253,156,46)"/><text x="995.00" y="222.50"></text></g><g><title>0x7f7f3c0efd60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="992" y="228" width="1" height="15" fill="rgb(253,181,43)"/><text x="995.00" y="238.50"></text></g><g><title>0x7f7f3c10bf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="993" y="180" width="2" height="15" fill="rgb(221,190,25)"/><text x="996.00" y="190.50"></text></g><g><title>0x7f7f3c11a225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="995" y="212" width="1" height="15" fill="rgb(254,152,3)"/><text x="998.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.10%)</title><rect x="995" y="228" width="1" height="15" fill="rgb(227,14,23)"/><text x="998.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.10%)</title><rect x="995" y="244" width="1" height="15" fill="rgb(207,33,4)"/><text x="998.00" y="254.50"></text></g><g><title>0x7f7f3c0fed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="996" y="228" width="2" height="15" fill="rgb(222,54,43)"/><text x="999.00" y="238.50"></text></g><g><title>0x7f7f3c0fe666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="996" y="244" width="2" height="15" fill="rgb(205,124,35)"/><text x="999.00" y="254.50"></text></g><g><title>0x7f7f3c0f42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="996" y="260" width="2" height="15" fill="rgb(234,59,41)"/><text x="999.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.20%)</title><rect x="996" y="276" width="2" height="15" fill="rgb(241,35,20)"/><text x="999.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.20%)</title><rect x="996" y="292" width="2" height="15" fill="rgb(206,165,22)"/><text x="999.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.20%)</title><rect x="996" y="308" width="2" height="15" fill="rgb(233,171,6)"/><text x="999.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.20%)</title><rect x="996" y="324" width="2" height="15" fill="rgb(231,159,53)"/><text x="999.00" y="334.50"></text></g><g><title>0x7f7f3c11a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="996" y="212" width="3" height="15" fill="rgb(250,200,54)"/><text x="999.00" y="222.50"></text></g><g><title>0x7f7f3c0fee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="998" y="228" width="1" height="15" fill="rgb(250,59,10)"/><text x="1001.00" y="238.50"></text></g><g><title>0x7f7f3c0f1f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="998" y="244" width="1" height="15" fill="rgb(222,131,29)"/><text x="1001.00" y="254.50"></text></g><g><title>0x7f7f61ab6e50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="999" y="244" width="1" height="15" fill="rgb(208,73,46)"/><text x="1002.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.10%)</title><rect x="1000" y="244" width="1" height="15" fill="rgb(222,214,35)"/><text x="1003.00" y="254.50"></text></g><g><title>_array_fill_strides (ctors.c) (1 samples, 0.10%)</title><rect x="1004" y="292" width="1" height="15" fill="rgb(221,19,33)"/><text x="1007.00" y="302.50"></text></g><g><title>0x7f7f3c11a592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.59%)</title><rect x="999" y="212" width="7" height="15" fill="rgb(219,167,30)"/><text x="1002.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 0.59%)</title><rect x="999" y="228" width="7" height="15" fill="rgb(234,47,46)"/><text x="1002.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (4 samples, 0.39%)</title><rect x="1001" y="244" width="5" height="15" fill="rgb(232,7,30)"/><text x="1004.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (4 samples, 0.39%)</title><rect x="1001" y="260" width="5" height="15" fill="rgb(208,124,20)"/><text x="1004.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.20%)</title><rect x="1004" y="276" width="2" height="15" fill="rgb(216,2,17)"/><text x="1007.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="1005" y="292" width="1" height="15" fill="rgb(242,60,28)"/><text x="1008.00" y="302.50"></text></g><g><title>0x7f7f3c11a687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1006" y="212" width="4" height="15" fill="rgb(251,85,42)"/><text x="1009.00" y="222.50"></text></g><g><title>0x7f7f3c11a693 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1010" y="212" width="1" height="15" fill="rgb(219,45,25)"/><text x="1013.00" y="222.50"></text></g><g><title>0x7f7f3c11a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="1011" y="212" width="4" height="15" fill="rgb(231,196,54)"/><text x="1014.00" y="222.50"></text></g><g><title>0x7f7f3c11a6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.78%)</title><rect x="1015" y="212" width="10" height="15" fill="rgb(243,83,47)"/><text x="1018.00" y="222.50"></text></g><g><title>0x7f7f3c11a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1025" y="212" width="1" height="15" fill="rgb(206,120,26)"/><text x="1028.00" y="222.50"></text></g><g><title>0x7f7f3c11a6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1026" y="212" width="1" height="15" fill="rgb(239,16,30)"/><text x="1029.00" y="222.50"></text></g><g><title>0x7f7f3c11a6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="1027" y="212" width="4" height="15" fill="rgb(242,22,51)"/><text x="1030.00" y="222.50"></text></g><g><title>0x7f7f3c11a6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1031" y="212" width="2" height="15" fill="rgb(215,176,35)"/><text x="1034.00" y="222.50"></text></g><g><title>0x7f7f3c11a6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1033" y="212" width="1" height="15" fill="rgb(253,183,39)"/><text x="1036.00" y="222.50"></text></g><g><title>0x7f7f3c11a6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1034" y="212" width="1" height="15" fill="rgb(228,111,13)"/><text x="1037.00" y="222.50"></text></g><g><title>0x7f7f3c11a7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1035" y="212" width="1" height="15" fill="rgb(233,117,4)"/><text x="1038.00" y="222.50"></text></g><g><title>PyArray_DATA (ndarraytypes.h) (1 samples, 0.10%)</title><rect x="1036" y="260" width="1" height="15" fill="rgb(218,6,23)"/><text x="1039.00" y="270.50"></text></g><g><title>0x7f7f3c0f2529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="1036" y="228" width="2" height="15" fill="rgb(222,57,18)"/><text x="1039.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.20%)</title><rect x="1036" y="244" width="2" height="15" fill="rgb(232,184,20)"/><text x="1039.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.10%)</title><rect x="1037" y="260" width="1" height="15" fill="rgb(244,187,21)"/><text x="1040.00" y="270.50"></text></g><g><title>0x7f7f3c10bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (39 samples, 3.81%)</title><rect x="995" y="180" width="45" height="15" fill="rgb(248,117,1)"/><text x="998.00" y="190.50">0x7f..</text></g><g><title>0x7f7f3c11b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (39 samples, 3.81%)</title><rect x="995" y="196" width="45" height="15" fill="rgb(244,9,30)"/><text x="998.00" y="206.50">0x7f..</text></g><g><title>0x7f7f3c11ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1036" y="212" width="4" height="15" fill="rgb(209,9,18)"/><text x="1039.00" y="222.50"></text></g><g><title>0x7f7f3c0f25f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1038" y="228" width="2" height="15" fill="rgb(254,186,38)"/><text x="1041.00" y="238.50"></text></g><g><title>0x7f7f3c0f22e0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1038" y="244" width="2" height="15" fill="rgb(243,40,49)"/><text x="1041.00" y="254.50"></text></g><g><title>0x7f7f3c10c002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1040" y="180" width="1" height="15" fill="rgb(242,158,48)"/><text x="1043.00" y="190.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1043" y="212" width="1" height="15" fill="rgb(252,11,11)"/><text x="1046.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1043" y="228" width="1" height="15" fill="rgb(252,134,23)"/><text x="1046.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1043" y="244" width="1" height="15" fill="rgb(249,103,51)"/><text x="1046.00" y="254.50"></text></g><g><title>0x7f7f60cc30a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1043" y="260" width="1" height="15" fill="rgb(233,143,51)"/><text x="1046.00" y="270.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1044" y="212" width="1" height="15" fill="rgb(225,144,43)"/><text x="1047.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.20%)</title><rect x="1045" y="228" width="3" height="15" fill="rgb(237,15,10)"/><text x="1048.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (3 samples, 0.29%)</title><rect x="1045" y="212" width="4" height="15" fill="rgb(226,179,51)"/><text x="1048.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.10%)</title><rect x="1048" y="228" width="1" height="15" fill="rgb(219,20,32)"/><text x="1051.00" y="238.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c) (1 samples, 0.10%)</title><rect x="1048" y="244" width="1" height="15" fill="rgb(221,26,0)"/><text x="1051.00" y="254.50"></text></g><g><title>0x7f7f3c10c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.78%)</title><rect x="1041" y="180" width="9" height="15" fill="rgb(206,119,34)"/><text x="1044.00" y="190.50"></text></g><g><title>array_take (methods.c) (8 samples, 0.78%)</title><rect x="1041" y="196" width="9" height="15" fill="rgb(253,22,2)"/><text x="1044.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="1049" y="212" width="1" height="15" fill="rgb(205,49,35)"/><text x="1052.00" y="222.50"></text></g><g><title>0x7f7f3c10c13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1050" y="180" width="1" height="15" fill="rgb(235,28,45)"/><text x="1053.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="1050" y="196" width="1" height="15" fill="rgb(237,168,54)"/><text x="1053.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="1050" y="212" width="1" height="15" fill="rgb(242,5,14)"/><text x="1053.00" y="222.50"></text></g><g><title>0x7f7f3c10c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1051" y="180" width="1" height="15" fill="rgb(246,25,16)"/><text x="1054.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="1051" y="196" width="1" height="15" fill="rgb(246,58,2)"/><text x="1054.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="1051" y="212" width="1" height="15" fill="rgb(233,113,50)"/><text x="1054.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="1051" y="228" width="1" height="15" fill="rgb(234,126,29)"/><text x="1054.00" y="238.50"></text></g><g><title>0x7f7f3c10c163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1052" y="180" width="1" height="15" fill="rgb(212,173,8)"/><text x="1055.00" y="190.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.20%)</title><rect x="1053" y="212" width="3" height="15" fill="rgb(225,63,28)"/><text x="1056.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.20%)</title><rect x="1053" y="228" width="3" height="15" fill="rgb(206,123,52)"/><text x="1056.00" y="238.50"></text></g><g><title>0x7f7f3c10cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (57 samples, 5.57%)</title><rect x="991" y="164" width="66" height="15" fill="rgb(253,116,7)"/><text x="994.00" y="174.50">0x7f7f3..</text></g><g><title>0x7f7f3c10c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1053" y="180" width="4" height="15" fill="rgb(220,152,14)"/><text x="1056.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.29%)</title><rect x="1053" y="196" width="4" height="15" fill="rgb(251,107,4)"/><text x="1056.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.10%)</title><rect x="1056" y="212" width="1" height="15" fill="rgb(233,153,6)"/><text x="1059.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.10%)</title><rect x="1056" y="228" width="1" height="15" fill="rgb(251,9,19)"/><text x="1059.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="1056" y="244" width="1" height="15" fill="rgb(205,217,21)"/><text x="1059.00" y="254.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1056" y="260" width="1" height="15" fill="rgb(207,193,1)"/><text x="1059.00" y="270.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 0.39%)</title><rect x="1081" y="196" width="5" height="15" fill="rgb(222,196,7)"/><text x="1084.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 0.39%)</title><rect x="1086" y="196" width="4" height="15" fill="rgb(208,78,5)"/><text x="1089.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 0.39%)</title><rect x="1090" y="196" width="5" height="15" fill="rgb(221,184,49)"/><text x="1093.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="1103" y="212" width="3" height="15" fill="rgb(233,25,0)"/><text x="1106.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (13 samples, 1.27%)</title><rect x="1095" y="196" width="15" height="15" fill="rgb(245,32,38)"/><text x="1098.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="1106" y="212" width="4" height="15" fill="rgb(250,51,40)"/><text x="1109.00" y="222.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.10%)</title><rect x="1109" y="228" width="1" height="15" fill="rgb(234,178,50)"/><text x="1112.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.29%)</title><rect x="1110" y="196" width="3" height="15" fill="rgb(216,173,18)"/><text x="1113.00" y="206.50"></text></g><g><title>0x7f7f61ab6e50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1124" y="212" width="1" height="15" fill="rgb(231,108,24)"/><text x="1127.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (16 samples, 1.56%)</title><rect x="1113" y="196" width="19" height="15" fill="rgb(239,74,40)"/><text x="1116.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (6 samples, 0.59%)</title><rect x="1125" y="212" width="7" height="15" fill="rgb(253,67,2)"/><text x="1128.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (5 samples, 0.49%)</title><rect x="1126" y="228" width="6" height="15" fill="rgb(229,139,16)"/><text x="1129.00" y="238.50"></text></g><g><title>PyArray_BoolConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1135" y="228" width="1" height="15" fill="rgb(230,154,39)"/><text x="1138.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 0.49%)</title><rect x="1132" y="196" width="6" height="15" fill="rgb(248,18,36)"/><text x="1135.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.29%)</title><rect x="1134" y="212" width="4" height="15" fill="rgb(219,115,11)"/><text x="1137.00" y="222.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1136" y="228" width="2" height="15" fill="rgb(241,106,7)"/><text x="1139.00" y="238.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (83 samples, 8.11%)</title><rect x="1057" y="164" width="96" height="15" fill="rgb(248,61,47)"/><text x="1060.00" y="174.50">_validate_X..</text></g><g><title>check_array (sklearn/utils/validation.py) (81 samples, 7.92%)</title><rect x="1059" y="180" width="94" height="15" fill="rgb(227,178,54)"/><text x="1062.00" y="190.50">check_array..</text></g><g><title>simplefilter (warnings.py) (13 samples, 1.27%)</title><rect x="1138" y="196" width="15" height="15" fill="rgb(244,195,30)"/><text x="1141.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (9 samples, 0.88%)</title><rect x="1142" y="212" width="11" height="15" fill="rgb(205,86,20)"/><text x="1145.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (2 samples, 0.20%)</title><rect x="1153" y="180" width="2" height="15" fill="rgb(211,221,32)"/><text x="1156.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.10%)</title><rect x="1154" y="196" width="1" height="15" fill="rgb(247,1,54)"/><text x="1157.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="1154" y="212" width="1" height="15" fill="rgb(212,152,13)"/><text x="1157.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.29%)</title><rect x="1153" y="164" width="3" height="15" fill="rgb(246,205,11)"/><text x="1156.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.10%)</title><rect x="1155" y="180" width="1" height="15" fill="rgb(239,167,3)"/><text x="1158.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (6 samples, 0.59%)</title><rect x="1178" y="196" width="7" height="15" fill="rgb(218,32,33)"/><text x="1181.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (27 samples, 2.64%)</title><rect x="1156" y="164" width="31" height="15" fill="rgb(230,162,42)"/><text x="1159.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (21 samples, 2.05%)</title><rect x="1163" y="180" width="24" height="15" fill="rgb(232,170,29)"/><text x="1166.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.20%)</title><rect x="1185" y="196" width="2" height="15" fill="rgb(231,14,27)"/><text x="1188.00" y="206.50"></text></g><g><title>all (1,023 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,133,6)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (1,023 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(235,64,33)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (182 samples, 17.79%)</title><rect x="980" y="68" width="210" height="15" fill="rgb(210,79,9)"/><text x="983.00" y="78.50">profile_skl (bench_Decision..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (182 samples, 17.79%)</title><rect x="980" y="84" width="210" height="15" fill="rgb(218,9,36)"/><text x="983.00" y="94.50">setup_profile (bench_Decisi..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (182 samples, 17.79%)</title><rect x="980" y="100" width="210" height="15" fill="rgb(234,86,24)"/><text x="983.00" y="110.50">profile (bench_DecisionTree..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (179 samples, 17.50%)</title><rect x="983" y="116" width="207" height="15" fill="rgb(243,109,50)"/><text x="986.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 17.20%)</title><rect x="986" y="132" width="204" height="15" fill="rgb(210,48,52)"/><text x="989.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_be..</text></g><g><title>predict (sklearn/tree/_classes.py) (175 samples, 17.11%)</title><rect x="988" y="148" width="202" height="15" fill="rgb(243,35,53)"/><text x="991.00" y="158.50">predict (sklearn/tree/_cla..</text></g><g><title>is_classifier (sklearn/base.py) (2 samples, 0.20%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(246,43,48)"/><text x="1190.00" y="174.50"></text></g></g></svg>