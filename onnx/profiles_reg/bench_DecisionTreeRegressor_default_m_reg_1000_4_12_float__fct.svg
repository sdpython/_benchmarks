<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(240,213,45)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(243,142,7)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(219,16,49)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(218,101,43)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(211,88,34)"/><text x="13.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(219,121,51)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(247,4,9)"/><text x="13.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(214,204,53)"/><text x="13.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(235,37,27)"/><text x="13.00" y="1006.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(224,67,18)"/><text x="14.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(236,163,26)"/><text x="14.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.20%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(253,178,2)"/><text x="14.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.20%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(225,198,39)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.20%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(221,100,31)"/><text x="14.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.20%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(235,69,0)"/><text x="14.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.20%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(249,94,34)"/><text x="14.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1012" width="1" height="15" fill="rgb(224,151,1)"/><text x="15.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.10%)</title><rect x="12" y="1028" width="1" height="15" fill="rgb(235,118,20)"/><text x="15.00" y="1038.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="12" y="1044" width="1" height="15" fill="rgb(230,168,33)"/><text x="15.00" y="1054.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.39%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(233,105,17)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.39%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(246,21,6)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.29%)</title><rect x="11" y="868" width="3" height="15" fill="rgb(216,34,17)"/><text x="14.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.29%)</title><rect x="11" y="884" width="3" height="15" fill="rgb(253,84,5)"/><text x="14.00" y="894.50"></text></g><g><title>dist_factory (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(253,29,52)"/><text x="16.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(229,74,7)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(224,91,33)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(230,76,11)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(205,74,44)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(206,102,44)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(254,101,23)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 0.49%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(206,15,44)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(206,26,8)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(218,224,37)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(217,160,29)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(223,80,20)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(236,180,48)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 0.49%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(212,132,53)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(234,182,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(240,153,8)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(216,123,17)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(237,170,14)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(236,102,34)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 0.49%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(234,145,35)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(218,1,28)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(245,46,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(205,31,38)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(240,149,6)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(222,55,15)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 0.49%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(221,1,7)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(223,199,53)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(248,190,0)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(231,53,18)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(227,86,41)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(216,192,5)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(239,226,3)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(232,168,47)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(246,141,41)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.49%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(231,0,39)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(218,223,24)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(227,98,19)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(210,222,34)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.49%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(217,24,2)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.49%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(229,67,51)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.49%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(229,16,10)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="836" width="1" height="15" fill="rgb(228,139,32)"/><text x="17.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="852" width="1" height="15" fill="rgb(224,76,50)"/><text x="17.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="868" width="1" height="15" fill="rgb(217,76,41)"/><text x="17.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="14" y="884" width="1" height="15" fill="rgb(234,77,29)"/><text x="17.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="900" width="1" height="15" fill="rgb(226,3,31)"/><text x="17.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.10%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(253,96,32)"/><text x="17.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(237,63,20)"/><text x="17.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(240,89,22)"/><text x="17.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="964" width="1" height="15" fill="rgb(249,206,15)"/><text x="17.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="980" width="1" height="15" fill="rgb(220,143,14)"/><text x="17.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.10%)</title><rect x="14" y="996" width="1" height="15" fill="rgb(226,22,14)"/><text x="17.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="1012" width="1" height="15" fill="rgb(239,47,28)"/><text x="17.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="1028" width="1" height="15" fill="rgb(218,184,2)"/><text x="17.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="1044" width="1" height="15" fill="rgb(206,19,36)"/><text x="17.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="14" y="1060" width="1" height="15" fill="rgb(247,87,18)"/><text x="17.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="14" y="1076" width="1" height="15" fill="rgb(240,190,42)"/><text x="17.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.10%)</title><rect x="14" y="1092" width="1" height="15" fill="rgb(230,110,19)"/><text x="17.00" y="1102.50"></text></g><g><title>makeHTMLTags (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.10%)</title><rect x="14" y="1108" width="1" height="15" fill="rgb(219,153,37)"/><text x="17.00" y="1118.50"></text></g><g><title>_makeTags (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.10%)</title><rect x="14" y="1124" width="1" height="15" fill="rgb(233,0,54)"/><text x="17.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.10%)</title><rect x="14" y="1140" width="1" height="15" fill="rgb(235,138,34)"/><text x="17.00" y="1150.50"></text></g><g><title>compile (re.py) (1 samples, 0.10%)</title><rect x="14" y="1156" width="1" height="15" fill="rgb(217,12,4)"/><text x="17.00" y="1166.50"></text></g><g><title>_compile (re.py) (1 samples, 0.10%)</title><rect x="14" y="1172" width="1" height="15" fill="rgb(236,38,10)"/><text x="17.00" y="1182.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.10%)</title><rect x="14" y="1188" width="1" height="15" fill="rgb(211,12,39)"/><text x="17.00" y="1198.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.10%)</title><rect x="14" y="1204" width="1" height="15" fill="rgb(219,122,27)"/><text x="17.00" y="1214.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.10%)</title><rect x="14" y="1220" width="1" height="15" fill="rgb(209,24,8)"/><text x="17.00" y="1230.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1236" width="1" height="15" fill="rgb(254,70,47)"/><text x="17.00" y="1246.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.10%)</title><rect x="14" y="1252" width="1" height="15" fill="rgb(219,47,27)"/><text x="17.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1124" width="3" height="15" fill="rgb(225,98,54)"/><text x="18.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1140" width="3" height="15" fill="rgb(226,15,15)"/><text x="18.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1156" width="3" height="15" fill="rgb(221,221,41)"/><text x="18.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="15" y="1172" width="3" height="15" fill="rgb(214,124,47)"/><text x="18.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1188" width="3" height="15" fill="rgb(218,152,1)"/><text x="18.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.20%)</title><rect x="15" y="1204" width="3" height="15" fill="rgb(219,173,52)"/><text x="18.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1220" width="3" height="15" fill="rgb(237,106,33)"/><text x="18.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1236" width="3" height="15" fill="rgb(228,55,4)"/><text x="18.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1252" width="3" height="15" fill="rgb(224,217,15)"/><text x="18.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="15" y="1268" width="3" height="15" fill="rgb(236,192,7)"/><text x="18.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="15" y="1284" width="3" height="15" fill="rgb(228,30,23)"/><text x="18.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.20%)</title><rect x="15" y="1300" width="3" height="15" fill="rgb(215,225,37)"/><text x="18.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.20%)</title><rect x="15" y="1316" width="3" height="15" fill="rgb(210,148,2)"/><text x="18.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (2 samples, 0.20%)</title><rect x="15" y="1332" width="3" height="15" fill="rgb(208,28,6)"/><text x="18.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (2 samples, 0.20%)</title><rect x="15" y="1348" width="3" height="15" fill="rgb(249,119,27)"/><text x="18.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (2 samples, 0.20%)</title><rect x="15" y="1364" width="3" height="15" fill="rgb(237,14,43)"/><text x="18.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (2 samples, 0.20%)</title><rect x="15" y="1380" width="3" height="15" fill="rgb(239,202,6)"/><text x="18.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="484" width="5" height="15" fill="rgb(208,101,18)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="500" width="5" height="15" fill="rgb(254,197,23)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="516" width="5" height="15" fill="rgb(207,120,47)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="532" width="5" height="15" fill="rgb(233,128,50)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.39%)</title><rect x="15" y="548" width="5" height="15" fill="rgb(239,117,33)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="564" width="5" height="15" fill="rgb(206,12,5)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.39%)</title><rect x="15" y="580" width="5" height="15" fill="rgb(249,55,6)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="596" width="5" height="15" fill="rgb(242,21,38)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="612" width="5" height="15" fill="rgb(213,168,35)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="628" width="5" height="15" fill="rgb(211,108,19)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.39%)</title><rect x="15" y="644" width="5" height="15" fill="rgb(211,203,41)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="660" width="5" height="15" fill="rgb(231,43,19)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.39%)</title><rect x="15" y="676" width="5" height="15" fill="rgb(252,161,51)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="692" width="5" height="15" fill="rgb(239,82,1)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="708" width="5" height="15" fill="rgb(217,46,26)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="724" width="5" height="15" fill="rgb(241,82,38)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.39%)</title><rect x="15" y="740" width="5" height="15" fill="rgb(219,152,45)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="756" width="5" height="15" fill="rgb(214,23,11)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.39%)</title><rect x="15" y="772" width="5" height="15" fill="rgb(245,204,47)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="788" width="5" height="15" fill="rgb(249,144,34)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="804" width="5" height="15" fill="rgb(252,213,13)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="820" width="5" height="15" fill="rgb(248,198,23)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.39%)</title><rect x="15" y="836" width="5" height="15" fill="rgb(232,94,31)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="852" width="5" height="15" fill="rgb(243,121,16)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.39%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(218,148,49)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(221,158,26)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(208,224,28)"/><text x="18.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(213,4,11)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(215,28,34)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(216,49,36)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(216,24,11)"/><text x="18.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.39%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(248,188,41)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(231,30,2)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.39%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(222,94,19)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="1028" width="5" height="15" fill="rgb(218,65,26)"/><text x="18.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="1044" width="5" height="15" fill="rgb(218,83,15)"/><text x="18.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="1060" width="5" height="15" fill="rgb(254,47,38)"/><text x="18.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.39%)</title><rect x="15" y="1076" width="5" height="15" fill="rgb(243,183,16)"/><text x="18.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.39%)</title><rect x="15" y="1092" width="5" height="15" fill="rgb(216,127,19)"/><text x="18.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.39%)</title><rect x="15" y="1108" width="5" height="15" fill="rgb(240,87,6)"/><text x="18.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1124" width="2" height="15" fill="rgb(214,129,29)"/><text x="21.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1140" width="2" height="15" fill="rgb(225,129,7)"/><text x="21.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1156" width="2" height="15" fill="rgb(219,129,47)"/><text x="21.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1172" width="2" height="15" fill="rgb(238,192,31)"/><text x="21.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1188" width="2" height="15" fill="rgb(230,32,38)"/><text x="21.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="18" y="1204" width="2" height="15" fill="rgb(235,23,7)"/><text x="21.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1220" width="2" height="15" fill="rgb(238,59,53)"/><text x="21.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.20%)</title><rect x="18" y="1236" width="2" height="15" fill="rgb(237,204,50)"/><text x="21.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1252" width="2" height="15" fill="rgb(217,222,13)"/><text x="21.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1268" width="2" height="15" fill="rgb(217,189,27)"/><text x="21.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1284" width="2" height="15" fill="rgb(226,37,45)"/><text x="21.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1300" width="2" height="15" fill="rgb(212,86,41)"/><text x="21.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1316" width="2" height="15" fill="rgb(254,83,2)"/><text x="21.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="18" y="1332" width="2" height="15" fill="rgb(207,26,50)"/><text x="21.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1348" width="2" height="15" fill="rgb(224,93,37)"/><text x="21.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.20%)</title><rect x="18" y="1364" width="2" height="15" fill="rgb(211,172,4)"/><text x="21.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1380" width="2" height="15" fill="rgb(225,197,39)"/><text x="21.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1396" width="2" height="15" fill="rgb(252,146,28)"/><text x="21.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1412" width="2" height="15" fill="rgb(224,82,20)"/><text x="21.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="18" y="1428" width="2" height="15" fill="rgb(218,146,36)"/><text x="21.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="18" y="1444" width="2" height="15" fill="rgb(210,51,31)"/><text x="21.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.20%)</title><rect x="18" y="1460" width="2" height="15" fill="rgb(239,159,6)"/><text x="21.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.20%)</title><rect x="18" y="1476" width="2" height="15" fill="rgb(231,167,36)"/><text x="21.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.20%)</title><rect x="18" y="1492" width="2" height="15" fill="rgb(243,31,25)"/><text x="21.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.20%)</title><rect x="18" y="1508" width="2" height="15" fill="rgb(227,10,43)"/><text x="21.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.20%)</title><rect x="18" y="1524" width="2" height="15" fill="rgb(254,143,24)"/><text x="21.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.20%)</title><rect x="18" y="1540" width="2" height="15" fill="rgb(220,201,16)"/><text x="21.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.20%)</title><rect x="18" y="1556" width="2" height="15" fill="rgb(232,229,25)"/><text x="21.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.20%)</title><rect x="18" y="1572" width="2" height="15" fill="rgb(252,136,52)"/><text x="21.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="724" width="1" height="15" fill="rgb(239,0,19)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="740" width="1" height="15" fill="rgb(254,48,38)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="756" width="1" height="15" fill="rgb(254,206,13)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="772" width="1" height="15" fill="rgb(218,228,50)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="788" width="1" height="15" fill="rgb(240,5,19)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="804" width="1" height="15" fill="rgb(225,116,20)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="820" width="1" height="15" fill="rgb(245,199,54)"/><text x="23.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="836" width="1" height="15" fill="rgb(226,67,23)"/><text x="23.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="852" width="1" height="15" fill="rgb(231,183,9)"/><text x="23.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="868" width="1" height="15" fill="rgb(209,145,24)"/><text x="23.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="884" width="1" height="15" fill="rgb(253,70,6)"/><text x="23.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="900" width="1" height="15" fill="rgb(236,106,30)"/><text x="23.00" y="910.50"></text></g><g><title>0x7f495105740e (?) (1 samples, 0.10%)</title><rect x="20" y="916" width="1" height="15" fill="rgb(242,210,27)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="932" width="1" height="15" fill="rgb(214,201,31)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="948" width="1" height="15" fill="rgb(245,204,1)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="964" width="1" height="15" fill="rgb(244,181,43)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="980" width="1" height="15" fill="rgb(226,138,36)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="996" width="1" height="15" fill="rgb(236,133,1)"/><text x="23.00" y="1006.50"></text></g><g><title>0x7f4950e10cd2 (?) (1 samples, 0.10%)</title><rect x="20" y="1012" width="1" height="15" fill="rgb(237,40,1)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1028" width="1" height="15" fill="rgb(234,147,20)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1044" width="1" height="15" fill="rgb(218,74,52)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1060" width="1" height="15" fill="rgb(228,160,30)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1076" width="1" height="15" fill="rgb(244,41,21)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1092" width="1" height="15" fill="rgb(217,29,27)"/><text x="23.00" y="1102.50"></text></g><g><title>0x7f49505060e5 (?) (1 samples, 0.10%)</title><rect x="20" y="1108" width="1" height="15" fill="rgb(208,158,27)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1124" width="1" height="15" fill="rgb(241,199,8)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1140" width="1" height="15" fill="rgb(247,40,27)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1156" width="1" height="15" fill="rgb(233,23,39)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1172" width="1" height="15" fill="rgb(221,112,47)"/><text x="23.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1188" width="1" height="15" fill="rgb(251,110,30)"/><text x="23.00" y="1198.50"></text></g><g><title>0x7f495028ae68 (?) (1 samples, 0.10%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(239,139,30)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(231,33,22)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(215,192,5)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(212,55,9)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(213,62,6)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(234,202,24)"/><text x="23.00" y="1294.50"></text></g><g><title>0x7f495001b2fb (?) (1 samples, 0.10%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(210,222,9)"/><text x="23.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(253,25,10)"/><text x="23.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(235,83,44)"/><text x="23.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(222,61,53)"/><text x="23.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(251,103,2)"/><text x="23.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(248,83,22)"/><text x="23.00" y="1390.50"></text></g><g><title>0x7f494fdff153 (?) (1 samples, 0.10%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(241,142,45)"/><text x="23.00" y="1406.50"></text></g><g><title>0x7f494fdfdc13 (?) (1 samples, 0.10%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(243,208,39)"/><text x="23.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1428" width="1" height="15" fill="rgb(211,103,53)"/><text x="23.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1444" width="1" height="15" fill="rgb(253,19,47)"/><text x="23.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1460" width="1" height="15" fill="rgb(223,47,25)"/><text x="23.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(231,191,41)"/><text x="23.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(205,139,26)"/><text x="23.00" y="1502.50"></text></g><g><title>0x7f494fb9a181 (?) (1 samples, 0.10%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(242,74,28)"/><text x="23.00" y="1518.50"></text></g><g><title>0x7f494fb9d1c9 (?) (1 samples, 0.10%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(247,43,18)"/><text x="23.00" y="1534.50"></text></g><g><title>0x7f494fbc9167 (?) (1 samples, 0.10%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(245,94,46)"/><text x="23.00" y="1550.50"></text></g><g><title>0x7f494fbc4b64 (?) (1 samples, 0.10%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(251,20,38)"/><text x="23.00" y="1566.50"></text></g><g><title>0x7f494fba807b (?) (1 samples, 0.10%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(209,140,24)"/><text x="23.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.10%)</title><rect x="20" y="1588" width="1" height="15" fill="rgb(231,76,31)"/><text x="23.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="1604" width="1" height="15" fill="rgb(249,142,31)"/><text x="23.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="1620" width="1" height="15" fill="rgb(242,39,43)"/><text x="23.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="1636" width="1" height="15" fill="rgb(240,178,12)"/><text x="23.00" y="1646.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.10%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(215,205,53)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(251,25,7)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(238,172,54)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(210,131,43)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(236,135,47)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(253,188,29)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(220,23,47)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(231,81,46)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(251,41,41)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(211,85,16)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(242,204,13)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(246,110,34)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.10%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(211,20,28)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(216,47,12)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(232,106,31)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(205,35,8)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(208,59,1)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(205,203,26)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.10%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(245,102,46)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(213,150,41)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(231,10,28)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(236,125,29)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(229,226,28)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(219,227,41)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.10%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(208,22,45)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(211,77,12)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(236,180,27)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(244,217,29)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(231,75,43)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(229,161,49)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(221,143,24)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(236,144,29)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(254,128,20)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(215,34,51)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(213,104,39)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(226,211,40)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.10%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(250,46,49)"/><text x="24.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(209,3,46)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(223,198,53)"/><text x="24.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(218,56,51)"/><text x="24.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(246,212,53)"/><text x="24.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(213,210,10)"/><text x="24.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(213,221,44)"/><text x="24.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1412" width="1" height="15" fill="rgb(237,193,20)"/><text x="24.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1428" width="1" height="15" fill="rgb(236,44,9)"/><text x="24.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1444" width="1" height="15" fill="rgb(206,129,9)"/><text x="24.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1460" width="1" height="15" fill="rgb(210,77,11)"/><text x="24.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1476" width="1" height="15" fill="rgb(216,107,23)"/><text x="24.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.10%)</title><rect x="21" y="1492" width="1" height="15" fill="rgb(252,57,23)"/><text x="24.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(206,95,33)"/><text x="24.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1524" width="1" height="15" fill="rgb(219,127,23)"/><text x="24.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1540" width="1" height="15" fill="rgb(253,130,37)"/><text x="24.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1556" width="1" height="15" fill="rgb(248,76,28)"/><text x="24.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1572" width="1" height="15" fill="rgb(206,209,35)"/><text x="24.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(226,62,19)"/><text x="24.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(243,196,38)"/><text x="24.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(216,151,15)"/><text x="24.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1636" width="1" height="15" fill="rgb(219,43,12)"/><text x="24.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1652" width="1" height="15" fill="rgb(250,0,34)"/><text x="24.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1668" width="1" height="15" fill="rgb(221,79,34)"/><text x="24.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1684" width="1" height="15" fill="rgb(223,127,22)"/><text x="24.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1700" width="1" height="15" fill="rgb(212,214,13)"/><text x="24.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1716" width="1" height="15" fill="rgb(236,218,21)"/><text x="24.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1732" width="1" height="15" fill="rgb(248,127,16)"/><text x="24.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1748" width="1" height="15" fill="rgb(218,81,50)"/><text x="24.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.10%)</title><rect x="21" y="1764" width="1" height="15" fill="rgb(250,114,16)"/><text x="24.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1780" width="1" height="15" fill="rgb(248,127,17)"/><text x="24.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1796" width="1" height="15" fill="rgb(217,70,44)"/><text x="24.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1812" width="1" height="15" fill="rgb(216,221,26)"/><text x="24.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1828" width="1" height="15" fill="rgb(239,152,8)"/><text x="24.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1844" width="1" height="15" fill="rgb(240,133,20)"/><text x="24.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.10%)</title><rect x="21" y="1860" width="1" height="15" fill="rgb(224,29,35)"/><text x="24.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1876" width="1" height="15" fill="rgb(219,18,19)"/><text x="24.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1892" width="1" height="15" fill="rgb(207,121,18)"/><text x="24.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1908" width="1" height="15" fill="rgb(215,150,10)"/><text x="24.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1924" width="1" height="15" fill="rgb(207,169,26)"/><text x="24.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1940" width="1" height="15" fill="rgb(235,181,22)"/><text x="24.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1956" width="1" height="15" fill="rgb(226,10,33)"/><text x="24.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 0.68%)</title><rect x="15" y="340" width="8" height="15" fill="rgb(216,200,47)"/><text x="18.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="15" y="356" width="8" height="15" fill="rgb(237,53,27)"/><text x="18.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="15" y="372" width="8" height="15" fill="rgb(205,174,13)"/><text x="18.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="15" y="388" width="8" height="15" fill="rgb(207,88,15)"/><text x="18.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.68%)</title><rect x="15" y="404" width="8" height="15" fill="rgb(241,164,31)"/><text x="18.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="15" y="420" width="8" height="15" fill="rgb(208,107,48)"/><text x="18.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (7 samples, 0.68%)</title><rect x="15" y="436" width="8" height="15" fill="rgb(210,187,37)"/><text x="18.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="15" y="452" width="8" height="15" fill="rgb(224,80,14)"/><text x="18.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="15" y="468" width="8" height="15" fill="rgb(244,119,30)"/><text x="18.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="484" width="3" height="15" fill="rgb(244,76,43)"/><text x="23.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="20" y="500" width="3" height="15" fill="rgb(212,53,12)"/><text x="23.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="516" width="3" height="15" fill="rgb(252,101,0)"/><text x="23.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.29%)</title><rect x="20" y="532" width="3" height="15" fill="rgb(223,40,13)"/><text x="23.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="548" width="3" height="15" fill="rgb(235,51,54)"/><text x="23.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="564" width="3" height="15" fill="rgb(232,198,41)"/><text x="23.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="580" width="3" height="15" fill="rgb(219,192,9)"/><text x="23.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="20" y="596" width="3" height="15" fill="rgb(210,9,15)"/><text x="23.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="612" width="3" height="15" fill="rgb(238,76,37)"/><text x="23.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.29%)</title><rect x="20" y="628" width="3" height="15" fill="rgb(210,179,50)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="644" width="3" height="15" fill="rgb(226,141,28)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="660" width="3" height="15" fill="rgb(217,228,3)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="676" width="3" height="15" fill="rgb(225,222,53)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="20" y="692" width="3" height="15" fill="rgb(250,98,47)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="708" width="3" height="15" fill="rgb(219,24,2)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (pytz/__init__.py) (1 samples, 0.10%)</title><rect x="22" y="724" width="1" height="15" fill="rgb(211,213,40)"/><text x="25.00" y="734.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.10%)</title><rect x="22" y="740" width="1" height="15" fill="rgb(208,59,9)"/><text x="25.00" y="750.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.10%)</title><rect x="23" y="580" width="1" height="15" fill="rgb(221,25,46)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="596" width="1" height="15" fill="rgb(217,26,6)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="612" width="1" height="15" fill="rgb(251,122,32)"/><text x="26.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="628" width="1" height="15" fill="rgb(240,150,9)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="644" width="1" height="15" fill="rgb(238,88,29)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="660" width="1" height="15" fill="rgb(216,227,5)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="676" width="1" height="15" fill="rgb(246,99,16)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="692" width="1" height="15" fill="rgb(209,138,36)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="708" width="1" height="15" fill="rgb(213,201,40)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.10%)</title><rect x="23" y="724" width="1" height="15" fill="rgb(231,77,22)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="740" width="1" height="15" fill="rgb(207,168,49)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="756" width="1" height="15" fill="rgb(209,173,20)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="772" width="1" height="15" fill="rgb(216,120,39)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="788" width="1" height="15" fill="rgb(229,24,26)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="804" width="1" height="15" fill="rgb(211,159,28)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.10%)</title><rect x="23" y="820" width="1" height="15" fill="rgb(254,41,6)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="836" width="1" height="15" fill="rgb(230,159,47)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="852" width="1" height="15" fill="rgb(226,45,29)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="868" width="1" height="15" fill="rgb(221,133,29)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="884" width="1" height="15" fill="rgb(212,114,23)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(206,53,31)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.10%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(250,0,27)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="932" width="1" height="15" fill="rgb(231,2,13)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="948" width="1" height="15" fill="rgb(219,122,29)"/><text x="26.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(241,72,25)"/><text x="26.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(207,42,25)"/><text x="26.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(253,3,34)"/><text x="26.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(239,1,7)"/><text x="26.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(206,33,18)"/><text x="26.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(246,63,42)"/><text x="26.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.10%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(216,219,22)"/><text x="26.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(231,10,43)"/><text x="26.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1092" width="1" height="15" fill="rgb(244,78,8)"/><text x="26.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1108" width="1" height="15" fill="rgb(223,138,19)"/><text x="26.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(241,165,48)"/><text x="26.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(250,146,25)"/><text x="26.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(219,35,14)"/><text x="26.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 0.88%)</title><rect x="15" y="244" width="11" height="15" fill="rgb(215,138,53)"/><text x="18.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.88%)</title><rect x="15" y="260" width="11" height="15" fill="rgb(205,207,43)"/><text x="18.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.88%)</title><rect x="15" y="276" width="11" height="15" fill="rgb(233,73,2)"/><text x="18.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.88%)</title><rect x="15" y="292" width="11" height="15" fill="rgb(208,109,48)"/><text x="18.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.88%)</title><rect x="15" y="308" width="11" height="15" fill="rgb(227,136,51)"/><text x="18.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.88%)</title><rect x="15" y="324" width="11" height="15" fill="rgb(235,21,48)"/><text x="18.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.20%)</title><rect x="23" y="340" width="3" height="15" fill="rgb(225,18,12)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="356" width="3" height="15" fill="rgb(236,13,37)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="372" width="3" height="15" fill="rgb(229,32,31)"/><text x="26.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="388" width="3" height="15" fill="rgb(253,128,42)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="404" width="3" height="15" fill="rgb(230,218,30)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="420" width="3" height="15" fill="rgb(232,23,25)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="436" width="3" height="15" fill="rgb(225,162,43)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="23" y="452" width="3" height="15" fill="rgb(227,199,53)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="468" width="3" height="15" fill="rgb(223,82,37)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.20%)</title><rect x="23" y="484" width="3" height="15" fill="rgb(217,78,13)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="500" width="3" height="15" fill="rgb(210,32,20)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="516" width="3" height="15" fill="rgb(252,70,12)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="532" width="3" height="15" fill="rgb(241,194,4)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.20%)</title><rect x="23" y="548" width="3" height="15" fill="rgb(249,110,31)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="23" y="564" width="3" height="15" fill="rgb(249,109,23)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.10%)</title><rect x="24" y="580" width="2" height="15" fill="rgb(212,19,26)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="596" width="2" height="15" fill="rgb(218,66,43)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="612" width="2" height="15" fill="rgb(210,159,34)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="628" width="2" height="15" fill="rgb(233,16,21)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="644" width="2" height="15" fill="rgb(254,15,10)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="660" width="2" height="15" fill="rgb(209,32,30)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.10%)</title><rect x="24" y="676" width="2" height="15" fill="rgb(233,73,1)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="692" width="2" height="15" fill="rgb(226,210,52)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="708" width="2" height="15" fill="rgb(214,82,8)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="724" width="2" height="15" fill="rgb(232,107,37)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="740" width="2" height="15" fill="rgb(226,179,35)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="756" width="2" height="15" fill="rgb(222,137,25)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="772" width="2" height="15" fill="rgb(248,113,36)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(244,16,54)"/><text x="27.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(254,74,24)"/><text x="27.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(245,203,46)"/><text x="27.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(244,187,41)"/><text x="27.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(239,159,18)"/><text x="27.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(220,104,11)"/><text x="27.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(207,68,4)"/><text x="27.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.10%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(230,129,15)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(232,98,26)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(226,189,42)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(252,72,47)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(221,26,47)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(248,72,49)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(248,160,39)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(247,165,31)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(235,229,22)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(228,122,6)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(232,102,43)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(241,45,28)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.10%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(240,194,15)"/><text x="27.00" y="1102.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(228,191,29)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.46%)</title><rect x="10" y="68" width="17" height="15" fill="rgb(217,174,47)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.46%)</title><rect x="10" y="84" width="17" height="15" fill="rgb(249,56,12)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.46%)</title><rect x="10" y="100" width="17" height="15" fill="rgb(235,169,5)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 1.46%)</title><rect x="10" y="116" width="17" height="15" fill="rgb(226,145,12)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.46%)</title><rect x="10" y="132" width="17" height="15" fill="rgb(242,224,40)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py) (15 samples, 1.46%)</title><rect x="10" y="148" width="17" height="15" fill="rgb(209,225,38)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.46%)</title><rect x="10" y="164" width="17" height="15" fill="rgb(216,191,44)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 1.46%)</title><rect x="10" y="180" width="17" height="15" fill="rgb(221,12,43)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.98%)</title><rect x="15" y="196" width="12" height="15" fill="rgb(239,185,51)"/><text x="18.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 0.98%)</title><rect x="15" y="212" width="12" height="15" fill="rgb(208,77,29)"/><text x="18.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 0.98%)</title><rect x="15" y="228" width="12" height="15" fill="rgb(206,81,17)"/><text x="18.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.10%)</title><rect x="26" y="244" width="1" height="15" fill="rgb(244,116,38)"/><text x="29.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="260" width="1" height="15" fill="rgb(209,117,30)"/><text x="29.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="276" width="1" height="15" fill="rgb(241,21,41)"/><text x="29.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="292" width="1" height="15" fill="rgb(228,199,31)"/><text x="29.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="308" width="1" height="15" fill="rgb(237,45,39)"/><text x="29.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="324" width="1" height="15" fill="rgb(252,87,17)"/><text x="29.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="340" width="1" height="15" fill="rgb(235,136,2)"/><text x="29.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="356" width="1" height="15" fill="rgb(244,186,3)"/><text x="29.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.10%)</title><rect x="26" y="372" width="1" height="15" fill="rgb(219,212,38)"/><text x="29.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="388" width="1" height="15" fill="rgb(242,162,8)"/><text x="29.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="404" width="1" height="15" fill="rgb(222,187,49)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="420" width="1" height="15" fill="rgb(242,177,0)"/><text x="29.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="436" width="1" height="15" fill="rgb(215,198,41)"/><text x="29.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="452" width="1" height="15" fill="rgb(218,198,8)"/><text x="29.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="468" width="1" height="15" fill="rgb(252,76,10)"/><text x="29.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="484" width="1" height="15" fill="rgb(238,84,25)"/><text x="29.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.10%)</title><rect x="26" y="500" width="1" height="15" fill="rgb(243,165,12)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="516" width="1" height="15" fill="rgb(238,111,1)"/><text x="29.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="532" width="1" height="15" fill="rgb(207,1,32)"/><text x="29.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="548" width="1" height="15" fill="rgb(215,167,9)"/><text x="29.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="564" width="1" height="15" fill="rgb(241,68,19)"/><text x="29.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="580" width="1" height="15" fill="rgb(213,10,32)"/><text x="29.00" y="590.50"></text></g><g><title>0x7f496e136585 (?) (1 samples, 0.10%)</title><rect x="26" y="596" width="1" height="15" fill="rgb(241,50,26)"/><text x="29.00" y="606.50"></text></g><g><title>0x7f496e13c075 (?) (1 samples, 0.10%)</title><rect x="26" y="612" width="1" height="15" fill="rgb(237,192,17)"/><text x="29.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="628" width="1" height="15" fill="rgb(250,135,10)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="644" width="1" height="15" fill="rgb(231,145,35)"/><text x="29.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="660" width="1" height="15" fill="rgb(230,7,0)"/><text x="29.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="676" width="1" height="15" fill="rgb(247,29,47)"/><text x="29.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="692" width="1" height="15" fill="rgb(226,167,30)"/><text x="29.00" y="702.50"></text></g><g><title>0x7f496da73543 (?) (1 samples, 0.10%)</title><rect x="26" y="708" width="1" height="15" fill="rgb(240,15,20)"/><text x="29.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="724" width="1" height="15" fill="rgb(254,153,40)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="740" width="1" height="15" fill="rgb(220,134,17)"/><text x="29.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="756" width="1" height="15" fill="rgb(253,19,40)"/><text x="29.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="772" width="1" height="15" fill="rgb(254,60,38)"/><text x="29.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="788" width="1" height="15" fill="rgb(233,37,12)"/><text x="29.00" y="798.50"></text></g><g><title>0x7f496d848b9c (?) (1 samples, 0.10%)</title><rect x="26" y="804" width="1" height="15" fill="rgb(245,30,8)"/><text x="29.00" y="814.50"></text></g><g><title>0x7f496d84c885 (?) (1 samples, 0.10%)</title><rect x="26" y="820" width="1" height="15" fill="rgb(230,33,11)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="836" width="1" height="15" fill="rgb(206,1,1)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="852" width="1" height="15" fill="rgb(212,70,53)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="868" width="1" height="15" fill="rgb(217,182,34)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="884" width="1" height="15" fill="rgb(243,38,34)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="900" width="1" height="15" fill="rgb(228,53,8)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (secrets.py) (1 samples, 0.10%)</title><rect x="26" y="916" width="1" height="15" fill="rgb(251,129,41)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="932" width="1" height="15" fill="rgb(218,109,4)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="948" width="1" height="15" fill="rgb(211,180,7)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="964" width="1" height="15" fill="rgb(240,53,6)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="980" width="1" height="15" fill="rgb(250,116,22)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="996" width="1" height="15" fill="rgb(248,65,25)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (random.py) (1 samples, 0.10%)</title><rect x="26" y="1012" width="1" height="15" fill="rgb(206,190,41)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1028" width="1" height="15" fill="rgb(229,210,26)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1044" width="1" height="15" fill="rgb(206,133,46)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1060" width="1" height="15" fill="rgb(233,56,36)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1076" width="1" height="15" fill="rgb(218,158,0)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1092" width="1" height="15" fill="rgb(236,194,51)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (bisect.py) (1 samples, 0.10%)</title><rect x="26" y="1108" width="1" height="15" fill="rgb(205,77,28)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1124" width="1" height="15" fill="rgb(231,89,48)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1140" width="1" height="15" fill="rgb(205,87,7)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1156" width="1" height="15" fill="rgb(234,62,7)"/><text x="29.00" y="1166.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1172" width="1" height="15" fill="rgb(220,137,27)"/><text x="29.00" y="1182.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="26" y="1188" width="1" height="15" fill="rgb(242,194,43)"/><text x="29.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="26" y="1204" width="1" height="15" fill="rgb(222,179,34)"/><text x="29.00" y="1214.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="41" y="180" width="1" height="15" fill="rgb(252,204,9)"/><text x="44.00" y="190.50"></text></g><g><title>0x7f493b92dff9 (?) (1 samples, 0.10%)</title><rect x="51" y="212" width="1" height="15" fill="rgb(230,117,26)"/><text x="54.00" y="222.50"></text></g><g><title>0x7f493b928ef6 (?) (1 samples, 0.10%)</title><rect x="51" y="228" width="1" height="15" fill="rgb(242,102,3)"/><text x="54.00" y="238.50"></text></g><g><title>0x7f493b91d962 (?) (1 samples, 0.10%)</title><rect x="51" y="244" width="1" height="15" fill="rgb(249,182,14)"/><text x="54.00" y="254.50"></text></g><g><title>0x7f493b9517a7 (?) (1 samples, 0.10%)</title><rect x="51" y="260" width="1" height="15" fill="rgb(242,35,48)"/><text x="54.00" y="270.50"></text></g><g><title>0x7f493b951379 (?) (1 samples, 0.10%)</title><rect x="51" y="276" width="1" height="15" fill="rgb(228,119,44)"/><text x="54.00" y="286.50"></text></g><g><title>0x7f493bdaf8b8 (?) (1 samples, 0.10%)</title><rect x="51" y="292" width="1" height="15" fill="rgb(231,96,34)"/><text x="54.00" y="302.50"></text></g><g><title>0x7f493bdadc7f (?) (1 samples, 0.10%)</title><rect x="51" y="308" width="1" height="15" fill="rgb(249,127,18)"/><text x="54.00" y="318.50"></text></g><g><title>0x7f493bdc099c (?) (1 samples, 0.10%)</title><rect x="51" y="324" width="1" height="15" fill="rgb(214,39,38)"/><text x="54.00" y="334.50"></text></g><g><title>0x7f493bae8235 (?) (1 samples, 0.10%)</title><rect x="51" y="340" width="1" height="15" fill="rgb(215,224,41)"/><text x="54.00" y="350.50"></text></g><g><title>0x7f493bae7af0 (?) (1 samples, 0.10%)</title><rect x="51" y="356" width="1" height="15" fill="rgb(207,30,34)"/><text x="54.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 0.49%)</title><rect x="52" y="212" width="6" height="15" fill="rgb(244,14,48)"/><text x="55.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="53" y="228" width="5" height="15" fill="rgb(228,43,31)"/><text x="56.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(249,53,6)"/><text x="59.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="57" y="260" width="1" height="15" fill="rgb(212,106,9)"/><text x="60.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="57" y="276" width="1" height="15" fill="rgb(235,83,52)"/><text x="60.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="57" y="292" width="1" height="15" fill="rgb(207,3,21)"/><text x="60.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="59" y="228" width="1" height="15" fill="rgb(215,162,10)"/><text x="62.00" y="238.50"></text></g><g><title>0x7f493b8f4930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="61" y="244" width="2" height="15" fill="rgb(251,46,30)"/><text x="64.00" y="254.50"></text></g><g><title>0x7f497b86f90e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="63" y="244" width="1" height="15" fill="rgb(210,30,11)"/><text x="66.00" y="254.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="65" y="260" width="1" height="15" fill="rgb(217,190,36)"/><text x="68.00" y="270.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="66" y="260" width="1" height="15" fill="rgb(237,71,20)"/><text x="69.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="67" y="308" width="1" height="15" fill="rgb(251,34,36)"/><text x="70.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="67" y="324" width="1" height="15" fill="rgb(252,88,43)"/><text x="70.00" y="334.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="67" y="292" width="2" height="15" fill="rgb(220,135,50)"/><text x="70.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="68" y="308" width="1" height="15" fill="rgb(214,173,12)"/><text x="71.00" y="318.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="68" y="324" width="1" height="15" fill="rgb(244,214,19)"/><text x="71.00" y="334.50"></text></g><g><title>0x7f497b88fd97 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="68" y="340" width="1" height="15" fill="rgb(206,27,43)"/><text x="71.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="69" y="292" width="3" height="15" fill="rgb(237,133,19)"/><text x="72.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="69" y="308" width="3" height="15" fill="rgb(243,185,17)"/><text x="72.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="71" y="324" width="1" height="15" fill="rgb(238,89,51)"/><text x="74.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="71" y="340" width="1" height="15" fill="rgb(237,30,26)"/><text x="74.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="72" y="292" width="1" height="15" fill="rgb(210,17,49)"/><text x="75.00" y="302.50"></text></g><g><title>0x7f497b86f9ea (libc-2.29.so) (1 samples, 0.10%)</title><rect x="72" y="308" width="1" height="15" fill="rgb(226,148,9)"/><text x="75.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="73" y="292" width="1" height="15" fill="rgb(247,184,24)"/><text x="76.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="74" y="292" width="2" height="15" fill="rgb(250,216,52)"/><text x="77.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="75" y="308" width="1" height="15" fill="rgb(233,134,40)"/><text x="78.00" y="318.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="76" y="340" width="1" height="15" fill="rgb(210,95,50)"/><text x="79.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="340" width="2" height="15" fill="rgb(231,82,51)"/><text x="80.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="356" width="2" height="15" fill="rgb(212,44,45)"/><text x="80.00" y="366.50"></text></g><g><title>0x7f493b8f50f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="77" y="372" width="2" height="15" fill="rgb(249,225,25)"/><text x="80.00" y="382.50"></text></g><g><title>0x7f496b33c7a0 (libstdc++.so.6.0.28) (4 samples, 0.39%)</title><rect x="181" y="356" width="5" height="15" fill="rgb(215,171,48)"/><text x="184.00" y="366.50"></text></g><g><title>0x7f497b86f906 (libc-2.29.so) (6 samples, 0.59%)</title><rect x="186" y="356" width="7" height="15" fill="rgb(208,179,49)"/><text x="189.00" y="366.50"></text></g><g><title>0x7f497b86f90e (libc-2.29.so) (2 samples, 0.20%)</title><rect x="193" y="356" width="2" height="15" fill="rgb(205,86,23)"/><text x="196.00" y="366.50"></text></g><g><title>0x7f497b86f91e (libc-2.29.so) (4 samples, 0.39%)</title><rect x="195" y="356" width="5" height="15" fill="rgb(248,220,0)"/><text x="198.00" y="366.50"></text></g><g><title>0x7f497b86f922 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="200" y="356" width="4" height="15" fill="rgb(221,179,41)"/><text x="203.00" y="366.50"></text></g><g><title>0x7f497b86f929 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="204" y="356" width="4" height="15" fill="rgb(253,65,21)"/><text x="207.00" y="366.50"></text></g><g><title>0x7f497b86f92c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="208" y="356" width="1" height="15" fill="rgb(239,64,28)"/><text x="211.00" y="366.50"></text></g><g><title>0x7f497b86f938 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="209" y="356" width="1" height="15" fill="rgb(215,66,43)"/><text x="212.00" y="366.50"></text></g><g><title>0x7f497b86f957 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(242,0,32)"/><text x="213.00" y="366.50"></text></g><g><title>0x7f497b86f961 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="212" y="356" width="3" height="15" fill="rgb(229,24,4)"/><text x="215.00" y="366.50"></text></g><g><title>0x7f497b86f96a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="215" y="356" width="1" height="15" fill="rgb(231,33,16)"/><text x="218.00" y="366.50"></text></g><g><title>0x7f497b86f971 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(206,209,26)"/><text x="219.00" y="366.50"></text></g><g><title>0x7f497b86f975 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="218" y="356" width="1" height="15" fill="rgb(211,221,26)"/><text x="221.00" y="366.50"></text></g><g><title>0x7f497b86f97c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="219" y="356" width="1" height="15" fill="rgb(234,224,54)"/><text x="222.00" y="366.50"></text></g><g><title>0x7f497b86f982 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="220" y="356" width="4" height="15" fill="rgb(219,156,41)"/><text x="223.00" y="366.50"></text></g><g><title>0x7f497b86f991 (libc-2.29.so) (10 samples, 0.98%)</title><rect x="224" y="356" width="11" height="15" fill="rgb(205,40,43)"/><text x="227.00" y="366.50"></text></g><g><title>0x7f497b86f998 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="235" y="356" width="5" height="15" fill="rgb(248,80,34)"/><text x="238.00" y="366.50"></text></g><g><title>0x7f497b86fa41 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="240" y="356" width="1" height="15" fill="rgb(222,22,4)"/><text x="243.00" y="366.50"></text></g><g><title>0x7f497b86fa47 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="241" y="356" width="1" height="15" fill="rgb(225,77,16)"/><text x="244.00" y="366.50"></text></g><g><title>0x7f497b86fa4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="242" y="356" width="1" height="15" fill="rgb(210,181,7)"/><text x="245.00" y="366.50"></text></g><g><title>0x7f497b86fa4d (libc-2.29.so) (2 samples, 0.20%)</title><rect x="243" y="356" width="3" height="15" fill="rgb(240,148,31)"/><text x="246.00" y="366.50"></text></g><g><title>0x7f497b86fa4f (libc-2.29.so) (4 samples, 0.39%)</title><rect x="246" y="356" width="4" height="15" fill="rgb(217,51,48)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f497b86fa55 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="250" y="356" width="1" height="15" fill="rgb(242,57,37)"/><text x="253.00" y="366.50"></text></g><g><title>0x7f497b86fbc0 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="251" y="356" width="3" height="15" fill="rgb(252,188,42)"/><text x="254.00" y="366.50"></text></g><g><title>0x7f497b86fbd8 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="254" y="356" width="2" height="15" fill="rgb(234,26,12)"/><text x="257.00" y="366.50"></text></g><g><title>0x7f497b86fbe8 (libc-2.29.so) (5 samples, 0.49%)</title><rect x="256" y="356" width="6" height="15" fill="rgb(249,208,30)"/><text x="259.00" y="366.50"></text></g><g><title>0x7f497b89012b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="262" y="356" width="1" height="15" fill="rgb(238,115,20)"/><text x="265.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (30 samples, 2.93%)</title><rect x="263" y="356" width="35" height="15" fill="rgb(232,169,19)"/><text x="266.00" y="366.50">fr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="298" y="356" width="1" height="15" fill="rgb(219,126,9)"/><text x="301.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="298" y="372" width="1" height="15" fill="rgb(235,60,5)"/><text x="301.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="298" y="388" width="1" height="15" fill="rgb(243,19,10)"/><text x="301.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="298" y="404" width="1" height="15" fill="rgb(238,173,45)"/><text x="301.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="298" y="420" width="1" height="15" fill="rgb(214,173,13)"/><text x="301.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="298" y="436" width="1" height="15" fill="rgb(239,176,0)"/><text x="301.00" y="446.50"></text></g><g><title>0x7f496b33bd50 (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="544" y="404" width="1" height="15" fill="rgb(228,108,17)"/><text x="547.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 1.27%)</title><rect x="542" y="388" width="15" height="15" fill="rgb(236,200,35)"/><text x="545.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 0.98%)</title><rect x="545" y="404" width="12" height="15" fill="rgb(237,169,42)"/><text x="548.00" y="414.50"></text></g><g><title>0x7f497b89012f (libc-2.29.so) (2 samples, 0.20%)</title><rect x="597" y="420" width="3" height="15" fill="rgb(213,78,47)"/><text x="600.00" y="430.50"></text></g><g><title>0x7f497b89014a (libc-2.29.so) (1 samples, 0.10%)</title><rect x="600" y="420" width="1" height="15" fill="rgb(251,224,9)"/><text x="603.00" y="430.50"></text></g><g><title>0x7f496b33bd50 (libstdc++.so.6.0.28) (2 samples, 0.20%)</title><rect x="602" y="436" width="2" height="15" fill="rgb(214,50,49)"/><text x="605.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 2.93%)</title><rect x="586" y="404" width="34" height="15" fill="rgb(214,77,40)"/><text x="589.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (17 samples, 1.66%)</title><rect x="601" y="420" width="19" height="15" fill="rgb(230,14,30)"/><text x="604.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (14 samples, 1.37%)</title><rect x="604" y="436" width="16" height="15" fill="rgb(242,59,46)"/><text x="607.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (393 samples, 38.38%)</title><rect x="299" y="356" width="453" height="15" fill="rgb(217,135,28)"/><text x="302.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNod..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (198 samples, 19.34%)</title><rect x="523" y="372" width="229" height="15" fill="rgb(238,224,23)"/><text x="526.00" y="382.50">std::_Hashtable&lt;long, std::pai..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (169 samples, 16.50%)</title><rect x="557" y="388" width="195" height="15" fill="rgb(236,44,19)"/><text x="560.00" y="398.50">std::_Hashtable&lt;long, std..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (114 samples, 11.13%)</title><rect x="620" y="404" width="132" height="15" fill="rgb(235,1,30)"/><text x="623.00" y="414.50">std::__detail::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (55 samples, 5.37%)</title><rect x="688" y="420" width="64" height="15" fill="rgb(253,91,39)"/><text x="691.00" y="430.50">std::__..</text></g><g><title>0x7f493b8f4850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="759" y="372" width="1" height="15" fill="rgb(217,7,31)"/><text x="762.00" y="382.50"></text></g><g><title>0x7f497b88fd50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="760" y="372" width="1" height="15" fill="rgb(232,9,28)"/><text x="763.00" y="382.50"></text></g><g><title>0x7f497b88fdbf (libc-2.29.so) (1 samples, 0.10%)</title><rect x="761" y="372" width="1" height="15" fill="rgb(220,63,36)"/><text x="764.00" y="382.50"></text></g><g><title>0x7f497b88fdc3 (libc-2.29.so) (2 samples, 0.20%)</title><rect x="762" y="372" width="2" height="15" fill="rgb(220,16,51)"/><text x="765.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (12 samples, 1.17%)</title><rect x="752" y="356" width="13" height="15" fill="rgb(217,219,23)"/><text x="755.00" y="366.50"></text></g><g><title>0x7f497b88fdc5 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="764" y="372" width="1" height="15" fill="rgb(206,194,34)"/><text x="767.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (5 samples, 0.49%)</title><rect x="765" y="356" width="6" height="15" fill="rgb(252,97,30)"/><text x="768.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (40 samples, 3.91%)</title><rect x="771" y="356" width="46" height="15" fill="rgb(245,124,14)"/><text x="774.00" y="366.50">std:..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (666 samples, 65.04%)</title><rect x="76" y="292" width="768" height="15" fill="rgb(211,55,39)"/><text x="79.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (666 samples, 65.04%)</title><rect x="76" y="308" width="768" height="15" fill="rgb(233,90,51)"/><text x="79.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (666 samples, 65.04%)</title><rect x="76" y="324" width="768" height="15" fill="rgb(215,77,45)"/><text x="79.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (664 samples, 64.84%)</title><rect x="79" y="340" width="765" height="15" fill="rgb(215,101,46)"/><text x="82.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 2.25%)</title><rect x="817" y="356" width="27" height="15" fill="rgb(224,68,48)"/><text x="820.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.17%)</title><rect x="830" y="372" width="14" height="15" fill="rgb(232,12,26)"/><text x="833.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 0.98%)</title><rect x="832" y="388" width="12" height="15" fill="rgb(205,10,25)"/><text x="835.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (675 samples, 65.92%)</title><rect x="67" y="260" width="778" height="15" fill="rgb(246,192,14)"/><text x="70.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (675 samples, 65.92%)</title><rect x="67" y="276" width="778" height="15" fill="rgb(245,203,51)"/><text x="70.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::chrono::_V2::system_clock::now (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="844" y="292" width="1" height="15" fill="rgb(208,223,6)"/><text x="847.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.10%)</title><rect x="844" y="308" width="1" height="15" fill="rgb(231,106,2)"/><text x="847.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="845" y="260" width="1" height="15" fill="rgb(214,40,37)"/><text x="848.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (2 samples, 0.20%)</title><rect x="847" y="292" width="3" height="15" fill="rgb(224,159,7)"/><text x="850.00" y="302.50"></text></g><g><title>PyArray_New (ctors.c) (5 samples, 0.49%)</title><rect x="846" y="276" width="6" height="15" fill="rgb(221,70,42)"/><text x="849.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.20%)</title><rect x="850" y="292" width="2" height="15" fill="rgb(222,145,32)"/><text x="853.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (2 samples, 0.20%)</title><rect x="850" y="308" width="2" height="15" fill="rgb(233,72,12)"/><text x="853.00" y="318.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.68%)</title><rect x="846" y="260" width="8" height="15" fill="rgb(249,89,4)"/><text x="849.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="852" y="276" width="2" height="15" fill="rgb(211,161,50)"/><text x="855.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="854" y="260" width="1" height="15" fill="rgb(250,143,9)"/><text x="857.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="854" y="276" width="1" height="15" fill="rgb(210,216,23)"/><text x="857.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (688 samples, 67.19%)</title><rect x="64" y="244" width="792" height="15" fill="rgb(235,147,21)"/><text x="67.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector..</text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="855" y="260" width="1" height="15" fill="rgb(250,204,15)"/><text x="858.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.20%)</title><rect x="856" y="260" width="3" height="15" fill="rgb(254,88,39)"/><text x="859.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="858" y="276" width="1" height="15" fill="rgb(206,115,17)"/><text x="861.00" y="286.50"></text></g><g><title>0x7f497b88fd50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="858" y="292" width="1" height="15" fill="rgb(225,165,27)"/><text x="861.00" y="302.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (723 samples, 70.61%)</title><rect x="27" y="68" width="833" height="15" fill="rgb(247,177,8)"/><text x="30.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (723 samples, 70.61%)</title><rect x="27" y="84" width="833" height="15" fill="rgb(221,33,50)"/><text x="30.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (723 samples, 70.61%)</title><rect x="27" y="100" width="833" height="15" fill="rgb(228,72,23)"/><text x="30.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (723 samples, 70.61%)</title><rect x="27" y="116" width="833" height="15" fill="rgb(211,128,39)"/><text x="30.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (720 samples, 70.31%)</title><rect x="30" y="132" width="830" height="15" fill="rgb(253,212,42)"/><text x="33.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (719 samples, 70.21%)</title><rect x="31" y="148" width="829" height="15" fill="rgb(234,41,37)"/><text x="34.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (717 samples, 70.02%)</title><rect x="34" y="164" width="826" height="15" fill="rgb(210,219,27)"/><text x="37.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (710 samples, 69.34%)</title><rect x="42" y="180" width="818" height="15" fill="rgb(243,163,45)"/><text x="45.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (705 samples, 68.85%)</title><rect x="48" y="196" width="812" height="15" fill="rgb(247,226,0)"/><text x="51.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (696 samples, 67.97%)</title><rect x="58" y="212" width="802" height="15" fill="rgb(225,51,4)"/><text x="61.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (694 samples, 67.77%)</title><rect x="60" y="228" width="800" height="15" fill="rgb(231,161,45)"/><text x="63.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnx..</text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="856" y="244" width="4" height="15" fill="rgb(218,160,12)"/><text x="859.00" y="254.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::reserve (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="859" y="260" width="1" height="15" fill="rgb(239,114,21)"/><text x="862.00" y="270.50"></text></g><g><title>0x7f493c34854f (?) (1 samples, 0.10%)</title><rect x="860" y="244" width="1" height="15" fill="rgb(218,226,48)"/><text x="863.00" y="254.50"></text></g><g><title>0x7f493c34e65e (?) (1 samples, 0.10%)</title><rect x="860" y="260" width="1" height="15" fill="rgb(225,160,11)"/><text x="863.00" y="270.50"></text></g><g><title>0x7f493c34e50f (?) (1 samples, 0.10%)</title><rect x="860" y="276" width="1" height="15" fill="rgb(216,3,34)"/><text x="863.00" y="286.50"></text></g><g><title>0x7f493c354d6c (?) (1 samples, 0.10%)</title><rect x="860" y="292" width="1" height="15" fill="rgb(240,73,14)"/><text x="863.00" y="302.50"></text></g><g><title>0x7f4945875ab9 (?) (1 samples, 0.10%)</title><rect x="860" y="308" width="1" height="15" fill="rgb(207,198,19)"/><text x="863.00" y="318.50"></text></g><g><title>0x7f4945876eab (?) (1 samples, 0.10%)</title><rect x="860" y="324" width="1" height="15" fill="rgb(234,86,50)"/><text x="863.00" y="334.50"></text></g><g><title>0x7f4945876ea0 (libgomp.so.1.0.0) (2 samples, 0.20%)</title><rect x="861" y="484" width="2" height="15" fill="rgb(234,213,42)"/><text x="864.00" y="494.50"></text></g><g><title>0x7f4945876ea9 (libgomp.so.1.0.0) (19 samples, 1.86%)</title><rect x="863" y="484" width="22" height="15" fill="rgb(252,75,13)"/><text x="866.00" y="494.50">0..</text></g><g><title>0x7f4945876eab (libgomp.so.1.0.0) (32 samples, 3.12%)</title><rect x="885" y="484" width="37" height="15" fill="rgb(241,131,0)"/><text x="888.00" y="494.50">0x7..</text></g><g><title>0x7f4945875ab9 (libgomp.so.1.0.0) (75 samples, 7.32%)</title><rect x="861" y="468" width="87" height="15" fill="rgb(242,127,42)"/><text x="864.00" y="478.50">0x7f494587..</text></g><g><title>0x7f4945876ead (libgomp.so.1.0.0) (22 samples, 2.15%)</title><rect x="922" y="484" width="26" height="15" fill="rgb(224,72,8)"/><text x="925.00" y="494.50">0..</text></g><g><title>0x7f4945876cf9 (libgomp.so.1.0.0) (2 samples, 0.20%)</title><rect x="948" y="500" width="2" height="15" fill="rgb(217,25,46)"/><text x="951.00" y="510.50"></text></g><g><title>0x7f4945876cfb (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="950" y="500" width="1" height="15" fill="rgb(247,70,12)"/><text x="953.00" y="510.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (80 samples, 7.81%)</title><rect x="860" y="100" width="92" height="15" fill="rgb(238,106,21)"/><text x="863.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (80 samples, 7.81%)</title><rect x="860" y="116" width="92" height="15" fill="rgb(253,28,47)"/><text x="863.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (80 samples, 7.81%)</title><rect x="860" y="132" width="92" height="15" fill="rgb(214,159,44)"/><text x="863.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (80 samples, 7.81%)</title><rect x="860" y="148" width="92" height="15" fill="rgb(220,211,45)"/><text x="863.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (80 samples, 7.81%)</title><rect x="860" y="164" width="92" height="15" fill="rgb(236,160,49)"/><text x="863.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (80 samples, 7.81%)</title><rect x="860" y="180" width="92" height="15" fill="rgb(247,61,21)"/><text x="863.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (80 samples, 7.81%)</title><rect x="860" y="196" width="92" height="15" fill="rgb(232,149,36)"/><text x="863.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (80 samples, 7.81%)</title><rect x="860" y="212" width="92" height="15" fill="rgb(224,140,13)"/><text x="863.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (80 samples, 7.81%)</title><rect x="860" y="228" width="92" height="15" fill="rgb(207,143,8)"/><text x="863.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (79 samples, 7.71%)</title><rect x="861" y="244" width="91" height="15" fill="rgb(218,209,4)"/><text x="864.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (79 samples, 7.71%)</title><rect x="861" y="260" width="91" height="15" fill="rgb(239,181,7)"/><text x="864.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (79 samples, 7.71%)</title><rect x="861" y="276" width="91" height="15" fill="rgb(228,74,21)"/><text x="864.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (79 samples, 7.71%)</title><rect x="861" y="292" width="91" height="15" fill="rgb(251,58,7)"/><text x="864.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (79 samples, 7.71%)</title><rect x="861" y="308" width="91" height="15" fill="rgb(209,185,37)"/><text x="864.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (79 samples, 7.71%)</title><rect x="861" y="324" width="91" height="15" fill="rgb(222,70,0)"/><text x="864.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (79 samples, 7.71%)</title><rect x="861" y="340" width="91" height="15" fill="rgb(230,221,30)"/><text x="864.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (79 samples, 7.71%)</title><rect x="861" y="356" width="91" height="15" fill="rgb(232,54,20)"/><text x="864.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (79 samples, 7.71%)</title><rect x="861" y="372" width="91" height="15" fill="rgb(212,54,34)"/><text x="864.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (79 samples, 7.71%)</title><rect x="861" y="388" width="91" height="15" fill="rgb(205,11,41)"/><text x="864.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (79 samples, 7.71%)</title><rect x="861" y="404" width="91" height="15" fill="rgb(206,5,54)"/><text x="864.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (79 samples, 7.71%)</title><rect x="861" y="420" width="91" height="15" fill="rgb(237,149,21)"/><text x="864.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (79 samples, 7.71%)</title><rect x="861" y="436" width="91" height="15" fill="rgb(246,59,42)"/><text x="864.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (79 samples, 7.71%)</title><rect x="861" y="452" width="91" height="15" fill="rgb(218,184,40)"/><text x="864.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 0.39%)</title><rect x="948" y="468" width="4" height="15" fill="rgb(240,146,10)"/><text x="951.00" y="478.50"></text></g><g><title>0x7f4945874daa (libgomp.so.1.0.0) (4 samples, 0.39%)</title><rect x="948" y="484" width="4" height="15" fill="rgb(236,109,11)"/><text x="951.00" y="494.50"></text></g><g><title>0x7f4945876cfd (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="951" y="500" width="1" height="15" fill="rgb(233,142,18)"/><text x="954.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (81 samples, 7.91%)</title><rect x="860" y="68" width="93" height="15" fill="rgb(246,216,54)"/><text x="863.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (81 samples, 7.91%)</title><rect x="860" y="84" width="93" height="15" fill="rgb(239,53,36)"/><text x="863.00" y="94.50">setup_profi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="952" y="100" width="1" height="15" fill="rgb(236,208,0)"/><text x="955.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="952" y="116" width="1" height="15" fill="rgb(222,190,25)"/><text x="955.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.10%)</title><rect x="952" y="132" width="1" height="15" fill="rgb(218,215,31)"/><text x="955.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="952" y="148" width="1" height="15" fill="rgb(234,70,45)"/><text x="955.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.10%)</title><rect x="952" y="164" width="1" height="15" fill="rgb(242,126,52)"/><text x="955.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.10%)</title><rect x="952" y="180" width="1" height="15" fill="rgb(247,16,33)"/><text x="955.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.10%)</title><rect x="952" y="196" width="1" height="15" fill="rgb(246,194,7)"/><text x="955.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="212" width="1" height="15" fill="rgb(208,2,24)"/><text x="955.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="228" width="1" height="15" fill="rgb(235,127,42)"/><text x="955.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="244" width="1" height="15" fill="rgb(237,177,25)"/><text x="955.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="952" y="260" width="1" height="15" fill="rgb(226,73,3)"/><text x="955.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="276" width="1" height="15" fill="rgb(229,123,33)"/><text x="955.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.10%)</title><rect x="952" y="292" width="1" height="15" fill="rgb(241,49,52)"/><text x="955.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="308" width="1" height="15" fill="rgb(234,121,42)"/><text x="955.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="324" width="1" height="15" fill="rgb(214,173,23)"/><text x="955.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="340" width="1" height="15" fill="rgb(241,199,51)"/><text x="955.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="952" y="356" width="1" height="15" fill="rgb(216,61,41)"/><text x="955.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="952" y="372" width="1" height="15" fill="rgb(253,16,39)"/><text x="955.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.10%)</title><rect x="952" y="388" width="1" height="15" fill="rgb(244,61,27)"/><text x="955.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.10%)</title><rect x="952" y="404" width="1" height="15" fill="rgb(208,28,54)"/><text x="955.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.10%)</title><rect x="952" y="420" width="1" height="15" fill="rgb(252,50,0)"/><text x="955.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.10%)</title><rect x="952" y="436" width="1" height="15" fill="rgb(210,58,3)"/><text x="955.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.10%)</title><rect x="952" y="452" width="1" height="15" fill="rgb(212,137,47)"/><text x="955.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.10%)</title><rect x="952" y="468" width="1" height="15" fill="rgb(244,52,5)"/><text x="955.00" y="478.50"></text></g><g><title>0x7f4955edaf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="966" y="180" width="2" height="15" fill="rgb(237,8,39)"/><text x="969.00" y="190.50"></text></g><g><title>0x7f4955ecad33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="966" y="196" width="2" height="15" fill="rgb(227,140,36)"/><text x="969.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.20%)</title><rect x="966" y="212" width="2" height="15" fill="rgb(229,113,27)"/><text x="969.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.20%)</title><rect x="966" y="228" width="2" height="15" fill="rgb(240,177,29)"/><text x="969.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="967" y="244" width="1" height="15" fill="rgb(253,117,35)"/><text x="970.00" y="254.50"></text></g><g><title>0x7f4955eea2b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="968" y="196" width="1" height="15" fill="rgb(229,65,13)"/><text x="971.00" y="206.50"></text></g><g><title>0x7f4955ecd604 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="969" y="244" width="2" height="15" fill="rgb(212,175,23)"/><text x="972.00" y="254.50"></text></g><g><title>0x7f4955eb5ce0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="969" y="260" width="2" height="15" fill="rgb(254,207,14)"/><text x="972.00" y="270.50"></text></g><g><title>0x7f4955ec30e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="971" y="260" width="1" height="15" fill="rgb(208,120,2)"/><text x="974.00" y="270.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.10%)</title><rect x="973" y="324" width="1" height="15" fill="rgb(242,192,9)"/><text x="976.00" y="334.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.10%)</title><rect x="973" y="340" width="1" height="15" fill="rgb(208,112,6)"/><text x="976.00" y="350.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="973" y="356" width="1" height="15" fill="rgb(230,32,46)"/><text x="976.00" y="366.50"></text></g><g><title>0x7f4955ee92df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.49%)</title><rect x="969" y="212" width="6" height="15" fill="rgb(222,156,48)"/><text x="972.00" y="222.50"></text></g><g><title>0x7f4955ecdd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.49%)</title><rect x="969" y="228" width="6" height="15" fill="rgb(211,24,53)"/><text x="972.00" y="238.50"></text></g><g><title>0x7f4955ecd666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="971" y="244" width="4" height="15" fill="rgb(243,167,23)"/><text x="974.00" y="254.50"></text></g><g><title>0x7f4955ec32fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="972" y="260" width="3" height="15" fill="rgb(212,151,0)"/><text x="975.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.29%)</title><rect x="972" y="276" width="3" height="15" fill="rgb(230,189,37)"/><text x="975.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.20%)</title><rect x="973" y="292" width="2" height="15" fill="rgb(225,55,33)"/><text x="976.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.20%)</title><rect x="973" y="308" width="2" height="15" fill="rgb(252,107,25)"/><text x="976.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="974" y="324" width="1" height="15" fill="rgb(248,123,17)"/><text x="977.00" y="334.50"></text></g><g><title>0x7f4955ee9441 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="975" y="212" width="1" height="15" fill="rgb(228,2,6)"/><text x="978.00" y="222.50"></text></g><g><title>0x7f4955ee9456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="976" y="212" width="1" height="15" fill="rgb(246,0,50)"/><text x="979.00" y="222.50"></text></g><g><title>0x7f4955ee953e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="977" y="212" width="2" height="15" fill="rgb(230,190,25)"/><text x="980.00" y="222.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="982" y="324" width="1" height="15" fill="rgb(238,213,51)"/><text x="985.00" y="334.50"></text></g><g><title>0x7f4955ee9592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.49%)</title><rect x="979" y="212" width="5" height="15" fill="rgb(240,219,37)"/><text x="982.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (5 samples, 0.49%)</title><rect x="979" y="228" width="5" height="15" fill="rgb(208,31,13)"/><text x="982.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.29%)</title><rect x="981" y="244" width="3" height="15" fill="rgb(215,117,6)"/><text x="984.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 0.29%)</title><rect x="981" y="260" width="3" height="15" fill="rgb(212,153,28)"/><text x="984.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.29%)</title><rect x="981" y="276" width="3" height="15" fill="rgb(241,226,20)"/><text x="984.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (3 samples, 0.29%)</title><rect x="981" y="292" width="3" height="15" fill="rgb(206,46,2)"/><text x="984.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (3 samples, 0.29%)</title><rect x="981" y="308" width="3" height="15" fill="rgb(249,3,46)"/><text x="984.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="983" y="324" width="1" height="15" fill="rgb(208,128,25)"/><text x="986.00" y="334.50"></text></g><g><title>0x7f497b890103 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="983" y="340" width="1" height="15" fill="rgb(215,31,1)"/><text x="986.00" y="350.50"></text></g><g><title>0x7f4955ee9698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="984" y="212" width="4" height="15" fill="rgb(232,127,7)"/><text x="987.00" y="222.50"></text></g><g><title>0x7f4955ee96a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="988" y="212" width="1" height="15" fill="rgb(230,53,13)"/><text x="991.00" y="222.50"></text></g><g><title>0x7f4955ee96a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="989" y="212" width="2" height="15" fill="rgb(209,175,46)"/><text x="992.00" y="222.50"></text></g><g><title>0x7f4955ee96aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.49%)</title><rect x="991" y="212" width="6" height="15" fill="rgb(212,117,24)"/><text x="994.00" y="222.50"></text></g><g><title>0x7f4955ee96ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.68%)</title><rect x="997" y="212" width="8" height="15" fill="rgb(229,121,35)"/><text x="1000.00" y="222.50"></text></g><g><title>0x7f4955ee96b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1005" y="212" width="1" height="15" fill="rgb(242,58,0)"/><text x="1008.00" y="222.50"></text></g><g><title>0x7f4955ee96c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1006" y="212" width="1" height="15" fill="rgb(210,181,15)"/><text x="1009.00" y="222.50"></text></g><g><title>0x7f4955ee96d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1007" y="212" width="2" height="15" fill="rgb(217,163,0)"/><text x="1010.00" y="222.50"></text></g><g><title>0x7f4955ee96d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1009" y="212" width="3" height="15" fill="rgb(249,175,50)"/><text x="1012.00" y="222.50"></text></g><g><title>0x7f4955ee96e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="1012" y="212" width="2" height="15" fill="rgb(240,107,38)"/><text x="1015.00" y="222.50"></text></g><g><title>0x7f4955ee9731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1014" y="212" width="1" height="15" fill="rgb(245,135,50)"/><text x="1017.00" y="222.50"></text></g><g><title>0x7f4955ee97a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1015" y="212" width="2" height="15" fill="rgb(227,223,9)"/><text x="1018.00" y="222.50"></text></g><g><title>0x7f4955ee97b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="1017" y="212" width="2" height="15" fill="rgb(241,139,42)"/><text x="1020.00" y="222.50"></text></g><g><title>0x7f4955ee97b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1019" y="212" width="1" height="15" fill="rgb(229,184,16)"/><text x="1022.00" y="222.50"></text></g><g><title>0x7f4955ee992f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1020" y="212" width="1" height="15" fill="rgb(247,90,9)"/><text x="1023.00" y="222.50"></text></g><g><title>0x7f4955ebe880 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1020" y="228" width="1" height="15" fill="rgb(232,175,41)"/><text x="1023.00" y="238.50"></text></g><g><title>0x7f4955ee9a15 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1021" y="212" width="1" height="15" fill="rgb(206,70,3)"/><text x="1024.00" y="222.50"></text></g><g><title>0x7f4955eea405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (49 samples, 4.79%)</title><rect x="969" y="196" width="57" height="15" fill="rgb(215,20,25)"/><text x="972.00" y="206.50">0x7f49..</text></g><g><title>0x7f4955ee9c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1022" y="212" width="4" height="15" fill="rgb(242,164,22)"/><text x="1025.00" y="222.50"></text></g><g><title>0x7f4955ec1529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1022" y="228" width="4" height="15" fill="rgb(207,56,26)"/><text x="1025.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.29%)</title><rect x="1022" y="244" width="4" height="15" fill="rgb(205,171,21)"/><text x="1025.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.29%)</title><rect x="1022" y="260" width="4" height="15" fill="rgb(215,179,39)"/><text x="1025.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.10%)</title><rect x="1025" y="276" width="1" height="15" fill="rgb(251,226,20)"/><text x="1028.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.10%)</title><rect x="1025" y="292" width="1" height="15" fill="rgb(217,192,40)"/><text x="1028.00" y="302.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.10%)</title><rect x="1025" y="308" width="1" height="15" fill="rgb(250,138,54)"/><text x="1028.00" y="318.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1025" y="324" width="1" height="15" fill="rgb(250,130,48)"/><text x="1028.00" y="334.50"></text></g><g><title>0x7f4955ebf178 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1026" y="212" width="1" height="15" fill="rgb(216,222,18)"/><text x="1029.00" y="222.50"></text></g><g><title>0x7f4955ebf2eb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1027" y="212" width="1" height="15" fill="rgb(242,205,21)"/><text x="1030.00" y="222.50"></text></g><g><title>0x7f4955edafa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (53 samples, 5.18%)</title><rect x="968" y="180" width="61" height="15" fill="rgb(235,215,6)"/><text x="971.00" y="190.50">0x7f49..</text></g><g><title>0x7f4955eea540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1026" y="196" width="3" height="15" fill="rgb(208,65,45)"/><text x="1029.00" y="206.50"></text></g><g><title>0x7f4955ebf2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1028" y="212" width="1" height="15" fill="rgb(222,139,14)"/><text x="1031.00" y="222.50"></text></g><g><title>0x7f4955ebe570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1028" y="228" width="1" height="15" fill="rgb(218,40,34)"/><text x="1031.00" y="238.50"></text></g><g><title>0x7f497b885782 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1030" y="212" width="2" height="15" fill="rgb(242,155,41)"/><text x="1033.00" y="222.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1032" y="212" width="1" height="15" fill="rgb(221,133,10)"/><text x="1035.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (6 samples, 0.59%)</title><rect x="1033" y="228" width="7" height="15" fill="rgb(215,180,13)"/><text x="1036.00" y="238.50"></text></g><g><title>0x7f4955edb05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 0.98%)</title><rect x="1029" y="180" width="12" height="15" fill="rgb(228,111,48)"/><text x="1032.00" y="190.50"></text></g><g><title>array_take (methods.c) (10 samples, 0.98%)</title><rect x="1029" y="196" width="12" height="15" fill="rgb(205,116,28)"/><text x="1032.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (7 samples, 0.68%)</title><rect x="1033" y="212" width="8" height="15" fill="rgb(246,152,47)"/><text x="1036.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.10%)</title><rect x="1040" y="228" width="1" height="15" fill="rgb(247,133,37)"/><text x="1043.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="1040" y="244" width="1" height="15" fill="rgb(219,121,11)"/><text x="1043.00" y="254.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1040" y="260" width="1" height="15" fill="rgb(250,65,26)"/><text x="1043.00" y="270.50"></text></g><g><title>0x7f4955edb13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="1041" y="180" width="2" height="15" fill="rgb(246,119,34)"/><text x="1044.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.20%)</title><rect x="1041" y="196" width="2" height="15" fill="rgb(247,51,47)"/><text x="1044.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.20%)</title><rect x="1041" y="212" width="2" height="15" fill="rgb(249,69,15)"/><text x="1044.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="1042" y="228" width="1" height="15" fill="rgb(222,221,35)"/><text x="1045.00" y="238.50"></text></g><g><title>0x7f4955edb14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="1043" y="180" width="5" height="15" fill="rgb(216,49,21)"/><text x="1046.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (4 samples, 0.39%)</title><rect x="1043" y="196" width="5" height="15" fill="rgb(243,134,5)"/><text x="1046.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (4 samples, 0.39%)</title><rect x="1043" y="212" width="5" height="15" fill="rgb(234,66,13)"/><text x="1046.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (4 samples, 0.39%)</title><rect x="1043" y="228" width="5" height="15" fill="rgb(230,167,53)"/><text x="1046.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.10%)</title><rect x="1047" y="244" width="1" height="15" fill="rgb(220,116,13)"/><text x="1050.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1047" y="260" width="1" height="15" fill="rgb(221,113,34)"/><text x="1050.00" y="270.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.10%)</title><rect x="1048" y="212" width="1" height="15" fill="rgb(244,189,29)"/><text x="1051.00" y="222.50"></text></g><g><title>0x7f4955edbd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (73 samples, 7.13%)</title><rect x="966" y="164" width="84" height="15" fill="rgb(244,187,51)"/><text x="969.00" y="174.50">0x7f4955e..</text></g><g><title>0x7f4955edb328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.20%)</title><rect x="1048" y="180" width="2" height="15" fill="rgb(237,219,16)"/><text x="1051.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (2 samples, 0.20%)</title><rect x="1048" y="196" width="2" height="15" fill="rgb(211,182,13)"/><text x="1051.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.10%)</title><rect x="1049" y="212" width="1" height="15" fill="rgb(247,190,22)"/><text x="1052.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.10%)</title><rect x="1049" y="228" width="1" height="15" fill="rgb(212,141,53)"/><text x="1052.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.10%)</title><rect x="1049" y="244" width="1" height="15" fill="rgb(251,16,0)"/><text x="1052.00" y="254.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.29%)</title><rect x="1083" y="196" width="4" height="15" fill="rgb(248,143,17)"/><text x="1086.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.29%)</title><rect x="1087" y="196" width="3" height="15" fill="rgb(215,34,30)"/><text x="1090.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1101" y="212" width="1" height="15" fill="rgb(231,0,8)"/><text x="1104.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.20%)</title><rect x="1102" y="212" width="2" height="15" fill="rgb(237,184,18)"/><text x="1105.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (13 samples, 1.27%)</title><rect x="1090" y="196" width="15" height="15" fill="rgb(221,189,42)"/><text x="1093.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.10%)</title><rect x="1104" y="212" width="1" height="15" fill="rgb(225,102,44)"/><text x="1107.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (4 samples, 0.39%)</title><rect x="1105" y="196" width="5" height="15" fill="rgb(245,79,30)"/><text x="1108.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (13 samples, 1.27%)</title><rect x="1110" y="196" width="15" height="15" fill="rgb(247,11,38)"/><text x="1113.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (6 samples, 0.59%)</title><rect x="1118" y="212" width="7" height="15" fill="rgb(232,157,50)"/><text x="1121.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (4 samples, 0.39%)</title><rect x="1120" y="228" width="5" height="15" fill="rgb(220,83,3)"/><text x="1123.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.10%)</title><rect x="1125" y="196" width="1" height="15" fill="rgb(253,215,13)"/><text x="1128.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.39%)</title><rect x="1126" y="196" width="5" height="15" fill="rgb(230,44,31)"/><text x="1129.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.29%)</title><rect x="1127" y="212" width="4" height="15" fill="rgb(233,81,7)"/><text x="1130.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="1130" y="228" width="1" height="15" fill="rgb(241,57,33)"/><text x="1133.00" y="238.50"></text></g><g><title>0x7f497b94d151 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1130" y="244" width="1" height="15" fill="rgb(215,76,44)"/><text x="1133.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.10%)</title><rect x="1131" y="196" width="1" height="15" fill="rgb(252,111,5)"/><text x="1134.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (90 samples, 8.79%)</title><rect x="1050" y="164" width="104" height="15" fill="rgb(230,126,12)"/><text x="1053.00" y="174.50">_validate_X_..</text></g><g><title>check_array (sklearn/utils/validation.py) (86 samples, 8.40%)</title><rect x="1055" y="180" width="99" height="15" fill="rgb(228,144,50)"/><text x="1058.00" y="190.50">check_array..</text></g><g><title>simplefilter (warnings.py) (19 samples, 1.86%)</title><rect x="1132" y="196" width="22" height="15" fill="rgb(240,157,14)"/><text x="1135.00" y="206.50">s..</text></g><g><title>_add_filter (warnings.py) (11 samples, 1.07%)</title><rect x="1141" y="212" width="13" height="15" fill="rgb(238,69,52)"/><text x="1144.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.29%)</title><rect x="1154" y="180" width="3" height="15" fill="rgb(238,165,8)"/><text x="1157.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.10%)</title><rect x="1156" y="196" width="1" height="15" fill="rgb(226,77,37)"/><text x="1159.00" y="206.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1157" y="196" width="1" height="15" fill="rgb(230,33,29)"/><text x="1160.00" y="206.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1157" y="212" width="1" height="15" fill="rgb(236,219,10)"/><text x="1160.00" y="222.50"></text></g><g><title>array_subscript (mapping.c) (5 samples, 0.49%)</title><rect x="1154" y="164" width="6" height="15" fill="rgb(207,57,27)"/><text x="1157.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.20%)</title><rect x="1157" y="180" width="3" height="15" fill="rgb(216,209,12)"/><text x="1160.00" y="190.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.10%)</title><rect x="1158" y="196" width="2" height="15" fill="rgb(229,143,17)"/><text x="1161.00" y="206.50"></text></g><g><title>0x7f497b8901ef (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1172" y="196" width="1" height="15" fill="rgb(234,169,8)"/><text x="1175.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.20%)</title><rect x="1173" y="196" width="3" height="15" fill="rgb(234,192,26)"/><text x="1176.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (19 samples, 1.86%)</title><rect x="1160" y="164" width="21" height="15" fill="rgb(214,220,10)"/><text x="1163.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (15 samples, 1.46%)</title><rect x="1164" y="180" width="17" height="15" fill="rgb(237,40,50)"/><text x="1167.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (5 samples, 0.49%)</title><rect x="1176" y="196" width="5" height="15" fill="rgb(238,164,25)"/><text x="1179.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (196 samples, 19.14%)</title><rect x="959" y="132" width="226" height="15" fill="rgb(224,44,14)"/><text x="962.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_bench..</text></g><g><title>predict (sklearn/tree/_classes.py) (195 samples, 19.04%)</title><rect x="960" y="148" width="225" height="15" fill="rgb(221,121,3)"/><text x="963.00" y="158.50">predict (sklearn/tree/_classe..</text></g><g><title>is_classifier (sklearn/base.py) (3 samples, 0.29%)</title><rect x="1181" y="164" width="4" height="15" fill="rgb(227,29,13)"/><text x="1184.00" y="174.50"></text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.20%)</title><rect x="1185" y="132" width="2" height="15" fill="rgb(243,40,1)"/><text x="1188.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (1,023 samples, 99.90%)</title><rect x="10" y="52" width="1178" height="15" fill="rgb(250,140,26)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (204 samples, 19.92%)</title><rect x="953" y="68" width="235" height="15" fill="rgb(230,113,16)"/><text x="956.00" y="78.50">profile_skl (bench_DecisionTree..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (204 samples, 19.92%)</title><rect x="953" y="84" width="235" height="15" fill="rgb(221,225,32)"/><text x="956.00" y="94.50">setup_profile (bench_DecisionTr..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1000_4_12_float_.py) (204 samples, 19.92%)</title><rect x="953" y="100" width="235" height="15" fill="rgb(251,223,1)"/><text x="956.00" y="110.50">profile (bench_DecisionTreeRegr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (201 samples, 19.63%)</title><rect x="957" y="116" width="231" height="15" fill="rgb(218,97,26)"/><text x="960.00" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="1187" y="132" width="1" height="15" fill="rgb(246,60,45)"/><text x="1190.00" y="142.50"></text></g><g><title>0x7f497b94d143 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1187" y="148" width="1" height="15" fill="rgb(217,132,34)"/><text x="1190.00" y="158.50"></text></g><g><title>all (1,024 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,61,7)"/><text x="13.00" y="46.50"></text></g><g><title>__munmap (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1188" y="52" width="2" height="15" fill="rgb(249,224,4)"/><text x="1191.00" y="62.50"></text></g></g></svg>