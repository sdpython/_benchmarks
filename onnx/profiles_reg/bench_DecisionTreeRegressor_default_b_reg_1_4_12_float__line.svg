<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1734" onload="init(evt)" viewBox="0 0 1200 1734" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1734" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1717.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1717.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.45%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(251,128,41)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(205,54,40)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(234,63,43)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(235,97,31)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(206,131,14)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(216,63,19)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(252,203,1)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(206,186,40)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:75) (1 samples, 0.45%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(229,101,13)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(213,113,28)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(233,51,23)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(224,73,16)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(251,105,15)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(211,71,26)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(216,54,21)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(234,226,42)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/defchararray.py:323) (1 samples, 0.45%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(245,189,29)"/><text x="13.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.45%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(216,59,54)"/><text x="13.00" y="526.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(209,113,47)"/><text x="13.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:1) (2 samples, 0.89%)</title><rect x="10" y="148" width="10" height="15" fill="rgb(232,71,4)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="10" y="164" width="10" height="15" fill="rgb(205,23,50)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="10" y="180" width="10" height="15" fill="rgb(223,78,35)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(242,89,9)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(250,196,12)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(221,34,48)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.45%)</title><rect x="15" y="244" width="5" height="15" fill="rgb(224,69,14)"/><text x="18.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="15" y="260" width="5" height="15" fill="rgb(234,194,3)"/><text x="18.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="15" y="276" width="5" height="15" fill="rgb(238,106,40)"/><text x="18.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="15" y="292" width="5" height="15" fill="rgb(215,176,7)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="15" y="308" width="5" height="15" fill="rgb(216,42,2)"/><text x="18.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="15" y="324" width="5" height="15" fill="rgb(210,192,41)"/><text x="18.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="15" y="340" width="5" height="15" fill="rgb(227,48,13)"/><text x="18.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="15" y="356" width="5" height="15" fill="rgb(206,100,38)"/><text x="18.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:24) (1 samples, 0.45%)</title><rect x="15" y="372" width="5" height="15" fill="rgb(237,161,4)"/><text x="18.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="15" y="388" width="5" height="15" fill="rgb(232,130,1)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="15" y="404" width="5" height="15" fill="rgb(233,117,35)"/><text x="18.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="15" y="420" width="5" height="15" fill="rgb(250,152,35)"/><text x="18.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="15" y="436" width="5" height="15" fill="rgb(207,30,48)"/><text x="18.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="15" y="452" width="5" height="15" fill="rgb(227,145,10)"/><text x="18.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py:15) (1 samples, 0.45%)</title><rect x="15" y="468" width="5" height="15" fill="rgb(249,206,15)"/><text x="18.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="15" y="484" width="5" height="15" fill="rgb(207,205,8)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="15" y="500" width="5" height="15" fill="rgb(220,11,17)"/><text x="18.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="15" y="516" width="5" height="15" fill="rgb(249,7,49)"/><text x="18.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="15" y="532" width="5" height="15" fill="rgb(209,212,23)"/><text x="18.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="15" y="548" width="5" height="15" fill="rgb(241,171,37)"/><text x="18.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py:42) (1 samples, 0.45%)</title><rect x="15" y="564" width="5" height="15" fill="rgb(238,195,49)"/><text x="18.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="15" y="580" width="5" height="15" fill="rgb(251,189,17)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="15" y="596" width="5" height="15" fill="rgb(234,35,29)"/><text x="18.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="15" y="612" width="5" height="15" fill="rgb(218,23,24)"/><text x="18.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="15" y="628" width="5" height="15" fill="rgb(215,65,38)"/><text x="18.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="15" y="644" width="5" height="15" fill="rgb(217,111,4)"/><text x="18.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py:15) (1 samples, 0.45%)</title><rect x="15" y="660" width="5" height="15" fill="rgb(210,31,32)"/><text x="18.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="15" y="676" width="5" height="15" fill="rgb(228,49,7)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="15" y="692" width="5" height="15" fill="rgb(233,61,1)"/><text x="18.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.45%)</title><rect x="15" y="708" width="5" height="15" fill="rgb(245,76,51)"/><text x="18.00" y="718.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.45%)</title><rect x="15" y="724" width="5" height="15" fill="rgb(221,112,41)"/><text x="18.00" y="734.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.45%)</title><rect x="15" y="740" width="5" height="15" fill="rgb(243,12,31)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="15" y="756" width="5" height="15" fill="rgb(208,185,29)"/><text x="18.00" y="766.50"></text></g><g><title>0x7fb7e3b2c8dd (?) (1 samples, 0.45%)</title><rect x="15" y="772" width="5" height="15" fill="rgb(206,124,10)"/><text x="18.00" y="782.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.45%)</title><rect x="20" y="852" width="5" height="15" fill="rgb(241,130,23)"/><text x="23.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.45%)</title><rect x="20" y="868" width="5" height="15" fill="rgb(214,164,41)"/><text x="23.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.45%)</title><rect x="20" y="884" width="5" height="15" fill="rgb(240,135,20)"/><text x="23.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.45%)</title><rect x="20" y="900" width="5" height="15" fill="rgb(223,107,35)"/><text x="23.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.45%)</title><rect x="20" y="916" width="5" height="15" fill="rgb(236,144,37)"/><text x="23.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.45%)</title><rect x="20" y="932" width="5" height="15" fill="rgb(243,110,52)"/><text x="23.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.45%)</title><rect x="20" y="948" width="5" height="15" fill="rgb(237,63,20)"/><text x="23.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.45%)</title><rect x="20" y="964" width="5" height="15" fill="rgb(220,118,4)"/><text x="23.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.45%)</title><rect x="20" y="980" width="5" height="15" fill="rgb(215,53,16)"/><text x="23.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.45%)</title><rect x="20" y="996" width="5" height="15" fill="rgb(243,214,19)"/><text x="23.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.45%)</title><rect x="20" y="1012" width="5" height="15" fill="rgb(243,122,13)"/><text x="23.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.89%)</title><rect x="20" y="820" width="11" height="15" fill="rgb(244,160,2)"/><text x="23.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.89%)</title><rect x="20" y="836" width="11" height="15" fill="rgb(214,64,18)"/><text x="23.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.45%)</title><rect x="25" y="852" width="6" height="15" fill="rgb(217,81,2)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.45%)</title><rect x="25" y="868" width="6" height="15" fill="rgb(218,49,14)"/><text x="28.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.45%)</title><rect x="25" y="884" width="6" height="15" fill="rgb(220,8,25)"/><text x="28.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.45%)</title><rect x="25" y="900" width="6" height="15" fill="rgb(218,20,53)"/><text x="28.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.45%)</title><rect x="25" y="916" width="6" height="15" fill="rgb(211,70,10)"/><text x="28.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.45%)</title><rect x="25" y="932" width="6" height="15" fill="rgb(220,35,11)"/><text x="28.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.45%)</title><rect x="25" y="948" width="6" height="15" fill="rgb(237,168,34)"/><text x="28.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (1 samples, 0.45%)</title><rect x="25" y="964" width="6" height="15" fill="rgb(237,32,49)"/><text x="28.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:2) (3 samples, 1.34%)</title><rect x="20" y="148" width="16" height="15" fill="rgb(214,189,8)"/><text x="23.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="164" width="16" height="15" fill="rgb(231,141,50)"/><text x="23.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.34%)</title><rect x="20" y="180" width="16" height="15" fill="rgb(219,2,54)"/><text x="23.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="196" width="16" height="15" fill="rgb(246,170,29)"/><text x="23.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="212" width="16" height="15" fill="rgb(222,117,24)"/><text x="23.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="20" y="228" width="16" height="15" fill="rgb(232,176,41)"/><text x="23.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="20" y="244" width="16" height="15" fill="rgb(214,191,19)"/><text x="23.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="20" y="260" width="16" height="15" fill="rgb(219,96,22)"/><text x="23.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="276" width="16" height="15" fill="rgb(205,131,17)"/><text x="23.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.34%)</title><rect x="20" y="292" width="16" height="15" fill="rgb(210,141,29)"/><text x="23.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="308" width="16" height="15" fill="rgb(218,196,9)"/><text x="23.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="20" y="324" width="16" height="15" fill="rgb(227,221,6)"/><text x="23.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="20" y="340" width="16" height="15" fill="rgb(230,122,30)"/><text x="23.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="20" y="356" width="16" height="15" fill="rgb(229,46,22)"/><text x="23.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="372" width="16" height="15" fill="rgb(214,65,14)"/><text x="23.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.34%)</title><rect x="20" y="388" width="16" height="15" fill="rgb(206,18,15)"/><text x="23.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="404" width="16" height="15" fill="rgb(235,77,20)"/><text x="23.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="20" y="420" width="16" height="15" fill="rgb(216,64,0)"/><text x="23.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="20" y="436" width="16" height="15" fill="rgb(249,23,40)"/><text x="23.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="20" y="452" width="16" height="15" fill="rgb(224,44,36)"/><text x="23.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="468" width="16" height="15" fill="rgb(219,229,31)"/><text x="23.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.34%)</title><rect x="20" y="484" width="16" height="15" fill="rgb(221,118,33)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="500" width="16" height="15" fill="rgb(233,200,6)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="20" y="516" width="16" height="15" fill="rgb(221,227,39)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="20" y="532" width="16" height="15" fill="rgb(237,155,16)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="20" y="548" width="16" height="15" fill="rgb(242,182,7)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="564" width="16" height="15" fill="rgb(207,82,28)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.34%)</title><rect x="20" y="580" width="16" height="15" fill="rgb(209,40,9)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="596" width="16" height="15" fill="rgb(238,198,17)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.34%)</title><rect x="20" y="612" width="16" height="15" fill="rgb(236,75,3)"/><text x="23.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="628" width="16" height="15" fill="rgb(251,205,21)"/><text x="23.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="644" width="16" height="15" fill="rgb(218,207,44)"/><text x="23.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="20" y="660" width="16" height="15" fill="rgb(254,15,50)"/><text x="23.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="20" y="676" width="16" height="15" fill="rgb(238,57,14)"/><text x="23.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="20" y="692" width="16" height="15" fill="rgb(210,166,38)"/><text x="23.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="708" width="16" height="15" fill="rgb(209,144,43)"/><text x="23.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.34%)</title><rect x="20" y="724" width="16" height="15" fill="rgb(233,138,54)"/><text x="23.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="20" y="740" width="16" height="15" fill="rgb(219,11,17)"/><text x="23.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="20" y="756" width="16" height="15" fill="rgb(215,205,11)"/><text x="23.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="20" y="772" width="16" height="15" fill="rgb(228,161,30)"/><text x="23.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="20" y="788" width="16" height="15" fill="rgb(211,97,36)"/><text x="23.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="20" y="804" width="16" height="15" fill="rgb(244,118,18)"/><text x="23.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.45%)</title><rect x="31" y="820" width="5" height="15" fill="rgb(238,227,22)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="836" width="5" height="15" fill="rgb(228,218,5)"/><text x="34.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="852" width="5" height="15" fill="rgb(232,203,25)"/><text x="34.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="868" width="5" height="15" fill="rgb(211,153,28)"/><text x="34.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="884" width="5" height="15" fill="rgb(248,38,14)"/><text x="34.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="900" width="5" height="15" fill="rgb(251,72,24)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.45%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(217,176,26)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(236,206,27)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(216,71,10)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(227,35,20)"/><text x="34.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(230,222,13)"/><text x="34.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(214,163,12)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(242,117,11)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(212,144,4)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(246,224,14)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(236,41,49)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(208,198,33)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:5399) (1 samples, 0.45%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(209,184,9)"/><text x="34.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py:5558) (1 samples, 0.45%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(221,56,5)"/><text x="34.00" y="1118.50"></text></g><g><title>__or__ (pkg_resources/_vendor/pyparsing.py:1958) (1 samples, 0.45%)</title><rect x="31" y="1124" width="5" height="15" fill="rgb(243,153,46)"/><text x="34.00" y="1134.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:3541) (1 samples, 0.45%)</title><rect x="31" y="1140" width="5" height="15" fill="rgb(218,1,23)"/><text x="34.00" y="1150.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py:3270) (1 samples, 0.45%)</title><rect x="31" y="1156" width="5" height="15" fill="rgb(216,168,50)"/><text x="34.00" y="1166.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:11) (1 samples, 0.45%)</title><rect x="36" y="1140" width="5" height="15" fill="rgb(224,186,19)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1156" width="5" height="15" fill="rgb(224,168,6)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="36" y="1172" width="5" height="15" fill="rgb(222,120,35)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1188" width="5" height="15" fill="rgb(233,7,43)"/><text x="39.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1204" width="5" height="15" fill="rgb(238,214,19)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1220" width="5" height="15" fill="rgb(251,191,3)"/><text x="39.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1236" width="5" height="15" fill="rgb(248,208,1)"/><text x="39.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1252" width="5" height="15" fill="rgb(217,71,37)"/><text x="39.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1268" width="5" height="15" fill="rgb(248,198,51)"/><text x="39.00" y="1278.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/__init__.py:4) (1 samples, 0.45%)</title><rect x="36" y="1284" width="5" height="15" fill="rgb(231,59,14)"/><text x="39.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1300" width="5" height="15" fill="rgb(222,7,26)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1316" width="5" height="15" fill="rgb(218,110,34)"/><text x="39.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1332" width="5" height="15" fill="rgb(242,165,24)"/><text x="39.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1348" width="5" height="15" fill="rgb(208,29,53)"/><text x="39.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1364" width="5" height="15" fill="rgb(223,156,25)"/><text x="39.00" y="1374.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/context.py:21) (1 samples, 0.45%)</title><rect x="36" y="1380" width="5" height="15" fill="rgb(253,62,9)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1396" width="5" height="15" fill="rgb(248,73,21)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1412" width="5" height="15" fill="rgb(243,17,41)"/><text x="39.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1428" width="5" height="15" fill="rgb(246,179,40)"/><text x="39.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1444" width="5" height="15" fill="rgb(251,125,42)"/><text x="39.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1460" width="5" height="15" fill="rgb(206,192,9)"/><text x="39.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/process.py:11) (1 samples, 0.45%)</title><rect x="36" y="1476" width="5" height="15" fill="rgb(221,204,5)"/><text x="39.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1492" width="5" height="15" fill="rgb(219,183,9)"/><text x="39.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1508" width="5" height="15" fill="rgb(208,204,11)"/><text x="39.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1524" width="5" height="15" fill="rgb(205,43,51)"/><text x="39.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1540" width="5" height="15" fill="rgb(230,39,48)"/><text x="39.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1556" width="5" height="15" fill="rgb(252,195,5)"/><text x="39.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat.py:25) (1 samples, 0.45%)</title><rect x="36" y="1572" width="5" height="15" fill="rgb(253,34,9)"/><text x="39.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1588" width="5" height="15" fill="rgb(254,34,48)"/><text x="39.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1604" width="5" height="15" fill="rgb(230,112,5)"/><text x="39.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1620" width="5" height="15" fill="rgb(247,157,24)"/><text x="39.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="36" y="1636" width="5" height="15" fill="rgb(216,204,0)"/><text x="39.00" y="1646.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:818) (1 samples, 0.45%)</title><rect x="36" y="1652" width="5" height="15" fill="rgb(250,34,26)"/><text x="39.00" y="1662.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;:916) (1 samples, 0.45%)</title><rect x="36" y="1668" width="5" height="15" fill="rgb(231,174,36)"/><text x="39.00" y="1678.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.45%)</title><rect x="36" y="1684" width="5" height="15" fill="rgb(206,36,49)"/><text x="39.00" y="1694.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:4) (2 samples, 0.89%)</title><rect x="36" y="148" width="10" height="15" fill="rgb(207,168,12)"/><text x="39.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="164" width="10" height="15" fill="rgb(236,183,13)"/><text x="39.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.89%)</title><rect x="36" y="180" width="10" height="15" fill="rgb(238,39,36)"/><text x="39.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="196" width="10" height="15" fill="rgb(218,17,36)"/><text x="39.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="212" width="10" height="15" fill="rgb(213,74,11)"/><text x="39.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="228" width="10" height="15" fill="rgb(247,25,50)"/><text x="39.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="244" width="10" height="15" fill="rgb(221,87,49)"/><text x="39.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="260" width="10" height="15" fill="rgb(244,142,15)"/><text x="39.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="276" width="10" height="15" fill="rgb(205,136,34)"/><text x="39.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.89%)</title><rect x="36" y="292" width="10" height="15" fill="rgb(244,36,39)"/><text x="39.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="308" width="10" height="15" fill="rgb(214,163,13)"/><text x="39.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="324" width="10" height="15" fill="rgb(206,194,15)"/><text x="39.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="340" width="10" height="15" fill="rgb(233,207,24)"/><text x="39.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="356" width="10" height="15" fill="rgb(250,180,46)"/><text x="39.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="372" width="10" height="15" fill="rgb(233,182,30)"/><text x="39.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.89%)</title><rect x="36" y="388" width="10" height="15" fill="rgb(206,69,42)"/><text x="39.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="404" width="10" height="15" fill="rgb(234,110,37)"/><text x="39.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="420" width="10" height="15" fill="rgb(222,114,2)"/><text x="39.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="436" width="10" height="15" fill="rgb(236,76,5)"/><text x="39.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="452" width="10" height="15" fill="rgb(232,112,38)"/><text x="39.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="468" width="10" height="15" fill="rgb(249,177,37)"/><text x="39.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:22) (2 samples, 0.89%)</title><rect x="36" y="484" width="10" height="15" fill="rgb(235,67,35)"/><text x="39.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.89%)</title><rect x="36" y="500" width="10" height="15" fill="rgb(205,146,13)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="516" width="10" height="15" fill="rgb(210,139,30)"/><text x="39.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="532" width="10" height="15" fill="rgb(252,162,49)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="548" width="10" height="15" fill="rgb(208,222,22)"/><text x="39.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="564" width="10" height="15" fill="rgb(245,10,54)"/><text x="39.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="580" width="10" height="15" fill="rgb(224,172,12)"/><text x="39.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="596" width="10" height="15" fill="rgb(215,84,22)"/><text x="39.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py:7) (2 samples, 0.89%)</title><rect x="36" y="612" width="10" height="15" fill="rgb(254,179,17)"/><text x="39.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="628" width="10" height="15" fill="rgb(208,134,21)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="644" width="10" height="15" fill="rgb(253,128,50)"/><text x="39.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="660" width="10" height="15" fill="rgb(254,122,20)"/><text x="39.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="676" width="10" height="15" fill="rgb(210,205,6)"/><text x="39.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="692" width="10" height="15" fill="rgb(238,8,41)"/><text x="39.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py:120) (2 samples, 0.89%)</title><rect x="36" y="708" width="10" height="15" fill="rgb(252,56,2)"/><text x="39.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="724" width="10" height="15" fill="rgb(247,123,38)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="740" width="10" height="15" fill="rgb(247,20,51)"/><text x="39.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="756" width="10" height="15" fill="rgb(224,90,0)"/><text x="39.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="772" width="10" height="15" fill="rgb(250,112,7)"/><text x="39.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="788" width="10" height="15" fill="rgb(250,114,49)"/><text x="39.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py:26) (2 samples, 0.89%)</title><rect x="36" y="804" width="10" height="15" fill="rgb(210,208,18)"/><text x="39.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="820" width="10" height="15" fill="rgb(228,50,10)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="836" width="10" height="15" fill="rgb(235,46,13)"/><text x="39.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="852" width="10" height="15" fill="rgb(220,3,41)"/><text x="39.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="868" width="10" height="15" fill="rgb(252,146,19)"/><text x="39.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="884" width="10" height="15" fill="rgb(224,91,23)"/><text x="39.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py:22) (2 samples, 0.89%)</title><rect x="36" y="900" width="10" height="15" fill="rgb(208,226,33)"/><text x="39.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="916" width="10" height="15" fill="rgb(231,150,10)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="932" width="10" height="15" fill="rgb(208,202,36)"/><text x="39.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="948" width="10" height="15" fill="rgb(242,16,48)"/><text x="39.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="964" width="10" height="15" fill="rgb(234,180,3)"/><text x="39.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="980" width="10" height="15" fill="rgb(207,60,0)"/><text x="39.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py:14) (2 samples, 0.89%)</title><rect x="36" y="996" width="10" height="15" fill="rgb(223,8,36)"/><text x="39.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="1012" width="10" height="15" fill="rgb(210,113,52)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.89%)</title><rect x="36" y="1028" width="10" height="15" fill="rgb(240,77,25)"/><text x="39.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="1044" width="10" height="15" fill="rgb(229,171,15)"/><text x="39.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="36" y="1060" width="10" height="15" fill="rgb(218,59,16)"/><text x="39.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="36" y="1076" width="10" height="15" fill="rgb(216,227,51)"/><text x="39.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="36" y="1092" width="10" height="15" fill="rgb(228,70,10)"/><text x="39.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="36" y="1108" width="10" height="15" fill="rgb(213,67,36)"/><text x="39.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="36" y="1124" width="10" height="15" fill="rgb(248,25,4)"/><text x="39.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py:13) (1 samples, 0.45%)</title><rect x="41" y="1140" width="5" height="15" fill="rgb(254,125,29)"/><text x="44.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="1156" width="5" height="15" fill="rgb(243,186,49)"/><text x="44.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="1172" width="5" height="15" fill="rgb(245,97,16)"/><text x="44.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="1188" width="5" height="15" fill="rgb(233,146,44)"/><text x="44.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="1204" width="5" height="15" fill="rgb(244,76,53)"/><text x="44.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="1220" width="5" height="15" fill="rgb(232,31,31)"/><text x="44.00" y="1230.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/reusable_executor.py:11) (1 samples, 0.45%)</title><rect x="41" y="1236" width="5" height="15" fill="rgb(245,25,48)"/><text x="44.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="1252" width="5" height="15" fill="rgb(250,166,45)"/><text x="44.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="1268" width="5" height="15" fill="rgb(226,80,42)"/><text x="44.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="1284" width="5" height="15" fill="rgb(247,20,12)"/><text x="44.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="1300" width="5" height="15" fill="rgb(212,186,19)"/><text x="44.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="1316" width="5" height="15" fill="rgb(206,8,41)"/><text x="44.00" y="1326.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/process_executor.py:84) (1 samples, 0.45%)</title><rect x="41" y="1332" width="5" height="15" fill="rgb(236,170,19)"/><text x="44.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="1348" width="5" height="15" fill="rgb(241,184,54)"/><text x="44.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="1364" width="5" height="15" fill="rgb(247,156,37)"/><text x="44.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="1380" width="5" height="15" fill="rgb(246,36,43)"/><text x="44.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="1396" width="5" height="15" fill="rgb(250,215,38)"/><text x="44.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="1412" width="5" height="15" fill="rgb(232,132,25)"/><text x="44.00" y="1422.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/utils.py:10) (1 samples, 0.45%)</title><rect x="41" y="1428" width="5" height="15" fill="rgb(219,151,32)"/><text x="44.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="1444" width="5" height="15" fill="rgb(215,143,11)"/><text x="44.00" y="1454.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="1460" width="5" height="15" fill="rgb(221,190,54)"/><text x="44.00" y="1470.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="1476" width="5" height="15" fill="rgb(233,89,35)"/><text x="44.00" y="1486.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="1492" width="5" height="15" fill="rgb(236,41,45)"/><text x="44.00" y="1502.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="1508" width="5" height="15" fill="rgb(238,27,24)"/><text x="44.00" y="1518.50"></text></g><g><title>&lt;module&gt; (psutil/__init__.py:40) (1 samples, 0.45%)</title><rect x="41" y="1524" width="5" height="15" fill="rgb(232,223,27)"/><text x="44.00" y="1534.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="41" y="1540" width="5" height="15" fill="rgb(240,205,22)"/><text x="44.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="1556" width="5" height="15" fill="rgb(230,91,33)"/><text x="44.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="41" y="1572" width="5" height="15" fill="rgb(222,159,34)"/><text x="44.00" y="1582.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="41" y="1588" width="5" height="15" fill="rgb(229,89,47)"/><text x="44.00" y="1598.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="41" y="1604" width="5" height="15" fill="rgb(213,166,36)"/><text x="44.00" y="1614.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="41" y="1620" width="5" height="15" fill="rgb(253,219,33)"/><text x="44.00" y="1630.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="41" y="1636" width="5" height="15" fill="rgb(244,132,43)"/><text x="44.00" y="1646.50"></text></g><g><title>&lt;module&gt; (psutil/_common.py:168) (1 samples, 0.45%)</title><rect x="41" y="1652" width="5" height="15" fill="rgb(211,19,51)"/><text x="44.00" y="1662.50"></text></g><g><title>namedtuple (collections/__init__.py:452) (1 samples, 0.45%)</title><rect x="41" y="1668" width="5" height="15" fill="rgb(253,108,52)"/><text x="44.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:22) (1 samples, 0.45%)</title><rect x="46" y="580" width="6" height="15" fill="rgb(207,188,19)"/><text x="49.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="46" y="596" width="6" height="15" fill="rgb(239,129,9)"/><text x="49.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="46" y="612" width="6" height="15" fill="rgb(223,131,40)"/><text x="49.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="46" y="628" width="6" height="15" fill="rgb(239,29,20)"/><text x="49.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="46" y="644" width="6" height="15" fill="rgb(220,179,31)"/><text x="49.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="46" y="660" width="6" height="15" fill="rgb(236,66,0)"/><text x="49.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/utils_tests.py:17) (1 samples, 0.45%)</title><rect x="46" y="676" width="6" height="15" fill="rgb(219,145,31)"/><text x="49.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="46" y="692" width="6" height="15" fill="rgb(232,68,54)"/><text x="49.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="46" y="708" width="6" height="15" fill="rgb(245,60,53)"/><text x="49.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="46" y="724" width="6" height="15" fill="rgb(250,210,16)"/><text x="49.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="46" y="740" width="6" height="15" fill="rgb(220,124,3)"/><text x="49.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="46" y="756" width="6" height="15" fill="rgb(211,98,43)"/><text x="49.00" y="766.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/utils_tests_private.py:12) (1 samples, 0.45%)</title><rect x="46" y="772" width="6" height="15" fill="rgb(240,20,28)"/><text x="49.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="46" y="788" width="6" height="15" fill="rgb(229,164,46)"/><text x="49.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="46" y="804" width="6" height="15" fill="rgb(249,94,9)"/><text x="49.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="46" y="820" width="6" height="15" fill="rgb(236,90,48)"/><text x="49.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="46" y="836" width="6" height="15" fill="rgb(222,119,21)"/><text x="49.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="46" y="852" width="6" height="15" fill="rgb(235,186,40)"/><text x="49.00" y="862.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/utils_tests_stringio.py:9) (1 samples, 0.45%)</title><rect x="46" y="868" width="6" height="15" fill="rgb(213,29,24)"/><text x="49.00" y="878.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:112) (1 samples, 0.45%)</title><rect x="52" y="772" width="5" height="15" fill="rgb(231,145,29)"/><text x="55.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="52" y="788" width="5" height="15" fill="rgb(207,226,25)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="52" y="804" width="5" height="15" fill="rgb(252,109,35)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="52" y="820" width="5" height="15" fill="rgb(212,84,24)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="52" y="836" width="5" height="15" fill="rgb(220,218,46)"/><text x="55.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="52" y="852" width="5" height="15" fill="rgb(229,50,20)"/><text x="55.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="52" y="868" width="5" height="15" fill="rgb(206,90,31)"/><text x="55.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="52" y="884" width="5" height="15" fill="rgb(217,103,5)"/><text x="55.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py:26) (1 samples, 0.45%)</title><rect x="52" y="900" width="5" height="15" fill="rgb(246,120,18)"/><text x="55.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="52" y="916" width="5" height="15" fill="rgb(238,186,30)"/><text x="55.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="52" y="932" width="5" height="15" fill="rgb(231,193,47)"/><text x="55.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="52" y="948" width="5" height="15" fill="rgb(206,113,20)"/><text x="55.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="52" y="964" width="5" height="15" fill="rgb(207,14,19)"/><text x="55.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="52" y="980" width="5" height="15" fill="rgb(213,186,28)"/><text x="55.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py:11) (1 samples, 0.45%)</title><rect x="52" y="996" width="5" height="15" fill="rgb(230,16,14)"/><text x="55.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="52" y="1012" width="5" height="15" fill="rgb(216,70,39)"/><text x="55.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="52" y="1028" width="5" height="15" fill="rgb(205,70,54)"/><text x="55.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="52" y="1044" width="5" height="15" fill="rgb(252,89,8)"/><text x="55.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="52" y="1060" width="5" height="15" fill="rgb(223,41,12)"/><text x="55.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="52" y="1076" width="5" height="15" fill="rgb(209,40,49)"/><text x="55.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py:29) (1 samples, 0.45%)</title><rect x="52" y="1092" width="5" height="15" fill="rgb(247,87,0)"/><text x="55.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="52" y="1108" width="5" height="15" fill="rgb(240,209,32)"/><text x="55.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="52" y="1124" width="5" height="15" fill="rgb(250,148,40)"/><text x="55.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="52" y="1140" width="5" height="15" fill="rgb(213,88,33)"/><text x="55.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="52" y="1156" width="5" height="15" fill="rgb(223,115,12)"/><text x="55.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="52" y="1172" width="5" height="15" fill="rgb(237,12,30)"/><text x="55.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py:134) (1 samples, 0.45%)</title><rect x="52" y="1188" width="5" height="15" fill="rgb(212,87,13)"/><text x="55.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="52" y="1204" width="5" height="15" fill="rgb(223,126,51)"/><text x="55.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.45%)</title><rect x="52" y="1220" width="5" height="15" fill="rgb(237,8,21)"/><text x="55.00" y="1230.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:906) (1 samples, 0.45%)</title><rect x="52" y="1236" width="5" height="15" fill="rgb(218,135,12)"/><text x="55.00" y="1246.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1280) (1 samples, 0.45%)</title><rect x="52" y="1252" width="5" height="15" fill="rgb(232,214,14)"/><text x="55.00" y="1262.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;:1252) (1 samples, 0.45%)</title><rect x="52" y="1268" width="5" height="15" fill="rgb(225,71,3)"/><text x="55.00" y="1278.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.45%)</title><rect x="52" y="1284" width="5" height="15" fill="rgb(213,168,40)"/><text x="55.00" y="1294.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.45%)</title><rect x="52" y="1300" width="5" height="15" fill="rgb(217,76,30)"/><text x="55.00" y="1310.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.45%)</title><rect x="52" y="1316" width="5" height="15" fill="rgb(237,103,9)"/><text x="55.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (3 samples, 1.34%)</title><rect x="46" y="484" width="16" height="15" fill="rgb(225,181,4)"/><text x="49.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.34%)</title><rect x="46" y="500" width="16" height="15" fill="rgb(250,220,50)"/><text x="49.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.34%)</title><rect x="46" y="516" width="16" height="15" fill="rgb(254,39,5)"/><text x="49.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.34%)</title><rect x="46" y="532" width="16" height="15" fill="rgb(231,104,15)"/><text x="49.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.34%)</title><rect x="46" y="548" width="16" height="15" fill="rgb(216,52,34)"/><text x="49.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.34%)</title><rect x="46" y="564" width="16" height="15" fill="rgb(223,111,39)"/><text x="49.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 0.89%)</title><rect x="52" y="580" width="10" height="15" fill="rgb(251,176,36)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="52" y="596" width="10" height="15" fill="rgb(235,124,41)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="52" y="612" width="10" height="15" fill="rgb(234,25,54)"/><text x="55.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="52" y="628" width="10" height="15" fill="rgb(216,25,49)"/><text x="55.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="52" y="644" width="10" height="15" fill="rgb(223,139,31)"/><text x="55.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="52" y="660" width="10" height="15" fill="rgb(252,84,27)"/><text x="55.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 0.89%)</title><rect x="52" y="676" width="10" height="15" fill="rgb(212,157,1)"/><text x="55.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="52" y="692" width="10" height="15" fill="rgb(218,56,46)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="52" y="708" width="10" height="15" fill="rgb(252,33,34)"/><text x="55.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="52" y="724" width="10" height="15" fill="rgb(229,29,14)"/><text x="55.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="52" y="740" width="10" height="15" fill="rgb(229,20,52)"/><text x="55.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="52" y="756" width="10" height="15" fill="rgb(210,174,17)"/><text x="55.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.45%)</title><rect x="57" y="772" width="5" height="15" fill="rgb(237,138,4)"/><text x="60.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="788" width="5" height="15" fill="rgb(222,221,4)"/><text x="60.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="804" width="5" height="15" fill="rgb(242,210,14)"/><text x="60.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="820" width="5" height="15" fill="rgb(225,115,8)"/><text x="60.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="836" width="5" height="15" fill="rgb(242,204,0)"/><text x="60.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="852" width="5" height="15" fill="rgb(252,194,46)"/><text x="60.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.45%)</title><rect x="57" y="868" width="5" height="15" fill="rgb(207,127,11)"/><text x="60.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="884" width="5" height="15" fill="rgb(241,151,5)"/><text x="60.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="900" width="5" height="15" fill="rgb(207,125,50)"/><text x="60.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="916" width="5" height="15" fill="rgb(206,41,23)"/><text x="60.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="932" width="5" height="15" fill="rgb(239,171,24)"/><text x="60.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="948" width="5" height="15" fill="rgb(254,70,36)"/><text x="60.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.45%)</title><rect x="57" y="964" width="5" height="15" fill="rgb(231,36,27)"/><text x="60.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="980" width="5" height="15" fill="rgb(213,186,41)"/><text x="60.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="996" width="5" height="15" fill="rgb(233,175,15)"/><text x="60.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="1012" width="5" height="15" fill="rgb(254,176,51)"/><text x="60.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="1028" width="5" height="15" fill="rgb(240,183,33)"/><text x="60.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1044" width="5" height="15" fill="rgb(216,165,35)"/><text x="60.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.45%)</title><rect x="57" y="1060" width="5" height="15" fill="rgb(216,111,29)"/><text x="60.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="1076" width="5" height="15" fill="rgb(228,185,36)"/><text x="60.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="57" y="1092" width="5" height="15" fill="rgb(209,58,40)"/><text x="60.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1108" width="5" height="15" fill="rgb(253,5,32)"/><text x="60.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="1124" width="5" height="15" fill="rgb(216,195,28)"/><text x="60.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="1140" width="5" height="15" fill="rgb(222,107,7)"/><text x="60.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="1156" width="5" height="15" fill="rgb(207,75,21)"/><text x="60.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="1172" width="5" height="15" fill="rgb(216,69,8)"/><text x="60.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1188" width="5" height="15" fill="rgb(246,119,18)"/><text x="60.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.45%)</title><rect x="57" y="1204" width="5" height="15" fill="rgb(211,55,32)"/><text x="60.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="1220" width="5" height="15" fill="rgb(239,130,52)"/><text x="60.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="1236" width="5" height="15" fill="rgb(251,164,50)"/><text x="60.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="1252" width="5" height="15" fill="rgb(227,7,46)"/><text x="60.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="1268" width="5" height="15" fill="rgb(215,119,30)"/><text x="60.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1284" width="5" height="15" fill="rgb(205,139,33)"/><text x="60.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.45%)</title><rect x="57" y="1300" width="5" height="15" fill="rgb(233,107,37)"/><text x="60.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="57" y="1316" width="5" height="15" fill="rgb(251,186,28)"/><text x="60.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="57" y="1332" width="5" height="15" fill="rgb(221,91,37)"/><text x="60.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="57" y="1348" width="5" height="15" fill="rgb(238,125,49)"/><text x="60.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="57" y="1364" width="5" height="15" fill="rgb(215,165,45)"/><text x="60.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="57" y="1380" width="5" height="15" fill="rgb(240,142,23)"/><text x="60.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:63) (1 samples, 0.45%)</title><rect x="57" y="1396" width="5" height="15" fill="rgb(208,206,49)"/><text x="60.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.45%)</title><rect x="57" y="1412" width="5" height="15" fill="rgb(250,212,43)"/><text x="60.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.45%)</title><rect x="57" y="1428" width="5" height="15" fill="rgb(237,76,47)"/><text x="60.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.45%)</title><rect x="57" y="1444" width="5" height="15" fill="rgb(254,24,32)"/><text x="60.00" y="1454.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.45%)</title><rect x="57" y="1460" width="5" height="15" fill="rgb(245,147,36)"/><text x="60.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.45%)</title><rect x="57" y="1476" width="5" height="15" fill="rgb(205,123,7)"/><text x="60.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.45%)</title><rect x="57" y="1492" width="5" height="15" fill="rgb(231,63,42)"/><text x="60.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.45%)</title><rect x="57" y="1508" width="5" height="15" fill="rgb(208,52,42)"/><text x="60.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.45%)</title><rect x="57" y="1524" width="5" height="15" fill="rgb(253,122,41)"/><text x="60.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.45%)</title><rect x="57" y="1540" width="5" height="15" fill="rgb(217,181,14)"/><text x="60.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py:618) (1 samples, 0.45%)</title><rect x="57" y="1556" width="5" height="15" fill="rgb(246,153,18)"/><text x="60.00" y="1566.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="62" y="1028" width="5" height="15" fill="rgb(208,162,6)"/><text x="65.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.45%)</title><rect x="62" y="1044" width="5" height="15" fill="rgb(223,196,14)"/><text x="65.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.45%)</title><rect x="62" y="1060" width="5" height="15" fill="rgb(249,59,30)"/><text x="65.00" y="1070.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="62" y="1076" width="5" height="15" fill="rgb(246,34,43)"/><text x="65.00" y="1086.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:4) (12 samples, 5.36%)</title><rect x="10" y="52" width="63" height="15" fill="rgb(206,2,46)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (12 samples, 5.36%)</title><rect x="10" y="68" width="63" height="15" fill="rgb(219,204,2)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (12 samples, 5.36%)</title><rect x="10" y="84" width="63" height="15" fill="rgb(231,216,51)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (12 samples, 5.36%)</title><rect x="10" y="100" width="63" height="15" fill="rgb(243,29,37)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (12 samples, 5.36%)</title><rect x="10" y="116" width="63" height="15" fill="rgb(242,85,48)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (12 samples, 5.36%)</title><rect x="10" y="132" width="63" height="15" fill="rgb(250,51,37)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py:7) (5 samples, 2.23%)</title><rect x="46" y="148" width="27" height="15" fill="rgb(213,165,22)"/><text x="49.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="164" width="27" height="15" fill="rgb(210,110,6)"/><text x="49.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="46" y="180" width="27" height="15" fill="rgb(206,85,39)"/><text x="49.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="46" y="196" width="27" height="15" fill="rgb(253,106,53)"/><text x="49.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="46" y="212" width="27" height="15" fill="rgb(250,150,33)"/><text x="49.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="228" width="27" height="15" fill="rgb(218,51,24)"/><text x="49.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (5 samples, 2.23%)</title><rect x="46" y="244" width="27" height="15" fill="rgb(228,29,4)"/><text x="49.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="260" width="27" height="15" fill="rgb(232,161,44)"/><text x="49.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="46" y="276" width="27" height="15" fill="rgb(254,216,46)"/><text x="49.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="46" y="292" width="27" height="15" fill="rgb(210,173,33)"/><text x="49.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="46" y="308" width="27" height="15" fill="rgb(254,225,36)"/><text x="49.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="324" width="27" height="15" fill="rgb(233,164,31)"/><text x="49.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (5 samples, 2.23%)</title><rect x="46" y="340" width="27" height="15" fill="rgb(236,174,39)"/><text x="49.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="356" width="27" height="15" fill="rgb(236,58,29)"/><text x="49.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.23%)</title><rect x="46" y="372" width="27" height="15" fill="rgb(222,199,17)"/><text x="49.00" y="382.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="388" width="27" height="15" fill="rgb(249,8,46)"/><text x="49.00" y="398.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.23%)</title><rect x="46" y="404" width="27" height="15" fill="rgb(254,153,5)"/><text x="49.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.23%)</title><rect x="46" y="420" width="27" height="15" fill="rgb(216,63,33)"/><text x="49.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.23%)</title><rect x="46" y="436" width="27" height="15" fill="rgb(253,167,9)"/><text x="49.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.23%)</title><rect x="46" y="452" width="27" height="15" fill="rgb(226,169,37)"/><text x="49.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.23%)</title><rect x="46" y="468" width="27" height="15" fill="rgb(227,120,29)"/><text x="49.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (2 samples, 0.89%)</title><rect x="62" y="484" width="11" height="15" fill="rgb(233,213,4)"/><text x="65.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="500" width="11" height="15" fill="rgb(249,102,42)"/><text x="65.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="62" y="516" width="11" height="15" fill="rgb(247,163,47)"/><text x="65.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="62" y="532" width="11" height="15" fill="rgb(226,153,39)"/><text x="65.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="62" y="548" width="11" height="15" fill="rgb(231,7,6)"/><text x="65.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="62" y="564" width="11" height="15" fill="rgb(254,60,13)"/><text x="65.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (2 samples, 0.89%)</title><rect x="62" y="580" width="11" height="15" fill="rgb(239,152,47)"/><text x="65.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="596" width="11" height="15" fill="rgb(254,172,7)"/><text x="65.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.89%)</title><rect x="62" y="612" width="11" height="15" fill="rgb(242,130,17)"/><text x="65.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="62" y="628" width="11" height="15" fill="rgb(211,1,5)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="644" width="11" height="15" fill="rgb(223,197,28)"/><text x="65.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="62" y="660" width="11" height="15" fill="rgb(253,189,20)"/><text x="65.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="62" y="676" width="11" height="15" fill="rgb(215,165,38)"/><text x="65.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="62" y="692" width="11" height="15" fill="rgb(226,74,14)"/><text x="65.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="62" y="708" width="11" height="15" fill="rgb(210,154,25)"/><text x="65.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (2 samples, 0.89%)</title><rect x="62" y="724" width="11" height="15" fill="rgb(205,25,9)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="740" width="11" height="15" fill="rgb(244,81,42)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="62" y="756" width="11" height="15" fill="rgb(225,105,28)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="62" y="772" width="11" height="15" fill="rgb(222,132,49)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="62" y="788" width="11" height="15" fill="rgb(227,75,14)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="62" y="804" width="11" height="15" fill="rgb(248,192,18)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (2 samples, 0.89%)</title><rect x="62" y="820" width="11" height="15" fill="rgb(228,185,29)"/><text x="65.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="836" width="11" height="15" fill="rgb(214,150,53)"/><text x="65.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="62" y="852" width="11" height="15" fill="rgb(226,114,44)"/><text x="65.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="62" y="868" width="11" height="15" fill="rgb(208,184,9)"/><text x="65.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.89%)</title><rect x="62" y="884" width="11" height="15" fill="rgb(239,42,27)"/><text x="65.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="62" y="900" width="11" height="15" fill="rgb(246,168,13)"/><text x="65.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (2 samples, 0.89%)</title><rect x="62" y="916" width="11" height="15" fill="rgb(241,156,2)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="932" width="11" height="15" fill="rgb(214,35,26)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.89%)</title><rect x="62" y="948" width="11" height="15" fill="rgb(205,228,20)"/><text x="65.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.89%)</title><rect x="62" y="964" width="11" height="15" fill="rgb(225,137,47)"/><text x="65.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.89%)</title><rect x="62" y="980" width="11" height="15" fill="rgb(221,12,48)"/><text x="65.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.89%)</title><rect x="62" y="996" width="11" height="15" fill="rgb(233,64,12)"/><text x="65.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.89%)</title><rect x="62" y="1012" width="11" height="15" fill="rgb(228,25,52)"/><text x="65.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="67" y="1028" width="6" height="15" fill="rgb(207,1,17)"/><text x="70.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="67" y="1044" width="6" height="15" fill="rgb(223,15,48)"/><text x="70.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:8) (1 samples, 0.45%)</title><rect x="67" y="1060" width="6" height="15" fill="rgb(234,149,4)"/><text x="70.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="67" y="1076" width="6" height="15" fill="rgb(221,214,17)"/><text x="70.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="67" y="1092" width="6" height="15" fill="rgb(206,71,5)"/><text x="70.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="67" y="1108" width="6" height="15" fill="rgb(218,71,26)"/><text x="70.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="67" y="1124" width="6" height="15" fill="rgb(232,131,54)"/><text x="70.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="67" y="1140" width="6" height="15" fill="rgb(210,219,7)"/><text x="70.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog.py:38) (1 samples, 0.45%)</title><rect x="67" y="1156" width="6" height="15" fill="rgb(220,100,4)"/><text x="70.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="67" y="1172" width="6" height="15" fill="rgb(242,10,39)"/><text x="70.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="67" y="1188" width="6" height="15" fill="rgb(218,196,13)"/><text x="70.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="67" y="1204" width="6" height="15" fill="rgb(214,220,8)"/><text x="70.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="67" y="1220" width="6" height="15" fill="rgb(245,161,52)"/><text x="70.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="67" y="1236" width="6" height="15" fill="rgb(205,189,17)"/><text x="70.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/flog_fake_classes.py:7) (1 samples, 0.45%)</title><rect x="67" y="1252" width="6" height="15" fill="rgb(252,124,13)"/><text x="70.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="67" y="1268" width="6" height="15" fill="rgb(246,70,1)"/><text x="70.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="67" y="1284" width="6" height="15" fill="rgb(229,225,27)"/><text x="70.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="67" y="1300" width="6" height="15" fill="rgb(206,144,15)"/><text x="70.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="67" y="1316" width="6" height="15" fill="rgb(237,65,7)"/><text x="70.00" y="1326.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.45%)</title><rect x="67" y="1332" width="6" height="15" fill="rgb(248,87,8)"/><text x="70.00" y="1342.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.45%)</title><rect x="67" y="1348" width="6" height="15" fill="rgb(232,112,10)"/><text x="70.00" y="1358.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.45%)</title><rect x="73" y="116" width="5" height="15" fill="rgb(241,153,18)"/><text x="76.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.45%)</title><rect x="73" y="132" width="5" height="15" fill="rgb(238,87,31)"/><text x="76.00" y="142.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:151) (1 samples, 0.45%)</title><rect x="73" y="148" width="5" height="15" fill="rgb(241,157,35)"/><text x="76.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.89%)</title><rect x="89" y="148" width="10" height="15" fill="rgb(205,207,28)"/><text x="92.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.45%)</title><rect x="94" y="164" width="5" height="15" fill="rgb(218,162,47)"/><text x="97.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.45%)</title><rect x="115" y="180" width="5" height="15" fill="rgb(249,172,31)"/><text x="118.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.45%)</title><rect x="162" y="196" width="6" height="15" fill="rgb(246,2,21)"/><text x="165.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (15 samples, 6.70%)</title><rect x="99" y="148" width="79" height="15" fill="rgb(225,25,2)"/><text x="102.00" y="158.50">predict (..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (15 samples, 6.70%)</title><rect x="99" y="164" width="79" height="15" fill="rgb(236,193,11)"/><text x="102.00" y="174.50">check_is_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 4.91%)</title><rect x="120" y="180" width="58" height="15" fill="rgb(229,173,13)"/><text x="123.00" y="190.50">&lt;listc..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.89%)</title><rect x="168" y="196" width="10" height="15" fill="rgb(249,82,28)"/><text x="171.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (2 samples, 0.89%)</title><rect x="194" y="180" width="10" height="15" fill="rgb(251,76,34)"/><text x="197.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.45%)</title><rect x="204" y="180" width="6" height="15" fill="rgb(208,7,26)"/><text x="207.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.45%)</title><rect x="210" y="180" width="5" height="15" fill="rgb(247,199,22)"/><text x="213.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.89%)</title><rect x="220" y="196" width="11" height="15" fill="rgb(231,217,5)"/><text x="223.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.45%)</title><rect x="231" y="196" width="5" height="15" fill="rgb(218,41,40)"/><text x="234.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (2 samples, 0.89%)</title><rect x="236" y="196" width="11" height="15" fill="rgb(223,46,8)"/><text x="239.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (7 samples, 3.12%)</title><rect x="215" y="180" width="37" height="15" fill="rgb(217,71,27)"/><text x="218.00" y="190.50">che..</text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.45%)</title><rect x="247" y="196" width="5" height="15" fill="rgb(206,153,10)"/><text x="250.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (2 samples, 0.89%)</title><rect x="252" y="196" width="10" height="15" fill="rgb(239,171,14)"/><text x="255.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (3 samples, 1.34%)</title><rect x="262" y="196" width="16" height="15" fill="rgb(221,146,30)"/><text x="265.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 2.68%)</title><rect x="278" y="212" width="32" height="15" fill="rgb(249,161,6)"/><text x="281.00" y="222.50">_a..</text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.45%)</title><rect x="310" y="212" width="5" height="15" fill="rgb(227,197,25)"/><text x="313.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.45%)</title><rect x="310" y="228" width="5" height="15" fill="rgb(215,222,8)"/><text x="313.00" y="238.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.45%)</title><rect x="315" y="212" width="5" height="15" fill="rgb(237,2,26)"/><text x="318.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (14 samples, 6.25%)</title><rect x="252" y="180" width="74" height="15" fill="rgb(217,71,4)"/><text x="255.00" y="190.50">check_ar..</text></g><g><title>simplefilter (warnings.py:179) (9 samples, 4.02%)</title><rect x="278" y="196" width="48" height="15" fill="rgb(220,46,17)"/><text x="281.00" y="206.50">simp..</text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.45%)</title><rect x="320" y="212" width="6" height="15" fill="rgb(220,189,15)"/><text x="323.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c:2261) (1 samples, 0.45%)</title><rect x="331" y="196" width="5" height="15" fill="rgb(213,223,52)"/><text x="334.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.45%)</title><rect x="336" y="212" width="5" height="15" fill="rgb(237,11,52)"/><text x="339.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.45%)</title><rect x="341" y="228" width="6" height="15" fill="rgb(216,95,36)"/><text x="344.00" y="238.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.45%)</title><rect x="341" y="244" width="6" height="15" fill="rgb(222,24,46)"/><text x="344.00" y="254.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4553) (1 samples, 0.45%)</title><rect x="341" y="260" width="6" height="15" fill="rgb(211,210,50)"/><text x="344.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (5 samples, 2.23%)</title><rect x="326" y="180" width="26" height="15" fill="rgb(241,126,44)"/><text x="329.00" y="190.50">c..</text></g><g><title>arraydescr_new (descriptor.c:2283) (3 samples, 1.34%)</title><rect x="336" y="196" width="16" height="15" fill="rgb(218,5,0)"/><text x="339.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (2 samples, 0.89%)</title><rect x="341" y="212" width="11" height="15" fill="rgb(243,121,16)"/><text x="344.00" y="222.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:434) (1 samples, 0.45%)</title><rect x="347" y="228" width="5" height="15" fill="rgb(226,100,53)"/><text x="350.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 1.79%)</title><rect x="352" y="180" width="21" height="15" fill="rgb(218,100,1)"/><text x="355.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.89%)</title><rect x="362" y="196" width="11" height="15" fill="rgb(234,61,22)"/><text x="365.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.45%)</title><rect x="368" y="212" width="5" height="15" fill="rgb(241,104,30)"/><text x="371.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="368" y="228" width="5" height="15" fill="rgb(215,196,8)"/><text x="371.00" y="238.50"></text></g><g><title>0x7fb7eff4edf0 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="368" y="244" width="5" height="15" fill="rgb(223,198,53)"/><text x="371.00" y="254.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.45%)</title><rect x="373" y="196" width="5" height="15" fill="rgb(254,105,53)"/><text x="376.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (2 samples, 0.89%)</title><rect x="373" y="180" width="11" height="15" fill="rgb(233,160,45)"/><text x="376.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.45%)</title><rect x="378" y="196" width="6" height="15" fill="rgb(251,16,24)"/><text x="381.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.45%)</title><rect x="384" y="180" width="5" height="15" fill="rgb(208,177,53)"/><text x="387.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.45%)</title><rect x="384" y="196" width="5" height="15" fill="rgb(250,161,51)"/><text x="387.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:561) (1 samples, 0.45%)</title><rect x="389" y="180" width="5" height="15" fill="rgb(219,103,53)"/><text x="392.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.89%)</title><rect x="441" y="212" width="11" height="15" fill="rgb(232,118,25)"/><text x="444.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1044) (1 samples, 0.45%)</title><rect x="452" y="212" width="5" height="15" fill="rgb(214,80,26)"/><text x="455.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (13 samples, 5.80%)</title><rect x="394" y="180" width="69" height="15" fill="rgb(238,134,8)"/><text x="397.00" y="190.50">check_a..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (10 samples, 4.46%)</title><rect x="410" y="196" width="53" height="15" fill="rgb(226,61,44)"/><text x="413.00" y="206.50">_asse..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.45%)</title><rect x="457" y="212" width="6" height="15" fill="rgb(205,52,54)"/><text x="460.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:564) (1 samples, 0.45%)</title><rect x="463" y="180" width="5" height="15" fill="rgb(251,17,29)"/><text x="466.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.89%)</title><rect x="468" y="196" width="10" height="15" fill="rgb(229,116,6)"/><text x="471.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.45%)</title><rect x="478" y="196" width="6" height="15" fill="rgb(206,18,5)"/><text x="481.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (2 samples, 0.89%)</title><rect x="484" y="196" width="10" height="15" fill="rgb(250,87,40)"/><text x="487.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1171) (1 samples, 0.45%)</title><rect x="489" y="212" width="5" height="15" fill="rgb(224,112,6)"/><text x="492.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.68%)</title><rect x="494" y="196" width="32" height="15" fill="rgb(245,228,3)"/><text x="497.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (5 samples, 2.23%)</title><rect x="499" y="212" width="27" height="15" fill="rgb(229,191,1)"/><text x="502.00" y="222.50">_..</text></g><g><title>__subclasscheck__ (abc.py:143) (4 samples, 1.79%)</title><rect x="505" y="228" width="21" height="15" fill="rgb(227,165,27)"/><text x="508.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (12 samples, 5.36%)</title><rect x="468" y="180" width="63" height="15" fill="rgb(241,149,34)"/><text x="471.00" y="190.50">check_..</text></g><g><title>_num_samples (sklearn/utils/validation.py:156) (1 samples, 0.45%)</title><rect x="526" y="196" width="5" height="15" fill="rgb(215,79,49)"/><text x="529.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (2 samples, 0.89%)</title><rect x="531" y="180" width="11" height="15" fill="rgb(230,82,24)"/><text x="534.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (70 samples, 31.25%)</title><rect x="178" y="164" width="369" height="15" fill="rgb(211,86,34)"/><text x="181.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py:380)</text></g><g><title>check_array (sklearn/utils/validation.py:573) (1 samples, 0.45%)</title><rect x="542" y="180" width="5" height="15" fill="rgb(226,162,5)"/><text x="545.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (72 samples, 32.14%)</title><rect x="178" y="148" width="379" height="15" fill="rgb(239,145,25)"/><text x="181.00" y="158.50">predict (sklearn/tree/_classes.py:419)</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (2 samples, 0.89%)</title><rect x="547" y="164" width="10" height="15" fill="rgb(217,15,51)"/><text x="550.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.45%)</title><rect x="552" y="180" width="5" height="15" fill="rgb(239,212,39)"/><text x="555.00" y="190.50"></text></g><g><title>0x7fb7ca4dcd2e (?) (1 samples, 0.45%)</title><rect x="563" y="164" width="5" height="15" fill="rgb(223,191,38)"/><text x="566.00" y="174.50"></text></g><g><title>0x7fb7ca4dc14f (?) (1 samples, 0.45%)</title><rect x="563" y="180" width="5" height="15" fill="rgb(226,209,2)"/><text x="566.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="563" y="196" width="5" height="15" fill="rgb(226,91,46)"/><text x="566.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.45%)</title><rect x="563" y="212" width="5" height="15" fill="rgb(216,168,38)"/><text x="566.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.45%)</title><rect x="563" y="228" width="5" height="15" fill="rgb(251,43,38)"/><text x="566.00" y="238.50"></text></g><g><title>0x7fb7ca4cbcd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="568" y="196" width="5" height="15" fill="rgb(234,228,42)"/><text x="571.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1357) (1 samples, 0.45%)</title><rect x="573" y="212" width="5" height="15" fill="rgb(224,119,19)"/><text x="576.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.45%)</title><rect x="578" y="228" width="6" height="15" fill="rgb(230,94,31)"/><text x="581.00" y="238.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.45%)</title><rect x="578" y="244" width="6" height="15" fill="rgb(207,154,48)"/><text x="581.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.45%)</title><rect x="578" y="260" width="6" height="15" fill="rgb(243,198,49)"/><text x="581.00" y="270.50"></text></g><g><title>0x7fb7ca4dbf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.79%)</title><rect x="568" y="180" width="21" height="15" fill="rgb(220,107,0)"/><text x="571.00" y="190.50"></text></g><g><title>0x7fb7ca4cbd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="573" y="196" width="16" height="15" fill="rgb(217,135,44)"/><text x="576.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.89%)</title><rect x="578" y="212" width="11" height="15" fill="rgb(210,8,21)"/><text x="581.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.45%)</title><rect x="584" y="228" width="5" height="15" fill="rgb(218,73,16)"/><text x="587.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.45%)</title><rect x="584" y="244" width="5" height="15" fill="rgb(246,177,27)"/><text x="587.00" y="254.50"></text></g><g><title>0x7fb7ca4ea225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="589" y="212" width="5" height="15" fill="rgb(237,192,31)"/><text x="592.00" y="222.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.45%)</title><rect x="589" y="228" width="5" height="15" fill="rgb(205,176,21)"/><text x="592.00" y="238.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.45%)</title><rect x="589" y="244" width="5" height="15" fill="rgb(251,75,15)"/><text x="592.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:497) (1 samples, 0.45%)</title><rect x="589" y="260" width="5" height="15" fill="rgb(223,201,24)"/><text x="592.00" y="270.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.45%)</title><rect x="589" y="276" width="5" height="15" fill="rgb(242,149,29)"/><text x="592.00" y="286.50"></text></g><g><title>0x7fb7ca4c410c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="600" y="260" width="5" height="15" fill="rgb(206,118,31)"/><text x="603.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:770) (1 samples, 0.45%)</title><rect x="605" y="276" width="5" height="15" fill="rgb(247,30,20)"/><text x="608.00" y="286.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.45%)</title><rect x="605" y="292" width="5" height="15" fill="rgb(238,155,43)"/><text x="608.00" y="302.50"></text></g><g><title>0x7fb7ca4c42fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="605" y="260" width="10" height="15" fill="rgb(236,3,26)"/><text x="608.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (1 samples, 0.45%)</title><rect x="610" y="276" width="5" height="15" fill="rgb(213,122,32)"/><text x="613.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:671) (1 samples, 0.45%)</title><rect x="610" y="292" width="5" height="15" fill="rgb(214,218,29)"/><text x="613.00" y="302.50"></text></g><g><title>_buffer_info_cmp (buffer.c:611) (1 samples, 0.45%)</title><rect x="610" y="308" width="5" height="15" fill="rgb(242,64,33)"/><text x="613.00" y="318.50"></text></g><g><title>0x7fb7efe7f6e3 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="610" y="324" width="5" height="15" fill="rgb(254,203,36)"/><text x="613.00" y="334.50"></text></g><g><title>0x7fb7ca4ea2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.23%)</title><rect x="594" y="212" width="27" height="15" fill="rgb(218,126,15)"/><text x="597.00" y="222.50">0..</text></g><g><title>0x7fb7ca4ced04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.23%)</title><rect x="594" y="228" width="27" height="15" fill="rgb(252,157,32)"/><text x="597.00" y="238.50">0..</text></g><g><title>0x7fb7ca4ce666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.23%)</title><rect x="594" y="244" width="27" height="15" fill="rgb(217,90,10)"/><text x="597.00" y="254.50">0..</text></g><g><title>0x7fb7ca4c4467 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="615" y="260" width="6" height="15" fill="rgb(216,86,32)"/><text x="618.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (1 samples, 0.45%)</title><rect x="621" y="228" width="5" height="15" fill="rgb(217,49,29)"/><text x="624.00" y="238.50"></text></g><g><title>0x7fb7ca4ea592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.89%)</title><rect x="621" y="212" width="10" height="15" fill="rgb(205,212,37)"/><text x="624.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.45%)</title><rect x="626" y="228" width="5" height="15" fill="rgb(243,173,19)"/><text x="629.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.45%)</title><rect x="626" y="244" width="5" height="15" fill="rgb(212,91,43)"/><text x="629.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.45%)</title><rect x="626" y="260" width="5" height="15" fill="rgb(244,41,18)"/><text x="629.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.45%)</title><rect x="626" y="276" width="5" height="15" fill="rgb(205,182,3)"/><text x="629.00" y="286.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.45%)</title><rect x="626" y="292" width="5" height="15" fill="rgb(253,158,1)"/><text x="629.00" y="302.50"></text></g><g><title>0x7fb7ca4ea644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="631" y="212" width="5" height="15" fill="rgb(250,141,3)"/><text x="634.00" y="222.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="631" y="228" width="5" height="15" fill="rgb(225,27,25)"/><text x="634.00" y="238.50"></text></g><g><title>0x7fb7ca4ea731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="636" y="212" width="6" height="15" fill="rgb(233,31,15)"/><text x="639.00" y="222.50"></text></g><g><title>0x7fb7ca4ea92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="642" y="212" width="5" height="15" fill="rgb(242,129,53)"/><text x="645.00" y="222.50"></text></g><g><title>0x7fb7ca4bfa05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="642" y="228" width="5" height="15" fill="rgb(241,86,9)"/><text x="645.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.45%)</title><rect x="647" y="260" width="5" height="15" fill="rgb(249,23,49)"/><text x="650.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:548) (1 samples, 0.45%)</title><rect x="647" y="276" width="5" height="15" fill="rgb(230,130,17)"/><text x="650.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.45%)</title><rect x="652" y="260" width="5" height="15" fill="rgb(225,158,39)"/><text x="655.00" y="270.50"></text></g><g><title>0x7fb7ca4eb405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 6.25%)</title><rect x="589" y="196" width="74" height="15" fill="rgb(231,165,43)"/><text x="592.00" y="206.50">0x7fb7ca..</text></g><g><title>0x7fb7ca4eac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="647" y="212" width="16" height="15" fill="rgb(239,41,48)"/><text x="650.00" y="222.50"></text></g><g><title>0x7fb7ca4c2529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="647" y="228" width="16" height="15" fill="rgb(253,103,25)"/><text x="650.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.34%)</title><rect x="647" y="244" width="16" height="15" fill="rgb(248,52,18)"/><text x="650.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.45%)</title><rect x="657" y="260" width="6" height="15" fill="rgb(205,190,40)"/><text x="660.00" y="270.50"></text></g><g><title>0x7fb7ca4dbfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 6.70%)</title><rect x="589" y="180" width="79" height="15" fill="rgb(247,1,10)"/><text x="592.00" y="190.50">0x7fb7ca4..</text></g><g><title>0x7fb7ca4eb540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="663" y="196" width="5" height="15" fill="rgb(229,16,10)"/><text x="666.00" y="206.50"></text></g><g><title>0x7fb7ca4c02f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="663" y="212" width="5" height="15" fill="rgb(222,215,44)"/><text x="666.00" y="222.50"></text></g><g><title>0x7fb7ca4bf53c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="663" y="228" width="5" height="15" fill="rgb(250,161,51)"/><text x="666.00" y="238.50"></text></g><g><title>0x7fb7ca4dbfeb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="668" y="180" width="5" height="15" fill="rgb(245,195,50)"/><text x="671.00" y="190.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.89%)</title><rect x="673" y="196" width="11" height="15" fill="rgb(225,52,36)"/><text x="676.00" y="206.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.45%)</title><rect x="679" y="212" width="5" height="15" fill="rgb(236,118,41)"/><text x="682.00" y="222.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.45%)</title><rect x="684" y="212" width="5" height="15" fill="rgb(248,46,22)"/><text x="687.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.45%)</title><rect x="684" y="228" width="5" height="15" fill="rgb(240,139,24)"/><text x="687.00" y="238.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="684" y="244" width="5" height="15" fill="rgb(247,167,1)"/><text x="687.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.45%)</title><rect x="689" y="212" width="5" height="15" fill="rgb(228,215,18)"/><text x="692.00" y="222.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (1 samples, 0.45%)</title><rect x="689" y="228" width="5" height="15" fill="rgb(238,174,34)"/><text x="692.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.45%)</title><rect x="689" y="244" width="5" height="15" fill="rgb(218,170,34)"/><text x="692.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.45%)</title><rect x="689" y="260" width="5" height="15" fill="rgb(218,174,10)"/><text x="692.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c:2217) (1 samples, 0.45%)</title><rect x="689" y="276" width="5" height="15" fill="rgb(214,76,25)"/><text x="692.00" y="286.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:61) (1 samples, 0.45%)</title><rect x="694" y="212" width="6" height="15" fill="rgb(251,51,13)"/><text x="697.00" y="222.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:78) (1 samples, 0.45%)</title><rect x="700" y="212" width="5" height="15" fill="rgb(231,156,27)"/><text x="703.00" y="222.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h:1528) (1 samples, 0.45%)</title><rect x="700" y="228" width="5" height="15" fill="rgb(254,130,19)"/><text x="703.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.45%)</title><rect x="705" y="244" width="5" height="15" fill="rgb(222,12,30)"/><text x="708.00" y="254.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.45%)</title><rect x="705" y="260" width="5" height="15" fill="rgb(244,175,32)"/><text x="708.00" y="270.50"></text></g><g><title>0x7fb7ca4dc05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 3.57%)</title><rect x="673" y="180" width="42" height="15" fill="rgb(227,113,42)"/><text x="676.00" y="190.50">0x7..</text></g><g><title>array_take (methods.c:145) (6 samples, 2.68%)</title><rect x="684" y="196" width="31" height="15" fill="rgb(211,92,54)"/><text x="687.00" y="206.50">ar..</text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (2 samples, 0.89%)</title><rect x="705" y="212" width="10" height="15" fill="rgb(227,214,52)"/><text x="708.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (2 samples, 0.89%)</title><rect x="705" y="228" width="10" height="15" fill="rgb(235,42,26)"/><text x="708.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.45%)</title><rect x="710" y="244" width="5" height="15" fill="rgb(222,122,10)"/><text x="713.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.45%)</title><rect x="710" y="260" width="5" height="15" fill="rgb(241,30,15)"/><text x="713.00" y="270.50"></text></g><g><title>0x7fb7ca4dc14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="715" y="180" width="6" height="15" fill="rgb(207,136,2)"/><text x="718.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="715" y="196" width="6" height="15" fill="rgb(246,69,46)"/><text x="718.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.45%)</title><rect x="715" y="212" width="6" height="15" fill="rgb(230,180,17)"/><text x="718.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.45%)</title><rect x="715" y="228" width="6" height="15" fill="rgb(226,142,15)"/><text x="718.00" y="238.50"></text></g><g><title>0x7fb7ca4dc163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="721" y="180" width="5" height="15" fill="rgb(253,114,43)"/><text x="724.00" y="190.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.89%)</title><rect x="726" y="196" width="10" height="15" fill="rgb(250,227,48)"/><text x="729.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:40) (1 samples, 0.45%)</title><rect x="731" y="212" width="5" height="15" fill="rgb(224,6,1)"/><text x="734.00" y="222.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (35 samples, 15.62%)</title><rect x="557" y="148" width="185" height="15" fill="rgb(222,185,22)"/><text x="560.00" y="158.50">predict (sklearn/tree/_c..</text></g><g><title>0x7fb7ca4dcd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (33 samples, 14.73%)</title><rect x="568" y="164" width="174" height="15" fill="rgb(214,120,46)"/><text x="571.00" y="174.50">0x7fb7ca4dcd2e (sklear..</text></g><g><title>0x7fb7ca4dc328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.34%)</title><rect x="726" y="180" width="16" height="15" fill="rgb(217,189,9)"/><text x="729.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.45%)</title><rect x="736" y="196" width="6" height="15" fill="rgb(221,124,19)"/><text x="739.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.45%)</title><rect x="736" y="212" width="6" height="15" fill="rgb(230,13,18)"/><text x="739.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.45%)</title><rect x="736" y="228" width="6" height="15" fill="rgb(235,92,21)"/><text x="739.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:960) (1 samples, 0.45%)</title><rect x="736" y="244" width="6" height="15" fill="rgb(205,14,33)"/><text x="739.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.45%)</title><rect x="742" y="148" width="5" height="15" fill="rgb(209,165,38)"/><text x="745.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.45%)</title><rect x="742" y="164" width="5" height="15" fill="rgb(213,92,50)"/><text x="745.00" y="174.50"></text></g><g><title>predict (sklearn/tree/_classes.py:441) (1 samples, 0.45%)</title><rect x="747" y="148" width="5" height="15" fill="rgb(244,190,18)"/><text x="750.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.45%)</title><rect x="758" y="164" width="5" height="15" fill="rgb(206,147,0)"/><text x="761.00" y="174.50"></text></g><g><title>prepare_index (mapping.c:376) (1 samples, 0.45%)</title><rect x="758" y="180" width="5" height="15" fill="rgb(211,155,48)"/><text x="761.00" y="190.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (130 samples, 58.04%)</title><rect x="83" y="132" width="685" height="15" fill="rgb(241,132,36)"/><text x="86.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/tree/_classes.py:442) (3 samples, 1.34%)</title><rect x="752" y="148" width="16" height="15" fill="rgb(250,45,54)"/><text x="755.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.45%)</title><rect x="763" y="164" width="5" height="15" fill="rgb(216,48,18)"/><text x="766.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:54) (133 samples, 59.38%)</title><rect x="73" y="52" width="700" height="15" fill="rgb(240,44,49)"/><text x="76.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:53) (133 samples, 59.38%)</title><rect x="73" y="68" width="700" height="15" fill="rgb(221,175,26)"/><text x="76.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:37) (133 samples, 59.38%)</title><rect x="73" y="84" width="700" height="15" fill="rgb(221,111,24)"/><text x="76.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:31) (133 samples, 59.38%)</title><rect x="73" y="100" width="700" height="15" fill="rgb(214,190,50)"/><text x="76.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (132 samples, 58.93%)</title><rect x="78" y="116" width="695" height="15" fill="rgb(217,223,6)"/><text x="81.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.45%)</title><rect x="768" y="132" width="5" height="15" fill="rgb(241,15,3)"/><text x="771.00" y="142.50"></text></g><g><title>0x7fb7b094954f (?) (1 samples, 0.45%)</title><rect x="773" y="244" width="6" height="15" fill="rgb(236,14,17)"/><text x="776.00" y="254.50"></text></g><g><title>0x7fb7b094f65e (?) (1 samples, 0.45%)</title><rect x="773" y="260" width="6" height="15" fill="rgb(226,145,17)"/><text x="776.00" y="270.50"></text></g><g><title>0x7fb7b094f50f (?) (1 samples, 0.45%)</title><rect x="773" y="276" width="6" height="15" fill="rgb(222,210,52)"/><text x="776.00" y="286.50"></text></g><g><title>0x7fb7b0955d6c (?) (1 samples, 0.45%)</title><rect x="773" y="292" width="6" height="15" fill="rgb(251,224,45)"/><text x="776.00" y="302.50"></text></g><g><title>0x7fb7b9e76ab9 (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="773" y="308" width="6" height="15" fill="rgb(221,60,49)"/><text x="776.00" y="318.50"></text></g><g><title>0x7fb7b9e77ea9 (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="773" y="324" width="6" height="15" fill="rgb(231,162,16)"/><text x="776.00" y="334.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:424) (1 samples, 0.45%)</title><rect x="779" y="244" width="5" height="15" fill="rgb(251,171,16)"/><text x="782.00" y="254.50"></text></g><g><title>0x7fb7b9e77ea0 (libgomp.so.1.0.0) (2 samples, 0.89%)</title><rect x="784" y="484" width="10" height="15" fill="rgb(233,81,40)"/><text x="787.00" y="494.50"></text></g><g><title>0x7fb7b9e77ea9 (libgomp.so.1.0.0) (8 samples, 3.57%)</title><rect x="794" y="484" width="43" height="15" fill="rgb(226,213,51)"/><text x="797.00" y="494.50">0x7f..</text></g><g><title>0x7fb7b9e77eab (libgomp.so.1.0.0) (10 samples, 4.46%)</title><rect x="837" y="484" width="52" height="15" fill="rgb(209,169,23)"/><text x="840.00" y="494.50">0x7fb..</text></g><g><title>0x7fb7b9e76ab9 (libgomp.so.1.0.0) (28 samples, 12.50%)</title><rect x="784" y="468" width="147" height="15" fill="rgb(233,170,1)"/><text x="787.00" y="478.50">0x7fb7b9e76ab9 (li..</text></g><g><title>0x7fb7b9e77ead (libgomp.so.1.0.0) (8 samples, 3.57%)</title><rect x="889" y="484" width="42" height="15" fill="rgb(207,108,45)"/><text x="892.00" y="494.50">0x7..</text></g><g><title>0x7fb7b9e77cf0 (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="931" y="500" width="6" height="15" fill="rgb(242,138,48)"/><text x="934.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:61) (32 samples, 14.29%)</title><rect x="773" y="52" width="169" height="15" fill="rgb(239,160,13)"/><text x="776.00" y="62.50">&lt;module&gt; (bench_Decis..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:60) (32 samples, 14.29%)</title><rect x="773" y="68" width="169" height="15" fill="rgb(252,29,41)"/><text x="776.00" y="78.50">profile_pyrt (bench_D..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:37) (32 samples, 14.29%)</title><rect x="773" y="84" width="169" height="15" fill="rgb(221,56,48)"/><text x="776.00" y="94.50">setup_profile (bench_..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:31) (32 samples, 14.29%)</title><rect x="773" y="100" width="169" height="15" fill="rgb(229,3,16)"/><text x="776.00" y="110.50">profile (bench_Decisi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (32 samples, 14.29%)</title><rect x="773" y="116" width="169" height="15" fill="rgb(210,162,26)"/><text x="776.00" y="126.50">time_predict (mlprodi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (32 samples, 14.29%)</title><rect x="773" y="132" width="169" height="15" fill="rgb(230,95,4)"/><text x="776.00" y="142.50">&lt;lambda&gt; (mlprodict/a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (32 samples, 14.29%)</title><rect x="773" y="148" width="169" height="15" fill="rgb(208,127,46)"/><text x="776.00" y="158.50">run (mlprodict/onnxrt..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (32 samples, 14.29%)</title><rect x="773" y="164" width="169" height="15" fill="rgb(221,98,44)"/><text x="776.00" y="174.50">_run_sequence_runtime..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (32 samples, 14.29%)</title><rect x="773" y="180" width="169" height="15" fill="rgb(229,202,54)"/><text x="776.00" y="190.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (32 samples, 14.29%)</title><rect x="773" y="196" width="169" height="15" fill="rgb(237,39,5)"/><text x="776.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (32 samples, 14.29%)</title><rect x="773" y="212" width="169" height="15" fill="rgb(214,72,4)"/><text x="776.00" y="222.50">run (mlprodict/onnxrt..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (32 samples, 14.29%)</title><rect x="773" y="228" width="169" height="15" fill="rgb(219,34,40)"/><text x="776.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (30 samples, 13.39%)</title><rect x="784" y="244" width="158" height="15" fill="rgb(226,57,35)"/><text x="787.00" y="254.50">pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (30 samples, 13.39%)</title><rect x="784" y="260" width="158" height="15" fill="rgb(235,188,41)"/><text x="787.00" y="270.50">void pybind11::cpp_f..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (30 samples, 13.39%)</title><rect x="784" y="276" width="158" height="15" fill="rgb(249,226,13)"/><text x="787.00" y="286.50">void pybind11::cpp_f..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (30 samples, 13.39%)</title><rect x="784" y="292" width="158" height="15" fill="rgb(219,70,41)"/><text x="787.00" y="302.50">pybind11::detail::ar..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (30 samples, 13.39%)</title><rect x="784" y="308" width="158" height="15" fill="rgb(245,166,24)"/><text x="787.00" y="318.50">pybind11::detail::ar..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (30 samples, 13.39%)</title><rect x="784" y="324" width="158" height="15" fill="rgb(240,155,11)"/><text x="787.00" y="334.50">pybind11::cpp_functi..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (30 samples, 13.39%)</title><rect x="784" y="340" width="158" height="15" fill="rgb(220,20,28)"/><text x="787.00" y="350.50">pybind11::array_t&lt;fl..</text></g><g><title>pybind11::array::~array (numpy.h:538) (30 samples, 13.39%)</title><rect x="784" y="356" width="158" height="15" fill="rgb(207,143,20)"/><text x="787.00" y="366.50">pybind11::array::~ar..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (30 samples, 13.39%)</title><rect x="784" y="372" width="158" height="15" fill="rgb(222,159,18)"/><text x="787.00" y="382.50">pybind11::buffer::~b..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (30 samples, 13.39%)</title><rect x="784" y="388" width="158" height="15" fill="rgb(224,188,24)"/><text x="787.00" y="398.50">pybind11::object::~o..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (30 samples, 13.39%)</title><rect x="784" y="404" width="158" height="15" fill="rgb(252,38,49)"/><text x="787.00" y="414.50">pybind11::handle::de..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (30 samples, 13.39%)</title><rect x="784" y="420" width="158" height="15" fill="rgb(243,64,47)"/><text x="787.00" y="430.50">RuntimeTreeEnsembleR..</text></g><g><title>pybind11::array::size (numpy.h:619) (30 samples, 13.39%)</title><rect x="784" y="436" width="158" height="15" fill="rgb(216,60,24)"/><text x="787.00" y="446.50">pybind11::array::siz..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (30 samples, 13.39%)</title><rect x="784" y="452" width="158" height="15" fill="rgb(212,204,36)"/><text x="787.00" y="462.50">std::accumulate&lt;long..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.89%)</title><rect x="931" y="468" width="11" height="15" fill="rgb(210,118,31)"/><text x="934.00" y="478.50"></text></g><g><title>0x7fb7b9e75daa (libgomp.so.1.0.0) (2 samples, 0.89%)</title><rect x="931" y="484" width="11" height="15" fill="rgb(251,58,40)"/><text x="934.00" y="494.50"></text></g><g><title>0x7fb7b9e77cfb (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="937" y="500" width="5" height="15" fill="rgb(238,86,31)"/><text x="940.00" y="510.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:30) (1 samples, 0.45%)</title><rect x="942" y="100" width="5" height="15" fill="rgb(222,217,41)"/><text x="945.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.89%)</title><rect x="968" y="148" width="11" height="15" fill="rgb(208,65,44)"/><text x="971.00" y="158.50"></text></g><g><title>std::_Bvector_base&lt;std::allocator&lt;bool&gt; &gt;::_M_deallocate [clone .localalias.21] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1005" y="244" width="5" height="15" fill="rgb(248,21,49)"/><text x="1008.00" y="254.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (6 samples, 2.68%)</title><rect x="984" y="196" width="32" height="15" fill="rgb(240,191,2)"/><text x="987.00" y="206.50">ru..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 2.23%)</title><rect x="989" y="212" width="27" height="15" fill="rgb(208,219,26)"/><text x="992.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.34%)</title><rect x="1000" y="228" width="16" height="15" fill="rgb(239,138,42)"/><text x="1003.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1010" y="244" width="6" height="15" fill="rgb(226,69,11)"/><text x="1013.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1010" y="260" width="6" height="15" fill="rgb(233,109,22)"/><text x="1013.00" y="270.50"></text></g><g><title>0x7fb7aff2eff9 (?) (1 samples, 0.45%)</title><rect x="1026" y="212" width="5" height="15" fill="rgb(252,115,23)"/><text x="1029.00" y="222.50"></text></g><g><title>0x7fb7aff29ef6 (?) (1 samples, 0.45%)</title><rect x="1026" y="228" width="5" height="15" fill="rgb(208,201,2)"/><text x="1029.00" y="238.50"></text></g><g><title>0x7fb7aff1e458 (?) (1 samples, 0.45%)</title><rect x="1026" y="244" width="5" height="15" fill="rgb(209,128,36)"/><text x="1029.00" y="254.50"></text></g><g><title>0x7fb7aff0ed1e (?) (1 samples, 0.45%)</title><rect x="1026" y="260" width="5" height="15" fill="rgb(223,214,42)"/><text x="1029.00" y="270.50"></text></g><g><title>0x7fb7efe70d07 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1047" y="228" width="6" height="15" fill="rgb(223,14,46)"/><text x="1050.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="1063" y="260" width="5" height="15" fill="rgb(220,223,13)"/><text x="1066.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1068" y="276" width="6" height="15" fill="rgb(230,106,13)"/><text x="1071.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.89%)</title><rect x="1084" y="292" width="11" height="15" fill="rgb(234,133,22)"/><text x="1087.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1089" y="308" width="6" height="15" fill="rgb(224,122,17)"/><text x="1092.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1089" y="324" width="6" height="15" fill="rgb(227,36,34)"/><text x="1092.00" y="334.50"></text></g><g><title>0x7fb7efe71f0a (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1089" y="340" width="6" height="15" fill="rgb(238,11,33)"/><text x="1092.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1105" y="356" width="5" height="15" fill="rgb(247,17,10)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1105" y="372" width="5" height="15" fill="rgb(238,79,50)"/><text x="1108.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1105" y="388" width="5" height="15" fill="rgb(211,133,35)"/><text x="1108.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.79%)</title><rect x="1095" y="340" width="21" height="15" fill="rgb(234,87,38)"/><text x="1098.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1110" y="356" width="6" height="15" fill="rgb(251,51,13)"/><text x="1113.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1110" y="372" width="6" height="15" fill="rgb(230,151,42)"/><text x="1113.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1110" y="388" width="6" height="15" fill="rgb(226,144,50)"/><text x="1113.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.46%)</title><rect x="1068" y="260" width="53" height="15" fill="rgb(205,186,45)"/><text x="1071.00" y="270.50">onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 4.02%)</title><rect x="1074" y="276" width="47" height="15" fill="rgb(245,138,43)"/><text x="1077.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.23%)</title><rect x="1095" y="292" width="26" height="15" fill="rgb(236,216,53)"/><text x="1098.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.23%)</title><rect x="1095" y="308" width="26" height="15" fill="rgb(241,79,6)"/><text x="1098.00" y="318.50">o..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.23%)</title><rect x="1095" y="324" width="26" height="15" fill="rgb(242,48,12)"/><text x="1098.00" y="334.50">o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1116" y="340" width="5" height="15" fill="rgb(210,209,29)"/><text x="1119.00" y="350.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1116" y="356" width="5" height="15" fill="rgb(221,2,26)"/><text x="1119.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.79%)</title><rect x="1121" y="260" width="21" height="15" fill="rgb(218,6,48)"/><text x="1124.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1137" y="276" width="5" height="15" fill="rgb(212,34,52)"/><text x="1140.00" y="286.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1137" y="292" width="5" height="15" fill="rgb(251,26,40)"/><text x="1140.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1142" y="260" width="5" height="15" fill="rgb(216,90,6)"/><text x="1145.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.45%)</title><rect x="1142" y="276" width="5" height="15" fill="rgb(215,57,1)"/><text x="1145.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.45%)</title><rect x="1142" y="292" width="5" height="15" fill="rgb(242,55,12)"/><text x="1145.00" y="302.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 8.04%)</title><rect x="1063" y="244" width="95" height="15" fill="rgb(230,123,48)"/><text x="1066.00" y="254.50">onnxruntime..</text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.89%)</title><rect x="1147" y="260" width="11" height="15" fill="rgb(233,164,39)"/><text x="1150.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.89%)</title><rect x="1147" y="276" width="11" height="15" fill="rgb(246,75,46)"/><text x="1150.00" y="286.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1158" y="244" width="5" height="15" fill="rgb(240,131,38)"/><text x="1161.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1158" y="260" width="5" height="15" fill="rgb(222,160,16)"/><text x="1161.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="244" width="5" height="15" fill="rgb(214,33,45)"/><text x="1166.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1163" y="260" width="5" height="15" fill="rgb(225,146,40)"/><text x="1166.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (36 samples, 16.07%)</title><rect x="984" y="164" width="190" height="15" fill="rgb(235,178,5)"/><text x="987.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (36 samples, 16.07%)</title><rect x="984" y="180" width="190" height="15" fill="rgb(234,43,27)"/><text x="987.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py:136) (30 samples, 13.39%)</title><rect x="1016" y="196" width="158" height="15" fill="rgb(244,19,26)"/><text x="1019.00" y="206.50">run (onnxruntime/cap..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 12.05%)</title><rect x="1031" y="212" width="143" height="15" fill="rgb(210,197,7)"/><text x="1034.00" y="222.50">pybind11::cpp_func..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (23 samples, 10.27%)</title><rect x="1053" y="228" width="121" height="15" fill="rgb(245,111,46)"/><text x="1056.00" y="238.50">void pybind11::..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1168" y="244" width="6" height="15" fill="rgb(250,148,30)"/><text x="1171.00" y="254.50"></text></g><g><title>all (224 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(211,64,29)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:68) (47 samples, 20.98%)</title><rect x="942" y="52" width="248" height="15" fill="rgb(227,211,41)"/><text x="945.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegre..</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:67) (47 samples, 20.98%)</title><rect x="942" y="68" width="248" height="15" fill="rgb(215,6,31)"/><text x="945.00" y="78.50">profile_ort (bench_DecisionTreeRe..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:37) (47 samples, 20.98%)</title><rect x="942" y="84" width="248" height="15" fill="rgb(234,6,3)"/><text x="945.00" y="94.50">setup_profile (bench_DecisionTree..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1_4_12_float_.py:31) (46 samples, 20.54%)</title><rect x="947" y="100" width="243" height="15" fill="rgb(246,203,54)"/><text x="950.00" y="110.50">profile (bench_DecisionTreeRegre..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (45 samples, 20.09%)</title><rect x="952" y="116" width="238" height="15" fill="rgb(232,52,34)"/><text x="955.00" y="126.50">time_predict (mlprodict/asv_ben..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (43 samples, 19.20%)</title><rect x="963" y="132" width="227" height="15" fill="rgb(220,44,48)"/><text x="966.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (40 samples, 17.86%)</title><rect x="979" y="148" width="211" height="15" fill="rgb(215,221,25)"/><text x="982.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (3 samples, 1.34%)</title><rect x="1174" y="164" width="16" height="15" fill="rgb(233,154,12)"/><text x="1177.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.45%)</title><rect x="1184" y="180" width="6" height="15" fill="rgb(209,79,13)"/><text x="1187.00" y="190.50"></text></g></g></svg>