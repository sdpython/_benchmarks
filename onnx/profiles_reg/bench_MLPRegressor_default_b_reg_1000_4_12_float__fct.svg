<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(240,42,5)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.43%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(222,61,10)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.43%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(252,11,26)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="900" width="3" height="15" fill="rgb(246,220,42)"/><text x="15.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="916" width="3" height="15" fill="rgb(250,124,18)"/><text x="15.00" y="926.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.22%)</title><rect x="12" y="932" width="3" height="15" fill="rgb(210,214,43)"/><text x="15.00" y="942.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.43%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(218,36,46)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(220,37,50)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(215,204,40)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(245,227,19)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="17" y="996" width="3" height="15" fill="rgb(248,119,48)"/><text x="20.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="17" y="1012" width="3" height="15" fill="rgb(213,174,21)"/><text x="20.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.22%)</title><rect x="17" y="1028" width="3" height="15" fill="rgb(206,96,49)"/><text x="20.00" y="1038.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.22%)</title><rect x="17" y="1044" width="3" height="15" fill="rgb(247,185,7)"/><text x="20.00" y="1054.50"></text></g><g><title>0x7f82110b7f96 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="17" y="1060" width="3" height="15" fill="rgb(238,147,39)"/><text x="20.00" y="1070.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.08%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(228,93,23)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(233,91,12)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(206,83,43)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(240,214,40)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="10" y="356" width="12" height="15" fill="rgb(243,142,4)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="372" width="12" height="15" fill="rgb(205,203,15)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.08%)</title><rect x="10" y="388" width="12" height="15" fill="rgb(216,193,48)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="404" width="12" height="15" fill="rgb(215,40,24)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="420" width="12" height="15" fill="rgb(245,76,37)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="436" width="12" height="15" fill="rgb(226,30,53)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="10" y="452" width="12" height="15" fill="rgb(207,202,15)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="468" width="12" height="15" fill="rgb(224,109,51)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.08%)</title><rect x="10" y="484" width="12" height="15" fill="rgb(210,105,40)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="500" width="12" height="15" fill="rgb(232,83,16)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="516" width="12" height="15" fill="rgb(247,191,6)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="532" width="12" height="15" fill="rgb(250,7,17)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="10" y="548" width="12" height="15" fill="rgb(212,205,48)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="564" width="12" height="15" fill="rgb(243,163,44)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.08%)</title><rect x="10" y="580" width="12" height="15" fill="rgb(207,99,25)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="596" width="12" height="15" fill="rgb(206,197,36)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="612" width="12" height="15" fill="rgb(240,30,51)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="628" width="12" height="15" fill="rgb(227,101,54)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="644" width="12" height="15" fill="rgb(250,83,46)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="660" width="12" height="15" fill="rgb(228,56,19)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="676" width="12" height="15" fill="rgb(236,171,39)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="10" y="692" width="12" height="15" fill="rgb(239,151,40)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="708" width="12" height="15" fill="rgb(205,65,38)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.08%)</title><rect x="10" y="724" width="12" height="15" fill="rgb(220,139,11)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="740" width="12" height="15" fill="rgb(222,216,27)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="756" width="12" height="15" fill="rgb(252,163,25)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="772" width="12" height="15" fill="rgb(246,154,1)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="10" y="788" width="12" height="15" fill="rgb(229,107,8)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="10" y="804" width="12" height="15" fill="rgb(218,123,45)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.08%)</title><rect x="10" y="820" width="12" height="15" fill="rgb(239,14,51)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.08%)</title><rect x="10" y="836" width="12" height="15" fill="rgb(221,229,26)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.08%)</title><rect x="10" y="852" width="12" height="15" fill="rgb(226,118,29)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (3 samples, 0.65%)</title><rect x="15" y="868" width="7" height="15" fill="rgb(236,110,2)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (3 samples, 0.65%)</title><rect x="15" y="884" width="7" height="15" fill="rgb(228,117,25)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.65%)</title><rect x="15" y="900" width="7" height="15" fill="rgb(244,219,33)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.65%)</title><rect x="15" y="916" width="7" height="15" fill="rgb(243,53,17)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="932" width="2" height="15" fill="rgb(244,67,35)"/><text x="23.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="948" width="2" height="15" fill="rgb(232,171,50)"/><text x="23.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="964" width="2" height="15" fill="rgb(210,140,15)"/><text x="23.00" y="974.50"></text></g><g><title>safe_name (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="20" y="980" width="2" height="15" fill="rgb(226,93,15)"/><text x="23.00" y="990.50"></text></g><g><title>sub (re.py) (1 samples, 0.22%)</title><rect x="20" y="996" width="2" height="15" fill="rgb(219,127,52)"/><text x="23.00" y="1006.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="20" y="1012" width="2" height="15" fill="rgb(248,7,28)"/><text x="23.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.30%)</title><rect x="10" y="196" width="15" height="15" fill="rgb(241,112,50)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.30%)</title><rect x="10" y="212" width="15" height="15" fill="rgb(249,96,13)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.30%)</title><rect x="10" y="228" width="15" height="15" fill="rgb(210,52,32)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.30%)</title><rect x="10" y="244" width="15" height="15" fill="rgb(239,152,39)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.30%)</title><rect x="10" y="260" width="15" height="15" fill="rgb(253,209,14)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.30%)</title><rect x="10" y="276" width="15" height="15" fill="rgb(238,58,6)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="292" width="3" height="15" fill="rgb(250,196,27)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="308" width="3" height="15" fill="rgb(219,211,3)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="324" width="3" height="15" fill="rgb(254,53,28)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="340" width="3" height="15" fill="rgb(212,37,4)"/><text x="25.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="356" width="3" height="15" fill="rgb(254,9,38)"/><text x="25.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="372" width="3" height="15" fill="rgb(251,6,17)"/><text x="25.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.22%)</title><rect x="22" y="388" width="3" height="15" fill="rgb(247,75,28)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="404" width="3" height="15" fill="rgb(215,207,31)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="420" width="3" height="15" fill="rgb(224,140,17)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="436" width="3" height="15" fill="rgb(235,52,28)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="452" width="3" height="15" fill="rgb(253,202,38)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="468" width="3" height="15" fill="rgb(226,23,4)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="484" width="3" height="15" fill="rgb(243,162,36)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="500" width="3" height="15" fill="rgb(239,85,35)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="516" width="3" height="15" fill="rgb(233,119,46)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="532" width="3" height="15" fill="rgb(210,176,51)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="548" width="3" height="15" fill="rgb(207,200,50)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="564" width="3" height="15" fill="rgb(254,17,53)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.22%)</title><rect x="22" y="580" width="3" height="15" fill="rgb(238,8,47)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="596" width="3" height="15" fill="rgb(228,113,6)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="612" width="3" height="15" fill="rgb(206,199,0)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="628" width="3" height="15" fill="rgb(222,87,13)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="644" width="3" height="15" fill="rgb(248,78,2)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="660" width="3" height="15" fill="rgb(229,186,27)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="676" width="3" height="15" fill="rgb(230,4,9)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="692" width="3" height="15" fill="rgb(239,58,10)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="708" width="3" height="15" fill="rgb(248,62,33)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="724" width="3" height="15" fill="rgb(212,159,42)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="740" width="3" height="15" fill="rgb(235,14,53)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="756" width="3" height="15" fill="rgb(230,5,46)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_multivariate.py) (1 samples, 0.22%)</title><rect x="22" y="772" width="3" height="15" fill="rgb(210,171,5)"/><text x="25.00" y="782.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.22%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(218,173,22)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1316" width="2" height="15" fill="rgb(244,132,25)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1332" width="2" height="15" fill="rgb(215,85,45)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1348" width="2" height="15" fill="rgb(252,40,39)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1364" width="2" height="15" fill="rgb(240,213,50)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1380" width="2" height="15" fill="rgb(218,47,53)"/><text x="28.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (1 samples, 0.22%)</title><rect x="25" y="1396" width="2" height="15" fill="rgb(213,207,9)"/><text x="28.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1412" width="2" height="15" fill="rgb(229,143,1)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1428" width="2" height="15" fill="rgb(209,74,20)"/><text x="28.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1444" width="2" height="15" fill="rgb(225,65,5)"/><text x="28.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1460" width="2" height="15" fill="rgb(225,229,1)"/><text x="28.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1476" width="2" height="15" fill="rgb(221,56,27)"/><text x="28.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb.py) (1 samples, 0.22%)</title><rect x="25" y="1492" width="2" height="15" fill="rgb(216,160,9)"/><text x="28.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1508" width="2" height="15" fill="rgb(233,195,28)"/><text x="28.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1524" width="2" height="15" fill="rgb(254,108,42)"/><text x="28.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1540" width="2" height="15" fill="rgb(212,80,19)"/><text x="28.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(219,24,12)"/><text x="28.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1572" width="2" height="15" fill="rgb(208,73,37)"/><text x="28.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(253,17,50)"/><text x="28.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(250,79,2)"/><text x="28.00" y="1614.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_gb_losses.py) (1 samples, 0.22%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(231,194,12)"/><text x="28.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(220,167,47)"/><text x="28.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(221,106,0)"/><text x="28.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(234,141,26)"/><text x="28.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1684" width="2" height="15" fill="rgb(240,140,54)"/><text x="28.00" y="1694.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1700" width="2" height="15" fill="rgb(242,29,13)"/><text x="28.00" y="1710.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1716" width="2" height="15" fill="rgb(236,147,48)"/><text x="28.00" y="1726.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="25" y="1732" width="2" height="15" fill="rgb(228,10,12)"/><text x="28.00" y="1742.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1124" width="5" height="15" fill="rgb(247,169,39)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1140" width="5" height="15" fill="rgb(242,199,10)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1156" width="5" height="15" fill="rgb(239,86,30)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.43%)</title><rect x="25" y="1172" width="5" height="15" fill="rgb(210,57,35)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1188" width="5" height="15" fill="rgb(232,192,25)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (2 samples, 0.43%)</title><rect x="25" y="1204" width="5" height="15" fill="rgb(249,87,26)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1220" width="5" height="15" fill="rgb(230,145,15)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1236" width="5" height="15" fill="rgb(220,1,1)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1252" width="5" height="15" fill="rgb(235,95,39)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.43%)</title><rect x="25" y="1268" width="5" height="15" fill="rgb(224,37,46)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="25" y="1284" width="5" height="15" fill="rgb(233,101,29)"/><text x="28.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.22%)</title><rect x="27" y="1300" width="3" height="15" fill="rgb(218,209,41)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1316" width="3" height="15" fill="rgb(231,59,26)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1332" width="3" height="15" fill="rgb(225,19,4)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1348" width="3" height="15" fill="rgb(214,41,34)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1364" width="3" height="15" fill="rgb(240,133,28)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1380" width="3" height="15" fill="rgb(223,22,39)"/><text x="30.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.22%)</title><rect x="27" y="1396" width="3" height="15" fill="rgb(206,1,39)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1412" width="3" height="15" fill="rgb(219,183,15)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1428" width="3" height="15" fill="rgb(247,146,9)"/><text x="30.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1444" width="3" height="15" fill="rgb(206,72,8)"/><text x="30.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1460" width="3" height="15" fill="rgb(222,141,40)"/><text x="30.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1476" width="3" height="15" fill="rgb(242,134,50)"/><text x="30.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.22%)</title><rect x="27" y="1492" width="3" height="15" fill="rgb(205,163,28)"/><text x="30.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1508" width="3" height="15" fill="rgb(221,126,48)"/><text x="30.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1524" width="3" height="15" fill="rgb(234,208,31)"/><text x="30.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1540" width="3" height="15" fill="rgb(219,130,53)"/><text x="30.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1556" width="3" height="15" fill="rgb(243,61,18)"/><text x="30.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1572" width="3" height="15" fill="rgb(213,184,26)"/><text x="30.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.22%)</title><rect x="27" y="1588" width="3" height="15" fill="rgb(208,190,54)"/><text x="30.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1604" width="3" height="15" fill="rgb(234,188,4)"/><text x="30.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1620" width="3" height="15" fill="rgb(207,167,35)"/><text x="30.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1636" width="3" height="15" fill="rgb(229,81,11)"/><text x="30.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1652" width="3" height="15" fill="rgb(231,33,23)"/><text x="30.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1668" width="3" height="15" fill="rgb(246,16,43)"/><text x="30.00" y="1678.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.22%)</title><rect x="27" y="1684" width="3" height="15" fill="rgb(239,168,4)"/><text x="30.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1700" width="3" height="15" fill="rgb(226,88,42)"/><text x="30.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1716" width="3" height="15" fill="rgb(226,224,32)"/><text x="30.00" y="1726.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="27" y="1732" width="3" height="15" fill="rgb(254,42,2)"/><text x="30.00" y="1742.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1748" width="3" height="15" fill="rgb(221,162,31)"/><text x="30.00" y="1758.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1764" width="3" height="15" fill="rgb(219,162,32)"/><text x="30.00" y="1774.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1780" width="3" height="15" fill="rgb(225,16,31)"/><text x="30.00" y="1790.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="27" y="1796" width="3" height="15" fill="rgb(223,6,14)"/><text x="30.00" y="1806.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.22%)</title><rect x="27" y="1812" width="3" height="15" fill="rgb(233,107,50)"/><text x="30.00" y="1822.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.22%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(252,50,13)"/><text x="33.00" y="1598.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.43%)</title><rect x="30" y="1508" width="5" height="15" fill="rgb(242,35,28)"/><text x="33.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.43%)</title><rect x="30" y="1524" width="5" height="15" fill="rgb(225,175,23)"/><text x="33.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.43%)</title><rect x="30" y="1540" width="5" height="15" fill="rgb(234,113,28)"/><text x="33.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.43%)</title><rect x="30" y="1556" width="5" height="15" fill="rgb(236,54,18)"/><text x="33.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.43%)</title><rect x="30" y="1572" width="5" height="15" fill="rgb(246,114,11)"/><text x="33.00" y="1582.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.22%)</title><rect x="32" y="1588" width="3" height="15" fill="rgb(234,116,49)"/><text x="35.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="484" width="13" height="15" fill="rgb(223,227,2)"/><text x="28.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="500" width="13" height="15" fill="rgb(232,57,44)"/><text x="28.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="516" width="13" height="15" fill="rgb(237,132,52)"/><text x="28.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="532" width="13" height="15" fill="rgb(215,144,38)"/><text x="28.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="25" y="548" width="13" height="15" fill="rgb(226,139,27)"/><text x="28.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="564" width="13" height="15" fill="rgb(226,205,23)"/><text x="28.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 1.08%)</title><rect x="25" y="580" width="13" height="15" fill="rgb(248,176,43)"/><text x="28.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="596" width="13" height="15" fill="rgb(206,146,10)"/><text x="28.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="612" width="13" height="15" fill="rgb(205,103,26)"/><text x="28.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="628" width="13" height="15" fill="rgb(216,46,38)"/><text x="28.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="25" y="644" width="13" height="15" fill="rgb(240,129,47)"/><text x="28.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="660" width="13" height="15" fill="rgb(223,47,3)"/><text x="28.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 1.08%)</title><rect x="25" y="676" width="13" height="15" fill="rgb(216,5,14)"/><text x="28.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="692" width="13" height="15" fill="rgb(220,143,38)"/><text x="28.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="708" width="13" height="15" fill="rgb(239,175,3)"/><text x="28.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="724" width="13" height="15" fill="rgb(238,85,33)"/><text x="28.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="25" y="740" width="13" height="15" fill="rgb(248,44,7)"/><text x="28.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="756" width="13" height="15" fill="rgb(221,64,1)"/><text x="28.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 1.08%)</title><rect x="25" y="772" width="13" height="15" fill="rgb(238,220,49)"/><text x="28.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="788" width="13" height="15" fill="rgb(207,94,20)"/><text x="28.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="804" width="13" height="15" fill="rgb(221,67,25)"/><text x="28.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="820" width="13" height="15" fill="rgb(247,214,14)"/><text x="28.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="25" y="836" width="13" height="15" fill="rgb(220,30,25)"/><text x="28.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="852" width="13" height="15" fill="rgb(219,170,23)"/><text x="28.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 1.08%)</title><rect x="25" y="868" width="13" height="15" fill="rgb(216,219,54)"/><text x="28.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="884" width="13" height="15" fill="rgb(251,52,8)"/><text x="28.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="900" width="13" height="15" fill="rgb(230,147,4)"/><text x="28.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="916" width="13" height="15" fill="rgb(253,162,29)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="932" width="13" height="15" fill="rgb(215,1,21)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="948" width="13" height="15" fill="rgb(228,229,7)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="964" width="13" height="15" fill="rgb(224,1,36)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="25" y="980" width="13" height="15" fill="rgb(209,16,38)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="996" width="13" height="15" fill="rgb(243,224,39)"/><text x="28.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 1.08%)</title><rect x="25" y="1012" width="13" height="15" fill="rgb(229,219,0)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="1028" width="13" height="15" fill="rgb(221,187,43)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="1044" width="13" height="15" fill="rgb(210,72,38)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="1060" width="13" height="15" fill="rgb(242,26,51)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.08%)</title><rect x="25" y="1076" width="13" height="15" fill="rgb(216,49,1)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.08%)</title><rect x="25" y="1092" width="13" height="15" fill="rgb(237,175,7)"/><text x="28.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 1.08%)</title><rect x="25" y="1108" width="13" height="15" fill="rgb(219,13,25)"/><text x="28.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1124" width="8" height="15" fill="rgb(229,122,44)"/><text x="33.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1140" width="8" height="15" fill="rgb(245,23,29)"/><text x="33.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1156" width="8" height="15" fill="rgb(209,118,37)"/><text x="33.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1172" width="8" height="15" fill="rgb(248,0,16)"/><text x="33.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1188" width="8" height="15" fill="rgb(228,173,8)"/><text x="33.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.65%)</title><rect x="30" y="1204" width="8" height="15" fill="rgb(223,97,40)"/><text x="33.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1220" width="8" height="15" fill="rgb(229,216,54)"/><text x="33.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.65%)</title><rect x="30" y="1236" width="8" height="15" fill="rgb(230,78,26)"/><text x="33.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1252" width="8" height="15" fill="rgb(236,159,23)"/><text x="33.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1268" width="8" height="15" fill="rgb(235,117,20)"/><text x="33.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1284" width="8" height="15" fill="rgb(243,96,40)"/><text x="33.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1300" width="8" height="15" fill="rgb(223,24,46)"/><text x="33.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1316" width="8" height="15" fill="rgb(206,89,30)"/><text x="33.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.65%)</title><rect x="30" y="1332" width="8" height="15" fill="rgb(223,87,12)"/><text x="33.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1348" width="8" height="15" fill="rgb(209,215,3)"/><text x="33.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.65%)</title><rect x="30" y="1364" width="8" height="15" fill="rgb(253,223,16)"/><text x="33.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1380" width="8" height="15" fill="rgb(241,165,46)"/><text x="33.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1396" width="8" height="15" fill="rgb(221,33,51)"/><text x="33.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1412" width="8" height="15" fill="rgb(229,167,19)"/><text x="33.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.65%)</title><rect x="30" y="1428" width="8" height="15" fill="rgb(245,136,49)"/><text x="33.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="30" y="1444" width="8" height="15" fill="rgb(235,161,33)"/><text x="33.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.65%)</title><rect x="30" y="1460" width="8" height="15" fill="rgb(245,170,26)"/><text x="33.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.65%)</title><rect x="30" y="1476" width="8" height="15" fill="rgb(252,146,8)"/><text x="33.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.65%)</title><rect x="30" y="1492" width="8" height="15" fill="rgb(232,42,20)"/><text x="33.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1508" width="3" height="15" fill="rgb(247,153,18)"/><text x="38.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1524" width="3" height="15" fill="rgb(213,219,3)"/><text x="38.00" y="1534.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.594] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1540" width="3" height="15" fill="rgb(247,50,32)"/><text x="38.00" y="1550.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="724" width="2" height="15" fill="rgb(219,132,22)"/><text x="41.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="740" width="2" height="15" fill="rgb(213,8,47)"/><text x="41.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="756" width="2" height="15" fill="rgb(216,18,50)"/><text x="41.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="772" width="2" height="15" fill="rgb(220,1,43)"/><text x="41.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="788" width="2" height="15" fill="rgb(239,112,37)"/><text x="41.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="804" width="2" height="15" fill="rgb(213,223,45)"/><text x="41.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="820" width="2" height="15" fill="rgb(252,75,14)"/><text x="41.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="836" width="2" height="15" fill="rgb(249,180,53)"/><text x="41.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="852" width="2" height="15" fill="rgb(215,55,11)"/><text x="41.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="868" width="2" height="15" fill="rgb(229,60,28)"/><text x="41.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="884" width="2" height="15" fill="rgb(232,203,31)"/><text x="41.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="900" width="2" height="15" fill="rgb(236,46,48)"/><text x="41.00" y="910.50"></text></g><g><title>0x7f81e996040e (?) (1 samples, 0.22%)</title><rect x="38" y="916" width="2" height="15" fill="rgb(224,137,42)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="932" width="2" height="15" fill="rgb(246,113,15)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="948" width="2" height="15" fill="rgb(246,165,24)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="964" width="2" height="15" fill="rgb(228,188,34)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="980" width="2" height="15" fill="rgb(231,210,21)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="996" width="2" height="15" fill="rgb(245,121,40)"/><text x="41.00" y="1006.50"></text></g><g><title>0x7f81e9719cd2 (?) (1 samples, 0.22%)</title><rect x="38" y="1012" width="2" height="15" fill="rgb(218,45,36)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1028" width="2" height="15" fill="rgb(225,226,47)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1044" width="2" height="15" fill="rgb(242,7,24)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1060" width="2" height="15" fill="rgb(249,122,48)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1076" width="2" height="15" fill="rgb(219,97,44)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1092" width="2" height="15" fill="rgb(217,144,13)"/><text x="41.00" y="1102.50"></text></g><g><title>0x7f81e8e0f0e5 (?) (1 samples, 0.22%)</title><rect x="38" y="1108" width="2" height="15" fill="rgb(215,132,14)"/><text x="41.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1124" width="2" height="15" fill="rgb(230,21,40)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1140" width="2" height="15" fill="rgb(205,110,54)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1156" width="2" height="15" fill="rgb(248,180,39)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1172" width="2" height="15" fill="rgb(254,184,16)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1188" width="2" height="15" fill="rgb(249,4,30)"/><text x="41.00" y="1198.50"></text></g><g><title>0x7f81e8b93e68 (?) (1 samples, 0.22%)</title><rect x="38" y="1204" width="2" height="15" fill="rgb(215,181,16)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1220" width="2" height="15" fill="rgb(223,194,18)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1236" width="2" height="15" fill="rgb(252,208,1)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1252" width="2" height="15" fill="rgb(238,67,52)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1268" width="2" height="15" fill="rgb(243,227,44)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1284" width="2" height="15" fill="rgb(236,164,28)"/><text x="41.00" y="1294.50"></text></g><g><title>0x7f81e89242fb (?) (1 samples, 0.22%)</title><rect x="38" y="1300" width="2" height="15" fill="rgb(252,90,22)"/><text x="41.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1316" width="2" height="15" fill="rgb(249,170,35)"/><text x="41.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1332" width="2" height="15" fill="rgb(247,224,34)"/><text x="41.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1348" width="2" height="15" fill="rgb(214,53,1)"/><text x="41.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1364" width="2" height="15" fill="rgb(207,148,53)"/><text x="41.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1380" width="2" height="15" fill="rgb(254,132,24)"/><text x="41.00" y="1390.50"></text></g><g><title>0x7f81e8708153 (?) (1 samples, 0.22%)</title><rect x="38" y="1396" width="2" height="15" fill="rgb(233,165,12)"/><text x="41.00" y="1406.50"></text></g><g><title>0x7f81e8706c13 (?) (1 samples, 0.22%)</title><rect x="38" y="1412" width="2" height="15" fill="rgb(217,162,54)"/><text x="41.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1428" width="2" height="15" fill="rgb(236,115,9)"/><text x="41.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1444" width="2" height="15" fill="rgb(232,163,14)"/><text x="41.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1460" width="2" height="15" fill="rgb(218,193,21)"/><text x="41.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="38" y="1476" width="2" height="15" fill="rgb(232,227,49)"/><text x="41.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="38" y="1492" width="2" height="15" fill="rgb(222,141,20)"/><text x="41.00" y="1502.50"></text></g><g><title>0x7f81e8463181 (?) (1 samples, 0.22%)</title><rect x="38" y="1508" width="2" height="15" fill="rgb(243,29,15)"/><text x="41.00" y="1518.50"></text></g><g><title>0x7f81e84661c9 (?) (1 samples, 0.22%)</title><rect x="38" y="1524" width="2" height="15" fill="rgb(230,167,15)"/><text x="41.00" y="1534.50"></text></g><g><title>0x7f81e8492167 (?) (1 samples, 0.22%)</title><rect x="38" y="1540" width="2" height="15" fill="rgb(247,51,48)"/><text x="41.00" y="1550.50"></text></g><g><title>0x7f81e848db64 (?) (1 samples, 0.22%)</title><rect x="38" y="1556" width="2" height="15" fill="rgb(209,136,17)"/><text x="41.00" y="1566.50"></text></g><g><title>0x7f81e847107b (?) (1 samples, 0.22%)</title><rect x="38" y="1572" width="2" height="15" fill="rgb(215,30,11)"/><text x="41.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.22%)</title><rect x="38" y="1588" width="2" height="15" fill="rgb(222,25,54)"/><text x="41.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="1604" width="2" height="15" fill="rgb(245,20,14)"/><text x="41.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="1620" width="2" height="15" fill="rgb(219,131,28)"/><text x="41.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.22%)</title><rect x="38" y="1636" width="2" height="15" fill="rgb(232,84,54)"/><text x="41.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.22%)</title><rect x="38" y="1652" width="2" height="15" fill="rgb(215,199,32)"/><text x="41.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="772" width="3" height="15" fill="rgb(214,68,53)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="788" width="3" height="15" fill="rgb(228,89,24)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="804" width="3" height="15" fill="rgb(250,79,3)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="820" width="3" height="15" fill="rgb(232,6,13)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="836" width="3" height="15" fill="rgb(212,152,27)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="852" width="3" height="15" fill="rgb(212,4,18)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.22%)</title><rect x="40" y="868" width="3" height="15" fill="rgb(220,21,16)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="884" width="3" height="15" fill="rgb(254,195,49)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="900" width="3" height="15" fill="rgb(208,109,46)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="916" width="3" height="15" fill="rgb(214,122,7)"/><text x="43.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="932" width="3" height="15" fill="rgb(235,140,31)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="948" width="3" height="15" fill="rgb(241,159,50)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/categorical.py) (1 samples, 0.22%)</title><rect x="40" y="964" width="3" height="15" fill="rgb(214,228,40)"/><text x="43.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="980" width="3" height="15" fill="rgb(237,169,6)"/><text x="43.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="996" width="3" height="15" fill="rgb(228,64,49)"/><text x="43.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1012" width="3" height="15" fill="rgb(242,8,27)"/><text x="43.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1028" width="3" height="15" fill="rgb(240,11,0)"/><text x="43.00" y="1038.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1044" width="3" height="15" fill="rgb(243,54,20)"/><text x="43.00" y="1054.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1060" width="3" height="15" fill="rgb(226,170,17)"/><text x="43.00" y="1070.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.22%)</title><rect x="43" y="1108" width="2" height="15" fill="rgb(209,40,8)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1124" width="2" height="15" fill="rgb(232,193,10)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1140" width="2" height="15" fill="rgb(235,92,43)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1156" width="2" height="15" fill="rgb(251,188,47)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1172" width="2" height="15" fill="rgb(234,134,13)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1188" width="2" height="15" fill="rgb(216,70,45)"/><text x="46.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.22%)</title><rect x="43" y="1204" width="2" height="15" fill="rgb(234,156,26)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1220" width="2" height="15" fill="rgb(215,207,25)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1236" width="2" height="15" fill="rgb(229,105,24)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1252" width="2" height="15" fill="rgb(213,93,23)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1268" width="2" height="15" fill="rgb(230,227,0)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1284" width="2" height="15" fill="rgb(207,126,26)"/><text x="46.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.22%)</title><rect x="43" y="1300" width="2" height="15" fill="rgb(205,164,53)"/><text x="46.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1316" width="2" height="15" fill="rgb(229,108,48)"/><text x="46.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1332" width="2" height="15" fill="rgb(248,208,29)"/><text x="46.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="43" y="1348" width="2" height="15" fill="rgb(233,94,42)"/><text x="46.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1364" width="2" height="15" fill="rgb(252,110,51)"/><text x="46.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1380" width="2" height="15" fill="rgb(214,37,17)"/><text x="46.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="43" y="1396" width="2" height="15" fill="rgb(232,173,20)"/><text x="46.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (9 samples, 1.95%)</title><rect x="25" y="340" width="23" height="15" fill="rgb(222,106,30)"/><text x="28.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.95%)</title><rect x="25" y="356" width="23" height="15" fill="rgb(253,2,35)"/><text x="28.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.95%)</title><rect x="25" y="372" width="23" height="15" fill="rgb(234,139,28)"/><text x="28.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.95%)</title><rect x="25" y="388" width="23" height="15" fill="rgb(237,93,43)"/><text x="28.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.95%)</title><rect x="25" y="404" width="23" height="15" fill="rgb(215,143,12)"/><text x="28.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.95%)</title><rect x="25" y="420" width="23" height="15" fill="rgb(219,62,43)"/><text x="28.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 1.95%)</title><rect x="25" y="436" width="23" height="15" fill="rgb(211,4,43)"/><text x="28.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.95%)</title><rect x="25" y="452" width="23" height="15" fill="rgb(254,202,22)"/><text x="28.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.95%)</title><rect x="25" y="468" width="23" height="15" fill="rgb(235,169,7)"/><text x="28.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="484" width="10" height="15" fill="rgb(237,198,19)"/><text x="41.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="38" y="500" width="10" height="15" fill="rgb(246,123,21)"/><text x="41.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="516" width="10" height="15" fill="rgb(208,52,18)"/><text x="41.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.87%)</title><rect x="38" y="532" width="10" height="15" fill="rgb(207,121,8)"/><text x="41.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="548" width="10" height="15" fill="rgb(212,142,32)"/><text x="41.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="564" width="10" height="15" fill="rgb(222,84,33)"/><text x="41.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="580" width="10" height="15" fill="rgb(205,178,17)"/><text x="41.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="38" y="596" width="10" height="15" fill="rgb(242,94,29)"/><text x="41.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="612" width="10" height="15" fill="rgb(220,140,17)"/><text x="41.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.87%)</title><rect x="38" y="628" width="10" height="15" fill="rgb(254,131,49)"/><text x="41.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="644" width="10" height="15" fill="rgb(237,162,17)"/><text x="41.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="660" width="10" height="15" fill="rgb(228,188,51)"/><text x="41.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="676" width="10" height="15" fill="rgb(212,44,16)"/><text x="41.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="38" y="692" width="10" height="15" fill="rgb(216,56,39)"/><text x="41.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="38" y="708" width="10" height="15" fill="rgb(210,18,14)"/><text x="41.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.65%)</title><rect x="40" y="724" width="8" height="15" fill="rgb(222,79,6)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="40" y="740" width="8" height="15" fill="rgb(213,102,54)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.65%)</title><rect x="40" y="756" width="8" height="15" fill="rgb(232,17,7)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="772" width="5" height="15" fill="rgb(216,225,17)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.43%)</title><rect x="43" y="788" width="5" height="15" fill="rgb(231,11,6)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="804" width="5" height="15" fill="rgb(243,173,49)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.43%)</title><rect x="43" y="820" width="5" height="15" fill="rgb(219,110,30)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="836" width="5" height="15" fill="rgb(209,20,43)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="852" width="5" height="15" fill="rgb(212,157,16)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="868" width="5" height="15" fill="rgb(234,100,28)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.43%)</title><rect x="43" y="884" width="5" height="15" fill="rgb(240,60,15)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="900" width="5" height="15" fill="rgb(233,77,36)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.43%)</title><rect x="43" y="916" width="5" height="15" fill="rgb(247,78,39)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="932" width="5" height="15" fill="rgb(233,23,34)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="948" width="5" height="15" fill="rgb(206,46,0)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="964" width="5" height="15" fill="rgb(225,92,28)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.43%)</title><rect x="43" y="980" width="5" height="15" fill="rgb(237,102,19)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="996" width="5" height="15" fill="rgb(209,216,14)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.43%)</title><rect x="43" y="1012" width="5" height="15" fill="rgb(209,202,4)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="1028" width="5" height="15" fill="rgb(248,206,20)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="1044" width="5" height="15" fill="rgb(251,38,9)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="1060" width="5" height="15" fill="rgb(248,69,54)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.43%)</title><rect x="43" y="1076" width="5" height="15" fill="rgb(254,159,33)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.43%)</title><rect x="43" y="1092" width="5" height="15" fill="rgb(252,89,51)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.22%)</title><rect x="45" y="1108" width="3" height="15" fill="rgb(226,126,34)"/><text x="48.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1124" width="3" height="15" fill="rgb(219,10,32)"/><text x="48.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1140" width="3" height="15" fill="rgb(208,67,23)"/><text x="48.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1156" width="3" height="15" fill="rgb(227,35,30)"/><text x="48.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1172" width="3" height="15" fill="rgb(223,147,33)"/><text x="48.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1188" width="3" height="15" fill="rgb(221,223,31)"/><text x="48.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.22%)</title><rect x="45" y="1204" width="3" height="15" fill="rgb(211,131,33)"/><text x="48.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1220" width="3" height="15" fill="rgb(250,214,2)"/><text x="48.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1236" width="3" height="15" fill="rgb(233,20,52)"/><text x="48.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1252" width="3" height="15" fill="rgb(220,89,37)"/><text x="48.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1268" width="3" height="15" fill="rgb(254,106,1)"/><text x="48.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1284" width="3" height="15" fill="rgb(233,5,9)"/><text x="48.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.22%)</title><rect x="45" y="1300" width="3" height="15" fill="rgb(234,66,17)"/><text x="48.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1316" width="3" height="15" fill="rgb(221,95,49)"/><text x="48.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1332" width="3" height="15" fill="rgb(224,94,9)"/><text x="48.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1348" width="3" height="15" fill="rgb(232,172,6)"/><text x="48.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1364" width="3" height="15" fill="rgb(238,17,24)"/><text x="48.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1380" width="3" height="15" fill="rgb(206,97,39)"/><text x="48.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="45" y="1396" width="3" height="15" fill="rgb(232,131,1)"/><text x="48.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1412" width="3" height="15" fill="rgb(248,159,29)"/><text x="48.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1428" width="3" height="15" fill="rgb(228,155,30)"/><text x="48.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1444" width="3" height="15" fill="rgb(220,146,45)"/><text x="48.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1460" width="3" height="15" fill="rgb(216,63,36)"/><text x="48.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1476" width="3" height="15" fill="rgb(244,128,5)"/><text x="48.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.22%)</title><rect x="45" y="1492" width="3" height="15" fill="rgb(246,133,16)"/><text x="48.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1508" width="3" height="15" fill="rgb(243,125,51)"/><text x="48.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1524" width="3" height="15" fill="rgb(248,7,0)"/><text x="48.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1540" width="3" height="15" fill="rgb(212,129,35)"/><text x="48.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1556" width="3" height="15" fill="rgb(207,6,32)"/><text x="48.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1572" width="3" height="15" fill="rgb(240,222,7)"/><text x="48.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1588" width="3" height="15" fill="rgb(244,177,41)"/><text x="48.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1604" width="3" height="15" fill="rgb(251,178,46)"/><text x="48.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1620" width="3" height="15" fill="rgb(253,33,37)"/><text x="48.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="45" y="1636" width="3" height="15" fill="rgb(233,140,36)"/><text x="48.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1652" width="3" height="15" fill="rgb(232,149,40)"/><text x="48.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1668" width="3" height="15" fill="rgb(225,65,33)"/><text x="48.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1684" width="3" height="15" fill="rgb(229,217,8)"/><text x="48.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1700" width="3" height="15" fill="rgb(212,90,46)"/><text x="48.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1716" width="3" height="15" fill="rgb(253,41,22)"/><text x="48.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1732" width="3" height="15" fill="rgb(237,180,40)"/><text x="48.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1748" width="3" height="15" fill="rgb(222,74,44)"/><text x="48.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.22%)</title><rect x="45" y="1764" width="3" height="15" fill="rgb(205,113,33)"/><text x="48.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1780" width="3" height="15" fill="rgb(240,106,13)"/><text x="48.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1796" width="3" height="15" fill="rgb(240,44,13)"/><text x="48.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1812" width="3" height="15" fill="rgb(220,195,14)"/><text x="48.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1828" width="3" height="15" fill="rgb(243,92,6)"/><text x="48.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1844" width="3" height="15" fill="rgb(214,93,13)"/><text x="48.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.22%)</title><rect x="45" y="1860" width="3" height="15" fill="rgb(224,28,6)"/><text x="48.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1876" width="3" height="15" fill="rgb(221,49,26)"/><text x="48.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1892" width="3" height="15" fill="rgb(221,50,34)"/><text x="48.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="45" y="1908" width="3" height="15" fill="rgb(240,134,41)"/><text x="48.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1924" width="3" height="15" fill="rgb(241,214,39)"/><text x="48.00" y="1934.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1940" width="3" height="15" fill="rgb(240,206,16)"/><text x="48.00" y="1950.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="45" y="1956" width="3" height="15" fill="rgb(254,189,10)"/><text x="48.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.46%)</title><rect x="10" y="68" width="40" height="15" fill="rgb(233,226,53)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.46%)</title><rect x="10" y="84" width="40" height="15" fill="rgb(207,218,13)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.46%)</title><rect x="10" y="100" width="40" height="15" fill="rgb(244,177,4)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 3.46%)</title><rect x="10" y="116" width="40" height="15" fill="rgb(252,92,22)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.46%)</title><rect x="10" y="132" width="40" height="15" fill="rgb(205,147,37)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py) (16 samples, 3.46%)</title><rect x="10" y="148" width="40" height="15" fill="rgb(250,154,29)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.46%)</title><rect x="10" y="164" width="40" height="15" fill="rgb(213,43,28)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.46%)</title><rect x="10" y="180" width="40" height="15" fill="rgb(230,175,49)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.16%)</title><rect x="25" y="196" width="25" height="15" fill="rgb(252,133,10)"/><text x="28.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.16%)</title><rect x="25" y="212" width="25" height="15" fill="rgb(251,66,26)"/><text x="28.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.16%)</title><rect x="25" y="228" width="25" height="15" fill="rgb(222,191,26)"/><text x="28.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (10 samples, 2.16%)</title><rect x="25" y="244" width="25" height="15" fill="rgb(222,208,45)"/><text x="28.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.16%)</title><rect x="25" y="260" width="25" height="15" fill="rgb(214,193,4)"/><text x="28.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.16%)</title><rect x="25" y="276" width="25" height="15" fill="rgb(234,78,34)"/><text x="28.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.16%)</title><rect x="25" y="292" width="25" height="15" fill="rgb(241,4,3)"/><text x="28.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.16%)</title><rect x="25" y="308" width="25" height="15" fill="rgb(226,204,37)"/><text x="28.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.16%)</title><rect x="25" y="324" width="25" height="15" fill="rgb(207,179,28)"/><text x="28.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.22%)</title><rect x="48" y="340" width="2" height="15" fill="rgb(241,188,16)"/><text x="51.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="356" width="2" height="15" fill="rgb(247,49,41)"/><text x="51.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="372" width="2" height="15" fill="rgb(236,98,41)"/><text x="51.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="388" width="2" height="15" fill="rgb(216,145,22)"/><text x="51.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="404" width="2" height="15" fill="rgb(252,74,44)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="420" width="2" height="15" fill="rgb(223,211,31)"/><text x="51.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="436" width="2" height="15" fill="rgb(212,152,34)"/><text x="51.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="452" width="2" height="15" fill="rgb(239,11,22)"/><text x="51.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="468" width="2" height="15" fill="rgb(251,14,10)"/><text x="51.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="484" width="2" height="15" fill="rgb(238,12,24)"/><text x="51.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="500" width="2" height="15" fill="rgb(223,71,22)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="516" width="2" height="15" fill="rgb(244,176,27)"/><text x="51.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="532" width="2" height="15" fill="rgb(244,93,53)"/><text x="51.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="548" width="2" height="15" fill="rgb(225,39,29)"/><text x="51.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="564" width="2" height="15" fill="rgb(215,37,36)"/><text x="51.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.22%)</title><rect x="48" y="580" width="2" height="15" fill="rgb(253,170,44)"/><text x="51.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="596" width="2" height="15" fill="rgb(205,65,35)"/><text x="51.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="612" width="2" height="15" fill="rgb(237,117,20)"/><text x="51.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="628" width="2" height="15" fill="rgb(214,84,5)"/><text x="51.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="644" width="2" height="15" fill="rgb(252,183,7)"/><text x="51.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="660" width="2" height="15" fill="rgb(245,117,30)"/><text x="51.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.22%)</title><rect x="48" y="676" width="2" height="15" fill="rgb(224,128,10)"/><text x="51.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="692" width="2" height="15" fill="rgb(252,154,38)"/><text x="51.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="708" width="2" height="15" fill="rgb(238,127,34)"/><text x="51.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="724" width="2" height="15" fill="rgb(218,43,13)"/><text x="51.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="740" width="2" height="15" fill="rgb(241,130,2)"/><text x="51.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="756" width="2" height="15" fill="rgb(253,209,38)"/><text x="51.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="772" width="2" height="15" fill="rgb(223,137,33)"/><text x="51.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="788" width="2" height="15" fill="rgb(214,69,12)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="804" width="2" height="15" fill="rgb(240,20,17)"/><text x="51.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="820" width="2" height="15" fill="rgb(234,216,53)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="836" width="2" height="15" fill="rgb(243,192,15)"/><text x="51.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="852" width="2" height="15" fill="rgb(253,0,16)"/><text x="51.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="868" width="2" height="15" fill="rgb(221,188,39)"/><text x="51.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="884" width="2" height="15" fill="rgb(208,217,41)"/><text x="51.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.22%)</title><rect x="48" y="900" width="2" height="15" fill="rgb(246,29,48)"/><text x="51.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="916" width="2" height="15" fill="rgb(239,210,49)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="932" width="2" height="15" fill="rgb(222,177,27)"/><text x="51.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="948" width="2" height="15" fill="rgb(222,97,25)"/><text x="51.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="964" width="2" height="15" fill="rgb(210,33,12)"/><text x="51.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="980" width="2" height="15" fill="rgb(246,26,44)"/><text x="51.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="996" width="2" height="15" fill="rgb(236,191,37)"/><text x="51.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1012" width="2" height="15" fill="rgb(227,52,51)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1028" width="2" height="15" fill="rgb(214,27,44)"/><text x="51.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1044" width="2" height="15" fill="rgb(216,92,7)"/><text x="51.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="1060" width="2" height="15" fill="rgb(224,161,26)"/><text x="51.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1076" width="2" height="15" fill="rgb(218,5,24)"/><text x="51.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.22%)</title><rect x="48" y="1092" width="2" height="15" fill="rgb(224,109,51)"/><text x="51.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1108" width="2" height="15" fill="rgb(246,119,38)"/><text x="51.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1124" width="2" height="15" fill="rgb(249,54,46)"/><text x="51.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1140" width="2" height="15" fill="rgb(221,117,35)"/><text x="51.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="48" y="1156" width="2" height="15" fill="rgb(247,58,28)"/><text x="51.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="48" y="1172" width="2" height="15" fill="rgb(207,123,0)"/><text x="51.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py) (1 samples, 0.22%)</title><rect x="48" y="1188" width="2" height="15" fill="rgb(237,213,1)"/><text x="51.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.22%)</title><rect x="48" y="1204" width="2" height="15" fill="rgb(247,60,44)"/><text x="51.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.22%)</title><rect x="48" y="1220" width="2" height="15" fill="rgb(232,121,35)"/><text x="51.00" y="1230.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.22%)</title><rect x="48" y="1236" width="2" height="15" fill="rgb(253,69,37)"/><text x="51.00" y="1246.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.22%)</title><rect x="48" y="1252" width="2" height="15" fill="rgb(231,80,37)"/><text x="51.00" y="1262.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.22%)</title><rect x="48" y="1268" width="2" height="15" fill="rgb(241,73,42)"/><text x="51.00" y="1278.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.22%)</title><rect x="48" y="1284" width="2" height="15" fill="rgb(227,80,4)"/><text x="51.00" y="1294.50"></text></g><g><title>mkl_blas_avx_sgemm_kernel_0 (onnxruntime/capi/libmklml_intel.so) (20 samples, 4.33%)</title><rect x="50" y="212" width="51" height="15" fill="rgb(219,139,10)"/><text x="53.00" y="222.50">mkl_b..</text></g><g><title>mkl_blas_sgemm_omp_driver_v1 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.65%)</title><rect x="104" y="420" width="8" height="15" fill="rgb(243,191,11)"/><text x="107.00" y="430.50"></text></g><g><title>mkl_blas_xsgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.65%)</title><rect x="104" y="436" width="8" height="15" fill="rgb(235,13,0)"/><text x="107.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.65%)</title><rect x="104" y="452" width="8" height="15" fill="rgb(221,64,4)"/><text x="107.00" y="462.50"></text></g><g><title>mkl_blas_avx_xsgemm_par (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.65%)</title><rect x="104" y="468" width="8" height="15" fill="rgb(244,228,4)"/><text x="107.00" y="478.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0 (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.65%)</title><rect x="104" y="484" width="8" height="15" fill="rgb(222,184,21)"/><text x="107.00" y="494.50"></text></g><g><title>mkl_blas_avx_sgemm_ker0_pst (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.65%)</title><rect x="104" y="500" width="8" height="15" fill="rgb(249,139,28)"/><text x="107.00" y="510.50"></text></g><g><title>__kmp_fork_call (libiomp5.so) (1 samples, 0.22%)</title><rect x="112" y="468" width="2" height="15" fill="rgb(236,108,43)"/><text x="115.00" y="478.50"></text></g><g><title>__kmp_invoke_task_func (libiomp5.so) (1 samples, 0.22%)</title><rect x="112" y="484" width="2" height="15" fill="rgb(219,64,22)"/><text x="115.00" y="494.50"></text></g><g><title>__kmp_invoke_microtask (libiomp5.so) (1 samples, 0.22%)</title><rect x="112" y="500" width="2" height="15" fill="rgb(244,188,7)"/><text x="115.00" y="510.50"></text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="112" y="516" width="2" height="15" fill="rgb(229,190,14)"/><text x="115.00" y="526.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="112" y="532" width="2" height="15" fill="rgb(213,214,22)"/><text x="115.00" y="542.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="112" y="548" width="2" height="15" fill="rgb(211,94,0)"/><text x="115.00" y="558.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (40 samples, 8.66%)</title><rect x="104" y="404" width="102" height="15" fill="rgb(206,161,36)"/><text x="107.00" y="414.50">mkl_blas_sge..</text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (37 samples, 8.01%)</title><rect x="112" y="420" width="94" height="15" fill="rgb(207,224,23)"/><text x="115.00" y="430.50">mkl_blas_sg..</text></g><g><title>mkl_blas_sgemv_omp (onnxruntime/capi/libmklml_intel.so) (37 samples, 8.01%)</title><rect x="112" y="436" width="94" height="15" fill="rgb(218,16,30)"/><text x="115.00" y="446.50">mkl_blas_sg..</text></g><g><title>__kmpc_fork_call (libiomp5.so) (37 samples, 8.01%)</title><rect x="112" y="452" width="94" height="15" fill="rgb(226,125,44)"/><text x="115.00" y="462.50">__kmpc_fork..</text></g><g><title>__kmp_join_call (libiomp5.so) (36 samples, 7.79%)</title><rect x="114" y="468" width="92" height="15" fill="rgb(227,131,6)"/><text x="117.00" y="478.50">__kmp_join..</text></g><g><title>__kmp_internal_join (libiomp5.so) (36 samples, 7.79%)</title><rect x="114" y="484" width="92" height="15" fill="rgb(217,48,13)"/><text x="117.00" y="494.50">__kmp_inte..</text></g><g><title>__kmp_join_barrier (libiomp5.so) (36 samples, 7.79%)</title><rect x="114" y="500" width="92" height="15" fill="rgb(211,167,15)"/><text x="117.00" y="510.50">__kmp_join..</text></g><g><title>_INTERNAL_25_______src_kmp_barrier_cpp_50ae66a0::__kmp_hyper_barrier_gather (libiomp5.so) (36 samples, 7.79%)</title><rect x="114" y="516" width="92" height="15" fill="rgb(216,155,25)"/><text x="117.00" y="526.50">_INTERNAL_..</text></g><g><title>sched_yield (libc-2.29.so) (5 samples, 1.08%)</title><rect x="193" y="532" width="13" height="15" fill="rgb(226,165,17)"/><text x="196.00" y="542.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 8.87%)</title><rect x="104" y="340" width="105" height="15" fill="rgb(240,193,7)"/><text x="107.00" y="350.50">onnxruntime:..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (41 samples, 8.87%)</title><rect x="104" y="356" width="105" height="15" fill="rgb(253,151,20)"/><text x="107.00" y="366.50">onnxruntime:..</text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (41 samples, 8.87%)</title><rect x="104" y="372" width="105" height="15" fill="rgb(226,171,34)"/><text x="107.00" y="382.50">cblas_sgemm ..</text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (41 samples, 8.87%)</title><rect x="104" y="388" width="105" height="15" fill="rgb(220,54,27)"/><text x="107.00" y="398.50">sgemm_ (onnx..</text></g><g><title>mkl_serv_set_xerbla_interface (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.22%)</title><rect x="206" y="404" width="3" height="15" fill="rgb(220,208,11)"/><text x="209.00" y="414.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 13.64%)</title><rect x="101" y="260" width="161" height="15" fill="rgb(206,29,9)"/><text x="104.00" y="270.50">onnxruntime::Inferen..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 13.64%)</title><rect x="101" y="276" width="161" height="15" fill="rgb(253,167,37)"/><text x="104.00" y="286.50">onnxruntime::Inferen..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 13.64%)</title><rect x="101" y="292" width="161" height="15" fill="rgb(210,123,39)"/><text x="104.00" y="302.50">onnxruntime::utils::..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 13.64%)</title><rect x="101" y="308" width="161" height="15" fill="rgb(223,48,28)"/><text x="104.00" y="318.50">onnxruntime::utils::..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (63 samples, 13.64%)</title><rect x="101" y="324" width="161" height="15" fill="rgb(242,154,5)"/><text x="104.00" y="334.50">onnxruntime::Sequent..</text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 4.55%)</title><rect x="209" y="340" width="53" height="15" fill="rgb(241,111,34)"/><text x="212.00" y="350.50">onnxr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="356" width="2" height="15" fill="rgb(227,75,5)"/><text x="263.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="372" width="2" height="15" fill="rgb(254,20,52)"/><text x="263.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="388" width="2" height="15" fill="rgb(253,15,47)"/><text x="263.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="404" width="2" height="15" fill="rgb(232,155,11)"/><text x="263.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="420" width="2" height="15" fill="rgb(248,193,20)"/><text x="263.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="436" width="2" height="15" fill="rgb(247,132,13)"/><text x="263.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="260" y="452" width="2" height="15" fill="rgb(233,170,37)"/><text x="263.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="260" y="468" width="2" height="15" fill="rgb(231,28,6)"/><text x="263.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="260" y="484" width="2" height="15" fill="rgb(238,61,12)"/><text x="263.00" y="494.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (84 samples, 18.18%)</title><rect x="50" y="68" width="215" height="15" fill="rgb(205,209,10)"/><text x="53.00" y="78.50">profile_ort (bench_MLPRegres..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (84 samples, 18.18%)</title><rect x="50" y="84" width="215" height="15" fill="rgb(240,220,25)"/><text x="53.00" y="94.50">setup_profile (bench_MLPRegr..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (84 samples, 18.18%)</title><rect x="50" y="100" width="215" height="15" fill="rgb(244,150,18)"/><text x="53.00" y="110.50">profile (bench_MLPRegressor_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (84 samples, 18.18%)</title><rect x="50" y="116" width="215" height="15" fill="rgb(237,132,37)"/><text x="53.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (84 samples, 18.18%)</title><rect x="50" y="132" width="215" height="15" fill="rgb(207,92,28)"/><text x="53.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (84 samples, 18.18%)</title><rect x="50" y="148" width="215" height="15" fill="rgb(225,185,39)"/><text x="53.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (84 samples, 18.18%)</title><rect x="50" y="164" width="215" height="15" fill="rgb(220,28,24)"/><text x="53.00" y="174.50">_run_whole_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (84 samples, 18.18%)</title><rect x="50" y="180" width="215" height="15" fill="rgb(246,110,53)"/><text x="53.00" y="190.50">run (mlprodict/onnxrt/ops_wh..</text></g><g><title>run (onnxruntime/capi/session.py) (84 samples, 18.18%)</title><rect x="50" y="196" width="215" height="15" fill="rgb(235,132,50)"/><text x="53.00" y="206.50">run (onnxruntime/capi/sessio..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 13.85%)</title><rect x="101" y="212" width="164" height="15" fill="rgb(210,126,4)"/><text x="104.00" y="222.50">pybind11::cpp_functio..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 13.85%)</title><rect x="101" y="228" width="164" height="15" fill="rgb(223,211,14)"/><text x="104.00" y="238.50">void pybind11::cpp_fu..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (64 samples, 13.85%)</title><rect x="101" y="244" width="164" height="15" fill="rgb(252,44,39)"/><text x="104.00" y="254.50">onnxruntime::python::..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="262" y="260" width="3" height="15" fill="rgb(218,175,42)"/><text x="265.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="262" y="276" width="3" height="15" fill="rgb(247,162,29)"/><text x="265.00" y="286.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.22%)</title><rect x="273" y="196" width="2" height="15" fill="rgb(233,129,5)"/><text x="276.00" y="206.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.22%)</title><rect x="280" y="212" width="3" height="15" fill="rgb(245,172,42)"/><text x="283.00" y="222.50"></text></g><g><title>0x7f82110b797c (libc-2.29.so) (1 samples, 0.22%)</title><rect x="285" y="324" width="3" height="15" fill="rgb(223,34,1)"/><text x="288.00" y="334.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.43%)</title><rect x="285" y="308" width="5" height="15" fill="rgb(221,94,6)"/><text x="288.00" y="318.50"></text></g><g><title>0x7f82110b7a84 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="288" y="324" width="2" height="15" fill="rgb(242,152,12)"/><text x="291.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="290" y="308" width="3" height="15" fill="rgb(206,46,32)"/><text x="293.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (4 samples, 0.87%)</title><rect x="285" y="228" width="11" height="15" fill="rgb(222,19,27)"/><text x="288.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.87%)</title><rect x="285" y="244" width="11" height="15" fill="rgb(237,191,47)"/><text x="288.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (4 samples, 0.87%)</title><rect x="285" y="260" width="11" height="15" fill="rgb(213,22,17)"/><text x="288.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 0.87%)</title><rect x="285" y="276" width="11" height="15" fill="rgb(231,25,44)"/><text x="288.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 0.87%)</title><rect x="285" y="292" width="11" height="15" fill="rgb(210,206,53)"/><text x="288.00" y="302.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.22%)</title><rect x="293" y="308" width="3" height="15" fill="rgb(235,172,15)"/><text x="296.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="293" y="324" width="3" height="15" fill="rgb(209,150,32)"/><text x="296.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="293" y="340" width="3" height="15" fill="rgb(249,149,44)"/><text x="296.00" y="350.50"></text></g><g><title>0x7f82110d7f53 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="293" y="356" width="3" height="15" fill="rgb(235,41,36)"/><text x="296.00" y="366.50"></text></g><g><title>0x7f82110d8103 (libc-2.29.so) (4 samples, 0.87%)</title><rect x="301" y="340" width="10" height="15" fill="rgb(241,74,5)"/><text x="304.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="313" y="436" width="3" height="15" fill="rgb(247,170,14)"/><text x="316.00" y="446.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="313" y="452" width="3" height="15" fill="rgb(222,193,0)"/><text x="316.00" y="462.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.43%)</title><rect x="313" y="420" width="6" height="15" fill="rgb(239,125,7)"/><text x="316.00" y="430.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="316" y="436" width="3" height="15" fill="rgb(218,144,0)"/><text x="319.00" y="446.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="316" y="452" width="3" height="15" fill="rgb(235,179,53)"/><text x="319.00" y="462.50"></text></g><g><title>gemm (cblasfuncs.c) (22 samples, 4.76%)</title><rect x="311" y="340" width="56" height="15" fill="rgb(230,176,21)"/><text x="314.00" y="350.50">gemm ..</text></g><g><title>cblas_sgemm (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 4.76%)</title><rect x="311" y="356" width="56" height="15" fill="rgb(222,210,17)"/><text x="314.00" y="366.50">cblas..</text></g><g><title>sgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (22 samples, 4.76%)</title><rect x="311" y="372" width="56" height="15" fill="rgb(245,191,1)"/><text x="314.00" y="382.50">sgemm..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 4.55%)</title><rect x="313" y="388" width="54" height="15" fill="rgb(215,3,22)"/><text x="316.00" y="398.50">gemm_..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (21 samples, 4.55%)</title><rect x="313" y="404" width="54" height="15" fill="rgb(250,25,32)"/><text x="316.00" y="414.50">exec_..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (19 samples, 4.11%)</title><rect x="319" y="420" width="48" height="15" fill="rgb(220,203,4)"/><text x="322.00" y="430.50">exec..</text></g><g><title>sched_yield (libc-2.29.so) (19 samples, 4.11%)</title><rect x="319" y="436" width="48" height="15" fill="rgb(207,146,11)"/><text x="322.00" y="446.50">sche..</text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.43%)</title><rect x="370" y="404" width="5" height="15" fill="rgb(228,55,6)"/><text x="373.00" y="414.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="372" y="420" width="3" height="15" fill="rgb(220,86,31)"/><text x="375.00" y="430.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (23 samples, 4.98%)</title><rect x="375" y="404" width="58" height="15" fill="rgb(208,68,18)"/><text x="378.00" y="414.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (23 samples, 4.98%)</title><rect x="375" y="420" width="58" height="15" fill="rgb(220,147,13)"/><text x="378.00" y="430.50">sched_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (57 samples, 12.34%)</title><rect x="301" y="276" width="145" height="15" fill="rgb(207,29,16)"/><text x="304.00" y="286.50">array_implement_ar..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (57 samples, 12.34%)</title><rect x="301" y="292" width="145" height="15" fill="rgb(240,0,48)"/><text x="304.00" y="302.50">array_matrixproduc..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (57 samples, 12.34%)</title><rect x="301" y="308" width="145" height="15" fill="rgb(235,208,13)"/><text x="304.00" y="318.50">PyArray_MatrixProd..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (57 samples, 12.34%)</title><rect x="301" y="324" width="145" height="15" fill="rgb(214,31,27)"/><text x="304.00" y="334.50">cblas_matrixproduc..</text></g><g><title>gemv (cblasfuncs.c) (31 samples, 6.71%)</title><rect x="367" y="340" width="79" height="15" fill="rgb(206,101,38)"/><text x="370.00" y="350.50">gemv (cbl..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (31 samples, 6.71%)</title><rect x="367" y="356" width="79" height="15" fill="rgb(207,43,12)"/><text x="370.00" y="366.50">cblas_sge..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 6.49%)</title><rect x="370" y="372" width="76" height="15" fill="rgb(207,229,48)"/><text x="373.00" y="382.50">sgemv_th..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (30 samples, 6.49%)</title><rect x="370" y="388" width="76" height="15" fill="rgb(217,108,14)"/><text x="373.00" y="398.50">exec_bla..</text></g><g><title>gemv_kernel (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.08%)</title><rect x="433" y="404" width="13" height="15" fill="rgb(254,120,34)"/><text x="436.00" y="414.50"></text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.08%)</title><rect x="433" y="420" width="13" height="15" fill="rgb(218,73,40)"/><text x="436.00" y="430.50"></text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (5 samples, 1.08%)</title><rect x="433" y="436" width="13" height="15" fill="rgb(229,131,8)"/><text x="436.00" y="446.50"></text></g><g><title>sgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.73%)</title><rect x="446" y="276" width="21" height="15" fill="rgb(246,93,1)"/><text x="449.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (75 samples, 16.23%)</title><rect x="296" y="228" width="191" height="15" fill="rgb(252,125,39)"/><text x="299.00" y="238.50">_run (mlprodict/onnxrt/o..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (75 samples, 16.23%)</title><rect x="296" y="244" width="191" height="15" fill="rgb(231,229,8)"/><text x="299.00" y="254.50">numpy_dot_inplace (mlpro..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (74 samples, 16.02%)</title><rect x="298" y="260" width="189" height="15" fill="rgb(246,209,15)"/><text x="301.00" y="270.50">dot (&lt;__array_function__..</text></g><g><title>sgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.73%)</title><rect x="467" y="276" width="20" height="15" fill="rgb(221,27,2)"/><text x="470.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (62 samples, 13.42%)</title><rect x="490" y="276" width="158" height="15" fill="rgb(211,123,14)"/><text x="493.00" y="286.50">execute_legacy_ufunc..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (62 samples, 13.42%)</title><rect x="490" y="292" width="158" height="15" fill="rgb(214,133,45)"/><text x="493.00" y="302.50">trivial_three_operan..</text></g><g><title>FLOAT_maximum (loops.c.src) (62 samples, 13.42%)</title><rect x="490" y="308" width="158" height="15" fill="rgb(223,182,50)"/><text x="493.00" y="318.50">FLOAT_maximum (loops..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (151 samples, 32.68%)</title><rect x="265" y="100" width="386" height="15" fill="rgb(236,51,16)"/><text x="268.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_4_12_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 32.68%)</title><rect x="265" y="116" width="386" height="15" fill="rgb(205,213,19)"/><text x="268.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (151 samples, 32.68%)</title><rect x="265" y="132" width="386" height="15" fill="rgb(219,186,43)"/><text x="268.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (151 samples, 32.68%)</title><rect x="265" y="148" width="386" height="15" fill="rgb(253,133,10)"/><text x="268.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (151 samples, 32.68%)</title><rect x="265" y="164" width="386" height="15" fill="rgb(212,28,8)"/><text x="268.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inferen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (151 samples, 32.68%)</title><rect x="265" y="180" width="386" height="15" fill="rgb(238,113,13)"/><text x="268.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (147 samples, 31.82%)</title><rect x="275" y="196" width="376" height="15" fill="rgb(225,199,13)"/><text x="278.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (144 samples, 31.17%)</title><rect x="283" y="212" width="368" height="15" fill="rgb(249,36,24)"/><text x="286.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (64 samples, 13.85%)</title><rect x="487" y="228" width="164" height="15" fill="rgb(245,148,42)"/><text x="490.00" y="238.50">_run (mlprodict/onnxr..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (63 samples, 13.64%)</title><rect x="490" y="244" width="161" height="15" fill="rgb(226,17,50)"/><text x="493.00" y="254.50">ufunc_generic_call (..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (63 samples, 13.64%)</title><rect x="490" y="260" width="161" height="15" fill="rgb(225,81,3)"/><text x="493.00" y="270.50">PyUFunc_GenericFunct..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.22%)</title><rect x="648" y="276" width="3" height="15" fill="rgb(233,87,21)"/><text x="651.00" y="286.50"></text></g><g><title>profile_pyrt (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (152 samples, 32.90%)</title><rect x="265" y="68" width="388" height="15" fill="rgb(230,135,17)"/><text x="268.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_b_reg_1000_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (152 samples, 32.90%)</title><rect x="265" y="84" width="388" height="15" fill="rgb(250,116,4)"/><text x="268.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="651" y="100" width="2" height="15" fill="rgb(244,103,32)"/><text x="654.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="651" y="116" width="2" height="15" fill="rgb(249,20,29)"/><text x="654.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="651" y="132" width="2" height="15" fill="rgb(238,199,31)"/><text x="654.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="651" y="148" width="2" height="15" fill="rgb(240,62,28)"/><text x="654.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="651" y="164" width="2" height="15" fill="rgb(228,40,45)"/><text x="654.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.22%)</title><rect x="651" y="180" width="2" height="15" fill="rgb(226,158,24)"/><text x="654.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.22%)</title><rect x="651" y="196" width="2" height="15" fill="rgb(230,8,18)"/><text x="654.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="212" width="2" height="15" fill="rgb(223,228,14)"/><text x="654.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="228" width="2" height="15" fill="rgb(229,0,52)"/><text x="654.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="244" width="2" height="15" fill="rgb(223,178,12)"/><text x="654.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="651" y="260" width="2" height="15" fill="rgb(217,19,30)"/><text x="654.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="276" width="2" height="15" fill="rgb(207,133,6)"/><text x="654.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.22%)</title><rect x="651" y="292" width="2" height="15" fill="rgb(226,72,26)"/><text x="654.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="308" width="2" height="15" fill="rgb(243,219,28)"/><text x="654.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="324" width="2" height="15" fill="rgb(228,114,1)"/><text x="654.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="340" width="2" height="15" fill="rgb(250,225,5)"/><text x="654.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="651" y="356" width="2" height="15" fill="rgb(240,159,16)"/><text x="654.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="372" width="2" height="15" fill="rgb(230,226,37)"/><text x="654.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.22%)</title><rect x="651" y="388" width="2" height="15" fill="rgb(216,31,49)"/><text x="654.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="404" width="2" height="15" fill="rgb(241,61,2)"/><text x="654.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="420" width="2" height="15" fill="rgb(222,55,32)"/><text x="654.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="436" width="2" height="15" fill="rgb(218,33,6)"/><text x="654.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="651" y="452" width="2" height="15" fill="rgb(240,63,12)"/><text x="654.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="651" y="468" width="2" height="15" fill="rgb(211,79,11)"/><text x="654.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.22%)</title><rect x="651" y="484" width="2" height="15" fill="rgb(220,218,45)"/><text x="654.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.22%)</title><rect x="651" y="500" width="2" height="15" fill="rgb(228,223,43)"/><text x="654.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="651" y="516" width="2" height="15" fill="rgb(212,228,25)"/><text x="654.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="651" y="532" width="2" height="15" fill="rgb(218,52,14)"/><text x="654.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="651" y="548" width="2" height="15" fill="rgb(253,35,2)"/><text x="654.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="651" y="564" width="2" height="15" fill="rgb(224,95,7)"/><text x="654.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="651" y="580" width="2" height="15" fill="rgb(245,68,30)"/><text x="654.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py) (1 samples, 0.22%)</title><rect x="651" y="596" width="2" height="15" fill="rgb(253,201,19)"/><text x="654.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py) (1 samples, 0.22%)</title><rect x="651" y="612" width="2" height="15" fill="rgb(206,4,13)"/><text x="654.00" y="622.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.22%)</title><rect x="651" y="628" width="2" height="15" fill="rgb(235,198,53)"/><text x="654.00" y="638.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.22%)</title><rect x="651" y="644" width="2" height="15" fill="rgb(219,164,25)"/><text x="654.00" y="654.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.22%)</title><rect x="651" y="660" width="2" height="15" fill="rgb(248,170,16)"/><text x="654.00" y="670.50"></text></g><g><title>find_all (jinja2/nodes.py) (1 samples, 0.22%)</title><rect x="651" y="676" width="2" height="15" fill="rgb(211,138,23)"/><text x="654.00" y="686.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py) (1 samples, 0.22%)</title><rect x="651" y="692" width="2" height="15" fill="rgb(222,27,29)"/><text x="654.00" y="702.50"></text></g><g><title>_clip_dispatcher (numpy/core/fromnumeric.py) (1 samples, 0.22%)</title><rect x="671" y="228" width="3" height="15" fill="rgb(206,162,54)"/><text x="674.00" y="238.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="676" y="372" width="3" height="15" fill="rgb(251,191,30)"/><text x="679.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="676" y="388" width="3" height="15" fill="rgb(249,157,12)"/><text x="679.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="676" y="404" width="3" height="15" fill="rgb(251,87,52)"/><text x="679.00" y="414.50"></text></g><g><title>DOUBLE_clip (clip.c.src) (62 samples, 13.42%)</title><rect x="679" y="404" width="158" height="15" fill="rgb(245,31,34)"/><text x="682.00" y="414.50">DOUBLE_clip (clip.c...</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.22%)</title><rect x="837" y="404" width="3" height="15" fill="rgb(246,200,17)"/><text x="840.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.22%)</title><rect x="837" y="420" width="3" height="15" fill="rgb(210,4,46)"/><text x="840.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (65 samples, 14.07%)</title><rect x="676" y="356" width="166" height="15" fill="rgb(222,168,11)"/><text x="679.00" y="366.50">PyUFunc_GenericFuncti..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (64 samples, 13.85%)</title><rect x="679" y="372" width="163" height="15" fill="rgb(221,50,32)"/><text x="682.00" y="382.50">execute_legacy_ufunc_..</text></g><g><title>iterator_loop (ufunc_object.c) (64 samples, 13.85%)</title><rect x="679" y="388" width="163" height="15" fill="rgb(221,171,16)"/><text x="682.00" y="398.50">iterator_loop (ufunc_..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.22%)</title><rect x="840" y="404" width="2" height="15" fill="rgb(210,179,42)"/><text x="843.00" y="414.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="840" y="420" width="2" height="15" fill="rgb(236,116,54)"/><text x="843.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="840" y="436" width="2" height="15" fill="rgb(223,197,14)"/><text x="843.00" y="446.50"></text></g><g><title>0x7f82110b92bd (libc-2.29.so) (1 samples, 0.22%)</title><rect x="840" y="452" width="2" height="15" fill="rgb(239,8,7)"/><text x="843.00" y="462.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="842" y="356" width="3" height="15" fill="rgb(231,10,41)"/><text x="845.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="842" y="372" width="3" height="15" fill="rgb(221,191,10)"/><text x="845.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="842" y="388" width="3" height="15" fill="rgb(208,31,7)"/><text x="845.00" y="398.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (68 samples, 14.72%)</title><rect x="674" y="324" width="173" height="15" fill="rgb(210,13,16)"/><text x="677.00" y="334.50">_clip_dep_invoke_with_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (67 samples, 14.50%)</title><rect x="676" y="340" width="171" height="15" fill="rgb(239,103,30)"/><text x="679.00" y="350.50">ufunc_generic_call (uf..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="845" y="356" width="2" height="15" fill="rgb(218,15,24)"/><text x="848.00" y="366.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="847" y="372" width="3" height="15" fill="rgb(216,132,30)"/><text x="850.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="847" y="388" width="3" height="15" fill="rgb(246,10,45)"/><text x="850.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.22%)</title><rect x="847" y="404" width="3" height="15" fill="rgb(254,161,42)"/><text x="850.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.22%)</title><rect x="847" y="420" width="3" height="15" fill="rgb(207,212,0)"/><text x="850.00" y="430.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (4 samples, 0.87%)</title><rect x="847" y="340" width="10" height="15" fill="rgb(218,54,17)"/><text x="850.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.87%)</title><rect x="847" y="356" width="10" height="15" fill="rgb(223,114,31)"/><text x="850.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py) (3 samples, 0.65%)</title><rect x="850" y="372" width="7" height="15" fill="rgb(227,141,27)"/><text x="853.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.22%)</title><rect x="855" y="388" width="2" height="15" fill="rgb(237,204,17)"/><text x="858.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="855" y="404" width="2" height="15" fill="rgb(208,126,18)"/><text x="858.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.22%)</title><rect x="855" y="420" width="2" height="15" fill="rgb(240,88,35)"/><text x="858.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.22%)</title><rect x="855" y="436" width="2" height="15" fill="rgb(216,203,32)"/><text x="858.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="855" y="452" width="2" height="15" fill="rgb(235,124,31)"/><text x="858.00" y="462.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (73 samples, 15.80%)</title><rect x="674" y="244" width="186" height="15" fill="rgb(215,191,17)"/><text x="677.00" y="254.50">clip (numpy/core/fromnum..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (73 samples, 15.80%)</title><rect x="674" y="260" width="186" height="15" fill="rgb(218,15,38)"/><text x="677.00" y="270.50">_wrapfunc (numpy/core/fr..</text></g><g><title>array_clip (methods.c) (73 samples, 15.80%)</title><rect x="674" y="276" width="186" height="15" fill="rgb(227,182,24)"/><text x="677.00" y="286.50">array_clip (methods.c)</text></g><g><title>forward_ndarray_method (methods.c) (73 samples, 15.80%)</title><rect x="674" y="292" width="186" height="15" fill="rgb(230,202,35)"/><text x="677.00" y="302.50">forward_ndarray_method (..</text></g><g><title>_clip (numpy/core/_methods.py) (73 samples, 15.80%)</title><rect x="674" y="308" width="186" height="15" fill="rgb(248,9,19)"/><text x="677.00" y="318.50">_clip (numpy/core/_metho..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (5 samples, 1.08%)</title><rect x="847" y="324" width="13" height="15" fill="rgb(231,141,12)"/><text x="850.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.22%)</title><rect x="857" y="340" width="3" height="15" fill="rgb(249,147,19)"/><text x="860.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="857" y="356" width="3" height="15" fill="rgb(240,67,37)"/><text x="860.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="857" y="372" width="3" height="15" fill="rgb(254,55,33)"/><text x="860.00" y="382.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="857" y="388" width="3" height="15" fill="rgb(240,215,20)"/><text x="860.00" y="398.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (80 samples, 17.32%)</title><rect x="658" y="196" width="205" height="15" fill="rgb(237,27,13)"/><text x="661.00" y="206.50">relu (sklearn/neural_netwo..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (76 samples, 16.45%)</title><rect x="668" y="212" width="195" height="15" fill="rgb(217,130,28)"/><text x="671.00" y="222.50">clip (&lt;__array_function__..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (74 samples, 16.02%)</title><rect x="674" y="228" width="189" height="15" fill="rgb(206,130,9)"/><text x="677.00" y="238.50">array_implement_array_fu..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="860" y="244" width="3" height="15" fill="rgb(234,119,17)"/><text x="863.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.22%)</title><rect x="860" y="260" width="3" height="15" fill="rgb(239,151,22)"/><text x="863.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.22%)</title><rect x="860" y="276" width="3" height="15" fill="rgb(254,159,0)"/><text x="863.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.22%)</title><rect x="860" y="292" width="3" height="15" fill="rgb(208,216,47)"/><text x="863.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="860" y="308" width="3" height="15" fill="rgb(246,219,7)"/><text x="863.00" y="318.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (8 samples, 1.73%)</title><rect x="865" y="212" width="21" height="15" fill="rgb(235,4,23)"/><text x="868.00" y="222.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.81%)</title><rect x="886" y="212" width="33" height="15" fill="rgb(230,152,15)"/><text x="889.00" y="222.50">dg..</text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.65%)</title><rect x="919" y="212" width="7" height="15" fill="rgb(209,165,17)"/><text x="922.00" y="222.50"></text></g><g><title>blas_memory_alloc (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="926" y="308" width="3" height="15" fill="rgb(215,176,2)"/><text x="929.00" y="318.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (39 samples, 8.44%)</title><rect x="926" y="276" width="100" height="15" fill="rgb(225,124,8)"/><text x="929.00" y="286.50">DOUBLE_gemv ..</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (39 samples, 8.44%)</title><rect x="926" y="292" width="100" height="15" fill="rgb(254,205,4)"/><text x="929.00" y="302.50">cblas_dgemv ..</text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 8.23%)</title><rect x="929" y="308" width="97" height="15" fill="rgb(247,154,32)"/><text x="932.00" y="318.50">dgemv_threa..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 8.23%)</title><rect x="929" y="324" width="97" height="15" fill="rgb(223,30,1)"/><text x="932.00" y="334.50">exec_blas (..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (38 samples, 8.23%)</title><rect x="929" y="340" width="97" height="15" fill="rgb(218,91,11)"/><text x="932.00" y="350.50">exec_blas_a..</text></g><g><title>sched_yield (libc-2.29.so) (38 samples, 8.23%)</title><rect x="929" y="356" width="97" height="15" fill="rgb(214,158,50)"/><text x="932.00" y="366.50">sched_yield..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (24 samples, 5.19%)</title><rect x="1026" y="340" width="61" height="15" fill="rgb(217,87,35)"/><text x="1029.00" y="350.50">exec_b..</text></g><g><title>sched_yield (libc-2.29.so) (24 samples, 5.19%)</title><rect x="1026" y="356" width="61" height="15" fill="rgb(232,194,51)"/><text x="1029.00" y="366.50">sched_..</text></g><g><title>DOUBLE_matmul (matmul.c.src) (65 samples, 14.07%)</title><rect x="926" y="260" width="166" height="15" fill="rgb(227,128,39)"/><text x="929.00" y="270.50">DOUBLE_matmul (matmul..</text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 5.63%)</title><rect x="1026" y="276" width="66" height="15" fill="rgb(246,60,36)"/><text x="1029.00" y="286.50">cblas_d..</text></g><g><title>dgemm_thread_nn (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 5.63%)</title><rect x="1026" y="292" width="66" height="15" fill="rgb(241,50,38)"/><text x="1029.00" y="302.50">dgemm_t..</text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 5.63%)</title><rect x="1026" y="308" width="66" height="15" fill="rgb(238,34,43)"/><text x="1029.00" y="318.50">gemm_dr..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (26 samples, 5.63%)</title><rect x="1026" y="324" width="66" height="15" fill="rgb(232,96,49)"/><text x="1029.00" y="334.50">exec_bl..</text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.43%)</title><rect x="1087" y="340" width="5" height="15" fill="rgb(206,131,11)"/><text x="1090.00" y="350.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1090" y="356" width="2" height="15" fill="rgb(246,222,37)"/><text x="1093.00" y="366.50"></text></g><g><title>IsUintAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="1095" y="292" width="3" height="15" fill="rgb(212,126,38)"/><text x="1098.00" y="302.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.22%)</title><rect x="1095" y="308" width="3" height="15" fill="rgb(249,203,0)"/><text x="1098.00" y="318.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.22%)</title><rect x="1098" y="308" width="2" height="15" fill="rgb(221,43,49)"/><text x="1101.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1098" y="324" width="2" height="15" fill="rgb(249,58,43)"/><text x="1101.00" y="334.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="1100" y="324" width="3" height="15" fill="rgb(251,33,11)"/><text x="1103.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1100" y="340" width="3" height="15" fill="rgb(234,121,45)"/><text x="1103.00" y="350.50"></text></g><g><title>0x7f821106fa19 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1100" y="356" width="3" height="15" fill="rgb(248,103,4)"/><text x="1103.00" y="366.50"></text></g><g><title>_npy_stride_sort_item_comparator (shape.c) (1 samples, 0.22%)</title><rect x="1100" y="372" width="3" height="15" fill="rgb(229,72,34)"/><text x="1103.00" y="382.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.65%)</title><rect x="1098" y="292" width="7" height="15" fill="rgb(209,177,54)"/><text x="1101.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.43%)</title><rect x="1100" y="308" width="5" height="15" fill="rgb(212,7,47)"/><text x="1103.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="1103" y="324" width="2" height="15" fill="rgb(230,64,22)"/><text x="1106.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (5 samples, 1.08%)</title><rect x="1095" y="276" width="13" height="15" fill="rgb(253,141,39)"/><text x="1098.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1105" y="292" width="3" height="15" fill="rgb(232,161,33)"/><text x="1108.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="1105" y="308" width="3" height="15" fill="rgb(211,171,2)"/><text x="1108.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="1105" y="324" width="3" height="15" fill="rgb(253,137,20)"/><text x="1108.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1105" y="340" width="3" height="15" fill="rgb(249,221,49)"/><text x="1108.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1105" y="356" width="3" height="15" fill="rgb(240,147,28)"/><text x="1108.00" y="366.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.22%)</title><rect x="1105" y="372" width="3" height="15" fill="rgb(223,226,3)"/><text x="1108.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1105" y="388" width="3" height="15" fill="rgb(242,128,37)"/><text x="1108.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (7 samples, 1.52%)</title><rect x="1092" y="260" width="18" height="15" fill="rgb(229,125,48)"/><text x="1095.00" y="270.50"></text></g><g><title>npyiter_apply_forced_iteration_order (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1108" y="276" width="2" height="15" fill="rgb(231,117,21)"/><text x="1111.00" y="286.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.22%)</title><rect x="1110" y="260" width="3" height="15" fill="rgb(235,73,20)"/><text x="1113.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.22%)</title><rect x="1110" y="276" width="3" height="15" fill="rgb(216,79,14)"/><text x="1113.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1113" y="276" width="2" height="15" fill="rgb(225,110,15)"/><text x="1116.00" y="286.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1113" y="292" width="2" height="15" fill="rgb(244,157,28)"/><text x="1116.00" y="302.50"></text></g><g><title>dtype_kind_to_simplified_ordering (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1113" y="308" width="2" height="15" fill="rgb(230,88,37)"/><text x="1116.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.43%)</title><rect x="1113" y="260" width="5" height="15" fill="rgb(234,144,18)"/><text x="1116.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1115" y="276" width="3" height="15" fill="rgb(245,61,51)"/><text x="1118.00" y="286.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1118" y="260" width="3" height="15" fill="rgb(208,203,49)"/><text x="1121.00" y="270.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (102 samples, 22.08%)</title><rect x="863" y="196" width="260" height="15" fill="rgb(234,69,12)"/><text x="866.00" y="206.50">safe_sparse_dot (sklearn/utils/ext..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (77 samples, 16.67%)</title><rect x="926" y="212" width="197" height="15" fill="rgb(207,25,15)"/><text x="929.00" y="222.50">ufunc_generic_call (ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (77 samples, 16.67%)</title><rect x="926" y="228" width="197" height="15" fill="rgb(252,164,54)"/><text x="929.00" y="238.50">PyUFunc_GenericFunction (..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (77 samples, 16.67%)</title><rect x="926" y="244" width="197" height="15" fill="rgb(232,215,40)"/><text x="929.00" y="254.50">PyUFunc_GeneralizedFuncti..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1121" y="260" width="2" height="15" fill="rgb(217,90,32)"/><text x="1124.00" y="270.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (9 samples, 1.95%)</title><rect x="1126" y="308" width="23" height="15" fill="rgb(223,153,21)"/><text x="1129.00" y="318.50">_..</text></g><g><title>DOUBLE_add (loops.c.src) (13 samples, 2.81%)</title><rect x="1126" y="260" width="33" height="15" fill="rgb(223,22,26)"/><text x="1129.00" y="270.50">DO..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (13 samples, 2.81%)</title><rect x="1126" y="276" width="33" height="15" fill="rgb(233,112,53)"/><text x="1129.00" y="286.50">ru..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (13 samples, 2.81%)</title><rect x="1126" y="292" width="33" height="15" fill="rgb(213,48,36)"/><text x="1129.00" y="302.50">ss..</text></g><g><title>_mm_store_pd (emmintrin.h) (4 samples, 0.87%)</title><rect x="1149" y="308" width="10" height="15" fill="rgb(231,60,52)"/><text x="1152.00" y="318.50"></text></g><g><title>0x7f82110d7ef4 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1161" y="308" width="3" height="15" fill="rgb(218,3,39)"/><text x="1164.00" y="318.50"></text></g><g><title>0x7f82110d7f36 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1164" y="308" width="3" height="15" fill="rgb(213,118,3)"/><text x="1167.00" y="318.50"></text></g><g><title>0x7f82110d7f42 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1167" y="308" width="2" height="15" fill="rgb(229,190,47)"/><text x="1170.00" y="318.50"></text></g><g><title>0x7f82110d7f4a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1169" y="308" width="3" height="15" fill="rgb(223,150,38)"/><text x="1172.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (202 samples, 43.72%)</title><rect x="658" y="180" width="516" height="15" fill="rgb(244,116,24)"/><text x="661.00" y="190.50">_forward_pass (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (20 samples, 4.33%)</title><rect x="1123" y="196" width="51" height="15" fill="rgb(216,17,54)"/><text x="1126.00" y="206.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (20 samples, 4.33%)</title><rect x="1123" y="212" width="51" height="15" fill="rgb(243,6,30)"/><text x="1126.00" y="222.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (19 samples, 4.11%)</title><rect x="1126" y="228" width="48" height="15" fill="rgb(230,74,26)"/><text x="1129.00" y="238.50">exec..</text></g><g><title>iterator_loop (ufunc_object.c) (19 samples, 4.11%)</title><rect x="1126" y="244" width="48" height="15" fill="rgb(249,174,11)"/><text x="1129.00" y="254.50">iter..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (6 samples, 1.30%)</title><rect x="1159" y="260" width="15" height="15" fill="rgb(213,181,52)"/><text x="1162.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (5 samples, 1.08%)</title><rect x="1161" y="276" width="13" height="15" fill="rgb(231,138,39)"/><text x="1164.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (5 samples, 1.08%)</title><rect x="1161" y="292" width="13" height="15" fill="rgb(234,16,3)"/><text x="1164.00" y="302.50"></text></g><g><title>0x7f82110d7f6a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1172" y="308" width="2" height="15" fill="rgb(251,78,31)"/><text x="1175.00" y="318.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="1174" y="180" width="3" height="15" fill="rgb(222,184,1)"/><text x="1177.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.22%)</title><rect x="1174" y="196" width="3" height="15" fill="rgb(251,101,29)"/><text x="1177.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.22%)</title><rect x="1174" y="212" width="3" height="15" fill="rgb(229,78,28)"/><text x="1177.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="1174" y="228" width="3" height="15" fill="rgb(242,119,47)"/><text x="1177.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1174" y="244" width="3" height="15" fill="rgb(251,208,2)"/><text x="1177.00" y="254.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1174" y="260" width="3" height="15" fill="rgb(242,162,38)"/><text x="1177.00" y="270.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.22%)</title><rect x="1174" y="276" width="3" height="15" fill="rgb(216,40,30)"/><text x="1177.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1174" y="292" width="3" height="15" fill="rgb(212,159,47)"/><text x="1177.00" y="302.50"></text></g><g><title>0x7f82110b8e80 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1174" y="308" width="3" height="15" fill="rgb(219,154,43)"/><text x="1177.00" y="318.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.22%)</title><rect x="1179" y="212" width="3" height="15" fill="rgb(251,146,11)"/><text x="1182.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.65%)</title><rect x="1177" y="196" width="7" height="15" fill="rgb(239,201,30)"/><text x="1180.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (1 samples, 0.22%)</title><rect x="1182" y="212" width="2" height="15" fill="rgb(218,83,10)"/><text x="1185.00" y="222.50"></text></g><g><title>profile_skl (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (209 samples, 45.24%)</title><rect x="653" y="68" width="534" height="15" fill="rgb(211,141,5)"/><text x="656.00" y="78.50">profile_skl (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (209 samples, 45.24%)</title><rect x="653" y="84" width="534" height="15" fill="rgb(234,143,43)"/><text x="656.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (209 samples, 45.24%)</title><rect x="653" y="100" width="534" height="15" fill="rgb(226,17,29)"/><text x="656.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (209 samples, 45.24%)</title><rect x="653" y="116" width="534" height="15" fill="rgb(251,37,44)"/><text x="656.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (209 samples, 45.24%)</title><rect x="653" y="132" width="534" height="15" fill="rgb(218,30,2)"/><text x="656.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (209 samples, 45.24%)</title><rect x="653" y="148" width="534" height="15" fill="rgb(235,46,4)"/><text x="656.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (208 samples, 45.02%)</title><rect x="656" y="164" width="531" height="15" fill="rgb(215,125,46)"/><text x="659.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (4 samples, 0.87%)</title><rect x="1177" y="180" width="10" height="15" fill="rgb(251,51,20)"/><text x="1180.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.22%)</title><rect x="1184" y="196" width="3" height="15" fill="rgb(253,111,22)"/><text x="1187.00" y="206.50"></text></g><g><title>all (462 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,76,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (462 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(209,35,31)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>start (bench_MLPRegressor_default_b_reg_1000_4_12_float_.py) (1 samples, 0.22%)</title><rect x="1187" y="68" width="3" height="15" fill="rgb(213,92,46)"/><text x="1190.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py) (1 samples, 0.22%)</title><rect x="1187" y="84" width="3" height="15" fill="rgb(238,111,39)"/><text x="1190.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="1187" y="100" width="3" height="15" fill="rgb(231,39,39)"/><text x="1190.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="116" width="3" height="15" fill="rgb(214,214,5)"/><text x="1190.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(242,185,40)"/><text x="1190.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="148" width="3" height="15" fill="rgb(251,11,20)"/><text x="1190.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="164" width="3" height="15" fill="rgb(222,43,35)"/><text x="1190.00" y="174.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.22%)</title><rect x="1187" y="180" width="3" height="15" fill="rgb(222,110,24)"/><text x="1190.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.22%)</title><rect x="1187" y="196" width="3" height="15" fill="rgb(224,159,2)"/><text x="1190.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1187" y="212" width="3" height="15" fill="rgb(248,44,14)"/><text x="1190.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1187" y="228" width="3" height="15" fill="rgb(241,148,25)"/><text x="1190.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1187" y="244" width="3" height="15" fill="rgb(238,88,42)"/><text x="1190.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (1 samples, 0.22%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(231,154,18)"/><text x="1190.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (1 samples, 0.22%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(227,199,10)"/><text x="1190.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(253,97,22)"/><text x="1190.00" y="302.50"></text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(219,45,50)"/><text x="1190.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(248,119,10)"/><text x="1190.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(205,74,7)"/><text x="1190.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1187" y="356" width="3" height="15" fill="rgb(253,56,42)"/><text x="1190.00" y="366.50"></text></g></g></svg>