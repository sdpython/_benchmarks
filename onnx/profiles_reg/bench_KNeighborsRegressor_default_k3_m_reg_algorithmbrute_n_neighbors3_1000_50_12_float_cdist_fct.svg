<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1974" onload="init(evt)" viewBox="0 0 1200 1974" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1974" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1957.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1957.00"> </text><g id="frames"><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(225,200,37)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(224,60,3)"/><text x="13.00" y="926.50"></text></g><g><title>_has (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(231,63,22)"/><text x="13.00" y="942.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.13%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(226,154,54)"/><text x="13.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.13%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(245,168,40)"/><text x="13.00" y="974.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(240,183,5)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.27%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(214,156,23)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(236,176,53)"/><text x="14.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(206,111,9)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(236,118,20)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(220,203,50)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(212,215,49)"/><text x="14.00" y="974.50"></text></g><g><title>_path_isdir (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(228,216,0)"/><text x="14.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(214,29,4)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(245,150,2)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(214,25,36)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(222,76,3)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(212,33,50)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(205,194,43)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.40%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(230,85,40)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(223,171,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(233,104,34)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(227,102,8)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(242,120,2)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(219,139,7)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.40%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(206,116,13)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(216,187,45)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(243,60,3)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(225,125,14)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(209,53,11)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(236,103,21)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.40%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(246,182,6)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(216,220,6)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(223,157,35)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(221,36,46)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(239,213,38)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="660" width="4" height="15" fill="rgb(223,135,44)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="676" width="4" height="15" fill="rgb(220,110,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="692" width="4" height="15" fill="rgb(252,155,54)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="708" width="4" height="15" fill="rgb(209,184,32)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="724" width="4" height="15" fill="rgb(235,168,26)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="740" width="4" height="15" fill="rgb(225,168,14)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="756" width="4" height="15" fill="rgb(208,91,28)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="772" width="4" height="15" fill="rgb(221,104,1)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="10" y="788" width="4" height="15" fill="rgb(240,207,28)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="10" y="804" width="4" height="15" fill="rgb(222,61,22)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="820" width="4" height="15" fill="rgb(238,77,0)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="836" width="4" height="15" fill="rgb(250,185,19)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.40%)</title><rect x="10" y="852" width="4" height="15" fill="rgb(251,205,35)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="868" width="1" height="15" fill="rgb(218,5,11)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="884" width="1" height="15" fill="rgb(254,213,16)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="900" width="1" height="15" fill="rgb(227,28,14)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(238,142,44)"/><text x="16.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.13%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(216,147,40)"/><text x="16.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(252,70,23)"/><text x="16.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.13%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(205,118,33)"/><text x="16.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(218,61,41)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(248,98,14)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(251,30,32)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(240,27,19)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.53%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(238,20,0)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.53%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(218,229,19)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="292" width="2" height="15" fill="rgb(236,44,0)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="308" width="2" height="15" fill="rgb(208,142,11)"/><text x="17.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="324" width="2" height="15" fill="rgb(218,111,3)"/><text x="17.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="340" width="2" height="15" fill="rgb(249,41,14)"/><text x="17.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="356" width="2" height="15" fill="rgb(250,174,36)"/><text x="17.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="372" width="2" height="15" fill="rgb(236,180,19)"/><text x="17.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.13%)</title><rect x="14" y="388" width="2" height="15" fill="rgb(211,167,32)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="404" width="2" height="15" fill="rgb(213,57,13)"/><text x="17.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="420" width="2" height="15" fill="rgb(250,209,44)"/><text x="17.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="436" width="2" height="15" fill="rgb(246,193,47)"/><text x="17.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="452" width="2" height="15" fill="rgb(206,144,48)"/><text x="17.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="468" width="2" height="15" fill="rgb(240,158,22)"/><text x="17.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="484" width="2" height="15" fill="rgb(238,131,23)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="500" width="2" height="15" fill="rgb(205,61,45)"/><text x="17.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="516" width="2" height="15" fill="rgb(229,106,46)"/><text x="17.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="532" width="2" height="15" fill="rgb(234,67,39)"/><text x="17.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="548" width="2" height="15" fill="rgb(211,50,36)"/><text x="17.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="564" width="2" height="15" fill="rgb(205,124,37)"/><text x="17.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.13%)</title><rect x="14" y="580" width="2" height="15" fill="rgb(248,132,7)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="596" width="2" height="15" fill="rgb(252,104,54)"/><text x="17.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="612" width="2" height="15" fill="rgb(209,105,17)"/><text x="17.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="628" width="2" height="15" fill="rgb(221,219,48)"/><text x="17.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="644" width="2" height="15" fill="rgb(220,173,18)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="660" width="2" height="15" fill="rgb(205,133,31)"/><text x="17.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="676" width="2" height="15" fill="rgb(246,79,51)"/><text x="17.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="692" width="2" height="15" fill="rgb(242,77,42)"/><text x="17.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="708" width="2" height="15" fill="rgb(222,107,41)"/><text x="17.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="724" width="2" height="15" fill="rgb(240,62,6)"/><text x="17.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="14" y="740" width="2" height="15" fill="rgb(244,123,12)"/><text x="17.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="14" y="756" width="2" height="15" fill="rgb(231,69,34)"/><text x="17.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/morestats.py) (1 samples, 0.13%)</title><rect x="14" y="772" width="2" height="15" fill="rgb(227,15,0)"/><text x="17.00" y="782.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.13%)</title><rect x="14" y="788" width="2" height="15" fill="rgb(242,101,51)"/><text x="17.00" y="798.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(225,78,50)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(244,158,19)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(248,16,41)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="1172" width="1" height="15" fill="rgb(214,45,53)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1188" width="1" height="15" fill="rgb(218,179,29)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.13%)</title><rect x="16" y="1204" width="1" height="15" fill="rgb(226,35,5)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1220" width="1" height="15" fill="rgb(227,54,14)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1236" width="1" height="15" fill="rgb(208,152,45)"/><text x="19.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1252" width="1" height="15" fill="rgb(224,190,49)"/><text x="19.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="16" y="1268" width="1" height="15" fill="rgb(248,78,36)"/><text x="19.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="16" y="1284" width="1" height="15" fill="rgb(248,61,10)"/><text x="19.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(230,223,52)"/><text x="19.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(210,12,16)"/><text x="19.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.13%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(215,89,20)"/><text x="19.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.13%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(235,125,9)"/><text x="19.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.13%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(221,166,26)"/><text x="19.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.13%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(207,55,50)"/><text x="19.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.13%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(229,29,22)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(254,16,12)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(254,196,34)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(237,130,49)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(205,113,46)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(248,172,30)"/><text x="20.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(233,82,48)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(216,72,11)"/><text x="20.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.13%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(254,113,16)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1380" width="2" height="15" fill="rgb(220,4,46)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1396" width="2" height="15" fill="rgb(213,6,33)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1412" width="2" height="15" fill="rgb(246,81,5)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="17" y="1428" width="2" height="15" fill="rgb(229,81,45)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="17" y="1444" width="2" height="15" fill="rgb(244,165,5)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="17" y="1460" width="2" height="15" fill="rgb(229,37,38)"/><text x="20.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="17" y="1476" width="2" height="15" fill="rgb(250,101,15)"/><text x="20.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.13%)</title><rect x="17" y="1492" width="2" height="15" fill="rgb(250,132,5)"/><text x="20.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.13%)</title><rect x="17" y="1508" width="2" height="15" fill="rgb(229,229,38)"/><text x="20.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="17" y="1524" width="2" height="15" fill="rgb(211,175,19)"/><text x="20.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="17" y="1540" width="2" height="15" fill="rgb(237,21,36)"/><text x="20.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="484" width="5" height="15" fill="rgb(226,126,25)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="500" width="5" height="15" fill="rgb(248,120,17)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="516" width="5" height="15" fill="rgb(235,160,3)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="532" width="5" height="15" fill="rgb(216,134,43)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="16" y="548" width="5" height="15" fill="rgb(222,78,47)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="564" width="5" height="15" fill="rgb(241,37,52)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.40%)</title><rect x="16" y="580" width="5" height="15" fill="rgb(249,181,25)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="596" width="5" height="15" fill="rgb(206,221,4)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="612" width="5" height="15" fill="rgb(235,199,25)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="628" width="5" height="15" fill="rgb(226,163,30)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="16" y="644" width="5" height="15" fill="rgb(216,151,25)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="660" width="5" height="15" fill="rgb(224,203,17)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.40%)</title><rect x="16" y="676" width="5" height="15" fill="rgb(230,9,0)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="692" width="5" height="15" fill="rgb(221,220,5)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="708" width="5" height="15" fill="rgb(217,61,2)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="724" width="5" height="15" fill="rgb(205,40,37)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="16" y="740" width="5" height="15" fill="rgb(247,103,18)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="756" width="5" height="15" fill="rgb(208,87,4)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.40%)</title><rect x="16" y="772" width="5" height="15" fill="rgb(215,30,25)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="788" width="5" height="15" fill="rgb(229,104,24)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="804" width="5" height="15" fill="rgb(250,82,42)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="820" width="5" height="15" fill="rgb(254,37,16)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="16" y="836" width="5" height="15" fill="rgb(238,101,46)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="852" width="5" height="15" fill="rgb(225,229,51)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.40%)</title><rect x="16" y="868" width="5" height="15" fill="rgb(206,45,13)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="884" width="5" height="15" fill="rgb(229,23,24)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="900" width="5" height="15" fill="rgb(210,80,37)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="916" width="5" height="15" fill="rgb(238,21,18)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="932" width="5" height="15" fill="rgb(222,183,2)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="948" width="5" height="15" fill="rgb(241,121,49)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="964" width="5" height="15" fill="rgb(209,2,22)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="16" y="980" width="5" height="15" fill="rgb(238,158,21)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="996" width="5" height="15" fill="rgb(206,83,12)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.40%)</title><rect x="16" y="1012" width="5" height="15" fill="rgb(214,138,28)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="1028" width="5" height="15" fill="rgb(240,187,30)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="1044" width="5" height="15" fill="rgb(215,36,19)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="1060" width="5" height="15" fill="rgb(205,35,14)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.40%)</title><rect x="16" y="1076" width="5" height="15" fill="rgb(218,122,27)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.40%)</title><rect x="16" y="1092" width="5" height="15" fill="rgb(210,225,11)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.40%)</title><rect x="16" y="1108" width="5" height="15" fill="rgb(216,105,36)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="17" y="1124" width="4" height="15" fill="rgb(231,146,40)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="17" y="1140" width="4" height="15" fill="rgb(231,78,9)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="17" y="1156" width="4" height="15" fill="rgb(241,169,46)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="17" y="1172" width="4" height="15" fill="rgb(216,109,4)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="17" y="1188" width="4" height="15" fill="rgb(246,26,36)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="17" y="1204" width="4" height="15" fill="rgb(241,107,48)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="17" y="1220" width="4" height="15" fill="rgb(234,129,49)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/shape_calculators/__init__.py) (1 samples, 0.13%)</title><rect x="19" y="1236" width="2" height="15" fill="rgb(206,160,22)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1252" width="2" height="15" fill="rgb(225,159,3)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1268" width="2" height="15" fill="rgb(225,89,2)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1284" width="2" height="15" fill="rgb(241,131,53)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1300" width="2" height="15" fill="rgb(251,76,34)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="19" y="1316" width="2" height="15" fill="rgb(249,196,13)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1332" width="2" height="15" fill="rgb(208,115,2)"/><text x="22.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1348" width="2" height="15" fill="rgb(244,79,2)"/><text x="22.00" y="1358.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="19" y="1364" width="2" height="15" fill="rgb(219,51,13)"/><text x="22.00" y="1374.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="19" y="1380" width="2" height="15" fill="rgb(251,50,15)"/><text x="22.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.13%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(209,158,22)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(253,124,51)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(214,136,47)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(214,3,50)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(223,139,34)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(225,190,2)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/__init__.py) (1 samples, 0.13%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(221,82,11)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(234,196,25)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(248,182,32)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(230,193,19)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(236,91,19)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(211,183,52)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/internals/managers.py) (1 samples, 0.13%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(223,121,1)"/><text x="24.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(254,206,18)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(242,13,12)"/><text x="24.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(246,197,8)"/><text x="24.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(217,3,53)"/><text x="24.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(214,103,13)"/><text x="24.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(208,82,6)"/><text x="24.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (5 samples, 0.67%)</title><rect x="16" y="244" width="8" height="15" fill="rgb(233,90,52)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="260" width="8" height="15" fill="rgb(230,169,7)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="276" width="8" height="15" fill="rgb(224,20,5)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="292" width="8" height="15" fill="rgb(217,81,40)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.67%)</title><rect x="16" y="308" width="8" height="15" fill="rgb(208,109,43)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="324" width="8" height="15" fill="rgb(250,227,31)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.67%)</title><rect x="16" y="340" width="8" height="15" fill="rgb(242,224,47)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="356" width="8" height="15" fill="rgb(236,58,0)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="372" width="8" height="15" fill="rgb(233,36,49)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="388" width="8" height="15" fill="rgb(225,152,51)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.67%)</title><rect x="16" y="404" width="8" height="15" fill="rgb(223,84,7)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="420" width="8" height="15" fill="rgb(224,61,15)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (5 samples, 0.67%)</title><rect x="16" y="436" width="8" height="15" fill="rgb(244,53,20)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="452" width="8" height="15" fill="rgb(250,95,45)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.67%)</title><rect x="16" y="468" width="8" height="15" fill="rgb(244,54,39)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="484" width="3" height="15" fill="rgb(218,12,46)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="500" width="3" height="15" fill="rgb(206,203,10)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="516" width="3" height="15" fill="rgb(224,209,21)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.27%)</title><rect x="21" y="532" width="3" height="15" fill="rgb(210,185,12)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="548" width="3" height="15" fill="rgb(212,62,22)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="564" width="3" height="15" fill="rgb(247,10,22)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="580" width="3" height="15" fill="rgb(233,164,29)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="596" width="3" height="15" fill="rgb(219,76,46)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="612" width="3" height="15" fill="rgb(250,186,1)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.27%)</title><rect x="21" y="628" width="3" height="15" fill="rgb(232,21,33)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="644" width="3" height="15" fill="rgb(224,7,29)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="660" width="3" height="15" fill="rgb(223,81,50)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="676" width="3" height="15" fill="rgb(236,105,42)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="692" width="3" height="15" fill="rgb(249,65,13)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="708" width="3" height="15" fill="rgb(212,194,9)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.27%)</title><rect x="21" y="724" width="3" height="15" fill="rgb(231,71,5)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="740" width="3" height="15" fill="rgb(223,168,32)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="756" width="3" height="15" fill="rgb(207,56,46)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="772" width="3" height="15" fill="rgb(251,21,21)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="788" width="3" height="15" fill="rgb(243,163,15)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="804" width="3" height="15" fill="rgb(206,141,45)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (2 samples, 0.27%)</title><rect x="21" y="820" width="3" height="15" fill="rgb(215,164,7)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="836" width="3" height="15" fill="rgb(220,176,22)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="852" width="3" height="15" fill="rgb(231,192,40)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="868" width="3" height="15" fill="rgb(227,74,30)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="884" width="3" height="15" fill="rgb(245,188,41)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="900" width="3" height="15" fill="rgb(225,32,32)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (2 samples, 0.27%)</title><rect x="21" y="916" width="3" height="15" fill="rgb(231,131,21)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="932" width="3" height="15" fill="rgb(210,83,31)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(208,116,3)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(216,77,37)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(208,116,0)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(228,71,45)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.27%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(243,98,21)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(213,112,23)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(233,100,5)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="1060" width="3" height="15" fill="rgb(212,180,6)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.27%)</title><rect x="21" y="1076" width="3" height="15" fill="rgb(229,199,6)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.27%)</title><rect x="21" y="1092" width="3" height="15" fill="rgb(231,222,28)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.13%)</title><rect x="22" y="1108" width="2" height="15" fill="rgb(226,20,39)"/><text x="25.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1124" width="2" height="15" fill="rgb(228,76,34)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1140" width="2" height="15" fill="rgb(227,54,12)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1156" width="2" height="15" fill="rgb(221,79,35)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1172" width="2" height="15" fill="rgb(209,89,16)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1188" width="2" height="15" fill="rgb(215,194,52)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.13%)</title><rect x="22" y="1204" width="2" height="15" fill="rgb(232,213,46)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1220" width="2" height="15" fill="rgb(212,75,52)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1236" width="2" height="15" fill="rgb(237,46,34)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1252" width="2" height="15" fill="rgb(213,212,2)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1268" width="2" height="15" fill="rgb(215,42,25)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1284" width="2" height="15" fill="rgb(219,158,53)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.13%)</title><rect x="22" y="1300" width="2" height="15" fill="rgb(212,105,43)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1316" width="2" height="15" fill="rgb(210,14,23)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1332" width="2" height="15" fill="rgb(239,82,6)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1348" width="2" height="15" fill="rgb(209,120,23)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1364" width="2" height="15" fill="rgb(253,26,49)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1380" width="2" height="15" fill="rgb(213,56,43)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="22" y="1396" width="2" height="15" fill="rgb(237,68,10)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1412" width="2" height="15" fill="rgb(251,85,12)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1428" width="2" height="15" fill="rgb(252,223,23)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1444" width="2" height="15" fill="rgb(231,141,14)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1460" width="2" height="15" fill="rgb(215,226,17)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1476" width="2" height="15" fill="rgb(210,93,53)"/><text x="25.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.13%)</title><rect x="22" y="1492" width="2" height="15" fill="rgb(249,147,42)"/><text x="25.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1508" width="2" height="15" fill="rgb(228,216,2)"/><text x="25.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1524" width="2" height="15" fill="rgb(215,20,8)"/><text x="25.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1540" width="2" height="15" fill="rgb(235,68,25)"/><text x="25.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1556" width="2" height="15" fill="rgb(208,37,43)"/><text x="25.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1572" width="2" height="15" fill="rgb(207,71,26)"/><text x="25.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1588" width="2" height="15" fill="rgb(234,59,48)"/><text x="25.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1604" width="2" height="15" fill="rgb(238,183,47)"/><text x="25.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1620" width="2" height="15" fill="rgb(247,35,47)"/><text x="25.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.13%)</title><rect x="22" y="1636" width="2" height="15" fill="rgb(246,27,7)"/><text x="25.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1652" width="2" height="15" fill="rgb(239,86,21)"/><text x="25.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1668" width="2" height="15" fill="rgb(239,174,49)"/><text x="25.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1684" width="2" height="15" fill="rgb(224,90,7)"/><text x="25.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1700" width="2" height="15" fill="rgb(240,113,51)"/><text x="25.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1716" width="2" height="15" fill="rgb(241,214,40)"/><text x="25.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1732" width="2" height="15" fill="rgb(236,3,31)"/><text x="25.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1748" width="2" height="15" fill="rgb(227,130,13)"/><text x="25.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.13%)</title><rect x="22" y="1764" width="2" height="15" fill="rgb(238,145,21)"/><text x="25.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1780" width="2" height="15" fill="rgb(231,134,6)"/><text x="25.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1796" width="2" height="15" fill="rgb(208,173,24)"/><text x="25.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1812" width="2" height="15" fill="rgb(242,147,51)"/><text x="25.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="22" y="1828" width="2" height="15" fill="rgb(250,1,41)"/><text x="25.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1844" width="2" height="15" fill="rgb(211,147,42)"/><text x="25.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/colors.py) (1 samples, 0.13%)</title><rect x="22" y="1860" width="2" height="15" fill="rgb(249,175,42)"/><text x="25.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1876" width="2" height="15" fill="rgb(227,94,46)"/><text x="25.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1892" width="2" height="15" fill="rgb(216,194,44)"/><text x="25.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="22" y="1908" width="2" height="15" fill="rgb(219,56,21)"/><text x="25.00" y="1918.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.13%)</title><rect x="22" y="1924" width="2" height="15" fill="rgb(219,47,19)"/><text x="25.00" y="1934.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.34%)</title><rect x="10" y="68" width="15" height="15" fill="rgb(242,20,41)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.34%)</title><rect x="10" y="84" width="15" height="15" fill="rgb(253,88,10)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.34%)</title><rect x="10" y="100" width="15" height="15" fill="rgb(216,13,15)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 1.34%)</title><rect x="10" y="116" width="15" height="15" fill="rgb(211,157,35)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.34%)</title><rect x="10" y="132" width="15" height="15" fill="rgb(241,129,47)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3.py) (10 samples, 1.34%)</title><rect x="10" y="148" width="15" height="15" fill="rgb(222,167,42)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.34%)</title><rect x="10" y="164" width="15" height="15" fill="rgb(244,31,30)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.34%)</title><rect x="10" y="180" width="15" height="15" fill="rgb(227,45,39)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="16" y="196" width="9" height="15" fill="rgb(246,180,7)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.80%)</title><rect x="16" y="212" width="9" height="15" fill="rgb(232,139,14)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.80%)</title><rect x="16" y="228" width="9" height="15" fill="rgb(228,172,37)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="244" width="1" height="15" fill="rgb(206,205,13)"/><text x="27.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="260" width="1" height="15" fill="rgb(240,207,34)"/><text x="27.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="276" width="1" height="15" fill="rgb(253,67,46)"/><text x="27.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="292" width="1" height="15" fill="rgb(213,119,24)"/><text x="27.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="308" width="1" height="15" fill="rgb(219,103,23)"/><text x="27.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="324" width="1" height="15" fill="rgb(210,189,11)"/><text x="27.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="340" width="1" height="15" fill="rgb(253,1,40)"/><text x="27.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="356" width="1" height="15" fill="rgb(248,106,40)"/><text x="27.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.13%)</title><rect x="24" y="372" width="1" height="15" fill="rgb(208,202,39)"/><text x="27.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="388" width="1" height="15" fill="rgb(228,44,20)"/><text x="27.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="404" width="1" height="15" fill="rgb(242,89,51)"/><text x="27.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="420" width="1" height="15" fill="rgb(249,43,35)"/><text x="27.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="436" width="1" height="15" fill="rgb(246,77,12)"/><text x="27.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="452" width="1" height="15" fill="rgb(237,27,48)"/><text x="27.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="24" y="468" width="1" height="15" fill="rgb(226,98,26)"/><text x="27.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="24" y="484" width="1" height="15" fill="rgb(209,8,25)"/><text x="27.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/shape_base.py) (1 samples, 0.13%)</title><rect x="24" y="500" width="1" height="15" fill="rgb(216,92,7)"/><text x="27.00" y="510.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.13%)</title><rect x="24" y="516" width="1" height="15" fill="rgb(249,55,29)"/><text x="27.00" y="526.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.13%)</title><rect x="24" y="532" width="1" height="15" fill="rgb(233,9,42)"/><text x="27.00" y="542.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.13%)</title><rect x="24" y="548" width="1" height="15" fill="rgb(216,36,34)"/><text x="27.00" y="558.50"></text></g><g><title>ismethod (numpy/compat/_inspect.py) (1 samples, 0.13%)</title><rect x="24" y="564" width="1" height="15" fill="rgb(237,79,37)"/><text x="27.00" y="574.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (3 samples, 0.40%)</title><rect x="25" y="196" width="5" height="15" fill="rgb(244,34,41)"/><text x="28.00" y="206.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (3 samples, 0.40%)</title><rect x="25" y="212" width="5" height="15" fill="rgb(220,46,12)"/><text x="28.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 0.40%)</title><rect x="25" y="228" width="5" height="15" fill="rgb(211,45,9)"/><text x="28.00" y="238.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (3 samples, 0.40%)</title><rect x="25" y="244" width="5" height="15" fill="rgb(246,90,14)"/><text x="28.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 0.40%)</title><rect x="25" y="260" width="5" height="15" fill="rgb(235,106,45)"/><text x="28.00" y="270.50"></text></g><g><title>array_argpartition (methods.c) (3 samples, 0.40%)</title><rect x="25" y="276" width="5" height="15" fill="rgb(238,182,17)"/><text x="28.00" y="286.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (3 samples, 0.40%)</title><rect x="25" y="292" width="5" height="15" fill="rgb(245,129,17)"/><text x="28.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (3 samples, 0.40%)</title><rect x="25" y="308" width="5" height="15" fill="rgb(212,66,53)"/><text x="28.00" y="318.50"></text></g><g><title>aintroselect_double (selection.c.src) (2 samples, 0.27%)</title><rect x="27" y="324" width="3" height="15" fill="rgb(235,105,19)"/><text x="30.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src) (2 samples, 0.27%)</title><rect x="27" y="340" width="3" height="15" fill="rgb(231,143,22)"/><text x="30.00" y="350.50"></text></g><g><title>DOUBLE_LT (npysort_common.h) (2 samples, 0.27%)</title><rect x="27" y="356" width="3" height="15" fill="rgb(206,28,45)"/><text x="30.00" y="366.50"></text></g><g><title>profile0_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (5 samples, 0.67%)</title><rect x="25" y="68" width="8" height="15" fill="rgb(227,28,36)"/><text x="28.00" y="78.50"></text></g><g><title>setup_profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (5 samples, 0.67%)</title><rect x="25" y="84" width="8" height="15" fill="rgb(213,74,23)"/><text x="28.00" y="94.50"></text></g><g><title>profile0 (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (5 samples, 0.67%)</title><rect x="25" y="100" width="8" height="15" fill="rgb(209,38,38)"/><text x="28.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.67%)</title><rect x="25" y="116" width="8" height="15" fill="rgb(208,0,8)"/><text x="28.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (5 samples, 0.67%)</title><rect x="25" y="132" width="8" height="15" fill="rgb(232,164,14)"/><text x="28.00" y="142.50"></text></g><g><title>predict (sklearn/neighbors/_regression.py) (5 samples, 0.67%)</title><rect x="25" y="148" width="8" height="15" fill="rgb(219,210,8)"/><text x="28.00" y="158.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (5 samples, 0.67%)</title><rect x="25" y="164" width="8" height="15" fill="rgb(208,96,41)"/><text x="28.00" y="174.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (5 samples, 0.67%)</title><rect x="25" y="180" width="8" height="15" fill="rgb(212,154,52)"/><text x="28.00" y="190.50"></text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (2 samples, 0.27%)</title><rect x="30" y="196" width="3" height="15" fill="rgb(233,178,38)"/><text x="33.00" y="206.50"></text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (2 samples, 0.27%)</title><rect x="30" y="212" width="3" height="15" fill="rgb(222,170,12)"/><text x="33.00" y="222.50"></text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (2 samples, 0.27%)</title><rect x="30" y="228" width="3" height="15" fill="rgb(209,224,48)"/><text x="33.00" y="238.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (2 samples, 0.27%)</title><rect x="30" y="244" width="3" height="15" fill="rgb(241,99,14)"/><text x="33.00" y="254.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.27%)</title><rect x="30" y="260" width="3" height="15" fill="rgb(225,35,44)"/><text x="33.00" y="270.50"></text></g><g><title>0x7fffe8ce0a01 ([vdso]) (1 samples, 0.13%)</title><rect x="35" y="212" width="1" height="15" fill="rgb(245,95,38)"/><text x="38.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.13%)</title><rect x="36" y="212" width="2" height="15" fill="rgb(241,87,7)"/><text x="39.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="36" y="228" width="2" height="15" fill="rgb(248,104,46)"/><text x="39.00" y="238.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="38" y="340" width="1" height="15" fill="rgb(230,104,34)"/><text x="41.00" y="350.50"></text></g><g><title>onnxruntime::Shape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="340" width="2" height="15" fill="rgb(250,228,43)"/><text x="42.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="356" width="2" height="15" fill="rgb(252,190,21)"/><text x="42.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="372" width="2" height="15" fill="rgb(250,206,18)"/><text x="42.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="388" width="2" height="15" fill="rgb(216,141,48)"/><text x="42.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="404" width="2" height="15" fill="rgb(251,32,24)"/><text x="42.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="420" width="2" height="15" fill="rgb(234,219,24)"/><text x="42.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="436" width="2" height="15" fill="rgb(251,50,51)"/><text x="42.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="452" width="2" height="15" fill="rgb(252,17,24)"/><text x="42.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="468" width="2" height="15" fill="rgb(253,159,35)"/><text x="42.00" y="478.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="484" width="2" height="15" fill="rgb(215,33,49)"/><text x="42.00" y="494.50"></text></g><g><title>onnxruntime::PrimitiveDataTypeBase::AsPrimitiveDataType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.13%)</title><rect x="39" y="500" width="2" height="15" fill="rgb(219,134,25)"/><text x="42.00" y="510.50"></text></g><g><title>0x7f9fbb882aaf (libc-2.29.so) (1 samples, 0.13%)</title><rect x="224" y="372" width="2" height="15" fill="rgb(248,95,51)"/><text x="227.00" y="382.50"></text></g><g><title>0x7f9fbb882f71 (libc-2.29.so) (2 samples, 0.27%)</title><rect x="226" y="372" width="3" height="15" fill="rgb(229,121,42)"/><text x="229.00" y="382.50"></text></g><g><title>logf32x (libm-2.29.so) (1 samples, 0.13%)</title><rect x="229" y="372" width="1" height="15" fill="rgb(206,161,50)"/><text x="232.00" y="382.50"></text></g><g><title>0x7f9fbb883db4 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="230" y="404" width="2" height="15" fill="rgb(223,158,25)"/><text x="233.00" y="414.50"></text></g><g><title>0x7f9fbb8841b6 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="232" y="404" width="2" height="15" fill="rgb(208,0,50)"/><text x="235.00" y="414.50"></text></g><g><title>0x7f9fbb8846ac (libc-2.29.so) (1 samples, 0.13%)</title><rect x="234" y="404" width="1" height="15" fill="rgb(245,121,36)"/><text x="237.00" y="414.50"></text></g><g><title>0x7f9fbb8846db (libc-2.29.so) (1 samples, 0.13%)</title><rect x="235" y="404" width="2" height="15" fill="rgb(233,169,4)"/><text x="238.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.67%)</title><rect x="230" y="372" width="8" height="15" fill="rgb(215,225,15)"/><text x="233.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.67%)</title><rect x="230" y="388" width="8" height="15" fill="rgb(228,50,44)"/><text x="233.00" y="398.50"></text></g><g><title>0x7f9fbb884700 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="237" y="404" width="1" height="15" fill="rgb(215,105,17)"/><text x="240.00" y="414.50"></text></g><g><title>0x7f9fbb881acd (libc-2.29.so) (1 samples, 0.13%)</title><rect x="237" y="420" width="1" height="15" fill="rgb(234,128,9)"/><text x="240.00" y="430.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 17.25%)</title><rect x="41" y="340" width="204" height="15" fill="rgb(252,149,29)"/><text x="44.00" y="350.50">onnxruntime::TopK&lt;11, floa..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 17.25%)</title><rect x="41" y="356" width="204" height="15" fill="rgb(232,165,31)"/><text x="44.00" y="366.50">onnxruntime::TopKImpl (onn..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.53%)</title><rect x="238" y="372" width="7" height="15" fill="rgb(225,158,53)"/><text x="241.00" y="382.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (137 samples, 18.32%)</title><rect x="33" y="68" width="216" height="15" fill="rgb(225,168,1)"/><text x="36.00" y="78.50">profile_ort (bench_KNeighbor..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (137 samples, 18.32%)</title><rect x="33" y="84" width="216" height="15" fill="rgb(238,202,9)"/><text x="36.00" y="94.50">setup_profile (bench_KNeighb..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (137 samples, 18.32%)</title><rect x="33" y="100" width="216" height="15" fill="rgb(235,127,7)"/><text x="36.00" y="110.50">profile (bench_KNeighborsReg..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (136 samples, 18.18%)</title><rect x="35" y="116" width="214" height="15" fill="rgb(216,38,53)"/><text x="38.00" y="126.50">time_predict (mlprodict/asv_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (136 samples, 18.18%)</title><rect x="35" y="132" width="214" height="15" fill="rgb(218,52,33)"/><text x="38.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (136 samples, 18.18%)</title><rect x="35" y="148" width="214" height="15" fill="rgb(244,78,2)"/><text x="38.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (136 samples, 18.18%)</title><rect x="35" y="164" width="214" height="15" fill="rgb(245,106,7)"/><text x="38.00" y="174.50">_run_whole_runtime (mlprodic..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (136 samples, 18.18%)</title><rect x="35" y="180" width="214" height="15" fill="rgb(228,158,17)"/><text x="38.00" y="190.50">run (mlprodict/onnxrt/ops_wh..</text></g><g><title>run (onnxruntime/capi/session.py) (136 samples, 18.18%)</title><rect x="35" y="196" width="214" height="15" fill="rgb(212,106,39)"/><text x="38.00" y="206.50">run (onnxruntime/capi/sessio..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="212" width="211" height="15" fill="rgb(245,30,17)"/><text x="41.00" y="222.50">pybind11::cpp_function::dis..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="228" width="211" height="15" fill="rgb(234,37,45)"/><text x="41.00" y="238.50">void pybind11::cpp_function..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="244" width="211" height="15" fill="rgb(251,23,2)"/><text x="41.00" y="254.50">onnxruntime::python::addObj..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="260" width="211" height="15" fill="rgb(245,179,45)"/><text x="41.00" y="270.50">onnxruntime::InferenceSessi..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="276" width="211" height="15" fill="rgb(233,99,54)"/><text x="41.00" y="286.50">onnxruntime::InferenceSessi..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="292" width="211" height="15" fill="rgb(207,107,21)"/><text x="41.00" y="302.50">onnxruntime::utils::Execute..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="308" width="211" height="15" fill="rgb(223,111,25)"/><text x="41.00" y="318.50">onnxruntime::utils::Execute..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (134 samples, 17.91%)</title><rect x="38" y="324" width="211" height="15" fill="rgb(234,38,40)"/><text x="41.00" y="334.50">onnxruntime::SequentialExec..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="245" y="340" width="4" height="15" fill="rgb(241,84,38)"/><text x="248.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::EuclideanWithEigen&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="245" y="356" width="4" height="15" fill="rgb(235,12,36)"/><text x="248.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="245" y="372" width="4" height="15" fill="rgb(217,15,50)"/><text x="248.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.40%)</title><rect x="245" y="388" width="4" height="15" fill="rgb(217,28,25)"/><text x="248.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (3 samples, 0.40%)</title><rect x="245" y="404" width="4" height="15" fill="rgb(251,71,31)"/><text x="248.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (3 samples, 0.40%)</title><rect x="245" y="420" width="4" height="15" fill="rgb(242,46,50)"/><text x="248.00" y="430.50"></text></g><g><title>PyArray_ToList (convert.c) (3 samples, 0.40%)</title><rect x="259" y="228" width="4" height="15" fill="rgb(212,85,21)"/><text x="262.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (3 samples, 0.40%)</title><rect x="259" y="244" width="4" height="15" fill="rgb(230,3,43)"/><text x="262.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (3 samples, 0.40%)</title><rect x="259" y="260" width="4" height="15" fill="rgb(213,51,11)"/><text x="262.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="265" y="244" width="2" height="15" fill="rgb(209,2,49)"/><text x="268.00" y="254.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (7 samples, 0.94%)</title><rect x="267" y="276" width="11" height="15" fill="rgb(221,177,54)"/><text x="270.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (7 samples, 0.94%)</title><rect x="267" y="292" width="11" height="15" fill="rgb(237,143,0)"/><text x="270.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (6 samples, 0.80%)</title><rect x="268" y="308" width="10" height="15" fill="rgb(232,78,4)"/><text x="271.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (3 samples, 0.40%)</title><rect x="273" y="324" width="5" height="15" fill="rgb(217,24,37)"/><text x="276.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="276" y="340" width="2" height="15" fill="rgb(211,92,45)"/><text x="279.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.13%)</title><rect x="287" y="340" width="2" height="15" fill="rgb(247,24,30)"/><text x="290.00" y="350.50"></text></g><g><title>ensure_dtype_nbo (convert_datatype.c) (1 samples, 0.13%)</title><rect x="287" y="356" width="2" height="15" fill="rgb(246,91,22)"/><text x="290.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (9 samples, 1.20%)</title><rect x="278" y="292" width="14" height="15" fill="rgb(227,223,52)"/><text x="281.00" y="302.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (9 samples, 1.20%)</title><rect x="278" y="308" width="14" height="15" fill="rgb(231,225,29)"/><text x="281.00" y="318.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (9 samples, 1.20%)</title><rect x="278" y="324" width="14" height="15" fill="rgb(229,46,11)"/><text x="281.00" y="334.50"></text></g><g><title>_array_find_python_scalar_type (common.c) (2 samples, 0.27%)</title><rect x="289" y="340" width="3" height="15" fill="rgb(217,160,33)"/><text x="292.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="290" y="356" width="2" height="15" fill="rgb(234,214,16)"/><text x="293.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (27 samples, 3.61%)</title><rect x="257" y="212" width="43" height="15" fill="rgb(238,27,20)"/><text x="260.00" y="222.50">_run..</text></g><g><title>array_subscript (mapping.c) (23 samples, 3.07%)</title><rect x="263" y="228" width="37" height="15" fill="rgb(250,100,29)"/><text x="266.00" y="238.50">arr..</text></g><g><title>prepare_index (mapping.c) (21 samples, 2.81%)</title><rect x="267" y="244" width="33" height="15" fill="rgb(251,118,30)"/><text x="270.00" y="254.50">pr..</text></g><g><title>PyArray_FromAny (ctors.c) (21 samples, 2.81%)</title><rect x="267" y="260" width="33" height="15" fill="rgb(215,196,5)"/><text x="270.00" y="270.50">Py..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (14 samples, 1.87%)</title><rect x="278" y="276" width="22" height="15" fill="rgb(233,63,34)"/><text x="281.00" y="286.50">P..</text></g><g><title>discover_dimensions (ctors.c) (5 samples, 0.67%)</title><rect x="292" y="292" width="8" height="15" fill="rgb(210,175,25)"/><text x="295.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (3 samples, 0.40%)</title><rect x="295" y="308" width="5" height="15" fill="rgb(218,45,46)"/><text x="298.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="301" y="260" width="2" height="15" fill="rgb(230,177,7)"/><text x="304.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="301" y="276" width="2" height="15" fill="rgb(249,131,40)"/><text x="304.00" y="286.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.13%)</title><rect x="301" y="292" width="2" height="15" fill="rgb(223,70,54)"/><text x="304.00" y="302.50"></text></g><g><title>array_astype (methods.c) (2 samples, 0.27%)</title><rect x="301" y="244" width="4" height="15" fill="rgb(238,72,46)"/><text x="304.00" y="254.50"></text></g><g><title>PyArray_NewLikeArray (ctors.c) (1 samples, 0.13%)</title><rect x="303" y="260" width="2" height="15" fill="rgb(236,137,28)"/><text x="306.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.13%)</title><rect x="305" y="244" width="1" height="15" fill="rgb(224,44,17)"/><text x="308.00" y="254.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.13%)</title><rect x="305" y="260" width="1" height="15" fill="rgb(227,71,38)"/><text x="308.00" y="270.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="305" y="276" width="1" height="15" fill="rgb(217,26,31)"/><text x="308.00" y="286.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.13%)</title><rect x="305" y="292" width="1" height="15" fill="rgb(245,172,40)"/><text x="308.00" y="302.50"></text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (54 samples, 7.22%)</title><rect x="308" y="260" width="85" height="15" fill="rgb(216,100,38)"/><text x="311.00" y="270.50">argpartiti..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (53 samples, 7.09%)</title><rect x="309" y="276" width="84" height="15" fill="rgb(218,66,53)"/><text x="312.00" y="286.50">array_imp..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (53 samples, 7.09%)</title><rect x="309" y="292" width="84" height="15" fill="rgb(253,56,7)"/><text x="312.00" y="302.50">argpartit..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (53 samples, 7.09%)</title><rect x="309" y="308" width="84" height="15" fill="rgb(253,156,7)"/><text x="312.00" y="318.50">_wrapfunc..</text></g><g><title>array_argpartition (methods.c) (53 samples, 7.09%)</title><rect x="309" y="324" width="84" height="15" fill="rgb(225,48,11)"/><text x="312.00" y="334.50">array_arg..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (53 samples, 7.09%)</title><rect x="309" y="340" width="84" height="15" fill="rgb(233,218,15)"/><text x="312.00" y="350.50">PyArray_A..</text></g><g><title>_new_argsortlike (item_selection.c) (53 samples, 7.09%)</title><rect x="309" y="356" width="84" height="15" fill="rgb(242,176,10)"/><text x="312.00" y="366.50">_new_args..</text></g><g><title>aintroselect_float (selection.c.src) (49 samples, 6.55%)</title><rect x="316" y="372" width="77" height="15" fill="rgb(250,72,14)"/><text x="319.00" y="382.50">aintrose..</text></g><g><title>adumb_select_float (selection.c.src) (49 samples, 6.55%)</title><rect x="316" y="388" width="77" height="15" fill="rgb(234,163,9)"/><text x="319.00" y="398.50">adumb_se..</text></g><g><title>FLOAT_LT (npysort_common.h) (33 samples, 4.41%)</title><rect x="341" y="404" width="52" height="15" fill="rgb(223,156,21)"/><text x="344.00" y="414.50">FLOAT..</text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (6 samples, 0.80%)</title><rect x="393" y="260" width="9" height="15" fill="rgb(240,36,39)"/><text x="396.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.80%)</title><rect x="393" y="276" width="9" height="15" fill="rgb(237,141,16)"/><text x="396.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (6 samples, 0.80%)</title><rect x="393" y="292" width="9" height="15" fill="rgb(208,101,1)"/><text x="396.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 0.80%)</title><rect x="393" y="308" width="9" height="15" fill="rgb(233,119,37)"/><text x="396.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (6 samples, 0.80%)</title><rect x="393" y="324" width="9" height="15" fill="rgb(206,28,19)"/><text x="396.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (6 samples, 0.80%)</title><rect x="393" y="340" width="9" height="15" fill="rgb(236,38,7)"/><text x="396.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (6 samples, 0.80%)</title><rect x="393" y="356" width="9" height="15" fill="rgb(252,125,34)"/><text x="396.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (1 samples, 0.13%)</title><rect x="401" y="372" width="1" height="15" fill="rgb(212,1,21)"/><text x="404.00" y="382.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (2 samples, 0.27%)</title><rect x="402" y="276" width="3" height="15" fill="rgb(205,176,26)"/><text x="405.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (2 samples, 0.27%)</title><rect x="402" y="292" width="3" height="15" fill="rgb(250,155,46)"/><text x="405.00" y="302.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (1 samples, 0.13%)</title><rect x="405" y="292" width="2" height="15" fill="rgb(211,154,42)"/><text x="408.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (1 samples, 0.13%)</title><rect x="405" y="308" width="2" height="15" fill="rgb(246,106,22)"/><text x="408.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="405" y="324" width="2" height="15" fill="rgb(230,36,2)"/><text x="408.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="405" y="340" width="2" height="15" fill="rgb(222,228,6)"/><text x="408.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="405" y="356" width="2" height="15" fill="rgb(242,63,48)"/><text x="408.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.13%)</title><rect x="407" y="324" width="2" height="15" fill="rgb(228,82,15)"/><text x="410.00" y="334.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (3 samples, 0.40%)</title><rect x="405" y="276" width="5" height="15" fill="rgb(224,200,23)"/><text x="408.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="407" y="292" width="3" height="15" fill="rgb(207,221,32)"/><text x="410.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="407" y="308" width="3" height="15" fill="rgb(218,28,45)"/><text x="410.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.13%)</title><rect x="409" y="324" width="1" height="15" fill="rgb(211,95,15)"/><text x="412.00" y="334.50"></text></g><g><title>arraymapiter_dealloc (mapping.c) (1 samples, 0.13%)</title><rect x="410" y="276" width="2" height="15" fill="rgb(246,151,33)"/><text x="413.00" y="286.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.13%)</title><rect x="410" y="292" width="2" height="15" fill="rgb(215,32,41)"/><text x="413.00" y="302.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (6 samples, 0.80%)</title><rect x="412" y="276" width="9" height="15" fill="rgb(231,17,9)"/><text x="415.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (78 samples, 10.43%)</title><rect x="300" y="212" width="123" height="15" fill="rgb(250,112,36)"/><text x="303.00" y="222.50">_run (mlprodict..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (78 samples, 10.43%)</title><rect x="300" y="228" width="123" height="15" fill="rgb(210,125,44)"/><text x="303.00" y="238.50">_common_run (ml..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (74 samples, 9.89%)</title><rect x="306" y="244" width="117" height="15" fill="rgb(232,159,42)"/><text x="309.00" y="254.50">topk_sorted_im..</text></g><g><title>array_subscript (mapping.c) (13 samples, 1.74%)</title><rect x="402" y="260" width="21" height="15" fill="rgb(233,36,38)"/><text x="405.00" y="270.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.13%)</title><rect x="421" y="276" width="2" height="15" fill="rgb(218,101,48)"/><text x="424.00" y="286.50"></text></g><g><title>array_astype (methods.c) (6 samples, 0.80%)</title><rect x="423" y="244" width="9" height="15" fill="rgb(222,160,34)"/><text x="426.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (6 samples, 0.80%)</title><rect x="423" y="260" width="9" height="15" fill="rgb(224,65,27)"/><text x="426.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (6 samples, 0.80%)</title><rect x="423" y="276" width="9" height="15" fill="rgb(205,204,48)"/><text x="426.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (6 samples, 0.80%)</title><rect x="423" y="292" width="9" height="15" fill="rgb(207,18,4)"/><text x="426.00" y="302.50"></text></g><g><title>0x7f9f98aa8739 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.80%)</title><rect x="432" y="260" width="10" height="15" fill="rgb(209,68,26)"/><text x="435.00" y="270.50"></text></g><g><title>0x7f9f98aa8750 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="442" y="260" width="3" height="15" fill="rgb(242,16,18)"/><text x="445.00" y="270.50"></text></g><g><title>0x7f9f98aa875b (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="445" y="260" width="1" height="15" fill="rgb(240,216,29)"/><text x="448.00" y="270.50"></text></g><g><title>0x7f9f98aa8771 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="446" y="260" width="8" height="15" fill="rgb(219,189,2)"/><text x="449.00" y="270.50"></text></g><g><title>0x7f9f98aa88c0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="454" y="260" width="2" height="15" fill="rgb(230,128,45)"/><text x="457.00" y="270.50"></text></g><g><title>0x7f9f98aa88c5 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="456" y="260" width="8" height="15" fill="rgb(243,187,31)"/><text x="459.00" y="270.50"></text></g><g><title>0x7f9f98aa88c9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="464" y="260" width="1" height="15" fill="rgb(205,161,12)"/><text x="467.00" y="270.50"></text></g><g><title>0x7f9f98aa88cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="465" y="260" width="2" height="15" fill="rgb(239,3,9)"/><text x="468.00" y="270.50"></text></g><g><title>0x7f9f98aa88d3 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="467" y="260" width="2" height="15" fill="rgb(251,124,24)"/><text x="470.00" y="270.50"></text></g><g><title>0x7f9f98aa88d9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.20%)</title><rect x="469" y="260" width="14" height="15" fill="rgb(252,65,43)"/><text x="472.00" y="270.50"></text></g><g><title>0x7f9f98aa88dc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="483" y="260" width="6" height="15" fill="rgb(250,107,31)"/><text x="486.00" y="270.50"></text></g><g><title>0x7f9f98aa88e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="489" y="260" width="5" height="15" fill="rgb(244,137,48)"/><text x="492.00" y="270.50"></text></g><g><title>0x7f9f98aa88e6 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="494" y="260" width="6" height="15" fill="rgb(229,175,29)"/><text x="497.00" y="270.50"></text></g><g><title>0x7f9f98aa88ec (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="500" y="260" width="8" height="15" fill="rgb(248,132,0)"/><text x="503.00" y="270.50"></text></g><g><title>0x7f9f98aa88f0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="508" y="260" width="5" height="15" fill="rgb(239,228,23)"/><text x="511.00" y="270.50"></text></g><g><title>0x7f9f98aa88f4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="513" y="260" width="4" height="15" fill="rgb(229,130,43)"/><text x="516.00" y="270.50"></text></g><g><title>0x7f9f98aa88fa (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="517" y="260" width="2" height="15" fill="rgb(253,181,41)"/><text x="520.00" y="270.50"></text></g><g><title>0x7f9f98aa88fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="519" y="260" width="3" height="15" fill="rgb(205,159,39)"/><text x="522.00" y="270.50"></text></g><g><title>0x7f9f98aa8904 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="522" y="260" width="3" height="15" fill="rgb(227,206,40)"/><text x="525.00" y="270.50"></text></g><g><title>0x7f9f98aa890e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="525" y="260" width="2" height="15" fill="rgb(241,66,3)"/><text x="528.00" y="270.50"></text></g><g><title>0x7f9f98aa8912 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="527" y="260" width="5" height="15" fill="rgb(218,225,11)"/><text x="530.00" y="270.50"></text></g><g><title>0x7f9f98aa8918 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="532" y="260" width="3" height="15" fill="rgb(209,210,44)"/><text x="535.00" y="270.50"></text></g><g><title>0x7f9f98aa8920 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="535" y="260" width="1" height="15" fill="rgb(223,45,51)"/><text x="538.00" y="270.50"></text></g><g><title>0x7f9f98aa8926 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="536" y="260" width="2" height="15" fill="rgb(223,49,32)"/><text x="539.00" y="270.50"></text></g><g><title>0x7f9f98aa892c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="538" y="260" width="8" height="15" fill="rgb(207,185,32)"/><text x="541.00" y="270.50"></text></g><g><title>0x7f9f98aa8934 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.07%)</title><rect x="546" y="260" width="12" height="15" fill="rgb(208,215,11)"/><text x="549.00" y="270.50"></text></g><g><title>0x7f9f98aa893a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="558" y="260" width="4" height="15" fill="rgb(235,45,38)"/><text x="561.00" y="270.50"></text></g><g><title>0x7f9f98aa894a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (9 samples, 1.20%)</title><rect x="562" y="260" width="14" height="15" fill="rgb(227,116,18)"/><text x="565.00" y="270.50"></text></g><g><title>0x7f9f98aa8952 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.80%)</title><rect x="576" y="260" width="9" height="15" fill="rgb(239,198,9)"/><text x="579.00" y="270.50"></text></g><g><title>0x7f9f98aa8958 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="585" y="260" width="5" height="15" fill="rgb(252,213,21)"/><text x="588.00" y="270.50"></text></g><g><title>0x7f9f98aa895c (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="590" y="260" width="2" height="15" fill="rgb(247,4,45)"/><text x="593.00" y="270.50"></text></g><g><title>0x7f9f98aa8968 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.47%)</title><rect x="592" y="260" width="17" height="15" fill="rgb(219,82,33)"/><text x="595.00" y="270.50"></text></g><g><title>0x7f9f98aa8970 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.07%)</title><rect x="609" y="260" width="13" height="15" fill="rgb(223,19,19)"/><text x="612.00" y="270.50"></text></g><g><title>0x7f9f98aa897a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="622" y="260" width="3" height="15" fill="rgb(226,150,44)"/><text x="625.00" y="270.50"></text></g><g><title>0x7f9f98aa8980 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="625" y="260" width="8" height="15" fill="rgb(228,50,26)"/><text x="628.00" y="270.50"></text></g><g><title>0x7f9f98aa8986 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="633" y="260" width="6" height="15" fill="rgb(218,20,31)"/><text x="636.00" y="270.50"></text></g><g><title>0x7f9f98aa898a (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="639" y="260" width="5" height="15" fill="rgb(252,56,43)"/><text x="642.00" y="270.50"></text></g><g><title>0x7f9f98aa898e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.01%)</title><rect x="644" y="260" width="23" height="15" fill="rgb(253,169,47)"/><text x="647.00" y="270.50">0..</text></g><g><title>0x7f9f98aa899e (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.40%)</title><rect x="667" y="260" width="5" height="15" fill="rgb(235,216,23)"/><text x="670.00" y="270.50"></text></g><g><title>0x7f9f98aa89a4 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="672" y="260" width="8" height="15" fill="rgb(222,164,42)"/><text x="675.00" y="270.50"></text></g><g><title>0x7f9f98aa89ac (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (17 samples, 2.27%)</title><rect x="680" y="260" width="27" height="15" fill="rgb(219,69,4)"/><text x="683.00" y="270.50">0..</text></g><g><title>0x7f9f98aa89b2 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.27%)</title><rect x="707" y="260" width="3" height="15" fill="rgb(218,203,4)"/><text x="710.00" y="270.50"></text></g><g><title>0x7f9f98aa89be (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (15 samples, 2.01%)</title><rect x="710" y="260" width="24" height="15" fill="rgb(208,70,53)"/><text x="713.00" y="270.50">0..</text></g><g><title>0x7f9f98aa89cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.53%)</title><rect x="734" y="260" width="6" height="15" fill="rgb(249,165,54)"/><text x="737.00" y="270.50"></text></g><g><title>0x7f9f98aa89dc (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.07%)</title><rect x="740" y="260" width="13" height="15" fill="rgb(252,142,11)"/><text x="743.00" y="270.50"></text></g><g><title>0x7f9f98aa89e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.94%)</title><rect x="753" y="260" width="11" height="15" fill="rgb(218,38,2)"/><text x="756.00" y="270.50"></text></g><g><title>0x7f9f98aa89f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (65 samples, 8.69%)</title><rect x="764" y="260" width="102" height="15" fill="rgb(229,189,25)"/><text x="767.00" y="270.50">0x7f9f98aa89..</text></g><g><title>0x7f9f98aa89fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (22 samples, 2.94%)</title><rect x="866" y="260" width="35" height="15" fill="rgb(227,42,21)"/><text x="869.00" y="270.50">0x..</text></g><g><title>0x7f9f98aa8a03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="901" y="260" width="1" height="15" fill="rgb(217,212,47)"/><text x="904.00" y="270.50"></text></g><g><title>0x7f9f98aa8a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.67%)</title><rect x="902" y="260" width="8" height="15" fill="rgb(214,33,10)"/><text x="905.00" y="270.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.13%)</title><rect x="912" y="324" width="1" height="15" fill="rgb(228,36,6)"/><text x="915.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.13%)</title><rect x="912" y="340" width="1" height="15" fill="rgb(253,109,14)"/><text x="915.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.13%)</title><rect x="912" y="356" width="1" height="15" fill="rgb(229,222,14)"/><text x="915.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.13%)</title><rect x="912" y="372" width="1" height="15" fill="rgb(244,30,16)"/><text x="915.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.13%)</title><rect x="912" y="388" width="1" height="15" fill="rgb(224,120,5)"/><text x="915.00" y="398.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="912" y="404" width="1" height="15" fill="rgb(244,83,7)"/><text x="915.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (312 samples, 41.71%)</title><rect x="423" y="228" width="492" height="15" fill="rgb(235,48,19)"/><text x="426.00" y="238.50">_run (mlprodict/onnxrt/ops_cpu/op_cdist.py)</text></g><g><title>cdist (scipy/spatial/distance.py) (306 samples, 40.91%)</title><rect x="432" y="244" width="483" height="15" fill="rgb(236,79,0)"/><text x="435.00" y="254.50">cdist (scipy/spatial/distance.py)</text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py) (3 samples, 0.40%)</title><rect x="910" y="260" width="5" height="15" fill="rgb(231,79,9)"/><text x="913.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py) (3 samples, 0.40%)</title><rect x="910" y="276" width="5" height="15" fill="rgb(227,162,52)"/><text x="913.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py) (3 samples, 0.40%)</title><rect x="910" y="292" width="5" height="15" fill="rgb(208,4,54)"/><text x="913.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (3 samples, 0.40%)</title><rect x="910" y="308" width="5" height="15" fill="rgb(224,77,12)"/><text x="913.00" y="318.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.13%)</title><rect x="913" y="324" width="2" height="15" fill="rgb(219,17,43)"/><text x="916.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.13%)</title><rect x="913" y="340" width="2" height="15" fill="rgb(231,225,3)"/><text x="916.00" y="350.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.13%)</title><rect x="913" y="356" width="2" height="15" fill="rgb(247,48,37)"/><text x="916.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.13%)</title><rect x="915" y="324" width="2" height="15" fill="rgb(232,153,45)"/><text x="918.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.13%)</title><rect x="915" y="340" width="2" height="15" fill="rgb(216,110,27)"/><text x="918.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.13%)</title><rect x="915" y="356" width="2" height="15" fill="rgb(236,100,18)"/><text x="918.00" y="366.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (422 samples, 56.42%)</title><rect x="252" y="164" width="666" height="15" fill="rgb(238,202,38)"/><text x="255.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (422 samples, 56.42%)</title><rect x="252" y="180" width="666" height="15" fill="rgb(241,97,5)"/><text x="255.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (420 samples, 56.15%)</title><rect x="256" y="196" width="662" height="15" fill="rgb(225,7,52)"/><text x="259.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (314 samples, 41.98%)</title><rect x="423" y="212" width="495" height="15" fill="rgb(254,136,0)"/><text x="426.00" y="222.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (2 samples, 0.27%)</title><rect x="915" y="228" width="3" height="15" fill="rgb(205,72,6)"/><text x="918.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;) (2 samples, 0.27%)</title><rect x="915" y="244" width="3" height="15" fill="rgb(213,221,11)"/><text x="918.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (2 samples, 0.27%)</title><rect x="915" y="260" width="3" height="15" fill="rgb(228,162,47)"/><text x="918.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (2 samples, 0.27%)</title><rect x="915" y="276" width="3" height="15" fill="rgb(226,51,25)"/><text x="918.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py) (2 samples, 0.27%)</title><rect x="915" y="292" width="3" height="15" fill="rgb(222,226,36)"/><text x="918.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.27%)</title><rect x="915" y="308" width="3" height="15" fill="rgb(206,30,10)"/><text x="918.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.13%)</title><rect x="917" y="324" width="1" height="15" fill="rgb(242,42,32)"/><text x="920.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.13%)</title><rect x="917" y="340" width="1" height="15" fill="rgb(235,84,10)"/><text x="920.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (1 samples, 0.13%)</title><rect x="917" y="356" width="1" height="15" fill="rgb(224,36,42)"/><text x="920.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="917" y="372" width="1" height="15" fill="rgb(207,200,16)"/><text x="920.00" y="382.50"></text></g><g><title>FLOAT_add (loops.c.src) (1 samples, 0.13%)</title><rect x="917" y="388" width="1" height="15" fill="rgb(218,147,11)"/><text x="920.00" y="398.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (425 samples, 56.82%)</title><rect x="249" y="100" width="671" height="15" fill="rgb(251,192,5)"/><text x="252.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_f..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (425 samples, 56.82%)</title><rect x="249" y="116" width="671" height="15" fill="rgb(243,95,11)"/><text x="252.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (425 samples, 56.82%)</title><rect x="249" y="132" width="671" height="15" fill="rgb(217,74,24)"/><text x="252.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (424 samples, 56.68%)</title><rect x="251" y="148" width="669" height="15" fill="rgb(206,91,7)"/><text x="254.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="918" y="164" width="2" height="15" fill="rgb(219,14,45)"/><text x="921.00" y="174.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="918" y="180" width="2" height="15" fill="rgb(229,178,20)"/><text x="921.00" y="190.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="918" y="196" width="2" height="15" fill="rgb(238,58,36)"/><text x="921.00" y="206.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (426 samples, 56.95%)</title><rect x="249" y="68" width="672" height="15" fill="rgb(238,3,33)"/><text x="252.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (426 samples, 56.95%)</title><rect x="249" y="84" width="672" height="15" fill="rgb(213,36,16)"/><text x="252.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_5..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="920" y="100" width="1" height="15" fill="rgb(247,122,32)"/><text x="923.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="920" y="116" width="1" height="15" fill="rgb(238,212,47)"/><text x="923.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="920" y="132" width="1" height="15" fill="rgb(205,171,27)"/><text x="923.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="920" y="148" width="1" height="15" fill="rgb(222,2,49)"/><text x="923.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.13%)</title><rect x="920" y="164" width="1" height="15" fill="rgb(218,157,0)"/><text x="923.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.13%)</title><rect x="920" y="180" width="1" height="15" fill="rgb(211,115,45)"/><text x="923.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.13%)</title><rect x="920" y="196" width="1" height="15" fill="rgb(215,20,16)"/><text x="923.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="212" width="1" height="15" fill="rgb(218,50,50)"/><text x="923.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="228" width="1" height="15" fill="rgb(208,26,45)"/><text x="923.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="244" width="1" height="15" fill="rgb(206,28,25)"/><text x="923.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="920" y="260" width="1" height="15" fill="rgb(252,115,43)"/><text x="923.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="276" width="1" height="15" fill="rgb(208,90,14)"/><text x="923.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.13%)</title><rect x="920" y="292" width="1" height="15" fill="rgb(251,184,48)"/><text x="923.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="308" width="1" height="15" fill="rgb(226,140,0)"/><text x="923.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="324" width="1" height="15" fill="rgb(213,50,36)"/><text x="923.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="340" width="1" height="15" fill="rgb(242,141,29)"/><text x="923.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.13%)</title><rect x="920" y="356" width="1" height="15" fill="rgb(220,84,45)"/><text x="923.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="920" y="372" width="1" height="15" fill="rgb(230,136,49)"/><text x="923.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.13%)</title><rect x="920" y="388" width="1" height="15" fill="rgb(205,149,17)"/><text x="923.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.13%)</title><rect x="920" y="404" width="1" height="15" fill="rgb(206,120,13)"/><text x="923.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.13%)</title><rect x="920" y="420" width="1" height="15" fill="rgb(228,56,14)"/><text x="923.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="920" y="436" width="1" height="15" fill="rgb(250,188,48)"/><text x="923.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.13%)</title><rect x="920" y="452" width="1" height="15" fill="rgb(254,178,27)"/><text x="923.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.13%)</title><rect x="920" y="468" width="1" height="15" fill="rgb(232,179,44)"/><text x="923.00" y="478.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.13%)</title><rect x="920" y="484" width="1" height="15" fill="rgb(248,6,38)"/><text x="923.00" y="494.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.13%)</title><rect x="920" y="500" width="1" height="15" fill="rgb(220,89,43)"/><text x="923.00" y="510.50"></text></g><g><title>0x7f9fa9bd06d5 (?) (1 samples, 0.13%)</title><rect x="920" y="516" width="1" height="15" fill="rgb(223,123,46)"/><text x="923.00" y="526.50"></text></g><g><title>0x7f9fa9c76658 (?) (1 samples, 0.13%)</title><rect x="920" y="532" width="1" height="15" fill="rgb(224,63,49)"/><text x="923.00" y="542.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.13%)</title><rect x="923" y="164" width="1" height="15" fill="rgb(249,105,22)"/><text x="926.00" y="174.50"></text></g><g><title>0x7f9fbaaa4140 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.13%)</title><rect x="923" y="180" width="1" height="15" fill="rgb(236,75,48)"/><text x="926.00" y="190.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.13%)</title><rect x="924" y="164" width="2" height="15" fill="rgb(217,81,48)"/><text x="927.00" y="174.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.13%)</title><rect x="924" y="180" width="2" height="15" fill="rgb(236,200,34)"/><text x="927.00" y="190.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="924" y="196" width="2" height="15" fill="rgb(216,95,52)"/><text x="927.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="924" y="212" width="2" height="15" fill="rgb(238,92,20)"/><text x="927.00" y="222.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="924" y="228" width="2" height="15" fill="rgb(222,141,50)"/><text x="927.00" y="238.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="924" y="244" width="2" height="15" fill="rgb(239,115,4)"/><text x="927.00" y="254.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="924" y="260" width="2" height="15" fill="rgb(213,74,7)"/><text x="927.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="924" y="276" width="2" height="15" fill="rgb(206,143,31)"/><text x="927.00" y="286.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.13%)</title><rect x="926" y="180" width="2" height="15" fill="rgb(247,39,52)"/><text x="929.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.13%)</title><rect x="928" y="180" width="1" height="15" fill="rgb(246,172,7)"/><text x="931.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.40%)</title><rect x="926" y="164" width="5" height="15" fill="rgb(240,44,31)"/><text x="929.00" y="174.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.13%)</title><rect x="929" y="180" width="2" height="15" fill="rgb(205,41,19)"/><text x="932.00" y="190.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.13%)</title><rect x="929" y="196" width="2" height="15" fill="rgb(223,109,7)"/><text x="932.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (2 samples, 0.27%)</title><rect x="936" y="196" width="3" height="15" fill="rgb(246,56,7)"/><text x="939.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.40%)</title><rect x="936" y="180" width="4" height="15" fill="rgb(252,36,39)"/><text x="939.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.13%)</title><rect x="939" y="196" width="1" height="15" fill="rgb(210,194,8)"/><text x="942.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (1 samples, 0.13%)</title><rect x="939" y="212" width="1" height="15" fill="rgb(237,148,52)"/><text x="942.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py) (1 samples, 0.13%)</title><rect x="940" y="196" width="2" height="15" fill="rgb(239,64,31)"/><text x="943.00" y="206.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (3 samples, 0.40%)</title><rect x="940" y="180" width="5" height="15" fill="rgb(224,120,7)"/><text x="943.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.27%)</title><rect x="942" y="196" width="3" height="15" fill="rgb(244,119,21)"/><text x="945.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.13%)</title><rect x="943" y="212" width="2" height="15" fill="rgb(217,143,7)"/><text x="946.00" y="222.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (1 samples, 0.13%)</title><rect x="945" y="196" width="2" height="15" fill="rgb(238,86,33)"/><text x="948.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (1 samples, 0.13%)</title><rect x="945" y="212" width="2" height="15" fill="rgb(240,99,16)"/><text x="948.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.13%)</title><rect x="945" y="228" width="2" height="15" fill="rgb(246,98,40)"/><text x="948.00" y="238.50"></text></g><g><title>0x7f9fbb8829a8 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="951" y="324" width="2" height="15" fill="rgb(247,211,17)"/><text x="954.00" y="334.50"></text></g><g><title>0x7f9fbb882f71 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="953" y="324" width="1" height="15" fill="rgb(233,61,37)"/><text x="956.00" y="334.50"></text></g><g><title>adumb_select_double (selection.c.src) (55 samples, 7.35%)</title><rect x="956" y="340" width="87" height="15" fill="rgb(213,6,35)"/><text x="959.00" y="350.50">adumb_sele..</text></g><g><title>DOUBLE_LT (npysort_common.h) (37 samples, 4.95%)</title><rect x="984" y="356" width="59" height="15" fill="rgb(253,81,18)"/><text x="987.00" y="366.50">DOUBLE..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (62 samples, 8.29%)</title><rect x="947" y="212" width="97" height="15" fill="rgb(212,93,47)"/><text x="950.00" y="222.50">argpartitio..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (62 samples, 8.29%)</title><rect x="947" y="228" width="97" height="15" fill="rgb(253,127,36)"/><text x="950.00" y="238.50">array_imple..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (62 samples, 8.29%)</title><rect x="947" y="244" width="97" height="15" fill="rgb(235,100,38)"/><text x="950.00" y="254.50">argpartitio..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (62 samples, 8.29%)</title><rect x="947" y="260" width="97" height="15" fill="rgb(251,202,19)"/><text x="950.00" y="270.50">_wrapfunc (..</text></g><g><title>array_argpartition (methods.c) (62 samples, 8.29%)</title><rect x="947" y="276" width="97" height="15" fill="rgb(247,49,20)"/><text x="950.00" y="286.50">array_argpa..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (62 samples, 8.29%)</title><rect x="947" y="292" width="97" height="15" fill="rgb(239,9,2)"/><text x="950.00" y="302.50">PyArray_Arg..</text></g><g><title>_new_argsortlike (item_selection.c) (62 samples, 8.29%)</title><rect x="947" y="308" width="97" height="15" fill="rgb(212,85,13)"/><text x="950.00" y="318.50">_new_argsor..</text></g><g><title>aintroselect_double (selection.c.src) (57 samples, 7.62%)</title><rect x="954" y="324" width="90" height="15" fill="rgb(239,76,29)"/><text x="957.00" y="334.50">aintrosele..</text></g><g><title>store_pivot (selection.c.src) (1 samples, 0.13%)</title><rect x="1043" y="340" width="1" height="15" fill="rgb(207,32,16)"/><text x="1046.00" y="350.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 0.13%)</title><rect x="1044" y="212" width="2" height="15" fill="rgb(215,90,3)"/><text x="1047.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.13%)</title><rect x="1044" y="228" width="2" height="15" fill="rgb(251,143,41)"/><text x="1047.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 0.13%)</title><rect x="1044" y="244" width="2" height="15" fill="rgb(237,212,54)"/><text x="1047.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.13%)</title><rect x="1044" y="260" width="2" height="15" fill="rgb(244,69,24)"/><text x="1047.00" y="270.50"></text></g><g><title>array_argsort (methods.c) (1 samples, 0.13%)</title><rect x="1044" y="276" width="2" height="15" fill="rgb(215,64,54)"/><text x="1047.00" y="286.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (1 samples, 0.13%)</title><rect x="1044" y="292" width="2" height="15" fill="rgb(210,25,4)"/><text x="1047.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (1 samples, 0.13%)</title><rect x="1044" y="308" width="2" height="15" fill="rgb(227,128,14)"/><text x="1047.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1046" y="212" width="2" height="15" fill="rgb(209,166,16)"/><text x="1049.00" y="222.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.13%)</title><rect x="1046" y="228" width="2" height="15" fill="rgb(229,5,29)"/><text x="1049.00" y="238.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (4 samples, 0.53%)</title><rect x="1048" y="228" width="6" height="15" fill="rgb(216,8,2)"/><text x="1051.00" y="238.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.13%)</title><rect x="1052" y="244" width="2" height="15" fill="rgb(228,15,8)"/><text x="1055.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (2 samples, 0.27%)</title><rect x="1054" y="228" width="3" height="15" fill="rgb(230,213,30)"/><text x="1057.00" y="238.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (2 samples, 0.27%)</title><rect x="1054" y="244" width="3" height="15" fill="rgb(243,170,8)"/><text x="1057.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (2 samples, 0.27%)</title><rect x="1054" y="260" width="3" height="15" fill="rgb(215,47,23)"/><text x="1057.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (2 samples, 0.27%)</title><rect x="1054" y="276" width="3" height="15" fill="rgb(212,153,3)"/><text x="1057.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (2 samples, 0.27%)</title><rect x="1054" y="292" width="3" height="15" fill="rgb(218,59,49)"/><text x="1057.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1055" y="308" width="2" height="15" fill="rgb(212,63,15)"/><text x="1058.00" y="318.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (72 samples, 9.63%)</title><rect x="947" y="196" width="113" height="15" fill="rgb(214,8,35)"/><text x="950.00" y="206.50">_kneighbors_r..</text></g><g><title>array_subscript (mapping.c) (8 samples, 1.07%)</title><rect x="1048" y="212" width="12" height="15" fill="rgb(223,86,18)"/><text x="1051.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (2 samples, 0.27%)</title><rect x="1057" y="228" width="3" height="15" fill="rgb(214,8,23)"/><text x="1060.00" y="238.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (2 samples, 0.27%)</title><rect x="1060" y="356" width="3" height="15" fill="rgb(244,109,30)"/><text x="1063.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.40%)</title><rect x="1060" y="292" width="5" height="15" fill="rgb(246,44,11)"/><text x="1063.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.40%)</title><rect x="1060" y="308" width="5" height="15" fill="rgb(239,87,45)"/><text x="1063.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.40%)</title><rect x="1060" y="324" width="5" height="15" fill="rgb(219,195,42)"/><text x="1063.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src) (3 samples, 0.40%)</title><rect x="1060" y="340" width="5" height="15" fill="rgb(210,40,49)"/><text x="1063.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.13%)</title><rect x="1063" y="356" width="2" height="15" fill="rgb(217,112,46)"/><text x="1066.00" y="366.50"></text></g><g><title>array_multiply (number.c) (4 samples, 0.53%)</title><rect x="1060" y="244" width="6" height="15" fill="rgb(216,153,28)"/><text x="1063.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (4 samples, 0.53%)</title><rect x="1060" y="260" width="6" height="15" fill="rgb(222,140,15)"/><text x="1063.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (4 samples, 0.53%)</title><rect x="1060" y="276" width="6" height="15" fill="rgb(240,56,22)"/><text x="1063.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1065" y="292" width="1" height="15" fill="rgb(245,117,25)"/><text x="1068.00" y="302.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.13%)</title><rect x="1068" y="276" width="2" height="15" fill="rgb(235,138,38)"/><text x="1071.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.13%)</title><rect x="1070" y="276" width="1" height="15" fill="rgb(219,143,24)"/><text x="1073.00" y="286.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.13%)</title><rect x="1070" y="292" width="1" height="15" fill="rgb(248,193,28)"/><text x="1073.00" y="302.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 0.53%)</title><rect x="1071" y="276" width="6" height="15" fill="rgb(248,204,28)"/><text x="1074.00" y="286.50"></text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.40%)</title><rect x="1073" y="292" width="4" height="15" fill="rgb(250,84,30)"/><text x="1076.00" y="302.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.13%)</title><rect x="1076" y="308" width="1" height="15" fill="rgb(243,12,26)"/><text x="1079.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (5 samples, 0.67%)</title><rect x="1077" y="356" width="8" height="15" fill="rgb(253,22,18)"/><text x="1080.00" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (5 samples, 0.67%)</title><rect x="1077" y="372" width="8" height="15" fill="rgb(209,99,13)"/><text x="1080.00" y="382.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (5 samples, 0.67%)</title><rect x="1077" y="388" width="8" height="15" fill="rgb(241,106,22)"/><text x="1080.00" y="398.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (6 samples, 0.80%)</title><rect x="1077" y="276" width="10" height="15" fill="rgb(206,103,18)"/><text x="1080.00" y="286.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (6 samples, 0.80%)</title><rect x="1077" y="292" width="10" height="15" fill="rgb(253,34,40)"/><text x="1080.00" y="302.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (6 samples, 0.80%)</title><rect x="1077" y="308" width="10" height="15" fill="rgb(247,145,9)"/><text x="1080.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c) (6 samples, 0.80%)</title><rect x="1077" y="324" width="10" height="15" fill="rgb(208,87,43)"/><text x="1080.00" y="334.50"></text></g><g><title>PyArray_FromArray (ctors.c) (6 samples, 0.80%)</title><rect x="1077" y="340" width="10" height="15" fill="rgb(224,221,8)"/><text x="1080.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.13%)</title><rect x="1085" y="356" width="2" height="15" fill="rgb(233,216,3)"/><text x="1088.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="1085" y="372" width="2" height="15" fill="rgb(206,33,18)"/><text x="1088.00" y="382.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.13%)</title><rect x="1085" y="388" width="2" height="15" fill="rgb(240,43,9)"/><text x="1088.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1085" y="404" width="2" height="15" fill="rgb(218,65,20)"/><text x="1088.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1085" y="420" width="2" height="15" fill="rgb(250,172,29)"/><text x="1088.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1085" y="436" width="2" height="15" fill="rgb(219,60,47)"/><text x="1088.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="1085" y="452" width="2" height="15" fill="rgb(218,37,46)"/><text x="1088.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1085" y="468" width="2" height="15" fill="rgb(217,108,19)"/><text x="1088.00" y="478.50"></text></g><g><title>0x7f9fbb8842a3 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1085" y="484" width="2" height="15" fill="rgb(254,111,40)"/><text x="1088.00" y="494.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (14 samples, 1.87%)</title><rect x="1066" y="244" width="23" height="15" fill="rgb(238,30,8)"/><text x="1069.00" y="254.50">c..</text></g><g><title>check_array (sklearn/utils/validation.py) (14 samples, 1.87%)</title><rect x="1066" y="260" width="23" height="15" fill="rgb(232,54,40)"/><text x="1069.00" y="270.50">c..</text></g><g><title>simplefilter (warnings.py) (1 samples, 0.13%)</title><rect x="1087" y="276" width="2" height="15" fill="rgb(206,104,0)"/><text x="1090.00" y="286.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.13%)</title><rect x="1087" y="292" width="2" height="15" fill="rgb(214,165,12)"/><text x="1090.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1093" y="356" width="2" height="15" fill="rgb(252,131,49)"/><text x="1096.00" y="366.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1093" y="372" width="2" height="15" fill="rgb(219,2,20)"/><text x="1096.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.13%)</title><rect x="1093" y="388" width="2" height="15" fill="rgb(242,90,28)"/><text x="1096.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.13%)</title><rect x="1093" y="404" width="2" height="15" fill="rgb(240,145,22)"/><text x="1096.00" y="414.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1093" y="420" width="2" height="15" fill="rgb(206,203,15)"/><text x="1096.00" y="430.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.13%)</title><rect x="1093" y="436" width="2" height="15" fill="rgb(252,122,29)"/><text x="1096.00" y="446.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.13%)</title><rect x="1093" y="452" width="2" height="15" fill="rgb(249,50,40)"/><text x="1096.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1093" y="468" width="2" height="15" fill="rgb(241,49,15)"/><text x="1096.00" y="478.50"></text></g><g><title>0x7f9fbb883cc2 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1093" y="484" width="2" height="15" fill="rgb(228,122,7)"/><text x="1096.00" y="494.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.27%)</title><rect x="1093" y="340" width="3" height="15" fill="rgb(221,14,8)"/><text x="1096.00" y="350.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1095" y="356" width="1" height="15" fill="rgb(251,50,52)"/><text x="1098.00" y="366.50"></text></g><g><title>PyArray_AssignZero (convert.c) (1 samples, 0.13%)</title><rect x="1096" y="340" width="2" height="15" fill="rgb(215,116,45)"/><text x="1099.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.13%)</title><rect x="1096" y="356" width="2" height="15" fill="rgb(227,10,40)"/><text x="1099.00" y="366.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1096" y="372" width="2" height="15" fill="rgb(216,124,25)"/><text x="1099.00" y="382.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1096" y="388" width="2" height="15" fill="rgb(250,165,9)"/><text x="1099.00" y="398.50"></text></g><g><title>PyArray_CanCastTo (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1096" y="404" width="2" height="15" fill="rgb(213,223,5)"/><text x="1099.00" y="414.50"></text></g><g><title>PyArray_CanCastSafely (convert_datatype.c) (1 samples, 0.13%)</title><rect x="1096" y="420" width="2" height="15" fill="rgb(225,149,43)"/><text x="1099.00" y="430.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (7 samples, 0.94%)</title><rect x="1089" y="244" width="11" height="15" fill="rgb(214,141,0)"/><text x="1092.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (6 samples, 0.80%)</title><rect x="1090" y="260" width="10" height="15" fill="rgb(208,140,26)"/><text x="1093.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.80%)</title><rect x="1090" y="276" width="10" height="15" fill="rgb(235,56,32)"/><text x="1093.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (5 samples, 0.67%)</title><rect x="1092" y="292" width="8" height="15" fill="rgb(216,83,47)"/><text x="1095.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (4 samples, 0.53%)</title><rect x="1093" y="308" width="7" height="15" fill="rgb(206,222,13)"/><text x="1096.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (4 samples, 0.53%)</title><rect x="1093" y="324" width="7" height="15" fill="rgb(233,27,11)"/><text x="1096.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src) (1 samples, 0.13%)</title><rect x="1098" y="340" width="2" height="15" fill="rgb(225,207,38)"/><text x="1101.00" y="350.50"></text></g><g><title>double_sum_of_products_contig_contig_outstride0_two (einsum.c.src) (1 samples, 0.13%)</title><rect x="1098" y="356" width="2" height="15" fill="rgb(208,223,42)"/><text x="1101.00" y="366.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.13%)</title><rect x="1100" y="260" width="1" height="15" fill="rgb(241,4,10)"/><text x="1103.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (11 samples, 1.47%)</title><rect x="1101" y="260" width="18" height="15" fill="rgb(234,131,32)"/><text x="1104.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.13%)</title><rect x="1119" y="276" width="1" height="15" fill="rgb(211,228,52)"/><text x="1122.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.13%)</title><rect x="1119" y="292" width="1" height="15" fill="rgb(235,120,48)"/><text x="1122.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.13%)</title><rect x="1119" y="308" width="1" height="15" fill="rgb(250,34,19)"/><text x="1122.00" y="318.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.27%)</title><rect x="1120" y="388" width="3" height="15" fill="rgb(249,126,6)"/><text x="1123.00" y="398.50"></text></g><g><title>sched_yield (libc-2.29.so) (2 samples, 0.27%)</title><rect x="1120" y="404" width="3" height="15" fill="rgb(214,88,18)"/><text x="1123.00" y="414.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (6 samples, 0.80%)</title><rect x="1120" y="308" width="10" height="15" fill="rgb(212,212,42)"/><text x="1123.00" y="318.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.80%)</title><rect x="1120" y="324" width="10" height="15" fill="rgb(250,47,31)"/><text x="1123.00" y="334.50"></text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.80%)</title><rect x="1120" y="340" width="10" height="15" fill="rgb(237,177,7)"/><text x="1123.00" y="350.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.80%)</title><rect x="1120" y="356" width="10" height="15" fill="rgb(252,101,24)"/><text x="1123.00" y="366.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.80%)</title><rect x="1120" y="372" width="10" height="15" fill="rgb(236,142,52)"/><text x="1123.00" y="382.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.53%)</title><rect x="1123" y="388" width="7" height="15" fill="rgb(224,117,53)"/><text x="1126.00" y="398.50"></text></g><g><title>dgemm_oncopy_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 0.53%)</title><rect x="1123" y="404" width="7" height="15" fill="rgb(221,89,36)"/><text x="1126.00" y="414.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (20 samples, 2.67%)</title><rect x="1100" y="244" width="31" height="15" fill="rgb(244,48,16)"/><text x="1103.00" y="254.50">sa..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 1.07%)</title><rect x="1119" y="260" width="12" height="15" fill="rgb(249,187,23)"/><text x="1122.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 0.94%)</title><rect x="1120" y="276" width="11" height="15" fill="rgb(232,221,52)"/><text x="1123.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (7 samples, 0.94%)</title><rect x="1120" y="292" width="11" height="15" fill="rgb(218,98,35)"/><text x="1123.00" y="302.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.13%)</title><rect x="1130" y="308" width="1" height="15" fill="rgb(249,217,25)"/><text x="1133.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (6 samples, 0.80%)</title><rect x="1134" y="356" width="10" height="15" fill="rgb(218,70,41)"/><text x="1137.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (11 samples, 1.47%)</title><rect x="1131" y="308" width="17" height="15" fill="rgb(213,105,52)"/><text x="1134.00" y="318.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (11 samples, 1.47%)</title><rect x="1131" y="324" width="17" height="15" fill="rgb(222,155,29)"/><text x="1134.00" y="334.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (11 samples, 1.47%)</title><rect x="1131" y="340" width="17" height="15" fill="rgb(247,123,36)"/><text x="1134.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (3 samples, 0.40%)</title><rect x="1144" y="356" width="4" height="15" fill="rgb(237,49,8)"/><text x="1147.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1148" y="308" width="2" height="15" fill="rgb(212,4,4)"/><text x="1151.00" y="318.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1148" y="324" width="2" height="15" fill="rgb(241,2,23)"/><text x="1151.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1150" y="308" width="2" height="15" fill="rgb(240,209,47)"/><text x="1153.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1150" y="324" width="2" height="15" fill="rgb(244,164,49)"/><text x="1153.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.13%)</title><rect x="1150" y="340" width="2" height="15" fill="rgb(226,206,46)"/><text x="1153.00" y="350.50"></text></g><g><title>0x7f9fbb8a2f53 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1150" y="356" width="2" height="15" fill="rgb(225,189,45)"/><text x="1153.00" y="366.50"></text></g><g><title>0x7f9fbb8a2f4e (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1153" y="356" width="2" height="15" fill="rgb(254,163,38)"/><text x="1156.00" y="366.50"></text></g><g><title>0x7f9fbb8a2f53 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1155" y="356" width="1" height="15" fill="rgb(226,24,20)"/><text x="1158.00" y="366.50"></text></g><g><title>0x7f9fbb8a2f58 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1156" y="356" width="2" height="15" fill="rgb(226,58,25)"/><text x="1159.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (20 samples, 2.67%)</title><rect x="1131" y="292" width="32" height="15" fill="rgb(213,20,24)"/><text x="1134.00" y="302.50">it..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (7 samples, 0.94%)</title><rect x="1152" y="308" width="11" height="15" fill="rgb(209,17,1)"/><text x="1155.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (7 samples, 0.94%)</title><rect x="1152" y="324" width="11" height="15" fill="rgb(218,177,13)"/><text x="1155.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (7 samples, 0.94%)</title><rect x="1152" y="340" width="11" height="15" fill="rgb(212,178,46)"/><text x="1155.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (3 samples, 0.40%)</title><rect x="1158" y="356" width="5" height="15" fill="rgb(213,66,29)"/><text x="1161.00" y="366.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (145 samples, 19.39%)</title><rect x="945" y="180" width="229" height="15" fill="rgb(225,227,12)"/><text x="948.00" y="190.50">pairwise_distances_chunked (sk..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (72 samples, 9.63%)</title><rect x="1060" y="196" width="114" height="15" fill="rgb(214,174,0)"/><text x="1063.00" y="206.50">pairwise_dista..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (72 samples, 9.63%)</title><rect x="1060" y="212" width="114" height="15" fill="rgb(207,50,28)"/><text x="1063.00" y="222.50">_parallel_pair..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (72 samples, 9.63%)</title><rect x="1060" y="228" width="114" height="15" fill="rgb(241,101,2)"/><text x="1063.00" y="238.50">euclidean_dist..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (27 samples, 3.61%)</title><rect x="1131" y="244" width="43" height="15" fill="rgb(231,224,5)"/><text x="1134.00" y="254.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (27 samples, 3.61%)</title><rect x="1131" y="260" width="43" height="15" fill="rgb(227,219,22)"/><text x="1134.00" y="270.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (27 samples, 3.61%)</title><rect x="1131" y="276" width="43" height="15" fill="rgb(216,78,40)"/><text x="1134.00" y="286.50">exec..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (7 samples, 0.94%)</title><rect x="1163" y="292" width="11" height="15" fill="rgb(216,80,27)"/><text x="1166.00" y="302.50"></text></g><g><title>DOUBLE_maximum (loops.c.src) (7 samples, 0.94%)</title><rect x="1163" y="308" width="11" height="15" fill="rgb(248,222,3)"/><text x="1166.00" y="318.50"></text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (155 samples, 20.72%)</title><rect x="931" y="164" width="244" height="15" fill="rgb(220,3,22)"/><text x="934.00" y="174.50">kneighbors (sklearn/neighbors/_b..</text></g><g><title>vstack (&lt;__array_function__ internals&gt;) (1 samples, 0.13%)</title><rect x="1174" y="180" width="1" height="15" fill="rgb(209,174,50)"/><text x="1177.00" y="190.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1178" y="260" width="2" height="15" fill="rgb(221,194,6)"/><text x="1181.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.13%)</title><rect x="1178" y="276" width="2" height="15" fill="rgb(228,156,48)"/><text x="1181.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.13%)</title><rect x="1178" y="292" width="2" height="15" fill="rgb(221,197,49)"/><text x="1181.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.13%)</title><rect x="1178" y="308" width="2" height="15" fill="rgb(231,222,34)"/><text x="1181.00" y="318.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.13%)</title><rect x="1180" y="276" width="2" height="15" fill="rgb(240,107,31)"/><text x="1183.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.13%)</title><rect x="1180" y="292" width="2" height="15" fill="rgb(217,94,38)"/><text x="1183.00" y="302.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.13%)</title><rect x="1180" y="308" width="2" height="15" fill="rgb(225,189,54)"/><text x="1183.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.40%)</title><rect x="1178" y="228" width="5" height="15" fill="rgb(234,123,46)"/><text x="1181.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.40%)</title><rect x="1178" y="244" width="5" height="15" fill="rgb(207,33,49)"/><text x="1181.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.27%)</title><rect x="1180" y="260" width="3" height="15" fill="rgb(238,145,12)"/><text x="1183.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1182" y="276" width="1" height="15" fill="rgb(231,120,48)"/><text x="1185.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.13%)</title><rect x="1182" y="292" width="1" height="15" fill="rgb(219,203,1)"/><text x="1185.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.13%)</title><rect x="1182" y="308" width="1" height="15" fill="rgb(241,98,34)"/><text x="1185.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.13%)</title><rect x="1183" y="292" width="2" height="15" fill="rgb(252,157,11)"/><text x="1186.00" y="302.50"></text></g><g><title>npyiter_allocate_buffers (nditer_api.c) (1 samples, 0.13%)</title><rect x="1183" y="308" width="2" height="15" fill="rgb(227,109,18)"/><text x="1186.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1183" y="324" width="2" height="15" fill="rgb(236,13,5)"/><text x="1186.00" y="334.50"></text></g><g><title>0x7f9fbb884428 (libc-2.29.so) (1 samples, 0.13%)</title><rect x="1183" y="340" width="2" height="15" fill="rgb(211,164,1)"/><text x="1186.00" y="350.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (167 samples, 22.33%)</title><rect x="923" y="132" width="263" height="15" fill="rgb(245,86,31)"/><text x="926.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/c..</text></g><g><title>predict (sklearn/neighbors/_regression.py) (167 samples, 22.33%)</title><rect x="923" y="148" width="263" height="15" fill="rgb(225,156,51)"/><text x="926.00" y="158.50">predict (sklearn/neighbors/_regress..</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (7 samples, 0.94%)</title><rect x="1175" y="164" width="11" height="15" fill="rgb(238,126,0)"/><text x="1178.00" y="174.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.80%)</title><rect x="1177" y="180" width="9" height="15" fill="rgb(217,140,20)"/><text x="1180.00" y="190.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (6 samples, 0.80%)</title><rect x="1177" y="196" width="9" height="15" fill="rgb(253,19,27)"/><text x="1180.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py) (5 samples, 0.67%)</title><rect x="1178" y="212" width="8" height="15" fill="rgb(212,77,25)"/><text x="1181.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (2 samples, 0.27%)</title><rect x="1183" y="228" width="3" height="15" fill="rgb(244,220,25)"/><text x="1186.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.27%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(227,15,12)"/><text x="1186.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.27%)</title><rect x="1183" y="260" width="3" height="15" fill="rgb(207,65,46)"/><text x="1186.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.27%)</title><rect x="1183" y="276" width="3" height="15" fill="rgb(232,134,15)"/><text x="1186.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.13%)</title><rect x="1185" y="292" width="1" height="15" fill="rgb(230,182,30)"/><text x="1188.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.13%)</title><rect x="1185" y="308" width="1" height="15" fill="rgb(228,123,53)"/><text x="1188.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.13%)</title><rect x="1185" y="324" width="1" height="15" fill="rgb(216,111,32)"/><text x="1188.00" y="334.50"></text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (169 samples, 22.59%)</title><rect x="921" y="100" width="267" height="15" fill="rgb(249,218,47)"/><text x="924.00" y="110.50">profile (bench_KNeighborsRegressor_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (168 samples, 22.46%)</title><rect x="923" y="116" width="265" height="15" fill="rgb(222,26,7)"/><text x="926.00" y="126.50">time_predict (mlprodict/asv_benchma..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.13%)</title><rect x="1186" y="132" width="2" height="15" fill="rgb(221,158,20)"/><text x="1189.00" y="142.50"></text></g><g><title>all (748 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(254,130,19)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (748 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(233,227,10)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py)</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (170 samples, 22.73%)</title><rect x="921" y="68" width="269" height="15" fill="rgb(218,186,22)"/><text x="924.00" y="78.50">profile_skl (bench_KNeighborsRegres..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_m_reg_algorithmbrute_n_neighbors3_1000_50_12_float_cdist.py) (170 samples, 22.73%)</title><rect x="921" y="84" width="269" height="15" fill="rgb(234,119,20)"/><text x="924.00" y="94.50">setup_profile (bench_KNeighborsRegr..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="1188" y="100" width="2" height="15" fill="rgb(227,110,24)"/><text x="1191.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(245,115,29)"/><text x="1191.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.13%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(248,24,38)"/><text x="1191.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.13%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(220,158,24)"/><text x="1191.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.13%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(253,33,10)"/><text x="1191.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.13%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(209,21,15)"/><text x="1191.00" y="190.50"></text></g><g><title>convert_nearest_neighbors_regressor (skl2onnx/operator_converters/nearest_neighbours.py) (1 samples, 0.13%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(232,181,30)"/><text x="1191.00" y="206.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.13%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(240,126,9)"/><text x="1191.00" y="222.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.13%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(226,49,16)"/><text x="1191.00" y="238.50"></text></g><g><title>_get_var_name (skl2onnx/algebra/graph_state.py) (1 samples, 0.13%)</title><rect x="1188" y="244" width="2" height="15" fill="rgb(254,43,17)"/><text x="1191.00" y="254.50"></text></g><g><title>add_to (skl2onnx/algebra/onnx_operator.py) (1 samples, 0.13%)</title><rect x="1188" y="260" width="2" height="15" fill="rgb(234,225,37)"/><text x="1191.00" y="270.50"></text></g><g><title>run (skl2onnx/algebra/graph_state.py) (1 samples, 0.13%)</title><rect x="1188" y="276" width="2" height="15" fill="rgb(237,125,28)"/><text x="1191.00" y="286.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="1188" y="292" width="2" height="15" fill="rgb(241,49,40)"/><text x="1191.00" y="302.50"></text></g><g><title>_check_operator (skl2onnx/common/_container.py) (1 samples, 0.13%)</title><rect x="1188" y="308" width="2" height="15" fill="rgb(212,143,43)"/><text x="1191.00" y="318.50"></text></g><g><title>extract_stack (traceback.py) (1 samples, 0.13%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(251,143,11)"/><text x="1191.00" y="334.50"></text></g><g><title>extract (traceback.py) (1 samples, 0.13%)</title><rect x="1188" y="340" width="2" height="15" fill="rgb(248,45,33)"/><text x="1191.00" y="350.50"></text></g><g><title>checkcache (linecache.py) (1 samples, 0.13%)</title><rect x="1188" y="356" width="2" height="15" fill="rgb(240,89,41)"/><text x="1191.00" y="366.50"></text></g></g></svg>