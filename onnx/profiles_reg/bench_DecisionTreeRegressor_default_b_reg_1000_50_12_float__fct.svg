<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1910" onload="init(evt)" viewBox="0 0 1200 1910" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1910" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1893.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1893.00"> </text><g id="frames"><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.16%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(241,74,38)"/><text x="13.00" y="926.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.32%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(213,145,16)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.32%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(246,183,39)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.32%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(239,105,40)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(212,116,13)"/><text x="14.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(220,163,49)"/><text x="14.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(230,27,48)"/><text x="14.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="964" width="2" height="15" fill="rgb(217,0,1)"/><text x="14.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(254,205,43)"/><text x="14.00" y="990.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(221,93,1)"/><text x="16.00" y="926.50"></text></g><g><title>key (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(244,164,7)"/><text x="16.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="196" width="7" height="15" fill="rgb(211,120,29)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="212" width="7" height="15" fill="rgb(214,220,51)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="228" width="7" height="15" fill="rgb(243,209,8)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(230,164,11)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(223,140,49)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="276" width="7" height="15" fill="rgb(240,31,24)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 0.63%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(220,25,16)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(243,227,39)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(218,116,25)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(220,215,38)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(230,114,39)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(229,82,13)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.63%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(225,179,50)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(249,125,20)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(214,84,37)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(234,207,17)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(208,2,22)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(219,4,42)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.63%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(210,83,15)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(221,104,20)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(242,138,29)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(240,136,19)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(253,10,51)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(221,128,2)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.63%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(234,188,16)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(244,175,6)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(248,180,4)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(253,12,12)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(225,201,28)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(252,193,12)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(234,49,51)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(224,70,35)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(243,33,51)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.63%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(228,28,14)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(237,173,49)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(214,171,22)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(210,172,40)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.63%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(232,180,9)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.63%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(243,56,46)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.63%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(218,175,3)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.63%)</title><rect x="10" y="836" width="7" height="15" fill="rgb(236,125,38)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.63%)</title><rect x="10" y="852" width="7" height="15" fill="rgb(244,169,1)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.32%)</title><rect x="13" y="868" width="4" height="15" fill="rgb(215,142,5)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.32%)</title><rect x="13" y="884" width="4" height="15" fill="rgb(233,159,31)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.32%)</title><rect x="13" y="900" width="4" height="15" fill="rgb(216,195,21)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(221,211,44)"/><text x="18.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(225,37,0)"/><text x="18.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(226,98,13)"/><text x="18.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(240,211,38)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/interval.py) (1 samples, 0.16%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(219,146,39)"/><text x="20.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(209,218,48)"/><text x="20.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(215,226,19)"/><text x="20.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(212,218,50)"/><text x="20.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(208,142,37)"/><text x="20.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(212,8,29)"/><text x="20.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/base.py) (1 samples, 0.16%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(222,194,27)"/><text x="20.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(228,129,3)"/><text x="20.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(244,39,14)"/><text x="20.00" y="1102.50"></text></g><g><title>_lock_unlock_module (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(243,189,37)"/><text x="20.00" y="1118.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(210,134,30)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(252,12,26)"/><text x="20.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(210,87,2)"/><text x="20.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(227,142,3)"/><text x="20.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(211,91,32)"/><text x="20.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.32%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(209,226,18)"/><text x="20.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(246,95,36)"/><text x="20.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 0.32%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(218,29,32)"/><text x="20.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(250,20,43)"/><text x="20.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(233,183,44)"/><text x="20.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(214,37,50)"/><text x="20.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.32%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(221,136,10)"/><text x="20.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(234,144,24)"/><text x="22.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(233,69,2)"/><text x="22.00" y="974.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.47%)</title><rect x="17" y="340" width="6" height="15" fill="rgb(238,174,0)"/><text x="20.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="356" width="6" height="15" fill="rgb(219,96,41)"/><text x="20.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="372" width="6" height="15" fill="rgb(233,172,4)"/><text x="20.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="388" width="6" height="15" fill="rgb(252,149,29)"/><text x="20.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="17" y="404" width="6" height="15" fill="rgb(223,131,0)"/><text x="20.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="420" width="6" height="15" fill="rgb(214,110,9)"/><text x="20.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.47%)</title><rect x="17" y="436" width="6" height="15" fill="rgb(240,26,2)"/><text x="20.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="452" width="6" height="15" fill="rgb(246,147,34)"/><text x="20.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="468" width="6" height="15" fill="rgb(237,206,21)"/><text x="20.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="484" width="6" height="15" fill="rgb(208,131,38)"/><text x="20.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="17" y="500" width="6" height="15" fill="rgb(224,88,7)"/><text x="20.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="516" width="6" height="15" fill="rgb(213,14,38)"/><text x="20.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.47%)</title><rect x="17" y="532" width="6" height="15" fill="rgb(209,138,31)"/><text x="20.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="548" width="6" height="15" fill="rgb(208,63,6)"/><text x="20.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="564" width="6" height="15" fill="rgb(221,47,5)"/><text x="20.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="580" width="6" height="15" fill="rgb(226,42,0)"/><text x="20.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="17" y="596" width="6" height="15" fill="rgb(220,5,22)"/><text x="20.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="612" width="6" height="15" fill="rgb(227,101,38)"/><text x="20.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.47%)</title><rect x="17" y="628" width="6" height="15" fill="rgb(250,31,39)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="644" width="6" height="15" fill="rgb(254,214,42)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="660" width="6" height="15" fill="rgb(254,174,39)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="676" width="6" height="15" fill="rgb(236,164,50)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="17" y="692" width="6" height="15" fill="rgb(240,20,47)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="708" width="6" height="15" fill="rgb(235,98,46)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.47%)</title><rect x="17" y="724" width="6" height="15" fill="rgb(228,63,8)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="740" width="6" height="15" fill="rgb(253,109,3)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="17" y="756" width="6" height="15" fill="rgb(240,130,38)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="772" width="2" height="15" fill="rgb(242,36,12)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="788" width="2" height="15" fill="rgb(240,19,4)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="804" width="2" height="15" fill="rgb(205,14,54)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="820" width="2" height="15" fill="rgb(218,134,34)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="836" width="2" height="15" fill="rgb(252,49,41)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="852" width="2" height="15" fill="rgb(230,165,51)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="868" width="2" height="15" fill="rgb(227,102,16)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="884" width="2" height="15" fill="rgb(221,34,40)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="900" width="2" height="15" fill="rgb(229,102,11)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.16%)</title><rect x="21" y="916" width="2" height="15" fill="rgb(218,79,26)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="932" width="2" height="15" fill="rgb(230,180,4)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="948" width="2" height="15" fill="rgb(211,93,38)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="964" width="2" height="15" fill="rgb(216,118,44)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="21" y="980" width="2" height="15" fill="rgb(223,57,34)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="21" y="996" width="2" height="15" fill="rgb(210,169,29)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.16%)</title><rect x="21" y="1012" width="2" height="15" fill="rgb(225,199,2)"/><text x="24.00" y="1022.50"></text></g><g><title>add_special_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1028" width="2" height="15" fill="rgb(250,136,22)"/><text x="24.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1044" width="2" height="15" fill="rgb(216,208,7)"/><text x="24.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.16%)</title><rect x="21" y="1060" width="2" height="15" fill="rgb(230,69,15)"/><text x="24.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.16%)</title><rect x="21" y="1076" width="2" height="15" fill="rgb(222,197,14)"/><text x="24.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.16%)</title><rect x="21" y="1092" width="2" height="15" fill="rgb(215,188,7)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.16%)</title><rect x="23" y="580" width="1" height="15" fill="rgb(241,192,12)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="596" width="1" height="15" fill="rgb(218,202,39)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="612" width="1" height="15" fill="rgb(245,81,15)"/><text x="26.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="628" width="1" height="15" fill="rgb(237,165,19)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="644" width="1" height="15" fill="rgb(245,225,43)"/><text x="26.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="660" width="1" height="15" fill="rgb(235,209,31)"/><text x="26.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="676" width="1" height="15" fill="rgb(238,8,45)"/><text x="26.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="692" width="1" height="15" fill="rgb(205,28,39)"/><text x="26.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="708" width="1" height="15" fill="rgb(241,157,0)"/><text x="26.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.16%)</title><rect x="23" y="724" width="1" height="15" fill="rgb(247,180,20)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="740" width="1" height="15" fill="rgb(242,39,6)"/><text x="26.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="756" width="1" height="15" fill="rgb(210,110,50)"/><text x="26.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="772" width="1" height="15" fill="rgb(253,99,7)"/><text x="26.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="788" width="1" height="15" fill="rgb(219,214,20)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="804" width="1" height="15" fill="rgb(220,36,14)"/><text x="26.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.16%)</title><rect x="23" y="820" width="1" height="15" fill="rgb(221,221,16)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="836" width="1" height="15" fill="rgb(244,50,34)"/><text x="26.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="852" width="1" height="15" fill="rgb(244,181,10)"/><text x="26.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="868" width="1" height="15" fill="rgb(246,3,31)"/><text x="26.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="884" width="1" height="15" fill="rgb(230,179,13)"/><text x="26.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(243,98,48)"/><text x="26.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.16%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(226,91,50)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="932" width="1" height="15" fill="rgb(214,7,43)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="948" width="1" height="15" fill="rgb(225,4,51)"/><text x="26.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(228,163,0)"/><text x="26.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(236,18,26)"/><text x="26.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(218,42,29)"/><text x="26.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(229,55,10)"/><text x="26.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(231,33,32)"/><text x="26.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(229,7,0)"/><text x="26.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.16%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(218,26,8)"/><text x="26.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(224,69,21)"/><text x="26.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1092" width="1" height="15" fill="rgb(249,208,43)"/><text x="26.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1108" width="1" height="15" fill="rgb(242,200,54)"/><text x="26.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(216,176,39)"/><text x="26.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(205,45,34)"/><text x="26.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py) (1 samples, 0.16%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(223,94,15)"/><text x="26.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(228,227,47)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(213,194,45)"/><text x="26.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(217,207,41)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(205,29,15)"/><text x="26.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(226,155,27)"/><text x="26.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(243,159,17)"/><text x="26.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(252,90,45)"/><text x="26.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py) (1 samples, 0.16%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(241,134,16)"/><text x="26.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1300" width="1" height="15" fill="rgb(208,192,42)"/><text x="26.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1316" width="1" height="15" fill="rgb(228,146,39)"/><text x="26.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1332" width="1" height="15" fill="rgb(220,180,35)"/><text x="26.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1348" width="1" height="15" fill="rgb(241,170,22)"/><text x="26.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1364" width="1" height="15" fill="rgb(230,113,35)"/><text x="26.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1380" width="1" height="15" fill="rgb(222,106,54)"/><text x="26.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="23" y="1396" width="1" height="15" fill="rgb(253,183,33)"/><text x="26.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1412" width="1" height="15" fill="rgb(209,12,51)"/><text x="26.00" y="1422.50"></text></g><g><title>&lt;module&gt; (xml/sax/__init__.py) (1 samples, 0.16%)</title><rect x="23" y="1428" width="1" height="15" fill="rgb(229,64,25)"/><text x="26.00" y="1438.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="23" y="1444" width="1" height="15" fill="rgb(233,225,28)"/><text x="26.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="788" width="2" height="15" fill="rgb(220,59,2)"/><text x="27.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="804" width="2" height="15" fill="rgb(254,97,39)"/><text x="27.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="820" width="2" height="15" fill="rgb(233,115,43)"/><text x="27.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="836" width="2" height="15" fill="rgb(209,193,26)"/><text x="27.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="852" width="2" height="15" fill="rgb(216,85,21)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="868" width="2" height="15" fill="rgb(223,124,45)"/><text x="27.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="884" width="2" height="15" fill="rgb(227,101,47)"/><text x="27.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="900" width="2" height="15" fill="rgb(245,35,52)"/><text x="27.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="916" width="2" height="15" fill="rgb(219,46,16)"/><text x="27.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="932" width="2" height="15" fill="rgb(250,136,10)"/><text x="27.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="948" width="2" height="15" fill="rgb(223,216,27)"/><text x="27.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.16%)</title><rect x="24" y="964" width="2" height="15" fill="rgb(221,218,22)"/><text x="27.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="980" width="2" height="15" fill="rgb(254,153,45)"/><text x="27.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="996" width="2" height="15" fill="rgb(251,215,23)"/><text x="27.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1012" width="2" height="15" fill="rgb(222,163,12)"/><text x="27.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1028" width="2" height="15" fill="rgb(210,165,52)"/><text x="27.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1044" width="2" height="15" fill="rgb(209,148,14)"/><text x="27.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.16%)</title><rect x="24" y="1060" width="2" height="15" fill="rgb(243,174,33)"/><text x="27.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1076" width="2" height="15" fill="rgb(227,32,10)"/><text x="27.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1092" width="2" height="15" fill="rgb(230,109,51)"/><text x="27.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1108" width="2" height="15" fill="rgb(233,108,12)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1124" width="2" height="15" fill="rgb(244,47,46)"/><text x="27.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1140" width="2" height="15" fill="rgb(227,194,30)"/><text x="27.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1156" width="2" height="15" fill="rgb(238,85,42)"/><text x="27.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1172" width="2" height="15" fill="rgb(227,95,44)"/><text x="27.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1188" width="2" height="15" fill="rgb(205,1,38)"/><text x="27.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.16%)</title><rect x="24" y="1204" width="2" height="15" fill="rgb(239,152,24)"/><text x="27.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1220" width="2" height="15" fill="rgb(242,224,35)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1236" width="2" height="15" fill="rgb(215,122,1)"/><text x="27.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1252" width="2" height="15" fill="rgb(227,109,17)"/><text x="27.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1268" width="2" height="15" fill="rgb(225,31,2)"/><text x="27.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1284" width="2" height="15" fill="rgb(207,229,51)"/><text x="27.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/request.py) (1 samples, 0.16%)</title><rect x="24" y="1300" width="2" height="15" fill="rgb(220,81,19)"/><text x="27.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1316" width="2" height="15" fill="rgb(217,99,13)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1332" width="2" height="15" fill="rgb(233,131,46)"/><text x="27.00" y="1342.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="24" y="1348" width="2" height="15" fill="rgb(236,60,10)"/><text x="27.00" y="1358.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1364" width="2" height="15" fill="rgb(254,28,29)"/><text x="27.00" y="1374.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="24" y="1380" width="2" height="15" fill="rgb(230,211,46)"/><text x="27.00" y="1390.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.95%)</title><rect x="17" y="244" width="11" height="15" fill="rgb(213,222,15)"/><text x="20.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.95%)</title><rect x="17" y="260" width="11" height="15" fill="rgb(247,214,0)"/><text x="20.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.95%)</title><rect x="17" y="276" width="11" height="15" fill="rgb(229,101,6)"/><text x="20.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.95%)</title><rect x="17" y="292" width="11" height="15" fill="rgb(228,117,47)"/><text x="20.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.95%)</title><rect x="17" y="308" width="11" height="15" fill="rgb(245,137,40)"/><text x="20.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.95%)</title><rect x="17" y="324" width="11" height="15" fill="rgb(217,9,46)"/><text x="20.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.47%)</title><rect x="23" y="340" width="5" height="15" fill="rgb(238,215,14)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="356" width="5" height="15" fill="rgb(229,2,45)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="372" width="5" height="15" fill="rgb(245,32,43)"/><text x="26.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="388" width="5" height="15" fill="rgb(214,195,14)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="404" width="5" height="15" fill="rgb(250,8,24)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="420" width="5" height="15" fill="rgb(215,87,50)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="436" width="5" height="15" fill="rgb(236,50,46)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="23" y="452" width="5" height="15" fill="rgb(230,26,28)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="468" width="5" height="15" fill="rgb(244,47,34)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.47%)</title><rect x="23" y="484" width="5" height="15" fill="rgb(223,33,5)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="500" width="5" height="15" fill="rgb(208,86,7)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="516" width="5" height="15" fill="rgb(251,100,23)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="532" width="5" height="15" fill="rgb(219,197,25)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.47%)</title><rect x="23" y="548" width="5" height="15" fill="rgb(238,3,26)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.47%)</title><rect x="23" y="564" width="5" height="15" fill="rgb(219,226,10)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.32%)</title><rect x="24" y="580" width="4" height="15" fill="rgb(236,214,20)"/><text x="27.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="596" width="4" height="15" fill="rgb(227,43,43)"/><text x="27.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="612" width="4" height="15" fill="rgb(243,5,31)"/><text x="27.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="628" width="4" height="15" fill="rgb(220,114,25)"/><text x="27.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.32%)</title><rect x="24" y="644" width="4" height="15" fill="rgb(232,211,6)"/><text x="27.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="660" width="4" height="15" fill="rgb(252,6,36)"/><text x="27.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.32%)</title><rect x="24" y="676" width="4" height="15" fill="rgb(215,70,50)"/><text x="27.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="692" width="4" height="15" fill="rgb(247,26,24)"/><text x="27.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="708" width="4" height="15" fill="rgb(207,111,7)"/><text x="27.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="724" width="4" height="15" fill="rgb(222,174,17)"/><text x="27.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.32%)</title><rect x="24" y="740" width="4" height="15" fill="rgb(234,112,5)"/><text x="27.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.32%)</title><rect x="24" y="756" width="4" height="15" fill="rgb(233,141,27)"/><text x="27.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.32%)</title><rect x="24" y="772" width="4" height="15" fill="rgb(210,62,48)"/><text x="27.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="788" width="2" height="15" fill="rgb(229,86,6)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="804" width="2" height="15" fill="rgb(234,89,20)"/><text x="29.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="820" width="2" height="15" fill="rgb(210,148,27)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="836" width="2" height="15" fill="rgb(252,7,19)"/><text x="29.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="852" width="2" height="15" fill="rgb(230,144,8)"/><text x="29.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="868" width="2" height="15" fill="rgb(222,134,15)"/><text x="29.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="884" width="2" height="15" fill="rgb(228,39,52)"/><text x="29.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.16%)</title><rect x="26" y="900" width="2" height="15" fill="rgb(236,222,8)"/><text x="29.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="916" width="2" height="15" fill="rgb(227,180,38)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="932" width="2" height="15" fill="rgb(209,94,47)"/><text x="29.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="948" width="2" height="15" fill="rgb(230,87,17)"/><text x="29.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="964" width="2" height="15" fill="rgb(251,31,29)"/><text x="29.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="980" width="2" height="15" fill="rgb(229,26,9)"/><text x="29.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.16%)</title><rect x="26" y="996" width="2" height="15" fill="rgb(239,120,29)"/><text x="29.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1012" width="2" height="15" fill="rgb(244,25,25)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1028" width="2" height="15" fill="rgb(212,46,40)"/><text x="29.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1044" width="2" height="15" fill="rgb(252,184,13)"/><text x="29.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1060" width="2" height="15" fill="rgb(251,184,54)"/><text x="29.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1076" width="2" height="15" fill="rgb(238,172,18)"/><text x="29.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.16%)</title><rect x="26" y="1092" width="2" height="15" fill="rgb(249,148,23)"/><text x="29.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1108" width="2" height="15" fill="rgb(245,164,8)"/><text x="29.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1124" width="2" height="15" fill="rgb(248,9,15)"/><text x="29.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1140" width="2" height="15" fill="rgb(219,14,18)"/><text x="29.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1156" width="2" height="15" fill="rgb(242,169,45)"/><text x="29.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1172" width="2" height="15" fill="rgb(246,73,51)"/><text x="29.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ocsp.py) (1 samples, 0.16%)</title><rect x="26" y="1188" width="2" height="15" fill="rgb(235,220,6)"/><text x="29.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1204" width="2" height="15" fill="rgb(232,23,18)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1220" width="2" height="15" fill="rgb(244,26,42)"/><text x="29.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1236" width="2" height="15" fill="rgb(213,62,39)"/><text x="29.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="26" y="1252" width="2" height="15" fill="rgb(248,43,5)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="26" y="1268" width="2" height="15" fill="rgb(235,94,47)"/><text x="29.00" y="1278.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/x509.py) (1 samples, 0.16%)</title><rect x="26" y="1284" width="2" height="15" fill="rgb(209,88,48)"/><text x="29.00" y="1294.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.16%)</title><rect x="26" y="1300" width="2" height="15" fill="rgb(247,98,3)"/><text x="29.00" y="1310.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.16%)</title><rect x="26" y="1316" width="2" height="15" fill="rgb(226,8,5)"/><text x="29.00" y="1326.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.16%)</title><rect x="26" y="1332" width="2" height="15" fill="rgb(231,35,51)"/><text x="29.00" y="1342.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.16%)</title><rect x="26" y="1348" width="2" height="15" fill="rgb(246,147,45)"/><text x="29.00" y="1358.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.16%)</title><rect x="26" y="1364" width="2" height="15" fill="rgb(214,171,22)"/><text x="29.00" y="1374.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.16%)</title><rect x="26" y="1380" width="2" height="15" fill="rgb(231,139,38)"/><text x="29.00" y="1390.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.16%)</title><rect x="28" y="244" width="2" height="15" fill="rgb(245,135,40)"/><text x="31.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="260" width="2" height="15" fill="rgb(226,165,6)"/><text x="31.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="276" width="2" height="15" fill="rgb(225,181,33)"/><text x="31.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="292" width="2" height="15" fill="rgb(223,94,29)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="308" width="2" height="15" fill="rgb(214,154,21)"/><text x="31.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="324" width="2" height="15" fill="rgb(215,127,46)"/><text x="31.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="340" width="2" height="15" fill="rgb(210,211,52)"/><text x="31.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="356" width="2" height="15" fill="rgb(226,192,24)"/><text x="31.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.16%)</title><rect x="28" y="372" width="2" height="15" fill="rgb(227,119,26)"/><text x="31.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="388" width="2" height="15" fill="rgb(247,46,53)"/><text x="31.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="404" width="2" height="15" fill="rgb(249,38,20)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="420" width="2" height="15" fill="rgb(207,8,54)"/><text x="31.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="436" width="2" height="15" fill="rgb(254,122,46)"/><text x="31.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="452" width="2" height="15" fill="rgb(229,200,7)"/><text x="31.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="28" y="468" width="2" height="15" fill="rgb(246,56,34)"/><text x="31.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="484" width="2" height="15" fill="rgb(217,75,43)"/><text x="31.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py) (1 samples, 0.16%)</title><rect x="28" y="500" width="2" height="15" fill="rgb(241,173,33)"/><text x="31.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py) (1 samples, 0.16%)</title><rect x="28" y="516" width="2" height="15" fill="rgb(223,86,1)"/><text x="31.00" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="28" y="532" width="2" height="15" fill="rgb(246,96,14)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.89%)</title><rect x="10" y="68" width="22" height="15" fill="rgb(208,38,50)"/><text x="13.00" y="78.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.89%)</title><rect x="10" y="84" width="22" height="15" fill="rgb(212,175,20)"/><text x="13.00" y="94.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.89%)</title><rect x="10" y="100" width="22" height="15" fill="rgb(208,12,48)"/><text x="13.00" y="110.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 1.89%)</title><rect x="10" y="116" width="22" height="15" fill="rgb(244,193,29)"/><text x="13.00" y="126.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.89%)</title><rect x="10" y="132" width="22" height="15" fill="rgb(217,22,12)"/><text x="13.00" y="142.50">_..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (12 samples, 1.89%)</title><rect x="10" y="148" width="22" height="15" fill="rgb(217,19,51)"/><text x="13.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.89%)</title><rect x="10" y="164" width="22" height="15" fill="rgb(232,60,52)"/><text x="13.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 1.89%)</title><rect x="10" y="180" width="22" height="15" fill="rgb(254,209,46)"/><text x="13.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="17" y="196" width="15" height="15" fill="rgb(229,216,7)"/><text x="20.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.26%)</title><rect x="17" y="212" width="15" height="15" fill="rgb(223,172,9)"/><text x="20.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.26%)</title><rect x="17" y="228" width="15" height="15" fill="rgb(215,148,18)"/><text x="20.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="244" width="2" height="15" fill="rgb(253,50,36)"/><text x="33.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="260" width="2" height="15" fill="rgb(247,223,41)"/><text x="33.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="276" width="2" height="15" fill="rgb(248,207,21)"/><text x="33.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="292" width="2" height="15" fill="rgb(239,67,47)"/><text x="33.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="308" width="2" height="15" fill="rgb(252,186,10)"/><text x="33.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="324" width="2" height="15" fill="rgb(212,117,37)"/><text x="33.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.16%)</title><rect x="30" y="340" width="2" height="15" fill="rgb(245,187,4)"/><text x="33.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="356" width="2" height="15" fill="rgb(243,77,29)"/><text x="33.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="372" width="2" height="15" fill="rgb(242,167,25)"/><text x="33.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="388" width="2" height="15" fill="rgb(213,49,17)"/><text x="33.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="404" width="2" height="15" fill="rgb(218,75,13)"/><text x="33.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="420" width="2" height="15" fill="rgb(252,38,20)"/><text x="33.00" y="430.50"></text></g><g><title>0x7f50859ec373 (?) (1 samples, 0.16%)</title><rect x="30" y="436" width="2" height="15" fill="rgb(215,204,20)"/><text x="33.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="452" width="2" height="15" fill="rgb(228,110,4)"/><text x="33.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="468" width="2" height="15" fill="rgb(241,97,1)"/><text x="33.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="484" width="2" height="15" fill="rgb(229,27,45)"/><text x="33.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="500" width="2" height="15" fill="rgb(222,152,34)"/><text x="33.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="516" width="2" height="15" fill="rgb(219,209,50)"/><text x="33.00" y="526.50"></text></g><g><title>0x7f50857afeea (?) (1 samples, 0.16%)</title><rect x="30" y="532" width="2" height="15" fill="rgb(207,93,24)"/><text x="33.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="548" width="2" height="15" fill="rgb(225,197,50)"/><text x="33.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="564" width="2" height="15" fill="rgb(240,61,2)"/><text x="33.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="580" width="2" height="15" fill="rgb(213,187,12)"/><text x="33.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="596" width="2" height="15" fill="rgb(247,34,13)"/><text x="33.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="612" width="2" height="15" fill="rgb(233,227,23)"/><text x="33.00" y="622.50"></text></g><g><title>0x7f5085548887 (?) (1 samples, 0.16%)</title><rect x="30" y="628" width="2" height="15" fill="rgb(208,88,43)"/><text x="33.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="644" width="2" height="15" fill="rgb(222,88,15)"/><text x="33.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="660" width="2" height="15" fill="rgb(236,121,15)"/><text x="33.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="676" width="2" height="15" fill="rgb(222,171,37)"/><text x="33.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="692" width="2" height="15" fill="rgb(223,88,32)"/><text x="33.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="708" width="2" height="15" fill="rgb(210,132,15)"/><text x="33.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="724" width="2" height="15" fill="rgb(248,151,22)"/><text x="33.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="740" width="2" height="15" fill="rgb(250,112,19)"/><text x="33.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="756" width="2" height="15" fill="rgb(220,28,49)"/><text x="33.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="772" width="2" height="15" fill="rgb(213,14,44)"/><text x="33.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="788" width="2" height="15" fill="rgb(206,201,25)"/><text x="33.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="804" width="2" height="15" fill="rgb(213,226,9)"/><text x="33.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="820" width="2" height="15" fill="rgb(208,175,34)"/><text x="33.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="836" width="2" height="15" fill="rgb(253,206,35)"/><text x="33.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="852" width="2" height="15" fill="rgb(244,104,44)"/><text x="33.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.16%)</title><rect x="30" y="868" width="2" height="15" fill="rgb(246,198,18)"/><text x="33.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="884" width="2" height="15" fill="rgb(249,225,36)"/><text x="33.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="900" width="2" height="15" fill="rgb(237,148,31)"/><text x="33.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="916" width="2" height="15" fill="rgb(214,139,6)"/><text x="33.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="932" width="2" height="15" fill="rgb(238,168,10)"/><text x="33.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="948" width="2" height="15" fill="rgb(236,66,50)"/><text x="33.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="964" width="2" height="15" fill="rgb(211,88,20)"/><text x="33.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="980" width="2" height="15" fill="rgb(233,222,42)"/><text x="33.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="996" width="2" height="15" fill="rgb(210,79,42)"/><text x="33.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1012" width="2" height="15" fill="rgb(239,125,46)"/><text x="33.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1028" width="2" height="15" fill="rgb(254,22,50)"/><text x="33.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1044" width="2" height="15" fill="rgb(247,198,24)"/><text x="33.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.16%)</title><rect x="30" y="1060" width="2" height="15" fill="rgb(227,223,24)"/><text x="33.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1076" width="2" height="15" fill="rgb(229,47,8)"/><text x="33.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1092" width="2" height="15" fill="rgb(222,225,54)"/><text x="33.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1108" width="2" height="15" fill="rgb(238,72,25)"/><text x="33.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1124" width="2" height="15" fill="rgb(243,20,26)"/><text x="33.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1140" width="2" height="15" fill="rgb(222,4,5)"/><text x="33.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="1156" width="2" height="15" fill="rgb(227,90,26)"/><text x="33.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1172" width="2" height="15" fill="rgb(206,8,27)"/><text x="33.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1188" width="2" height="15" fill="rgb(242,48,41)"/><text x="33.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1204" width="2" height="15" fill="rgb(241,49,45)"/><text x="33.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1220" width="2" height="15" fill="rgb(232,29,27)"/><text x="33.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1236" width="2" height="15" fill="rgb(209,166,17)"/><text x="33.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_logistic.py) (1 samples, 0.16%)</title><rect x="30" y="1252" width="2" height="15" fill="rgb(217,73,11)"/><text x="33.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1268" width="2" height="15" fill="rgb(211,214,24)"/><text x="33.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1284" width="2" height="15" fill="rgb(215,16,35)"/><text x="33.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1300" width="2" height="15" fill="rgb(226,194,32)"/><text x="33.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1316" width="2" height="15" fill="rgb(240,107,19)"/><text x="33.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1332" width="2" height="15" fill="rgb(218,165,45)"/><text x="33.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1348" width="2" height="15" fill="rgb(239,73,13)"/><text x="33.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1364" width="2" height="15" fill="rgb(227,161,10)"/><text x="33.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1380" width="2" height="15" fill="rgb(224,79,15)"/><text x="33.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/__init__.py) (1 samples, 0.16%)</title><rect x="30" y="1396" width="2" height="15" fill="rgb(222,228,38)"/><text x="33.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1412" width="2" height="15" fill="rgb(238,73,20)"/><text x="33.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1428" width="2" height="15" fill="rgb(250,204,7)"/><text x="33.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1444" width="2" height="15" fill="rgb(238,107,29)"/><text x="33.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1460" width="2" height="15" fill="rgb(243,182,43)"/><text x="33.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1476" width="2" height="15" fill="rgb(208,15,22)"/><text x="33.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_classes.py) (1 samples, 0.16%)</title><rect x="30" y="1492" width="2" height="15" fill="rgb(207,222,30)"/><text x="33.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1508" width="2" height="15" fill="rgb(227,66,45)"/><text x="33.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1524" width="2" height="15" fill="rgb(222,6,29)"/><text x="33.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1540" width="2" height="15" fill="rgb(246,99,54)"/><text x="33.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1556" width="2" height="15" fill="rgb(236,127,9)"/><text x="33.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1572" width="2" height="15" fill="rgb(217,129,49)"/><text x="33.00" y="1582.50"></text></g><g><title>&lt;module&gt; (sklearn/svm/_base.py) (1 samples, 0.16%)</title><rect x="30" y="1588" width="2" height="15" fill="rgb(229,215,4)"/><text x="33.00" y="1598.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1604" width="2" height="15" fill="rgb(219,41,46)"/><text x="33.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1620" width="2" height="15" fill="rgb(213,62,0)"/><text x="33.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1636" width="2" height="15" fill="rgb(219,40,17)"/><text x="33.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1652" width="2" height="15" fill="rgb(228,17,34)"/><text x="33.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1668" width="2" height="15" fill="rgb(241,79,14)"/><text x="33.00" y="1678.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1684" width="2" height="15" fill="rgb(225,173,7)"/><text x="33.00" y="1694.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="30" y="1700" width="2" height="15" fill="rgb(239,52,34)"/><text x="33.00" y="1710.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="30" y="1716" width="2" height="15" fill="rgb(245,191,28)"/><text x="33.00" y="1726.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1732" width="2" height="15" fill="rgb(229,134,47)"/><text x="33.00" y="1742.50"></text></g><g><title>0x7f50ab185995 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1748" width="2" height="15" fill="rgb(236,104,24)"/><text x="33.00" y="1758.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1764" width="2" height="15" fill="rgb(218,228,43)"/><text x="33.00" y="1774.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1780" width="2" height="15" fill="rgb(212,137,54)"/><text x="33.00" y="1790.50"></text></g><g><title>0x7f50ab185258 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1796" width="2" height="15" fill="rgb(207,96,30)"/><text x="33.00" y="1806.50"></text></g><g><title>0x7f50ab1d2d7a (ld-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1812" width="2" height="15" fill="rgb(219,142,13)"/><text x="33.00" y="1822.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1828" width="2" height="15" fill="rgb(231,185,39)"/><text x="33.00" y="1838.50"></text></g><g><title>0x7f50ab1d3345 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1844" width="2" height="15" fill="rgb(219,82,51)"/><text x="33.00" y="1854.50"></text></g><g><title>0x7f50ab1cc6b0 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="30" y="1860" width="2" height="15" fill="rgb(214,18,44)"/><text x="33.00" y="1870.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="37" y="116" width="2" height="15" fill="rgb(225,226,53)"/><text x="40.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="37" y="132" width="2" height="15" fill="rgb(218,105,24)"/><text x="40.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="37" y="148" width="2" height="15" fill="rgb(223,22,35)"/><text x="40.00" y="158.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.16%)</title><rect x="49" y="180" width="1" height="15" fill="rgb(210,223,43)"/><text x="52.00" y="190.50"></text></g><g><title>0x7f506afbbff9 (?) (1 samples, 0.16%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(237,227,35)"/><text x="59.00" y="222.50"></text></g><g><title>0x7f506afb6ef6 (?) (1 samples, 0.16%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(205,18,27)"/><text x="59.00" y="238.50"></text></g><g><title>0x7f506afab962 (?) (1 samples, 0.16%)</title><rect x="56" y="244" width="2" height="15" fill="rgb(226,123,10)"/><text x="59.00" y="254.50"></text></g><g><title>0x7f506afdf7a7 (?) (1 samples, 0.16%)</title><rect x="56" y="260" width="2" height="15" fill="rgb(252,43,17)"/><text x="59.00" y="270.50"></text></g><g><title>0x7f506afdf379 (?) (1 samples, 0.16%)</title><rect x="56" y="276" width="2" height="15" fill="rgb(238,183,8)"/><text x="59.00" y="286.50"></text></g><g><title>0x7f506b43d8b8 (?) (1 samples, 0.16%)</title><rect x="56" y="292" width="2" height="15" fill="rgb(239,143,22)"/><text x="59.00" y="302.50"></text></g><g><title>0x7f506b43bc7f (?) (1 samples, 0.16%)</title><rect x="56" y="308" width="2" height="15" fill="rgb(233,225,38)"/><text x="59.00" y="318.50"></text></g><g><title>0x7f506b44e99c (?) (1 samples, 0.16%)</title><rect x="56" y="324" width="2" height="15" fill="rgb(212,113,54)"/><text x="59.00" y="334.50"></text></g><g><title>0x7f506b175dc2 (?) (1 samples, 0.16%)</title><rect x="56" y="340" width="2" height="15" fill="rgb(248,94,42)"/><text x="59.00" y="350.50"></text></g><g><title>0x7f506b175541 (?) (1 samples, 0.16%)</title><rect x="56" y="356" width="2" height="15" fill="rgb(225,128,54)"/><text x="59.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (2 samples, 0.32%)</title><rect x="58" y="212" width="4" height="15" fill="rgb(254,34,20)"/><text x="61.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="58" y="228" width="4" height="15" fill="rgb(248,62,33)"/><text x="61.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="58" y="244" width="4" height="15" fill="rgb(237,93,5)"/><text x="61.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="60" y="260" width="2" height="15" fill="rgb(243,187,27)"/><text x="63.00" y="270.50"></text></g><g><title>0x7f50aaefdd13 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="63" y="260" width="2" height="15" fill="rgb(225,78,1)"/><text x="66.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="65" y="292" width="2" height="15" fill="rgb(231,218,1)"/><text x="68.00" y="302.50"></text></g><g><title>0x7f50aaefd97c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="65" y="308" width="2" height="15" fill="rgb(234,132,17)"/><text x="68.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="67" y="292" width="2" height="15" fill="rgb(250,155,50)"/><text x="70.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="67" y="308" width="2" height="15" fill="rgb(222,105,27)"/><text x="70.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="67" y="324" width="2" height="15" fill="rgb(253,121,0)"/><text x="70.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="69" y="292" width="2" height="15" fill="rgb(237,223,9)"/><text x="72.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="69" y="308" width="2" height="15" fill="rgb(215,12,48)"/><text x="72.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="73" y="356" width="2" height="15" fill="rgb(230,202,33)"/><text x="76.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="75" y="356" width="3" height="15" fill="rgb(245,187,29)"/><text x="78.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="77" y="372" width="1" height="15" fill="rgb(222,132,15)"/><text x="80.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="77" y="388" width="1" height="15" fill="rgb(245,37,15)"/><text x="80.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="77" y="404" width="1" height="15" fill="rgb(237,83,15)"/><text x="80.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="77" y="420" width="1" height="15" fill="rgb(244,93,0)"/><text x="80.00" y="430.50"></text></g><g><title>onnxruntime::SessionState::GetEnableMemoryPattern (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="78" y="356" width="2" height="15" fill="rgb(213,13,6)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.95%)</title><rect x="71" y="340" width="11" height="15" fill="rgb(244,72,54)"/><text x="74.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetMemoryPatternGroup (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="80" y="356" width="2" height="15" fill="rgb(223,135,34)"/><text x="83.00" y="366.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="80" y="372" width="2" height="15" fill="rgb(253,227,38)"/><text x="83.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="80" y="388" width="2" height="15" fill="rgb(231,167,5)"/><text x="83.00" y="398.50"></text></g><g><title>0x7f506af830f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="179" y="356" width="2" height="15" fill="rgb(251,51,9)"/><text x="182.00" y="366.50"></text></g><g><title>0x7f50aaefd908 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="181" y="356" width="2" height="15" fill="rgb(205,58,42)"/><text x="184.00" y="366.50"></text></g><g><title>0x7f50aaefd91c (libc-2.29.so) (2 samples, 0.32%)</title><rect x="183" y="356" width="3" height="15" fill="rgb(208,115,9)"/><text x="186.00" y="366.50"></text></g><g><title>0x7f50aaefd945 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="186" y="356" width="2" height="15" fill="rgb(242,167,49)"/><text x="189.00" y="366.50"></text></g><g><title>0x7f50aaefd961 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="188" y="356" width="2" height="15" fill="rgb(248,96,48)"/><text x="191.00" y="366.50"></text></g><g><title>0x7f50aaefd965 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="190" y="356" width="6" height="15" fill="rgb(206,137,26)"/><text x="193.00" y="366.50"></text></g><g><title>0x7f50aaefd96a (libc-2.29.so) (5 samples, 0.79%)</title><rect x="196" y="356" width="9" height="15" fill="rgb(244,192,41)"/><text x="199.00" y="366.50"></text></g><g><title>0x7f50aaefd97c (libc-2.29.so) (1 samples, 0.16%)</title><rect x="205" y="356" width="2" height="15" fill="rgb(239,157,50)"/><text x="208.00" y="366.50"></text></g><g><title>0x7f50aaefd991 (libc-2.29.so) (5 samples, 0.79%)</title><rect x="207" y="356" width="9" height="15" fill="rgb(236,28,30)"/><text x="210.00" y="366.50"></text></g><g><title>0x7f50aaefd998 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="216" y="356" width="4" height="15" fill="rgb(240,55,51)"/><text x="219.00" y="366.50"></text></g><g><title>0x7f50aaefda41 (libc-2.29.so) (3 samples, 0.47%)</title><rect x="220" y="356" width="5" height="15" fill="rgb(251,51,8)"/><text x="223.00" y="366.50"></text></g><g><title>0x7f50aaefda53 (libc-2.29.so) (4 samples, 0.63%)</title><rect x="225" y="356" width="8" height="15" fill="rgb(241,149,51)"/><text x="228.00" y="366.50"></text></g><g><title>0x7f50aaefda55 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="233" y="356" width="4" height="15" fill="rgb(235,5,42)"/><text x="236.00" y="366.50"></text></g><g><title>0x7f50aaefdbc0 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="237" y="356" width="3" height="15" fill="rgb(228,17,11)"/><text x="240.00" y="366.50"></text></g><g><title>0x7f50aaefdbd8 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="240" y="356" width="2" height="15" fill="rgb(237,44,30)"/><text x="243.00" y="366.50"></text></g><g><title>0x7f50aaefdbe4 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="242" y="356" width="2" height="15" fill="rgb(230,215,12)"/><text x="245.00" y="366.50"></text></g><g><title>0x7f50aaf1e120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="244" y="356" width="2" height="15" fill="rgb(234,55,0)"/><text x="247.00" y="366.50"></text></g><g><title>0x7f50aaf1e12b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="246" y="356" width="2" height="15" fill="rgb(223,226,20)"/><text x="249.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (12 samples, 1.89%)</title><rect x="248" y="356" width="22" height="15" fill="rgb(248,225,7)"/><text x="251.00" y="366.50">f..</text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="270" y="468" width="2" height="15" fill="rgb(213,81,8)"/><text x="273.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="270" y="484" width="2" height="15" fill="rgb(233,226,19)"/><text x="273.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="270" y="500" width="2" height="15" fill="rgb(209,123,12)"/><text x="273.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="356" width="4" height="15" fill="rgb(247,190,12)"/><text x="273.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="372" width="4" height="15" fill="rgb(252,33,6)"/><text x="273.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="388" width="4" height="15" fill="rgb(250,151,24)"/><text x="273.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="404" width="4" height="15" fill="rgb(207,136,27)"/><text x="273.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="420" width="4" height="15" fill="rgb(217,77,23)"/><text x="273.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="436" width="4" height="15" fill="rgb(209,121,40)"/><text x="273.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="270" y="452" width="4" height="15" fill="rgb(252,107,30)"/><text x="273.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="272" y="468" width="2" height="15" fill="rgb(229,170,34)"/><text x="275.00" y="478.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (13 samples, 2.05%)</title><rect x="503" y="388" width="24" height="15" fill="rgb(220,144,20)"/><text x="506.00" y="398.50">o..</text></g><g><title>malloc (libc-2.29.so) (11 samples, 1.74%)</title><rect x="506" y="404" width="21" height="15" fill="rgb(220,176,10)"/><text x="509.00" y="414.50"></text></g><g><title>0x7f50aaf1e120 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="577" y="420" width="4" height="15" fill="rgb(245,124,31)"/><text x="580.00" y="430.50"></text></g><g><title>0x7f50aaf1e14a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="581" y="420" width="2" height="15" fill="rgb(244,122,53)"/><text x="584.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 3.47%)</title><rect x="564" y="404" width="41" height="15" fill="rgb(205,1,54)"/><text x="567.00" y="414.50">std..</text></g><g><title>operator new (libstdc++.so.6.0.28) (12 samples, 1.89%)</title><rect x="583" y="420" width="22" height="15" fill="rgb(215,81,36)"/><text x="586.00" y="430.50">o..</text></g><g><title>malloc (libc-2.29.so) (11 samples, 1.74%)</title><rect x="585" y="436" width="20" height="15" fill="rgb(248,167,25)"/><text x="588.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (242 samples, 38.17%)</title><rect x="274" y="356" width="450" height="15" fill="rgb(234,83,1)"/><text x="277.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNod..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (136 samples, 21.45%)</title><rect x="471" y="372" width="253" height="15" fill="rgb(219,58,34)"/><text x="474.00" y="382.50">std::_Hashtable&lt;long, std::pair&lt;l..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (106 samples, 16.72%)</title><rect x="527" y="388" width="197" height="15" fill="rgb(247,53,26)"/><text x="530.00" y="398.50">std::_Hashtable&lt;long, std..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (64 samples, 10.09%)</title><rect x="605" y="404" width="119" height="15" fill="rgb(252,72,30)"/><text x="608.00" y="414.50">std::__detail:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (33 samples, 5.21%)</title><rect x="663" y="420" width="61" height="15" fill="rgb(245,121,2)"/><text x="666.00" y="430.50">std::_..</text></g><g><title>0x7f50aaf1dd50 (libc-2.29.so) (2 samples, 0.32%)</title><rect x="739" y="372" width="4" height="15" fill="rgb(226,86,46)"/><text x="742.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (11 samples, 1.74%)</title><rect x="724" y="356" width="21" height="15" fill="rgb(223,2,31)"/><text x="727.00" y="366.50"></text></g><g><title>0x7f50aaf1ddc9 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="743" y="372" width="2" height="15" fill="rgb(213,215,26)"/><text x="746.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (5 samples, 0.79%)</title><rect x="745" y="356" width="9" height="15" fill="rgb(208,142,35)"/><text x="748.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 3.79%)</title><rect x="754" y="356" width="45" height="15" fill="rgb(207,128,22)"/><text x="757.00" y="366.50">std:..</text></g><g><title>0x7f509a9c9d50 (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="819" y="388" width="2" height="15" fill="rgb(236,65,48)"/><text x="822.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (409 samples, 64.51%)</title><rect x="71" y="308" width="761" height="15" fill="rgb(223,229,52)"/><text x="74.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (409 samples, 64.51%)</title><rect x="71" y="324" width="761" height="15" fill="rgb(228,36,49)"/><text x="74.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (403 samples, 63.56%)</title><rect x="82" y="340" width="750" height="15" fill="rgb(207,197,38)"/><text x="85.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (18 samples, 2.84%)</title><rect x="799" y="356" width="33" height="15" fill="rgb(228,202,22)"/><text x="802.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (11 samples, 1.74%)</title><rect x="812" y="372" width="20" height="15" fill="rgb(242,9,32)"/><text x="815.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 0.95%)</title><rect x="821" y="388" width="11" height="15" fill="rgb(236,128,20)"/><text x="824.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (413 samples, 65.14%)</title><rect x="65" y="260" width="769" height="15" fill="rgb(226,113,27)"/><text x="68.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (413 samples, 65.14%)</title><rect x="65" y="276" width="769" height="15" fill="rgb(225,156,34)"/><text x="68.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (410 samples, 64.67%)</title><rect x="71" y="292" width="763" height="15" fill="rgb(210,100,37)"/><text x="74.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="832" y="308" width="2" height="15" fill="rgb(251,5,10)"/><text x="835.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="832" y="324" width="2" height="15" fill="rgb(234,167,41)"/><text x="835.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="832" y="340" width="2" height="15" fill="rgb(217,222,29)"/><text x="835.00" y="350.50"></text></g><g><title>0x7f50aaf13e60 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="832" y="356" width="2" height="15" fill="rgb(209,127,29)"/><text x="835.00" y="366.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="834" y="276" width="2" height="15" fill="rgb(228,197,38)"/><text x="837.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="834" y="260" width="4" height="15" fill="rgb(243,181,32)"/><text x="837.00" y="270.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="836" y="276" width="2" height="15" fill="rgb(213,56,30)"/><text x="839.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (418 samples, 65.93%)</title><rect x="62" y="244" width="778" height="15" fill="rgb(250,103,35)"/><text x="65.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vect..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="838" y="260" width="2" height="15" fill="rgb(244,3,52)"/><text x="841.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.16%)</title><rect x="838" y="276" width="2" height="15" fill="rgb(249,195,41)"/><text x="841.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="838" y="292" width="2" height="15" fill="rgb(252,15,44)"/><text x="841.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="838" y="308" width="2" height="15" fill="rgb(231,54,54)"/><text x="841.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="838" y="324" width="2" height="15" fill="rgb(225,24,27)"/><text x="841.00" y="334.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.32%)</title><rect x="840" y="244" width="3" height="15" fill="rgb(250,115,39)"/><text x="843.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="841" y="260" width="2" height="15" fill="rgb(216,145,37)"/><text x="844.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="841" y="276" width="2" height="15" fill="rgb(253,113,47)"/><text x="844.00" y="286.50"></text></g><g><title>0x7f50aaf1dd50 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="841" y="292" width="2" height="15" fill="rgb(228,8,20)"/><text x="844.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (432 samples, 68.14%)</title><rect x="41" y="132" width="804" height="15" fill="rgb(226,184,51)"/><text x="44.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (431 samples, 67.98%)</title><rect x="43" y="148" width="802" height="15" fill="rgb(234,15,8)"/><text x="46.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (430 samples, 67.82%)</title><rect x="45" y="164" width="800" height="15" fill="rgb(224,170,52)"/><text x="48.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (427 samples, 67.35%)</title><rect x="50" y="180" width="795" height="15" fill="rgb(212,159,36)"/><text x="53.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (427 samples, 67.35%)</title><rect x="50" y="196" width="795" height="15" fill="rgb(246,145,32)"/><text x="53.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (421 samples, 66.40%)</title><rect x="62" y="212" width="783" height="15" fill="rgb(210,176,9)"/><text x="65.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (421 samples, 66.40%)</title><rect x="62" y="228" width="783" height="15" fill="rgb(226,49,33)"/><text x="65.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(on..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="843" y="244" width="2" height="15" fill="rgb(229,131,23)"/><text x="846.00" y="254.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (438 samples, 69.09%)</title><rect x="32" y="68" width="815" height="15" fill="rgb(227,193,45)"/><text x="35.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (438 samples, 69.09%)</title><rect x="32" y="84" width="815" height="15" fill="rgb(244,125,18)"/><text x="35.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (438 samples, 69.09%)</title><rect x="32" y="100" width="815" height="15" fill="rgb(229,225,8)"/><text x="35.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (434 samples, 68.45%)</title><rect x="39" y="116" width="808" height="15" fill="rgb(226,188,35)"/><text x="42.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="845" y="132" width="2" height="15" fill="rgb(210,168,18)"/><text x="848.00" y="142.50"></text></g><g><title>0x7f506ba1654f (?) (1 samples, 0.16%)</title><rect x="847" y="244" width="2" height="15" fill="rgb(245,195,14)"/><text x="850.00" y="254.50"></text></g><g><title>0x7f506ba1c65e (?) (1 samples, 0.16%)</title><rect x="847" y="260" width="2" height="15" fill="rgb(221,173,7)"/><text x="850.00" y="270.50"></text></g><g><title>0x7f506ba1c50f (?) (1 samples, 0.16%)</title><rect x="847" y="276" width="2" height="15" fill="rgb(212,158,42)"/><text x="850.00" y="286.50"></text></g><g><title>0x7f506ba22d6c (?) (1 samples, 0.16%)</title><rect x="847" y="292" width="2" height="15" fill="rgb(224,45,10)"/><text x="850.00" y="302.50"></text></g><g><title>0x7f5074f03ab9 (?) (1 samples, 0.16%)</title><rect x="847" y="308" width="2" height="15" fill="rgb(254,99,25)"/><text x="850.00" y="318.50"></text></g><g><title>0x7f5074f04eab (?) (1 samples, 0.16%)</title><rect x="847" y="324" width="2" height="15" fill="rgb(216,124,45)"/><text x="850.00" y="334.50"></text></g><g><title>0x7f5074f04ea9 (libgomp.so.1.0.0) (14 samples, 2.21%)</title><rect x="849" y="484" width="26" height="15" fill="rgb(254,112,40)"/><text x="852.00" y="494.50">0..</text></g><g><title>0x7f5074f04eab (libgomp.so.1.0.0) (14 samples, 2.21%)</title><rect x="875" y="484" width="26" height="15" fill="rgb(251,70,9)"/><text x="878.00" y="494.50">0..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (47 samples, 7.41%)</title><rect x="847" y="68" width="88" height="15" fill="rgb(227,47,1)"/><text x="850.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (47 samples, 7.41%)</title><rect x="847" y="84" width="88" height="15" fill="rgb(210,85,32)"/><text x="850.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (47 samples, 7.41%)</title><rect x="847" y="100" width="88" height="15" fill="rgb(233,60,19)"/><text x="850.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 7.41%)</title><rect x="847" y="116" width="88" height="15" fill="rgb(230,44,23)"/><text x="850.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 7.41%)</title><rect x="847" y="132" width="88" height="15" fill="rgb(240,201,51)"/><text x="850.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (47 samples, 7.41%)</title><rect x="847" y="148" width="88" height="15" fill="rgb(230,189,51)"/><text x="850.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (47 samples, 7.41%)</title><rect x="847" y="164" width="88" height="15" fill="rgb(212,105,39)"/><text x="850.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (47 samples, 7.41%)</title><rect x="847" y="180" width="88" height="15" fill="rgb(208,55,6)"/><text x="850.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (47 samples, 7.41%)</title><rect x="847" y="196" width="88" height="15" fill="rgb(210,228,16)"/><text x="850.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (47 samples, 7.41%)</title><rect x="847" y="212" width="88" height="15" fill="rgb(242,128,21)"/><text x="850.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (47 samples, 7.41%)</title><rect x="847" y="228" width="88" height="15" fill="rgb(229,171,43)"/><text x="850.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (46 samples, 7.26%)</title><rect x="849" y="244" width="86" height="15" fill="rgb(218,159,2)"/><text x="852.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (46 samples, 7.26%)</title><rect x="849" y="260" width="86" height="15" fill="rgb(222,217,28)"/><text x="852.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (46 samples, 7.26%)</title><rect x="849" y="276" width="86" height="15" fill="rgb(234,127,3)"/><text x="852.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (46 samples, 7.26%)</title><rect x="849" y="292" width="86" height="15" fill="rgb(223,54,30)"/><text x="852.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (46 samples, 7.26%)</title><rect x="849" y="308" width="86" height="15" fill="rgb(221,64,51)"/><text x="852.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (46 samples, 7.26%)</title><rect x="849" y="324" width="86" height="15" fill="rgb(232,96,12)"/><text x="852.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (46 samples, 7.26%)</title><rect x="849" y="340" width="86" height="15" fill="rgb(226,30,44)"/><text x="852.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (46 samples, 7.26%)</title><rect x="849" y="356" width="86" height="15" fill="rgb(232,20,15)"/><text x="852.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (46 samples, 7.26%)</title><rect x="849" y="372" width="86" height="15" fill="rgb(246,200,42)"/><text x="852.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (46 samples, 7.26%)</title><rect x="849" y="388" width="86" height="15" fill="rgb(235,221,30)"/><text x="852.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (46 samples, 7.26%)</title><rect x="849" y="404" width="86" height="15" fill="rgb(210,163,12)"/><text x="852.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (46 samples, 7.26%)</title><rect x="849" y="420" width="86" height="15" fill="rgb(248,187,2)"/><text x="852.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (46 samples, 7.26%)</title><rect x="849" y="436" width="86" height="15" fill="rgb(244,55,27)"/><text x="852.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (46 samples, 7.26%)</title><rect x="849" y="452" width="86" height="15" fill="rgb(239,9,5)"/><text x="852.00" y="462.50">std::accum..</text></g><g><title>0x7f5074f03ab9 (libgomp.so.1.0.0) (46 samples, 7.26%)</title><rect x="849" y="468" width="86" height="15" fill="rgb(222,217,11)"/><text x="852.00" y="478.50">0x7f5074f0..</text></g><g><title>0x7f5074f04ead (libgomp.so.1.0.0) (18 samples, 2.84%)</title><rect x="901" y="484" width="34" height="15" fill="rgb(229,155,10)"/><text x="904.00" y="494.50">0x..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="936" y="116" width="2" height="15" fill="rgb(246,179,30)"/><text x="939.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="936" y="132" width="2" height="15" fill="rgb(245,214,40)"/><text x="939.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="936" y="148" width="2" height="15" fill="rgb(229,103,4)"/><text x="939.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="936" y="164" width="2" height="15" fill="rgb(248,147,45)"/><text x="939.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="938" y="148" width="2" height="15" fill="rgb(228,111,17)"/><text x="941.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="938" y="164" width="2" height="15" fill="rgb(213,69,53)"/><text x="941.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="938" y="180" width="2" height="15" fill="rgb(218,194,50)"/><text x="941.00" y="190.50"></text></g><g><title>0x7f5085568f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="944" y="180" width="2" height="15" fill="rgb(217,26,45)"/><text x="947.00" y="190.50"></text></g><g><title>0x7f508555bd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.63%)</title><rect x="946" y="228" width="7" height="15" fill="rgb(248,78,36)"/><text x="949.00" y="238.50"></text></g><g><title>0x7f508555b666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.63%)</title><rect x="946" y="244" width="7" height="15" fill="rgb(242,170,14)"/><text x="949.00" y="254.50"></text></g><g><title>0x7f50855512fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.63%)</title><rect x="946" y="260" width="7" height="15" fill="rgb(240,144,41)"/><text x="949.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.63%)</title><rect x="946" y="276" width="7" height="15" fill="rgb(253,193,51)"/><text x="949.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.63%)</title><rect x="946" y="292" width="7" height="15" fill="rgb(234,38,39)"/><text x="949.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.32%)</title><rect x="949" y="308" width="4" height="15" fill="rgb(220,228,40)"/><text x="952.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.32%)</title><rect x="949" y="324" width="4" height="15" fill="rgb(213,199,14)"/><text x="952.00" y="334.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (2 samples, 0.32%)</title><rect x="949" y="340" width="4" height="15" fill="rgb(207,132,10)"/><text x="952.00" y="350.50"></text></g><g><title>0x7f50855772df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.79%)</title><rect x="946" y="212" width="9" height="15" fill="rgb(253,217,40)"/><text x="949.00" y="222.50"></text></g><g><title>0x7f508555be72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="953" y="228" width="2" height="15" fill="rgb(208,51,2)"/><text x="956.00" y="238.50"></text></g><g><title>0x7f508554efda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="953" y="244" width="2" height="15" fill="rgb(234,45,6)"/><text x="956.00" y="254.50"></text></g><g><title>0x7f508554e902 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="953" y="260" width="2" height="15" fill="rgb(206,36,45)"/><text x="956.00" y="270.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.16%)</title><rect x="957" y="244" width="2" height="15" fill="rgb(219,216,44)"/><text x="960.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.16%)</title><rect x="957" y="260" width="2" height="15" fill="rgb(242,153,3)"/><text x="960.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.16%)</title><rect x="957" y="276" width="2" height="15" fill="rgb(239,123,53)"/><text x="960.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.16%)</title><rect x="957" y="292" width="2" height="15" fill="rgb(247,227,33)"/><text x="960.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="961" y="292" width="1" height="15" fill="rgb(206,29,40)"/><text x="964.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="961" y="308" width="1" height="15" fill="rgb(241,75,25)"/><text x="964.00" y="318.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.16%)</title><rect x="962" y="292" width="2" height="15" fill="rgb(240,43,39)"/><text x="965.00" y="302.50"></text></g><g><title>0x7f5085577592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.10%)</title><rect x="955" y="212" width="13" height="15" fill="rgb(244,197,20)"/><text x="958.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (7 samples, 1.10%)</title><rect x="955" y="228" width="13" height="15" fill="rgb(215,178,40)"/><text x="958.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (5 samples, 0.79%)</title><rect x="959" y="244" width="9" height="15" fill="rgb(214,43,47)"/><text x="962.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (5 samples, 0.79%)</title><rect x="959" y="260" width="9" height="15" fill="rgb(217,74,26)"/><text x="962.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (4 samples, 0.63%)</title><rect x="961" y="276" width="7" height="15" fill="rgb(209,62,13)"/><text x="964.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.32%)</title><rect x="964" y="292" width="4" height="15" fill="rgb(240,110,8)"/><text x="967.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.16%)</title><rect x="966" y="308" width="2" height="15" fill="rgb(248,71,5)"/><text x="969.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="966" y="324" width="2" height="15" fill="rgb(250,1,41)"/><text x="969.00" y="334.50"></text></g><g><title>0x7f5085577680 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="968" y="212" width="2" height="15" fill="rgb(230,58,36)"/><text x="971.00" y="222.50"></text></g><g><title>0x7f5085577698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="970" y="212" width="2" height="15" fill="rgb(207,58,25)"/><text x="973.00" y="222.50"></text></g><g><title>0x7f508557769b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="972" y="212" width="2" height="15" fill="rgb(229,152,31)"/><text x="975.00" y="222.50"></text></g><g><title>0x7f50855776aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (12 samples, 1.89%)</title><rect x="974" y="212" width="22" height="15" fill="rgb(219,67,38)"/><text x="977.00" y="222.50">0..</text></g><g><title>0x7f50855776ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="996" y="212" width="2" height="15" fill="rgb(243,211,25)"/><text x="999.00" y="222.50"></text></g><g><title>0x7f50855776b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="998" y="212" width="4" height="15" fill="rgb(218,142,20)"/><text x="1001.00" y="222.50"></text></g><g><title>0x7f50855776b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1002" y="212" width="1" height="15" fill="rgb(213,115,14)"/><text x="1005.00" y="222.50"></text></g><g><title>0x7f50855776d4 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1003" y="212" width="2" height="15" fill="rgb(236,228,53)"/><text x="1006.00" y="222.50"></text></g><g><title>0x7f50855776e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1005" y="212" width="2" height="15" fill="rgb(216,214,49)"/><text x="1008.00" y="222.50"></text></g><g><title>0x7f50855777a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1007" y="212" width="2" height="15" fill="rgb(215,142,35)"/><text x="1010.00" y="222.50"></text></g><g><title>0x7f50855777b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="1009" y="212" width="4" height="15" fill="rgb(229,137,12)"/><text x="1012.00" y="222.50"></text></g><g><title>0x7f50855778c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1013" y="212" width="2" height="15" fill="rgb(229,42,51)"/><text x="1016.00" y="222.50"></text></g><g><title>0x7f5085578405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (39 samples, 6.15%)</title><rect x="946" y="196" width="72" height="15" fill="rgb(246,178,44)"/><text x="949.00" y="206.50">0x7f5085..</text></g><g><title>0x7f5085577c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="1015" y="212" width="3" height="15" fill="rgb(242,198,35)"/><text x="1018.00" y="222.50"></text></g><g><title>0x7f508554f529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.32%)</title><rect x="1015" y="228" width="3" height="15" fill="rgb(237,81,43)"/><text x="1018.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.32%)</title><rect x="1015" y="244" width="3" height="15" fill="rgb(252,82,4)"/><text x="1018.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.32%)</title><rect x="1015" y="260" width="3" height="15" fill="rgb(212,122,15)"/><text x="1018.00" y="270.50"></text></g><g><title>0x7f5085568fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (40 samples, 6.31%)</title><rect x="946" y="180" width="74" height="15" fill="rgb(214,0,52)"/><text x="949.00" y="190.50">0x7f5085..</text></g><g><title>0x7f5085578540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1018" y="196" width="2" height="15" fill="rgb(233,2,38)"/><text x="1021.00" y="206.50"></text></g><g><title>0x7f508554d2f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1018" y="212" width="2" height="15" fill="rgb(210,98,3)"/><text x="1021.00" y="222.50"></text></g><g><title>0x7f508554c4dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1018" y="228" width="2" height="15" fill="rgb(233,29,4)"/><text x="1021.00" y="238.50"></text></g><g><title>0x7f5085568ff3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1020" y="180" width="2" height="15" fill="rgb(233,163,21)"/><text x="1023.00" y="190.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (3 samples, 0.47%)</title><rect x="1026" y="228" width="5" height="15" fill="rgb(228,188,34)"/><text x="1029.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (5 samples, 0.79%)</title><rect x="1026" y="212" width="9" height="15" fill="rgb(235,188,12)"/><text x="1029.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.32%)</title><rect x="1031" y="228" width="4" height="15" fill="rgb(244,149,4)"/><text x="1034.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.32%)</title><rect x="1031" y="244" width="4" height="15" fill="rgb(247,73,0)"/><text x="1034.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1033" y="260" width="2" height="15" fill="rgb(217,75,23)"/><text x="1036.00" y="270.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.16%)</title><rect x="1033" y="276" width="2" height="15" fill="rgb(225,223,21)"/><text x="1036.00" y="286.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.16%)</title><rect x="1033" y="292" width="2" height="15" fill="rgb(210,24,25)"/><text x="1036.00" y="302.50"></text></g><g><title>0x7f508556905a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.26%)</title><rect x="1022" y="180" width="15" height="15" fill="rgb(248,50,54)"/><text x="1025.00" y="190.50"></text></g><g><title>array_take (methods.c) (8 samples, 1.26%)</title><rect x="1022" y="196" width="15" height="15" fill="rgb(244,53,36)"/><text x="1025.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="1035" y="212" width="2" height="15" fill="rgb(229,146,54)"/><text x="1038.00" y="222.50"></text></g><g><title>0x7f5085569062 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1037" y="180" width="2" height="15" fill="rgb(254,204,16)"/><text x="1040.00" y="190.50"></text></g><g><title>0x7f5085543d00 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1037" y="196" width="2" height="15" fill="rgb(219,213,11)"/><text x="1040.00" y="206.50"></text></g><g><title>0x7f508556914f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.47%)</title><rect x="1039" y="180" width="5" height="15" fill="rgb(242,160,27)"/><text x="1042.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.32%)</title><rect x="1041" y="196" width="3" height="15" fill="rgb(241,46,21)"/><text x="1044.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.32%)</title><rect x="1041" y="212" width="3" height="15" fill="rgb(245,122,7)"/><text x="1044.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.32%)</title><rect x="1041" y="228" width="3" height="15" fill="rgb(212,149,32)"/><text x="1044.00" y="238.50"></text></g><g><title>0x7f5085569d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (55 samples, 8.68%)</title><rect x="944" y="164" width="102" height="15" fill="rgb(250,52,2)"/><text x="947.00" y="174.50">0x7f5085569d..</text></g><g><title>0x7f50855691bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="1044" y="180" width="2" height="15" fill="rgb(244,147,54)"/><text x="1047.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.16%)</title><rect x="1044" y="196" width="2" height="15" fill="rgb(227,187,33)"/><text x="1047.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (4 samples, 0.63%)</title><rect x="1082" y="196" width="7" height="15" fill="rgb(232,139,6)"/><text x="1085.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.16%)</title><rect x="1089" y="196" width="2" height="15" fill="rgb(230,128,42)"/><text x="1092.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="1093" y="212" width="2" height="15" fill="rgb(245,140,0)"/><text x="1096.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.79%)</title><rect x="1095" y="212" width="9" height="15" fill="rgb(222,73,3)"/><text x="1098.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (10 samples, 1.58%)</title><rect x="1091" y="196" width="18" height="15" fill="rgb(231,218,21)"/><text x="1094.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (3 samples, 0.47%)</title><rect x="1104" y="212" width="5" height="15" fill="rgb(241,83,13)"/><text x="1107.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.16%)</title><rect x="1124" y="212" width="2" height="15" fill="rgb(242,122,19)"/><text x="1127.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (15 samples, 2.37%)</title><rect x="1109" y="196" width="28" height="15" fill="rgb(225,14,9)"/><text x="1112.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py) (6 samples, 0.95%)</title><rect x="1126" y="212" width="11" height="15" fill="rgb(247,4,1)"/><text x="1129.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.47%)</title><rect x="1132" y="228" width="5" height="15" fill="rgb(251,0,26)"/><text x="1135.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.16%)</title><rect x="1137" y="196" width="2" height="15" fill="rgb(223,52,50)"/><text x="1140.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1137" y="212" width="2" height="15" fill="rgb(206,139,42)"/><text x="1140.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="1137" y="228" width="2" height="15" fill="rgb(237,207,40)"/><text x="1140.00" y="238.50"></text></g><g><title>0x7f50aafdb130 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1137" y="244" width="2" height="15" fill="rgb(219,202,34)"/><text x="1140.00" y="254.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.16%)</title><rect x="1139" y="196" width="2" height="15" fill="rgb(216,48,23)"/><text x="1142.00" y="206.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (58 samples, 9.15%)</title><rect x="1046" y="164" width="108" height="15" fill="rgb(216,152,17)"/><text x="1049.00" y="174.50">_validate_X_p..</text></g><g><title>check_array (sklearn/utils/validation.py) (53 samples, 8.36%)</title><rect x="1055" y="180" width="99" height="15" fill="rgb(219,123,48)"/><text x="1058.00" y="190.50">check_array..</text></g><g><title>simplefilter (warnings.py) (7 samples, 1.10%)</title><rect x="1141" y="196" width="13" height="15" fill="rgb(250,97,15)"/><text x="1144.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (6 samples, 0.95%)</title><rect x="1143" y="212" width="11" height="15" fill="rgb(206,24,42)"/><text x="1146.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.47%)</title><rect x="1173" y="196" width="5" height="15" fill="rgb(242,188,47)"/><text x="1176.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (16 samples, 2.52%)</title><rect x="1154" y="164" width="30" height="15" fill="rgb(218,86,17)"/><text x="1157.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 2.21%)</title><rect x="1158" y="180" width="26" height="15" fill="rgb(219,66,54)"/><text x="1161.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.47%)</title><rect x="1178" y="196" width="6" height="15" fill="rgb(239,157,26)"/><text x="1181.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (133 samples, 20.98%)</title><rect x="938" y="132" width="248" height="15" fill="rgb(249,198,6)"/><text x="941.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark..</text></g><g><title>predict (sklearn/tree/_classes.py) (132 samples, 20.82%)</title><rect x="940" y="148" width="246" height="15" fill="rgb(226,165,42)"/><text x="943.00" y="158.50">predict (sklearn/tree/_classes.p..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.16%)</title><rect x="1184" y="164" width="2" height="15" fill="rgb(227,184,54)"/><text x="1187.00" y="174.50"></text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (136 samples, 21.45%)</title><rect x="935" y="68" width="253" height="15" fill="rgb(232,148,22)"/><text x="938.00" y="78.50">profile_skl (bench_DecisionTreeRe..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (136 samples, 21.45%)</title><rect x="935" y="84" width="253" height="15" fill="rgb(229,103,20)"/><text x="938.00" y="94.50">setup_profile (bench_DecisionTree..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (136 samples, 21.45%)</title><rect x="935" y="100" width="253" height="15" fill="rgb(237,180,49)"/><text x="938.00" y="110.50">profile (bench_DecisionTreeRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (134 samples, 21.14%)</title><rect x="938" y="116" width="250" height="15" fill="rgb(210,23,7)"/><text x="941.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.16%)</title><rect x="1186" y="132" width="2" height="15" fill="rgb(229,130,31)"/><text x="1189.00" y="142.50"></text></g><g><title>all (634 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(243,194,39)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (634 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(238,226,15)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (1 samples, 0.16%)</title><rect x="1188" y="68" width="2" height="15" fill="rgb(219,205,38)"/><text x="1191.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (1 samples, 0.16%)</title><rect x="1188" y="84" width="2" height="15" fill="rgb(244,190,6)"/><text x="1191.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.16%)</title><rect x="1188" y="100" width="2" height="15" fill="rgb(251,195,31)"/><text x="1191.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.16%)</title><rect x="1188" y="116" width="2" height="15" fill="rgb(215,14,33)"/><text x="1191.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.16%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(222,97,18)"/><text x="1191.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="1188" y="148" width="2" height="15" fill="rgb(251,181,23)"/><text x="1191.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="1188" y="164" width="2" height="15" fill="rgb(224,4,40)"/><text x="1191.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(212,41,15)"/><text x="1191.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py) (1 samples, 0.16%)</title><rect x="1188" y="196" width="2" height="15" fill="rgb(237,110,26)"/><text x="1191.00" y="206.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1188" y="212" width="2" height="15" fill="rgb(230,37,42)"/><text x="1191.00" y="222.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1188" y="228" width="2" height="15" fill="rgb(231,59,28)"/><text x="1191.00" y="238.50"></text></g></g></svg>