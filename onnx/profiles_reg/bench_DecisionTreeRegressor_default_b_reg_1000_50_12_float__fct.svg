<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2150" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2133.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2133.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(244,223,45)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(244,110,20)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(240,129,4)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(254,4,34)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(234,157,27)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(214,51,13)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(230,203,22)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="980" width="2" height="15" fill="rgb(220,207,49)"/><text x="14.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="996" width="2" height="15" fill="rgb(240,180,38)"/><text x="14.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="11" y="1012" width="2" height="15" fill="rgb(223,11,28)"/><text x="14.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="11" y="1028" width="2" height="15" fill="rgb(233,147,38)"/><text x="14.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.17%)</title><rect x="11" y="1044" width="2" height="15" fill="rgb(244,118,15)"/><text x="14.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="196" width="5" height="15" fill="rgb(236,60,3)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="212" width="5" height="15" fill="rgb(205,187,22)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="228" width="5" height="15" fill="rgb(213,182,26)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="244" width="5" height="15" fill="rgb(210,98,53)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="10" y="260" width="5" height="15" fill="rgb(246,47,36)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="276" width="5" height="15" fill="rgb(214,167,14)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.50%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(241,116,10)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(207,189,42)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(233,103,12)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(216,118,32)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(215,88,35)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(248,183,35)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.50%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(245,119,5)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(210,31,32)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(239,223,49)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(247,138,11)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(222,83,7)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(247,153,17)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.50%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(221,9,50)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(205,200,29)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(241,54,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(214,201,27)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(239,197,15)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(234,168,44)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.50%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(225,141,11)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(235,28,49)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(220,52,49)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(249,194,16)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(211,208,18)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(225,180,15)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(241,73,11)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(213,155,7)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(224,94,41)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.50%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(235,202,34)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(206,22,3)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(250,24,11)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(241,129,24)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(251,29,52)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(236,122,43)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(242,173,30)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(219,2,13)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.50%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(254,147,34)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(242,54,50)"/><text x="16.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(253,146,0)"/><text x="16.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(238,12,35)"/><text x="16.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.17%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(232,215,8)"/><text x="16.00" y="926.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.17%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(252,136,7)"/><text x="16.00" y="942.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.17%)</title><rect x="15" y="1204" width="2" height="15" fill="rgb(224,107,4)"/><text x="18.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1220" width="2" height="15" fill="rgb(209,40,2)"/><text x="18.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1236" width="2" height="15" fill="rgb(240,187,52)"/><text x="18.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1252" width="2" height="15" fill="rgb(207,113,13)"/><text x="18.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="15" y="1268" width="2" height="15" fill="rgb(213,119,5)"/><text x="18.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1284" width="2" height="15" fill="rgb(253,108,21)"/><text x="18.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.17%)</title><rect x="15" y="1300" width="2" height="15" fill="rgb(252,118,47)"/><text x="18.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1316" width="2" height="15" fill="rgb(209,150,39)"/><text x="18.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1332" width="2" height="15" fill="rgb(242,209,20)"/><text x="18.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1348" width="2" height="15" fill="rgb(234,42,51)"/><text x="18.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="15" y="1364" width="2" height="15" fill="rgb(219,92,3)"/><text x="18.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1380" width="2" height="15" fill="rgb(210,205,51)"/><text x="18.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/impute/__init__.py) (1 samples, 0.17%)</title><rect x="15" y="1396" width="2" height="15" fill="rgb(248,191,19)"/><text x="18.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1412" width="2" height="15" fill="rgb(234,115,44)"/><text x="18.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1428" width="2" height="15" fill="rgb(248,213,37)"/><text x="18.00" y="1438.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="15" y="1444" width="2" height="15" fill="rgb(223,162,8)"/><text x="18.00" y="1454.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="15" y="1460" width="2" height="15" fill="rgb(226,70,14)"/><text x="18.00" y="1470.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="15" y="1476" width="2" height="15" fill="rgb(209,188,5)"/><text x="18.00" y="1486.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="15" y="1492" width="2" height="15" fill="rgb(246,149,17)"/><text x="18.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="15" y="1124" width="4" height="15" fill="rgb(239,3,7)"/><text x="18.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="15" y="1140" width="4" height="15" fill="rgb(231,226,7)"/><text x="18.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="15" y="1156" width="4" height="15" fill="rgb(207,33,30)"/><text x="18.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="15" y="1172" width="4" height="15" fill="rgb(241,126,26)"/><text x="18.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="15" y="1188" width="4" height="15" fill="rgb(250,60,0)"/><text x="18.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.17%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(240,140,52)"/><text x="20.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(251,88,38)"/><text x="20.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1236" width="2" height="15" fill="rgb(216,3,40)"/><text x="20.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1252" width="2" height="15" fill="rgb(239,80,5)"/><text x="20.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="17" y="1268" width="2" height="15" fill="rgb(208,128,22)"/><text x="20.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="17" y="1284" width="2" height="15" fill="rgb(231,53,4)"/><text x="20.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.17%)</title><rect x="17" y="1300" width="2" height="15" fill="rgb(205,185,10)"/><text x="20.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.17%)</title><rect x="17" y="1316" width="2" height="15" fill="rgb(238,179,54)"/><text x="20.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.17%)</title><rect x="17" y="1332" width="2" height="15" fill="rgb(240,128,26)"/><text x="20.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.17%)</title><rect x="17" y="1348" width="2" height="15" fill="rgb(226,202,48)"/><text x="20.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.17%)</title><rect x="17" y="1364" width="2" height="15" fill="rgb(207,16,47)"/><text x="20.00" y="1374.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.17%)</title><rect x="19" y="1508" width="2" height="15" fill="rgb(222,5,12)"/><text x="22.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.17%)</title><rect x="19" y="1524" width="2" height="15" fill="rgb(225,19,48)"/><text x="22.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="19" y="1540" width="2" height="15" fill="rgb(224,107,51)"/><text x="22.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.17%)</title><rect x="19" y="1556" width="2" height="15" fill="rgb(208,115,0)"/><text x="22.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.17%)</title><rect x="19" y="1572" width="2" height="15" fill="rgb(220,171,7)"/><text x="22.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.17%)</title><rect x="19" y="1588" width="2" height="15" fill="rgb(212,150,42)"/><text x="22.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py) (1 samples, 0.17%)</title><rect x="19" y="1604" width="2" height="15" fill="rgb(250,20,9)"/><text x="22.00" y="1614.50"></text></g><g><title>0x7fc02f60694d (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="19" y="1620" width="2" height="15" fill="rgb(252,127,0)"/><text x="22.00" y="1630.50"></text></g><g><title>google::protobuf::Message::_InternalParse (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="19" y="1636" width="2" height="15" fill="rgb(225,53,41)"/><text x="22.00" y="1646.50"></text></g><g><title>0x7fc02f6c75aa (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="19" y="1652" width="2" height="15" fill="rgb(233,183,50)"/><text x="22.00" y="1662.50"></text></g><g><title>google::protobuf::internal::EpsCopyInputStream::DoneFallback (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="19" y="1668" width="2" height="15" fill="rgb(220,43,15)"/><text x="22.00" y="1678.50"></text></g><g><title>onnx::FunctionProto::FunctionProto (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="21" y="1556" width="2" height="15" fill="rgb(219,190,50)"/><text x="24.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="484" width="10" height="15" fill="rgb(233,182,53)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="500" width="10" height="15" fill="rgb(239,94,1)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="516" width="10" height="15" fill="rgb(240,60,53)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="532" width="10" height="15" fill="rgb(238,187,20)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="15" y="548" width="10" height="15" fill="rgb(219,101,25)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="564" width="10" height="15" fill="rgb(225,144,16)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (5 samples, 0.83%)</title><rect x="15" y="580" width="10" height="15" fill="rgb(205,38,39)"/><text x="18.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="596" width="10" height="15" fill="rgb(229,193,26)"/><text x="18.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="612" width="10" height="15" fill="rgb(208,62,49)"/><text x="18.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="628" width="10" height="15" fill="rgb(229,160,33)"/><text x="18.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="15" y="644" width="10" height="15" fill="rgb(223,170,27)"/><text x="18.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="660" width="10" height="15" fill="rgb(246,156,19)"/><text x="18.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (5 samples, 0.83%)</title><rect x="15" y="676" width="10" height="15" fill="rgb(243,197,38)"/><text x="18.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="692" width="10" height="15" fill="rgb(242,139,31)"/><text x="18.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="708" width="10" height="15" fill="rgb(219,37,17)"/><text x="18.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="724" width="10" height="15" fill="rgb(217,72,38)"/><text x="18.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="15" y="740" width="10" height="15" fill="rgb(228,67,46)"/><text x="18.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="756" width="10" height="15" fill="rgb(237,45,24)"/><text x="18.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (5 samples, 0.83%)</title><rect x="15" y="772" width="10" height="15" fill="rgb(241,43,3)"/><text x="18.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="788" width="10" height="15" fill="rgb(252,192,11)"/><text x="18.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="804" width="10" height="15" fill="rgb(245,95,24)"/><text x="18.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="820" width="10" height="15" fill="rgb(235,37,45)"/><text x="18.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="15" y="836" width="10" height="15" fill="rgb(233,38,38)"/><text x="18.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="852" width="10" height="15" fill="rgb(219,29,54)"/><text x="18.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (5 samples, 0.83%)</title><rect x="15" y="868" width="10" height="15" fill="rgb(249,43,47)"/><text x="18.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="884" width="10" height="15" fill="rgb(237,213,38)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="900" width="10" height="15" fill="rgb(228,195,54)"/><text x="18.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="916" width="10" height="15" fill="rgb(221,70,54)"/><text x="18.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="932" width="10" height="15" fill="rgb(252,44,14)"/><text x="18.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="948" width="10" height="15" fill="rgb(220,110,16)"/><text x="18.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="964" width="10" height="15" fill="rgb(244,69,54)"/><text x="18.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="15" y="980" width="10" height="15" fill="rgb(223,223,36)"/><text x="18.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="996" width="10" height="15" fill="rgb(215,80,52)"/><text x="18.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (5 samples, 0.83%)</title><rect x="15" y="1012" width="10" height="15" fill="rgb(208,128,18)"/><text x="18.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="1028" width="10" height="15" fill="rgb(222,200,39)"/><text x="18.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="1044" width="10" height="15" fill="rgb(207,22,22)"/><text x="18.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="1060" width="10" height="15" fill="rgb(248,146,7)"/><text x="18.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="15" y="1076" width="10" height="15" fill="rgb(241,7,1)"/><text x="18.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="15" y="1092" width="10" height="15" fill="rgb(235,213,36)"/><text x="18.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (5 samples, 0.83%)</title><rect x="15" y="1108" width="10" height="15" fill="rgb(220,227,14)"/><text x="18.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1124" width="6" height="15" fill="rgb(228,165,45)"/><text x="22.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1140" width="6" height="15" fill="rgb(246,28,13)"/><text x="22.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1156" width="6" height="15" fill="rgb(217,63,23)"/><text x="22.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1172" width="6" height="15" fill="rgb(224,155,51)"/><text x="22.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1188" width="6" height="15" fill="rgb(223,171,12)"/><text x="22.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="19" y="1204" width="6" height="15" fill="rgb(249,197,27)"/><text x="22.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1220" width="6" height="15" fill="rgb(248,124,20)"/><text x="22.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.50%)</title><rect x="19" y="1236" width="6" height="15" fill="rgb(230,186,50)"/><text x="22.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1252" width="6" height="15" fill="rgb(211,122,23)"/><text x="22.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1268" width="6" height="15" fill="rgb(239,17,9)"/><text x="22.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1284" width="6" height="15" fill="rgb(231,212,18)"/><text x="22.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1300" width="6" height="15" fill="rgb(210,83,0)"/><text x="22.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1316" width="6" height="15" fill="rgb(208,22,2)"/><text x="22.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="19" y="1332" width="6" height="15" fill="rgb(212,61,33)"/><text x="22.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1348" width="6" height="15" fill="rgb(234,139,42)"/><text x="22.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.50%)</title><rect x="19" y="1364" width="6" height="15" fill="rgb(244,184,35)"/><text x="22.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1380" width="6" height="15" fill="rgb(217,218,21)"/><text x="22.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1396" width="6" height="15" fill="rgb(217,64,24)"/><text x="22.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1412" width="6" height="15" fill="rgb(238,149,36)"/><text x="22.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="19" y="1428" width="6" height="15" fill="rgb(224,11,3)"/><text x="22.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="19" y="1444" width="6" height="15" fill="rgb(246,198,2)"/><text x="22.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.50%)</title><rect x="19" y="1460" width="6" height="15" fill="rgb(219,73,40)"/><text x="22.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.50%)</title><rect x="19" y="1476" width="6" height="15" fill="rgb(225,105,50)"/><text x="22.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.50%)</title><rect x="19" y="1492" width="6" height="15" fill="rgb(232,151,46)"/><text x="22.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="21" y="1508" width="4" height="15" fill="rgb(210,2,15)"/><text x="24.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="21" y="1524" width="4" height="15" fill="rgb(226,215,6)"/><text x="24.00" y="1534.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="21" y="1540" width="4" height="15" fill="rgb(248,31,27)"/><text x="24.00" y="1550.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::pair&lt;std::unordered_set&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, true&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="23" y="1556" width="2" height="15" fill="rgb(222,13,2)"/><text x="26.00" y="1566.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="23" y="1572" width="2" height="15" fill="rgb(218,215,22)"/><text x="26.00" y="1582.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="23" y="1588" width="2" height="15" fill="rgb(231,192,43)"/><text x="26.00" y="1598.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="23" y="1604" width="2" height="15" fill="rgb(230,221,31)"/><text x="26.00" y="1614.50"></text></g><g><title>0x7fc016a9b40e (?) (1 samples, 0.17%)</title><rect x="25" y="916" width="2" height="15" fill="rgb(228,119,9)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="932" width="2" height="15" fill="rgb(236,13,44)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="948" width="2" height="15" fill="rgb(214,92,13)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="964" width="2" height="15" fill="rgb(208,80,52)"/><text x="28.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="980" width="2" height="15" fill="rgb(232,34,31)"/><text x="28.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="996" width="2" height="15" fill="rgb(245,190,8)"/><text x="28.00" y="1006.50"></text></g><g><title>0x7fc016854cd2 (?) (1 samples, 0.17%)</title><rect x="25" y="1012" width="2" height="15" fill="rgb(215,208,8)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1028" width="2" height="15" fill="rgb(213,57,43)"/><text x="28.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1044" width="2" height="15" fill="rgb(211,149,16)"/><text x="28.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1060" width="2" height="15" fill="rgb(215,221,8)"/><text x="28.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="1076" width="2" height="15" fill="rgb(225,18,23)"/><text x="28.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1092" width="2" height="15" fill="rgb(206,35,5)"/><text x="28.00" y="1102.50"></text></g><g><title>0x7fc015f4a0e5 (?) (1 samples, 0.17%)</title><rect x="25" y="1108" width="2" height="15" fill="rgb(220,72,39)"/><text x="28.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1124" width="2" height="15" fill="rgb(250,119,34)"/><text x="28.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1140" width="2" height="15" fill="rgb(207,5,33)"/><text x="28.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1156" width="2" height="15" fill="rgb(234,51,0)"/><text x="28.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="1172" width="2" height="15" fill="rgb(208,72,21)"/><text x="28.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1188" width="2" height="15" fill="rgb(253,196,7)"/><text x="28.00" y="1198.50"></text></g><g><title>0x7fc015ccee68 (?) (1 samples, 0.17%)</title><rect x="25" y="1204" width="2" height="15" fill="rgb(242,187,14)"/><text x="28.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1220" width="2" height="15" fill="rgb(214,138,21)"/><text x="28.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1236" width="2" height="15" fill="rgb(225,186,15)"/><text x="28.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1252" width="2" height="15" fill="rgb(239,128,24)"/><text x="28.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="1268" width="2" height="15" fill="rgb(251,191,4)"/><text x="28.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1284" width="2" height="15" fill="rgb(212,43,37)"/><text x="28.00" y="1294.50"></text></g><g><title>0x7fc015a5f2fb (?) (1 samples, 0.17%)</title><rect x="25" y="1300" width="2" height="15" fill="rgb(248,20,7)"/><text x="28.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1316" width="2" height="15" fill="rgb(213,205,28)"/><text x="28.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1332" width="2" height="15" fill="rgb(207,51,3)"/><text x="28.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1348" width="2" height="15" fill="rgb(216,169,35)"/><text x="28.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="1364" width="2" height="15" fill="rgb(216,8,47)"/><text x="28.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1380" width="2" height="15" fill="rgb(208,17,18)"/><text x="28.00" y="1390.50"></text></g><g><title>0x7fc015843153 (?) (1 samples, 0.17%)</title><rect x="25" y="1396" width="2" height="15" fill="rgb(212,97,51)"/><text x="28.00" y="1406.50"></text></g><g><title>0x7fc015841c13 (?) (1 samples, 0.17%)</title><rect x="25" y="1412" width="2" height="15" fill="rgb(217,166,41)"/><text x="28.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1428" width="2" height="15" fill="rgb(205,27,20)"/><text x="28.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1444" width="2" height="15" fill="rgb(228,189,20)"/><text x="28.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1460" width="2" height="15" fill="rgb(237,130,41)"/><text x="28.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="25" y="1476" width="2" height="15" fill="rgb(218,30,11)"/><text x="28.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="25" y="1492" width="2" height="15" fill="rgb(244,211,25)"/><text x="28.00" y="1502.50"></text></g><g><title>0x7fc0155de181 (?) (1 samples, 0.17%)</title><rect x="25" y="1508" width="2" height="15" fill="rgb(250,102,19)"/><text x="28.00" y="1518.50"></text></g><g><title>0x7fc0155e11c9 (?) (1 samples, 0.17%)</title><rect x="25" y="1524" width="2" height="15" fill="rgb(254,54,52)"/><text x="28.00" y="1534.50"></text></g><g><title>0x7fc01560d167 (?) (1 samples, 0.17%)</title><rect x="25" y="1540" width="2" height="15" fill="rgb(226,137,53)"/><text x="28.00" y="1550.50"></text></g><g><title>0x7fc015608b64 (?) (1 samples, 0.17%)</title><rect x="25" y="1556" width="2" height="15" fill="rgb(230,166,51)"/><text x="28.00" y="1566.50"></text></g><g><title>0x7fc0155ec07b (?) (1 samples, 0.17%)</title><rect x="25" y="1572" width="2" height="15" fill="rgb(213,161,14)"/><text x="28.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (1 samples, 0.17%)</title><rect x="25" y="1588" width="2" height="15" fill="rgb(214,58,3)"/><text x="28.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (1 samples, 0.17%)</title><rect x="25" y="1604" width="2" height="15" fill="rgb(207,215,26)"/><text x="28.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (1 samples, 0.17%)</title><rect x="25" y="1620" width="2" height="15" fill="rgb(250,59,20)"/><text x="28.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (1 samples, 0.17%)</title><rect x="25" y="1636" width="2" height="15" fill="rgb(205,59,11)"/><text x="28.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.17%)</title><rect x="25" y="1652" width="2" height="15" fill="rgb(212,6,29)"/><text x="28.00" y="1662.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.17%)</title><rect x="25" y="1668" width="2" height="15" fill="rgb(252,198,34)"/><text x="28.00" y="1678.50"></text></g><g><title>dirname (posixpath.py) (1 samples, 0.17%)</title><rect x="27" y="1652" width="2" height="15" fill="rgb(247,106,2)"/><text x="30.00" y="1662.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.17%)</title><rect x="27" y="1668" width="2" height="15" fill="rgb(210,105,17)"/><text x="30.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.50%)</title><rect x="25" y="724" width="6" height="15" fill="rgb(228,202,30)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="740" width="6" height="15" fill="rgb(252,4,29)"/><text x="28.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="756" width="6" height="15" fill="rgb(217,57,7)"/><text x="28.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="772" width="6" height="15" fill="rgb(247,41,15)"/><text x="28.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="25" y="788" width="6" height="15" fill="rgb(217,190,42)"/><text x="28.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="804" width="6" height="15" fill="rgb(227,15,48)"/><text x="28.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.50%)</title><rect x="25" y="820" width="6" height="15" fill="rgb(213,34,29)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="836" width="6" height="15" fill="rgb(230,164,52)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="852" width="6" height="15" fill="rgb(232,80,3)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="868" width="6" height="15" fill="rgb(219,178,33)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.50%)</title><rect x="25" y="884" width="6" height="15" fill="rgb(221,0,50)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.50%)</title><rect x="25" y="900" width="6" height="15" fill="rgb(241,97,39)"/><text x="28.00" y="910.50"></text></g><g><title>0x7fc016a9b40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="916" width="4" height="15" fill="rgb(220,172,43)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="932" width="4" height="15" fill="rgb(224,190,30)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="948" width="4" height="15" fill="rgb(233,43,27)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="964" width="4" height="15" fill="rgb(251,224,35)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="27" y="980" width="4" height="15" fill="rgb(213,90,2)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="996" width="4" height="15" fill="rgb(241,224,21)"/><text x="30.00" y="1006.50"></text></g><g><title>0x7fc016854cd2 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1012" width="4" height="15" fill="rgb(253,30,29)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1028" width="4" height="15" fill="rgb(235,149,26)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1044" width="4" height="15" fill="rgb(239,166,48)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1060" width="4" height="15" fill="rgb(217,140,14)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="27" y="1076" width="4" height="15" fill="rgb(206,33,15)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1092" width="4" height="15" fill="rgb(223,101,25)"/><text x="30.00" y="1102.50"></text></g><g><title>0x7fc015f4a0e5 (pandas/_libs/tslibs/tzconversion.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1108" width="4" height="15" fill="rgb(211,50,30)"/><text x="30.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1124" width="4" height="15" fill="rgb(209,95,1)"/><text x="30.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1140" width="4" height="15" fill="rgb(213,188,45)"/><text x="30.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1156" width="4" height="15" fill="rgb(210,213,5)"/><text x="30.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="27" y="1172" width="4" height="15" fill="rgb(251,166,17)"/><text x="30.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1188" width="4" height="15" fill="rgb(221,66,40)"/><text x="30.00" y="1198.50"></text></g><g><title>0x7fc015ccee68 (pandas/_libs/tslibs/timedeltas.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1204" width="4" height="15" fill="rgb(236,68,39)"/><text x="30.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1220" width="4" height="15" fill="rgb(230,211,13)"/><text x="30.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1236" width="4" height="15" fill="rgb(225,146,37)"/><text x="30.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1252" width="4" height="15" fill="rgb(232,67,24)"/><text x="30.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="27" y="1268" width="4" height="15" fill="rgb(205,229,47)"/><text x="30.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1284" width="4" height="15" fill="rgb(225,10,44)"/><text x="30.00" y="1294.50"></text></g><g><title>0x7fc015a5f2fb (pandas/_libs/tslibs/offsets.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1300" width="4" height="15" fill="rgb(220,96,10)"/><text x="30.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1316" width="4" height="15" fill="rgb(208,4,10)"/><text x="30.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1332" width="4" height="15" fill="rgb(212,149,45)"/><text x="30.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1348" width="4" height="15" fill="rgb(214,95,39)"/><text x="30.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="27" y="1364" width="4" height="15" fill="rgb(230,154,31)"/><text x="30.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1380" width="4" height="15" fill="rgb(235,16,20)"/><text x="30.00" y="1390.50"></text></g><g><title>0x7fc015843153 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1396" width="4" height="15" fill="rgb(219,156,8)"/><text x="30.00" y="1406.50"></text></g><g><title>0x7fc015841c13 (pandas/_libs/tslibs/ccalendar.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1412" width="4" height="15" fill="rgb(230,110,5)"/><text x="30.00" y="1422.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1428" width="4" height="15" fill="rgb(251,21,42)"/><text x="30.00" y="1438.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1444" width="4" height="15" fill="rgb(244,192,30)"/><text x="30.00" y="1454.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1460" width="4" height="15" fill="rgb(226,65,2)"/><text x="30.00" y="1470.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="27" y="1476" width="4" height="15" fill="rgb(205,95,45)"/><text x="30.00" y="1486.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="27" y="1492" width="4" height="15" fill="rgb(208,224,45)"/><text x="30.00" y="1502.50"></text></g><g><title>0x7fc0155de181 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1508" width="4" height="15" fill="rgb(210,21,25)"/><text x="30.00" y="1518.50"></text></g><g><title>0x7fc0155e11c9 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1524" width="4" height="15" fill="rgb(225,199,53)"/><text x="30.00" y="1534.50"></text></g><g><title>0x7fc01560d167 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1540" width="4" height="15" fill="rgb(244,187,35)"/><text x="30.00" y="1550.50"></text></g><g><title>0x7fc015608b64 (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1556" width="4" height="15" fill="rgb(250,104,11)"/><text x="30.00" y="1566.50"></text></g><g><title>0x7fc0155ec07b (pandas/_libs/tslibs/strptime.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="27" y="1572" width="4" height="15" fill="rgb(242,169,9)"/><text x="30.00" y="1582.50"></text></g><g><title>_lazy (pytz/lazy.py) (2 samples, 0.33%)</title><rect x="27" y="1588" width="4" height="15" fill="rgb(229,38,1)"/><text x="30.00" y="1598.50"></text></g><g><title>&lt;genexpr&gt; (pytz/__init__.py) (2 samples, 0.33%)</title><rect x="27" y="1604" width="4" height="15" fill="rgb(230,94,50)"/><text x="30.00" y="1614.50"></text></g><g><title>resource_exists (pytz/__init__.py) (2 samples, 0.33%)</title><rect x="27" y="1620" width="4" height="15" fill="rgb(209,23,40)"/><text x="30.00" y="1630.50"></text></g><g><title>open_resource (pytz/__init__.py) (2 samples, 0.33%)</title><rect x="27" y="1636" width="4" height="15" fill="rgb(219,115,2)"/><text x="30.00" y="1646.50"></text></g><g><title>exists (genericpath.py) (1 samples, 0.17%)</title><rect x="29" y="1652" width="2" height="15" fill="rgb(253,94,44)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="772" width="2" height="15" fill="rgb(249,182,3)"/><text x="34.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="788" width="2" height="15" fill="rgb(223,0,24)"/><text x="34.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="804" width="2" height="15" fill="rgb(220,7,40)"/><text x="34.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="820" width="2" height="15" fill="rgb(220,185,24)"/><text x="34.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="836" width="2" height="15" fill="rgb(208,88,10)"/><text x="34.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="852" width="2" height="15" fill="rgb(207,192,5)"/><text x="34.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (1 samples, 0.17%)</title><rect x="31" y="868" width="2" height="15" fill="rgb(214,35,31)"/><text x="34.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="884" width="2" height="15" fill="rgb(249,98,42)"/><text x="34.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="900" width="2" height="15" fill="rgb(254,108,27)"/><text x="34.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="916" width="2" height="15" fill="rgb(235,61,42)"/><text x="34.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="932" width="2" height="15" fill="rgb(229,19,25)"/><text x="34.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="948" width="2" height="15" fill="rgb(254,133,18)"/><text x="34.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/base.py) (1 samples, 0.17%)</title><rect x="31" y="964" width="2" height="15" fill="rgb(245,175,3)"/><text x="34.00" y="974.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="980" width="2" height="15" fill="rgb(233,201,33)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="996" width="2" height="15" fill="rgb(221,157,30)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1012" width="2" height="15" fill="rgb(209,45,31)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1028" width="2" height="15" fill="rgb(220,114,28)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1044" width="2" height="15" fill="rgb(236,16,2)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="1060" width="2" height="15" fill="rgb(217,55,47)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1076" width="2" height="15" fill="rgb(231,144,14)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/compat/numpy/function.py) (1 samples, 0.17%)</title><rect x="31" y="1092" width="2" height="15" fill="rgb(251,92,32)"/><text x="34.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1108" width="2" height="15" fill="rgb(212,180,32)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1124" width="2" height="15" fill="rgb(227,31,26)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1140" width="2" height="15" fill="rgb(216,150,12)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1156" width="2" height="15" fill="rgb(239,103,12)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1172" width="2" height="15" fill="rgb(240,169,52)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1188" width="2" height="15" fill="rgb(229,41,52)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="1204" width="2" height="15" fill="rgb(234,159,23)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1220" width="2" height="15" fill="rgb(234,95,50)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pandas/util/__init__.py) (1 samples, 0.17%)</title><rect x="31" y="1236" width="2" height="15" fill="rgb(217,227,23)"/><text x="34.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1252" width="2" height="15" fill="rgb(248,40,41)"/><text x="34.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1268" width="2" height="15" fill="rgb(222,69,33)"/><text x="34.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1284" width="2" height="15" fill="rgb(234,204,22)"/><text x="34.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="1300" width="2" height="15" fill="rgb(243,73,34)"/><text x="34.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1316" width="2" height="15" fill="rgb(212,129,44)"/><text x="34.00" y="1326.50"></text></g><g><title>&lt;module&gt; (pandas/util/_decorators.py) (1 samples, 0.17%)</title><rect x="31" y="1332" width="2" height="15" fill="rgb(250,188,51)"/><text x="34.00" y="1342.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1348" width="2" height="15" fill="rgb(218,103,10)"/><text x="34.00" y="1358.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1364" width="2" height="15" fill="rgb(224,123,39)"/><text x="34.00" y="1374.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1380" width="2" height="15" fill="rgb(249,107,50)"/><text x="34.00" y="1390.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="31" y="1396" width="2" height="15" fill="rgb(242,79,10)"/><text x="34.00" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="31" y="1412" width="2" height="15" fill="rgb(220,155,44)"/><text x="34.00" y="1422.50"></text></g><g><title>0x7fc0132f8907 (?) (1 samples, 0.17%)</title><rect x="31" y="1428" width="2" height="15" fill="rgb(251,23,5)"/><text x="34.00" y="1438.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="31" y="1444" width="2" height="15" fill="rgb(240,67,50)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 1.66%)</title><rect x="15" y="436" width="20" height="15" fill="rgb(207,154,23)"/><text x="18.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="15" y="452" width="20" height="15" fill="rgb(214,80,31)"/><text x="18.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 1.66%)</title><rect x="15" y="468" width="20" height="15" fill="rgb(243,10,25)"/><text x="18.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="484" width="10" height="15" fill="rgb(214,112,45)"/><text x="28.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="25" y="500" width="10" height="15" fill="rgb(236,132,45)"/><text x="28.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="516" width="10" height="15" fill="rgb(249,138,6)"/><text x="28.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (5 samples, 0.83%)</title><rect x="25" y="532" width="10" height="15" fill="rgb(220,62,50)"/><text x="28.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="548" width="10" height="15" fill="rgb(220,74,37)"/><text x="28.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="564" width="10" height="15" fill="rgb(250,33,29)"/><text x="28.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="580" width="10" height="15" fill="rgb(214,180,11)"/><text x="28.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="25" y="596" width="10" height="15" fill="rgb(217,9,35)"/><text x="28.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="612" width="10" height="15" fill="rgb(217,153,23)"/><text x="28.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (5 samples, 0.83%)</title><rect x="25" y="628" width="10" height="15" fill="rgb(206,31,9)"/><text x="28.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="644" width="10" height="15" fill="rgb(243,13,31)"/><text x="28.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="660" width="10" height="15" fill="rgb(247,197,6)"/><text x="28.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="676" width="10" height="15" fill="rgb(234,228,39)"/><text x="28.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.83%)</title><rect x="25" y="692" width="10" height="15" fill="rgb(219,139,50)"/><text x="28.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.83%)</title><rect x="25" y="708" width="10" height="15" fill="rgb(245,99,2)"/><text x="28.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (2 samples, 0.33%)</title><rect x="31" y="724" width="4" height="15" fill="rgb(220,142,29)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="740" width="4" height="15" fill="rgb(223,215,34)"/><text x="34.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="756" width="4" height="15" fill="rgb(214,109,44)"/><text x="34.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="772" width="2" height="15" fill="rgb(210,188,17)"/><text x="36.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="788" width="2" height="15" fill="rgb(207,50,47)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="804" width="2" height="15" fill="rgb(243,206,42)"/><text x="36.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.17%)</title><rect x="33" y="820" width="2" height="15" fill="rgb(221,105,15)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="836" width="2" height="15" fill="rgb(244,46,52)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="852" width="2" height="15" fill="rgb(243,210,25)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="868" width="2" height="15" fill="rgb(234,50,5)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="884" width="2" height="15" fill="rgb(249,31,32)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="900" width="2" height="15" fill="rgb(224,13,8)"/><text x="36.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.17%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(212,125,28)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(243,161,29)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(219,221,1)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(243,173,24)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(242,43,30)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(224,179,45)"/><text x="36.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.17%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(220,147,54)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(253,197,22)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(218,211,14)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(242,45,4)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(233,77,42)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(239,210,53)"/><text x="36.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.17%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(208,24,35)"/><text x="36.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(222,13,50)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(248,196,18)"/><text x="36.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(251,206,9)"/><text x="36.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(209,208,30)"/><text x="36.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(229,56,47)"/><text x="36.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.17%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(221,78,24)"/><text x="36.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(235,153,0)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(237,51,49)"/><text x="36.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(222,92,2)"/><text x="36.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(238,198,33)"/><text x="36.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(244,67,40)"/><text x="36.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.17%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(221,63,35)"/><text x="36.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(236,206,8)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(205,213,13)"/><text x="36.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(215,203,33)"/><text x="36.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(251,94,17)"/><text x="36.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(224,17,40)"/><text x="36.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.17%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(246,9,48)"/><text x="36.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(231,23,0)"/><text x="36.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1428" width="2" height="15" fill="rgb(212,91,4)"/><text x="36.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1444" width="2" height="15" fill="rgb(234,177,18)"/><text x="36.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1460" width="2" height="15" fill="rgb(207,71,24)"/><text x="36.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1476" width="2" height="15" fill="rgb(221,20,42)"/><text x="36.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.17%)</title><rect x="33" y="1492" width="2" height="15" fill="rgb(239,76,11)"/><text x="36.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1508" width="2" height="15" fill="rgb(233,186,6)"/><text x="36.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1524" width="2" height="15" fill="rgb(242,11,30)"/><text x="36.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1540" width="2" height="15" fill="rgb(244,70,30)"/><text x="36.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1556" width="2" height="15" fill="rgb(234,226,15)"/><text x="36.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1572" width="2" height="15" fill="rgb(241,214,14)"/><text x="36.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.17%)</title><rect x="33" y="1588" width="2" height="15" fill="rgb(247,136,37)"/><text x="36.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1604" width="2" height="15" fill="rgb(247,132,38)"/><text x="36.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1620" width="2" height="15" fill="rgb(219,76,43)"/><text x="36.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1636" width="2" height="15" fill="rgb(224,73,31)"/><text x="36.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1652" width="2" height="15" fill="rgb(239,205,17)"/><text x="36.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1668" width="2" height="15" fill="rgb(242,168,46)"/><text x="36.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.17%)</title><rect x="33" y="1684" width="2" height="15" fill="rgb(218,10,48)"/><text x="36.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1700" width="2" height="15" fill="rgb(241,145,17)"/><text x="36.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1716" width="2" height="15" fill="rgb(243,53,33)"/><text x="36.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1732" width="2" height="15" fill="rgb(239,92,52)"/><text x="36.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1748" width="2" height="15" fill="rgb(206,40,34)"/><text x="36.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1764" width="2" height="15" fill="rgb(213,115,27)"/><text x="36.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.17%)</title><rect x="33" y="1780" width="2" height="15" fill="rgb(222,194,7)"/><text x="36.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1796" width="2" height="15" fill="rgb(234,20,32)"/><text x="36.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1812" width="2" height="15" fill="rgb(210,59,20)"/><text x="36.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1828" width="2" height="15" fill="rgb(233,149,12)"/><text x="36.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1844" width="2" height="15" fill="rgb(230,71,1)"/><text x="36.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1860" width="2" height="15" fill="rgb(240,95,20)"/><text x="36.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.17%)</title><rect x="33" y="1876" width="2" height="15" fill="rgb(234,147,50)"/><text x="36.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1892" width="2" height="15" fill="rgb(247,23,8)"/><text x="36.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1908" width="2" height="15" fill="rgb(229,173,43)"/><text x="36.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1924" width="2" height="15" fill="rgb(241,151,21)"/><text x="36.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="1940" width="2" height="15" fill="rgb(235,74,10)"/><text x="36.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1956" width="2" height="15" fill="rgb(232,199,25)"/><text x="36.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.17%)</title><rect x="33" y="1972" width="2" height="15" fill="rgb(207,125,24)"/><text x="36.00" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="1988" width="2" height="15" fill="rgb(235,225,44)"/><text x="36.00" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="2004" width="2" height="15" fill="rgb(226,158,25)"/><text x="36.00" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="2020" width="2" height="15" fill="rgb(237,186,52)"/><text x="36.00" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="2036" width="2" height="15" fill="rgb(249,46,22)"/><text x="36.00" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="33" y="2052" width="2" height="15" fill="rgb(209,100,10)"/><text x="36.00" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="2068" width="2" height="15" fill="rgb(229,89,4)"/><text x="36.00" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="2084" width="2" height="15" fill="rgb(245,108,29)"/><text x="36.00" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="33" y="2100" width="2" height="15" fill="rgb(208,62,11)"/><text x="36.00" y="2110.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (11 samples, 1.83%)</title><rect x="15" y="340" width="22" height="15" fill="rgb(231,100,13)"/><text x="18.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.83%)</title><rect x="15" y="356" width="22" height="15" fill="rgb(220,39,23)"/><text x="18.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.83%)</title><rect x="15" y="372" width="22" height="15" fill="rgb(219,33,19)"/><text x="18.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.83%)</title><rect x="15" y="388" width="22" height="15" fill="rgb(213,193,43)"/><text x="18.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 1.83%)</title><rect x="15" y="404" width="22" height="15" fill="rgb(234,162,31)"/><text x="18.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 1.83%)</title><rect x="15" y="420" width="22" height="15" fill="rgb(237,167,27)"/><text x="18.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.17%)</title><rect x="35" y="436" width="2" height="15" fill="rgb(225,34,15)"/><text x="38.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="452" width="2" height="15" fill="rgb(233,200,24)"/><text x="38.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="468" width="2" height="15" fill="rgb(237,39,6)"/><text x="38.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="484" width="2" height="15" fill="rgb(221,93,32)"/><text x="38.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="35" y="500" width="2" height="15" fill="rgb(247,169,20)"/><text x="38.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="516" width="2" height="15" fill="rgb(220,94,27)"/><text x="38.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_olivetti_faces.py) (1 samples, 0.17%)</title><rect x="35" y="532" width="2" height="15" fill="rgb(222,131,46)"/><text x="38.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="548" width="2" height="15" fill="rgb(245,85,2)"/><text x="38.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="564" width="2" height="15" fill="rgb(248,51,17)"/><text x="38.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="580" width="2" height="15" fill="rgb(234,78,34)"/><text x="38.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="596" width="2" height="15" fill="rgb(234,178,31)"/><text x="38.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="612" width="2" height="15" fill="rgb(229,50,48)"/><text x="38.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="628" width="2" height="15" fill="rgb(220,228,8)"/><text x="38.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="35" y="644" width="2" height="15" fill="rgb(224,222,12)"/><text x="38.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="660" width="2" height="15" fill="rgb(213,156,53)"/><text x="38.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/io/__init__.py) (1 samples, 0.17%)</title><rect x="35" y="676" width="2" height="15" fill="rgb(232,224,1)"/><text x="38.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="692" width="2" height="15" fill="rgb(247,71,17)"/><text x="38.00" y="702.50"></text></g><g><title>cb (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="35" y="708" width="2" height="15" fill="rgb(245,21,14)"/><text x="38.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="628" width="2" height="15" fill="rgb(214,124,5)"/><text x="40.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="644" width="2" height="15" fill="rgb(215,113,28)"/><text x="40.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="660" width="2" height="15" fill="rgb(235,214,20)"/><text x="40.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="676" width="2" height="15" fill="rgb(252,85,47)"/><text x="40.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="692" width="2" height="15" fill="rgb(251,207,38)"/><text x="40.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="708" width="2" height="15" fill="rgb(224,62,8)"/><text x="40.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.17%)</title><rect x="37" y="724" width="2" height="15" fill="rgb(216,172,0)"/><text x="40.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="740" width="2" height="15" fill="rgb(244,37,4)"/><text x="40.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="756" width="2" height="15" fill="rgb(225,50,34)"/><text x="40.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="772" width="2" height="15" fill="rgb(211,96,29)"/><text x="40.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="788" width="2" height="15" fill="rgb(212,108,53)"/><text x="40.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="804" width="2" height="15" fill="rgb(226,136,52)"/><text x="40.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.17%)</title><rect x="37" y="820" width="2" height="15" fill="rgb(236,43,22)"/><text x="40.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="836" width="2" height="15" fill="rgb(222,39,8)"/><text x="40.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="852" width="2" height="15" fill="rgb(245,62,8)"/><text x="40.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="868" width="2" height="15" fill="rgb(207,123,29)"/><text x="40.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="884" width="2" height="15" fill="rgb(248,213,15)"/><text x="40.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="900" width="2" height="15" fill="rgb(229,3,31)"/><text x="40.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.17%)</title><rect x="37" y="916" width="2" height="15" fill="rgb(214,64,49)"/><text x="40.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="932" width="2" height="15" fill="rgb(227,167,40)"/><text x="40.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="948" width="2" height="15" fill="rgb(211,55,21)"/><text x="40.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="964" width="2" height="15" fill="rgb(212,220,48)"/><text x="40.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="980" width="2" height="15" fill="rgb(246,76,20)"/><text x="40.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="996" width="2" height="15" fill="rgb(244,156,6)"/><text x="40.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="1012" width="2" height="15" fill="rgb(223,112,12)"/><text x="40.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="1028" width="2" height="15" fill="rgb(210,186,40)"/><text x="40.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="1044" width="2" height="15" fill="rgb(210,139,31)"/><text x="40.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.17%)</title><rect x="37" y="1060" width="2" height="15" fill="rgb(244,175,38)"/><text x="40.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="1076" width="2" height="15" fill="rgb(233,108,3)"/><text x="40.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="1092" width="2" height="15" fill="rgb(248,7,29)"/><text x="40.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="37" y="1108" width="2" height="15" fill="rgb(212,111,33)"/><text x="40.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="1124" width="2" height="15" fill="rgb(208,154,43)"/><text x="40.00" y="1134.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="1140" width="2" height="15" fill="rgb(214,90,15)"/><text x="40.00" y="1150.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="37" y="1156" width="2" height="15" fill="rgb(215,222,11)"/><text x="40.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 2.16%)</title><rect x="15" y="244" width="26" height="15" fill="rgb(231,165,26)"/><text x="18.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.16%)</title><rect x="15" y="260" width="26" height="15" fill="rgb(232,7,10)"/><text x="18.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.16%)</title><rect x="15" y="276" width="26" height="15" fill="rgb(213,31,13)"/><text x="18.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.16%)</title><rect x="15" y="292" width="26" height="15" fill="rgb(216,140,46)"/><text x="18.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.16%)</title><rect x="15" y="308" width="26" height="15" fill="rgb(240,181,29)"/><text x="18.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.16%)</title><rect x="15" y="324" width="26" height="15" fill="rgb(237,19,50)"/><text x="18.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (2 samples, 0.33%)</title><rect x="37" y="340" width="4" height="15" fill="rgb(242,170,41)"/><text x="40.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="356" width="4" height="15" fill="rgb(218,200,6)"/><text x="40.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="372" width="4" height="15" fill="rgb(231,79,4)"/><text x="40.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="388" width="4" height="15" fill="rgb(240,168,19)"/><text x="40.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="404" width="4" height="15" fill="rgb(245,116,29)"/><text x="40.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="420" width="4" height="15" fill="rgb(250,179,35)"/><text x="40.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="436" width="4" height="15" fill="rgb(233,52,25)"/><text x="40.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="37" y="452" width="4" height="15" fill="rgb(249,220,15)"/><text x="40.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="468" width="4" height="15" fill="rgb(245,153,32)"/><text x="40.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (2 samples, 0.33%)</title><rect x="37" y="484" width="4" height="15" fill="rgb(224,179,34)"/><text x="40.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="500" width="4" height="15" fill="rgb(238,90,16)"/><text x="40.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="516" width="4" height="15" fill="rgb(254,116,41)"/><text x="40.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="532" width="4" height="15" fill="rgb(241,1,11)"/><text x="40.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="37" y="548" width="4" height="15" fill="rgb(222,128,0)"/><text x="40.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="564" width="4" height="15" fill="rgb(213,192,21)"/><text x="40.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (2 samples, 0.33%)</title><rect x="37" y="580" width="4" height="15" fill="rgb(241,90,26)"/><text x="40.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="596" width="4" height="15" fill="rgb(235,76,37)"/><text x="40.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="37" y="612" width="4" height="15" fill="rgb(205,35,41)"/><text x="40.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="628" width="2" height="15" fill="rgb(223,128,51)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="39" y="644" width="2" height="15" fill="rgb(241,21,23)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="39" y="660" width="2" height="15" fill="rgb(226,10,41)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.17%)</title><rect x="39" y="676" width="2" height="15" fill="rgb(205,49,0)"/><text x="42.00" y="686.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.17%)</title><rect x="39" y="692" width="2" height="15" fill="rgb(211,44,29)"/><text x="42.00" y="702.50"></text></g><g><title>unicode_replace (python3.7) (1 samples, 0.17%)</title><rect x="39" y="708" width="2" height="15" fill="rgb(225,22,9)"/><text x="42.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.83%)</title><rect x="10" y="68" width="33" height="15" fill="rgb(227,182,51)"/><text x="13.00" y="78.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.83%)</title><rect x="10" y="84" width="33" height="15" fill="rgb(240,78,19)"/><text x="13.00" y="94.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.83%)</title><rect x="10" y="100" width="33" height="15" fill="rgb(251,227,30)"/><text x="13.00" y="110.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 2.83%)</title><rect x="10" y="116" width="33" height="15" fill="rgb(217,116,48)"/><text x="13.00" y="126.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.83%)</title><rect x="10" y="132" width="33" height="15" fill="rgb(222,117,22)"/><text x="13.00" y="142.50">_c..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (17 samples, 2.83%)</title><rect x="10" y="148" width="33" height="15" fill="rgb(224,47,32)"/><text x="13.00" y="158.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.83%)</title><rect x="10" y="164" width="33" height="15" fill="rgb(243,88,43)"/><text x="13.00" y="174.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 2.83%)</title><rect x="10" y="180" width="33" height="15" fill="rgb(246,155,51)"/><text x="13.00" y="190.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.33%)</title><rect x="15" y="196" width="28" height="15" fill="rgb(223,119,4)"/><text x="18.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 2.33%)</title><rect x="15" y="212" width="28" height="15" fill="rgb(243,142,54)"/><text x="18.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 2.33%)</title><rect x="15" y="228" width="28" height="15" fill="rgb(238,67,31)"/><text x="18.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.17%)</title><rect x="41" y="244" width="2" height="15" fill="rgb(209,152,30)"/><text x="44.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="260" width="2" height="15" fill="rgb(239,125,8)"/><text x="44.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="276" width="2" height="15" fill="rgb(243,135,13)"/><text x="44.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="292" width="2" height="15" fill="rgb(248,175,23)"/><text x="44.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="308" width="2" height="15" fill="rgb(218,49,31)"/><text x="44.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="324" width="2" height="15" fill="rgb(229,61,16)"/><text x="44.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="340" width="2" height="15" fill="rgb(250,35,45)"/><text x="44.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="356" width="2" height="15" fill="rgb(206,2,36)"/><text x="44.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.17%)</title><rect x="41" y="372" width="2" height="15" fill="rgb(240,170,45)"/><text x="44.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="388" width="2" height="15" fill="rgb(242,107,14)"/><text x="44.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="404" width="2" height="15" fill="rgb(222,57,17)"/><text x="44.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.17%)</title><rect x="41" y="420" width="2" height="15" fill="rgb(232,42,20)"/><text x="44.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="436" width="2" height="15" fill="rgb(244,226,17)"/><text x="44.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="452" width="2" height="15" fill="rgb(249,10,7)"/><text x="44.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.17%)</title><rect x="41" y="468" width="2" height="15" fill="rgb(250,223,14)"/><text x="44.00" y="478.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="41" y="484" width="2" height="15" fill="rgb(215,49,7)"/><text x="44.00" y="494.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="47" y="132" width="2" height="15" fill="rgb(219,99,53)"/><text x="50.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.17%)</title><rect x="49" y="132" width="2" height="15" fill="rgb(253,212,52)"/><text x="52.00" y="142.50"></text></g><g><title>0x7fc0404d57c0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="49" y="148" width="2" height="15" fill="rgb(248,111,50)"/><text x="52.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.50%)</title><rect x="47" y="116" width="6" height="15" fill="rgb(230,42,37)"/><text x="50.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="51" y="132" width="2" height="15" fill="rgb(232,183,28)"/><text x="54.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.17%)</title><rect x="51" y="148" width="2" height="15" fill="rgb(209,30,2)"/><text x="54.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.17%)</title><rect x="51" y="164" width="2" height="15" fill="rgb(243,86,26)"/><text x="54.00" y="174.50"></text></g><g><title>0x7fc0412b3eb0 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="51" y="180" width="2" height="15" fill="rgb(243,173,26)"/><text x="54.00" y="190.50"></text></g><g><title>0x7fc0412b2c49 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="51" y="196" width="2" height="15" fill="rgb(228,63,6)"/><text x="54.00" y="206.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.50%)</title><rect x="63" y="180" width="5" height="15" fill="rgb(213,151,42)"/><text x="66.00" y="190.50"></text></g><g><title>0x7fc001371ff9 (?) (1 samples, 0.17%)</title><rect x="74" y="212" width="2" height="15" fill="rgb(228,51,52)"/><text x="77.00" y="222.50"></text></g><g><title>0x7fc00136cef6 (?) (1 samples, 0.17%)</title><rect x="74" y="228" width="2" height="15" fill="rgb(242,160,0)"/><text x="77.00" y="238.50"></text></g><g><title>0x7fc001361962 (?) (1 samples, 0.17%)</title><rect x="74" y="244" width="2" height="15" fill="rgb(236,223,38)"/><text x="77.00" y="254.50"></text></g><g><title>0x7fc0013957a7 (?) (1 samples, 0.17%)</title><rect x="74" y="260" width="2" height="15" fill="rgb(245,111,38)"/><text x="77.00" y="270.50"></text></g><g><title>0x7fc001395379 (?) (1 samples, 0.17%)</title><rect x="74" y="276" width="2" height="15" fill="rgb(214,101,23)"/><text x="77.00" y="286.50"></text></g><g><title>0x7fc0017f38b8 (?) (1 samples, 0.17%)</title><rect x="74" y="292" width="2" height="15" fill="rgb(207,25,49)"/><text x="77.00" y="302.50"></text></g><g><title>0x7fc0017f1c7f (?) (1 samples, 0.17%)</title><rect x="74" y="308" width="2" height="15" fill="rgb(220,10,36)"/><text x="77.00" y="318.50"></text></g><g><title>0x7fc00180499c (?) (1 samples, 0.17%)</title><rect x="74" y="324" width="2" height="15" fill="rgb(240,151,36)"/><text x="77.00" y="334.50"></text></g><g><title>0x7fc00152c03b (?) (1 samples, 0.17%)</title><rect x="74" y="340" width="2" height="15" fill="rgb(221,172,29)"/><text x="77.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 0.67%)</title><rect x="76" y="212" width="8" height="15" fill="rgb(254,166,45)"/><text x="79.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="82" y="228" width="2" height="15" fill="rgb(218,183,7)"/><text x="85.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="82" y="244" width="2" height="15" fill="rgb(243,209,3)"/><text x="85.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="82" y="260" width="2" height="15" fill="rgb(228,6,50)"/><text x="85.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="82" y="276" width="2" height="15" fill="rgb(219,51,25)"/><text x="85.00" y="286.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="82" y="292" width="2" height="15" fill="rgb(251,155,40)"/><text x="85.00" y="302.50"></text></g><g><title>0x7fc0412b3d07 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="86" y="260" width="2" height="15" fill="rgb(222,128,5)"/><text x="89.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.17%)</title><rect x="88" y="260" width="2" height="15" fill="rgb(218,50,5)"/><text x="91.00" y="270.50"></text></g><g><title>0x7fc0412b3998 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="92" y="356" width="2" height="15" fill="rgb(207,204,28)"/><text x="95.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="94" y="356" width="4" height="15" fill="rgb(231,54,51)"/><text x="97.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="94" y="372" width="4" height="15" fill="rgb(222,48,32)"/><text x="97.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="94" y="388" width="4" height="15" fill="rgb(234,133,52)"/><text x="97.00" y="398.50"></text></g><g><title>0x7fc0412c26db (libc-2.29.so) (1 samples, 0.17%)</title><rect x="96" y="404" width="2" height="15" fill="rgb(230,60,23)"/><text x="99.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.67%)</title><rect x="92" y="340" width="8" height="15" fill="rgb(241,122,18)"/><text x="95.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="98" y="356" width="2" height="15" fill="rgb(226,48,7)"/><text x="101.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="98" y="372" width="2" height="15" fill="rgb(221,124,6)"/><text x="101.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::~ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="100" y="340" width="4" height="15" fill="rgb(206,139,8)"/><text x="103.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="100" y="356" width="4" height="15" fill="rgb(221,166,5)"/><text x="103.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="102" y="372" width="2" height="15" fill="rgb(240,225,26)"/><text x="105.00" y="382.50"></text></g><g><title>0x7fc0013390f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="200" y="356" width="2" height="15" fill="rgb(207,103,53)"/><text x="203.00" y="366.50"></text></g><g><title>0x7fc030d807a0 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="202" y="356" width="2" height="15" fill="rgb(210,139,7)"/><text x="205.00" y="366.50"></text></g><g><title>0x7fc0412b3906 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="204" y="356" width="2" height="15" fill="rgb(206,39,11)"/><text x="207.00" y="366.50"></text></g><g><title>0x7fc0412b3908 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="206" y="356" width="2" height="15" fill="rgb(212,149,7)"/><text x="209.00" y="366.50"></text></g><g><title>0x7fc0412b3917 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="208" y="356" width="2" height="15" fill="rgb(218,58,44)"/><text x="211.00" y="366.50"></text></g><g><title>0x7fc0412b391c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="210" y="356" width="2" height="15" fill="rgb(232,212,12)"/><text x="213.00" y="366.50"></text></g><g><title>0x7fc0412b3922 (libc-2.29.so) (2 samples, 0.33%)</title><rect x="212" y="356" width="4" height="15" fill="rgb(229,92,21)"/><text x="215.00" y="366.50"></text></g><g><title>0x7fc0412b3929 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="216" y="356" width="2" height="15" fill="rgb(252,195,14)"/><text x="219.00" y="366.50"></text></g><g><title>0x7fc0412b3938 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="218" y="356" width="2" height="15" fill="rgb(233,155,15)"/><text x="221.00" y="366.50"></text></g><g><title>0x7fc0412b395e (libc-2.29.so) (1 samples, 0.17%)</title><rect x="220" y="356" width="2" height="15" fill="rgb(216,75,46)"/><text x="223.00" y="366.50"></text></g><g><title>0x7fc0412b3961 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="222" y="356" width="2" height="15" fill="rgb(206,193,53)"/><text x="225.00" y="366.50"></text></g><g><title>0x7fc0412b3965 (libc-2.29.so) (4 samples, 0.67%)</title><rect x="224" y="356" width="7" height="15" fill="rgb(221,225,30)"/><text x="227.00" y="366.50"></text></g><g><title>0x7fc0412b396a (libc-2.29.so) (2 samples, 0.33%)</title><rect x="231" y="356" width="4" height="15" fill="rgb(212,42,8)"/><text x="234.00" y="366.50"></text></g><g><title>0x7fc0412b3971 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="235" y="356" width="2" height="15" fill="rgb(232,135,17)"/><text x="238.00" y="366.50"></text></g><g><title>0x7fc0412b397c (libc-2.29.so) (1 samples, 0.17%)</title><rect x="237" y="356" width="2" height="15" fill="rgb(246,25,3)"/><text x="240.00" y="366.50"></text></g><g><title>0x7fc0412b3991 (libc-2.29.so) (8 samples, 1.33%)</title><rect x="239" y="356" width="16" height="15" fill="rgb(233,179,3)"/><text x="242.00" y="366.50"></text></g><g><title>0x7fc0412b3998 (libc-2.29.so) (6 samples, 1.00%)</title><rect x="255" y="356" width="12" height="15" fill="rgb(227,195,22)"/><text x="258.00" y="366.50"></text></g><g><title>0x7fc0412b3a38 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="267" y="356" width="2" height="15" fill="rgb(213,128,6)"/><text x="270.00" y="366.50"></text></g><g><title>0x7fc0412b3a41 (libc-2.29.so) (2 samples, 0.33%)</title><rect x="269" y="356" width="4" height="15" fill="rgb(251,130,10)"/><text x="272.00" y="366.50"></text></g><g><title>0x7fc0412b3a4d (libc-2.29.so) (2 samples, 0.33%)</title><rect x="273" y="356" width="4" height="15" fill="rgb(253,140,43)"/><text x="276.00" y="366.50"></text></g><g><title>0x7fc0412b3a4f (libc-2.29.so) (2 samples, 0.33%)</title><rect x="277" y="356" width="3" height="15" fill="rgb(243,187,11)"/><text x="280.00" y="366.50"></text></g><g><title>0x7fc0412b3a53 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="280" y="356" width="2" height="15" fill="rgb(207,198,44)"/><text x="283.00" y="366.50"></text></g><g><title>0x7fc0412b3a55 (libc-2.29.so) (4 samples, 0.67%)</title><rect x="282" y="356" width="8" height="15" fill="rgb(220,212,42)"/><text x="285.00" y="366.50"></text></g><g><title>0x7fc0412b3bc0 (libc-2.29.so) (2 samples, 0.33%)</title><rect x="290" y="356" width="4" height="15" fill="rgb(241,43,26)"/><text x="293.00" y="366.50"></text></g><g><title>0x7fc0412b3bd8 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="294" y="356" width="2" height="15" fill="rgb(232,76,20)"/><text x="297.00" y="366.50"></text></g><g><title>0x7fc0412b3be8 (libc-2.29.so) (2 samples, 0.33%)</title><rect x="296" y="356" width="4" height="15" fill="rgb(214,69,29)"/><text x="299.00" y="366.50"></text></g><g><title>0x7fc0412d4120 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="300" y="356" width="2" height="15" fill="rgb(247,167,43)"/><text x="303.00" y="366.50"></text></g><g><title>0x7fc0412d4144 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="302" y="356" width="2" height="15" fill="rgb(248,66,25)"/><text x="305.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (16 samples, 2.66%)</title><rect x="304" y="356" width="31" height="15" fill="rgb(236,53,48)"/><text x="307.00" y="366.50">fr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="356" width="2" height="15" fill="rgb(215,167,47)"/><text x="338.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(211,125,0)"/><text x="338.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="388" width="2" height="15" fill="rgb(253,118,37)"/><text x="338.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="404" width="2" height="15" fill="rgb(230,202,21)"/><text x="338.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="420" width="2" height="15" fill="rgb(233,153,42)"/><text x="338.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="436" width="2" height="15" fill="rgb(244,162,18)"/><text x="338.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="452" width="2" height="15" fill="rgb(213,138,21)"/><text x="338.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="468" width="2" height="15" fill="rgb(234,4,1)"/><text x="338.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="484" width="2" height="15" fill="rgb(228,41,39)"/><text x="338.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="500" width="2" height="15" fill="rgb(224,69,34)"/><text x="338.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="335" y="516" width="2" height="15" fill="rgb(220,26,25)"/><text x="338.00" y="526.50"></text></g><g><title>0x7fc001338930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="546" y="388" width="1" height="15" fill="rgb(235,155,8)"/><text x="549.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (7 samples, 1.16%)</title><rect x="547" y="388" width="14" height="15" fill="rgb(235,213,28)"/><text x="550.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 1.00%)</title><rect x="549" y="404" width="12" height="15" fill="rgb(212,198,46)"/><text x="552.00" y="414.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 2.50%)</title><rect x="591" y="404" width="29" height="15" fill="rgb(208,126,32)"/><text x="594.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 1.50%)</title><rect x="602" y="420" width="18" height="15" fill="rgb(223,164,33)"/><text x="605.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (6 samples, 1.00%)</title><rect x="608" y="436" width="12" height="15" fill="rgb(237,56,33)"/><text x="611.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (198 samples, 32.95%)</title><rect x="337" y="356" width="389" height="15" fill="rgb(235,79,20)"/><text x="340.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Proce..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (107 samples, 17.80%)</title><rect x="516" y="372" width="210" height="15" fill="rgb(241,229,51)"/><text x="519.00" y="382.50">std::_Hashtable&lt;long, std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (84 samples, 13.98%)</title><rect x="561" y="388" width="165" height="15" fill="rgb(221,71,34)"/><text x="564.00" y="398.50">std::_Hashtable&lt;long,..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (54 samples, 8.99%)</title><rect x="620" y="404" width="106" height="15" fill="rgb(235,100,21)"/><text x="623.00" y="414.50">std::__detai..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (19 samples, 3.16%)</title><rect x="689" y="420" width="37" height="15" fill="rgb(212,154,46)"/><text x="692.00" y="430.50">std..</text></g><g><title>0x7fc001338850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="746" y="372" width="2" height="15" fill="rgb(214,197,50)"/><text x="749.00" y="382.50"></text></g><g><title>0x7fc0412d3dbf (libc-2.29.so) (2 samples, 0.33%)</title><rect x="748" y="372" width="4" height="15" fill="rgb(251,229,34)"/><text x="751.00" y="382.50"></text></g><g><title>0x7fc0412d3dc3 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="752" y="372" width="2" height="15" fill="rgb(218,177,3)"/><text x="755.00" y="382.50"></text></g><g><title>0x7fc0412d3dc9 (libc-2.29.so) (2 samples, 0.33%)</title><rect x="754" y="372" width="4" height="15" fill="rgb(209,1,49)"/><text x="757.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.83%)</title><rect x="726" y="356" width="34" height="15" fill="rgb(236,104,15)"/><text x="729.00" y="366.50">on..</text></g><g><title>0x7fc0412d3dcb (libc-2.29.so) (1 samples, 0.17%)</title><rect x="758" y="372" width="2" height="15" fill="rgb(254,92,39)"/><text x="761.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.67%)</title><rect x="760" y="356" width="7" height="15" fill="rgb(245,113,23)"/><text x="763.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 3.16%)</title><rect x="767" y="356" width="38" height="15" fill="rgb(212,45,9)"/><text x="770.00" y="366.50">std..</text></g><g><title>0x7fc030d7fd50 (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="822" y="388" width="2" height="15" fill="rgb(232,171,13)"/><text x="825.00" y="398.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (380 samples, 63.23%)</title><rect x="92" y="324" width="746" height="15" fill="rgb(243,213,36)"/><text x="95.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (374 samples, 62.23%)</title><rect x="104" y="340" width="734" height="15" fill="rgb(228,180,41)"/><text x="107.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.s..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 2.83%)</title><rect x="805" y="356" width="33" height="15" fill="rgb(222,23,21)"/><text x="808.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 1.33%)</title><rect x="822" y="372" width="16" height="15" fill="rgb(244,120,22)"/><text x="825.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (7 samples, 1.16%)</title><rect x="824" y="388" width="14" height="15" fill="rgb(246,100,24)"/><text x="827.00" y="398.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (381 samples, 63.39%)</title><rect x="92" y="308" width="748" height="15" fill="rgb(226,127,23)"/><text x="95.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.17%)</title><rect x="838" y="324" width="2" height="15" fill="rgb(227,132,39)"/><text x="841.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (384 samples, 63.89%)</title><rect x="90" y="260" width="754" height="15" fill="rgb(221,190,45)"/><text x="93.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (384 samples, 63.89%)</title><rect x="90" y="276" width="754" height="15" fill="rgb(211,131,31)"/><text x="93.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (383 samples, 63.73%)</title><rect x="92" y="292" width="752" height="15" fill="rgb(224,173,0)"/><text x="95.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="840" y="308" width="4" height="15" fill="rgb(252,76,1)"/><text x="843.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="842" y="324" width="2" height="15" fill="rgb(221,124,23)"/><text x="845.00" y="334.50"></text></g><g><title>onnxruntime::TensorTypeBase::Type (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="844" y="276" width="2" height="15" fill="rgb(205,198,38)"/><text x="847.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="846" y="276" width="4" height="15" fill="rgb(207,167,15)"/><text x="849.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="846" y="292" width="4" height="15" fill="rgb(233,196,13)"/><text x="849.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="848" y="308" width="2" height="15" fill="rgb(219,220,26)"/><text x="851.00" y="318.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.67%)</title><rect x="844" y="260" width="8" height="15" fill="rgb(217,145,16)"/><text x="847.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="850" y="276" width="2" height="15" fill="rgb(219,14,53)"/><text x="853.00" y="286.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.17%)</title><rect x="852" y="276" width="2" height="15" fill="rgb(210,184,29)"/><text x="855.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="852" y="260" width="4" height="15" fill="rgb(231,185,13)"/><text x="855.00" y="270.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_emplace_back_aux&lt;long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="854" y="276" width="2" height="15" fill="rgb(233,72,38)"/><text x="857.00" y="286.50"></text></g><g><title>onnxruntime::python::OrtPybindThrowIfError (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="856" y="260" width="2" height="15" fill="rgb(218,156,11)"/><text x="859.00" y="270.50"></text></g><g><title>onnxruntime::common::Status::ToString[abi:cxx11] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="856" y="276" width="2" height="15" fill="rgb(237,229,21)"/><text x="859.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (395 samples, 65.72%)</title><rect x="86" y="244" width="776" height="15" fill="rgb(234,86,4)"/><text x="89.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vect..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="260" width="4" height="15" fill="rgb(245,86,42)"/><text x="861.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="276" width="4" height="15" fill="rgb(225,126,31)"/><text x="861.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="292" width="4" height="15" fill="rgb(209,13,30)"/><text x="861.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="308" width="4" height="15" fill="rgb(236,229,9)"/><text x="861.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="324" width="4" height="15" fill="rgb(233,76,43)"/><text x="861.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="340" width="4" height="15" fill="rgb(225,162,16)"/><text x="861.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="356" width="4" height="15" fill="rgb(229,4,17)"/><text x="861.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="372" width="4" height="15" fill="rgb(251,156,11)"/><text x="861.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="858" y="388" width="4" height="15" fill="rgb(217,115,7)"/><text x="861.00" y="398.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.33%)</title><rect x="858" y="404" width="4" height="15" fill="rgb(205,226,23)"/><text x="861.00" y="414.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="862" y="244" width="2" height="15" fill="rgb(216,99,1)"/><text x="865.00" y="254.50"></text></g><g><title>0x7fc001339460 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="862" y="260" width="2" height="15" fill="rgb(215,199,5)"/><text x="865.00" y="270.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (420 samples, 69.88%)</title><rect x="43" y="68" width="825" height="15" fill="rgb(241,28,39)"/><text x="46.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (420 samples, 69.88%)</title><rect x="43" y="84" width="825" height="15" fill="rgb(246,36,15)"/><text x="46.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (420 samples, 69.88%)</title><rect x="43" y="100" width="825" height="15" fill="rgb(218,1,31)"/><text x="46.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (415 samples, 69.05%)</title><rect x="53" y="116" width="815" height="15" fill="rgb(220,167,39)"/><text x="56.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (415 samples, 69.05%)</title><rect x="53" y="132" width="815" height="15" fill="rgb(217,194,26)"/><text x="56.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (414 samples, 68.89%)</title><rect x="55" y="148" width="813" height="15" fill="rgb(229,54,43)"/><text x="58.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (412 samples, 68.55%)</title><rect x="59" y="164" width="809" height="15" fill="rgb(233,182,11)"/><text x="62.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (407 samples, 67.72%)</title><rect x="68" y="180" width="800" height="15" fill="rgb(218,46,43)"/><text x="71.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (407 samples, 67.72%)</title><rect x="68" y="196" width="800" height="15" fill="rgb(229,152,15)"/><text x="71.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (399 samples, 66.39%)</title><rect x="84" y="212" width="784" height="15" fill="rgb(217,9,27)"/><text x="87.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (399 samples, 66.39%)</title><rect x="84" y="228" width="784" height="15" fill="rgb(206,16,35)"/><text x="87.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(on..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.33%)</title><rect x="864" y="244" width="4" height="15" fill="rgb(217,66,6)"/><text x="867.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.17%)</title><rect x="866" y="260" width="2" height="15" fill="rgb(238,11,15)"/><text x="869.00" y="270.50"></text></g><g><title>0x7fc001d8c54f (?) (1 samples, 0.17%)</title><rect x="868" y="244" width="1" height="15" fill="rgb(245,123,31)"/><text x="871.00" y="254.50"></text></g><g><title>0x7fc001d9265e (?) (1 samples, 0.17%)</title><rect x="868" y="260" width="1" height="15" fill="rgb(222,89,33)"/><text x="871.00" y="270.50"></text></g><g><title>0x7fc001d9250f (?) (1 samples, 0.17%)</title><rect x="868" y="276" width="1" height="15" fill="rgb(231,63,37)"/><text x="871.00" y="286.50"></text></g><g><title>0x7fc001d98d6c (?) (1 samples, 0.17%)</title><rect x="868" y="292" width="1" height="15" fill="rgb(224,190,54)"/><text x="871.00" y="302.50"></text></g><g><title>0x7fc00b2b9ab9 (?) (1 samples, 0.17%)</title><rect x="868" y="308" width="1" height="15" fill="rgb(212,0,54)"/><text x="871.00" y="318.50"></text></g><g><title>0x7fc00b2baeab (?) (1 samples, 0.17%)</title><rect x="868" y="324" width="1" height="15" fill="rgb(252,144,7)"/><text x="871.00" y="334.50"></text></g><g><title>0x7fc00b2baea0 (libgomp.so.1.0.0) (2 samples, 0.33%)</title><rect x="869" y="484" width="4" height="15" fill="rgb(242,62,45)"/><text x="872.00" y="494.50"></text></g><g><title>0x7fc00b2baea9 (libgomp.so.1.0.0) (15 samples, 2.50%)</title><rect x="873" y="484" width="30" height="15" fill="rgb(252,82,13)"/><text x="876.00" y="494.50">0x..</text></g><g><title>0x7fc00b2baeab (libgomp.so.1.0.0) (11 samples, 1.83%)</title><rect x="903" y="484" width="21" height="15" fill="rgb(254,157,30)"/><text x="906.00" y="494.50"></text></g><g><title>0x7fc00b2b9ab9 (libgomp.so.1.0.0) (34 samples, 5.66%)</title><rect x="869" y="468" width="67" height="15" fill="rgb(215,53,21)"/><text x="872.00" y="478.50">0x7fc00..</text></g><g><title>0x7fc00b2baead (libgomp.so.1.0.0) (6 samples, 1.00%)</title><rect x="924" y="484" width="12" height="15" fill="rgb(222,90,7)"/><text x="927.00" y="494.50"></text></g><g><title>0x7fc00b2bacf9 (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="936" y="500" width="2" height="15" fill="rgb(251,152,7)"/><text x="939.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (37 samples, 6.16%)</title><rect x="868" y="68" width="72" height="15" fill="rgb(232,129,50)"/><text x="871.00" y="78.50">profile_..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (37 samples, 6.16%)</title><rect x="868" y="84" width="72" height="15" fill="rgb(251,167,51)"/><text x="871.00" y="94.50">setup_pr..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (37 samples, 6.16%)</title><rect x="868" y="100" width="72" height="15" fill="rgb(232,170,32)"/><text x="871.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (37 samples, 6.16%)</title><rect x="868" y="116" width="72" height="15" fill="rgb(220,109,26)"/><text x="871.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (37 samples, 6.16%)</title><rect x="868" y="132" width="72" height="15" fill="rgb(230,33,12)"/><text x="871.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (37 samples, 6.16%)</title><rect x="868" y="148" width="72" height="15" fill="rgb(224,216,43)"/><text x="871.00" y="158.50">run (mlp..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (37 samples, 6.16%)</title><rect x="868" y="164" width="72" height="15" fill="rgb(253,151,24)"/><text x="871.00" y="174.50">_run_seq..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (37 samples, 6.16%)</title><rect x="868" y="180" width="72" height="15" fill="rgb(234,25,31)"/><text x="871.00" y="190.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (37 samples, 6.16%)</title><rect x="868" y="196" width="72" height="15" fill="rgb(213,119,9)"/><text x="871.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (37 samples, 6.16%)</title><rect x="868" y="212" width="72" height="15" fill="rgb(216,108,26)"/><text x="871.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (37 samples, 6.16%)</title><rect x="868" y="228" width="72" height="15" fill="rgb(254,92,35)"/><text x="871.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (36 samples, 5.99%)</title><rect x="869" y="244" width="71" height="15" fill="rgb(233,114,38)"/><text x="872.00" y="254.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (36 samples, 5.99%)</title><rect x="869" y="260" width="71" height="15" fill="rgb(214,88,24)"/><text x="872.00" y="270.50">void pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (36 samples, 5.99%)</title><rect x="869" y="276" width="71" height="15" fill="rgb(236,135,28)"/><text x="872.00" y="286.50">void pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (36 samples, 5.99%)</title><rect x="869" y="292" width="71" height="15" fill="rgb(222,75,34)"/><text x="872.00" y="302.50">pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (36 samples, 5.99%)</title><rect x="869" y="308" width="71" height="15" fill="rgb(211,179,49)"/><text x="872.00" y="318.50">pybind11..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (36 samples, 5.99%)</title><rect x="869" y="324" width="71" height="15" fill="rgb(236,178,25)"/><text x="872.00" y="334.50">pybind11..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (36 samples, 5.99%)</title><rect x="869" y="340" width="71" height="15" fill="rgb(215,57,5)"/><text x="872.00" y="350.50">pybind11..</text></g><g><title>pybind11::array::~array (numpy.h) (36 samples, 5.99%)</title><rect x="869" y="356" width="71" height="15" fill="rgb(209,56,19)"/><text x="872.00" y="366.50">pybind11..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (36 samples, 5.99%)</title><rect x="869" y="372" width="71" height="15" fill="rgb(251,138,27)"/><text x="872.00" y="382.50">pybind11..</text></g><g><title>pybind11::object::~object (pytypes.h) (36 samples, 5.99%)</title><rect x="869" y="388" width="71" height="15" fill="rgb(214,79,0)"/><text x="872.00" y="398.50">pybind11..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (36 samples, 5.99%)</title><rect x="869" y="404" width="71" height="15" fill="rgb(217,159,6)"/><text x="872.00" y="414.50">pybind11..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (36 samples, 5.99%)</title><rect x="869" y="420" width="71" height="15" fill="rgb(208,49,30)"/><text x="872.00" y="430.50">RuntimeT..</text></g><g><title>pybind11::array::size (numpy.h) (36 samples, 5.99%)</title><rect x="869" y="436" width="71" height="15" fill="rgb(233,113,6)"/><text x="872.00" y="446.50">pybind11..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (36 samples, 5.99%)</title><rect x="869" y="452" width="71" height="15" fill="rgb(227,99,12)"/><text x="872.00" y="462.50">std::acc..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.33%)</title><rect x="936" y="468" width="4" height="15" fill="rgb(237,153,17)"/><text x="939.00" y="478.50"></text></g><g><title>0x7fc00b2b8daa (libgomp.so.1.0.0) (2 samples, 0.33%)</title><rect x="936" y="484" width="4" height="15" fill="rgb(205,111,35)"/><text x="939.00" y="494.50"></text></g><g><title>0x7fc00b2bacfd (libgomp.so.1.0.0) (1 samples, 0.17%)</title><rect x="938" y="500" width="2" height="15" fill="rgb(237,42,24)"/><text x="941.00" y="510.50"></text></g><g><title>0x7fc01b90710c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="956" y="260" width="4" height="15" fill="rgb(237,58,36)"/><text x="959.00" y="270.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.17%)</title><rect x="962" y="308" width="2" height="15" fill="rgb(249,138,46)"/><text x="965.00" y="318.50"></text></g><g><title>0x7fc01b911d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.00%)</title><rect x="956" y="228" width="12" height="15" fill="rgb(238,149,21)"/><text x="959.00" y="238.50"></text></g><g><title>0x7fc01b911666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.00%)</title><rect x="956" y="244" width="12" height="15" fill="rgb(236,135,29)"/><text x="959.00" y="254.50"></text></g><g><title>0x7fc01b9072fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="960" y="260" width="8" height="15" fill="rgb(253,84,3)"/><text x="963.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.50%)</title><rect x="962" y="276" width="6" height="15" fill="rgb(239,182,42)"/><text x="965.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.50%)</title><rect x="962" y="292" width="6" height="15" fill="rgb(207,216,26)"/><text x="965.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.33%)</title><rect x="964" y="308" width="4" height="15" fill="rgb(232,160,16)"/><text x="967.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.33%)</title><rect x="964" y="324" width="4" height="15" fill="rgb(249,100,39)"/><text x="967.00" y="334.50"></text></g><g><title>_append_char (buffer.c) (1 samples, 0.17%)</title><rect x="966" y="340" width="2" height="15" fill="rgb(228,69,5)"/><text x="969.00" y="350.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="966" y="356" width="2" height="15" fill="rgb(232,197,49)"/><text x="969.00" y="366.50"></text></g><g><title>0x7fc01b92d2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.16%)</title><rect x="956" y="212" width="14" height="15" fill="rgb(242,35,43)"/><text x="959.00" y="222.50"></text></g><g><title>0x7fc01b911e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="968" y="228" width="2" height="15" fill="rgb(215,43,44)"/><text x="971.00" y="238.50"></text></g><g><title>0x7fc01b9052bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="968" y="244" width="2" height="15" fill="rgb(246,174,4)"/><text x="971.00" y="254.50"></text></g><g><title>0x7fc01b904c7e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="968" y="260" width="2" height="15" fill="rgb(207,8,39)"/><text x="971.00" y="270.50"></text></g><g><title>0x7fc01b92d364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="970" y="212" width="2" height="15" fill="rgb(209,84,51)"/><text x="973.00" y="222.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.17%)</title><rect x="970" y="228" width="2" height="15" fill="rgb(235,205,4)"/><text x="973.00" y="238.50"></text></g><g><title>0x7fc01b92d511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="972" y="212" width="2" height="15" fill="rgb(244,97,41)"/><text x="975.00" y="222.50"></text></g><g><title>0x7fc041391151 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="972" y="228" width="2" height="15" fill="rgb(213,43,20)"/><text x="975.00" y="238.50"></text></g><g><title>memcpy (libc-2.29.so) (1 samples, 0.17%)</title><rect x="977" y="292" width="2" height="15" fill="rgb(233,25,52)"/><text x="980.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.17%)</title><rect x="979" y="324" width="2" height="15" fill="rgb(241,114,7)"/><text x="982.00" y="334.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (3 samples, 0.50%)</title><rect x="977" y="244" width="6" height="15" fill="rgb(220,31,50)"/><text x="980.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (3 samples, 0.50%)</title><rect x="977" y="260" width="6" height="15" fill="rgb(253,54,53)"/><text x="980.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.50%)</title><rect x="977" y="276" width="6" height="15" fill="rgb(215,191,49)"/><text x="980.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (2 samples, 0.33%)</title><rect x="979" y="292" width="4" height="15" fill="rgb(208,223,31)"/><text x="982.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (2 samples, 0.33%)</title><rect x="979" y="308" width="4" height="15" fill="rgb(241,152,3)"/><text x="982.00" y="318.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.17%)</title><rect x="981" y="324" width="2" height="15" fill="rgb(254,146,9)"/><text x="984.00" y="334.50"></text></g><g><title>0x7fc0412d40f9 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="981" y="340" width="2" height="15" fill="rgb(212,217,25)"/><text x="984.00" y="350.50"></text></g><g><title>0x7fc01b92d592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.00%)</title><rect x="974" y="212" width="11" height="15" fill="rgb(246,203,10)"/><text x="977.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (6 samples, 1.00%)</title><rect x="974" y="228" width="11" height="15" fill="rgb(235,204,19)"/><text x="977.00" y="238.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.17%)</title><rect x="983" y="244" width="2" height="15" fill="rgb(254,101,23)"/><text x="986.00" y="254.50"></text></g><g><title>0x7fc01b92d698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="985" y="212" width="2" height="15" fill="rgb(247,123,36)"/><text x="988.00" y="222.50"></text></g><g><title>0x7fc01b92d69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="987" y="212" width="4" height="15" fill="rgb(218,139,40)"/><text x="990.00" y="222.50"></text></g><g><title>0x7fc01b92d6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.67%)</title><rect x="991" y="212" width="8" height="15" fill="rgb(230,123,43)"/><text x="994.00" y="222.50"></text></g><g><title>0x7fc01b92d6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="999" y="212" width="2" height="15" fill="rgb(249,66,48)"/><text x="1002.00" y="222.50"></text></g><g><title>0x7fc01b92d6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1001" y="212" width="2" height="15" fill="rgb(221,49,16)"/><text x="1004.00" y="222.50"></text></g><g><title>0x7fc01b92d6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="1003" y="212" width="4" height="15" fill="rgb(224,79,46)"/><text x="1006.00" y="222.50"></text></g><g><title>0x7fc01b92d6e6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1007" y="212" width="2" height="15" fill="rgb(212,33,28)"/><text x="1010.00" y="222.50"></text></g><g><title>0x7fc01b92d7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1009" y="212" width="2" height="15" fill="rgb(237,92,2)"/><text x="1012.00" y="222.50"></text></g><g><title>0x7fc01b92e405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 4.99%)</title><rect x="956" y="196" width="59" height="15" fill="rgb(254,137,34)"/><text x="959.00" y="206.50">0x7fc0..</text></g><g><title>0x7fc01b92dc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="1011" y="212" width="4" height="15" fill="rgb(223,63,16)"/><text x="1014.00" y="222.50"></text></g><g><title>0x7fc01b905529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="1011" y="228" width="4" height="15" fill="rgb(246,125,49)"/><text x="1014.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.33%)</title><rect x="1011" y="244" width="4" height="15" fill="rgb(241,104,46)"/><text x="1014.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.33%)</title><rect x="1011" y="260" width="4" height="15" fill="rgb(228,160,45)"/><text x="1014.00" y="270.50"></text></g><g><title>0x7fc01b91efa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 5.16%)</title><rect x="956" y="180" width="61" height="15" fill="rgb(242,96,46)"/><text x="959.00" y="190.50">0x7fc0..</text></g><g><title>0x7fc01b92e540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1015" y="196" width="2" height="15" fill="rgb(216,196,46)"/><text x="1018.00" y="206.50"></text></g><g><title>0x7fc01b903152 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1015" y="212" width="2" height="15" fill="rgb(217,136,21)"/><text x="1018.00" y="222.50"></text></g><g><title>0x7fc01b91f024 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1017" y="180" width="2" height="15" fill="rgb(207,9,15)"/><text x="1020.00" y="190.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.17%)</title><rect x="1023" y="212" width="2" height="15" fill="rgb(206,118,45)"/><text x="1026.00" y="222.50"></text></g><g><title>0x7fc0404d5d20 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1023" y="228" width="2" height="15" fill="rgb(244,57,19)"/><text x="1026.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.33%)</title><rect x="1025" y="228" width="4" height="15" fill="rgb(244,198,30)"/><text x="1028.00" y="238.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.17%)</title><rect x="1029" y="228" width="1" height="15" fill="rgb(238,151,15)"/><text x="1032.00" y="238.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.17%)</title><rect x="1029" y="244" width="1" height="15" fill="rgb(248,212,14)"/><text x="1032.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.17%)</title><rect x="1029" y="260" width="1" height="15" fill="rgb(216,222,8)"/><text x="1032.00" y="270.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.17%)</title><rect x="1029" y="276" width="1" height="15" fill="rgb(208,124,54)"/><text x="1032.00" y="286.50"></text></g><g><title>0x7fc01b91f05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.16%)</title><rect x="1019" y="180" width="13" height="15" fill="rgb(217,120,27)"/><text x="1022.00" y="190.50"></text></g><g><title>array_take (methods.c) (7 samples, 1.16%)</title><rect x="1019" y="196" width="13" height="15" fill="rgb(224,213,39)"/><text x="1022.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (4 samples, 0.67%)</title><rect x="1025" y="212" width="7" height="15" fill="rgb(237,46,36)"/><text x="1028.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.17%)</title><rect x="1030" y="228" width="2" height="15" fill="rgb(219,199,13)"/><text x="1033.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.17%)</title><rect x="1030" y="244" width="2" height="15" fill="rgb(227,78,18)"/><text x="1033.00" y="254.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="1030" y="260" width="2" height="15" fill="rgb(224,158,47)"/><text x="1033.00" y="270.50"></text></g><g><title>0x7fc01b91f13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1032" y="180" width="2" height="15" fill="rgb(252,164,0)"/><text x="1035.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.17%)</title><rect x="1032" y="196" width="2" height="15" fill="rgb(222,144,37)"/><text x="1035.00" y="206.50"></text></g><g><title>0x7fc01b91f328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1034" y="180" width="2" height="15" fill="rgb(253,142,41)"/><text x="1037.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.17%)</title><rect x="1034" y="196" width="2" height="15" fill="rgb(236,32,2)"/><text x="1037.00" y="206.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.17%)</title><rect x="1034" y="212" width="2" height="15" fill="rgb(209,36,46)"/><text x="1037.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.17%)</title><rect x="1034" y="228" width="2" height="15" fill="rgb(254,161,15)"/><text x="1037.00" y="238.50"></text></g><g><title>0x7fc01b91f550 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1036" y="180" width="2" height="15" fill="rgb(215,67,28)"/><text x="1039.00" y="190.50"></text></g><g><title>0x7fc01b91fd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (43 samples, 7.15%)</title><rect x="956" y="164" width="84" height="15" fill="rgb(211,11,19)"/><text x="959.00" y="174.50">0x7fc01b9..</text></g><g><title>0x7fc01b91f5f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.17%)</title><rect x="1038" y="180" width="2" height="15" fill="rgb(218,189,10)"/><text x="1041.00" y="190.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.17%)</title><rect x="1078" y="196" width="2" height="15" fill="rgb(211,127,22)"/><text x="1081.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.17%)</title><rect x="1080" y="196" width="2" height="15" fill="rgb(235,199,29)"/><text x="1083.00" y="206.50"></text></g><g><title>0x7fc0413920e6 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1095" y="212" width="2" height="15" fill="rgb(242,88,7)"/><text x="1098.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (9 samples, 1.50%)</title><rect x="1082" y="196" width="17" height="15" fill="rgb(210,73,38)"/><text x="1085.00" y="206.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.17%)</title><rect x="1097" y="212" width="2" height="15" fill="rgb(239,205,27)"/><text x="1100.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.17%)</title><rect x="1099" y="196" width="2" height="15" fill="rgb(249,26,30)"/><text x="1102.00" y="206.50"></text></g><g><title>0x7fc0412c9b64 (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1119" y="212" width="2" height="15" fill="rgb(244,146,6)"/><text x="1122.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.17%)</title><rect x="1121" y="212" width="2" height="15" fill="rgb(211,218,4)"/><text x="1124.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (14 samples, 2.33%)</title><rect x="1101" y="196" width="28" height="15" fill="rgb(214,8,32)"/><text x="1104.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py) (3 samples, 0.50%)</title><rect x="1123" y="212" width="6" height="15" fill="rgb(249,10,33)"/><text x="1126.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (2 samples, 0.33%)</title><rect x="1125" y="228" width="4" height="15" fill="rgb(224,172,33)"/><text x="1128.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (2 samples, 0.33%)</title><rect x="1129" y="196" width="4" height="15" fill="rgb(251,119,23)"/><text x="1132.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.17%)</title><rect x="1131" y="212" width="2" height="15" fill="rgb(234,12,53)"/><text x="1134.00" y="222.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.17%)</title><rect x="1131" y="228" width="2" height="15" fill="rgb(224,217,23)"/><text x="1134.00" y="238.50"></text></g><g><title>0x7fc041391d2f (libc-2.29.so) (1 samples, 0.17%)</title><rect x="1131" y="244" width="2" height="15" fill="rgb(238,145,27)"/><text x="1134.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (49 samples, 8.15%)</title><rect x="1048" y="180" width="96" height="15" fill="rgb(249,139,41)"/><text x="1051.00" y="190.50">check_array..</text></g><g><title>simplefilter (warnings.py) (6 samples, 1.00%)</title><rect x="1133" y="196" width="11" height="15" fill="rgb(227,168,13)"/><text x="1136.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (4 samples, 0.67%)</title><rect x="1136" y="212" width="8" height="15" fill="rgb(213,114,9)"/><text x="1139.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (55 samples, 9.15%)</title><rect x="1040" y="164" width="108" height="15" fill="rgb(247,136,10)"/><text x="1043.00" y="174.50">_validate_X_p..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.33%)</title><rect x="1144" y="180" width="4" height="15" fill="rgb(211,213,34)"/><text x="1147.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 0.50%)</title><rect x="1178" y="196" width="6" height="15" fill="rgb(224,167,34)"/><text x="1181.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (19 samples, 3.16%)</title><rect x="1148" y="164" width="38" height="15" fill="rgb(246,4,40)"/><text x="1151.00" y="174.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (14 samples, 2.33%)</title><rect x="1158" y="180" width="28" height="15" fill="rgb(242,1,33)"/><text x="1161.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.17%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(206,226,21)"/><text x="1187.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (124 samples, 20.63%)</title><rect x="944" y="132" width="244" height="15" fill="rgb(244,183,43)"/><text x="947.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>predict (sklearn/tree/_classes.py) (123 samples, 20.47%)</title><rect x="946" y="148" width="242" height="15" fill="rgb(214,13,25)"/><text x="949.00" y="158.50">predict (sklearn/tree/_classes.p..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.17%)</title><rect x="1186" y="164" width="2" height="15" fill="rgb(227,145,50)"/><text x="1189.00" y="174.50"></text></g><g><title>all (601 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(247,84,44)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (601 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(222,89,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (127 samples, 21.13%)</title><rect x="940" y="68" width="250" height="15" fill="rgb(253,224,44)"/><text x="943.00" y="78.50">profile_skl (bench_DecisionTreeRe..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (127 samples, 21.13%)</title><rect x="940" y="84" width="250" height="15" fill="rgb(244,66,34)"/><text x="943.00" y="94.50">setup_profile (bench_DecisionTree..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_50_12_float_.py) (127 samples, 21.13%)</title><rect x="940" y="100" width="250" height="15" fill="rgb(244,204,41)"/><text x="943.00" y="110.50">profile (bench_DecisionTreeRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (126 samples, 20.97%)</title><rect x="942" y="116" width="248" height="15" fill="rgb(206,90,14)"/><text x="945.00" y="126.50">time_predict (mlprodict/asv_bench..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.17%)</title><rect x="1188" y="132" width="2" height="15" fill="rgb(254,15,2)"/><text x="1191.00" y="142.50"></text></g></g></svg>