<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:1) (1 samples, 0.41%)</title><rect x="10" y="148" width="4" height="15" fill="rgb(216,177,32)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="164" width="4" height="15" fill="rgb(245,109,22)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="180" width="4" height="15" fill="rgb(245,138,49)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="196" width="4" height="15" fill="rgb(235,57,4)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="212" width="4" height="15" fill="rgb(219,129,33)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="228" width="4" height="15" fill="rgb(220,201,42)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.41%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(242,8,2)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(219,80,49)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(210,128,23)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(225,210,8)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(225,24,23)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(235,51,12)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(241,8,39)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(208,178,13)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.41%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(207,162,39)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(206,8,29)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(232,192,28)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(236,187,7)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(240,132,50)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(234,215,42)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(216,175,19)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(246,203,47)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.41%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(239,191,37)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(234,86,31)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(222,70,14)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="548" width="4" height="15" fill="rgb(236,101,25)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="564" width="4" height="15" fill="rgb(250,222,48)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="580" width="4" height="15" fill="rgb(238,159,1)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="596" width="4" height="15" fill="rgb(236,229,38)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="612" width="4" height="15" fill="rgb(209,217,16)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py:2919) (1 samples, 0.41%)</title><rect x="10" y="628" width="4" height="15" fill="rgb(206,49,8)"/><text x="13.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.41%)</title><rect x="10" y="644" width="4" height="15" fill="rgb(240,145,18)"/><text x="13.00" y="654.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.41%)</title><rect x="14" y="916" width="5" height="15" fill="rgb(218,47,37)"/><text x="17.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.41%)</title><rect x="14" y="932" width="5" height="15" fill="rgb(231,156,0)"/><text x="17.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="14" y="948" width="5" height="15" fill="rgb(236,154,43)"/><text x="17.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="14" y="964" width="5" height="15" fill="rgb(205,223,18)"/><text x="17.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.41%)</title><rect x="14" y="980" width="5" height="15" fill="rgb(210,85,4)"/><text x="17.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.41%)</title><rect x="14" y="996" width="5" height="15" fill="rgb(233,122,6)"/><text x="17.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.41%)</title><rect x="14" y="1012" width="5" height="15" fill="rgb(225,190,48)"/><text x="17.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:116) (1 samples, 0.41%)</title><rect x="14" y="1028" width="5" height="15" fill="rgb(205,192,45)"/><text x="17.00" y="1038.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (2 samples, 0.81%)</title><rect x="14" y="852" width="10" height="15" fill="rgb(207,226,31)"/><text x="17.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (2 samples, 0.81%)</title><rect x="14" y="868" width="10" height="15" fill="rgb(239,176,25)"/><text x="17.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (2 samples, 0.81%)</title><rect x="14" y="884" width="10" height="15" fill="rgb(209,63,26)"/><text x="17.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.81%)</title><rect x="14" y="900" width="10" height="15" fill="rgb(247,153,3)"/><text x="17.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.41%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(207,66,1)"/><text x="22.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.41%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(223,91,36)"/><text x="22.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(234,76,11)"/><text x="22.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(207,162,15)"/><text x="22.00" y="974.50"></text></g><g><title>0x7f22de679237 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="19" y="980" width="5" height="15" fill="rgb(235,127,31)"/><text x="22.00" y="990.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2199) (1 samples, 0.41%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(247,35,17)"/><text x="27.00" y="926.50"></text></g><g><title>__enter__ (warnings.py:475) (1 samples, 0.41%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(248,196,28)"/><text x="27.00" y="942.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (2 samples, 0.81%)</title><rect x="29" y="932" width="9" height="15" fill="rgb(228,49,16)"/><text x="32.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (2 samples, 0.81%)</title><rect x="29" y="948" width="9" height="15" fill="rgb(250,140,33)"/><text x="32.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1391) (2 samples, 0.81%)</title><rect x="29" y="964" width="9" height="15" fill="rgb(239,113,10)"/><text x="32.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;:59) (1 samples, 0.41%)</title><rect x="33" y="980" width="5" height="15" fill="rgb(226,34,52)"/><text x="36.00" y="990.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (4 samples, 1.63%)</title><rect x="24" y="852" width="19" height="15" fill="rgb(212,22,42)"/><text x="27.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (4 samples, 1.63%)</title><rect x="24" y="868" width="19" height="15" fill="rgb(239,73,32)"/><text x="27.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (4 samples, 1.63%)</title><rect x="24" y="884" width="19" height="15" fill="rgb(239,189,31)"/><text x="27.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (4 samples, 1.63%)</title><rect x="24" y="900" width="19" height="15" fill="rgb(223,136,5)"/><text x="27.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (3 samples, 1.22%)</title><rect x="29" y="916" width="14" height="15" fill="rgb(251,193,38)"/><text x="32.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:434) (1 samples, 0.41%)</title><rect x="38" y="932" width="5" height="15" fill="rgb(225,228,53)"/><text x="41.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:2) (8 samples, 3.25%)</title><rect x="14" y="148" width="39" height="15" fill="rgb(214,209,24)"/><text x="17.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="164" width="39" height="15" fill="rgb(220,165,50)"/><text x="17.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 3.25%)</title><rect x="14" y="180" width="39" height="15" fill="rgb(225,4,39)"/><text x="17.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="196" width="39" height="15" fill="rgb(207,95,16)"/><text x="17.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="212" width="39" height="15" fill="rgb(211,210,30)"/><text x="17.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.25%)</title><rect x="14" y="228" width="39" height="15" fill="rgb(249,15,12)"/><text x="17.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.25%)</title><rect x="14" y="244" width="39" height="15" fill="rgb(254,14,7)"/><text x="17.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.25%)</title><rect x="14" y="260" width="39" height="15" fill="rgb(214,212,28)"/><text x="17.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="276" width="39" height="15" fill="rgb(225,25,28)"/><text x="17.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 3.25%)</title><rect x="14" y="292" width="39" height="15" fill="rgb(252,66,36)"/><text x="17.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="308" width="39" height="15" fill="rgb(215,107,5)"/><text x="17.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.25%)</title><rect x="14" y="324" width="39" height="15" fill="rgb(217,205,46)"/><text x="17.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.25%)</title><rect x="14" y="340" width="39" height="15" fill="rgb(213,219,18)"/><text x="17.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.25%)</title><rect x="14" y="356" width="39" height="15" fill="rgb(253,152,5)"/><text x="17.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="372" width="39" height="15" fill="rgb(232,143,31)"/><text x="17.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 3.25%)</title><rect x="14" y="388" width="39" height="15" fill="rgb(250,227,21)"/><text x="17.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="404" width="39" height="15" fill="rgb(234,3,18)"/><text x="17.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.25%)</title><rect x="14" y="420" width="39" height="15" fill="rgb(239,50,53)"/><text x="17.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.25%)</title><rect x="14" y="436" width="39" height="15" fill="rgb(220,179,33)"/><text x="17.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.25%)</title><rect x="14" y="452" width="39" height="15" fill="rgb(247,216,23)"/><text x="17.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="468" width="39" height="15" fill="rgb(212,177,50)"/><text x="17.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 3.25%)</title><rect x="14" y="484" width="39" height="15" fill="rgb(208,145,19)"/><text x="17.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="500" width="39" height="15" fill="rgb(223,134,1)"/><text x="17.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.25%)</title><rect x="14" y="516" width="39" height="15" fill="rgb(251,199,48)"/><text x="17.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.25%)</title><rect x="14" y="532" width="39" height="15" fill="rgb(210,219,21)"/><text x="17.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.25%)</title><rect x="14" y="548" width="39" height="15" fill="rgb(239,143,7)"/><text x="17.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="564" width="39" height="15" fill="rgb(251,94,16)"/><text x="17.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 3.25%)</title><rect x="14" y="580" width="39" height="15" fill="rgb(215,216,2)"/><text x="17.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="596" width="39" height="15" fill="rgb(249,37,43)"/><text x="17.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 3.25%)</title><rect x="14" y="612" width="39" height="15" fill="rgb(252,179,53)"/><text x="17.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="628" width="39" height="15" fill="rgb(232,185,33)"/><text x="17.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="644" width="39" height="15" fill="rgb(228,180,28)"/><text x="17.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.25%)</title><rect x="14" y="660" width="39" height="15" fill="rgb(251,81,33)"/><text x="17.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.25%)</title><rect x="14" y="676" width="39" height="15" fill="rgb(253,83,38)"/><text x="17.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.25%)</title><rect x="14" y="692" width="39" height="15" fill="rgb(238,107,4)"/><text x="17.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="708" width="39" height="15" fill="rgb(227,150,2)"/><text x="17.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 3.25%)</title><rect x="14" y="724" width="39" height="15" fill="rgb(243,190,24)"/><text x="17.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 3.25%)</title><rect x="14" y="740" width="39" height="15" fill="rgb(205,225,54)"/><text x="17.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 3.25%)</title><rect x="14" y="756" width="39" height="15" fill="rgb(231,130,24)"/><text x="17.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 3.25%)</title><rect x="14" y="772" width="39" height="15" fill="rgb(218,48,18)"/><text x="17.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 3.25%)</title><rect x="14" y="788" width="39" height="15" fill="rgb(253,201,34)"/><text x="17.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 3.25%)</title><rect x="14" y="804" width="39" height="15" fill="rgb(245,149,0)"/><text x="17.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 3.25%)</title><rect x="14" y="820" width="39" height="15" fill="rgb(245,164,19)"/><text x="17.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 3.25%)</title><rect x="14" y="836" width="39" height="15" fill="rgb(252,202,42)"/><text x="17.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.81%)</title><rect x="43" y="852" width="10" height="15" fill="rgb(225,165,31)"/><text x="46.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (2 samples, 0.81%)</title><rect x="43" y="868" width="10" height="15" fill="rgb(209,76,45)"/><text x="46.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.41%)</title><rect x="48" y="884" width="5" height="15" fill="rgb(249,214,32)"/><text x="51.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.41%)</title><rect x="48" y="900" width="5" height="15" fill="rgb(210,96,39)"/><text x="51.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.41%)</title><rect x="48" y="916" width="5" height="15" fill="rgb(217,33,43)"/><text x="51.00" y="926.50"></text></g><g><title>opendir (libc-2.29.so) (1 samples, 0.41%)</title><rect x="48" y="932" width="5" height="15" fill="rgb(214,41,34)"/><text x="51.00" y="942.50"></text></g><g><title>__open64_nocancel (libc-2.29.so) (1 samples, 0.41%)</title><rect x="48" y="948" width="5" height="15" fill="rgb(217,35,49)"/><text x="51.00" y="958.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (1 samples, 0.41%)</title><rect x="53" y="900" width="4" height="15" fill="rgb(226,132,32)"/><text x="56.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="916" width="4" height="15" fill="rgb(236,13,35)"/><text x="56.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="932" width="4" height="15" fill="rgb(243,7,46)"/><text x="56.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="948" width="4" height="15" fill="rgb(235,158,16)"/><text x="56.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="964" width="4" height="15" fill="rgb(233,106,18)"/><text x="56.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="980" width="4" height="15" fill="rgb(235,193,45)"/><text x="56.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py:24) (1 samples, 0.41%)</title><rect x="53" y="996" width="4" height="15" fill="rgb(254,140,15)"/><text x="56.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="53" y="1012" width="4" height="15" fill="rgb(246,137,12)"/><text x="56.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1028" width="4" height="15" fill="rgb(242,7,51)"/><text x="56.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1044" width="4" height="15" fill="rgb(242,196,44)"/><text x="56.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1060" width="4" height="15" fill="rgb(232,46,18)"/><text x="56.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1076" width="4" height="15" fill="rgb(211,30,19)"/><text x="56.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1092" width="4" height="15" fill="rgb(243,108,28)"/><text x="56.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1108" width="4" height="15" fill="rgb(210,75,9)"/><text x="56.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/__init__.py:411) (1 samples, 0.41%)</title><rect x="53" y="1124" width="4" height="15" fill="rgb(235,166,35)"/><text x="56.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1140" width="4" height="15" fill="rgb(240,105,47)"/><text x="56.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1156" width="4" height="15" fill="rgb(243,81,6)"/><text x="56.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1172" width="4" height="15" fill="rgb(234,21,2)"/><text x="56.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1188" width="4" height="15" fill="rgb(217,226,26)"/><text x="56.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1204" width="4" height="15" fill="rgb(247,162,44)"/><text x="56.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/optimize/_shgo.py:11) (1 samples, 0.41%)</title><rect x="53" y="1220" width="4" height="15" fill="rgb(241,145,30)"/><text x="56.00" y="1230.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="53" y="1236" width="4" height="15" fill="rgb(254,95,35)"/><text x="56.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1252" width="4" height="15" fill="rgb(239,18,46)"/><text x="56.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1268" width="4" height="15" fill="rgb(213,79,5)"/><text x="56.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1284" width="4" height="15" fill="rgb(246,117,9)"/><text x="56.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1300" width="4" height="15" fill="rgb(214,29,15)"/><text x="56.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1316" width="4" height="15" fill="rgb(233,53,52)"/><text x="56.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1332" width="4" height="15" fill="rgb(252,22,41)"/><text x="56.00" y="1342.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:109) (1 samples, 0.41%)</title><rect x="53" y="1348" width="4" height="15" fill="rgb(226,42,47)"/><text x="56.00" y="1358.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="53" y="1364" width="4" height="15" fill="rgb(227,70,34)"/><text x="56.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1380" width="4" height="15" fill="rgb(242,20,30)"/><text x="56.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1396" width="4" height="15" fill="rgb(237,4,8)"/><text x="56.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1412" width="4" height="15" fill="rgb(235,132,0)"/><text x="56.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1428" width="4" height="15" fill="rgb(220,224,35)"/><text x="56.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="53" y="1444" width="4" height="15" fill="rgb(218,170,37)"/><text x="56.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="53" y="1460" width="4" height="15" fill="rgb(239,34,12)"/><text x="56.00" y="1470.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/transform/__init__.py:21) (1 samples, 0.41%)</title><rect x="53" y="1476" width="4" height="15" fill="rgb(225,134,22)"/><text x="56.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="53" y="1492" width="4" height="15" fill="rgb(233,181,7)"/><text x="56.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="53" y="1508" width="4" height="15" fill="rgb(231,194,41)"/><text x="56.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="53" y="1524" width="4" height="15" fill="rgb(231,203,29)"/><text x="56.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="53" y="1540" width="4" height="15" fill="rgb(210,23,38)"/><text x="56.00" y="1550.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="53" y="1556" width="4" height="15" fill="rgb(248,2,32)"/><text x="56.00" y="1566.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="53" y="1572" width="4" height="15" fill="rgb(232,137,20)"/><text x="56.00" y="1582.50"></text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:4) (2 samples, 0.81%)</title><rect x="53" y="148" width="9" height="15" fill="rgb(249,55,32)"/><text x="56.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="164" width="9" height="15" fill="rgb(223,67,39)"/><text x="56.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.81%)</title><rect x="53" y="180" width="9" height="15" fill="rgb(220,43,19)"/><text x="56.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="196" width="9" height="15" fill="rgb(226,58,53)"/><text x="56.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="212" width="9" height="15" fill="rgb(224,3,40)"/><text x="56.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="228" width="9" height="15" fill="rgb(211,103,6)"/><text x="56.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="244" width="9" height="15" fill="rgb(223,198,5)"/><text x="56.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="260" width="9" height="15" fill="rgb(208,6,7)"/><text x="56.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="276" width="9" height="15" fill="rgb(250,166,22)"/><text x="56.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (2 samples, 0.81%)</title><rect x="53" y="292" width="9" height="15" fill="rgb(215,11,29)"/><text x="56.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="308" width="9" height="15" fill="rgb(241,94,45)"/><text x="56.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="324" width="9" height="15" fill="rgb(250,13,11)"/><text x="56.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="340" width="9" height="15" fill="rgb(218,133,19)"/><text x="56.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="356" width="9" height="15" fill="rgb(242,145,37)"/><text x="56.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="372" width="9" height="15" fill="rgb(241,95,47)"/><text x="56.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (2 samples, 0.81%)</title><rect x="53" y="388" width="9" height="15" fill="rgb(215,145,6)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="404" width="9" height="15" fill="rgb(254,92,51)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="420" width="9" height="15" fill="rgb(226,141,30)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="436" width="9" height="15" fill="rgb(205,196,45)"/><text x="56.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="452" width="9" height="15" fill="rgb(234,146,9)"/><text x="56.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="468" width="9" height="15" fill="rgb(244,180,8)"/><text x="56.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (2 samples, 0.81%)</title><rect x="53" y="484" width="9" height="15" fill="rgb(229,211,24)"/><text x="56.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="500" width="9" height="15" fill="rgb(243,132,1)"/><text x="56.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="516" width="9" height="15" fill="rgb(215,101,43)"/><text x="56.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="532" width="9" height="15" fill="rgb(210,202,19)"/><text x="56.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="548" width="9" height="15" fill="rgb(235,174,30)"/><text x="56.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="564" width="9" height="15" fill="rgb(214,14,9)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (2 samples, 0.81%)</title><rect x="53" y="580" width="9" height="15" fill="rgb(206,183,33)"/><text x="56.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="596" width="9" height="15" fill="rgb(226,205,47)"/><text x="56.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="612" width="9" height="15" fill="rgb(228,4,30)"/><text x="56.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="628" width="9" height="15" fill="rgb(241,171,54)"/><text x="56.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="644" width="9" height="15" fill="rgb(235,115,21)"/><text x="56.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="660" width="9" height="15" fill="rgb(247,193,2)"/><text x="56.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (2 samples, 0.81%)</title><rect x="53" y="676" width="9" height="15" fill="rgb(236,75,12)"/><text x="56.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="692" width="9" height="15" fill="rgb(254,26,4)"/><text x="56.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="708" width="9" height="15" fill="rgb(213,54,49)"/><text x="56.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="724" width="9" height="15" fill="rgb(251,120,23)"/><text x="56.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="740" width="9" height="15" fill="rgb(244,36,29)"/><text x="56.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="756" width="9" height="15" fill="rgb(242,102,29)"/><text x="56.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:182) (2 samples, 0.81%)</title><rect x="53" y="772" width="9" height="15" fill="rgb(234,27,1)"/><text x="56.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.81%)</title><rect x="53" y="788" width="9" height="15" fill="rgb(223,169,50)"/><text x="56.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="804" width="9" height="15" fill="rgb(250,156,36)"/><text x="56.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="53" y="820" width="9" height="15" fill="rgb(226,127,45)"/><text x="56.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="53" y="836" width="9" height="15" fill="rgb(220,174,19)"/><text x="56.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="53" y="852" width="9" height="15" fill="rgb(244,95,6)"/><text x="56.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="53" y="868" width="9" height="15" fill="rgb(222,31,53)"/><text x="56.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="53" y="884" width="9" height="15" fill="rgb(250,91,7)"/><text x="56.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:13) (1 samples, 0.41%)</title><rect x="57" y="900" width="5" height="15" fill="rgb(252,108,38)"/><text x="60.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="57" y="916" width="5" height="15" fill="rgb(213,82,3)"/><text x="60.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="57" y="932" width="5" height="15" fill="rgb(225,218,0)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="57" y="948" width="5" height="15" fill="rgb(216,164,52)"/><text x="60.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="57" y="964" width="5" height="15" fill="rgb(239,199,26)"/><text x="60.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="57" y="980" width="5" height="15" fill="rgb(214,148,8)"/><text x="60.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="57" y="996" width="5" height="15" fill="rgb(225,73,38)"/><text x="60.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="57" y="1012" width="5" height="15" fill="rgb(219,92,25)"/><text x="60.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:16) (1 samples, 0.41%)</title><rect x="57" y="1028" width="5" height="15" fill="rgb(223,223,13)"/><text x="60.00" y="1038.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="57" y="1044" width="5" height="15" fill="rgb(232,204,53)"/><text x="60.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="57" y="1060" width="5" height="15" fill="rgb(233,91,51)"/><text x="60.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="57" y="1076" width="5" height="15" fill="rgb(222,114,37)"/><text x="60.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="57" y="1092" width="5" height="15" fill="rgb(250,181,33)"/><text x="60.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="57" y="1108" width="5" height="15" fill="rgb(226,147,16)"/><text x="60.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="57" y="1124" width="5" height="15" fill="rgb(242,133,33)"/><text x="60.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="57" y="1140" width="5" height="15" fill="rgb(233,16,26)"/><text x="60.00" y="1150.50"></text></g><g><title>&lt;module&gt; (scipy/interpolate/__init__.py:167) (1 samples, 0.41%)</title><rect x="57" y="1156" width="5" height="15" fill="rgb(247,178,44)"/><text x="60.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="57" y="1172" width="5" height="15" fill="rgb(219,93,26)"/><text x="60.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="57" y="1188" width="5" height="15" fill="rgb(231,141,31)"/><text x="60.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="57" y="1204" width="5" height="15" fill="rgb(208,124,34)"/><text x="60.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="57" y="1220" width="5" height="15" fill="rgb(220,74,18)"/><text x="60.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="57" y="1236" width="5" height="15" fill="rgb(206,36,19)"/><text x="60.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="57" y="1252" width="5" height="15" fill="rgb(238,227,5)"/><text x="60.00" y="1262.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.41%)</title><rect x="62" y="1012" width="5" height="15" fill="rgb(235,17,12)"/><text x="65.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1028" width="5" height="15" fill="rgb(241,9,25)"/><text x="65.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1044" width="5" height="15" fill="rgb(228,224,50)"/><text x="65.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1060" width="5" height="15" fill="rgb(229,90,8)"/><text x="65.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1076" width="5" height="15" fill="rgb(248,189,9)"/><text x="65.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1092" width="5" height="15" fill="rgb(225,119,25)"/><text x="65.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.41%)</title><rect x="62" y="1108" width="5" height="15" fill="rgb(213,34,23)"/><text x="65.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1124" width="5" height="15" fill="rgb(246,143,51)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1140" width="5" height="15" fill="rgb(242,124,22)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1156" width="5" height="15" fill="rgb(249,73,32)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1172" width="5" height="15" fill="rgb(244,77,0)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1188" width="5" height="15" fill="rgb(212,95,31)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.41%)</title><rect x="62" y="1204" width="5" height="15" fill="rgb(251,185,33)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1220" width="5" height="15" fill="rgb(238,60,13)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1236" width="5" height="15" fill="rgb(236,125,34)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1252" width="5" height="15" fill="rgb(235,32,26)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1268" width="5" height="15" fill="rgb(227,208,40)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1284" width="5" height="15" fill="rgb(245,214,48)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.41%)</title><rect x="62" y="1300" width="5" height="15" fill="rgb(254,132,19)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1316" width="5" height="15" fill="rgb(214,121,0)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1332" width="5" height="15" fill="rgb(212,133,50)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1348" width="5" height="15" fill="rgb(225,143,9)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1364" width="5" height="15" fill="rgb(207,31,8)"/><text x="65.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1380" width="5" height="15" fill="rgb(234,78,10)"/><text x="65.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.41%)</title><rect x="62" y="1396" width="5" height="15" fill="rgb(251,71,14)"/><text x="65.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1412" width="5" height="15" fill="rgb(242,38,47)"/><text x="65.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1428" width="5" height="15" fill="rgb(221,167,13)"/><text x="65.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1444" width="5" height="15" fill="rgb(232,7,41)"/><text x="65.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1460" width="5" height="15" fill="rgb(254,206,13)"/><text x="65.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1476" width="5" height="15" fill="rgb(234,133,19)"/><text x="65.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:14) (1 samples, 0.41%)</title><rect x="62" y="1492" width="5" height="15" fill="rgb(243,130,53)"/><text x="65.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1508" width="5" height="15" fill="rgb(233,54,53)"/><text x="65.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1524" width="5" height="15" fill="rgb(247,157,35)"/><text x="65.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1540" width="5" height="15" fill="rgb(238,173,38)"/><text x="65.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1556" width="5" height="15" fill="rgb(250,113,16)"/><text x="65.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1572" width="5" height="15" fill="rgb(237,81,38)"/><text x="65.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py:34) (1 samples, 0.41%)</title><rect x="62" y="1588" width="5" height="15" fill="rgb(208,212,1)"/><text x="65.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1604" width="5" height="15" fill="rgb(219,182,10)"/><text x="65.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1620" width="5" height="15" fill="rgb(240,55,39)"/><text x="65.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1636" width="5" height="15" fill="rgb(222,68,6)"/><text x="65.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1652" width="5" height="15" fill="rgb(248,38,22)"/><text x="65.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1668" width="5" height="15" fill="rgb(254,122,51)"/><text x="65.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py:5) (1 samples, 0.41%)</title><rect x="62" y="1684" width="5" height="15" fill="rgb(252,126,4)"/><text x="65.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1700" width="5" height="15" fill="rgb(228,196,7)"/><text x="65.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1716" width="5" height="15" fill="rgb(227,4,15)"/><text x="65.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1732" width="5" height="15" fill="rgb(210,61,16)"/><text x="65.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1748" width="5" height="15" fill="rgb(226,60,20)"/><text x="65.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1764" width="5" height="15" fill="rgb(217,25,49)"/><text x="65.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py:25) (1 samples, 0.41%)</title><rect x="62" y="1780" width="5" height="15" fill="rgb(239,219,47)"/><text x="65.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1796" width="5" height="15" fill="rgb(251,159,17)"/><text x="65.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1812" width="5" height="15" fill="rgb(254,91,31)"/><text x="65.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1828" width="5" height="15" fill="rgb(215,214,13)"/><text x="65.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1844" width="5" height="15" fill="rgb(243,67,54)"/><text x="65.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1860" width="5" height="15" fill="rgb(241,80,21)"/><text x="65.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py:14) (1 samples, 0.41%)</title><rect x="62" y="1876" width="5" height="15" fill="rgb(219,43,50)"/><text x="65.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="62" y="1892" width="5" height="15" fill="rgb(230,177,29)"/><text x="65.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="62" y="1908" width="5" height="15" fill="rgb(208,56,52)"/><text x="65.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="62" y="1924" width="5" height="15" fill="rgb(225,129,10)"/><text x="65.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="62" y="1940" width="5" height="15" fill="rgb(236,213,4)"/><text x="65.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="62" y="1956" width="5" height="15" fill="rgb(238,41,35)"/><text x="65.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py:1353) (1 samples, 0.41%)</title><rect x="62" y="1972" width="5" height="15" fill="rgb(223,116,41)"/><text x="65.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py:925) (1 samples, 0.41%)</title><rect x="62" y="1988" width="5" height="15" fill="rgb(226,216,20)"/><text x="65.00" y="1998.50"></text></g><g><title>load (json/__init__.py:296) (1 samples, 0.41%)</title><rect x="62" y="2004" width="5" height="15" fill="rgb(205,58,27)"/><text x="65.00" y="2014.50"></text></g><g><title>loads (json/__init__.py:361) (1 samples, 0.41%)</title><rect x="62" y="2020" width="5" height="15" fill="rgb(243,221,16)"/><text x="65.00" y="2030.50"></text></g><g><title>decode (json/decoder.py:337) (1 samples, 0.41%)</title><rect x="62" y="2036" width="5" height="15" fill="rgb(247,50,20)"/><text x="65.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py:353) (1 samples, 0.41%)</title><rect x="62" y="2052" width="5" height="15" fill="rgb(210,131,18)"/><text x="65.00" y="2062.50"></text></g><g><title>0x7f22ca88f720 (?) (1 samples, 0.41%)</title><rect x="62" y="2068" width="5" height="15" fill="rgb(237,201,14)"/><text x="65.00" y="2078.50"></text></g><g><title>0x7f22ca891568 (?) (1 samples, 0.41%)</title><rect x="62" y="2084" width="5" height="15" fill="rgb(206,55,24)"/><text x="65.00" y="2094.50"></text></g><g><title>0x7f22ca8908fe (?) (1 samples, 0.41%)</title><rect x="62" y="2100" width="5" height="15" fill="rgb(234,202,36)"/><text x="65.00" y="2110.50"></text></g><g><title>0x7f22ca89075d (?) (1 samples, 0.41%)</title><rect x="62" y="2116" width="5" height="15" fill="rgb(247,105,53)"/><text x="65.00" y="2126.50"></text></g><g><title>0x7f22ca891444 (?) (1 samples, 0.41%)</title><rect x="62" y="2132" width="5" height="15" fill="rgb(209,104,18)"/><text x="65.00" y="2142.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.81%)</title><rect x="62" y="436" width="10" height="15" fill="rgb(226,41,18)"/><text x="65.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="62" y="452" width="10" height="15" fill="rgb(220,47,44)"/><text x="65.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="62" y="468" width="10" height="15" fill="rgb(229,179,21)"/><text x="65.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="62" y="484" width="10" height="15" fill="rgb(244,124,36)"/><text x="65.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="62" y="500" width="10" height="15" fill="rgb(221,3,32)"/><text x="65.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="62" y="516" width="10" height="15" fill="rgb(228,94,46)"/><text x="65.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.81%)</title><rect x="62" y="532" width="10" height="15" fill="rgb(230,229,40)"/><text x="65.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="62" y="548" width="10" height="15" fill="rgb(245,86,29)"/><text x="65.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="62" y="564" width="10" height="15" fill="rgb(224,46,45)"/><text x="65.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="62" y="580" width="10" height="15" fill="rgb(231,229,38)"/><text x="65.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="62" y="596" width="10" height="15" fill="rgb(211,74,39)"/><text x="65.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="62" y="612" width="10" height="15" fill="rgb(226,228,39)"/><text x="65.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.81%)</title><rect x="62" y="628" width="10" height="15" fill="rgb(240,106,18)"/><text x="65.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="62" y="644" width="10" height="15" fill="rgb(252,55,44)"/><text x="65.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="62" y="660" width="10" height="15" fill="rgb(242,167,29)"/><text x="65.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="62" y="676" width="10" height="15" fill="rgb(216,145,8)"/><text x="65.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="62" y="692" width="10" height="15" fill="rgb(233,197,8)"/><text x="65.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="62" y="708" width="10" height="15" fill="rgb(222,79,35)"/><text x="65.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.81%)</title><rect x="62" y="724" width="10" height="15" fill="rgb(242,94,3)"/><text x="65.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="62" y="740" width="10" height="15" fill="rgb(214,64,37)"/><text x="65.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="62" y="756" width="10" height="15" fill="rgb(252,41,25)"/><text x="65.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="62" y="772" width="10" height="15" fill="rgb(213,40,45)"/><text x="65.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="62" y="788" width="10" height="15" fill="rgb(229,69,45)"/><text x="65.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="62" y="804" width="10" height="15" fill="rgb(217,59,48)"/><text x="65.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.81%)</title><rect x="62" y="820" width="10" height="15" fill="rgb(245,216,38)"/><text x="65.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="62" y="836" width="10" height="15" fill="rgb(246,45,24)"/><text x="65.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="62" y="852" width="10" height="15" fill="rgb(251,221,14)"/><text x="65.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="62" y="868" width="10" height="15" fill="rgb(222,223,10)"/><text x="65.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="62" y="884" width="10" height="15" fill="rgb(248,8,6)"/><text x="65.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="62" y="900" width="10" height="15" fill="rgb(215,177,39)"/><text x="65.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (2 samples, 0.81%)</title><rect x="62" y="916" width="10" height="15" fill="rgb(207,98,34)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.81%)</title><rect x="62" y="932" width="10" height="15" fill="rgb(245,217,54)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.81%)</title><rect x="62" y="948" width="10" height="15" fill="rgb(249,153,12)"/><text x="65.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.81%)</title><rect x="62" y="964" width="10" height="15" fill="rgb(205,66,39)"/><text x="65.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.81%)</title><rect x="62" y="980" width="10" height="15" fill="rgb(230,226,51)"/><text x="65.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.81%)</title><rect x="62" y="996" width="10" height="15" fill="rgb(252,143,50)"/><text x="65.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:305) (1 samples, 0.41%)</title><rect x="67" y="1012" width="5" height="15" fill="rgb(217,112,3)"/><text x="70.00" y="1022.50"></text></g><g><title>DataFrame (pandas/core/frame.py:4718) (1 samples, 0.41%)</title><rect x="67" y="1028" width="5" height="15" fill="rgb(250,221,33)"/><text x="70.00" y="1038.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.41%)</title><rect x="67" y="1044" width="5" height="15" fill="rgb(220,127,41)"/><text x="70.00" y="1054.50"></text></g><g><title>dedent (textwrap.py:461) (1 samples, 0.41%)</title><rect x="67" y="1060" width="5" height="15" fill="rgb(245,85,9)"/><text x="70.00" y="1070.50"></text></g><g><title>sub (re.py:192) (1 samples, 0.41%)</title><rect x="67" y="1076" width="5" height="15" fill="rgb(254,149,25)"/><text x="70.00" y="1086.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.41%)</title><rect x="67" y="1092" width="5" height="15" fill="rgb(240,94,6)"/><text x="70.00" y="1102.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.41%)</title><rect x="67" y="1108" width="5" height="15" fill="rgb(230,216,13)"/><text x="70.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.41%)</title><rect x="67" y="1124" width="5" height="15" fill="rgb(228,155,3)"/><text x="70.00" y="1134.50"></text></g><g><title>root (&lt;template&gt;:134) (1 samples, 0.41%)</title><rect x="72" y="1572" width="5" height="15" fill="rgb(237,126,5)"/><text x="75.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py:208) (1 samples, 0.41%)</title><rect x="72" y="1588" width="5" height="15" fill="rgb(242,174,20)"/><text x="75.00" y="1598.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.81%)</title><rect x="72" y="1492" width="9" height="15" fill="rgb(209,2,40)"/><text x="75.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.81%)</title><rect x="72" y="1508" width="9" height="15" fill="rgb(226,30,1)"/><text x="75.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.81%)</title><rect x="72" y="1524" width="9" height="15" fill="rgb(216,164,30)"/><text x="75.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.81%)</title><rect x="72" y="1540" width="9" height="15" fill="rgb(242,52,25)"/><text x="75.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.81%)</title><rect x="72" y="1556" width="9" height="15" fill="rgb(232,204,37)"/><text x="75.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:28) (1 samples, 0.41%)</title><rect x="77" y="1572" width="4" height="15" fill="rgb(254,184,22)"/><text x="80.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.41%)</title><rect x="77" y="1588" width="4" height="15" fill="rgb(241,227,44)"/><text x="80.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="77" y="1604" width="4" height="15" fill="rgb(212,41,19)"/><text x="80.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::SupportType, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, onnx::OpSchema::SupportType, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;onnx::OpSchema::SupportType, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, onnx::OpSchema::SupportType (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="77" y="1620" width="4" height="15" fill="rgb(224,126,32)"/><text x="80.00" y="1630.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="77" y="1636" width="4" height="15" fill="rgb(238,229,46)"/><text x="80.00" y="1646.50"></text></g><g><title>pybind11::class_&lt;onnx::OpSchema::SupportType, &gt;::init_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="77" y="1652" width="4" height="15" fill="rgb(230,213,11)"/><text x="80.00" y="1662.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::_M_insert_multi_node (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="77" y="1668" width="4" height="15" fill="rgb(233,12,53)"/><text x="80.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:4) (16 samples, 6.50%)</title><rect x="10" y="52" width="76" height="15" fill="rgb(235,30,12)"/><text x="13.00" y="62.50">&lt;module&gt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (16 samples, 6.50%)</title><rect x="10" y="68" width="76" height="15" fill="rgb(217,81,44)"/><text x="13.00" y="78.50">_find_an..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (16 samples, 6.50%)</title><rect x="10" y="84" width="76" height="15" fill="rgb(231,229,23)"/><text x="13.00" y="94.50">_find_an..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (16 samples, 6.50%)</title><rect x="10" y="100" width="76" height="15" fill="rgb(212,99,35)"/><text x="13.00" y="110.50">_load_un..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (16 samples, 6.50%)</title><rect x="10" y="116" width="76" height="15" fill="rgb(216,206,1)"/><text x="13.00" y="126.50">exec_mod..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (16 samples, 6.50%)</title><rect x="10" y="132" width="76" height="15" fill="rgb(223,140,20)"/><text x="13.00" y="142.50">_call_wi..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py:7) (5 samples, 2.03%)</title><rect x="62" y="148" width="24" height="15" fill="rgb(229,43,9)"/><text x="65.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.03%)</title><rect x="62" y="164" width="24" height="15" fill="rgb(225,61,35)"/><text x="65.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.03%)</title><rect x="62" y="180" width="24" height="15" fill="rgb(229,101,19)"/><text x="65.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.03%)</title><rect x="62" y="196" width="24" height="15" fill="rgb(232,90,36)"/><text x="65.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.03%)</title><rect x="62" y="212" width="24" height="15" fill="rgb(220,94,50)"/><text x="65.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.03%)</title><rect x="62" y="228" width="24" height="15" fill="rgb(207,40,19)"/><text x="65.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.03%)</title><rect x="62" y="244" width="24" height="15" fill="rgb(238,219,22)"/><text x="65.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.03%)</title><rect x="62" y="260" width="24" height="15" fill="rgb(250,207,3)"/><text x="65.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.03%)</title><rect x="62" y="276" width="24" height="15" fill="rgb(247,221,15)"/><text x="65.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.03%)</title><rect x="62" y="292" width="24" height="15" fill="rgb(220,198,19)"/><text x="65.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.03%)</title><rect x="62" y="308" width="24" height="15" fill="rgb(247,26,35)"/><text x="65.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.03%)</title><rect x="62" y="324" width="24" height="15" fill="rgb(220,47,3)"/><text x="65.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.03%)</title><rect x="62" y="340" width="24" height="15" fill="rgb(205,131,47)"/><text x="65.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.03%)</title><rect x="62" y="356" width="24" height="15" fill="rgb(240,139,21)"/><text x="65.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.03%)</title><rect x="62" y="372" width="24" height="15" fill="rgb(206,195,43)"/><text x="65.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.03%)</title><rect x="62" y="388" width="24" height="15" fill="rgb(218,195,50)"/><text x="65.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.03%)</title><rect x="62" y="404" width="24" height="15" fill="rgb(244,36,15)"/><text x="65.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.03%)</title><rect x="62" y="420" width="24" height="15" fill="rgb(242,210,25)"/><text x="65.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.22%)</title><rect x="72" y="436" width="14" height="15" fill="rgb(231,171,33)"/><text x="75.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="452" width="14" height="15" fill="rgb(249,27,20)"/><text x="75.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.22%)</title><rect x="72" y="468" width="14" height="15" fill="rgb(239,58,15)"/><text x="75.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="484" width="14" height="15" fill="rgb(218,129,53)"/><text x="75.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="500" width="14" height="15" fill="rgb(246,37,0)"/><text x="75.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="516" width="14" height="15" fill="rgb(227,149,12)"/><text x="75.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="532" width="14" height="15" fill="rgb(209,220,44)"/><text x="75.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="548" width="14" height="15" fill="rgb(232,214,15)"/><text x="75.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="564" width="14" height="15" fill="rgb(208,136,9)"/><text x="75.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.22%)</title><rect x="72" y="580" width="14" height="15" fill="rgb(210,54,48)"/><text x="75.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="596" width="14" height="15" fill="rgb(222,177,12)"/><text x="75.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="612" width="14" height="15" fill="rgb(235,199,9)"/><text x="75.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="628" width="14" height="15" fill="rgb(212,43,40)"/><text x="75.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="644" width="14" height="15" fill="rgb(238,221,11)"/><text x="75.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="660" width="14" height="15" fill="rgb(206,33,18)"/><text x="75.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.22%)</title><rect x="72" y="676" width="14" height="15" fill="rgb(212,217,21)"/><text x="75.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="692" width="14" height="15" fill="rgb(218,154,48)"/><text x="75.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="708" width="14" height="15" fill="rgb(215,206,1)"/><text x="75.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="724" width="14" height="15" fill="rgb(238,223,52)"/><text x="75.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="740" width="14" height="15" fill="rgb(233,208,1)"/><text x="75.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="756" width="14" height="15" fill="rgb(245,159,18)"/><text x="75.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.22%)</title><rect x="72" y="772" width="14" height="15" fill="rgb(230,101,11)"/><text x="75.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="788" width="14" height="15" fill="rgb(212,3,20)"/><text x="75.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="804" width="14" height="15" fill="rgb(243,116,18)"/><text x="75.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="820" width="14" height="15" fill="rgb(221,108,48)"/><text x="75.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="836" width="14" height="15" fill="rgb(205,223,11)"/><text x="75.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="852" width="14" height="15" fill="rgb(228,172,33)"/><text x="75.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.22%)</title><rect x="72" y="868" width="14" height="15" fill="rgb(226,130,45)"/><text x="75.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="884" width="14" height="15" fill="rgb(223,207,43)"/><text x="75.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.22%)</title><rect x="72" y="900" width="14" height="15" fill="rgb(252,110,21)"/><text x="75.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="916" width="14" height="15" fill="rgb(250,176,31)"/><text x="75.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="932" width="14" height="15" fill="rgb(246,140,12)"/><text x="75.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="948" width="14" height="15" fill="rgb(220,33,42)"/><text x="75.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="964" width="14" height="15" fill="rgb(246,214,37)"/><text x="75.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="980" width="14" height="15" fill="rgb(220,11,42)"/><text x="75.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="996" width="14" height="15" fill="rgb(224,158,28)"/><text x="75.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.22%)</title><rect x="72" y="1012" width="14" height="15" fill="rgb(213,224,54)"/><text x="75.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="1028" width="14" height="15" fill="rgb(244,165,42)"/><text x="75.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="1044" width="14" height="15" fill="rgb(238,57,43)"/><text x="75.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="1060" width="14" height="15" fill="rgb(247,93,24)"/><text x="75.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="1076" width="14" height="15" fill="rgb(227,222,23)"/><text x="75.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="1092" width="14" height="15" fill="rgb(230,78,4)"/><text x="75.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (3 samples, 1.22%)</title><rect x="72" y="1108" width="14" height="15" fill="rgb(208,161,49)"/><text x="75.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.22%)</title><rect x="72" y="1124" width="14" height="15" fill="rgb(252,45,46)"/><text x="75.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="1140" width="14" height="15" fill="rgb(240,30,36)"/><text x="75.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="1156" width="14" height="15" fill="rgb(251,202,38)"/><text x="75.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="1172" width="14" height="15" fill="rgb(243,141,7)"/><text x="75.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="1188" width="14" height="15" fill="rgb(209,60,43)"/><text x="75.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="1204" width="14" height="15" fill="rgb(252,219,24)"/><text x="75.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="1220" width="14" height="15" fill="rgb(231,192,13)"/><text x="75.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (3 samples, 1.22%)</title><rect x="72" y="1236" width="14" height="15" fill="rgb(236,17,3)"/><text x="75.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (3 samples, 1.22%)</title><rect x="72" y="1252" width="14" height="15" fill="rgb(226,25,37)"/><text x="75.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="1268" width="14" height="15" fill="rgb(237,183,14)"/><text x="75.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="1284" width="14" height="15" fill="rgb(243,159,26)"/><text x="75.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="1300" width="14" height="15" fill="rgb(242,200,10)"/><text x="75.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="1316" width="14" height="15" fill="rgb(249,21,22)"/><text x="75.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="1332" width="14" height="15" fill="rgb(243,40,45)"/><text x="75.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="1348" width="14" height="15" fill="rgb(238,78,4)"/><text x="75.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (3 samples, 1.22%)</title><rect x="72" y="1364" width="14" height="15" fill="rgb(213,212,9)"/><text x="75.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.22%)</title><rect x="72" y="1380" width="14" height="15" fill="rgb(238,47,17)"/><text x="75.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.22%)</title><rect x="72" y="1396" width="14" height="15" fill="rgb(238,189,52)"/><text x="75.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.22%)</title><rect x="72" y="1412" width="14" height="15" fill="rgb(211,66,51)"/><text x="75.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.22%)</title><rect x="72" y="1428" width="14" height="15" fill="rgb(218,77,23)"/><text x="75.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.22%)</title><rect x="72" y="1444" width="14" height="15" fill="rgb(251,122,19)"/><text x="75.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 1.22%)</title><rect x="72" y="1460" width="14" height="15" fill="rgb(252,222,0)"/><text x="75.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 1.22%)</title><rect x="72" y="1476" width="14" height="15" fill="rgb(231,92,35)"/><text x="75.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:97) (1 samples, 0.41%)</title><rect x="81" y="1492" width="5" height="15" fill="rgb(206,71,37)"/><text x="84.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1508" width="5" height="15" fill="rgb(250,155,46)"/><text x="84.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1524" width="5" height="15" fill="rgb(234,138,31)"/><text x="84.00" y="1534.50"></text></g><g><title>onnx::OpSchemaRegistry::map[abi:cxx11] (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1540" width="5" height="15" fill="rgb(235,207,36)"/><text x="84.00" y="1550.50"></text></g><g><title>onnx::OpSet_Onnx_ver2::ForEachSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1556" width="5" height="15" fill="rgb(205,83,7)"/><text x="84.00" y="1566.50"></text></g><g><title>onnx::RegisterSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1572" width="5" height="15" fill="rgb(205,42,10)"/><text x="84.00" y="1582.50"></text></g><g><title>onnx::OpSchemaRegistry::OpSchemaRegisterOnce::OpSchemaRegisterOnce (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1588" width="5" height="15" fill="rgb(233,176,48)"/><text x="84.00" y="1598.50"></text></g><g><title>onnx::OpSchema::Finalize (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1604" width="5" height="15" fill="rgb(229,49,23)"/><text x="84.00" y="1614.50"></text></g><g><title>onnx::OpSchema::ParseAndSetTypes (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1620" width="5" height="15" fill="rgb(220,191,4)"/><text x="84.00" y="1630.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::operator= (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1636" width="5" height="15" fill="rgb(245,211,48)"/><text x="84.00" y="1646.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::operator=(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#2}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="81" y="1652" width="5" height="15" fill="rgb(229,134,37)"/><text x="84.00" y="1662.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.41%)</title><rect x="86" y="196" width="5" height="15" fill="rgb(224,132,54)"/><text x="89.00" y="206.50"></text></g><g><title>_decision_function (sklearn/linear_model/_base.py:207) (2 samples, 0.81%)</title><rect x="86" y="164" width="10" height="15" fill="rgb(251,51,37)"/><text x="89.00" y="174.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.81%)</title><rect x="86" y="180" width="10" height="15" fill="rgb(248,10,43)"/><text x="89.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.41%)</title><rect x="91" y="196" width="5" height="15" fill="rgb(208,32,0)"/><text x="94.00" y="206.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.41%)</title><rect x="96" y="180" width="5" height="15" fill="rgb(228,31,38)"/><text x="99.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.41%)</title><rect x="96" y="196" width="5" height="15" fill="rgb(235,10,36)"/><text x="99.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.41%)</title><rect x="96" y="212" width="5" height="15" fill="rgb(224,102,9)"/><text x="99.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.41%)</title><rect x="96" y="228" width="5" height="15" fill="rgb(234,112,45)"/><text x="99.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.41%)</title><rect x="96" y="244" width="5" height="15" fill="rgb(211,111,10)"/><text x="99.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.41%)</title><rect x="96" y="260" width="5" height="15" fill="rgb(227,226,27)"/><text x="99.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:66) (1 samples, 0.41%)</title><rect x="96" y="276" width="5" height="15" fill="rgb(209,106,3)"/><text x="99.00" y="286.50"></text></g><g><title>0x7f22dd85ca40 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="96" y="292" width="5" height="15" fill="rgb(237,164,19)"/><text x="99.00" y="302.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.41%)</title><rect x="101" y="196" width="4" height="15" fill="rgb(241,172,53)"/><text x="104.00" y="206.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (7 samples, 2.85%)</title><rect x="105" y="228" width="34" height="15" fill="rgb(231,63,12)"/><text x="108.00" y="238.50">Py..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 2.85%)</title><rect x="105" y="244" width="34" height="15" fill="rgb(215,179,47)"/><text x="108.00" y="254.50">Np..</text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (7 samples, 2.85%)</title><rect x="105" y="260" width="34" height="15" fill="rgb(205,167,2)"/><text x="108.00" y="270.50">np..</text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (7 samples, 2.85%)</title><rect x="105" y="276" width="34" height="15" fill="rgb(233,58,22)"/><text x="108.00" y="286.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c:137) (7 samples, 2.85%)</title><rect x="105" y="292" width="34" height="15" fill="rgb(213,48,29)"/><text x="108.00" y="302.50">ra..</text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src:855) (7 samples, 2.85%)</title><rect x="105" y="308" width="34" height="15" fill="rgb(240,193,49)"/><text x="108.00" y="318.50">_a..</text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="139" y="340" width="5" height="15" fill="rgb(253,47,1)"/><text x="142.00" y="350.50"></text></g><g><title>__lll_lock_wait (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="139" y="356" width="5" height="15" fill="rgb(216,135,10)"/><text x="142.00" y="366.50"></text></g><g><title>exec_blas_async (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 1.22%)</title><rect x="139" y="324" width="14" height="15" fill="rgb(230,36,46)"/><text x="142.00" y="334.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (2 samples, 0.81%)</title><rect x="144" y="340" width="9" height="15" fill="rgb(245,191,35)"/><text x="147.00" y="350.50"></text></g><g><title>__lll_unlock_wake (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="149" y="356" width="4" height="15" fill="rgb(241,197,34)"/><text x="152.00" y="366.50"></text></g><g><title>dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (87 samples, 35.37%)</title><rect x="139" y="292" width="417" height="15" fill="rgb(247,97,11)"/><text x="142.00" y="302.50">dgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (87 samples, 35.37%)</title><rect x="139" y="308" width="417" height="15" fill="rgb(249,23,47)"/><text x="142.00" y="318.50">exec_blas (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (84 samples, 34.15%)</title><rect x="153" y="324" width="403" height="15" fill="rgb(234,169,36)"/><text x="156.00" y="334.50">exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>sched_yield (libc-2.29.so) (84 samples, 34.15%)</title><rect x="153" y="340" width="403" height="15" fill="rgb(232,131,41)"/><text x="156.00" y="350.50">sched_yield (libc-2.29.so)</text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:54) (100 samples, 40.65%)</title><rect x="86" y="52" width="480" height="15" fill="rgb(247,139,10)"/><text x="89.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_50_12_float_...</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:53) (100 samples, 40.65%)</title><rect x="86" y="68" width="480" height="15" fill="rgb(224,57,4)"/><text x="89.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1000_50_12_floa..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:37) (100 samples, 40.65%)</title><rect x="86" y="84" width="480" height="15" fill="rgb(224,93,10)"/><text x="89.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1000_50_12_fl..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:31) (100 samples, 40.65%)</title><rect x="86" y="100" width="480" height="15" fill="rgb(245,175,54)"/><text x="89.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.p..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (100 samples, 40.65%)</title><rect x="86" y="116" width="480" height="15" fill="rgb(229,17,14)"/><text x="89.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (100 samples, 40.65%)</title><rect x="86" y="132" width="480" height="15" fill="rgb(238,18,11)"/><text x="89.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/linear_model/_base.py:225) (100 samples, 40.65%)</title><rect x="86" y="148" width="480" height="15" fill="rgb(238,117,39)"/><text x="89.00" y="158.50">predict (sklearn/linear_model/_base.py:225)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py:209) (98 samples, 39.84%)</title><rect x="96" y="164" width="470" height="15" fill="rgb(212,34,1)"/><text x="99.00" y="174.50">_decision_function (sklearn/linear_model/_base.py:209)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (97 samples, 39.43%)</title><rect x="101" y="180" width="465" height="15" fill="rgb(215,223,19)"/><text x="104.00" y="190.50">safe_sparse_dot (sklearn/utils/extmath.py:151)</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (96 samples, 39.02%)</title><rect x="105" y="196" width="461" height="15" fill="rgb(236,139,52)"/><text x="108.00" y="206.50">ufunc_generic_call (ufunc_object.c:4725)</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (96 samples, 39.02%)</title><rect x="105" y="212" width="461" height="15" fill="rgb(254,180,0)"/><text x="108.00" y="222.50">PyUFunc_GenericFunction (ufunc_object.c:3142)</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (89 samples, 36.18%)</title><rect x="139" y="228" width="427" height="15" fill="rgb(213,79,25)"/><text x="142.00" y="238.50">PyUFunc_GeneralizedFunction (ufunc_object.c:3008)</text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (89 samples, 36.18%)</title><rect x="139" y="244" width="427" height="15" fill="rgb(206,151,29)"/><text x="142.00" y="254.50">DOUBLE_matmul (matmul.c.src:459)</text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (89 samples, 36.18%)</title><rect x="139" y="260" width="427" height="15" fill="rgb(223,183,19)"/><text x="142.00" y="270.50">DOUBLE_gemv (matmul.c.src:105)</text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (89 samples, 36.18%)</title><rect x="139" y="276" width="427" height="15" fill="rgb(249,212,50)"/><text x="142.00" y="286.50">cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so)</text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.81%)</title><rect x="556" y="292" width="10" height="15" fill="rgb(249,187,31)"/><text x="559.00" y="302.50"></text></g><g><title>dscal_kernel_8_zero (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.81%)</title><rect x="556" y="308" width="10" height="15" fill="rgb(237,75,14)"/><text x="559.00" y="318.50"></text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:36) (1 samples, 0.41%)</title><rect x="566" y="84" width="5" height="15" fill="rgb(226,213,45)"/><text x="569.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.41%)</title><rect x="566" y="100" width="5" height="15" fill="rgb(227,204,7)"/><text x="569.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.41%)</title><rect x="566" y="116" width="5" height="15" fill="rgb(225,196,46)"/><text x="569.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.41%)</title><rect x="566" y="132" width="5" height="15" fill="rgb(225,208,1)"/><text x="569.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.41%)</title><rect x="566" y="148" width="5" height="15" fill="rgb(240,63,11)"/><text x="569.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.41%)</title><rect x="566" y="164" width="5" height="15" fill="rgb(251,65,14)"/><text x="569.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.41%)</title><rect x="566" y="180" width="5" height="15" fill="rgb(226,189,21)"/><text x="569.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.41%)</title><rect x="566" y="196" width="5" height="15" fill="rgb(246,14,9)"/><text x="569.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="566" y="212" width="5" height="15" fill="rgb(212,199,5)"/><text x="569.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="566" y="228" width="5" height="15" fill="rgb(224,95,15)"/><text x="569.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="566" y="244" width="5" height="15" fill="rgb(236,18,3)"/><text x="569.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="566" y="260" width="5" height="15" fill="rgb(214,73,36)"/><text x="569.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="566" y="276" width="5" height="15" fill="rgb(248,166,25)"/><text x="569.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.41%)</title><rect x="566" y="292" width="5" height="15" fill="rgb(247,156,27)"/><text x="569.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="566" y="308" width="5" height="15" fill="rgb(234,212,5)"/><text x="569.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="566" y="324" width="5" height="15" fill="rgb(230,30,30)"/><text x="569.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="566" y="340" width="5" height="15" fill="rgb(245,218,12)"/><text x="569.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="566" y="356" width="5" height="15" fill="rgb(205,25,19)"/><text x="569.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="566" y="372" width="5" height="15" fill="rgb(229,90,25)"/><text x="569.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.41%)</title><rect x="566" y="388" width="5" height="15" fill="rgb(236,168,28)"/><text x="569.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="566" y="404" width="5" height="15" fill="rgb(213,213,41)"/><text x="569.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="566" y="420" width="5" height="15" fill="rgb(226,105,14)"/><text x="569.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="566" y="436" width="5" height="15" fill="rgb(231,18,10)"/><text x="569.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="566" y="452" width="5" height="15" fill="rgb(249,136,10)"/><text x="569.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="566" y="468" width="5" height="15" fill="rgb(211,107,22)"/><text x="569.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.41%)</title><rect x="566" y="484" width="5" height="15" fill="rgb(254,150,31)"/><text x="569.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.41%)</title><rect x="566" y="500" width="5" height="15" fill="rgb(242,189,45)"/><text x="569.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.41%)</title><rect x="566" y="516" width="5" height="15" fill="rgb(220,36,3)"/><text x="569.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.41%)</title><rect x="566" y="532" width="5" height="15" fill="rgb(249,130,9)"/><text x="569.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.41%)</title><rect x="566" y="548" width="5" height="15" fill="rgb(213,10,48)"/><text x="569.00" y="558.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.41%)</title><rect x="566" y="564" width="5" height="15" fill="rgb(210,123,40)"/><text x="569.00" y="574.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.41%)</title><rect x="566" y="580" width="5" height="15" fill="rgb(247,212,51)"/><text x="569.00" y="590.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.41%)</title><rect x="566" y="596" width="5" height="15" fill="rgb(228,139,28)"/><text x="569.00" y="606.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.41%)</title><rect x="566" y="612" width="5" height="15" fill="rgb(254,2,37)"/><text x="569.00" y="622.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.41%)</title><rect x="566" y="628" width="5" height="15" fill="rgb(225,63,41)"/><text x="569.00" y="638.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.41%)</title><rect x="566" y="644" width="5" height="15" fill="rgb(213,207,14)"/><text x="569.00" y="654.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.41%)</title><rect x="566" y="660" width="5" height="15" fill="rgb(231,169,36)"/><text x="569.00" y="670.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.41%)</title><rect x="566" y="676" width="5" height="15" fill="rgb(223,131,38)"/><text x="569.00" y="686.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.41%)</title><rect x="566" y="692" width="5" height="15" fill="rgb(213,12,1)"/><text x="569.00" y="702.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.41%)</title><rect x="566" y="708" width="5" height="15" fill="rgb(229,117,30)"/><text x="569.00" y="718.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.41%)</title><rect x="566" y="724" width="5" height="15" fill="rgb(245,103,17)"/><text x="569.00" y="734.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.41%)</title><rect x="566" y="740" width="5" height="15" fill="rgb(209,203,54)"/><text x="569.00" y="750.50"></text></g><g><title>parse_for (jinja2/parser.py:191) (1 samples, 0.41%)</title><rect x="566" y="756" width="5" height="15" fill="rgb(233,31,14)"/><text x="569.00" y="766.50"></text></g><g><title>parse_assign_target (jinja2/parser.py:420) (1 samples, 0.41%)</title><rect x="566" y="772" width="5" height="15" fill="rgb(214,211,14)"/><text x="569.00" y="782.50"></text></g><g><title>set_ctx (jinja2/nodes.py:205) (1 samples, 0.41%)</title><rect x="566" y="788" width="5" height="15" fill="rgb(235,140,5)"/><text x="569.00" y="798.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:361) (1 samples, 0.41%)</title><rect x="571" y="324" width="5" height="15" fill="rgb(237,201,37)"/><text x="574.00" y="334.50"></text></g><g><title>new_array_for_sum (common.c:926) (1 samples, 0.41%)</title><rect x="571" y="340" width="5" height="15" fill="rgb(234,148,18)"/><text x="574.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.41%)</title><rect x="571" y="356" width="5" height="15" fill="rgb(222,206,37)"/><text x="574.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.41%)</title><rect x="571" y="372" width="5" height="15" fill="rgb(216,51,4)"/><text x="574.00" y="382.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:63) (1 samples, 0.41%)</title><rect x="571" y="388" width="5" height="15" fill="rgb(209,122,40)"/><text x="574.00" y="398.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:61) (22 samples, 8.94%)</title><rect x="566" y="52" width="105" height="15" fill="rgb(246,3,40)"/><text x="569.00" y="62.50">&lt;module&gt; (be..</text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:60) (22 samples, 8.94%)</title><rect x="566" y="68" width="105" height="15" fill="rgb(215,174,37)"/><text x="569.00" y="78.50">profile_pyrt..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:37) (21 samples, 8.54%)</title><rect x="571" y="84" width="100" height="15" fill="rgb(241,125,32)"/><text x="574.00" y="94.50">setup_profil..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:31) (21 samples, 8.54%)</title><rect x="571" y="100" width="100" height="15" fill="rgb(224,215,5)"/><text x="574.00" y="110.50">profile (ben..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (21 samples, 8.54%)</title><rect x="571" y="116" width="100" height="15" fill="rgb(213,42,38)"/><text x="574.00" y="126.50">time_predict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (21 samples, 8.54%)</title><rect x="571" y="132" width="100" height="15" fill="rgb(239,194,38)"/><text x="574.00" y="142.50">&lt;lambda&gt; (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (21 samples, 8.54%)</title><rect x="571" y="148" width="100" height="15" fill="rgb(229,42,0)"/><text x="574.00" y="158.50">run (mlprodi..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (21 samples, 8.54%)</title><rect x="571" y="164" width="100" height="15" fill="rgb(228,209,7)"/><text x="574.00" y="174.50">_run_sequenc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (21 samples, 8.54%)</title><rect x="571" y="180" width="100" height="15" fill="rgb(236,228,18)"/><text x="574.00" y="190.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (21 samples, 8.54%)</title><rect x="571" y="196" width="100" height="15" fill="rgb(208,20,14)"/><text x="574.00" y="206.50">run (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (21 samples, 8.54%)</title><rect x="571" y="212" width="100" height="15" fill="rgb(220,17,13)"/><text x="574.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py:28) (21 samples, 8.54%)</title><rect x="571" y="228" width="100" height="15" fill="rgb(243,156,29)"/><text x="574.00" y="238.50">_run (mlprod..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (21 samples, 8.54%)</title><rect x="571" y="244" width="100" height="15" fill="rgb(225,225,10)"/><text x="574.00" y="254.50">numpy_dot_in..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (21 samples, 8.54%)</title><rect x="571" y="260" width="100" height="15" fill="rgb(211,38,25)"/><text x="574.00" y="270.50">dot (&lt;__arra..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (21 samples, 8.54%)</title><rect x="571" y="276" width="100" height="15" fill="rgb(222,95,4)"/><text x="574.00" y="286.50">array_implem..</text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (21 samples, 8.54%)</title><rect x="571" y="292" width="100" height="15" fill="rgb(205,110,18)"/><text x="574.00" y="302.50">array_matrix..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (21 samples, 8.54%)</title><rect x="571" y="308" width="100" height="15" fill="rgb(225,43,11)"/><text x="574.00" y="318.50">PyArray_Matr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c:562) (20 samples, 8.13%)</title><rect x="576" y="324" width="95" height="15" fill="rgb(225,205,18)"/><text x="579.00" y="334.50">cblas_matri..</text></g><g><title>gemv (cblasfuncs.c:86) (20 samples, 8.13%)</title><rect x="576" y="340" width="95" height="15" fill="rgb(241,135,45)"/><text x="579.00" y="350.50">gemv (cblas..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.13%)</title><rect x="576" y="356" width="95" height="15" fill="rgb(253,198,42)"/><text x="579.00" y="366.50">cblas_sgemv..</text></g><g><title>sgemv_thread_t (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.13%)</title><rect x="576" y="372" width="95" height="15" fill="rgb(252,18,36)"/><text x="579.00" y="382.50">sgemv_threa..</text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.13%)</title><rect x="576" y="388" width="95" height="15" fill="rgb(239,160,38)"/><text x="579.00" y="398.50">exec_blas (..</text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (20 samples, 8.13%)</title><rect x="576" y="404" width="95" height="15" fill="rgb(208,0,16)"/><text x="579.00" y="414.50">exec_blas_a..</text></g><g><title>sched_yield (libc-2.29.so) (20 samples, 8.13%)</title><rect x="576" y="420" width="95" height="15" fill="rgb(236,151,39)"/><text x="579.00" y="430.50">sched_yield..</text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.41%)</title><rect x="671" y="116" width="5" height="15" fill="rgb(250,124,45)"/><text x="674.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.41%)</title><rect x="671" y="132" width="5" height="15" fill="rgb(239,139,7)"/><text x="674.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.41%)</title><rect x="671" y="148" width="5" height="15" fill="rgb(212,217,46)"/><text x="674.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.41%)</title><rect x="695" y="148" width="5" height="15" fill="rgb(217,69,11)"/><text x="698.00" y="158.50"></text></g><g><title>0x7f2299667ff9 (?) (1 samples, 0.41%)</title><rect x="715" y="212" width="4" height="15" fill="rgb(250,228,43)"/><text x="718.00" y="222.50"></text></g><g><title>0x7f2299662ef6 (?) (1 samples, 0.41%)</title><rect x="715" y="228" width="4" height="15" fill="rgb(222,69,19)"/><text x="718.00" y="238.50"></text></g><g><title>0x7f2299657962 (?) (1 samples, 0.41%)</title><rect x="715" y="244" width="4" height="15" fill="rgb(214,201,27)"/><text x="718.00" y="254.50"></text></g><g><title>0x7f229968b7a7 (?) (1 samples, 0.41%)</title><rect x="715" y="260" width="4" height="15" fill="rgb(218,5,35)"/><text x="718.00" y="270.50"></text></g><g><title>0x7f229968b379 (?) (1 samples, 0.41%)</title><rect x="715" y="276" width="4" height="15" fill="rgb(237,104,27)"/><text x="718.00" y="286.50"></text></g><g><title>0x7f2299ae98b8 (?) (1 samples, 0.41%)</title><rect x="715" y="292" width="4" height="15" fill="rgb(215,51,51)"/><text x="718.00" y="302.50"></text></g><g><title>0x7f2299ae7c7f (?) (1 samples, 0.41%)</title><rect x="715" y="308" width="4" height="15" fill="rgb(213,90,28)"/><text x="718.00" y="318.50"></text></g><g><title>0x7f2299afa99c (?) (1 samples, 0.41%)</title><rect x="715" y="324" width="4" height="15" fill="rgb(222,52,26)"/><text x="718.00" y="334.50"></text></g><g><title>0x7f22997e1db0 (?) (1 samples, 0.41%)</title><rect x="715" y="340" width="4" height="15" fill="rgb(241,215,32)"/><text x="718.00" y="350.50"></text></g><g><title>0x7f22de659d50 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="715" y="356" width="4" height="15" fill="rgb(242,190,48)"/><text x="718.00" y="366.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.41%)</title><rect x="719" y="212" width="5" height="15" fill="rgb(228,85,51)"/><text x="722.00" y="222.50"></text></g><g><title>0x7ffe64ffeb28 ([vdso]) (1 samples, 0.41%)</title><rect x="719" y="228" width="5" height="15" fill="rgb(249,66,46)"/><text x="722.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="724" y="260" width="5" height="15" fill="rgb(250,155,16)"/><text x="727.00" y="270.50"></text></g><g><title>0x20c49ba5e353f7cf (?) (1 samples, 0.41%)</title><rect x="729" y="276" width="5" height="15" fill="rgb(242,73,42)"/><text x="732.00" y="286.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.41%)</title><rect x="729" y="292" width="5" height="15" fill="rgb(236,148,49)"/><text x="732.00" y="302.50"></text></g><g><title>0x7ffe64ffea09 ([vdso]) (1 samples, 0.41%)</title><rect x="729" y="308" width="5" height="15" fill="rgb(213,46,17)"/><text x="732.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="734" y="292" width="5" height="15" fill="rgb(215,190,12)"/><text x="737.00" y="302.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="748" y="340" width="5" height="15" fill="rgb(213,73,17)"/><text x="751.00" y="350.50"></text></g><g><title>onnxruntime::SessionState::GetNodeIndexInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="748" y="356" width="5" height="15" fill="rgb(213,195,20)"/><text x="751.00" y="366.50"></text></g><g><title>0x7f22de63995e (libc-2.29.so) (6 samples, 2.44%)</title><rect x="974" y="356" width="28" height="15" fill="rgb(221,180,16)"/><text x="977.00" y="366.50">0..</text></g><g><title>0x7f22de639965 (libc-2.29.so) (4 samples, 1.63%)</title><rect x="1002" y="356" width="20" height="15" fill="rgb(224,213,36)"/><text x="1005.00" y="366.50"></text></g><g><title>0x7f22de63996a (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1022" y="356" width="4" height="15" fill="rgb(233,48,12)"/><text x="1025.00" y="366.50"></text></g><g><title>0x7f22de63997c (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1026" y="356" width="5" height="15" fill="rgb(221,138,49)"/><text x="1029.00" y="366.50"></text></g><g><title>0x7f22de639991 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1031" y="356" width="5" height="15" fill="rgb(241,183,44)"/><text x="1034.00" y="366.50"></text></g><g><title>0x7f22de639a41 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1036" y="356" width="5" height="15" fill="rgb(223,36,30)"/><text x="1039.00" y="366.50"></text></g><g><title>0x7f22de639a55 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1041" y="356" width="5" height="15" fill="rgb(225,202,0)"/><text x="1044.00" y="366.50"></text></g><g><title>0x7f22de639be4 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1046" y="356" width="4" height="15" fill="rgb(209,218,14)"/><text x="1049.00" y="366.50"></text></g><g><title>0x7f22de639be8 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1050" y="356" width="5" height="15" fill="rgb(208,123,15)"/><text x="1053.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1055" y="452" width="5" height="15" fill="rgb(221,3,3)"/><text x="1058.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1055" y="468" width="5" height="15" fill="rgb(241,206,26)"/><text x="1058.00" y="478.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="1055" y="404" width="10" height="15" fill="rgb(220,76,27)"/><text x="1058.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="1055" y="420" width="10" height="15" fill="rgb(210,219,50)"/><text x="1058.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="1055" y="436" width="10" height="15" fill="rgb(218,206,7)"/><text x="1058.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1060" y="452" width="5" height="15" fill="rgb(227,24,25)"/><text x="1063.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1060" y="468" width="5" height="15" fill="rgb(217,87,51)"/><text x="1063.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1060" y="484" width="5" height="15" fill="rgb(226,46,10)"/><text x="1063.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1060" y="500" width="5" height="15" fill="rgb(247,17,19)"/><text x="1063.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1060" y="516" width="5" height="15" fill="rgb(233,53,41)"/><text x="1063.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1060" y="532" width="5" height="15" fill="rgb(229,52,50)"/><text x="1063.00" y="542.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="1055" y="356" width="15" height="15" fill="rgb(247,46,20)"/><text x="1058.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="1055" y="372" width="15" height="15" fill="rgb(221,95,39)"/><text x="1058.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.22%)</title><rect x="1055" y="388" width="15" height="15" fill="rgb(215,194,21)"/><text x="1058.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeIdxToMLValueIdx (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1065" y="404" width="5" height="15" fill="rgb(215,130,22)"/><text x="1068.00" y="414.50"></text></g><g><title>0x7f22ce105d50 (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1098" y="388" width="5" height="15" fill="rgb(229,68,33)"/><text x="1101.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (84 samples, 34.15%)</title><rect x="729" y="260" width="403" height="15" fill="rgb(206,45,39)"/><text x="732.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (83 samples, 33.74%)</title><rect x="734" y="276" width="398" height="15" fill="rgb(216,155,28)"/><text x="737.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/o..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (82 samples, 33.33%)</title><rect x="739" y="292" width="393" height="15" fill="rgb(246,190,40)"/><text x="742.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (80 samples, 32.52%)</title><rect x="748" y="308" width="384" height="15" fill="rgb(216,35,31)"/><text x="751.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/ca..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (80 samples, 32.52%)</title><rect x="748" y="324" width="384" height="15" fill="rgb(232,139,7)"/><text x="751.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntim..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (79 samples, 32.11%)</title><rect x="753" y="340" width="379" height="15" fill="rgb(233,172,52)"/><text x="756.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (o..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.28%)</title><rect x="1070" y="356" width="62" height="15" fill="rgb(221,87,14)"/><text x="1073.00" y="366.50">std::v..</text></g><g><title>operator new (libstdc++.so.6.0.28) (8 samples, 3.25%)</title><rect x="1094" y="372" width="38" height="15" fill="rgb(206,49,1)"/><text x="1097.00" y="382.50">ope..</text></g><g><title>malloc (libc-2.29.so) (6 samples, 2.44%)</title><rect x="1103" y="388" width="29" height="15" fill="rgb(229,219,3)"/><text x="1106.00" y="398.50">ma..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="1132" y="260" width="10" height="15" fill="rgb(240,19,9)"/><text x="1135.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1137" y="276" width="5" height="15" fill="rgb(227,216,22)"/><text x="1140.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.81%)</title><rect x="1142" y="260" width="9" height="15" fill="rgb(227,63,43)"/><text x="1145.00" y="270.50"></text></g><g><title>0x7f22de659d94 (libc-2.29.so) (2 samples, 0.81%)</title><rect x="1142" y="276" width="9" height="15" fill="rgb(209,168,50)"/><text x="1145.00" y="286.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (90 samples, 36.59%)</title><rect x="724" y="244" width="432" height="15" fill="rgb(210,154,30)"/><text x="727.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1151" y="260" width="5" height="15" fill="rgb(240,72,23)"/><text x="1154.00" y="270.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (95 samples, 38.62%)</title><rect x="705" y="164" width="456" height="15" fill="rgb(242,29,10)"/><text x="708.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (95 samples, 38.62%)</title><rect x="705" y="180" width="456" height="15" fill="rgb(232,185,7)"/><text x="708.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py:64)</text></g><g><title>run (onnxruntime/capi/session.py:136) (94 samples, 38.21%)</title><rect x="710" y="196" width="451" height="15" fill="rgb(220,88,49)"/><text x="713.00" y="206.50">run (onnxruntime/capi/session.py:136)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (91 samples, 36.99%)</title><rect x="724" y="212" width="437" height="15" fill="rgb(239,5,21)"/><text x="727.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (91 samples, 36.99%)</title><rect x="724" y="228" width="437" height="15" fill="rgb(237,147,0)"/><text x="727.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python..</text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1156" y="244" width="5" height="15" fill="rgb(216,187,27)"/><text x="1159.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1156" y="260" width="5" height="15" fill="rgb(213,18,16)"/><text x="1159.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="1156" y="276" width="5" height="15" fill="rgb(211,200,46)"/><text x="1159.00" y="286.50"></text></g><g><title>0x7f22de65a120 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1175" y="180" width="5" height="15" fill="rgb(248,74,12)"/><text x="1178.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:68) (107 samples, 43.50%)</title><rect x="671" y="52" width="514" height="15" fill="rgb(228,219,16)"/><text x="674.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:68)</text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:67) (107 samples, 43.50%)</title><rect x="671" y="68" width="514" height="15" fill="rgb(241,144,9)"/><text x="674.00" y="78.50">profile_ort (bench_LinearRegression_default_b_reg_1000_50_12_float_.py..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:37) (107 samples, 43.50%)</title><rect x="671" y="84" width="514" height="15" fill="rgb(243,122,9)"/><text x="674.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1000_50_12_float_...</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:31) (107 samples, 43.50%)</title><rect x="671" y="100" width="514" height="15" fill="rgb(208,110,20)"/><text x="674.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1000_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (106 samples, 43.09%)</title><rect x="676" y="116" width="509" height="15" fill="rgb(232,114,45)"/><text x="679.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (104 samples, 42.28%)</title><rect x="686" y="132" width="499" height="15" fill="rgb(223,226,29)"/><text x="689.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (101 samples, 41.06%)</title><rect x="700" y="148" width="485" height="15" fill="rgb(228,14,48)"/><text x="703.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (5 samples, 2.03%)</title><rect x="1161" y="164" width="24" height="15" fill="rgb(217,124,1)"/><text x="1164.00" y="174.50">_..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.41%)</title><rect x="1180" y="180" width="5" height="15" fill="rgb(252,66,30)"/><text x="1183.00" y="190.50"></text></g><g><title>all (246 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(221,77,19)"/><text x="13.00" y="46.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.41%)</title><rect x="1185" y="52" width="5" height="15" fill="rgb(239,52,12)"/><text x="1188.00" y="62.50"></text></g></g></svg>