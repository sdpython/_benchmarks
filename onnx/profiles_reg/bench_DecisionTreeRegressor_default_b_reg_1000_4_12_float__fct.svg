<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2198" onload="init(evt)" viewBox="0 0 1200 2198" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2198" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2181.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2181.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(232,8,48)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(222,164,43)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(208,216,50)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(223,112,14)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(208,222,0)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(230,174,22)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(218,173,22)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(238,14,3)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="996" width="1" height="15" fill="rgb(231,75,3)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="10" y="1012" width="1" height="15" fill="rgb(248,212,1)"/><text x="13.00" y="1022.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="948" width="1" height="15" fill="rgb(243,52,38)"/><text x="14.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="964" width="1" height="15" fill="rgb(240,67,41)"/><text x="14.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="11" y="980" width="1" height="15" fill="rgb(227,13,16)"/><text x="14.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.09%)</title><rect x="11" y="996" width="1" height="15" fill="rgb(210,108,43)"/><text x="14.00" y="1006.50"></text></g><g><title>__str__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.09%)</title><rect x="11" y="1012" width="1" height="15" fill="rgb(248,61,49)"/><text x="14.00" y="1022.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.09%)</title><rect x="11" y="1028" width="1" height="15" fill="rgb(246,81,49)"/><text x="14.00" y="1038.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(254,36,48)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(230,13,46)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(208,81,49)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(239,15,41)"/><text x="14.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(236,211,37)"/><text x="14.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.09%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(248,92,1)"/><text x="15.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(252,224,4)"/><text x="15.00" y="974.50"></text></g><g><title>0x7f117f1f9237 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="12" y="980" width="1" height="15" fill="rgb(209,8,25)"/><text x="15.00" y="990.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="13" y="916" width="1" height="15" fill="rgb(246,147,27)"/><text x="16.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="13" y="932" width="1" height="15" fill="rgb(226,124,1)"/><text x="16.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (1 samples, 0.09%)</title><rect x="13" y="948" width="1" height="15" fill="rgb(240,0,24)"/><text x="16.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.09%)</title><rect x="13" y="964" width="1" height="15" fill="rgb(249,118,47)"/><text x="16.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.09%)</title><rect x="13" y="980" width="1" height="15" fill="rgb(222,186,9)"/><text x="16.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(217,119,54)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(222,24,30)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(228,124,1)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(241,159,45)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(245,144,38)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(217,166,7)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.45%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(232,58,24)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(211,16,7)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 0.45%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(254,95,36)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(229,8,49)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(254,106,23)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(226,51,31)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 0.45%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(209,150,13)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 0.45%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(208,71,3)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 0.45%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(226,42,29)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 0.45%)</title><rect x="10" y="836" width="5" height="15" fill="rgb(206,59,40)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 0.45%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(254,163,31)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(217,157,11)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(225,228,30)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.18%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(246,205,42)"/><text x="16.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.09%)</title><rect x="14" y="916" width="1" height="15" fill="rgb(253,223,4)"/><text x="17.00" y="926.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="14" y="932" width="1" height="15" fill="rgb(242,207,42)"/><text x="17.00" y="942.50"></text></g><g><title>0x7f117f1f9237 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="14" y="948" width="1" height="15" fill="rgb(238,171,20)"/><text x="17.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(245,97,38)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(243,211,8)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(229,47,39)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(214,24,20)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.54%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(245,217,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(222,171,10)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 0.54%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(229,1,44)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(244,126,7)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(242,93,14)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(251,11,13)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.54%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(212,207,48)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(247,150,32)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 0.54%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(224,6,3)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(222,85,9)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(208,49,34)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(215,110,4)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.54%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(206,165,16)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(209,28,11)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 0.54%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(248,12,46)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(252,137,20)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(208,12,47)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(220,116,12)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.54%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(227,172,32)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(223,147,5)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 0.54%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(226,21,12)"/><text x="13.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="596" width="1" height="15" fill="rgb(229,182,32)"/><text x="18.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="612" width="1" height="15" fill="rgb(230,34,13)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="628" width="1" height="15" fill="rgb(223,125,24)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="644" width="1" height="15" fill="rgb(209,136,12)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="660" width="1" height="15" fill="rgb(206,159,41)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="676" width="1" height="15" fill="rgb(247,6,9)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="692" width="1" height="15" fill="rgb(214,124,48)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (protobuf/descriptor.py) (1 samples, 0.09%)</title><rect x="15" y="708" width="1" height="15" fill="rgb(209,113,7)"/><text x="18.00" y="718.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="724" width="1" height="15" fill="rgb(221,221,8)"/><text x="18.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="740" width="1" height="15" fill="rgb(218,27,47)"/><text x="18.00" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="756" width="1" height="15" fill="rgb(253,37,1)"/><text x="18.00" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="772" width="1" height="15" fill="rgb(235,140,10)"/><text x="18.00" y="782.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="15" y="788" width="1" height="15" fill="rgb(207,169,44)"/><text x="18.00" y="798.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="804" width="1" height="15" fill="rgb(216,55,41)"/><text x="18.00" y="814.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="820" width="1" height="15" fill="rgb(243,97,37)"/><text x="18.00" y="830.50"></text></g><g><title>_path_importer_cache (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="836" width="1" height="15" fill="rgb(211,94,41)"/><text x="18.00" y="846.50"></text></g><g><title>_path_hooks (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="852" width="1" height="15" fill="rgb(240,155,11)"/><text x="18.00" y="862.50"></text></g><g><title>path_hook_for_FileFinder (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="868" width="1" height="15" fill="rgb(243,153,43)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="15" y="884" width="1" height="15" fill="rgb(229,219,1)"/><text x="18.00" y="894.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(237,164,37)"/><text x="19.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(209,46,18)"/><text x="19.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(253,113,53)"/><text x="19.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1172" width="1" height="15" fill="rgb(218,67,14)"/><text x="19.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1188" width="1" height="15" fill="rgb(247,142,29)"/><text x="19.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.09%)</title><rect x="16" y="1204" width="1" height="15" fill="rgb(244,163,11)"/><text x="19.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1220" width="1" height="15" fill="rgb(254,112,28)"/><text x="19.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1236" width="1" height="15" fill="rgb(210,210,29)"/><text x="19.00" y="1246.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1252" width="1" height="15" fill="rgb(234,209,51)"/><text x="19.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1268" width="1" height="15" fill="rgb(245,13,53)"/><text x="19.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1284" width="1" height="15" fill="rgb(217,22,51)"/><text x="19.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1300" width="1" height="15" fill="rgb(220,55,44)"/><text x="19.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1316" width="1" height="15" fill="rgb(248,79,13)"/><text x="19.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1332" width="1" height="15" fill="rgb(229,47,16)"/><text x="19.00" y="1342.50"></text></g><g><title>&lt;module&gt; (onnxconverter_common/__init__.py) (1 samples, 0.09%)</title><rect x="16" y="1348" width="1" height="15" fill="rgb(233,128,35)"/><text x="19.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1364" width="1" height="15" fill="rgb(216,44,44)"/><text x="19.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1380" width="1" height="15" fill="rgb(234,154,44)"/><text x="19.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="16" y="1396" width="1" height="15" fill="rgb(244,95,36)"/><text x="19.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1412" width="1" height="15" fill="rgb(214,170,26)"/><text x="19.00" y="1422.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1428" width="1" height="15" fill="rgb(216,152,54)"/><text x="19.00" y="1438.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="16" y="1444" width="1" height="15" fill="rgb(246,87,51)"/><text x="19.00" y="1454.50"></text></g><g><title>__fxstat (libc-2.29.so) (1 samples, 0.09%)</title><rect x="16" y="1460" width="1" height="15" fill="rgb(214,158,1)"/><text x="19.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="484" width="2" height="15" fill="rgb(228,153,21)"/><text x="19.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="500" width="2" height="15" fill="rgb(217,130,19)"/><text x="19.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="516" width="2" height="15" fill="rgb(216,43,26)"/><text x="19.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="532" width="2" height="15" fill="rgb(249,62,13)"/><text x="19.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="16" y="548" width="2" height="15" fill="rgb(251,161,54)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="564" width="2" height="15" fill="rgb(250,52,48)"/><text x="19.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (2 samples, 0.18%)</title><rect x="16" y="580" width="2" height="15" fill="rgb(218,204,26)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="596" width="2" height="15" fill="rgb(243,30,31)"/><text x="19.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="612" width="2" height="15" fill="rgb(240,104,20)"/><text x="19.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="628" width="2" height="15" fill="rgb(228,123,29)"/><text x="19.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="16" y="644" width="2" height="15" fill="rgb(227,107,8)"/><text x="19.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="660" width="2" height="15" fill="rgb(221,68,16)"/><text x="19.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (2 samples, 0.18%)</title><rect x="16" y="676" width="2" height="15" fill="rgb(211,28,32)"/><text x="19.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="692" width="2" height="15" fill="rgb(236,82,47)"/><text x="19.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="708" width="2" height="15" fill="rgb(246,117,20)"/><text x="19.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="724" width="2" height="15" fill="rgb(230,201,37)"/><text x="19.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="16" y="740" width="2" height="15" fill="rgb(235,222,12)"/><text x="19.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="756" width="2" height="15" fill="rgb(227,45,37)"/><text x="19.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (2 samples, 0.18%)</title><rect x="16" y="772" width="2" height="15" fill="rgb(217,169,5)"/><text x="19.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="788" width="2" height="15" fill="rgb(250,177,9)"/><text x="19.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="804" width="2" height="15" fill="rgb(241,179,2)"/><text x="19.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="820" width="2" height="15" fill="rgb(242,98,35)"/><text x="19.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="16" y="836" width="2" height="15" fill="rgb(220,144,47)"/><text x="19.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="852" width="2" height="15" fill="rgb(249,120,41)"/><text x="19.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (2 samples, 0.18%)</title><rect x="16" y="868" width="2" height="15" fill="rgb(252,61,34)"/><text x="19.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="884" width="2" height="15" fill="rgb(207,78,36)"/><text x="19.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="900" width="2" height="15" fill="rgb(240,162,19)"/><text x="19.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="916" width="2" height="15" fill="rgb(220,38,24)"/><text x="19.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="932" width="2" height="15" fill="rgb(220,202,37)"/><text x="19.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="948" width="2" height="15" fill="rgb(209,87,19)"/><text x="19.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="964" width="2" height="15" fill="rgb(218,188,4)"/><text x="19.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="16" y="980" width="2" height="15" fill="rgb(212,76,20)"/><text x="19.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="996" width="2" height="15" fill="rgb(216,137,1)"/><text x="19.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (2 samples, 0.18%)</title><rect x="16" y="1012" width="2" height="15" fill="rgb(206,162,11)"/><text x="19.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="1028" width="2" height="15" fill="rgb(206,165,6)"/><text x="19.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="1044" width="2" height="15" fill="rgb(252,69,35)"/><text x="19.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="1060" width="2" height="15" fill="rgb(250,121,53)"/><text x="19.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.18%)</title><rect x="16" y="1076" width="2" height="15" fill="rgb(218,179,20)"/><text x="19.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.18%)</title><rect x="16" y="1092" width="2" height="15" fill="rgb(244,82,54)"/><text x="19.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (2 samples, 0.18%)</title><rect x="16" y="1108" width="2" height="15" fill="rgb(254,72,8)"/><text x="19.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1124" width="1" height="15" fill="rgb(218,130,25)"/><text x="20.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1140" width="1" height="15" fill="rgb(246,219,37)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1156" width="1" height="15" fill="rgb(252,220,6)"/><text x="20.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1172" width="1" height="15" fill="rgb(223,215,3)"/><text x="20.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1188" width="1" height="15" fill="rgb(205,202,35)"/><text x="20.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1204" width="1" height="15" fill="rgb(227,38,6)"/><text x="20.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1220" width="1" height="15" fill="rgb(227,202,19)"/><text x="20.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (1 samples, 0.09%)</title><rect x="17" y="1236" width="1" height="15" fill="rgb(215,10,25)"/><text x="20.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1252" width="1" height="15" fill="rgb(206,36,52)"/><text x="20.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1268" width="1" height="15" fill="rgb(245,81,4)"/><text x="20.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1284" width="1" height="15" fill="rgb(221,96,51)"/><text x="20.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1300" width="1" height="15" fill="rgb(221,116,30)"/><text x="20.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1316" width="1" height="15" fill="rgb(216,166,23)"/><text x="20.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1332" width="1" height="15" fill="rgb(220,145,43)"/><text x="20.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1348" width="1" height="15" fill="rgb(213,189,22)"/><text x="20.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (1 samples, 0.09%)</title><rect x="17" y="1364" width="1" height="15" fill="rgb(232,171,45)"/><text x="20.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1380" width="1" height="15" fill="rgb(214,35,49)"/><text x="20.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1396" width="1" height="15" fill="rgb(247,176,47)"/><text x="20.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1412" width="1" height="15" fill="rgb(246,157,13)"/><text x="20.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1428" width="1" height="15" fill="rgb(246,68,52)"/><text x="20.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1444" width="1" height="15" fill="rgb(251,137,17)"/><text x="20.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.09%)</title><rect x="17" y="1460" width="1" height="15" fill="rgb(232,32,52)"/><text x="20.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1476" width="1" height="15" fill="rgb(254,102,51)"/><text x="20.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1492" width="1" height="15" fill="rgb(237,33,5)"/><text x="20.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1508" width="1" height="15" fill="rgb(214,106,13)"/><text x="20.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1524" width="1" height="15" fill="rgb(207,118,27)"/><text x="20.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1540" width="1" height="15" fill="rgb(252,5,2)"/><text x="20.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.09%)</title><rect x="17" y="1556" width="1" height="15" fill="rgb(251,156,31)"/><text x="20.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.09%)</title><rect x="17" y="1572" width="1" height="15" fill="rgb(211,53,46)"/><text x="20.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1588" width="1" height="15" fill="rgb(225,64,44)"/><text x="20.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1604" width="1" height="15" fill="rgb(239,75,11)"/><text x="20.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1620" width="1" height="15" fill="rgb(208,37,1)"/><text x="20.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1636" width="1" height="15" fill="rgb(208,33,25)"/><text x="20.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1652" width="1" height="15" fill="rgb(250,215,51)"/><text x="20.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.09%)</title><rect x="17" y="1668" width="1" height="15" fill="rgb(252,125,25)"/><text x="20.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1684" width="1" height="15" fill="rgb(249,106,41)"/><text x="20.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1700" width="1" height="15" fill="rgb(230,194,0)"/><text x="20.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1716" width="1" height="15" fill="rgb(226,146,24)"/><text x="20.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1732" width="1" height="15" fill="rgb(233,77,30)"/><text x="20.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1748" width="1" height="15" fill="rgb(220,114,44)"/><text x="20.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.09%)</title><rect x="17" y="1764" width="1" height="15" fill="rgb(254,62,45)"/><text x="20.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1780" width="1" height="15" fill="rgb(242,7,13)"/><text x="20.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1796" width="1" height="15" fill="rgb(228,44,37)"/><text x="20.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1812" width="1" height="15" fill="rgb(228,81,1)"/><text x="20.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1828" width="1" height="15" fill="rgb(236,31,41)"/><text x="20.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1844" width="1" height="15" fill="rgb(240,157,40)"/><text x="20.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/defaults.py) (1 samples, 0.09%)</title><rect x="17" y="1860" width="1" height="15" fill="rgb(209,168,2)"/><text x="20.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1876" width="1" height="15" fill="rgb(211,183,16)"/><text x="20.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1892" width="1" height="15" fill="rgb(245,60,7)"/><text x="20.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1908" width="1" height="15" fill="rgb(226,8,9)"/><text x="20.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="1924" width="1" height="15" fill="rgb(209,164,52)"/><text x="20.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1940" width="1" height="15" fill="rgb(237,134,48)"/><text x="20.00" y="1950.50"></text></g><g><title>&lt;module&gt; (jinja2/filters.py) (1 samples, 0.09%)</title><rect x="17" y="1956" width="1" height="15" fill="rgb(216,57,35)"/><text x="20.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1972" width="1" height="15" fill="rgb(216,9,34)"/><text x="20.00" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="1988" width="1" height="15" fill="rgb(231,70,19)"/><text x="20.00" y="1998.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="2004" width="1" height="15" fill="rgb(230,196,40)"/><text x="20.00" y="2014.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="17" y="2020" width="1" height="15" fill="rgb(214,24,29)"/><text x="20.00" y="2030.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="17" y="2036" width="1" height="15" fill="rgb(215,178,52)"/><text x="20.00" y="2046.50"></text></g><g><title>&lt;module&gt; (jinja2/runtime.py) (1 samples, 0.09%)</title><rect x="17" y="2052" width="1" height="15" fill="rgb(233,222,7)"/><text x="20.00" y="2062.50"></text></g><g><title>register (abc.py) (1 samples, 0.09%)</title><rect x="17" y="2068" width="1" height="15" fill="rgb(248,102,39)"/><text x="20.00" y="2078.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.09%)</title><rect x="17" y="2084" width="1" height="15" fill="rgb(244,80,31)"/><text x="20.00" y="2094.50"></text></g><g><title>__subclasscheck__ (abc.py) (1 samples, 0.09%)</title><rect x="17" y="2100" width="1" height="15" fill="rgb(242,69,10)"/><text x="20.00" y="2110.50"></text></g><g><title>Rectangle (matplotlib/patches.py) (1 samples, 0.09%)</title><rect x="18" y="1892" width="1" height="15" fill="rgb(205,67,8)"/><text x="21.00" y="1902.50"></text></g><g><title>RegularPolygon (matplotlib/patches.py) (1 samples, 0.09%)</title><rect x="19" y="1892" width="1" height="15" fill="rgb(220,138,41)"/><text x="22.00" y="1902.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (3 samples, 0.27%)</title><rect x="18" y="1876" width="3" height="15" fill="rgb(217,206,40)"/><text x="21.00" y="1886.50"></text></g><g><title>kwdoc (matplotlib/artist.py) (1 samples, 0.09%)</title><rect x="20" y="1892" width="1" height="15" fill="rgb(209,50,39)"/><text x="23.00" y="1902.50"></text></g><g><title>pprint_setters (matplotlib/artist.py) (1 samples, 0.09%)</title><rect x="20" y="1908" width="1" height="15" fill="rgb(206,153,3)"/><text x="23.00" y="1918.50"></text></g><g><title>get_valid_values (matplotlib/artist.py) (1 samples, 0.09%)</title><rect x="20" y="1924" width="1" height="15" fill="rgb(242,195,39)"/><text x="23.00" y="1934.50"></text></g><g><title>search (re.py) (1 samples, 0.09%)</title><rect x="20" y="1940" width="1" height="15" fill="rgb(227,95,45)"/><text x="23.00" y="1950.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.09%)</title><rect x="20" y="1956" width="1" height="15" fill="rgb(234,197,14)"/><text x="23.00" y="1966.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.09%)</title><rect x="20" y="1972" width="1" height="15" fill="rgb(243,44,4)"/><text x="23.00" y="1982.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 0.54%)</title><rect x="16" y="340" width="6" height="15" fill="rgb(244,213,44)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="16" y="356" width="6" height="15" fill="rgb(238,162,17)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="16" y="372" width="6" height="15" fill="rgb(222,154,11)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="16" y="388" width="6" height="15" fill="rgb(240,199,43)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.54%)</title><rect x="16" y="404" width="6" height="15" fill="rgb(224,172,49)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="16" y="420" width="6" height="15" fill="rgb(219,31,46)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (6 samples, 0.54%)</title><rect x="16" y="436" width="6" height="15" fill="rgb(245,162,8)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="16" y="452" width="6" height="15" fill="rgb(228,76,36)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.54%)</title><rect x="16" y="468" width="6" height="15" fill="rgb(239,218,41)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="484" width="4" height="15" fill="rgb(235,80,0)"/><text x="21.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="500" width="4" height="15" fill="rgb(234,210,7)"/><text x="21.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="516" width="4" height="15" fill="rgb(220,2,18)"/><text x="21.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 0.36%)</title><rect x="18" y="532" width="4" height="15" fill="rgb(233,63,0)"/><text x="21.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="548" width="4" height="15" fill="rgb(220,16,11)"/><text x="21.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="564" width="4" height="15" fill="rgb(208,2,30)"/><text x="21.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="580" width="4" height="15" fill="rgb(248,127,49)"/><text x="21.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="596" width="4" height="15" fill="rgb(217,167,40)"/><text x="21.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="612" width="4" height="15" fill="rgb(213,67,40)"/><text x="21.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 0.36%)</title><rect x="18" y="628" width="4" height="15" fill="rgb(225,33,29)"/><text x="21.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="644" width="4" height="15" fill="rgb(211,23,5)"/><text x="21.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="660" width="4" height="15" fill="rgb(250,23,8)"/><text x="21.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="676" width="4" height="15" fill="rgb(208,19,24)"/><text x="21.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="692" width="4" height="15" fill="rgb(254,203,50)"/><text x="21.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="708" width="4" height="15" fill="rgb(236,151,36)"/><text x="21.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.36%)</title><rect x="18" y="724" width="4" height="15" fill="rgb(221,216,49)"/><text x="21.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="740" width="4" height="15" fill="rgb(245,179,31)"/><text x="21.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="756" width="4" height="15" fill="rgb(246,203,11)"/><text x="21.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="772" width="4" height="15" fill="rgb(230,198,49)"/><text x="21.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="788" width="4" height="15" fill="rgb(234,135,21)"/><text x="21.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="804" width="4" height="15" fill="rgb(250,61,0)"/><text x="21.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 0.36%)</title><rect x="18" y="820" width="4" height="15" fill="rgb(234,52,37)"/><text x="21.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="836" width="4" height="15" fill="rgb(231,127,24)"/><text x="21.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="852" width="4" height="15" fill="rgb(206,141,15)"/><text x="21.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="868" width="4" height="15" fill="rgb(238,122,43)"/><text x="21.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="884" width="4" height="15" fill="rgb(212,165,30)"/><text x="21.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="900" width="4" height="15" fill="rgb(232,185,25)"/><text x="21.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 0.36%)</title><rect x="18" y="916" width="4" height="15" fill="rgb(248,13,21)"/><text x="21.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="932" width="4" height="15" fill="rgb(219,18,11)"/><text x="21.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="948" width="4" height="15" fill="rgb(216,159,25)"/><text x="21.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="964" width="4" height="15" fill="rgb(212,171,4)"/><text x="21.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="980" width="4" height="15" fill="rgb(236,223,38)"/><text x="21.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="996" width="4" height="15" fill="rgb(254,86,51)"/><text x="21.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 0.36%)</title><rect x="18" y="1012" width="4" height="15" fill="rgb(238,190,19)"/><text x="21.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1028" width="4" height="15" fill="rgb(240,193,31)"/><text x="21.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1044" width="4" height="15" fill="rgb(214,62,17)"/><text x="21.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1060" width="4" height="15" fill="rgb(214,131,34)"/><text x="21.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1076" width="4" height="15" fill="rgb(239,223,3)"/><text x="21.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1092" width="4" height="15" fill="rgb(211,101,29)"/><text x="21.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (4 samples, 0.36%)</title><rect x="18" y="1108" width="4" height="15" fill="rgb(240,116,22)"/><text x="21.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1124" width="4" height="15" fill="rgb(239,184,15)"/><text x="21.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1140" width="4" height="15" fill="rgb(250,203,35)"/><text x="21.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1156" width="4" height="15" fill="rgb(210,48,45)"/><text x="21.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1172" width="4" height="15" fill="rgb(242,186,8)"/><text x="21.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1188" width="4" height="15" fill="rgb(212,67,30)"/><text x="21.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (4 samples, 0.36%)</title><rect x="18" y="1204" width="4" height="15" fill="rgb(211,143,24)"/><text x="21.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1220" width="4" height="15" fill="rgb(224,156,3)"/><text x="21.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1236" width="4" height="15" fill="rgb(210,29,17)"/><text x="21.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1252" width="4" height="15" fill="rgb(228,154,30)"/><text x="21.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1268" width="4" height="15" fill="rgb(216,84,18)"/><text x="21.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1284" width="4" height="15" fill="rgb(234,72,8)"/><text x="21.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (4 samples, 0.36%)</title><rect x="18" y="1300" width="4" height="15" fill="rgb(213,192,51)"/><text x="21.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1316" width="4" height="15" fill="rgb(212,45,15)"/><text x="21.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1332" width="4" height="15" fill="rgb(219,54,32)"/><text x="21.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1348" width="4" height="15" fill="rgb(210,69,3)"/><text x="21.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1364" width="4" height="15" fill="rgb(232,148,40)"/><text x="21.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1380" width="4" height="15" fill="rgb(208,29,10)"/><text x="21.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (4 samples, 0.36%)</title><rect x="18" y="1396" width="4" height="15" fill="rgb(226,69,11)"/><text x="21.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1412" width="4" height="15" fill="rgb(250,161,43)"/><text x="21.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1428" width="4" height="15" fill="rgb(245,76,27)"/><text x="21.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1444" width="4" height="15" fill="rgb(206,37,51)"/><text x="21.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1460" width="4" height="15" fill="rgb(221,75,4)"/><text x="21.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1476" width="4" height="15" fill="rgb(244,108,23)"/><text x="21.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (4 samples, 0.36%)</title><rect x="18" y="1492" width="4" height="15" fill="rgb(233,84,30)"/><text x="21.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1508" width="4" height="15" fill="rgb(222,103,45)"/><text x="21.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1524" width="4" height="15" fill="rgb(249,119,35)"/><text x="21.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1540" width="4" height="15" fill="rgb(210,44,35)"/><text x="21.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1556" width="4" height="15" fill="rgb(207,11,16)"/><text x="21.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1572" width="4" height="15" fill="rgb(244,10,37)"/><text x="21.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (4 samples, 0.36%)</title><rect x="18" y="1588" width="4" height="15" fill="rgb(224,197,15)"/><text x="21.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1604" width="4" height="15" fill="rgb(236,198,7)"/><text x="21.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1620" width="4" height="15" fill="rgb(237,213,52)"/><text x="21.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1636" width="4" height="15" fill="rgb(240,25,14)"/><text x="21.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1652" width="4" height="15" fill="rgb(233,206,51)"/><text x="21.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1668" width="4" height="15" fill="rgb(253,53,47)"/><text x="21.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (4 samples, 0.36%)</title><rect x="18" y="1684" width="4" height="15" fill="rgb(230,148,53)"/><text x="21.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1700" width="4" height="15" fill="rgb(250,134,26)"/><text x="21.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1716" width="4" height="15" fill="rgb(223,182,27)"/><text x="21.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1732" width="4" height="15" fill="rgb(219,214,15)"/><text x="21.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1748" width="4" height="15" fill="rgb(224,224,20)"/><text x="21.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1764" width="4" height="15" fill="rgb(250,224,30)"/><text x="21.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (4 samples, 0.36%)</title><rect x="18" y="1780" width="4" height="15" fill="rgb(236,94,9)"/><text x="21.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1796" width="4" height="15" fill="rgb(253,1,40)"/><text x="21.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1812" width="4" height="15" fill="rgb(217,141,12)"/><text x="21.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1828" width="4" height="15" fill="rgb(233,204,33)"/><text x="21.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.36%)</title><rect x="18" y="1844" width="4" height="15" fill="rgb(217,131,35)"/><text x="21.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.36%)</title><rect x="18" y="1860" width="4" height="15" fill="rgb(252,126,0)"/><text x="21.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.09%)</title><rect x="21" y="1876" width="1" height="15" fill="rgb(237,52,22)"/><text x="24.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1892" width="1" height="15" fill="rgb(253,151,32)"/><text x="24.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1908" width="1" height="15" fill="rgb(246,39,9)"/><text x="24.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1924" width="1" height="15" fill="rgb(240,28,4)"/><text x="24.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="21" y="1940" width="1" height="15" fill="rgb(231,228,26)"/><text x="24.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="21" y="1956" width="1" height="15" fill="rgb(224,30,24)"/><text x="24.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (1 samples, 0.09%)</title><rect x="21" y="1972" width="1" height="15" fill="rgb(215,158,2)"/><text x="24.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py) (1 samples, 0.09%)</title><rect x="21" y="1988" width="1" height="15" fill="rgb(223,157,6)"/><text x="24.00" y="1998.50"></text></g><g><title>load (json/__init__.py) (1 samples, 0.09%)</title><rect x="21" y="2004" width="1" height="15" fill="rgb(219,224,6)"/><text x="24.00" y="2014.50"></text></g><g><title>loads (json/__init__.py) (1 samples, 0.09%)</title><rect x="21" y="2020" width="1" height="15" fill="rgb(236,35,3)"/><text x="24.00" y="2030.50"></text></g><g><title>decode (json/decoder.py) (1 samples, 0.09%)</title><rect x="21" y="2036" width="1" height="15" fill="rgb(254,27,50)"/><text x="24.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py) (1 samples, 0.09%)</title><rect x="21" y="2052" width="1" height="15" fill="rgb(238,168,47)"/><text x="24.00" y="2062.50"></text></g><g><title>0x7f116b40f720 (?) (1 samples, 0.09%)</title><rect x="21" y="2068" width="1" height="15" fill="rgb(238,187,1)"/><text x="24.00" y="2078.50"></text></g><g><title>0x7f116b411568 (?) (1 samples, 0.09%)</title><rect x="21" y="2084" width="1" height="15" fill="rgb(216,189,23)"/><text x="24.00" y="2094.50"></text></g><g><title>0x7f116b4108fe (?) (1 samples, 0.09%)</title><rect x="21" y="2100" width="1" height="15" fill="rgb(248,58,16)"/><text x="24.00" y="2110.50"></text></g><g><title>0x7f116b41075d (?) (1 samples, 0.09%)</title><rect x="21" y="2116" width="1" height="15" fill="rgb(217,28,10)"/><text x="24.00" y="2126.50"></text></g><g><title>0x7f116b409cb1 (?) (1 samples, 0.09%)</title><rect x="21" y="2132" width="1" height="15" fill="rgb(230,36,33)"/><text x="24.00" y="2142.50"></text></g><g><title>_json_decode (matplotlib/font_manager.py) (1 samples, 0.09%)</title><rect x="21" y="2148" width="1" height="15" fill="rgb(213,227,53)"/><text x="24.00" y="2158.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 0.63%)</title><rect x="16" y="244" width="7" height="15" fill="rgb(232,201,54)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.63%)</title><rect x="16" y="260" width="7" height="15" fill="rgb(215,155,26)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.63%)</title><rect x="16" y="276" width="7" height="15" fill="rgb(227,128,28)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.63%)</title><rect x="16" y="292" width="7" height="15" fill="rgb(253,12,36)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.63%)</title><rect x="16" y="308" width="7" height="15" fill="rgb(216,205,41)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.63%)</title><rect x="16" y="324" width="7" height="15" fill="rgb(249,153,23)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.09%)</title><rect x="22" y="340" width="1" height="15" fill="rgb(233,143,52)"/><text x="25.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="356" width="1" height="15" fill="rgb(248,190,2)"/><text x="25.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="372" width="1" height="15" fill="rgb(226,160,35)"/><text x="25.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="388" width="1" height="15" fill="rgb(218,169,37)"/><text x="25.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="404" width="1" height="15" fill="rgb(205,37,6)"/><text x="25.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="420" width="1" height="15" fill="rgb(222,58,43)"/><text x="25.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="436" width="1" height="15" fill="rgb(218,7,18)"/><text x="25.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="452" width="1" height="15" fill="rgb(221,193,43)"/><text x="25.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="468" width="1" height="15" fill="rgb(216,117,13)"/><text x="25.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="484" width="1" height="15" fill="rgb(251,91,31)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="500" width="1" height="15" fill="rgb(250,58,49)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="516" width="1" height="15" fill="rgb(227,54,4)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="532" width="1" height="15" fill="rgb(217,0,10)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="548" width="1" height="15" fill="rgb(228,124,28)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="564" width="1" height="15" fill="rgb(243,136,54)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.09%)</title><rect x="22" y="580" width="1" height="15" fill="rgb(249,138,47)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="596" width="1" height="15" fill="rgb(223,206,51)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="612" width="1" height="15" fill="rgb(226,6,50)"/><text x="25.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="628" width="1" height="15" fill="rgb(252,101,48)"/><text x="25.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="644" width="1" height="15" fill="rgb(223,21,12)"/><text x="25.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="660" width="1" height="15" fill="rgb(245,225,6)"/><text x="25.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="676" width="1" height="15" fill="rgb(254,21,38)"/><text x="25.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="692" width="1" height="15" fill="rgb(210,40,8)"/><text x="25.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="708" width="1" height="15" fill="rgb(238,64,4)"/><text x="25.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="724" width="1" height="15" fill="rgb(223,113,52)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="740" width="1" height="15" fill="rgb(250,25,3)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="756" width="1" height="15" fill="rgb(238,32,54)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="772" width="1" height="15" fill="rgb(215,14,12)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="788" width="1" height="15" fill="rgb(242,152,54)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="804" width="1" height="15" fill="rgb(250,186,52)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.09%)</title><rect x="22" y="820" width="1" height="15" fill="rgb(253,59,36)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="836" width="1" height="15" fill="rgb(210,146,35)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="852" width="1" height="15" fill="rgb(220,37,32)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="868" width="1" height="15" fill="rgb(241,87,14)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="884" width="1" height="15" fill="rgb(213,188,24)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="900" width="1" height="15" fill="rgb(226,10,1)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.09%)</title><rect x="22" y="916" width="1" height="15" fill="rgb(217,49,11)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="932" width="1" height="15" fill="rgb(218,181,53)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="948" width="1" height="15" fill="rgb(230,57,19)"/><text x="25.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="964" width="1" height="15" fill="rgb(229,196,2)"/><text x="25.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(227,225,26)"/><text x="25.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(214,201,25)"/><text x="25.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1012" width="1" height="15" fill="rgb(213,174,42)"/><text x="25.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1028" width="1" height="15" fill="rgb(229,128,15)"/><text x="25.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1044" width="1" height="15" fill="rgb(236,219,1)"/><text x="25.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.09%)</title><rect x="22" y="1060" width="1" height="15" fill="rgb(210,164,47)"/><text x="25.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1076" width="1" height="15" fill="rgb(232,159,53)"/><text x="25.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1092" width="1" height="15" fill="rgb(251,44,37)"/><text x="25.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1108" width="1" height="15" fill="rgb(251,136,29)"/><text x="25.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1124" width="1" height="15" fill="rgb(231,221,13)"/><text x="25.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1140" width="1" height="15" fill="rgb(218,103,42)"/><text x="25.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.09%)</title><rect x="22" y="1156" width="1" height="15" fill="rgb(218,204,47)"/><text x="25.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1172" width="1" height="15" fill="rgb(253,117,31)"/><text x="25.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1188" width="1" height="15" fill="rgb(206,146,4)"/><text x="25.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="22" y="1204" width="1" height="15" fill="rgb(244,165,44)"/><text x="25.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1220" width="1" height="15" fill="rgb(232,31,47)"/><text x="25.00" y="1230.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1236" width="1" height="15" fill="rgb(250,180,31)"/><text x="25.00" y="1246.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="22" y="1252" width="1" height="15" fill="rgb(205,20,27)"/><text x="25.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.25%)</title><rect x="10" y="68" width="14" height="15" fill="rgb(219,175,10)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.25%)</title><rect x="10" y="84" width="14" height="15" fill="rgb(252,146,24)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.25%)</title><rect x="10" y="100" width="14" height="15" fill="rgb(222,87,50)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (14 samples, 1.25%)</title><rect x="10" y="116" width="14" height="15" fill="rgb(230,119,13)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.25%)</title><rect x="10" y="132" width="14" height="15" fill="rgb(206,145,22)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (14 samples, 1.25%)</title><rect x="10" y="148" width="14" height="15" fill="rgb(231,207,31)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.25%)</title><rect x="10" y="164" width="14" height="15" fill="rgb(237,181,45)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (14 samples, 1.25%)</title><rect x="10" y="180" width="14" height="15" fill="rgb(227,59,47)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.71%)</title><rect x="16" y="196" width="8" height="15" fill="rgb(212,207,13)"/><text x="19.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.71%)</title><rect x="16" y="212" width="8" height="15" fill="rgb(254,221,32)"/><text x="19.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.71%)</title><rect x="16" y="228" width="8" height="15" fill="rgb(249,49,53)"/><text x="19.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.09%)</title><rect x="23" y="244" width="1" height="15" fill="rgb(253,19,10)"/><text x="26.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="260" width="1" height="15" fill="rgb(243,223,48)"/><text x="26.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="276" width="1" height="15" fill="rgb(211,39,51)"/><text x="26.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="292" width="1" height="15" fill="rgb(224,100,47)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="308" width="1" height="15" fill="rgb(222,117,43)"/><text x="26.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="324" width="1" height="15" fill="rgb(210,28,21)"/><text x="26.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="23" y="340" width="1" height="15" fill="rgb(232,12,52)"/><text x="26.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="356" width="1" height="15" fill="rgb(215,73,23)"/><text x="26.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/ma/__init__.py) (1 samples, 0.09%)</title><rect x="23" y="372" width="1" height="15" fill="rgb(233,180,35)"/><text x="26.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="388" width="1" height="15" fill="rgb(211,185,42)"/><text x="26.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="404" width="1" height="15" fill="rgb(211,120,22)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="420" width="1" height="15" fill="rgb(244,118,19)"/><text x="26.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="436" width="1" height="15" fill="rgb(205,131,23)"/><text x="26.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="452" width="1" height="15" fill="rgb(210,29,43)"/><text x="26.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.09%)</title><rect x="23" y="468" width="1" height="15" fill="rgb(233,190,38)"/><text x="26.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.09%)</title><rect x="23" y="484" width="1" height="15" fill="rgb(225,164,40)"/><text x="26.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/ma/core.py) (1 samples, 0.09%)</title><rect x="23" y="500" width="1" height="15" fill="rgb(221,139,1)"/><text x="26.00" y="510.50"></text></g><g><title>__init__ (numpy/ma/core.py) (1 samples, 0.09%)</title><rect x="23" y="516" width="1" height="15" fill="rgb(248,89,27)"/><text x="26.00" y="526.50"></text></g><g><title>getdoc (numpy/ma/core.py) (1 samples, 0.09%)</title><rect x="23" y="532" width="1" height="15" fill="rgb(221,45,1)"/><text x="26.00" y="542.50"></text></g><g><title>get_object_signature (numpy/ma/core.py) (1 samples, 0.09%)</title><rect x="23" y="548" width="1" height="15" fill="rgb(248,5,38)"/><text x="26.00" y="558.50"></text></g><g><title>getargspec (numpy/compat/_inspect.py) (1 samples, 0.09%)</title><rect x="23" y="564" width="1" height="15" fill="rgb(246,151,7)"/><text x="26.00" y="574.50"></text></g><g><title>getargs (numpy/compat/_inspect.py) (1 samples, 0.09%)</title><rect x="23" y="580" width="1" height="15" fill="rgb(247,89,48)"/><text x="26.00" y="590.50"></text></g><g><title>0x7f117f1b9ace (libc-2.29.so) (1 samples, 0.09%)</title><rect x="27" y="180" width="1" height="15" fill="rgb(209,29,30)"/><text x="30.00" y="190.50"></text></g><g><title>0x7f117f1b8bc6 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="28" y="196" width="2" height="15" fill="rgb(242,93,14)"/><text x="31.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.27%)</title><rect x="27" y="116" width="4" height="15" fill="rgb(233,114,42)"/><text x="30.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (3 samples, 0.27%)</title><rect x="27" y="132" width="4" height="15" fill="rgb(231,226,47)"/><text x="30.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (3 samples, 0.27%)</title><rect x="27" y="148" width="4" height="15" fill="rgb(245,224,38)"/><text x="30.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (3 samples, 0.27%)</title><rect x="27" y="164" width="4" height="15" fill="rgb(237,191,1)"/><text x="30.00" y="174.50"></text></g><g><title>0x7f117f1b9eb0 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="28" y="180" width="3" height="15" fill="rgb(253,55,9)"/><text x="31.00" y="190.50"></text></g><g><title>0x7f117f1b8c73 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="30" y="196" width="1" height="15" fill="rgb(221,106,12)"/><text x="33.00" y="206.50"></text></g><g><title>0x7f117f1b8b0e (libc-2.29.so) (1 samples, 0.09%)</title><rect x="30" y="212" width="1" height="15" fill="rgb(210,19,14)"/><text x="33.00" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.27%)</title><rect x="47" y="180" width="4" height="15" fill="rgb(240,115,24)"/><text x="50.00" y="190.50"></text></g><g><title>0x7f113f277ff9 (?) (1 samples, 0.09%)</title><rect x="59" y="212" width="1" height="15" fill="rgb(237,211,28)"/><text x="62.00" y="222.50"></text></g><g><title>0x7f113f272ef6 (?) (1 samples, 0.09%)</title><rect x="59" y="228" width="1" height="15" fill="rgb(220,209,35)"/><text x="62.00" y="238.50"></text></g><g><title>0x7f113f267962 (?) (1 samples, 0.09%)</title><rect x="59" y="244" width="1" height="15" fill="rgb(229,44,12)"/><text x="62.00" y="254.50"></text></g><g><title>0x7f113f29b7a7 (?) (1 samples, 0.09%)</title><rect x="59" y="260" width="1" height="15" fill="rgb(224,126,23)"/><text x="62.00" y="270.50"></text></g><g><title>0x7f113f29b379 (?) (1 samples, 0.09%)</title><rect x="59" y="276" width="1" height="15" fill="rgb(216,147,49)"/><text x="62.00" y="286.50"></text></g><g><title>0x7f113f6f98b8 (?) (1 samples, 0.09%)</title><rect x="59" y="292" width="1" height="15" fill="rgb(220,123,31)"/><text x="62.00" y="302.50"></text></g><g><title>0x7f113f6f7c7f (?) (1 samples, 0.09%)</title><rect x="59" y="308" width="1" height="15" fill="rgb(242,170,2)"/><text x="62.00" y="318.50"></text></g><g><title>0x7f113f70a99c (?) (1 samples, 0.09%)</title><rect x="59" y="324" width="1" height="15" fill="rgb(245,162,0)"/><text x="62.00" y="334.50"></text></g><g><title>0x7f113f431dc2 (?) (1 samples, 0.09%)</title><rect x="59" y="340" width="1" height="15" fill="rgb(211,80,46)"/><text x="62.00" y="350.50"></text></g><g><title>0x7f113f431541 (?) (1 samples, 0.09%)</title><rect x="59" y="356" width="1" height="15" fill="rgb(254,134,19)"/><text x="62.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="61" y="244" width="1" height="15" fill="rgb(210,19,7)"/><text x="64.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="61" y="260" width="1" height="15" fill="rgb(208,110,27)"/><text x="64.00" y="270.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="62" y="260" width="2" height="15" fill="rgb(206,32,13)"/><text x="65.00" y="270.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (5 samples, 0.45%)</title><rect x="60" y="212" width="5" height="15" fill="rgb(209,125,49)"/><text x="63.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.36%)</title><rect x="61" y="228" width="4" height="15" fill="rgb(215,134,34)"/><text x="64.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.27%)</title><rect x="62" y="244" width="3" height="15" fill="rgb(214,217,4)"/><text x="65.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="64" y="260" width="1" height="15" fill="rgb(205,121,15)"/><text x="67.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="64" y="276" width="1" height="15" fill="rgb(232,103,1)"/><text x="67.00" y="286.50"></text></g><g><title>0x7f117f1cfe6d (libc-2.29.so) (1 samples, 0.09%)</title><rect x="64" y="292" width="1" height="15" fill="rgb(236,175,25)"/><text x="67.00" y="302.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.09%)</title><rect x="65" y="212" width="1" height="15" fill="rgb(239,154,32)"/><text x="68.00" y="222.50"></text></g><g><title>0x7ffd1efe8bb2 ([vdso]) (1 samples, 0.09%)</title><rect x="65" y="228" width="1" height="15" fill="rgb(222,37,23)"/><text x="68.00" y="238.50"></text></g><g><title>0x7ffd1efe8949 ([vdso]) (1 samples, 0.09%)</title><rect x="65" y="244" width="1" height="15" fill="rgb(232,115,19)"/><text x="68.00" y="254.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="66" y="228" width="1" height="15" fill="rgb(208,145,29)"/><text x="69.00" y="238.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="74" y="308" width="1" height="15" fill="rgb(243,79,32)"/><text x="77.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="74" y="292" width="2" height="15" fill="rgb(225,94,2)"/><text x="77.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="75" y="308" width="1" height="15" fill="rgb(235,34,20)"/><text x="78.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="75" y="324" width="1" height="15" fill="rgb(238,0,36)"/><text x="78.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="75" y="340" width="1" height="15" fill="rgb(249,156,29)"/><text x="78.00" y="350.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.18%)</title><rect x="76" y="308" width="2" height="15" fill="rgb(237,196,45)"/><text x="79.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.18%)</title><rect x="76" y="324" width="2" height="15" fill="rgb(243,146,46)"/><text x="79.00" y="334.50"></text></g><g><title>0x7f117f1bb281 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="77" y="340" width="1" height="15" fill="rgb(248,54,24)"/><text x="80.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.27%)</title><rect x="76" y="292" width="3" height="15" fill="rgb(226,27,12)"/><text x="79.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="78" y="308" width="1" height="15" fill="rgb(206,63,26)"/><text x="81.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="78" y="324" width="1" height="15" fill="rgb(216,127,23)"/><text x="81.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="78" y="340" width="1" height="15" fill="rgb(231,137,43)"/><text x="81.00" y="350.50"></text></g><g><title>0x7f117f1bafa4 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="78" y="356" width="1" height="15" fill="rgb(247,199,15)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="79" y="292" width="1" height="15" fill="rgb(229,63,40)"/><text x="82.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="80" y="292" width="1" height="15" fill="rgb(230,57,50)"/><text x="83.00" y="302.50"></text></g><g><title>onnxruntime::CheckTypes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="80" y="308" width="1" height="15" fill="rgb(207,81,4)"/><text x="83.00" y="318.50"></text></g><g><title>0x7f113f23ec40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="175" y="356" width="1" height="15" fill="rgb(212,21,48)"/><text x="178.00" y="366.50"></text></g><g><title>0x7f116ec867a0 (libstdc++.so.6.0.28) (3 samples, 0.27%)</title><rect x="176" y="356" width="3" height="15" fill="rgb(246,72,4)"/><text x="179.00" y="366.50"></text></g><g><title>0x7f117f1b9906 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="179" y="356" width="1" height="15" fill="rgb(212,121,3)"/><text x="182.00" y="366.50"></text></g><g><title>0x7f117f1b990e (libc-2.29.so) (4 samples, 0.36%)</title><rect x="180" y="356" width="5" height="15" fill="rgb(223,176,6)"/><text x="183.00" y="366.50"></text></g><g><title>0x7f117f1b991c (libc-2.29.so) (2 samples, 0.18%)</title><rect x="185" y="356" width="2" height="15" fill="rgb(253,180,32)"/><text x="188.00" y="366.50"></text></g><g><title>0x7f117f1b992c (libc-2.29.so) (2 samples, 0.18%)</title><rect x="187" y="356" width="2" height="15" fill="rgb(252,12,40)"/><text x="190.00" y="366.50"></text></g><g><title>0x7f117f1b993b (libc-2.29.so) (2 samples, 0.18%)</title><rect x="189" y="356" width="2" height="15" fill="rgb(252,226,54)"/><text x="192.00" y="366.50"></text></g><g><title>0x7f117f1b9945 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="191" y="356" width="2" height="15" fill="rgb(221,36,0)"/><text x="194.00" y="366.50"></text></g><g><title>0x7f117f1b995e (libc-2.29.so) (5 samples, 0.45%)</title><rect x="193" y="356" width="5" height="15" fill="rgb(237,133,52)"/><text x="196.00" y="366.50"></text></g><g><title>0x7f117f1b9961 (libc-2.29.so) (3 samples, 0.27%)</title><rect x="198" y="356" width="3" height="15" fill="rgb(221,191,1)"/><text x="201.00" y="366.50"></text></g><g><title>0x7f117f1b9965 (libc-2.29.so) (5 samples, 0.45%)</title><rect x="201" y="356" width="6" height="15" fill="rgb(212,17,54)"/><text x="204.00" y="366.50"></text></g><g><title>0x7f117f1b996a (libc-2.29.so) (4 samples, 0.36%)</title><rect x="207" y="356" width="4" height="15" fill="rgb(245,55,22)"/><text x="210.00" y="366.50"></text></g><g><title>0x7f117f1b9971 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="211" y="356" width="1" height="15" fill="rgb(252,13,46)"/><text x="214.00" y="366.50"></text></g><g><title>0x7f117f1b9991 (libc-2.29.so) (18 samples, 1.61%)</title><rect x="212" y="356" width="19" height="15" fill="rgb(233,2,40)"/><text x="215.00" y="366.50"></text></g><g><title>0x7f117f1b9998 (libc-2.29.so) (6 samples, 0.54%)</title><rect x="231" y="356" width="6" height="15" fill="rgb(250,155,54)"/><text x="234.00" y="366.50"></text></g><g><title>0x7f117f1b9a38 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="237" y="356" width="1" height="15" fill="rgb(236,127,26)"/><text x="240.00" y="366.50"></text></g><g><title>0x7f117f1b9a41 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="238" y="356" width="2" height="15" fill="rgb(243,220,9)"/><text x="241.00" y="366.50"></text></g><g><title>0x7f117f1b9a4d (libc-2.29.so) (4 samples, 0.36%)</title><rect x="240" y="356" width="5" height="15" fill="rgb(219,224,3)"/><text x="243.00" y="366.50"></text></g><g><title>0x7f117f1b9a55 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="245" y="356" width="1" height="15" fill="rgb(225,158,26)"/><text x="248.00" y="366.50"></text></g><g><title>0x7f117f1b9bc0 (libc-2.29.so) (5 samples, 0.45%)</title><rect x="246" y="356" width="5" height="15" fill="rgb(253,214,23)"/><text x="249.00" y="366.50"></text></g><g><title>0x7f117f1b9bd8 (libc-2.29.so) (6 samples, 0.54%)</title><rect x="251" y="356" width="6" height="15" fill="rgb(225,105,25)"/><text x="254.00" y="366.50"></text></g><g><title>0x7f117f1b9be4 (libc-2.29.so) (2 samples, 0.18%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(249,174,52)"/><text x="260.00" y="366.50"></text></g><g><title>0x7f117f1b9be8 (libc-2.29.so) (6 samples, 0.54%)</title><rect x="259" y="356" width="7" height="15" fill="rgb(239,168,0)"/><text x="262.00" y="366.50"></text></g><g><title>0x7f117f1da120 (libc-2.29.so) (3 samples, 0.27%)</title><rect x="266" y="356" width="3" height="15" fill="rgb(240,112,33)"/><text x="269.00" y="366.50"></text></g><g><title>0x7f117f1da12b (libc-2.29.so) (1 samples, 0.09%)</title><rect x="269" y="356" width="1" height="15" fill="rgb(229,151,25)"/><text x="272.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (29 samples, 2.59%)</title><rect x="270" y="356" width="31" height="15" fill="rgb(217,34,41)"/><text x="273.00" y="366.50">fr..</text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="301" y="356" width="2" height="15" fill="rgb(215,198,12)"/><text x="304.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="301" y="372" width="2" height="15" fill="rgb(227,20,46)"/><text x="304.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="301" y="388" width="2" height="15" fill="rgb(247,191,44)"/><text x="304.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.18%)</title><rect x="301" y="404" width="2" height="15" fill="rgb(219,55,15)"/><text x="304.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="302" y="420" width="1" height="15" fill="rgb(212,51,16)"/><text x="305.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="302" y="436" width="1" height="15" fill="rgb(212,126,20)"/><text x="305.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="302" y="452" width="1" height="15" fill="rgb(205,162,28)"/><text x="305.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="302" y="468" width="1" height="15" fill="rgb(211,29,27)"/><text x="305.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="302" y="484" width="1" height="15" fill="rgb(241,100,37)"/><text x="305.00" y="494.50"></text></g><g><title>0x7f117f1d9d6a (libc-2.29.so) (1 samples, 0.09%)</title><rect x="302" y="500" width="1" height="15" fill="rgb(250,125,40)"/><text x="305.00" y="510.50"></text></g><g><title>0x7f113f23e930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="540" y="388" width="1" height="15" fill="rgb(234,159,41)"/><text x="543.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (14 samples, 1.25%)</title><rect x="541" y="388" width="15" height="15" fill="rgb(222,208,53)"/><text x="544.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.80%)</title><rect x="546" y="404" width="10" height="15" fill="rgb(233,178,51)"/><text x="549.00" y="414.50"></text></g><g><title>0x7f117f1da120 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="600" y="420" width="1" height="15" fill="rgb(247,64,7)"/><text x="603.00" y="430.50"></text></g><g><title>0x7f117f1da14a (libc-2.29.so) (2 samples, 0.18%)</title><rect x="601" y="420" width="2" height="15" fill="rgb(242,117,17)"/><text x="604.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 2.59%)</title><rect x="583" y="404" width="31" height="15" fill="rgb(207,92,43)"/><text x="586.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (10 samples, 0.89%)</title><rect x="603" y="420" width="11" height="15" fill="rgb(211,133,13)"/><text x="606.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.80%)</title><rect x="604" y="436" width="10" height="15" fill="rgb(248,189,36)"/><text x="607.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (405 samples, 36.19%)</title><rect x="303" y="356" width="427" height="15" fill="rgb(211,47,40)"/><text x="306.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTree..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (204 samples, 18.23%)</title><rect x="515" y="372" width="215" height="15" fill="rgb(207,78,26)"/><text x="518.00" y="382.50">std::_Hashtable&lt;long, std::p..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (165 samples, 14.75%)</title><rect x="556" y="388" width="174" height="15" fill="rgb(229,223,2)"/><text x="559.00" y="398.50">std::_Hashtable&lt;long, ..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (110 samples, 9.83%)</title><rect x="614" y="404" width="116" height="15" fill="rgb(251,100,51)"/><text x="617.00" y="414.50">std::__detail:..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (46 samples, 4.11%)</title><rect x="681" y="420" width="49" height="15" fill="rgb(235,180,22)"/><text x="684.00" y="430.50">std:..</text></g><g><title>0x7f113f23e850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="743" y="372" width="1" height="15" fill="rgb(226,96,0)"/><text x="746.00" y="382.50"></text></g><g><title>0x7f117f1d9d50 (libc-2.29.so) (3 samples, 0.27%)</title><rect x="744" y="372" width="4" height="15" fill="rgb(227,196,38)"/><text x="747.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (19 samples, 1.70%)</title><rect x="730" y="356" width="20" height="15" fill="rgb(251,157,36)"/><text x="733.00" y="366.50"></text></g><g><title>0x7f117f1d9dbf (libc-2.29.so) (2 samples, 0.18%)</title><rect x="748" y="372" width="2" height="15" fill="rgb(216,219,41)"/><text x="751.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (4 samples, 0.36%)</title><rect x="750" y="356" width="4" height="15" fill="rgb(250,118,33)"/><text x="753.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (46 samples, 4.11%)</title><rect x="754" y="356" width="48" height="15" fill="rgb(207,135,41)"/><text x="757.00" y="366.50">std:..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (719 samples, 64.25%)</title><rect x="72" y="260" width="758" height="15" fill="rgb(207,162,39)"/><text x="75.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (718 samples, 64.16%)</title><rect x="73" y="276" width="757" height="15" fill="rgb(232,1,16)"/><text x="76.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (710 samples, 63.45%)</title><rect x="81" y="292" width="749" height="15" fill="rgb(210,219,51)"/><text x="84.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (710 samples, 63.45%)</title><rect x="81" y="308" width="749" height="15" fill="rgb(252,142,47)"/><text x="84.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (710 samples, 63.45%)</title><rect x="81" y="324" width="749" height="15" fill="rgb(236,200,14)"/><text x="84.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (708 samples, 63.27%)</title><rect x="83" y="340" width="747" height="15" fill="rgb(236,95,14)"/><text x="86.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (26 samples, 2.32%)</title><rect x="802" y="356" width="28" height="15" fill="rgb(218,149,37)"/><text x="805.00" y="366.50">s..</text></g><g><title>operator new (libstdc++.so.6.0.28) (20 samples, 1.79%)</title><rect x="809" y="372" width="21" height="15" fill="rgb(244,145,9)"/><text x="812.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (10 samples, 0.89%)</title><rect x="819" y="388" width="11" height="15" fill="rgb(252,46,0)"/><text x="822.00" y="398.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="830" y="260" width="1" height="15" fill="rgb(211,37,52)"/><text x="833.00" y="270.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.09%)</title><rect x="830" y="276" width="1" height="15" fill="rgb(226,30,11)"/><text x="833.00" y="286.50"></text></g><g><title>0x7f117f1d9d94 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="831" y="276" width="1" height="15" fill="rgb(237,177,31)"/><text x="834.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (2 samples, 0.18%)</title><rect x="832" y="308" width="2" height="15" fill="rgb(253,62,8)"/><text x="835.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="833" y="324" width="1" height="15" fill="rgb(237,85,4)"/><text x="836.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="834" y="308" width="1" height="15" fill="rgb(249,150,15)"/><text x="837.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (728 samples, 65.06%)</title><rect x="70" y="244" width="767" height="15" fill="rgb(246,13,1)"/><text x="73.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vec..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 0.54%)</title><rect x="831" y="260" width="6" height="15" fill="rgb(230,120,28)"/><text x="834.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (5 samples, 0.45%)</title><rect x="832" y="276" width="5" height="15" fill="rgb(244,53,17)"/><text x="835.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (5 samples, 0.45%)</title><rect x="832" y="292" width="5" height="15" fill="rgb(214,52,39)"/><text x="835.00" y="302.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.18%)</title><rect x="835" y="308" width="2" height="15" fill="rgb(226,193,38)"/><text x="838.00" y="318.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (2 samples, 0.18%)</title><rect x="835" y="324" width="2" height="15" fill="rgb(211,206,35)"/><text x="838.00" y="334.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="836" y="340" width="1" height="15" fill="rgb(214,45,22)"/><text x="839.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="836" y="356" width="1" height="15" fill="rgb(232,182,44)"/><text x="839.00" y="366.50"></text></g><g><title>0x7f117f1bb028 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="836" y="372" width="1" height="15" fill="rgb(237,164,0)"/><text x="839.00" y="382.50"></text></g><g><title>0x7f117f1b8b9b (libc-2.29.so) (1 samples, 0.09%)</title><rect x="836" y="388" width="1" height="15" fill="rgb(218,205,6)"/><text x="839.00" y="398.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="837" y="244" width="1" height="15" fill="rgb(253,2,36)"/><text x="840.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="837" y="260" width="1" height="15" fill="rgb(254,104,14)"/><text x="840.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="837" y="276" width="1" height="15" fill="rgb(228,202,53)"/><text x="840.00" y="286.50"></text></g><g><title>0x7f117f1d9d50 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="837" y="292" width="1" height="15" fill="rgb(230,9,48)"/><text x="840.00" y="302.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="838" y="244" width="1" height="15" fill="rgb(244,32,10)"/><text x="841.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="838" y="260" width="1" height="15" fill="rgb(238,84,31)"/><text x="841.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="838" y="276" width="1" height="15" fill="rgb(230,222,46)"/><text x="841.00" y="286.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.383] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="839" y="244" width="1" height="15" fill="rgb(226,60,2)"/><text x="842.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="839" y="260" width="1" height="15" fill="rgb(213,221,52)"/><text x="842.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.09%)</title><rect x="839" y="276" width="1" height="15" fill="rgb(207,130,44)"/><text x="842.00" y="286.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (764 samples, 68.28%)</title><rect x="36" y="132" width="806" height="15" fill="rgb(251,7,39)"/><text x="39.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (762 samples, 68.10%)</title><rect x="38" y="148" width="804" height="15" fill="rgb(210,188,10)"/><text x="41.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (758 samples, 67.74%)</title><rect x="42" y="164" width="800" height="15" fill="rgb(209,105,33)"/><text x="45.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (750 samples, 67.02%)</title><rect x="51" y="180" width="791" height="15" fill="rgb(216,101,21)"/><text x="54.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (747 samples, 66.76%)</title><rect x="54" y="196" width="788" height="15" fill="rgb(216,37,8)"/><text x="57.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (735 samples, 65.68%)</title><rect x="66" y="212" width="776" height="15" fill="rgb(250,223,2)"/><text x="69.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (734 samples, 65.59%)</title><rect x="67" y="228" width="775" height="15" fill="rgb(212,13,30)"/><text x="70.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(o..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.09%)</title><rect x="840" y="244" width="2" height="15" fill="rgb(217,137,9)"/><text x="843.00" y="254.50"></text></g><g><title>0x7f117f1b9a4d (libc-2.29.so) (1 samples, 0.09%)</title><rect x="840" y="260" width="2" height="15" fill="rgb(222,80,1)"/><text x="843.00" y="270.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (777 samples, 69.44%)</title><rect x="24" y="68" width="820" height="15" fill="rgb(229,113,11)"/><text x="27.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (777 samples, 69.44%)</title><rect x="24" y="84" width="820" height="15" fill="rgb(232,46,16)"/><text x="27.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (777 samples, 69.44%)</title><rect x="24" y="100" width="820" height="15" fill="rgb(246,24,46)"/><text x="27.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (771 samples, 68.90%)</title><rect x="31" y="116" width="813" height="15" fill="rgb(246,73,40)"/><text x="34.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.18%)</title><rect x="842" y="132" width="2" height="15" fill="rgb(215,146,27)"/><text x="845.00" y="142.50"></text></g><g><title>0x7f113fcd254f (?) (1 samples, 0.09%)</title><rect x="844" y="244" width="1" height="15" fill="rgb(221,14,39)"/><text x="847.00" y="254.50"></text></g><g><title>0x7f113fcd865e (?) (1 samples, 0.09%)</title><rect x="844" y="260" width="1" height="15" fill="rgb(254,119,13)"/><text x="847.00" y="270.50"></text></g><g><title>0x7f113fcd850f (?) (1 samples, 0.09%)</title><rect x="844" y="276" width="1" height="15" fill="rgb(246,122,7)"/><text x="847.00" y="286.50"></text></g><g><title>0x7f113fcded6c (?) (1 samples, 0.09%)</title><rect x="844" y="292" width="1" height="15" fill="rgb(237,191,17)"/><text x="847.00" y="302.50"></text></g><g><title>0x7f11491bfab9 (?) (1 samples, 0.09%)</title><rect x="844" y="308" width="1" height="15" fill="rgb(217,93,49)"/><text x="847.00" y="318.50"></text></g><g><title>0x7f11491c0ea0 (?) (1 samples, 0.09%)</title><rect x="844" y="324" width="1" height="15" fill="rgb(230,122,53)"/><text x="847.00" y="334.50"></text></g><g><title>0x7f11491c0ea0 (libgomp.so.1.0.0) (4 samples, 0.36%)</title><rect x="845" y="484" width="4" height="15" fill="rgb(223,75,36)"/><text x="848.00" y="494.50"></text></g><g><title>0x7f11491c0ea9 (libgomp.so.1.0.0) (21 samples, 1.88%)</title><rect x="849" y="484" width="22" height="15" fill="rgb(247,102,51)"/><text x="852.00" y="494.50">0..</text></g><g><title>0x7f11491c0eab (libgomp.so.1.0.0) (35 samples, 3.13%)</title><rect x="871" y="484" width="37" height="15" fill="rgb(223,188,12)"/><text x="874.00" y="494.50">0x7..</text></g><g><title>0x7f11491bfab9 (libgomp.so.1.0.0) (79 samples, 7.06%)</title><rect x="845" y="468" width="83" height="15" fill="rgb(224,205,41)"/><text x="848.00" y="478.50">0x7f11491..</text></g><g><title>0x7f11491c0ead (libgomp.so.1.0.0) (19 samples, 1.70%)</title><rect x="908" y="484" width="20" height="15" fill="rgb(211,3,9)"/><text x="911.00" y="494.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (82 samples, 7.33%)</title><rect x="844" y="68" width="86" height="15" fill="rgb(211,78,28)"/><text x="847.00" y="78.50">profile_py..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (82 samples, 7.33%)</title><rect x="844" y="84" width="86" height="15" fill="rgb(223,83,11)"/><text x="847.00" y="94.50">setup_prof..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (82 samples, 7.33%)</title><rect x="844" y="100" width="86" height="15" fill="rgb(225,28,0)"/><text x="847.00" y="110.50">profile (b..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 7.33%)</title><rect x="844" y="116" width="86" height="15" fill="rgb(249,84,28)"/><text x="847.00" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 7.33%)</title><rect x="844" y="132" width="86" height="15" fill="rgb(224,57,31)"/><text x="847.00" y="142.50">&lt;lambda&gt; (..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (82 samples, 7.33%)</title><rect x="844" y="148" width="86" height="15" fill="rgb(213,165,51)"/><text x="847.00" y="158.50">run (mlpro..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (82 samples, 7.33%)</title><rect x="844" y="164" width="86" height="15" fill="rgb(207,181,3)"/><text x="847.00" y="174.50">_run_seque..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (82 samples, 7.33%)</title><rect x="844" y="180" width="86" height="15" fill="rgb(240,179,53)"/><text x="847.00" y="190.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 7.33%)</title><rect x="844" y="196" width="86" height="15" fill="rgb(238,168,41)"/><text x="847.00" y="206.50">run (mlpro..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 7.33%)</title><rect x="844" y="212" width="86" height="15" fill="rgb(213,118,2)"/><text x="847.00" y="222.50">run (mlpro..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (82 samples, 7.33%)</title><rect x="844" y="228" width="86" height="15" fill="rgb(224,49,33)"/><text x="847.00" y="238.50">_run (mlpr..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (81 samples, 7.24%)</title><rect x="845" y="244" width="85" height="15" fill="rgb(247,124,31)"/><text x="848.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (81 samples, 7.24%)</title><rect x="845" y="260" width="85" height="15" fill="rgb(218,92,9)"/><text x="848.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (81 samples, 7.24%)</title><rect x="845" y="276" width="85" height="15" fill="rgb(216,48,18)"/><text x="848.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (81 samples, 7.24%)</title><rect x="845" y="292" width="85" height="15" fill="rgb(229,227,52)"/><text x="848.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (81 samples, 7.24%)</title><rect x="845" y="308" width="85" height="15" fill="rgb(218,63,52)"/><text x="848.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (81 samples, 7.24%)</title><rect x="845" y="324" width="85" height="15" fill="rgb(254,201,40)"/><text x="848.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (81 samples, 7.24%)</title><rect x="845" y="340" width="85" height="15" fill="rgb(229,92,51)"/><text x="848.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (81 samples, 7.24%)</title><rect x="845" y="356" width="85" height="15" fill="rgb(214,62,38)"/><text x="848.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (81 samples, 7.24%)</title><rect x="845" y="372" width="85" height="15" fill="rgb(217,208,15)"/><text x="848.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (81 samples, 7.24%)</title><rect x="845" y="388" width="85" height="15" fill="rgb(218,211,45)"/><text x="848.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (81 samples, 7.24%)</title><rect x="845" y="404" width="85" height="15" fill="rgb(213,209,24)"/><text x="848.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (81 samples, 7.24%)</title><rect x="845" y="420" width="85" height="15" fill="rgb(228,65,22)"/><text x="848.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (81 samples, 7.24%)</title><rect x="845" y="436" width="85" height="15" fill="rgb(217,200,13)"/><text x="848.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (81 samples, 7.24%)</title><rect x="845" y="452" width="85" height="15" fill="rgb(211,87,36)"/><text x="848.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 0.18%)</title><rect x="928" y="468" width="2" height="15" fill="rgb(207,35,32)"/><text x="931.00" y="478.50"></text></g><g><title>0x7f11491bedaa (libgomp.so.1.0.0) (2 samples, 0.18%)</title><rect x="928" y="484" width="2" height="15" fill="rgb(232,70,46)"/><text x="931.00" y="494.50"></text></g><g><title>0x7f11491c0cf9 (libgomp.so.1.0.0) (2 samples, 0.18%)</title><rect x="928" y="500" width="2" height="15" fill="rgb(237,222,11)"/><text x="931.00" y="510.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.18%)</title><rect x="931" y="132" width="2" height="15" fill="rgb(215,39,49)"/><text x="934.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.18%)</title><rect x="931" y="148" width="2" height="15" fill="rgb(217,181,49)"/><text x="934.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c) (4 samples, 0.36%)</title><rect x="931" y="116" width="4" height="15" fill="rgb(241,158,9)"/><text x="934.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.18%)</title><rect x="933" y="132" width="2" height="15" fill="rgb(222,73,45)"/><text x="936.00" y="142.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="934" y="148" width="1" height="15" fill="rgb(254,184,6)"/><text x="937.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="934" y="164" width="1" height="15" fill="rgb(221,177,51)"/><text x="937.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.09%)</title><rect x="939" y="148" width="1" height="15" fill="rgb(206,66,2)"/><text x="942.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.09%)</title><rect x="939" y="164" width="1" height="15" fill="rgb(222,146,13)"/><text x="942.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.09%)</title><rect x="939" y="180" width="1" height="15" fill="rgb(233,119,43)"/><text x="942.00" y="190.50"></text></g><g><title>0x7f1159814d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="951" y="196" width="1" height="15" fill="rgb(224,202,24)"/><text x="954.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.09%)</title><rect x="951" y="212" width="1" height="15" fill="rgb(240,176,51)"/><text x="954.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="951" y="228" width="1" height="15" fill="rgb(241,61,2)"/><text x="954.00" y="238.50"></text></g><g><title>npy_mul_with_overflow_intp (templ_common.h.src) (1 samples, 0.09%)</title><rect x="951" y="244" width="1" height="15" fill="rgb(225,97,37)"/><text x="954.00" y="254.50"></text></g><g><title>0x7f1159824f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="951" y="180" width="2" height="15" fill="rgb(222,81,41)"/><text x="954.00" y="190.50"></text></g><g><title>0x7f1159814d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="196" width="1" height="15" fill="rgb(217,178,26)"/><text x="955.00" y="206.50"></text></g><g><title>0x7f1159801bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="212" width="1" height="15" fill="rgb(217,213,27)"/><text x="955.00" y="222.50"></text></g><g><title>0x7f1159808d60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="952" y="228" width="1" height="15" fill="rgb(236,201,51)"/><text x="955.00" y="238.50"></text></g><g><title>0x7f1159824f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="953" y="180" width="2" height="15" fill="rgb(231,145,30)"/><text x="956.00" y="190.50"></text></g><g><title>0x7f115980d10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="955" y="260" width="1" height="15" fill="rgb(249,97,47)"/><text x="958.00" y="270.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.09%)</title><rect x="961" y="308" width="1" height="15" fill="rgb(214,170,17)"/><text x="964.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.09%)</title><rect x="961" y="324" width="1" height="15" fill="rgb(244,89,51)"/><text x="964.00" y="334.50"></text></g><g><title>0x7f1159817666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 0.63%)</title><rect x="955" y="244" width="8" height="15" fill="rgb(220,41,6)"/><text x="958.00" y="254.50"></text></g><g><title>0x7f115980d2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.54%)</title><rect x="956" y="260" width="7" height="15" fill="rgb(237,52,20)"/><text x="959.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (6 samples, 0.54%)</title><rect x="956" y="276" width="7" height="15" fill="rgb(227,216,41)"/><text x="959.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (6 samples, 0.54%)</title><rect x="956" y="292" width="7" height="15" fill="rgb(251,182,15)"/><text x="959.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.09%)</title><rect x="962" y="308" width="1" height="15" fill="rgb(212,51,40)"/><text x="965.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="962" y="324" width="1" height="15" fill="rgb(211,224,47)"/><text x="965.00" y="334.50"></text></g><g><title>0x7f1159817d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.71%)</title><rect x="955" y="228" width="9" height="15" fill="rgb(251,186,1)"/><text x="958.00" y="238.50"></text></g><g><title>0x7f11598176d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="963" y="244" width="1" height="15" fill="rgb(205,36,49)"/><text x="966.00" y="254.50"></text></g><g><title>0x7f11598332df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.80%)</title><rect x="955" y="212" width="10" height="15" fill="rgb(230,12,14)"/><text x="958.00" y="222.50"></text></g><g><title>0x7f1159817e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="964" y="228" width="1" height="15" fill="rgb(236,113,52)"/><text x="967.00" y="238.50"></text></g><g><title>0x7f115980b2bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="964" y="244" width="1" height="15" fill="rgb(246,85,25)"/><text x="967.00" y="254.50"></text></g><g><title>0x7f115980abad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="964" y="260" width="1" height="15" fill="rgb(215,34,21)"/><text x="967.00" y="270.50"></text></g><g><title>0x7f1159833364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="965" y="212" width="1" height="15" fill="rgb(206,124,40)"/><text x="968.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.09%)</title><rect x="965" y="228" width="1" height="15" fill="rgb(212,192,42)"/><text x="968.00" y="238.50"></text></g><g><title>0x7f1159833456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="966" y="212" width="1" height="15" fill="rgb(243,209,13)"/><text x="969.00" y="222.50"></text></g><g><title>0x7f115983353e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="967" y="212" width="1" height="15" fill="rgb(233,103,43)"/><text x="970.00" y="222.50"></text></g><g><title>0x7f117f1cf757 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="969" y="244" width="1" height="15" fill="rgb(221,75,44)"/><text x="972.00" y="254.50"></text></g><g><title>0x7f117f1badb0 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="972" y="340" width="1" height="15" fill="rgb(222,71,20)"/><text x="975.00" y="350.50"></text></g><g><title>0x7f117f1bb510 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="973" y="340" width="1" height="15" fill="rgb(217,181,45)"/><text x="976.00" y="350.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (4 samples, 0.36%)</title><rect x="971" y="324" width="4" height="15" fill="rgb(223,188,7)"/><text x="974.00" y="334.50"></text></g><g><title>0x7f117f1da103 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="974" y="340" width="1" height="15" fill="rgb(244,154,45)"/><text x="977.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (6 samples, 0.54%)</title><rect x="970" y="244" width="6" height="15" fill="rgb(238,220,41)"/><text x="973.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (6 samples, 0.54%)</title><rect x="970" y="260" width="6" height="15" fill="rgb(220,90,14)"/><text x="973.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (6 samples, 0.54%)</title><rect x="970" y="276" width="6" height="15" fill="rgb(245,111,18)"/><text x="973.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (6 samples, 0.54%)</title><rect x="970" y="292" width="6" height="15" fill="rgb(215,73,22)"/><text x="973.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (5 samples, 0.45%)</title><rect x="971" y="308" width="5" height="15" fill="rgb(216,58,15)"/><text x="974.00" y="318.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="975" y="324" width="1" height="15" fill="rgb(229,221,11)"/><text x="978.00" y="334.50"></text></g><g><title>0x7f1159833592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 0.80%)</title><rect x="968" y="212" width="10" height="15" fill="rgb(240,217,19)"/><text x="971.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (9 samples, 0.80%)</title><rect x="968" y="228" width="10" height="15" fill="rgb(229,191,34)"/><text x="971.00" y="238.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.09%)</title><rect x="976" y="244" width="2" height="15" fill="rgb(227,48,27)"/><text x="979.00" y="254.50"></text></g><g><title>0x7f1159833684 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="978" y="212" width="1" height="15" fill="rgb(250,159,28)"/><text x="981.00" y="222.50"></text></g><g><title>0x7f1159833698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="979" y="212" width="1" height="15" fill="rgb(244,13,16)"/><text x="982.00" y="222.50"></text></g><g><title>0x7f115983369b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="980" y="212" width="2" height="15" fill="rgb(242,13,12)"/><text x="983.00" y="222.50"></text></g><g><title>0x7f11598336a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="982" y="212" width="1" height="15" fill="rgb(222,152,29)"/><text x="985.00" y="222.50"></text></g><g><title>0x7f11598336aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.27%)</title><rect x="983" y="212" width="3" height="15" fill="rgb(249,174,41)"/><text x="986.00" y="222.50"></text></g><g><title>0x7f11598336ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.71%)</title><rect x="986" y="212" width="8" height="15" fill="rgb(210,171,43)"/><text x="989.00" y="222.50"></text></g><g><title>0x7f11598336b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.45%)</title><rect x="994" y="212" width="6" height="15" fill="rgb(217,49,35)"/><text x="997.00" y="222.50"></text></g><g><title>0x7f11598336b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1000" y="212" width="1" height="15" fill="rgb(220,187,47)"/><text x="1003.00" y="222.50"></text></g><g><title>0x7f11598336c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="1001" y="212" width="2" height="15" fill="rgb(221,177,4)"/><text x="1004.00" y="222.50"></text></g><g><title>0x7f11598337a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.27%)</title><rect x="1003" y="212" width="3" height="15" fill="rgb(214,90,42)"/><text x="1006.00" y="222.50"></text></g><g><title>0x7f1159833887 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1006" y="212" width="1" height="15" fill="rgb(242,14,29)"/><text x="1009.00" y="222.50"></text></g><g><title>0x7f11598338aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1007" y="212" width="1" height="15" fill="rgb(213,193,10)"/><text x="1010.00" y="222.50"></text></g><g><title>0x7f11598338c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1008" y="212" width="1" height="15" fill="rgb(246,74,22)"/><text x="1011.00" y="222.50"></text></g><g><title>0x7f115983392f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1009" y="212" width="1" height="15" fill="rgb(249,219,47)"/><text x="1012.00" y="222.50"></text></g><g><title>0x7f1159808893 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1009" y="228" width="1" height="15" fill="rgb(226,135,46)"/><text x="1012.00" y="238.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (2 samples, 0.18%)</title><rect x="1010" y="260" width="2" height="15" fill="rgb(228,164,53)"/><text x="1013.00" y="270.50"></text></g><g><title>0x7f1159834405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (57 samples, 5.09%)</title><rect x="955" y="196" width="61" height="15" fill="rgb(211,227,36)"/><text x="958.00" y="206.50">0x7f11..</text></g><g><title>0x7f1159833c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.45%)</title><rect x="1010" y="212" width="6" height="15" fill="rgb(214,147,16)"/><text x="1013.00" y="222.50"></text></g><g><title>0x7f115980b529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.45%)</title><rect x="1010" y="228" width="6" height="15" fill="rgb(229,75,27)"/><text x="1013.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (5 samples, 0.45%)</title><rect x="1010" y="244" width="6" height="15" fill="rgb(242,16,34)"/><text x="1013.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.27%)</title><rect x="1012" y="260" width="4" height="15" fill="rgb(230,87,24)"/><text x="1015.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.18%)</title><rect x="1013" y="276" width="3" height="15" fill="rgb(254,101,12)"/><text x="1016.00" y="286.50"></text></g><g><title>_buffer_format_string (buffer.c) (1 samples, 0.09%)</title><rect x="1014" y="292" width="2" height="15" fill="rgb(209,19,40)"/><text x="1017.00" y="302.50"></text></g><g><title>_is_natively_aligned_at (buffer.c) (1 samples, 0.09%)</title><rect x="1014" y="308" width="2" height="15" fill="rgb(239,220,0)"/><text x="1017.00" y="318.50"></text></g><g><title>0x7f11598084f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1016" y="228" width="1" height="15" fill="rgb(245,215,2)"/><text x="1019.00" y="238.50"></text></g><g><title>0x7f1159824fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (59 samples, 5.27%)</title><rect x="955" y="180" width="63" height="15" fill="rgb(223,149,4)"/><text x="958.00" y="190.50">0x7f11..</text></g><g><title>0x7f1159834540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="1016" y="196" width="2" height="15" fill="rgb(211,173,8)"/><text x="1019.00" y="206.50"></text></g><g><title>0x7f11598092f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.18%)</title><rect x="1016" y="212" width="2" height="15" fill="rgb(253,92,1)"/><text x="1019.00" y="222.50"></text></g><g><title>0x7f1159808530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1017" y="228" width="1" height="15" fill="rgb(209,124,7)"/><text x="1020.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.09%)</title><rect x="1017" y="244" width="1" height="15" fill="rgb(237,225,47)"/><text x="1020.00" y="254.50"></text></g><g><title>0x7f117f1cf757 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1018" y="212" width="1" height="15" fill="rgb(208,54,10)"/><text x="1021.00" y="222.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.09%)</title><rect x="1019" y="212" width="1" height="15" fill="rgb(241,80,32)"/><text x="1022.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (4 samples, 0.36%)</title><rect x="1020" y="228" width="4" height="15" fill="rgb(216,127,34)"/><text x="1023.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.09%)</title><rect x="1023" y="244" width="1" height="15" fill="rgb(231,83,24)"/><text x="1026.00" y="254.50"></text></g><g><title>0x7f115982505a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.71%)</title><rect x="1018" y="180" width="8" height="15" fill="rgb(242,45,27)"/><text x="1021.00" y="190.50"></text></g><g><title>array_take (methods.c) (8 samples, 0.71%)</title><rect x="1018" y="196" width="8" height="15" fill="rgb(217,139,26)"/><text x="1021.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (6 samples, 0.54%)</title><rect x="1020" y="212" width="6" height="15" fill="rgb(225,224,34)"/><text x="1023.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.18%)</title><rect x="1024" y="228" width="2" height="15" fill="rgb(224,215,26)"/><text x="1027.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.18%)</title><rect x="1024" y="244" width="2" height="15" fill="rgb(230,187,27)"/><text x="1027.00" y="254.50"></text></g><g><title>npy_alloc_cache (alloc.c) (2 samples, 0.18%)</title><rect x="1024" y="260" width="2" height="15" fill="rgb(252,180,34)"/><text x="1027.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.09%)</title><rect x="1025" y="276" width="1" height="15" fill="rgb(232,195,10)"/><text x="1028.00" y="286.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.09%)</title><rect x="1025" y="292" width="1" height="15" fill="rgb(243,97,36)"/><text x="1028.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1025" y="308" width="1" height="15" fill="rgb(244,67,21)"/><text x="1028.00" y="318.50"></text></g><g><title>0x7f117f1bb63e (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1025" y="324" width="1" height="15" fill="rgb(239,38,5)"/><text x="1028.00" y="334.50"></text></g><g><title>0x7f115982513a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1026" y="180" width="1" height="15" fill="rgb(230,86,25)"/><text x="1029.00" y="190.50"></text></g><g><title>0x7f115982514f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.27%)</title><rect x="1027" y="180" width="3" height="15" fill="rgb(215,110,49)"/><text x="1030.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.27%)</title><rect x="1027" y="196" width="3" height="15" fill="rgb(238,220,41)"/><text x="1030.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (3 samples, 0.27%)</title><rect x="1027" y="212" width="3" height="15" fill="rgb(233,135,3)"/><text x="1030.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (3 samples, 0.27%)</title><rect x="1027" y="228" width="3" height="15" fill="rgb(250,118,46)"/><text x="1030.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.09%)</title><rect x="1029" y="244" width="1" height="15" fill="rgb(247,148,10)"/><text x="1032.00" y="254.50"></text></g><g><title>0x7f115982518f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.09%)</title><rect x="1030" y="180" width="1" height="15" fill="rgb(209,113,44)"/><text x="1033.00" y="190.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.09%)</title><rect x="1031" y="212" width="1" height="15" fill="rgb(253,50,19)"/><text x="1034.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (2 samples, 0.18%)</title><rect x="1032" y="212" width="2" height="15" fill="rgb(236,150,35)"/><text x="1035.00" y="222.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (2 samples, 0.18%)</title><rect x="1032" y="228" width="2" height="15" fill="rgb(207,118,46)"/><text x="1035.00" y="238.50"></text></g><g><title>0x7f1159825d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (80 samples, 7.15%)</title><rect x="951" y="164" width="85" height="15" fill="rgb(234,51,35)"/><text x="954.00" y="174.50">0x7f115982..</text></g><g><title>0x7f1159825328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.36%)</title><rect x="1031" y="180" width="5" height="15" fill="rgb(224,47,20)"/><text x="1034.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (4 samples, 0.36%)</title><rect x="1031" y="196" width="5" height="15" fill="rgb(245,163,30)"/><text x="1034.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.09%)</title><rect x="1034" y="212" width="2" height="15" fill="rgb(244,151,27)"/><text x="1037.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.09%)</title><rect x="1034" y="228" width="2" height="15" fill="rgb(252,195,11)"/><text x="1037.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.09%)</title><rect x="1066" y="196" width="1" height="15" fill="rgb(218,59,14)"/><text x="1069.00" y="206.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.27%)</title><rect x="1067" y="196" width="3" height="15" fill="rgb(243,175,33)"/><text x="1070.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.27%)</title><rect x="1070" y="196" width="4" height="15" fill="rgb(236,194,54)"/><text x="1073.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 0.36%)</title><rect x="1074" y="196" width="4" height="15" fill="rgb(209,221,33)"/><text x="1077.00" y="206.50"></text></g><g><title>0x7f117f297130 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1091" y="212" width="1" height="15" fill="rgb(238,134,48)"/><text x="1094.00" y="222.50"></text></g><g><title>0x7f117f2980e6 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1092" y="212" width="2" height="15" fill="rgb(226,25,36)"/><text x="1095.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="1094" y="212" width="3" height="15" fill="rgb(250,73,19)"/><text x="1097.00" y="222.50"></text></g><g><title>0x7f117f1cfe50 (libc-2.29.so) (1 samples, 0.09%)</title><rect x="1096" y="228" width="1" height="15" fill="rgb(242,8,22)"/><text x="1099.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (3 samples, 0.27%)</title><rect x="1097" y="212" width="3" height="15" fill="rgb(208,179,32)"/><text x="1100.00" y="222.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.27%)</title><rect x="1100" y="212" width="3" height="15" fill="rgb(230,121,46)"/><text x="1103.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (25 samples, 2.23%)</title><rect x="1078" y="196" width="26" height="15" fill="rgb(226,84,40)"/><text x="1081.00" y="206.50">_..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.09%)</title><rect x="1103" y="212" width="1" height="15" fill="rgb(212,117,30)"/><text x="1106.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (4 samples, 0.36%)</title><rect x="1104" y="196" width="4" height="15" fill="rgb(243,55,42)"/><text x="1107.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (26 samples, 2.32%)</title><rect x="1108" y="196" width="28" height="15" fill="rgb(238,18,50)"/><text x="1111.00" y="206.50">_..</text></g><g><title>__instancecheck__ (abc.py) (7 samples, 0.63%)</title><rect x="1128" y="212" width="8" height="15" fill="rgb(241,190,11)"/><text x="1131.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.27%)</title><rect x="1133" y="228" width="3" height="15" fill="rgb(245,205,46)"/><text x="1136.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (3 samples, 0.27%)</title><rect x="1136" y="196" width="3" height="15" fill="rgb(243,42,47)"/><text x="1139.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.36%)</title><rect x="1139" y="196" width="4" height="15" fill="rgb(232,222,0)"/><text x="1142.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.18%)</title><rect x="1141" y="212" width="2" height="15" fill="rgb(210,94,41)"/><text x="1144.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (110 samples, 9.83%)</title><rect x="1036" y="164" width="116" height="15" fill="rgb(230,140,50)"/><text x="1039.00" y="174.50">_validate_X_pr..</text></g><g><title>check_array (sklearn/utils/validation.py) (106 samples, 9.47%)</title><rect x="1040" y="180" width="112" height="15" fill="rgb(219,173,19)"/><text x="1043.00" y="190.50">check_array (..</text></g><g><title>simplefilter (warnings.py) (8 samples, 0.71%)</title><rect x="1143" y="196" width="9" height="15" fill="rgb(213,36,14)"/><text x="1146.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (7 samples, 0.63%)</title><rect x="1144" y="212" width="8" height="15" fill="rgb(218,116,13)"/><text x="1147.00" y="222.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.09%)</title><rect x="1152" y="180" width="1" height="15" fill="rgb(214,105,28)"/><text x="1155.00" y="190.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.09%)</title><rect x="1152" y="196" width="1" height="15" fill="rgb(235,198,34)"/><text x="1155.00" y="206.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.09%)</title><rect x="1152" y="212" width="1" height="15" fill="rgb(211,110,19)"/><text x="1155.00" y="222.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.09%)</title><rect x="1152" y="228" width="1" height="15" fill="rgb(214,184,45)"/><text x="1155.00" y="238.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.27%)</title><rect x="1152" y="164" width="3" height="15" fill="rgb(218,151,47)"/><text x="1155.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (2 samples, 0.18%)</title><rect x="1153" y="180" width="2" height="15" fill="rgb(253,155,51)"/><text x="1156.00" y="190.50"></text></g><g><title>unpack_indices (mapping.c) (1 samples, 0.09%)</title><rect x="1154" y="196" width="1" height="15" fill="rgb(220,87,49)"/><text x="1157.00" y="206.50"></text></g><g><title>unpack_tuple (mapping.c) (1 samples, 0.09%)</title><rect x="1154" y="212" width="1" height="15" fill="rgb(243,86,44)"/><text x="1157.00" y="222.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.09%)</title><rect x="1183" y="196" width="1" height="15" fill="rgb(243,11,6)"/><text x="1186.00" y="206.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (30 samples, 2.68%)</title><rect x="1155" y="164" width="31" height="15" fill="rgb(228,176,32)"/><text x="1158.00" y="174.50">ch..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (22 samples, 1.97%)</title><rect x="1163" y="180" width="23" height="15" fill="rgb(224,3,53)"/><text x="1166.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.18%)</title><rect x="1184" y="196" width="2" height="15" fill="rgb(250,164,36)"/><text x="1187.00" y="206.50"></text></g><g><title>all (1,119 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(226,90,50)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (1,119 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(249,145,44)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (246 samples, 21.98%)</title><rect x="930" y="68" width="260" height="15" fill="rgb(246,196,33)"/><text x="933.00" y="78.50">profile_skl (bench_DecisionTreeReg..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (246 samples, 21.98%)</title><rect x="930" y="84" width="260" height="15" fill="rgb(217,195,17)"/><text x="933.00" y="94.50">setup_profile (bench_DecisionTreeR..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (246 samples, 21.98%)</title><rect x="930" y="100" width="260" height="15" fill="rgb(243,168,36)"/><text x="933.00" y="110.50">profile (bench_DecisionTreeRegress..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (241 samples, 21.54%)</title><rect x="935" y="116" width="255" height="15" fill="rgb(221,118,30)"/><text x="938.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (241 samples, 21.54%)</title><rect x="935" y="132" width="255" height="15" fill="rgb(212,171,31)"/><text x="938.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/..</text></g><g><title>predict (sklearn/tree/_classes.py) (237 samples, 21.18%)</title><rect x="940" y="148" width="250" height="15" fill="rgb(248,16,3)"/><text x="943.00" y="158.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (3 samples, 0.27%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(234,83,51)"/><text x="1189.00" y="174.50"></text></g></g></svg>