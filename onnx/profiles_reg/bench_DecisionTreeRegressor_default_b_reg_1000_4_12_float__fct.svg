<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2038" onload="init(evt)" viewBox="0 0 1200 2038" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2038" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2021.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2021.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="868" width="1" height="15" fill="rgb(254,63,19)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="884" width="1" height="15" fill="rgb(228,220,10)"/><text x="13.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="900" width="1" height="15" fill="rgb(239,71,44)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="916" width="1" height="15" fill="rgb(224,196,41)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="932" width="1" height="15" fill="rgb(225,73,8)"/><text x="13.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.10%)</title><rect x="10" y="948" width="1" height="15" fill="rgb(239,152,29)"/><text x="13.00" y="958.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.10%)</title><rect x="10" y="964" width="1" height="15" fill="rgb(218,213,46)"/><text x="13.00" y="974.50"></text></g><g><title>os_fspath (python3.7) (1 samples, 0.10%)</title><rect x="10" y="980" width="1" height="15" fill="rgb(224,68,52)"/><text x="13.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="11" y="868" width="2" height="15" fill="rgb(237,173,36)"/><text x="14.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="11" y="884" width="2" height="15" fill="rgb(239,176,24)"/><text x="14.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="11" y="900" width="2" height="15" fill="rgb(241,147,34)"/><text x="14.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="11" y="916" width="2" height="15" fill="rgb(240,176,13)"/><text x="14.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(235,83,0)"/><text x="14.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="12" y="948" width="1" height="15" fill="rgb(232,126,39)"/><text x="15.00" y="958.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="12" y="964" width="1" height="15" fill="rgb(248,17,49)"/><text x="15.00" y="974.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (6 samples, 0.58%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(209,91,37)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (6 samples, 0.58%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(210,0,30)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 0.29%)</title><rect x="13" y="868" width="3" height="15" fill="rgb(248,24,25)"/><text x="16.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.29%)</title><rect x="13" y="884" width="3" height="15" fill="rgb(223,187,43)"/><text x="16.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 0.29%)</title><rect x="13" y="900" width="3" height="15" fill="rgb(251,6,54)"/><text x="16.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (3 samples, 0.29%)</title><rect x="13" y="916" width="3" height="15" fill="rgb(233,46,10)"/><text x="16.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="14" y="932" width="2" height="15" fill="rgb(222,218,9)"/><text x="17.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.19%)</title><rect x="14" y="948" width="2" height="15" fill="rgb(227,93,44)"/><text x="17.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.19%)</title><rect x="14" y="964" width="2" height="15" fill="rgb(251,98,7)"/><text x="17.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.10%)</title><rect x="15" y="980" width="1" height="15" fill="rgb(254,147,41)"/><text x="18.00" y="990.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (7 samples, 0.68%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(254,37,23)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(243,180,32)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(229,155,14)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(207,12,0)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.68%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(237,67,1)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="372" width="7" height="15" fill="rgb(233,74,50)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (7 samples, 0.68%)</title><rect x="10" y="388" width="7" height="15" fill="rgb(246,67,25)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="404" width="7" height="15" fill="rgb(214,52,27)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="420" width="7" height="15" fill="rgb(245,135,12)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="436" width="7" height="15" fill="rgb(253,147,9)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.68%)</title><rect x="10" y="452" width="7" height="15" fill="rgb(217,59,54)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="468" width="7" height="15" fill="rgb(206,82,15)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (7 samples, 0.68%)</title><rect x="10" y="484" width="7" height="15" fill="rgb(219,205,28)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="500" width="7" height="15" fill="rgb(239,99,9)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="516" width="7" height="15" fill="rgb(253,142,19)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="532" width="7" height="15" fill="rgb(208,9,47)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.68%)</title><rect x="10" y="548" width="7" height="15" fill="rgb(240,99,15)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="564" width="7" height="15" fill="rgb(208,105,51)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (7 samples, 0.68%)</title><rect x="10" y="580" width="7" height="15" fill="rgb(252,165,44)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="596" width="7" height="15" fill="rgb(247,211,54)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="612" width="7" height="15" fill="rgb(207,59,15)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="628" width="7" height="15" fill="rgb(205,49,19)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="644" width="7" height="15" fill="rgb(227,59,11)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="660" width="7" height="15" fill="rgb(221,110,44)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="676" width="7" height="15" fill="rgb(250,181,15)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.68%)</title><rect x="10" y="692" width="7" height="15" fill="rgb(234,84,54)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="708" width="7" height="15" fill="rgb(225,175,14)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (7 samples, 0.68%)</title><rect x="10" y="724" width="7" height="15" fill="rgb(207,219,7)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="740" width="7" height="15" fill="rgb(227,133,34)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="756" width="7" height="15" fill="rgb(254,60,29)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="772" width="7" height="15" fill="rgb(248,10,6)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 0.68%)</title><rect x="10" y="788" width="7" height="15" fill="rgb(210,40,0)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 0.68%)</title><rect x="10" y="804" width="7" height="15" fill="rgb(223,70,31)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (7 samples, 0.68%)</title><rect x="10" y="820" width="7" height="15" fill="rgb(216,197,47)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="836" width="1" height="15" fill="rgb(211,56,2)"/><text x="19.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="852" width="1" height="15" fill="rgb(210,55,38)"/><text x="19.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="868" width="1" height="15" fill="rgb(229,100,1)"/><text x="19.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="16" y="884" width="1" height="15" fill="rgb(242,73,22)"/><text x="19.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="16" y="900" width="1" height="15" fill="rgb(230,113,50)"/><text x="19.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.10%)</title><rect x="16" y="916" width="1" height="15" fill="rgb(227,133,33)"/><text x="19.00" y="926.50"></text></g><g><title>Specifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.10%)</title><rect x="16" y="932" width="1" height="15" fill="rgb(251,209,27)"/><text x="19.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.10%)</title><rect x="16" y="948" width="1" height="15" fill="rgb(209,218,47)"/><text x="19.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.10%)</title><rect x="16" y="964" width="1" height="15" fill="rgb(249,134,48)"/><text x="19.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.10%)</title><rect x="16" y="980" width="1" height="15" fill="rgb(226,153,45)"/><text x="19.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="996" width="1" height="15" fill="rgb(228,80,24)"/><text x="19.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1012" width="1" height="15" fill="rgb(220,170,42)"/><text x="19.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1028" width="1" height="15" fill="rgb(218,221,7)"/><text x="19.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1044" width="1" height="15" fill="rgb(242,186,26)"/><text x="19.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1060" width="1" height="15" fill="rgb(208,115,41)"/><text x="19.00" y="1070.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1076" width="1" height="15" fill="rgb(215,51,44)"/><text x="19.00" y="1086.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1092" width="1" height="15" fill="rgb(208,65,16)"/><text x="19.00" y="1102.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1108" width="1" height="15" fill="rgb(217,30,14)"/><text x="19.00" y="1118.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1124" width="1" height="15" fill="rgb(224,74,37)"/><text x="19.00" y="1134.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1140" width="1" height="15" fill="rgb(205,125,47)"/><text x="19.00" y="1150.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.10%)</title><rect x="16" y="1156" width="1" height="15" fill="rgb(220,9,39)"/><text x="19.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="500" width="2" height="15" fill="rgb(243,195,18)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="516" width="2" height="15" fill="rgb(217,169,36)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="532" width="2" height="15" fill="rgb(216,36,25)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="548" width="2" height="15" fill="rgb(235,125,7)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="564" width="2" height="15" fill="rgb(208,99,10)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.10%)</title><rect x="17" y="580" width="2" height="15" fill="rgb(254,229,3)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="596" width="2" height="15" fill="rgb(250,2,17)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="612" width="2" height="15" fill="rgb(214,114,7)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="628" width="2" height="15" fill="rgb(221,162,14)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="644" width="2" height="15" fill="rgb(253,145,26)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="660" width="2" height="15" fill="rgb(247,177,8)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.10%)</title><rect x="17" y="676" width="2" height="15" fill="rgb(216,1,10)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="692" width="2" height="15" fill="rgb(217,205,4)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="708" width="2" height="15" fill="rgb(236,214,38)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="724" width="2" height="15" fill="rgb(242,52,49)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="740" width="2" height="15" fill="rgb(208,72,12)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="756" width="2" height="15" fill="rgb(222,174,13)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.10%)</title><rect x="17" y="772" width="2" height="15" fill="rgb(213,135,30)"/><text x="20.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="788" width="2" height="15" fill="rgb(236,177,24)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="804" width="2" height="15" fill="rgb(216,192,15)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="820" width="2" height="15" fill="rgb(225,193,27)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="836" width="2" height="15" fill="rgb(213,70,22)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="852" width="2" height="15" fill="rgb(249,46,39)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="868" width="2" height="15" fill="rgb(226,8,21)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="884" width="2" height="15" fill="rgb(248,118,11)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.10%)</title><rect x="17" y="900" width="2" height="15" fill="rgb(253,204,29)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(211,7,39)"/><text x="20.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(218,69,38)"/><text x="20.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(226,35,10)"/><text x="20.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(253,24,48)"/><text x="20.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(251,157,53)"/><text x="20.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(226,61,45)"/><text x="20.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(213,40,4)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.10%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(254,166,2)"/><text x="20.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.10%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(239,158,54)"/><text x="20.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.10%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(254,32,43)"/><text x="20.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.10%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(251,24,46)"/><text x="20.00" y="1086.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(225,140,28)"/><text x="20.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.87%)</title><rect x="10" y="196" width="10" height="15" fill="rgb(254,164,32)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.87%)</title><rect x="10" y="212" width="10" height="15" fill="rgb(217,124,21)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.87%)</title><rect x="10" y="228" width="10" height="15" fill="rgb(208,32,7)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.87%)</title><rect x="10" y="244" width="10" height="15" fill="rgb(244,113,40)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 0.87%)</title><rect x="10" y="260" width="10" height="15" fill="rgb(234,168,28)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 0.87%)</title><rect x="10" y="276" width="10" height="15" fill="rgb(231,135,24)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.19%)</title><rect x="17" y="292" width="3" height="15" fill="rgb(236,61,17)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="308" width="3" height="15" fill="rgb(242,223,29)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="324" width="3" height="15" fill="rgb(242,122,30)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="340" width="3" height="15" fill="rgb(231,83,50)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="17" y="356" width="3" height="15" fill="rgb(251,171,52)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="372" width="3" height="15" fill="rgb(217,196,23)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.19%)</title><rect x="17" y="388" width="3" height="15" fill="rgb(227,66,19)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="404" width="3" height="15" fill="rgb(243,102,22)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="420" width="3" height="15" fill="rgb(209,61,30)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="436" width="3" height="15" fill="rgb(239,9,9)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="17" y="452" width="3" height="15" fill="rgb(227,207,6)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="17" y="468" width="3" height="15" fill="rgb(228,163,46)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.19%)</title><rect x="17" y="484" width="3" height="15" fill="rgb(229,95,24)"/><text x="20.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="500" width="1" height="15" fill="rgb(213,64,24)"/><text x="22.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="516" width="1" height="15" fill="rgb(238,170,43)"/><text x="22.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="532" width="1" height="15" fill="rgb(254,127,49)"/><text x="22.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="548" width="1" height="15" fill="rgb(226,187,45)"/><text x="22.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="564" width="1" height="15" fill="rgb(237,182,53)"/><text x="22.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="580" width="1" height="15" fill="rgb(221,148,16)"/><text x="22.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="596" width="1" height="15" fill="rgb(240,189,15)"/><text x="22.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.10%)</title><rect x="19" y="612" width="1" height="15" fill="rgb(226,27,36)"/><text x="22.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="628" width="1" height="15" fill="rgb(218,163,54)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="644" width="1" height="15" fill="rgb(210,49,45)"/><text x="22.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="660" width="1" height="15" fill="rgb(212,85,17)"/><text x="22.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="19" y="676" width="1" height="15" fill="rgb(244,147,8)"/><text x="22.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="692" width="1" height="15" fill="rgb(242,49,49)"/><text x="22.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.10%)</title><rect x="19" y="708" width="1" height="15" fill="rgb(252,3,15)"/><text x="22.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="724" width="1" height="15" fill="rgb(249,1,9)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="740" width="1" height="15" fill="rgb(227,144,28)"/><text x="22.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="756" width="1" height="15" fill="rgb(247,68,0)"/><text x="22.00" y="766.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="772" width="1" height="15" fill="rgb(239,127,46)"/><text x="22.00" y="782.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="19" y="788" width="1" height="15" fill="rgb(253,160,22)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="484" width="1" height="15" fill="rgb(218,155,44)"/><text x="23.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="500" width="1" height="15" fill="rgb(228,67,50)"/><text x="23.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="516" width="1" height="15" fill="rgb(218,179,38)"/><text x="23.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="532" width="1" height="15" fill="rgb(205,110,41)"/><text x="23.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="548" width="1" height="15" fill="rgb(208,161,3)"/><text x="23.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="564" width="1" height="15" fill="rgb(234,23,52)"/><text x="23.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="580" width="1" height="15" fill="rgb(208,64,34)"/><text x="23.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="596" width="1" height="15" fill="rgb(212,44,6)"/><text x="23.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="612" width="1" height="15" fill="rgb(245,177,26)"/><text x="23.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="628" width="1" height="15" fill="rgb(219,109,27)"/><text x="23.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="644" width="1" height="15" fill="rgb(247,225,50)"/><text x="23.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="660" width="1" height="15" fill="rgb(247,197,48)"/><text x="23.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (1 samples, 0.10%)</title><rect x="20" y="676" width="1" height="15" fill="rgb(211,34,45)"/><text x="23.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="692" width="1" height="15" fill="rgb(250,168,45)"/><text x="23.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="708" width="1" height="15" fill="rgb(206,195,8)"/><text x="23.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="724" width="1" height="15" fill="rgb(223,111,8)"/><text x="23.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="740" width="1" height="15" fill="rgb(253,90,50)"/><text x="23.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="756" width="1" height="15" fill="rgb(235,176,7)"/><text x="23.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="772" width="1" height="15" fill="rgb(245,115,27)"/><text x="23.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="788" width="1" height="15" fill="rgb(215,101,35)"/><text x="23.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="804" width="1" height="15" fill="rgb(233,228,36)"/><text x="23.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="820" width="1" height="15" fill="rgb(208,25,20)"/><text x="23.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="836" width="1" height="15" fill="rgb(209,35,9)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="852" width="1" height="15" fill="rgb(217,190,54)"/><text x="23.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (1 samples, 0.10%)</title><rect x="20" y="868" width="1" height="15" fill="rgb(219,22,33)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="884" width="1" height="15" fill="rgb(244,123,12)"/><text x="23.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="900" width="1" height="15" fill="rgb(254,209,37)"/><text x="23.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="916" width="1" height="15" fill="rgb(213,145,8)"/><text x="23.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="932" width="1" height="15" fill="rgb(216,208,11)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="948" width="1" height="15" fill="rgb(209,191,40)"/><text x="23.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="964" width="1" height="15" fill="rgb(221,133,4)"/><text x="23.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="980" width="1" height="15" fill="rgb(240,24,42)"/><text x="23.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="996" width="1" height="15" fill="rgb(233,170,18)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (1 samples, 0.10%)</title><rect x="20" y="1012" width="1" height="15" fill="rgb(226,42,51)"/><text x="23.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1028" width="1" height="15" fill="rgb(253,96,52)"/><text x="23.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1044" width="1" height="15" fill="rgb(245,76,34)"/><text x="23.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1060" width="1" height="15" fill="rgb(236,26,33)"/><text x="23.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1076" width="1" height="15" fill="rgb(219,80,29)"/><text x="23.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1092" width="1" height="15" fill="rgb(209,6,2)"/><text x="23.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (1 samples, 0.10%)</title><rect x="20" y="1108" width="1" height="15" fill="rgb(220,201,37)"/><text x="23.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1124" width="1" height="15" fill="rgb(254,87,1)"/><text x="23.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1140" width="1" height="15" fill="rgb(214,143,10)"/><text x="23.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1156" width="1" height="15" fill="rgb(248,194,19)"/><text x="23.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1172" width="1" height="15" fill="rgb(206,137,37)"/><text x="23.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1188" width="1" height="15" fill="rgb(206,223,24)"/><text x="23.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.10%)</title><rect x="20" y="1204" width="1" height="15" fill="rgb(251,180,41)"/><text x="23.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1220" width="1" height="15" fill="rgb(242,183,10)"/><text x="23.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1236" width="1" height="15" fill="rgb(250,86,30)"/><text x="23.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1252" width="1" height="15" fill="rgb(233,187,7)"/><text x="23.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="20" y="1268" width="1" height="15" fill="rgb(244,170,46)"/><text x="23.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="20" y="1284" width="1" height="15" fill="rgb(238,186,8)"/><text x="23.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="20" y="1300" width="1" height="15" fill="rgb(253,102,44)"/><text x="23.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (1 samples, 0.10%)</title><rect x="20" y="1316" width="1" height="15" fill="rgb(229,119,9)"/><text x="23.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.10%)</title><rect x="20" y="1332" width="1" height="15" fill="rgb(216,130,3)"/><text x="23.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.10%)</title><rect x="20" y="1348" width="1" height="15" fill="rgb(251,38,10)"/><text x="23.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.10%)</title><rect x="20" y="1364" width="1" height="15" fill="rgb(237,163,5)"/><text x="23.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.10%)</title><rect x="20" y="1380" width="1" height="15" fill="rgb(234,10,31)"/><text x="23.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.10%)</title><rect x="20" y="1396" width="1" height="15" fill="rgb(210,106,25)"/><text x="23.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.10%)</title><rect x="20" y="1412" width="1" height="15" fill="rgb(208,26,26)"/><text x="23.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.10%)</title><rect x="20" y="1428" width="1" height="15" fill="rgb(236,69,38)"/><text x="23.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.10%)</title><rect x="20" y="1444" width="1" height="15" fill="rgb(228,53,47)"/><text x="23.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1460" width="1" height="15" fill="rgb(222,191,30)"/><text x="23.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1476" width="1" height="15" fill="rgb(218,116,12)"/><text x="23.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1492" width="1" height="15" fill="rgb(213,112,5)"/><text x="23.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1508" width="1" height="15" fill="rgb(206,81,36)"/><text x="23.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1524" width="1" height="15" fill="rgb(236,11,51)"/><text x="23.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1540" width="1" height="15" fill="rgb(223,136,30)"/><text x="23.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1556" width="1" height="15" fill="rgb(205,133,34)"/><text x="23.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1572" width="1" height="15" fill="rgb(243,219,51)"/><text x="23.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.10%)</title><rect x="20" y="1588" width="1" height="15" fill="rgb(209,45,12)"/><text x="23.00" y="1598.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.10%)</title><rect x="21" y="724" width="1" height="15" fill="rgb(253,99,27)"/><text x="24.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="740" width="1" height="15" fill="rgb(247,61,12)"/><text x="24.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="756" width="1" height="15" fill="rgb(243,130,38)"/><text x="24.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="772" width="1" height="15" fill="rgb(247,187,52)"/><text x="24.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="788" width="1" height="15" fill="rgb(228,226,14)"/><text x="24.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="804" width="1" height="15" fill="rgb(217,23,7)"/><text x="24.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="820" width="1" height="15" fill="rgb(226,121,35)"/><text x="24.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="836" width="1" height="15" fill="rgb(245,23,31)"/><text x="24.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="852" width="1" height="15" fill="rgb(213,122,2)"/><text x="24.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="868" width="1" height="15" fill="rgb(216,104,30)"/><text x="24.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="884" width="1" height="15" fill="rgb(232,166,18)"/><text x="24.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="900" width="1" height="15" fill="rgb(249,223,13)"/><text x="24.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.10%)</title><rect x="21" y="916" width="1" height="15" fill="rgb(237,216,5)"/><text x="24.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="932" width="1" height="15" fill="rgb(233,91,26)"/><text x="24.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="948" width="1" height="15" fill="rgb(253,123,3)"/><text x="24.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="964" width="1" height="15" fill="rgb(253,57,47)"/><text x="24.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="980" width="1" height="15" fill="rgb(231,44,52)"/><text x="24.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="996" width="1" height="15" fill="rgb(241,105,37)"/><text x="24.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.10%)</title><rect x="21" y="1012" width="1" height="15" fill="rgb(205,159,28)"/><text x="24.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1028" width="1" height="15" fill="rgb(233,80,35)"/><text x="24.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1044" width="1" height="15" fill="rgb(207,20,20)"/><text x="24.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1060" width="1" height="15" fill="rgb(254,218,7)"/><text x="24.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1076" width="1" height="15" fill="rgb(208,70,33)"/><text x="24.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1092" width="1" height="15" fill="rgb(211,126,49)"/><text x="24.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.10%)</title><rect x="21" y="1108" width="1" height="15" fill="rgb(212,221,9)"/><text x="24.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1124" width="1" height="15" fill="rgb(240,36,42)"/><text x="24.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1140" width="1" height="15" fill="rgb(225,176,6)"/><text x="24.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1156" width="1" height="15" fill="rgb(246,122,53)"/><text x="24.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1172" width="1" height="15" fill="rgb(237,48,3)"/><text x="24.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1188" width="1" height="15" fill="rgb(224,222,51)"/><text x="24.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1204" width="1" height="15" fill="rgb(219,24,42)"/><text x="24.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1220" width="1" height="15" fill="rgb(214,106,20)"/><text x="24.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1236" width="1" height="15" fill="rgb(224,186,52)"/><text x="24.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1252" width="1" height="15" fill="rgb(232,4,24)"/><text x="24.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1268" width="1" height="15" fill="rgb(252,29,38)"/><text x="24.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1284" width="1" height="15" fill="rgb(223,27,2)"/><text x="24.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.10%)</title><rect x="21" y="1300" width="1" height="15" fill="rgb(238,178,45)"/><text x="24.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1316" width="1" height="15" fill="rgb(228,184,3)"/><text x="24.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1332" width="1" height="15" fill="rgb(218,120,13)"/><text x="24.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1348" width="1" height="15" fill="rgb(223,192,3)"/><text x="24.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1364" width="1" height="15" fill="rgb(247,21,5)"/><text x="24.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1380" width="1" height="15" fill="rgb(244,130,17)"/><text x="24.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1396" width="1" height="15" fill="rgb(220,33,42)"/><text x="24.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1412" width="1" height="15" fill="rgb(237,100,47)"/><text x="24.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1428" width="1" height="15" fill="rgb(254,226,12)"/><text x="24.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1444" width="1" height="15" fill="rgb(226,1,46)"/><text x="24.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1460" width="1" height="15" fill="rgb(205,164,29)"/><text x="24.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1476" width="1" height="15" fill="rgb(244,10,51)"/><text x="24.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.10%)</title><rect x="21" y="1492" width="1" height="15" fill="rgb(254,150,12)"/><text x="24.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1508" width="1" height="15" fill="rgb(215,12,39)"/><text x="24.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1524" width="1" height="15" fill="rgb(227,165,9)"/><text x="24.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1540" width="1" height="15" fill="rgb(211,118,15)"/><text x="24.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1556" width="1" height="15" fill="rgb(251,108,40)"/><text x="24.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1572" width="1" height="15" fill="rgb(212,216,47)"/><text x="24.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1588" width="1" height="15" fill="rgb(248,88,39)"/><text x="24.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1604" width="1" height="15" fill="rgb(223,96,37)"/><text x="24.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1620" width="1" height="15" fill="rgb(210,40,49)"/><text x="24.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.10%)</title><rect x="21" y="1636" width="1" height="15" fill="rgb(254,28,52)"/><text x="24.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1652" width="1" height="15" fill="rgb(251,120,44)"/><text x="24.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1668" width="1" height="15" fill="rgb(210,189,31)"/><text x="24.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1684" width="1" height="15" fill="rgb(251,195,2)"/><text x="24.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1700" width="1" height="15" fill="rgb(235,88,46)"/><text x="24.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1716" width="1" height="15" fill="rgb(249,209,41)"/><text x="24.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1732" width="1" height="15" fill="rgb(205,135,37)"/><text x="24.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1748" width="1" height="15" fill="rgb(251,40,20)"/><text x="24.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py) (1 samples, 0.10%)</title><rect x="21" y="1764" width="1" height="15" fill="rgb(218,200,50)"/><text x="24.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1780" width="1" height="15" fill="rgb(224,61,42)"/><text x="24.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1796" width="1" height="15" fill="rgb(229,155,27)"/><text x="24.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1812" width="1" height="15" fill="rgb(227,130,10)"/><text x="24.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1828" width="1" height="15" fill="rgb(214,92,41)"/><text x="24.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1844" width="1" height="15" fill="rgb(211,63,0)"/><text x="24.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py) (1 samples, 0.10%)</title><rect x="21" y="1860" width="1" height="15" fill="rgb(226,160,7)"/><text x="24.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1876" width="1" height="15" fill="rgb(252,156,8)"/><text x="24.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1892" width="1" height="15" fill="rgb(234,180,19)"/><text x="24.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1908" width="1" height="15" fill="rgb(225,53,32)"/><text x="24.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="21" y="1924" width="1" height="15" fill="rgb(247,190,31)"/><text x="24.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="21" y="1940" width="1" height="15" fill="rgb(230,135,33)"/><text x="24.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py) (1 samples, 0.10%)</title><rect x="21" y="1956" width="1" height="15" fill="rgb(248,3,1)"/><text x="24.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py) (1 samples, 0.10%)</title><rect x="21" y="1972" width="1" height="15" fill="rgb(231,70,25)"/><text x="24.00" y="1982.50"></text></g><g><title>streamline (pyparsing.py) (1 samples, 0.10%)</title><rect x="21" y="1988" width="1" height="15" fill="rgb(248,29,41)"/><text x="24.00" y="1998.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.29%)</title><rect x="20" y="340" width="3" height="15" fill="rgb(229,71,53)"/><text x="23.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="356" width="3" height="15" fill="rgb(244,20,51)"/><text x="23.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="372" width="3" height="15" fill="rgb(207,224,21)"/><text x="23.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="388" width="3" height="15" fill="rgb(220,38,19)"/><text x="23.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="20" y="404" width="3" height="15" fill="rgb(221,224,11)"/><text x="23.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="420" width="3" height="15" fill="rgb(241,195,0)"/><text x="23.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 0.29%)</title><rect x="20" y="436" width="3" height="15" fill="rgb(252,12,4)"/><text x="23.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="452" width="3" height="15" fill="rgb(208,144,52)"/><text x="23.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="20" y="468" width="3" height="15" fill="rgb(248,190,48)"/><text x="23.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="484" width="2" height="15" fill="rgb(248,96,37)"/><text x="24.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="21" y="500" width="2" height="15" fill="rgb(234,120,48)"/><text x="24.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="516" width="2" height="15" fill="rgb(244,47,49)"/><text x="24.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.19%)</title><rect x="21" y="532" width="2" height="15" fill="rgb(237,77,22)"/><text x="24.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="548" width="2" height="15" fill="rgb(244,29,34)"/><text x="24.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="564" width="2" height="15" fill="rgb(249,141,30)"/><text x="24.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="580" width="2" height="15" fill="rgb(206,23,0)"/><text x="24.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="21" y="596" width="2" height="15" fill="rgb(225,103,39)"/><text x="24.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="612" width="2" height="15" fill="rgb(243,96,51)"/><text x="24.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (2 samples, 0.19%)</title><rect x="21" y="628" width="2" height="15" fill="rgb(224,36,46)"/><text x="24.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="644" width="2" height="15" fill="rgb(243,175,7)"/><text x="24.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="660" width="2" height="15" fill="rgb(247,211,42)"/><text x="24.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="676" width="2" height="15" fill="rgb(254,178,14)"/><text x="24.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="21" y="692" width="2" height="15" fill="rgb(247,37,23)"/><text x="24.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="21" y="708" width="2" height="15" fill="rgb(251,64,38)"/><text x="24.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py) (1 samples, 0.10%)</title><rect x="22" y="724" width="1" height="15" fill="rgb(228,130,45)"/><text x="25.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="740" width="1" height="15" fill="rgb(208,182,20)"/><text x="25.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="756" width="1" height="15" fill="rgb(250,147,10)"/><text x="25.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="772" width="1" height="15" fill="rgb(218,96,18)"/><text x="25.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="788" width="1" height="15" fill="rgb(241,53,21)"/><text x="25.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="804" width="1" height="15" fill="rgb(237,194,20)"/><text x="25.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/__init__.py) (1 samples, 0.10%)</title><rect x="22" y="820" width="1" height="15" fill="rgb(219,160,45)"/><text x="25.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="836" width="1" height="15" fill="rgb(240,84,22)"/><text x="25.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="852" width="1" height="15" fill="rgb(238,0,32)"/><text x="25.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="868" width="1" height="15" fill="rgb(230,185,11)"/><text x="25.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="884" width="1" height="15" fill="rgb(243,148,38)"/><text x="25.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="900" width="1" height="15" fill="rgb(217,87,7)"/><text x="25.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_json.py) (1 samples, 0.10%)</title><rect x="22" y="916" width="1" height="15" fill="rgb(211,129,0)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="932" width="1" height="15" fill="rgb(228,188,27)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="948" width="1" height="15" fill="rgb(239,216,42)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="964" width="1" height="15" fill="rgb(209,225,36)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="22" y="980" width="1" height="15" fill="rgb(224,214,10)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="996" width="1" height="15" fill="rgb(211,35,31)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_normalize.py) (1 samples, 0.10%)</title><rect x="22" y="1012" width="1" height="15" fill="rgb(251,11,5)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1028" width="1" height="15" fill="rgb(247,13,23)"/><text x="25.00" y="1038.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1044" width="1" height="15" fill="rgb(240,21,40)"/><text x="25.00" y="1054.50"></text></g><g><title>_get_module_lock (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="22" y="1060" width="1" height="15" fill="rgb(225,224,38)"/><text x="25.00" y="1070.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.10%)</title><rect x="23" y="900" width="1" height="15" fill="rgb(234,43,50)"/><text x="26.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="916" width="1" height="15" fill="rgb(207,206,31)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="932" width="1" height="15" fill="rgb(218,143,29)"/><text x="26.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="948" width="1" height="15" fill="rgb(240,99,32)"/><text x="26.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="964" width="1" height="15" fill="rgb(226,104,34)"/><text x="26.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="980" width="1" height="15" fill="rgb(232,35,53)"/><text x="26.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.10%)</title><rect x="23" y="996" width="1" height="15" fill="rgb(208,90,0)"/><text x="26.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1012" width="1" height="15" fill="rgb(234,98,46)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1028" width="1" height="15" fill="rgb(231,38,9)"/><text x="26.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1044" width="1" height="15" fill="rgb(228,24,8)"/><text x="26.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1060" width="1" height="15" fill="rgb(234,103,9)"/><text x="26.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1076" width="1" height="15" fill="rgb(222,86,34)"/><text x="26.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.10%)</title><rect x="23" y="1092" width="1" height="15" fill="rgb(212,57,5)"/><text x="26.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1108" width="1" height="15" fill="rgb(237,178,50)"/><text x="26.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1124" width="1" height="15" fill="rgb(241,26,52)"/><text x="26.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1140" width="1" height="15" fill="rgb(253,178,6)"/><text x="26.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1156" width="1" height="15" fill="rgb(246,34,32)"/><text x="26.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1172" width="1" height="15" fill="rgb(217,93,45)"/><text x="26.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py) (1 samples, 0.10%)</title><rect x="23" y="1188" width="1" height="15" fill="rgb(249,99,46)"/><text x="26.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1204" width="1" height="15" fill="rgb(243,201,41)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1220" width="1" height="15" fill="rgb(229,102,38)"/><text x="26.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1236" width="1" height="15" fill="rgb(227,55,54)"/><text x="26.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="23" y="1252" width="1" height="15" fill="rgb(228,134,10)"/><text x="26.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="23" y="1268" width="1" height="15" fill="rgb(247,18,42)"/><text x="26.00" y="1278.50"></text></g><g><title>&lt;module&gt; (simplejson/decoder.py) (1 samples, 0.10%)</title><rect x="23" y="1284" width="1" height="15" fill="rgb(250,11,39)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.19%)</title><rect x="23" y="676" width="2" height="15" fill="rgb(218,110,11)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="692" width="2" height="15" fill="rgb(205,9,18)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="708" width="2" height="15" fill="rgb(247,10,33)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="724" width="2" height="15" fill="rgb(253,156,46)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="23" y="740" width="2" height="15" fill="rgb(253,151,50)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="756" width="2" height="15" fill="rgb(211,31,44)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.19%)</title><rect x="23" y="772" width="2" height="15" fill="rgb(230,116,10)"/><text x="26.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="788" width="2" height="15" fill="rgb(237,149,19)"/><text x="26.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="804" width="2" height="15" fill="rgb(248,129,12)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="820" width="2" height="15" fill="rgb(237,58,48)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="836" width="2" height="15" fill="rgb(226,18,47)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="852" width="2" height="15" fill="rgb(211,137,14)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.19%)</title><rect x="23" y="868" width="2" height="15" fill="rgb(237,210,19)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.19%)</title><rect x="23" y="884" width="2" height="15" fill="rgb(240,151,4)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.10%)</title><rect x="24" y="900" width="1" height="15" fill="rgb(249,41,40)"/><text x="27.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="916" width="1" height="15" fill="rgb(243,213,43)"/><text x="27.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="932" width="1" height="15" fill="rgb(222,107,17)"/><text x="27.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="948" width="1" height="15" fill="rgb(217,114,50)"/><text x="27.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="964" width="1" height="15" fill="rgb(246,3,6)"/><text x="27.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="980" width="1" height="15" fill="rgb(217,126,8)"/><text x="27.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="996" width="1" height="15" fill="rgb(209,103,24)"/><text x="27.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1012" width="1" height="15" fill="rgb(241,142,38)"/><text x="27.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1028" width="1" height="15" fill="rgb(225,179,15)"/><text x="27.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1044" width="1" height="15" fill="rgb(232,145,50)"/><text x="27.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1060" width="1" height="15" fill="rgb(253,134,38)"/><text x="27.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1076" width="1" height="15" fill="rgb(251,100,35)"/><text x="27.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.10%)</title><rect x="24" y="1092" width="1" height="15" fill="rgb(221,195,35)"/><text x="27.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1108" width="1" height="15" fill="rgb(227,91,48)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1124" width="1" height="15" fill="rgb(225,134,33)"/><text x="27.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1140" width="1" height="15" fill="rgb(212,139,34)"/><text x="27.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1156" width="1" height="15" fill="rgb(213,53,12)"/><text x="27.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1172" width="1" height="15" fill="rgb(244,116,2)"/><text x="27.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ciphers.py) (1 samples, 0.10%)</title><rect x="24" y="1188" width="1" height="15" fill="rgb(206,146,14)"/><text x="27.00" y="1198.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1204" width="1" height="15" fill="rgb(205,110,39)"/><text x="27.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1220" width="1" height="15" fill="rgb(245,130,22)"/><text x="27.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1236" width="1" height="15" fill="rgb(248,131,8)"/><text x="27.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1252" width="1" height="15" fill="rgb(233,92,47)"/><text x="27.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1268" width="1" height="15" fill="rgb(232,213,20)"/><text x="27.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1284" width="1" height="15" fill="rgb(209,166,16)"/><text x="27.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1300" width="1" height="15" fill="rgb(216,222,43)"/><text x="27.00" y="1310.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/__init__.py) (1 samples, 0.10%)</title><rect x="24" y="1316" width="1" height="15" fill="rgb(231,46,47)"/><text x="27.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1332" width="1" height="15" fill="rgb(249,67,46)"/><text x="27.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1348" width="1" height="15" fill="rgb(230,121,52)"/><text x="27.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1364" width="1" height="15" fill="rgb(215,136,34)"/><text x="27.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1380" width="1" height="15" fill="rgb(212,60,38)"/><text x="27.00" y="1390.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1396" width="1" height="15" fill="rgb(253,195,15)"/><text x="27.00" y="1406.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/base.py) (1 samples, 0.10%)</title><rect x="24" y="1412" width="1" height="15" fill="rgb(248,146,25)"/><text x="27.00" y="1422.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1428" width="1" height="15" fill="rgb(209,60,19)"/><text x="27.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1444" width="1" height="15" fill="rgb(220,120,10)"/><text x="27.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1460" width="1" height="15" fill="rgb(211,120,5)"/><text x="27.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1476" width="1" height="15" fill="rgb(248,70,22)"/><text x="27.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1492" width="1" height="15" fill="rgb(252,198,40)"/><text x="27.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="24" y="1508" width="1" height="15" fill="rgb(223,117,4)"/><text x="27.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="24" y="1524" width="1" height="15" fill="rgb(218,153,10)"/><text x="27.00" y="1534.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/primitives/ciphers/modes.py) (1 samples, 0.10%)</title><rect x="24" y="1540" width="1" height="15" fill="rgb(222,76,44)"/><text x="27.00" y="1550.50"></text></g><g><title>wrapper (six.py) (1 samples, 0.10%)</title><rect x="24" y="1556" width="1" height="15" fill="rgb(207,56,3)"/><text x="27.00" y="1566.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.10%)</title><rect x="24" y="1572" width="1" height="15" fill="rgb(239,63,52)"/><text x="27.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 0.58%)</title><rect x="20" y="244" width="7" height="15" fill="rgb(242,223,23)"/><text x="23.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.58%)</title><rect x="20" y="260" width="7" height="15" fill="rgb(224,228,48)"/><text x="23.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.58%)</title><rect x="20" y="276" width="7" height="15" fill="rgb(208,152,37)"/><text x="23.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.58%)</title><rect x="20" y="292" width="7" height="15" fill="rgb(244,31,33)"/><text x="23.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.58%)</title><rect x="20" y="308" width="7" height="15" fill="rgb(239,192,39)"/><text x="23.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.58%)</title><rect x="20" y="324" width="7" height="15" fill="rgb(219,219,40)"/><text x="23.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.29%)</title><rect x="23" y="340" width="4" height="15" fill="rgb(228,37,44)"/><text x="26.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="356" width="4" height="15" fill="rgb(250,187,39)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="372" width="4" height="15" fill="rgb(210,217,23)"/><text x="26.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="388" width="4" height="15" fill="rgb(240,136,8)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="404" width="4" height="15" fill="rgb(254,120,18)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="420" width="4" height="15" fill="rgb(237,208,9)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="436" width="4" height="15" fill="rgb(220,146,30)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="23" y="452" width="4" height="15" fill="rgb(219,86,1)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="468" width="4" height="15" fill="rgb(229,194,54)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.29%)</title><rect x="23" y="484" width="4" height="15" fill="rgb(210,61,2)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="500" width="4" height="15" fill="rgb(232,49,4)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="516" width="4" height="15" fill="rgb(230,182,42)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="532" width="4" height="15" fill="rgb(248,2,43)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="23" y="548" width="4" height="15" fill="rgb(234,50,39)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="564" width="4" height="15" fill="rgb(238,225,48)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.29%)</title><rect x="23" y="580" width="4" height="15" fill="rgb(218,225,43)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="596" width="4" height="15" fill="rgb(208,41,38)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="612" width="4" height="15" fill="rgb(211,64,38)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="628" width="4" height="15" fill="rgb(239,76,18)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.29%)</title><rect x="23" y="644" width="4" height="15" fill="rgb(238,201,2)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.29%)</title><rect x="23" y="660" width="4" height="15" fill="rgb(219,11,43)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.10%)</title><rect x="25" y="676" width="2" height="15" fill="rgb(208,170,7)"/><text x="28.00" y="686.50"></text></g><g><title>choose_path (pyquickhelper/pycode/build_helper.py) (1 samples, 0.10%)</title><rect x="25" y="692" width="2" height="15" fill="rgb(246,78,3)"/><text x="28.00" y="702.50"></text></g><g><title>&lt;listcomp&gt; (pyquickhelper/pycode/build_helper.py) (1 samples, 0.10%)</title><rect x="25" y="708" width="2" height="15" fill="rgb(236,129,49)"/><text x="28.00" y="718.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.10%)</title><rect x="25" y="724" width="2" height="15" fill="rgb(244,182,35)"/><text x="28.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="260" width="1" height="15" fill="rgb(253,99,7)"/><text x="30.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="276" width="1" height="15" fill="rgb(212,117,32)"/><text x="30.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="292" width="1" height="15" fill="rgb(212,154,28)"/><text x="30.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="308" width="1" height="15" fill="rgb(247,63,21)"/><text x="30.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="324" width="1" height="15" fill="rgb(224,63,12)"/><text x="30.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.10%)</title><rect x="27" y="340" width="1" height="15" fill="rgb(213,137,53)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="356" width="1" height="15" fill="rgb(241,94,0)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="372" width="1" height="15" fill="rgb(224,47,28)"/><text x="30.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="388" width="1" height="15" fill="rgb(239,204,34)"/><text x="30.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="404" width="1" height="15" fill="rgb(237,225,35)"/><text x="30.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="420" width="1" height="15" fill="rgb(236,190,36)"/><text x="30.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.10%)</title><rect x="27" y="436" width="1" height="15" fill="rgb(229,130,19)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="452" width="1" height="15" fill="rgb(224,219,30)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="468" width="1" height="15" fill="rgb(207,126,12)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="484" width="1" height="15" fill="rgb(226,17,28)"/><text x="30.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="500" width="1" height="15" fill="rgb(245,16,48)"/><text x="30.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="516" width="1" height="15" fill="rgb(232,228,9)"/><text x="30.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/main.py) (1 samples, 0.10%)</title><rect x="27" y="532" width="1" height="15" fill="rgb(247,96,16)"/><text x="30.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="548" width="1" height="15" fill="rgb(244,229,48)"/><text x="30.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="564" width="1" height="15" fill="rgb(210,22,34)"/><text x="30.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="580" width="1" height="15" fill="rgb(249,199,22)"/><text x="30.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="596" width="1" height="15" fill="rgb(241,158,24)"/><text x="30.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="612" width="1" height="15" fill="rgb(234,109,0)"/><text x="30.00" y="622.50"></text></g><g><title>&lt;module&gt; (argparse.py) (1 samples, 0.10%)</title><rect x="27" y="628" width="1" height="15" fill="rgb(230,119,38)"/><text x="30.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="644" width="1" height="15" fill="rgb(210,178,30)"/><text x="30.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="660" width="1" height="15" fill="rgb(241,213,3)"/><text x="30.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="676" width="1" height="15" fill="rgb(250,114,36)"/><text x="30.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="692" width="1" height="15" fill="rgb(230,134,53)"/><text x="30.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="708" width="1" height="15" fill="rgb(232,228,1)"/><text x="30.00" y="718.50"></text></g><g><title>&lt;module&gt; (gettext.py) (1 samples, 0.10%)</title><rect x="27" y="724" width="1" height="15" fill="rgb(252,188,43)"/><text x="30.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="740" width="1" height="15" fill="rgb(229,215,1)"/><text x="30.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="756" width="1" height="15" fill="rgb(253,193,10)"/><text x="30.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="27" y="772" width="1" height="15" fill="rgb(208,3,34)"/><text x="30.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="788" width="1" height="15" fill="rgb(207,13,5)"/><text x="30.00" y="798.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="804" width="1" height="15" fill="rgb(240,36,29)"/><text x="30.00" y="814.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="27" y="820" width="1" height="15" fill="rgb(251,220,37)"/><text x="30.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.64%)</title><rect x="10" y="68" width="19" height="15" fill="rgb(249,224,3)"/><text x="13.00" y="78.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.64%)</title><rect x="10" y="84" width="19" height="15" fill="rgb(245,119,15)"/><text x="13.00" y="94.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.64%)</title><rect x="10" y="100" width="19" height="15" fill="rgb(219,172,30)"/><text x="13.00" y="110.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (17 samples, 1.64%)</title><rect x="10" y="116" width="19" height="15" fill="rgb(243,28,27)"/><text x="13.00" y="126.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.64%)</title><rect x="10" y="132" width="19" height="15" fill="rgb(248,39,30)"/><text x="13.00" y="142.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_b_reg.py) (17 samples, 1.64%)</title><rect x="10" y="148" width="19" height="15" fill="rgb(249,220,52)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.64%)</title><rect x="10" y="164" width="19" height="15" fill="rgb(205,116,18)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (17 samples, 1.64%)</title><rect x="10" y="180" width="19" height="15" fill="rgb(252,108,38)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.77%)</title><rect x="20" y="196" width="9" height="15" fill="rgb(230,39,50)"/><text x="23.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 0.77%)</title><rect x="20" y="212" width="9" height="15" fill="rgb(238,212,33)"/><text x="23.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 0.77%)</title><rect x="20" y="228" width="9" height="15" fill="rgb(248,62,37)"/><text x="23.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.19%)</title><rect x="27" y="244" width="2" height="15" fill="rgb(243,7,13)"/><text x="30.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="260" width="1" height="15" fill="rgb(245,135,39)"/><text x="31.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="276" width="1" height="15" fill="rgb(226,199,46)"/><text x="31.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="292" width="1" height="15" fill="rgb(235,121,46)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="308" width="1" height="15" fill="rgb(206,178,47)"/><text x="31.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="324" width="1" height="15" fill="rgb(210,136,53)"/><text x="31.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="340" width="1" height="15" fill="rgb(218,109,38)"/><text x="31.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="356" width="1" height="15" fill="rgb(234,106,9)"/><text x="31.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.10%)</title><rect x="28" y="372" width="1" height="15" fill="rgb(224,43,19)"/><text x="31.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="388" width="1" height="15" fill="rgb(215,29,5)"/><text x="31.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="404" width="1" height="15" fill="rgb(252,119,43)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="420" width="1" height="15" fill="rgb(224,171,52)"/><text x="31.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="436" width="1" height="15" fill="rgb(213,207,35)"/><text x="31.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="452" width="1" height="15" fill="rgb(208,194,16)"/><text x="31.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="468" width="1" height="15" fill="rgb(223,128,20)"/><text x="31.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="484" width="1" height="15" fill="rgb(239,169,32)"/><text x="31.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py) (1 samples, 0.10%)</title><rect x="28" y="500" width="1" height="15" fill="rgb(241,89,3)"/><text x="31.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="516" width="1" height="15" fill="rgb(237,12,52)"/><text x="31.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="532" width="1" height="15" fill="rgb(205,34,38)"/><text x="31.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="548" width="1" height="15" fill="rgb(231,128,30)"/><text x="31.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="564" width="1" height="15" fill="rgb(240,13,28)"/><text x="31.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="580" width="1" height="15" fill="rgb(206,52,45)"/><text x="31.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="596" width="1" height="15" fill="rgb(246,13,35)"/><text x="31.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="612" width="1" height="15" fill="rgb(216,119,22)"/><text x="31.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py) (1 samples, 0.10%)</title><rect x="28" y="628" width="1" height="15" fill="rgb(232,42,0)"/><text x="31.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="644" width="1" height="15" fill="rgb(216,135,34)"/><text x="31.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="660" width="1" height="15" fill="rgb(248,122,21)"/><text x="31.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="676" width="1" height="15" fill="rgb(226,1,46)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="692" width="1" height="15" fill="rgb(233,224,4)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="708" width="1" height="15" fill="rgb(219,193,34)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="724" width="1" height="15" fill="rgb(233,157,50)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="740" width="1" height="15" fill="rgb(241,76,41)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="756" width="1" height="15" fill="rgb(219,172,28)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py) (1 samples, 0.10%)</title><rect x="28" y="772" width="1" height="15" fill="rgb(215,215,1)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="788" width="1" height="15" fill="rgb(245,154,26)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="804" width="1" height="15" fill="rgb(250,97,45)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="820" width="1" height="15" fill="rgb(221,150,50)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="836" width="1" height="15" fill="rgb(233,110,6)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="852" width="1" height="15" fill="rgb(246,221,7)"/><text x="31.00" y="862.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="868" width="1" height="15" fill="rgb(217,150,10)"/><text x="31.00" y="878.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="884" width="1" height="15" fill="rgb(246,32,53)"/><text x="31.00" y="894.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="28" y="900" width="1" height="15" fill="rgb(228,192,8)"/><text x="31.00" y="910.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="916" width="1" height="15" fill="rgb(213,152,33)"/><text x="31.00" y="926.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="932" width="1" height="15" fill="rgb(224,53,33)"/><text x="31.00" y="942.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.10%)</title><rect x="28" y="948" width="1" height="15" fill="rgb(230,7,6)"/><text x="31.00" y="958.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="31" y="116" width="1" height="15" fill="rgb(231,42,19)"/><text x="34.00" y="126.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="31" y="132" width="1" height="15" fill="rgb(249,178,45)"/><text x="34.00" y="142.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="31" y="148" width="1" height="15" fill="rgb(206,39,32)"/><text x="34.00" y="158.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="31" y="164" width="1" height="15" fill="rgb(211,229,25)"/><text x="34.00" y="174.50"></text></g><g><title>0x7fa460430eb0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="31" y="180" width="1" height="15" fill="rgb(240,46,25)"/><text x="34.00" y="190.50"></text></g><g><title>0x7fa46042fb9b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="31" y="196" width="1" height="15" fill="rgb(243,223,49)"/><text x="34.00" y="206.50"></text></g><g><title>0x7fa4204eeff9 (?) (1 samples, 0.10%)</title><rect x="61" y="212" width="1" height="15" fill="rgb(240,18,52)"/><text x="64.00" y="222.50"></text></g><g><title>0x7fa4204e9ef6 (?) (1 samples, 0.10%)</title><rect x="61" y="228" width="1" height="15" fill="rgb(249,68,54)"/><text x="64.00" y="238.50"></text></g><g><title>0x7fa4204de962 (?) (1 samples, 0.10%)</title><rect x="61" y="244" width="1" height="15" fill="rgb(221,123,42)"/><text x="64.00" y="254.50"></text></g><g><title>0x7fa4205127a7 (?) (1 samples, 0.10%)</title><rect x="61" y="260" width="1" height="15" fill="rgb(238,86,53)"/><text x="64.00" y="270.50"></text></g><g><title>0x7fa420512379 (?) (1 samples, 0.10%)</title><rect x="61" y="276" width="1" height="15" fill="rgb(215,219,52)"/><text x="64.00" y="286.50"></text></g><g><title>0x7fa4209708b8 (?) (1 samples, 0.10%)</title><rect x="61" y="292" width="1" height="15" fill="rgb(217,120,26)"/><text x="64.00" y="302.50"></text></g><g><title>0x7fa42096ec7f (?) (1 samples, 0.10%)</title><rect x="61" y="308" width="1" height="15" fill="rgb(225,147,1)"/><text x="64.00" y="318.50"></text></g><g><title>0x7fa42098199c (?) (1 samples, 0.10%)</title><rect x="61" y="324" width="1" height="15" fill="rgb(222,59,39)"/><text x="64.00" y="334.50"></text></g><g><title>0x7fa4206a8dc2 (?) (1 samples, 0.10%)</title><rect x="61" y="340" width="1" height="15" fill="rgb(253,34,32)"/><text x="64.00" y="350.50"></text></g><g><title>0x7fa4206a865b (?) (1 samples, 0.10%)</title><rect x="61" y="356" width="1" height="15" fill="rgb(229,217,15)"/><text x="64.00" y="366.50"></text></g><g><title>0x7fa4206a8317 (?) (1 samples, 0.10%)</title><rect x="61" y="372" width="1" height="15" fill="rgb(223,161,45)"/><text x="64.00" y="382.50"></text></g><g><title>0x7fa4206a81e5 (?) (1 samples, 0.10%)</title><rect x="61" y="388" width="1" height="15" fill="rgb(239,16,10)"/><text x="64.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="61" y="404" width="1" height="15" fill="rgb(235,81,20)"/><text x="64.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="61" y="420" width="1" height="15" fill="rgb(215,176,50)"/><text x="64.00" y="430.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.10%)</title><rect x="62" y="212" width="1" height="15" fill="rgb(248,188,31)"/><text x="65.00" y="222.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.19%)</title><rect x="63" y="228" width="2" height="15" fill="rgb(211,205,44)"/><text x="66.00" y="238.50"></text></g><g><title>0x7fa460430d07 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="64" y="244" width="1" height="15" fill="rgb(253,216,2)"/><text x="67.00" y="254.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="68" y="260" width="1" height="15" fill="rgb(207,175,10)"/><text x="71.00" y="270.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.10%)</title><rect x="69" y="260" width="1" height="15" fill="rgb(240,73,40)"/><text x="72.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="70" y="292" width="1" height="15" fill="rgb(248,93,31)"/><text x="73.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="70" y="308" width="1" height="15" fill="rgb(238,48,15)"/><text x="73.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="70" y="324" width="1" height="15" fill="rgb(244,59,11)"/><text x="73.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="70" y="340" width="1" height="15" fill="rgb(224,204,3)"/><text x="73.00" y="350.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateOutputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="71" y="292" width="1" height="15" fill="rgb(254,204,27)"/><text x="74.00" y="302.50"></text></g><g><title>0x7fa46050e151 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="71" y="308" width="1" height="15" fill="rgb(235,46,49)"/><text x="74.00" y="318.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="78" y="356" width="1" height="15" fill="rgb(206,224,26)"/><text x="81.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="78" y="372" width="1" height="15" fill="rgb(231,130,43)"/><text x="81.00" y="382.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="77" y="340" width="3" height="15" fill="rgb(212,129,6)"/><text x="80.00" y="350.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="79" y="356" width="1" height="15" fill="rgb(243,185,45)"/><text x="82.00" y="366.50"></text></g><g><title>onnxruntime::SessionState::Profiler (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="80" y="340" width="1" height="15" fill="rgb(226,219,8)"/><text x="83.00" y="350.50"></text></g><g><title>0x7fa4204b5c40 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.19%)</title><rect x="168" y="356" width="2" height="15" fill="rgb(240,99,3)"/><text x="171.00" y="366.50"></text></g><g><title>0x7fa4204b60f0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="170" y="356" width="5" height="15" fill="rgb(225,160,40)"/><text x="173.00" y="366.50"></text></g><g><title>0x7fa44fefd7a0 (libstdc++.so.6.0.28) (4 samples, 0.39%)</title><rect x="175" y="356" width="4" height="15" fill="rgb(243,34,37)"/><text x="178.00" y="366.50"></text></g><g><title>0x7fa460430906 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="179" y="356" width="5" height="15" fill="rgb(221,110,23)"/><text x="182.00" y="366.50"></text></g><g><title>0x7fa46043090e (libc-2.29.so) (2 samples, 0.19%)</title><rect x="184" y="356" width="2" height="15" fill="rgb(214,196,36)"/><text x="187.00" y="366.50"></text></g><g><title>0x7fa46043091c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="186" y="356" width="1" height="15" fill="rgb(236,209,7)"/><text x="189.00" y="366.50"></text></g><g><title>0x7fa46043091e (libc-2.29.so) (3 samples, 0.29%)</title><rect x="187" y="356" width="4" height="15" fill="rgb(251,113,37)"/><text x="190.00" y="366.50"></text></g><g><title>0x7fa460430922 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="191" y="356" width="1" height="15" fill="rgb(212,112,13)"/><text x="194.00" y="366.50"></text></g><g><title>0x7fa46043092c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="192" y="356" width="1" height="15" fill="rgb(243,210,29)"/><text x="195.00" y="366.50"></text></g><g><title>0x7fa46043092f (libc-2.29.so) (1 samples, 0.10%)</title><rect x="193" y="356" width="1" height="15" fill="rgb(211,222,52)"/><text x="196.00" y="366.50"></text></g><g><title>0x7fa460430938 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="194" y="356" width="1" height="15" fill="rgb(248,186,37)"/><text x="197.00" y="366.50"></text></g><g><title>0x7fa46043093b (libc-2.29.so) (2 samples, 0.19%)</title><rect x="195" y="356" width="2" height="15" fill="rgb(241,22,41)"/><text x="198.00" y="366.50"></text></g><g><title>0x7fa46043095e (libc-2.29.so) (3 samples, 0.29%)</title><rect x="197" y="356" width="4" height="15" fill="rgb(229,194,18)"/><text x="200.00" y="366.50"></text></g><g><title>0x7fa460430961 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="201" y="356" width="1" height="15" fill="rgb(226,131,34)"/><text x="204.00" y="366.50"></text></g><g><title>0x7fa460430965 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="202" y="356" width="3" height="15" fill="rgb(214,225,42)"/><text x="205.00" y="366.50"></text></g><g><title>0x7fa46043096a (libc-2.29.so) (2 samples, 0.19%)</title><rect x="205" y="356" width="3" height="15" fill="rgb(238,124,46)"/><text x="208.00" y="366.50"></text></g><g><title>0x7fa46043097c (libc-2.29.so) (3 samples, 0.29%)</title><rect x="208" y="356" width="3" height="15" fill="rgb(241,30,2)"/><text x="211.00" y="366.50"></text></g><g><title>0x7fa460430982 (libc-2.29.so) (2 samples, 0.19%)</title><rect x="211" y="356" width="2" height="15" fill="rgb(242,107,34)"/><text x="214.00" y="366.50"></text></g><g><title>0x7fa460430991 (libc-2.29.so) (11 samples, 1.06%)</title><rect x="213" y="356" width="13" height="15" fill="rgb(220,189,37)"/><text x="216.00" y="366.50"></text></g><g><title>0x7fa460430998 (libc-2.29.so) (6 samples, 0.58%)</title><rect x="226" y="356" width="7" height="15" fill="rgb(225,126,50)"/><text x="229.00" y="366.50"></text></g><g><title>0x7fa460430a41 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="233" y="356" width="4" height="15" fill="rgb(212,34,23)"/><text x="236.00" y="366.50"></text></g><g><title>0x7fa460430a4c (libc-2.29.so) (1 samples, 0.10%)</title><rect x="237" y="356" width="1" height="15" fill="rgb(230,181,0)"/><text x="240.00" y="366.50"></text></g><g><title>0x7fa460430a4d (libc-2.29.so) (4 samples, 0.39%)</title><rect x="238" y="356" width="5" height="15" fill="rgb(254,188,44)"/><text x="241.00" y="366.50"></text></g><g><title>0x7fa460430a55 (libc-2.29.so) (5 samples, 0.48%)</title><rect x="243" y="356" width="6" height="15" fill="rgb(231,21,11)"/><text x="246.00" y="366.50"></text></g><g><title>0x7fa460430bc0 (libc-2.29.so) (4 samples, 0.39%)</title><rect x="249" y="356" width="4" height="15" fill="rgb(247,86,43)"/><text x="252.00" y="366.50"></text></g><g><title>0x7fa460430bd8 (libc-2.29.so) (3 samples, 0.29%)</title><rect x="253" y="356" width="4" height="15" fill="rgb(211,197,34)"/><text x="256.00" y="366.50"></text></g><g><title>0x7fa460430be4 (libc-2.29.so) (2 samples, 0.19%)</title><rect x="257" y="356" width="2" height="15" fill="rgb(233,120,29)"/><text x="260.00" y="366.50"></text></g><g><title>0x7fa460430be8 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="259" y="356" width="1" height="15" fill="rgb(244,110,54)"/><text x="262.00" y="366.50"></text></g><g><title>0x7fa460451120 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="260" y="356" width="1" height="15" fill="rgb(244,120,42)"/><text x="263.00" y="366.50"></text></g><g><title>0x7fa46045112b (libc-2.29.so) (1 samples, 0.10%)</title><rect x="261" y="356" width="1" height="15" fill="rgb(246,149,34)"/><text x="264.00" y="366.50"></text></g><g><title>0x7fa460451144 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="262" y="356" width="1" height="15" fill="rgb(205,27,51)"/><text x="265.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (25 samples, 2.41%)</title><rect x="263" y="356" width="29" height="15" fill="rgb(239,190,51)"/><text x="266.00" y="366.50">fr..</text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="293" y="468" width="1" height="15" fill="rgb(213,99,41)"/><text x="296.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="293" y="484" width="1" height="15" fill="rgb(246,97,37)"/><text x="296.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="293" y="500" width="1" height="15" fill="rgb(237,181,19)"/><text x="296.00" y="510.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="292" y="356" width="3" height="15" fill="rgb(215,128,2)"/><text x="295.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="292" y="372" width="3" height="15" fill="rgb(221,182,50)"/><text x="295.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="292" y="388" width="3" height="15" fill="rgb(237,127,23)"/><text x="295.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="292" y="404" width="3" height="15" fill="rgb(252,71,20)"/><text x="295.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="292" y="420" width="3" height="15" fill="rgb(215,126,31)"/><text x="295.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="292" y="436" width="3" height="15" fill="rgb(233,216,23)"/><text x="295.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.19%)</title><rect x="293" y="452" width="2" height="15" fill="rgb(225,16,12)"/><text x="296.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::Info (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="294" y="468" width="1" height="15" fill="rgb(219,36,27)"/><text x="297.00" y="478.50"></text></g><g><title>0x7fa4204b5930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.19%)</title><rect x="553" y="388" width="2" height="15" fill="rgb(254,148,28)"/><text x="556.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (9 samples, 0.87%)</title><rect x="555" y="388" width="10" height="15" fill="rgb(223,128,45)"/><text x="558.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (9 samples, 0.87%)</title><rect x="555" y="404" width="10" height="15" fill="rgb(210,105,47)"/><text x="558.00" y="414.50"></text></g><g><title>0x7fa46045112f (libc-2.29.so) (4 samples, 0.39%)</title><rect x="603" y="420" width="4" height="15" fill="rgb(231,92,9)"/><text x="606.00" y="430.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 2.70%)</title><rect x="593" y="404" width="32" height="15" fill="rgb(213,136,45)"/><text x="596.00" y="414.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (15 samples, 1.45%)</title><rect x="607" y="420" width="18" height="15" fill="rgb(229,201,5)"/><text x="610.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (13 samples, 1.25%)</title><rect x="610" y="436" width="15" height="15" fill="rgb(248,120,42)"/><text x="613.00" y="446.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (406 samples, 39.19%)</title><rect x="295" y="356" width="463" height="15" fill="rgb(230,134,33)"/><text x="298.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode ..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (202 samples, 19.50%)</title><rect x="528" y="372" width="230" height="15" fill="rgb(254,59,6)"/><text x="531.00" y="382.50">std::_Hashtable&lt;long, std::pai..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (169 samples, 16.31%)</title><rect x="565" y="388" width="193" height="15" fill="rgb(232,223,43)"/><text x="568.00" y="398.50">std::_Hashtable&lt;long, std..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (117 samples, 11.29%)</title><rect x="625" y="404" width="133" height="15" fill="rgb(238,199,20)"/><text x="628.00" y="414.50">std::__detail::_..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (56 samples, 5.41%)</title><rect x="694" y="420" width="64" height="15" fill="rgb(220,72,26)"/><text x="697.00" y="430.50">std::__..</text></g><g><title>0x7fa4204b5850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="768" y="372" width="3" height="15" fill="rgb(210,186,24)"/><text x="771.00" y="382.50"></text></g><g><title>0x7fa460450d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="771" y="372" width="2" height="15" fill="rgb(238,14,0)"/><text x="774.00" y="382.50"></text></g><g><title>onnxruntime::ml::write_scores&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (14 samples, 1.35%)</title><rect x="758" y="356" width="16" height="15" fill="rgb(242,103,9)"/><text x="761.00" y="366.50"></text></g><g><title>0x7fa460450dc3 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="773" y="372" width="1" height="15" fill="rgb(241,53,17)"/><text x="776.00" y="382.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (8 samples, 0.77%)</title><rect x="774" y="356" width="9" height="15" fill="rgb(243,61,7)"/><text x="777.00" y="366.50"></text></g><g><title>std::__detail::_Map_base&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (onnxruntime/capi/onnxruntime_pybind11_state.so) (35 samples, 3.38%)</title><rect x="783" y="356" width="40" height="15" fill="rgb(248,12,15)"/><text x="786.00" y="366.50">std..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (688 samples, 66.41%)</title><rect x="73" y="308" width="784" height="15" fill="rgb(221,214,41)"/><text x="76.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (687 samples, 66.31%)</title><rect x="74" y="324" width="783" height="15" fill="rgb(222,163,51)"/><text x="77.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (681 samples, 65.73%)</title><rect x="81" y="340" width="776" height="15" fill="rgb(216,22,50)"/><text x="84.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 2.90%)</title><rect x="823" y="356" width="34" height="15" fill="rgb(233,206,18)"/><text x="826.00" y="366.50">st..</text></g><g><title>operator new (libstdc++.so.6.0.28) (20 samples, 1.93%)</title><rect x="834" y="372" width="23" height="15" fill="rgb(238,22,21)"/><text x="837.00" y="382.50">o..</text></g><g><title>malloc (libc-2.29.so) (15 samples, 1.45%)</title><rect x="840" y="388" width="17" height="15" fill="rgb(221,172,34)"/><text x="843.00" y="398.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (692 samples, 66.80%)</title><rect x="70" y="260" width="788" height="15" fill="rgb(207,20,16)"/><text x="73.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (692 samples, 66.80%)</title><rect x="70" y="276" width="788" height="15" fill="rgb(212,113,17)"/><text x="73.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (690 samples, 66.60%)</title><rect x="72" y="292" width="786" height="15" fill="rgb(234,219,22)"/><text x="75.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="857" y="308" width="1" height="15" fill="rgb(227,199,35)"/><text x="860.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="857" y="324" width="1" height="15" fill="rgb(223,65,1)"/><text x="860.00" y="334.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::compare (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="857" y="340" width="1" height="15" fill="rgb(225,57,48)"/><text x="860.00" y="350.50"></text></g><g><title>0x7fa46050f066 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="857" y="356" width="1" height="15" fill="rgb(248,177,37)"/><text x="860.00" y="366.50"></text></g><g><title>onnxruntime::TensorTypeBase::GetDeleteFunc (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="858" y="276" width="1" height="15" fill="rgb(254,71,54)"/><text x="861.00" y="286.50"></text></g><g><title>0x7fa44fefd7a0 (libstdc++.so.6.0.28) (2 samples, 0.19%)</title><rect x="861" y="292" width="3" height="15" fill="rgb(233,111,5)"/><text x="864.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 0.48%)</title><rect x="859" y="276" width="6" height="15" fill="rgb(240,48,49)"/><text x="862.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="864" y="292" width="1" height="15" fill="rgb(243,81,38)"/><text x="867.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 0.68%)</title><rect x="858" y="260" width="8" height="15" fill="rgb(205,46,8)"/><text x="861.00" y="270.50"></text></g><g><title>std::__shared_ptr&lt;onnxruntime::IAllocator, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr [clone .localalias.84] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="865" y="276" width="1" height="15" fill="rgb(241,134,13)"/><text x="868.00" y="286.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="866" y="260" width="1" height="15" fill="rgb(228,168,7)"/><text x="869.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.10%)</title><rect x="866" y="276" width="1" height="15" fill="rgb(236,229,47)"/><text x="869.00" y="286.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="867" y="260" width="1" height="15" fill="rgb(235,130,45)"/><text x="870.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="869" y="356" width="2" height="15" fill="rgb(221,99,4)"/><text x="872.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="869" y="372" width="2" height="15" fill="rgb(223,113,4)"/><text x="872.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="869" y="388" width="2" height="15" fill="rgb(221,166,24)"/><text x="872.00" y="398.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (709 samples, 68.44%)</title><rect x="65" y="244" width="808" height="15" fill="rgb(245,138,41)"/><text x="68.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;st..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="868" y="260" width="5" height="15" fill="rgb(219,227,5)"/><text x="871.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="868" y="276" width="5" height="15" fill="rgb(225,134,38)"/><text x="871.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="868" y="292" width="5" height="15" fill="rgb(212,153,31)"/><text x="871.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="868" y="308" width="5" height="15" fill="rgb(215,67,27)"/><text x="871.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="868" y="324" width="5" height="15" fill="rgb(241,176,26)"/><text x="871.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="869" y="340" width="4" height="15" fill="rgb(248,123,8)"/><text x="872.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.19%)</title><rect x="871" y="356" width="2" height="15" fill="rgb(226,88,16)"/><text x="874.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.19%)</title><rect x="871" y="372" width="2" height="15" fill="rgb(245,63,46)"/><text x="874.00" y="382.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.39%)</title><rect x="873" y="244" width="4" height="15" fill="rgb(223,178,29)"/><text x="876.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.29%)</title><rect x="874" y="260" width="3" height="15" fill="rgb(207,116,14)"/><text x="877.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator= (libstdc++.so.6.0.28) (1 samples, 0.10%)</title><rect x="876" y="276" width="1" height="15" fill="rgb(231,38,48)"/><text x="879.00" y="286.50"></text></g><g><title>0x7fa460450d50 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="876" y="292" width="1" height="15" fill="rgb(208,208,15)"/><text x="879.00" y="302.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="877" y="244" width="2" height="15" fill="rgb(217,188,11)"/><text x="880.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (737 samples, 71.14%)</title><rect x="40" y="132" width="840" height="15" fill="rgb(215,199,13)"/><text x="43.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (735 samples, 70.95%)</title><rect x="43" y="148" width="837" height="15" fill="rgb(245,21,10)"/><text x="46.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (732 samples, 70.66%)</title><rect x="46" y="164" width="834" height="15" fill="rgb(240,115,8)"/><text x="49.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (726 samples, 70.08%)</title><rect x="53" y="180" width="827" height="15" fill="rgb(247,115,31)"/><text x="56.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (725 samples, 69.98%)</title><rect x="54" y="196" width="826" height="15" fill="rgb(210,166,1)"/><text x="57.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (717 samples, 69.21%)</title><rect x="63" y="212" width="817" height="15" fill="rgb(237,16,1)"/><text x="66.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so)</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (715 samples, 69.02%)</title><rect x="65" y="228" width="815" height="15" fill="rgb(227,27,16)"/><text x="68.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxrun..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.10%)</title><rect x="879" y="244" width="1" height="15" fill="rgb(214,48,28)"/><text x="882.00" y="254.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.10%)</title><rect x="880" y="132" width="1" height="15" fill="rgb(228,91,17)"/><text x="883.00" y="142.50"></text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (749 samples, 72.30%)</title><rect x="29" y="68" width="853" height="15" fill="rgb(253,131,5)"/><text x="32.00" y="78.50">profile_ort (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (749 samples, 72.30%)</title><rect x="29" y="84" width="853" height="15" fill="rgb(237,109,29)"/><text x="32.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (749 samples, 72.30%)</title><rect x="29" y="100" width="853" height="15" fill="rgb(205,112,47)"/><text x="32.00" y="110.50">profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (746 samples, 72.01%)</title><rect x="32" y="116" width="850" height="15" fill="rgb(240,187,16)"/><text x="35.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.10%)</title><rect x="881" y="132" width="1" height="15" fill="rgb(238,64,29)"/><text x="884.00" y="142.50"></text></g><g><title>0x7fa420f0954f (?) (1 samples, 0.10%)</title><rect x="882" y="244" width="1" height="15" fill="rgb(252,130,31)"/><text x="885.00" y="254.50"></text></g><g><title>0x7fa420f0f65e (?) (1 samples, 0.10%)</title><rect x="882" y="260" width="1" height="15" fill="rgb(245,118,50)"/><text x="885.00" y="270.50"></text></g><g><title>0x7fa420f0f50f (?) (1 samples, 0.10%)</title><rect x="882" y="276" width="1" height="15" fill="rgb(232,33,13)"/><text x="885.00" y="286.50"></text></g><g><title>0x7fa420f15d6c (?) (1 samples, 0.10%)</title><rect x="882" y="292" width="1" height="15" fill="rgb(217,204,22)"/><text x="885.00" y="302.50"></text></g><g><title>0x7fa42a436ab9 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="882" y="308" width="1" height="15" fill="rgb(247,50,7)"/><text x="885.00" y="318.50"></text></g><g><title>0x7fa42a437ea0 (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="882" y="324" width="1" height="15" fill="rgb(223,158,43)"/><text x="885.00" y="334.50"></text></g><g><title>0x7fa42a437ea0 (libgomp.so.1.0.0) (6 samples, 0.58%)</title><rect x="883" y="484" width="7" height="15" fill="rgb(211,95,50)"/><text x="886.00" y="494.50"></text></g><g><title>0x7fa42a437ea9 (libgomp.so.1.0.0) (19 samples, 1.83%)</title><rect x="890" y="484" width="22" height="15" fill="rgb(206,14,0)"/><text x="893.00" y="494.50">0..</text></g><g><title>0x7fa42a437eab (libgomp.so.1.0.0) (26 samples, 2.51%)</title><rect x="912" y="484" width="29" height="15" fill="rgb(236,23,40)"/><text x="915.00" y="494.50">0x..</text></g><g><title>0x7fa42a436ab9 (libgomp.so.1.0.0) (78 samples, 7.53%)</title><rect x="883" y="468" width="89" height="15" fill="rgb(246,144,36)"/><text x="886.00" y="478.50">0x7fa42a43..</text></g><g><title>0x7fa42a437ead (libgomp.so.1.0.0) (27 samples, 2.61%)</title><rect x="941" y="484" width="31" height="15" fill="rgb(217,41,36)"/><text x="944.00" y="494.50">0x..</text></g><g><title>0x7fa42a437cfb (libgomp.so.1.0.0) (2 samples, 0.19%)</title><rect x="972" y="500" width="2" height="15" fill="rgb(244,9,36)"/><text x="975.00" y="510.50"></text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (82 samples, 7.92%)</title><rect x="882" y="68" width="93" height="15" fill="rgb(244,115,16)"/><text x="885.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (82 samples, 7.92%)</title><rect x="882" y="84" width="93" height="15" fill="rgb(209,137,29)"/><text x="885.00" y="94.50">setup_profi..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (82 samples, 7.92%)</title><rect x="882" y="100" width="93" height="15" fill="rgb(213,39,23)"/><text x="885.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 7.92%)</title><rect x="882" y="116" width="93" height="15" fill="rgb(226,84,40)"/><text x="885.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (82 samples, 7.92%)</title><rect x="882" y="132" width="93" height="15" fill="rgb(237,163,9)"/><text x="885.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (82 samples, 7.92%)</title><rect x="882" y="148" width="93" height="15" fill="rgb(211,125,14)"/><text x="885.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (82 samples, 7.92%)</title><rect x="882" y="164" width="93" height="15" fill="rgb(242,159,14)"/><text x="885.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (82 samples, 7.92%)</title><rect x="882" y="180" width="93" height="15" fill="rgb(231,37,32)"/><text x="885.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 7.92%)</title><rect x="882" y="196" width="93" height="15" fill="rgb(220,69,13)"/><text x="885.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 7.92%)</title><rect x="882" y="212" width="93" height="15" fill="rgb(207,164,39)"/><text x="885.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (82 samples, 7.92%)</title><rect x="882" y="228" width="93" height="15" fill="rgb(228,15,23)"/><text x="885.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (81 samples, 7.82%)</title><rect x="883" y="244" width="92" height="15" fill="rgb(214,224,10)"/><text x="886.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (81 samples, 7.82%)</title><rect x="883" y="260" width="92" height="15" fill="rgb(236,10,7)"/><text x="886.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (81 samples, 7.82%)</title><rect x="883" y="276" width="92" height="15" fill="rgb(224,148,7)"/><text x="886.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (81 samples, 7.82%)</title><rect x="883" y="292" width="92" height="15" fill="rgb(233,26,13)"/><text x="886.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (81 samples, 7.82%)</title><rect x="883" y="308" width="92" height="15" fill="rgb(217,39,32)"/><text x="886.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (81 samples, 7.82%)</title><rect x="883" y="324" width="92" height="15" fill="rgb(245,35,29)"/><text x="886.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (81 samples, 7.82%)</title><rect x="883" y="340" width="92" height="15" fill="rgb(232,150,50)"/><text x="886.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (81 samples, 7.82%)</title><rect x="883" y="356" width="92" height="15" fill="rgb(229,10,52)"/><text x="886.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (81 samples, 7.82%)</title><rect x="883" y="372" width="92" height="15" fill="rgb(254,48,49)"/><text x="886.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (81 samples, 7.82%)</title><rect x="883" y="388" width="92" height="15" fill="rgb(206,9,36)"/><text x="886.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (81 samples, 7.82%)</title><rect x="883" y="404" width="92" height="15" fill="rgb(228,62,13)"/><text x="886.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (81 samples, 7.82%)</title><rect x="883" y="420" width="92" height="15" fill="rgb(242,1,34)"/><text x="886.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (81 samples, 7.82%)</title><rect x="883" y="436" width="92" height="15" fill="rgb(229,187,35)"/><text x="886.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (81 samples, 7.82%)</title><rect x="883" y="452" width="92" height="15" fill="rgb(212,61,23)"/><text x="886.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.29%)</title><rect x="972" y="468" width="3" height="15" fill="rgb(213,170,31)"/><text x="975.00" y="478.50"></text></g><g><title>0x7fa42a435daa (libgomp.so.1.0.0) (3 samples, 0.29%)</title><rect x="972" y="484" width="3" height="15" fill="rgb(247,29,51)"/><text x="975.00" y="494.50"></text></g><g><title>0x7fa42a437cfd (libgomp.so.1.0.0) (1 samples, 0.10%)</title><rect x="974" y="500" width="1" height="15" fill="rgb(217,158,36)"/><text x="977.00" y="510.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="978" y="148" width="1" height="15" fill="rgb(239,34,29)"/><text x="981.00" y="158.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="978" y="164" width="1" height="15" fill="rgb(242,111,17)"/><text x="981.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.19%)</title><rect x="978" y="116" width="2" height="15" fill="rgb(216,81,47)"/><text x="981.00" y="126.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.19%)</title><rect x="978" y="132" width="2" height="15" fill="rgb(236,160,0)"/><text x="981.00" y="142.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="979" y="148" width="1" height="15" fill="rgb(229,173,45)"/><text x="982.00" y="158.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="979" y="164" width="1" height="15" fill="rgb(216,67,54)"/><text x="982.00" y="174.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="979" y="180" width="1" height="15" fill="rgb(226,1,1)"/><text x="982.00" y="190.50"></text></g><g><title>0x7fa460430d28 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="979" y="196" width="1" height="15" fill="rgb(247,82,12)"/><text x="982.00" y="206.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="982" y="148" width="1" height="15" fill="rgb(235,82,10)"/><text x="985.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.10%)</title><rect x="982" y="164" width="1" height="15" fill="rgb(224,24,14)"/><text x="985.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.10%)</title><rect x="982" y="180" width="1" height="15" fill="rgb(253,227,6)"/><text x="985.00" y="190.50"></text></g><g><title>0x7fa43aa9cd2e (?) (1 samples, 0.10%)</title><rect x="989" y="164" width="1" height="15" fill="rgb(218,120,47)"/><text x="992.00" y="174.50"></text></g><g><title>0x7fa43aa9bfa6 (?) (1 samples, 0.10%)</title><rect x="989" y="180" width="1" height="15" fill="rgb(205,21,6)"/><text x="992.00" y="190.50"></text></g><g><title>0x7fa43aaab405 (?) (1 samples, 0.10%)</title><rect x="989" y="196" width="1" height="15" fill="rgb(248,154,54)"/><text x="992.00" y="206.50"></text></g><g><title>0x7fa43aaaa6c9 (?) (1 samples, 0.10%)</title><rect x="989" y="212" width="1" height="15" fill="rgb(229,200,44)"/><text x="992.00" y="222.50"></text></g><g><title>0x7fa43aa8bcd1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="990" y="196" width="1" height="15" fill="rgb(215,121,7)"/><text x="993.00" y="206.50"></text></g><g><title>0x7fa43aa9bf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="990" y="180" width="2" height="15" fill="rgb(235,110,47)"/><text x="993.00" y="190.50"></text></g><g><title>0x7fa43aa8bd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="991" y="196" width="1" height="15" fill="rgb(229,147,39)"/><text x="994.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.10%)</title><rect x="991" y="212" width="1" height="15" fill="rgb(252,12,17)"/><text x="994.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="991" y="228" width="1" height="15" fill="rgb(236,9,23)"/><text x="994.00" y="238.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.10%)</title><rect x="991" y="244" width="1" height="15" fill="rgb(205,182,8)"/><text x="994.00" y="254.50"></text></g><g><title>0x7fa43aa9bf81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="992" y="180" width="2" height="15" fill="rgb(249,15,4)"/><text x="995.00" y="190.50"></text></g><g><title>0x7fa43aaaa1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="994" y="212" width="1" height="15" fill="rgb(238,95,52)"/><text x="997.00" y="222.50"></text></g><g><title>array_descr_get (getset.c) (1 samples, 0.10%)</title><rect x="994" y="228" width="1" height="15" fill="rgb(218,124,0)"/><text x="997.00" y="238.50"></text></g><g><title>0x7fa45f651ca0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="996" y="308" width="1" height="15" fill="rgb(228,118,51)"/><text x="999.00" y="318.50"></text></g><g><title>0x7fa43aa8ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="995" y="228" width="4" height="15" fill="rgb(221,213,17)"/><text x="998.00" y="238.50"></text></g><g><title>0x7fa43aa8e666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="995" y="244" width="4" height="15" fill="rgb(234,159,40)"/><text x="998.00" y="254.50"></text></g><g><title>0x7fa43aa842fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="995" y="260" width="4" height="15" fill="rgb(247,114,47)"/><text x="998.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 0.39%)</title><rect x="995" y="276" width="4" height="15" fill="rgb(236,163,22)"/><text x="998.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 0.39%)</title><rect x="995" y="292" width="4" height="15" fill="rgb(239,208,21)"/><text x="998.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c) (2 samples, 0.19%)</title><rect x="997" y="308" width="2" height="15" fill="rgb(234,29,11)"/><text x="1000.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (2 samples, 0.19%)</title><rect x="997" y="324" width="2" height="15" fill="rgb(241,195,15)"/><text x="1000.00" y="334.50"></text></g><g><title>0x7fa43aa819cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="999" y="260" width="1" height="15" fill="rgb(232,54,39)"/><text x="1002.00" y="270.50"></text></g><g><title>0x7fa43aaaa2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.58%)</title><rect x="995" y="212" width="7" height="15" fill="rgb(219,0,36)"/><text x="998.00" y="222.50"></text></g><g><title>0x7fa43aa8ee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="999" y="228" width="3" height="15" fill="rgb(238,219,41)"/><text x="1002.00" y="238.50"></text></g><g><title>0x7fa43aa822bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="999" y="244" width="3" height="15" fill="rgb(223,26,37)"/><text x="1002.00" y="254.50"></text></g><g><title>0x7fa43aa819d6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1000" y="260" width="2" height="15" fill="rgb(237,137,13)"/><text x="1003.00" y="270.50"></text></g><g><title>0x7fa43aaaa364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="1002" y="212" width="2" height="15" fill="rgb(229,165,50)"/><text x="1005.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1003" y="228" width="1" height="15" fill="rgb(239,139,42)"/><text x="1006.00" y="238.50"></text></g><g><title>0x7fa43aaaa456 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1004" y="212" width="1" height="15" fill="rgb(207,209,13)"/><text x="1007.00" y="222.50"></text></g><g><title>0x7fa43aaaa592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="1005" y="212" width="2" height="15" fill="rgb(248,140,35)"/><text x="1008.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.19%)</title><rect x="1005" y="228" width="2" height="15" fill="rgb(248,6,43)"/><text x="1008.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.10%)</title><rect x="1006" y="244" width="1" height="15" fill="rgb(233,154,51)"/><text x="1009.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.10%)</title><rect x="1006" y="260" width="1" height="15" fill="rgb(224,200,34)"/><text x="1009.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="1006" y="276" width="1" height="15" fill="rgb(233,53,50)"/><text x="1009.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.10%)</title><rect x="1006" y="292" width="1" height="15" fill="rgb(238,227,5)"/><text x="1009.00" y="302.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.10%)</title><rect x="1006" y="308" width="1" height="15" fill="rgb(240,188,14)"/><text x="1009.00" y="318.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.10%)</title><rect x="1006" y="324" width="1" height="15" fill="rgb(241,133,22)"/><text x="1009.00" y="334.50"></text></g><g><title>0x7fa43aaaa644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1007" y="212" width="1" height="15" fill="rgb(221,200,39)"/><text x="1010.00" y="222.50"></text></g><g><title>0x7fa43aaaa698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1008" y="212" width="4" height="15" fill="rgb(210,178,49)"/><text x="1011.00" y="222.50"></text></g><g><title>0x7fa43aaaa6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1012" y="212" width="1" height="15" fill="rgb(235,144,4)"/><text x="1015.00" y="222.50"></text></g><g><title>0x7fa43aaaa6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.58%)</title><rect x="1013" y="212" width="7" height="15" fill="rgb(241,182,24)"/><text x="1016.00" y="222.50"></text></g><g><title>0x7fa43aaaa6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (8 samples, 0.77%)</title><rect x="1020" y="212" width="9" height="15" fill="rgb(235,129,49)"/><text x="1023.00" y="222.50"></text></g><g><title>0x7fa43aaaa6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 0.58%)</title><rect x="1029" y="212" width="7" height="15" fill="rgb(232,210,34)"/><text x="1032.00" y="222.50"></text></g><g><title>0x7fa43aaaa6b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1036" y="212" width="1" height="15" fill="rgb(206,154,40)"/><text x="1039.00" y="222.50"></text></g><g><title>0x7fa43aaaa6c9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1037" y="212" width="1" height="15" fill="rgb(209,156,20)"/><text x="1040.00" y="222.50"></text></g><g><title>0x7fa43aaaa6d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1038" y="212" width="1" height="15" fill="rgb(251,19,40)"/><text x="1041.00" y="222.50"></text></g><g><title>0x7fa43aaaa6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1039" y="212" width="1" height="15" fill="rgb(232,141,27)"/><text x="1042.00" y="222.50"></text></g><g><title>0x7fa43aaaa731 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1040" y="212" width="1" height="15" fill="rgb(219,168,51)"/><text x="1043.00" y="222.50"></text></g><g><title>0x7fa43aaaa7b0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1041" y="212" width="2" height="15" fill="rgb(212,198,34)"/><text x="1044.00" y="222.50"></text></g><g><title>0x7fa43aaaa87d (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1043" y="212" width="1" height="15" fill="rgb(223,199,32)"/><text x="1046.00" y="222.50"></text></g><g><title>0x7fa43aaaa92f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1044" y="212" width="1" height="15" fill="rgb(236,136,45)"/><text x="1047.00" y="222.50"></text></g><g><title>0x7fa43aa7fa05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1044" y="228" width="1" height="15" fill="rgb(240,172,5)"/><text x="1047.00" y="238.50"></text></g><g><title>0x7fa43aa82529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1045" y="228" width="3" height="15" fill="rgb(218,7,12)"/><text x="1048.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c) (2 samples, 0.19%)</title><rect x="1046" y="244" width="2" height="15" fill="rgb(224,37,37)"/><text x="1049.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c) (2 samples, 0.19%)</title><rect x="1046" y="260" width="2" height="15" fill="rgb(217,182,0)"/><text x="1049.00" y="270.50"></text></g><g><title>0x7fa43aaab405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (49 samples, 4.73%)</title><rect x="994" y="196" width="55" height="15" fill="rgb(220,163,5)"/><text x="997.00" y="206.50">0x7fa..</text></g><g><title>0x7fa43aaaac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.39%)</title><rect x="1045" y="212" width="4" height="15" fill="rgb(220,218,24)"/><text x="1048.00" y="222.50"></text></g><g><title>0x7fa43aa825f7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1048" y="228" width="1" height="15" fill="rgb(222,108,49)"/><text x="1051.00" y="238.50"></text></g><g><title>0x7fa43aa822bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1048" y="244" width="1" height="15" fill="rgb(217,90,0)"/><text x="1051.00" y="254.50"></text></g><g><title>0x7fa43aa81a62 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1048" y="260" width="1" height="15" fill="rgb(251,214,2)"/><text x="1051.00" y="270.50"></text></g><g><title>0x7fa43aa9bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (51 samples, 4.92%)</title><rect x="994" y="180" width="58" height="15" fill="rgb(232,103,41)"/><text x="997.00" y="190.50">0x7fa4..</text></g><g><title>0x7fa43aaab540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="1049" y="196" width="3" height="15" fill="rgb(214,180,51)"/><text x="1052.00" y="206.50"></text></g><g><title>0x7fa43aa802f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="1049" y="212" width="3" height="15" fill="rgb(229,178,4)"/><text x="1052.00" y="222.50"></text></g><g><title>0x7fa43aa7f530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.19%)</title><rect x="1049" y="228" width="3" height="15" fill="rgb(237,30,11)"/><text x="1052.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.19%)</title><rect x="1049" y="244" width="3" height="15" fill="rgb(216,103,8)"/><text x="1052.00" y="254.50"></text></g><g><title>0x7fa43aa9c002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1052" y="180" width="1" height="15" fill="rgb(252,174,29)"/><text x="1055.00" y="190.50"></text></g><g><title>0x7fa460446734 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1055" y="212" width="1" height="15" fill="rgb(217,142,46)"/><text x="1058.00" y="222.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1056" y="212" width="1" height="15" fill="rgb(247,170,13)"/><text x="1059.00" y="222.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1056" y="228" width="1" height="15" fill="rgb(221,105,4)"/><text x="1059.00" y="238.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (5 samples, 0.48%)</title><rect x="1057" y="228" width="6" height="15" fill="rgb(228,35,50)"/><text x="1060.00" y="238.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1063" y="260" width="1" height="15" fill="rgb(226,215,41)"/><text x="1066.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1063" y="276" width="1" height="15" fill="rgb(252,147,0)"/><text x="1066.00" y="286.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.10%)</title><rect x="1063" y="292" width="1" height="15" fill="rgb(244,32,14)"/><text x="1066.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1063" y="308" width="1" height="15" fill="rgb(239,26,2)"/><text x="1066.00" y="318.50"></text></g><g><title>0x7fa460431c9e (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1063" y="324" width="1" height="15" fill="rgb(248,181,54)"/><text x="1066.00" y="334.50"></text></g><g><title>0x7fa43aa9c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.06%)</title><rect x="1053" y="180" width="12" height="15" fill="rgb(248,54,38)"/><text x="1056.00" y="190.50"></text></g><g><title>array_take (methods.c) (11 samples, 1.06%)</title><rect x="1053" y="196" width="12" height="15" fill="rgb(253,95,47)"/><text x="1056.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (7 samples, 0.68%)</title><rect x="1057" y="212" width="8" height="15" fill="rgb(238,168,46)"/><text x="1060.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.19%)</title><rect x="1063" y="228" width="2" height="15" fill="rgb(227,50,30)"/><text x="1066.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.19%)</title><rect x="1063" y="244" width="2" height="15" fill="rgb(208,31,52)"/><text x="1066.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.10%)</title><rect x="1064" y="260" width="1" height="15" fill="rgb(220,36,53)"/><text x="1067.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1064" y="276" width="1" height="15" fill="rgb(228,72,36)"/><text x="1067.00" y="286.50"></text></g><g><title>0x7fa43aa9c113 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1065" y="180" width="1" height="15" fill="rgb(220,49,30)"/><text x="1068.00" y="190.50"></text></g><g><title>0x7fa43aa76d00 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1065" y="196" width="1" height="15" fill="rgb(236,71,23)"/><text x="1068.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.19%)</title><rect x="1066" y="212" width="3" height="15" fill="rgb(225,8,31)"/><text x="1069.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.19%)</title><rect x="1066" y="228" width="3" height="15" fill="rgb(251,79,41)"/><text x="1069.00" y="238.50"></text></g><g><title>0x7fa43aa9c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.29%)</title><rect x="1066" y="180" width="4" height="15" fill="rgb(207,138,36)"/><text x="1069.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.29%)</title><rect x="1066" y="196" width="4" height="15" fill="rgb(232,40,27)"/><text x="1069.00" y="206.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1069" y="212" width="1" height="15" fill="rgb(229,186,23)"/><text x="1072.00" y="222.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1069" y="228" width="1" height="15" fill="rgb(244,120,10)"/><text x="1072.00" y="238.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.10%)</title><rect x="1069" y="244" width="1" height="15" fill="rgb(247,43,6)"/><text x="1072.00" y="254.50"></text></g><g><title>0x7fa460430df0 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1069" y="260" width="1" height="15" fill="rgb(241,195,38)"/><text x="1072.00" y="270.50"></text></g><g><title>0x7fa43aa9c2f9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1070" y="180" width="1" height="15" fill="rgb(232,40,13)"/><text x="1073.00" y="190.50"></text></g><g><title>0x7fa43aa9c328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1071" y="180" width="1" height="15" fill="rgb(211,33,30)"/><text x="1074.00" y="190.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.10%)</title><rect x="1071" y="196" width="1" height="15" fill="rgb(243,143,38)"/><text x="1074.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.10%)</title><rect x="1071" y="212" width="1" height="15" fill="rgb(235,121,30)"/><text x="1074.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.10%)</title><rect x="1071" y="228" width="1" height="15" fill="rgb(233,185,18)"/><text x="1074.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.10%)</title><rect x="1071" y="244" width="1" height="15" fill="rgb(244,84,26)"/><text x="1074.00" y="254.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.10%)</title><rect x="1071" y="260" width="1" height="15" fill="rgb(254,26,20)"/><text x="1074.00" y="270.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.10%)</title><rect x="1071" y="276" width="1" height="15" fill="rgb(218,94,54)"/><text x="1074.00" y="286.50"></text></g><g><title>0x7fa43aa9cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (73 samples, 7.05%)</title><rect x="990" y="164" width="83" height="15" fill="rgb(218,174,1)"/><text x="993.00" y="174.50">0x7fa43aa..</text></g><g><title>0x7fa43aa9c8d3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1072" y="180" width="1" height="15" fill="rgb(225,224,5)"/><text x="1075.00" y="190.50"></text></g><g><title>0x7fa43aa78bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1072" y="196" width="1" height="15" fill="rgb(251,113,32)"/><text x="1075.00" y="206.50"></text></g><g><title>0x7fa43aa7fd60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.10%)</title><rect x="1072" y="212" width="1" height="15" fill="rgb(238,145,26)"/><text x="1075.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (3 samples, 0.29%)</title><rect x="1096" y="196" width="4" height="15" fill="rgb(207,35,34)"/><text x="1099.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (4 samples, 0.39%)</title><rect x="1100" y="196" width="4" height="15" fill="rgb(217,16,19)"/><text x="1103.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (4 samples, 0.39%)</title><rect x="1104" y="196" width="5" height="15" fill="rgb(254,219,35)"/><text x="1107.00" y="206.50"></text></g><g><title>0x7fa46050f0e6 (libc-2.29.so) (1 samples, 0.10%)</title><rect x="1112" y="212" width="1" height="15" fill="rgb(216,163,14)"/><text x="1115.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1113" y="212" width="1" height="15" fill="rgb(208,60,18)"/><text x="1116.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 0.58%)</title><rect x="1109" y="196" width="6" height="15" fill="rgb(249,119,45)"/><text x="1112.00" y="206.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.10%)</title><rect x="1114" y="212" width="1" height="15" fill="rgb(243,16,52)"/><text x="1117.00" y="222.50"></text></g><g><title>unicode_rpartition (python3.7) (1 samples, 0.10%)</title><rect x="1114" y="228" width="1" height="15" fill="rgb(225,197,12)"/><text x="1117.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.10%)</title><rect x="1115" y="196" width="2" height="15" fill="rgb(208,127,22)"/><text x="1118.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.10%)</title><rect x="1129" y="212" width="1" height="15" fill="rgb(253,214,43)"/><text x="1132.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (18 samples, 1.74%)</title><rect x="1117" y="196" width="20" height="15" fill="rgb(245,201,49)"/><text x="1120.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py) (6 samples, 0.58%)</title><rect x="1130" y="212" width="7" height="15" fill="rgb(227,159,32)"/><text x="1133.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (4 samples, 0.39%)</title><rect x="1133" y="228" width="4" height="15" fill="rgb(208,13,41)"/><text x="1136.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c) (2 samples, 0.19%)</title><rect x="1137" y="196" width="2" height="15" fill="rgb(227,27,32)"/><text x="1140.00" y="206.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (2 samples, 0.19%)</title><rect x="1137" y="212" width="2" height="15" fill="rgb(208,17,27)"/><text x="1140.00" y="222.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (4 samples, 0.39%)</title><rect x="1139" y="196" width="5" height="15" fill="rgb(210,122,3)"/><text x="1142.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.10%)</title><rect x="1143" y="212" width="1" height="15" fill="rgb(220,9,28)"/><text x="1146.00" y="222.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c) (1 samples, 0.10%)</title><rect x="1143" y="228" width="1" height="15" fill="rgb(231,130,7)"/><text x="1146.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.10%)</title><rect x="1144" y="196" width="1" height="15" fill="rgb(208,189,40)"/><text x="1147.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (73 samples, 7.05%)</title><rect x="1074" y="180" width="84" height="15" fill="rgb(207,95,6)"/><text x="1077.00" y="190.50">check_arr..</text></g><g><title>simplefilter (warnings.py) (11 samples, 1.06%)</title><rect x="1145" y="196" width="13" height="15" fill="rgb(234,80,37)"/><text x="1148.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (10 samples, 0.97%)</title><rect x="1146" y="212" width="12" height="15" fill="rgb(213,67,33)"/><text x="1149.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (76 samples, 7.34%)</title><rect x="1073" y="164" width="87" height="15" fill="rgb(217,199,34)"/><text x="1076.00" y="174.50">_validate_..</text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.19%)</title><rect x="1158" y="180" width="2" height="15" fill="rgb(211,52,31)"/><text x="1161.00" y="190.50"></text></g><g><title>array_shape_get (getset.c) (1 samples, 0.10%)</title><rect x="1160" y="164" width="1" height="15" fill="rgb(227,173,3)"/><text x="1163.00" y="174.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.10%)</title><rect x="1161" y="164" width="1" height="15" fill="rgb(249,147,42)"/><text x="1164.00" y="174.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.10%)</title><rect x="1161" y="180" width="1" height="15" fill="rgb(212,93,31)"/><text x="1164.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.39%)</title><rect x="1174" y="196" width="4" height="15" fill="rgb(215,59,7)"/><text x="1177.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (22 samples, 2.12%)</title><rect x="1163" y="180" width="25" height="15" fill="rgb(246,53,23)"/><text x="1166.00" y="190.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (9 samples, 0.87%)</title><rect x="1178" y="196" width="10" height="15" fill="rgb(254,71,45)"/><text x="1181.00" y="206.50"></text></g><g><title>all (1,036 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(207,131,40)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (1,036 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(211,84,17)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (188 samples, 18.15%)</title><rect x="975" y="68" width="215" height="15" fill="rgb(220,31,21)"/><text x="978.00" y="78.50">profile_skl (bench_DecisionT..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (188 samples, 18.15%)</title><rect x="975" y="84" width="215" height="15" fill="rgb(208,91,31)"/><text x="978.00" y="94.50">setup_profile (bench_Decisio..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_b_reg_1000_4_12_float_.py) (188 samples, 18.15%)</title><rect x="975" y="100" width="215" height="15" fill="rgb(217,149,18)"/><text x="978.00" y="110.50">profile (bench_DecisionTreeR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (184 samples, 17.76%)</title><rect x="980" y="116" width="210" height="15" fill="rgb(231,146,29)"/><text x="983.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 17.66%)</title><rect x="981" y="132" width="209" height="15" fill="rgb(236,192,30)"/><text x="984.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>predict (sklearn/tree/_classes.py) (181 samples, 17.47%)</title><rect x="983" y="148" width="207" height="15" fill="rgb(223,28,13)"/><text x="986.00" y="158.50">predict (sklearn/tree/_clas..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (24 samples, 2.32%)</title><rect x="1162" y="164" width="28" height="15" fill="rgb(240,183,36)"/><text x="1165.00" y="174.50">c..</text></g><g><title>isclass (inspect.py) (1 samples, 0.10%)</title><rect x="1188" y="180" width="2" height="15" fill="rgb(225,124,2)"/><text x="1191.00" y="190.50"></text></g></g></svg>