<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2006" onload="init(evt)" viewBox="0 0 1200 2006" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2006" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1989.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1989.00"> </text><g id="frames"><g><title>_call_aside (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(205,178,25)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(216,151,42)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(220,207,6)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(239,18,11)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(245,149,0)"/><text x="13.00" y="910.50"></text></g><g><title>add (pkg_resources/__init__.py) (2 samples, 0.33%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(254,144,42)"/><text x="13.00" y="926.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.16%)</title><rect x="11" y="932" width="2" height="15" fill="rgb(229,108,9)"/><text x="14.00" y="942.50"></text></g><g><title>0x7f6fc9c6114b (libc-2.29.so) (1 samples, 0.16%)</title><rect x="11" y="948" width="2" height="15" fill="rgb(238,177,41)"/><text x="14.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 0.49%)</title><rect x="10" y="292" width="5" height="15" fill="rgb(230,39,35)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="308" width="5" height="15" fill="rgb(214,96,51)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="324" width="5" height="15" fill="rgb(236,175,49)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="340" width="5" height="15" fill="rgb(230,198,51)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="10" y="356" width="5" height="15" fill="rgb(236,45,54)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="372" width="5" height="15" fill="rgb(241,167,49)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 0.49%)</title><rect x="10" y="388" width="5" height="15" fill="rgb(236,137,36)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="404" width="5" height="15" fill="rgb(207,218,26)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="420" width="5" height="15" fill="rgb(205,65,37)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="436" width="5" height="15" fill="rgb(214,50,43)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="10" y="452" width="5" height="15" fill="rgb(211,42,51)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="468" width="5" height="15" fill="rgb(242,130,2)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 0.49%)</title><rect x="10" y="484" width="5" height="15" fill="rgb(210,11,44)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="500" width="5" height="15" fill="rgb(217,30,9)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="516" width="5" height="15" fill="rgb(250,221,44)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="532" width="5" height="15" fill="rgb(212,80,15)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="10" y="548" width="5" height="15" fill="rgb(222,149,46)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="564" width="5" height="15" fill="rgb(245,77,50)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 0.49%)</title><rect x="10" y="580" width="5" height="15" fill="rgb(216,0,43)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="596" width="5" height="15" fill="rgb(222,124,14)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="612" width="5" height="15" fill="rgb(250,28,28)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="628" width="5" height="15" fill="rgb(206,42,20)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="644" width="5" height="15" fill="rgb(222,108,50)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="660" width="5" height="15" fill="rgb(241,49,13)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="676" width="5" height="15" fill="rgb(253,179,8)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="10" y="692" width="5" height="15" fill="rgb(206,37,37)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="708" width="5" height="15" fill="rgb(242,218,3)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 0.49%)</title><rect x="10" y="724" width="5" height="15" fill="rgb(254,109,0)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="740" width="5" height="15" fill="rgb(253,126,54)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="756" width="5" height="15" fill="rgb(237,9,24)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="772" width="5" height="15" fill="rgb(213,138,50)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="10" y="788" width="5" height="15" fill="rgb(251,45,45)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="10" y="804" width="5" height="15" fill="rgb(233,50,9)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 0.49%)</title><rect x="10" y="820" width="5" height="15" fill="rgb(230,66,30)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="836" width="2" height="15" fill="rgb(244,179,27)"/><text x="16.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="852" width="2" height="15" fill="rgb(219,119,39)"/><text x="16.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="868" width="2" height="15" fill="rgb(251,208,40)"/><text x="16.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="13" y="884" width="2" height="15" fill="rgb(240,170,53)"/><text x="16.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="900" width="2" height="15" fill="rgb(227,3,22)"/><text x="16.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py) (1 samples, 0.16%)</title><rect x="13" y="916" width="2" height="15" fill="rgb(218,82,14)"/><text x="16.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="932" width="2" height="15" fill="rgb(224,220,28)"/><text x="16.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="948" width="2" height="15" fill="rgb(245,80,15)"/><text x="16.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="964" width="2" height="15" fill="rgb(250,107,35)"/><text x="16.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="980" width="2" height="15" fill="rgb(253,179,38)"/><text x="16.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py) (1 samples, 0.16%)</title><rect x="13" y="996" width="2" height="15" fill="rgb(236,144,21)"/><text x="16.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1012" width="2" height="15" fill="rgb(224,9,15)"/><text x="16.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1028" width="2" height="15" fill="rgb(225,23,44)"/><text x="16.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1044" width="2" height="15" fill="rgb(242,22,29)"/><text x="16.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="13" y="1060" width="2" height="15" fill="rgb(250,227,8)"/><text x="16.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="13" y="1076" width="2" height="15" fill="rgb(251,181,6)"/><text x="16.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="13" y="1092" width="2" height="15" fill="rgb(220,167,12)"/><text x="16.00" y="1102.50"></text></g><g><title>pyparsing_common (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="13" y="1108" width="2" height="15" fill="rgb(249,197,26)"/><text x="16.00" y="1118.50"></text></g><g><title>__init__ (pkg_resources/_vendor/pyparsing.py) (1 samples, 0.16%)</title><rect x="13" y="1124" width="2" height="15" fill="rgb(243,21,1)"/><text x="16.00" y="1134.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="13" y="1140" width="2" height="15" fill="rgb(237,198,12)"/><text x="16.00" y="1150.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="13" y="1156" width="2" height="15" fill="rgb(229,137,43)"/><text x="16.00" y="1166.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="13" y="1172" width="2" height="15" fill="rgb(224,133,21)"/><text x="16.00" y="1182.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.16%)</title><rect x="13" y="1188" width="2" height="15" fill="rgb(233,83,32)"/><text x="16.00" y="1198.50"></text></g><g><title>_compile_info (sre_compile.py) (1 samples, 0.16%)</title><rect x="13" y="1204" width="2" height="15" fill="rgb(245,41,10)"/><text x="16.00" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="580" width="2" height="15" fill="rgb(247,146,14)"/><text x="18.00" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="596" width="2" height="15" fill="rgb(215,12,0)"/><text x="18.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="612" width="2" height="15" fill="rgb(219,124,10)"/><text x="18.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="628" width="2" height="15" fill="rgb(213,105,9)"/><text x="18.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="644" width="2" height="15" fill="rgb(219,108,16)"/><text x="18.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="660" width="2" height="15" fill="rgb(249,106,20)"/><text x="18.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="676" width="2" height="15" fill="rgb(253,145,1)"/><text x="18.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="692" width="2" height="15" fill="rgb(240,101,49)"/><text x="18.00" y="702.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py) (1 samples, 0.16%)</title><rect x="15" y="708" width="2" height="15" fill="rgb(241,110,7)"/><text x="18.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="724" width="2" height="15" fill="rgb(238,32,33)"/><text x="18.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="740" width="2" height="15" fill="rgb(242,34,37)"/><text x="18.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="756" width="2" height="15" fill="rgb(248,94,6)"/><text x="18.00" y="766.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="772" width="2" height="15" fill="rgb(205,90,53)"/><text x="18.00" y="782.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="15" y="788" width="2" height="15" fill="rgb(214,51,8)"/><text x="18.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="15" y="804" width="2" height="15" fill="rgb(236,113,34)"/><text x="18.00" y="814.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="820" width="2" height="15" fill="rgb(254,9,48)"/><text x="18.00" y="830.50"></text></g><g><title>0x7f6fc9e0a995 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="836" width="2" height="15" fill="rgb(245,134,13)"/><text x="18.00" y="846.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="852" width="2" height="15" fill="rgb(220,32,50)"/><text x="18.00" y="862.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="868" width="2" height="15" fill="rgb(221,39,24)"/><text x="18.00" y="878.50"></text></g><g><title>0x7f6fc9e0a258 (libdl-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="884" width="2" height="15" fill="rgb(209,39,49)"/><text x="18.00" y="894.50"></text></g><g><title>0x7f6fc9e57d7a (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="900" width="2" height="15" fill="rgb(216,45,27)"/><text x="18.00" y="910.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="916" width="2" height="15" fill="rgb(228,140,17)"/><text x="18.00" y="926.50"></text></g><g><title>0x7f6fc9e58345 (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="932" width="2" height="15" fill="rgb(241,173,1)"/><text x="18.00" y="942.50"></text></g><g><title>0x7f6fc9e50fec (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(211,0,25)"/><text x="18.00" y="958.50"></text></g><g><title>0x7f6fc9e4f56b (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(239,179,44)"/><text x="18.00" y="974.50"></text></g><g><title>0x7f6fc9e4ec4b (ld-2.29.so) (1 samples, 0.16%)</title><rect x="15" y="980" width="2" height="15" fill="rgb(225,183,52)"/><text x="18.00" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="916" width="2" height="15" fill="rgb(210,228,46)"/><text x="20.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="932" width="2" height="15" fill="rgb(223,80,36)"/><text x="20.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="948" width="2" height="15" fill="rgb(250,160,30)"/><text x="20.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="964" width="2" height="15" fill="rgb(243,31,36)"/><text x="20.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="980" width="2" height="15" fill="rgb(233,26,13)"/><text x="20.00" y="990.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="17" y="996" width="2" height="15" fill="rgb(219,8,29)"/><text x="20.00" y="1006.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1012" width="2" height="15" fill="rgb(240,156,51)"/><text x="20.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1028" width="2" height="15" fill="rgb(209,164,4)"/><text x="20.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1044" width="2" height="15" fill="rgb(216,69,4)"/><text x="20.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1060" width="2" height="15" fill="rgb(219,27,19)"/><text x="20.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1076" width="2" height="15" fill="rgb(211,135,10)"/><text x="20.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1092" width="2" height="15" fill="rgb(216,3,20)"/><text x="20.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1108" width="2" height="15" fill="rgb(238,55,26)"/><text x="20.00" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/integrate/__init__.py) (1 samples, 0.16%)</title><rect x="17" y="1124" width="2" height="15" fill="rgb(207,115,28)"/><text x="20.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1140" width="2" height="15" fill="rgb(236,157,32)"/><text x="20.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1156" width="2" height="15" fill="rgb(235,195,13)"/><text x="20.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="17" y="1172" width="2" height="15" fill="rgb(246,147,6)"/><text x="20.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1188" width="2" height="15" fill="rgb(253,227,6)"/><text x="20.00" y="1198.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1204" width="2" height="15" fill="rgb(247,161,6)"/><text x="20.00" y="1214.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="17" y="1220" width="2" height="15" fill="rgb(247,57,44)"/><text x="20.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="10" y="196" width="11" height="15" fill="rgb(237,107,8)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="10" y="212" width="11" height="15" fill="rgb(244,214,6)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="10" y="228" width="11" height="15" fill="rgb(237,157,31)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="10" y="244" width="11" height="15" fill="rgb(211,51,44)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="10" y="260" width="11" height="15" fill="rgb(212,37,46)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="10" y="276" width="11" height="15" fill="rgb(220,25,4)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.49%)</title><rect x="15" y="292" width="6" height="15" fill="rgb(223,186,7)"/><text x="18.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="308" width="6" height="15" fill="rgb(229,34,44)"/><text x="18.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="324" width="6" height="15" fill="rgb(226,166,41)"/><text x="18.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="340" width="6" height="15" fill="rgb(211,200,17)"/><text x="18.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="15" y="356" width="6" height="15" fill="rgb(208,83,43)"/><text x="18.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="372" width="6" height="15" fill="rgb(229,110,34)"/><text x="18.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.49%)</title><rect x="15" y="388" width="6" height="15" fill="rgb(238,150,22)"/><text x="18.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="404" width="6" height="15" fill="rgb(208,45,22)"/><text x="18.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="420" width="6" height="15" fill="rgb(252,147,3)"/><text x="18.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="436" width="6" height="15" fill="rgb(209,65,19)"/><text x="18.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="15" y="452" width="6" height="15" fill="rgb(251,6,27)"/><text x="18.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="468" width="6" height="15" fill="rgb(234,190,28)"/><text x="18.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.49%)</title><rect x="15" y="484" width="6" height="15" fill="rgb(233,192,52)"/><text x="18.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="500" width="6" height="15" fill="rgb(218,116,52)"/><text x="18.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="516" width="6" height="15" fill="rgb(213,177,41)"/><text x="18.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="532" width="6" height="15" fill="rgb(220,217,4)"/><text x="18.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="15" y="548" width="6" height="15" fill="rgb(253,171,41)"/><text x="18.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="15" y="564" width="6" height="15" fill="rgb(243,159,54)"/><text x="18.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.33%)</title><rect x="17" y="580" width="4" height="15" fill="rgb(218,59,0)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="596" width="4" height="15" fill="rgb(237,220,22)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="612" width="4" height="15" fill="rgb(216,21,29)"/><text x="20.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="628" width="4" height="15" fill="rgb(237,225,53)"/><text x="20.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="17" y="644" width="4" height="15" fill="rgb(227,175,13)"/><text x="20.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="660" width="4" height="15" fill="rgb(207,126,5)"/><text x="20.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.33%)</title><rect x="17" y="676" width="4" height="15" fill="rgb(210,222,46)"/><text x="20.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="692" width="4" height="15" fill="rgb(210,63,25)"/><text x="20.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="708" width="4" height="15" fill="rgb(210,215,19)"/><text x="20.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="724" width="4" height="15" fill="rgb(224,126,38)"/><text x="20.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="17" y="740" width="4" height="15" fill="rgb(230,33,11)"/><text x="20.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="756" width="4" height="15" fill="rgb(230,221,7)"/><text x="20.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (2 samples, 0.33%)</title><rect x="17" y="772" width="4" height="15" fill="rgb(239,208,35)"/><text x="20.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="788" width="4" height="15" fill="rgb(216,153,8)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="804" width="4" height="15" fill="rgb(241,163,28)"/><text x="20.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="820" width="4" height="15" fill="rgb(231,161,23)"/><text x="20.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="836" width="4" height="15" fill="rgb(248,4,35)"/><text x="20.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(229,51,53)"/><text x="20.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(210,60,1)"/><text x="20.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(210,81,2)"/><text x="20.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (2 samples, 0.33%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(232,130,27)"/><text x="20.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="916" width="2" height="15" fill="rgb(253,151,4)"/><text x="22.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="932" width="2" height="15" fill="rgb(209,159,3)"/><text x="22.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="948" width="2" height="15" fill="rgb(233,193,18)"/><text x="22.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="964" width="2" height="15" fill="rgb(231,189,51)"/><text x="22.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="980" width="2" height="15" fill="rgb(233,29,53)"/><text x="22.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="19" y="996" width="2" height="15" fill="rgb(237,69,50)"/><text x="22.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="19" y="1012" width="2" height="15" fill="rgb(209,113,13)"/><text x="22.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_discrete_distns.py) (1 samples, 0.16%)</title><rect x="19" y="1028" width="2" height="15" fill="rgb(241,160,3)"/><text x="22.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="19" y="1044" width="2" height="15" fill="rgb(254,11,21)"/><text x="22.00" y="1054.50"></text></g><g><title>_construct_docstrings (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="19" y="1060" width="2" height="15" fill="rgb(208,162,6)"/><text x="22.00" y="1070.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.16%)</title><rect x="19" y="1076" width="2" height="15" fill="rgb(209,192,9)"/><text x="22.00" y="1086.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.16%)</title><rect x="19" y="1092" width="2" height="15" fill="rgb(216,53,22)"/><text x="22.00" y="1102.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.16%)</title><rect x="19" y="1108" width="2" height="15" fill="rgb(209,35,7)"/><text x="22.00" y="1118.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.16%)</title><rect x="27" y="1396" width="2" height="15" fill="rgb(210,176,47)"/><text x="30.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1124" width="8" height="15" fill="rgb(216,149,17)"/><text x="26.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1140" width="8" height="15" fill="rgb(247,20,38)"/><text x="26.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1156" width="8" height="15" fill="rgb(241,142,37)"/><text x="26.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.65%)</title><rect x="23" y="1172" width="8" height="15" fill="rgb(233,78,25)"/><text x="26.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1188" width="8" height="15" fill="rgb(242,35,29)"/><text x="26.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (4 samples, 0.65%)</title><rect x="23" y="1204" width="8" height="15" fill="rgb(238,48,43)"/><text x="26.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1220" width="8" height="15" fill="rgb(229,130,43)"/><text x="26.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1236" width="8" height="15" fill="rgb(240,95,23)"/><text x="26.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1252" width="8" height="15" fill="rgb(223,186,33)"/><text x="26.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.65%)</title><rect x="23" y="1268" width="8" height="15" fill="rgb(225,169,18)"/><text x="26.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.65%)</title><rect x="23" y="1284" width="8" height="15" fill="rgb(249,146,49)"/><text x="26.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (4 samples, 0.65%)</title><rect x="23" y="1300" width="8" height="15" fill="rgb(236,126,7)"/><text x="26.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (4 samples, 0.65%)</title><rect x="23" y="1316" width="8" height="15" fill="rgb(232,222,25)"/><text x="26.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (4 samples, 0.65%)</title><rect x="23" y="1332" width="8" height="15" fill="rgb(206,41,8)"/><text x="26.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (4 samples, 0.65%)</title><rect x="23" y="1348" width="8" height="15" fill="rgb(229,134,14)"/><text x="26.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (4 samples, 0.65%)</title><rect x="23" y="1364" width="8" height="15" fill="rgb(221,137,37)"/><text x="26.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (4 samples, 0.65%)</title><rect x="23" y="1380" width="8" height="15" fill="rgb(224,70,35)"/><text x="26.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.16%)</title><rect x="29" y="1396" width="2" height="15" fill="rgb(250,151,45)"/><text x="32.00" y="1406.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="31" y="1604" width="2" height="15" fill="rgb(214,129,44)"/><text x="34.00" y="1614.50"></text></g><g><title>0x7f6fb9c3e0e9 (?) (1 samples, 0.16%)</title><rect x="31" y="1620" width="2" height="15" fill="rgb(242,120,49)"/><text x="34.00" y="1630.50"></text></g><g><title>0x7f6fb9c2f4d1 (?) (1 samples, 0.16%)</title><rect x="31" y="1636" width="2" height="15" fill="rgb(235,187,37)"/><text x="34.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="484" width="12" height="15" fill="rgb(248,175,38)"/><text x="26.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="500" width="12" height="15" fill="rgb(233,229,41)"/><text x="26.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="516" width="12" height="15" fill="rgb(233,38,45)"/><text x="26.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="532" width="12" height="15" fill="rgb(250,147,36)"/><text x="26.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="23" y="548" width="12" height="15" fill="rgb(223,77,47)"/><text x="26.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="564" width="12" height="15" fill="rgb(212,0,43)"/><text x="26.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (6 samples, 0.98%)</title><rect x="23" y="580" width="12" height="15" fill="rgb(210,185,30)"/><text x="26.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="596" width="12" height="15" fill="rgb(234,212,51)"/><text x="26.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="612" width="12" height="15" fill="rgb(217,40,1)"/><text x="26.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="628" width="12" height="15" fill="rgb(229,132,4)"/><text x="26.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="23" y="644" width="12" height="15" fill="rgb(231,210,36)"/><text x="26.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="660" width="12" height="15" fill="rgb(252,175,7)"/><text x="26.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (6 samples, 0.98%)</title><rect x="23" y="676" width="12" height="15" fill="rgb(254,93,4)"/><text x="26.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="692" width="12" height="15" fill="rgb(235,62,20)"/><text x="26.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="708" width="12" height="15" fill="rgb(237,195,32)"/><text x="26.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="724" width="12" height="15" fill="rgb(218,42,5)"/><text x="26.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="23" y="740" width="12" height="15" fill="rgb(241,205,11)"/><text x="26.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="756" width="12" height="15" fill="rgb(220,134,13)"/><text x="26.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (6 samples, 0.98%)</title><rect x="23" y="772" width="12" height="15" fill="rgb(235,160,30)"/><text x="26.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="788" width="12" height="15" fill="rgb(246,121,24)"/><text x="26.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="804" width="12" height="15" fill="rgb(216,66,19)"/><text x="26.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="820" width="12" height="15" fill="rgb(232,105,1)"/><text x="26.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="23" y="836" width="12" height="15" fill="rgb(223,11,45)"/><text x="26.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="852" width="12" height="15" fill="rgb(249,124,21)"/><text x="26.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (6 samples, 0.98%)</title><rect x="23" y="868" width="12" height="15" fill="rgb(247,154,50)"/><text x="26.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="884" width="12" height="15" fill="rgb(229,190,35)"/><text x="26.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="900" width="12" height="15" fill="rgb(211,57,54)"/><text x="26.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="916" width="12" height="15" fill="rgb(237,191,38)"/><text x="26.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="932" width="12" height="15" fill="rgb(210,159,51)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="948" width="12" height="15" fill="rgb(216,149,3)"/><text x="26.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="964" width="12" height="15" fill="rgb(227,93,1)"/><text x="26.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="23" y="980" width="12" height="15" fill="rgb(236,97,18)"/><text x="26.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="996" width="12" height="15" fill="rgb(240,180,41)"/><text x="26.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (6 samples, 0.98%)</title><rect x="23" y="1012" width="12" height="15" fill="rgb(243,17,12)"/><text x="26.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="1028" width="12" height="15" fill="rgb(210,191,35)"/><text x="26.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="1044" width="12" height="15" fill="rgb(227,37,52)"/><text x="26.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="1060" width="12" height="15" fill="rgb(212,80,40)"/><text x="26.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 0.98%)</title><rect x="23" y="1076" width="12" height="15" fill="rgb(221,54,15)"/><text x="26.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 0.98%)</title><rect x="23" y="1092" width="12" height="15" fill="rgb(214,120,52)"/><text x="26.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (6 samples, 0.98%)</title><rect x="23" y="1108" width="12" height="15" fill="rgb(250,191,11)"/><text x="26.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1124" width="4" height="15" fill="rgb(247,76,42)"/><text x="34.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1140" width="4" height="15" fill="rgb(219,198,51)"/><text x="34.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1156" width="4" height="15" fill="rgb(236,168,10)"/><text x="34.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1172" width="4" height="15" fill="rgb(207,74,53)"/><text x="34.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1188" width="4" height="15" fill="rgb(206,76,33)"/><text x="34.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="31" y="1204" width="4" height="15" fill="rgb(231,185,48)"/><text x="34.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1220" width="4" height="15" fill="rgb(240,184,37)"/><text x="34.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.33%)</title><rect x="31" y="1236" width="4" height="15" fill="rgb(205,193,50)"/><text x="34.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1252" width="4" height="15" fill="rgb(247,128,31)"/><text x="34.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1268" width="4" height="15" fill="rgb(210,79,19)"/><text x="34.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1284" width="4" height="15" fill="rgb(247,119,47)"/><text x="34.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1300" width="4" height="15" fill="rgb(216,33,44)"/><text x="34.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1316" width="4" height="15" fill="rgb(244,16,23)"/><text x="34.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="31" y="1332" width="4" height="15" fill="rgb(236,64,5)"/><text x="34.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1348" width="4" height="15" fill="rgb(245,25,26)"/><text x="34.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.33%)</title><rect x="31" y="1364" width="4" height="15" fill="rgb(219,112,50)"/><text x="34.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1380" width="4" height="15" fill="rgb(208,89,13)"/><text x="34.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1396" width="4" height="15" fill="rgb(208,164,2)"/><text x="34.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1412" width="4" height="15" fill="rgb(239,215,41)"/><text x="34.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="31" y="1428" width="4" height="15" fill="rgb(212,77,9)"/><text x="34.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="31" y="1444" width="4" height="15" fill="rgb(236,157,50)"/><text x="34.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.33%)</title><rect x="31" y="1460" width="4" height="15" fill="rgb(216,93,48)"/><text x="34.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.33%)</title><rect x="31" y="1476" width="4" height="15" fill="rgb(246,122,50)"/><text x="34.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.33%)</title><rect x="31" y="1492" width="4" height="15" fill="rgb(219,142,9)"/><text x="34.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.33%)</title><rect x="31" y="1508" width="4" height="15" fill="rgb(248,190,4)"/><text x="34.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.33%)</title><rect x="31" y="1524" width="4" height="15" fill="rgb(250,226,46)"/><text x="34.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.33%)</title><rect x="31" y="1540" width="4" height="15" fill="rgb(211,72,46)"/><text x="34.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.33%)</title><rect x="31" y="1556" width="4" height="15" fill="rgb(219,115,44)"/><text x="34.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.33%)</title><rect x="31" y="1572" width="4" height="15" fill="rgb(220,158,25)"/><text x="34.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.33%)</title><rect x="31" y="1588" width="4" height="15" fill="rgb(224,85,51)"/><text x="34.00" y="1598.50"></text></g><g><title>getname (skl2onnx/algebra/automation.py) (1 samples, 0.16%)</title><rect x="33" y="1604" width="2" height="15" fill="rgb(240,91,23)"/><text x="36.00" y="1614.50"></text></g><g><title>unicode_length (python3.7) (1 samples, 0.16%)</title><rect x="33" y="1620" width="2" height="15" fill="rgb(217,93,1)"/><text x="36.00" y="1630.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="948" width="1" height="15" fill="rgb(246,192,52)"/><text x="38.00" y="958.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="35" y="964" width="1" height="15" fill="rgb(210,44,7)"/><text x="38.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1028" width="2" height="15" fill="rgb(206,145,8)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1044" width="2" height="15" fill="rgb(242,75,8)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1060" width="2" height="15" fill="rgb(240,202,21)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1076" width="2" height="15" fill="rgb(251,84,9)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1092" width="2" height="15" fill="rgb(210,180,18)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.16%)</title><rect x="36" y="1108" width="2" height="15" fill="rgb(208,163,33)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1124" width="2" height="15" fill="rgb(249,74,17)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1140" width="2" height="15" fill="rgb(230,116,33)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1156" width="2" height="15" fill="rgb(249,75,39)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1172" width="2" height="15" fill="rgb(211,8,12)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1188" width="2" height="15" fill="rgb(223,61,36)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (1 samples, 0.16%)</title><rect x="36" y="1204" width="2" height="15" fill="rgb(235,5,0)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1220" width="2" height="15" fill="rgb(226,187,21)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1236" width="2" height="15" fill="rgb(238,26,24)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1252" width="2" height="15" fill="rgb(219,203,18)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1268" width="2" height="15" fill="rgb(219,63,33)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1284" width="2" height="15" fill="rgb(219,28,39)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (1 samples, 0.16%)</title><rect x="36" y="1300" width="2" height="15" fill="rgb(214,80,38)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1316" width="2" height="15" fill="rgb(236,206,39)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1332" width="2" height="15" fill="rgb(236,206,24)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1348" width="2" height="15" fill="rgb(234,46,44)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1364" width="2" height="15" fill="rgb(212,106,28)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1380" width="2" height="15" fill="rgb(209,22,30)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (1 samples, 0.16%)</title><rect x="36" y="1396" width="2" height="15" fill="rgb(228,215,44)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1412" width="2" height="15" fill="rgb(227,85,53)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1428" width="2" height="15" fill="rgb(243,12,27)"/><text x="39.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1444" width="2" height="15" fill="rgb(232,113,14)"/><text x="39.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1460" width="2" height="15" fill="rgb(227,167,43)"/><text x="39.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1476" width="2" height="15" fill="rgb(235,218,16)"/><text x="39.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (1 samples, 0.16%)</title><rect x="36" y="1492" width="2" height="15" fill="rgb(214,102,22)"/><text x="39.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1508" width="2" height="15" fill="rgb(225,197,12)"/><text x="39.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1524" width="2" height="15" fill="rgb(247,98,0)"/><text x="39.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1540" width="2" height="15" fill="rgb(217,99,47)"/><text x="39.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1556" width="2" height="15" fill="rgb(225,116,30)"/><text x="39.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1572" width="2" height="15" fill="rgb(232,174,15)"/><text x="39.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 0.16%)</title><rect x="36" y="1588" width="2" height="15" fill="rgb(209,72,45)"/><text x="39.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1604" width="2" height="15" fill="rgb(238,176,12)"/><text x="39.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1620" width="2" height="15" fill="rgb(208,133,42)"/><text x="39.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1636" width="2" height="15" fill="rgb(215,3,18)"/><text x="39.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1652" width="2" height="15" fill="rgb(243,126,46)"/><text x="39.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1668" width="2" height="15" fill="rgb(227,212,6)"/><text x="39.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (1 samples, 0.16%)</title><rect x="36" y="1684" width="2" height="15" fill="rgb(243,223,49)"/><text x="39.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1700" width="2" height="15" fill="rgb(235,96,42)"/><text x="39.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1716" width="2" height="15" fill="rgb(214,92,17)"/><text x="39.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1732" width="2" height="15" fill="rgb(232,148,32)"/><text x="39.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1748" width="2" height="15" fill="rgb(207,67,0)"/><text x="39.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1764" width="2" height="15" fill="rgb(214,8,17)"/><text x="39.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (1 samples, 0.16%)</title><rect x="36" y="1780" width="2" height="15" fill="rgb(214,193,9)"/><text x="39.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1796" width="2" height="15" fill="rgb(241,66,21)"/><text x="39.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1812" width="2" height="15" fill="rgb(207,28,32)"/><text x="39.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1828" width="2" height="15" fill="rgb(234,202,48)"/><text x="39.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="36" y="1844" width="2" height="15" fill="rgb(210,169,24)"/><text x="39.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1860" width="2" height="15" fill="rgb(229,115,47)"/><text x="39.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.16%)</title><rect x="36" y="1876" width="2" height="15" fill="rgb(208,30,3)"/><text x="39.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1892" width="2" height="15" fill="rgb(233,182,45)"/><text x="39.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1908" width="2" height="15" fill="rgb(215,26,6)"/><text x="39.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1924" width="2" height="15" fill="rgb(211,122,11)"/><text x="39.00" y="1934.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1940" width="2" height="15" fill="rgb(245,8,54)"/><text x="39.00" y="1950.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="36" y="1956" width="2" height="15" fill="rgb(221,35,35)"/><text x="39.00" y="1966.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 1.63%)</title><rect x="21" y="340" width="19" height="15" fill="rgb(210,150,23)"/><text x="24.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.47%)</title><rect x="23" y="356" width="17" height="15" fill="rgb(211,208,6)"/><text x="26.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.47%)</title><rect x="23" y="372" width="17" height="15" fill="rgb(242,203,21)"/><text x="26.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.47%)</title><rect x="23" y="388" width="17" height="15" fill="rgb(253,181,16)"/><text x="26.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 1.47%)</title><rect x="23" y="404" width="17" height="15" fill="rgb(229,21,50)"/><text x="26.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.47%)</title><rect x="23" y="420" width="17" height="15" fill="rgb(242,15,34)"/><text x="26.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 1.47%)</title><rect x="23" y="436" width="17" height="15" fill="rgb(244,143,36)"/><text x="26.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.47%)</title><rect x="23" y="452" width="17" height="15" fill="rgb(238,56,20)"/><text x="26.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 1.47%)</title><rect x="23" y="468" width="17" height="15" fill="rgb(246,160,31)"/><text x="26.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="484" width="5" height="15" fill="rgb(229,159,35)"/><text x="38.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="35" y="500" width="5" height="15" fill="rgb(252,133,0)"/><text x="38.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="516" width="5" height="15" fill="rgb(228,80,26)"/><text x="38.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 0.49%)</title><rect x="35" y="532" width="5" height="15" fill="rgb(221,55,1)"/><text x="38.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="548" width="5" height="15" fill="rgb(254,188,10)"/><text x="38.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="564" width="5" height="15" fill="rgb(248,118,35)"/><text x="38.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="580" width="5" height="15" fill="rgb(232,79,35)"/><text x="38.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="35" y="596" width="5" height="15" fill="rgb(252,185,44)"/><text x="38.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="612" width="5" height="15" fill="rgb(253,114,40)"/><text x="38.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 0.49%)</title><rect x="35" y="628" width="5" height="15" fill="rgb(227,179,11)"/><text x="38.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="644" width="5" height="15" fill="rgb(228,3,35)"/><text x="38.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="660" width="5" height="15" fill="rgb(234,20,23)"/><text x="38.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="676" width="5" height="15" fill="rgb(250,169,9)"/><text x="38.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="35" y="692" width="5" height="15" fill="rgb(205,60,22)"/><text x="38.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="708" width="5" height="15" fill="rgb(246,203,23)"/><text x="38.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 0.49%)</title><rect x="35" y="724" width="5" height="15" fill="rgb(253,33,32)"/><text x="38.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="740" width="5" height="15" fill="rgb(227,52,9)"/><text x="38.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="756" width="5" height="15" fill="rgb(243,62,45)"/><text x="38.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="772" width="5" height="15" fill="rgb(243,67,21)"/><text x="38.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="35" y="788" width="5" height="15" fill="rgb(231,218,11)"/><text x="38.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="804" width="5" height="15" fill="rgb(206,114,53)"/><text x="38.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 0.49%)</title><rect x="35" y="820" width="5" height="15" fill="rgb(229,181,23)"/><text x="38.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="836" width="5" height="15" fill="rgb(220,121,30)"/><text x="38.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="852" width="5" height="15" fill="rgb(237,50,54)"/><text x="38.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="868" width="5" height="15" fill="rgb(211,137,0)"/><text x="38.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="35" y="884" width="5" height="15" fill="rgb(245,153,25)"/><text x="38.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="900" width="5" height="15" fill="rgb(208,203,26)"/><text x="38.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 0.49%)</title><rect x="35" y="916" width="5" height="15" fill="rgb(238,219,43)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="35" y="932" width="5" height="15" fill="rgb(229,22,3)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(205,105,41)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(211,88,35)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(223,20,37)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(244,201,40)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (2 samples, 0.33%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(224,155,12)"/><text x="39.00" y="1022.50"></text></g><g><title>add_special_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.16%)</title><rect x="38" y="1028" width="2" height="15" fill="rgb(221,126,31)"/><text x="41.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.16%)</title><rect x="38" y="1044" width="2" height="15" fill="rgb(248,109,10)"/><text x="41.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.16%)</title><rect x="38" y="1060" width="2" height="15" fill="rgb(209,167,5)"/><text x="41.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.16%)</title><rect x="38" y="1076" width="2" height="15" fill="rgb(212,169,43)"/><text x="41.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.16%)</title><rect x="38" y="1092" width="2" height="15" fill="rgb(212,168,40)"/><text x="41.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.16%)</title><rect x="38" y="1108" width="2" height="15" fill="rgb(254,205,44)"/><text x="41.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.16%)</title><rect x="38" y="1124" width="2" height="15" fill="rgb(246,31,53)"/><text x="41.00" y="1134.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.16%)</title><rect x="40" y="964" width="2" height="15" fill="rgb(240,2,37)"/><text x="43.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="980" width="2" height="15" fill="rgb(219,12,49)"/><text x="43.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="996" width="2" height="15" fill="rgb(227,215,52)"/><text x="43.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1012" width="2" height="15" fill="rgb(253,165,38)"/><text x="43.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="40" y="1028" width="2" height="15" fill="rgb(218,9,46)"/><text x="43.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1044" width="2" height="15" fill="rgb(226,213,22)"/><text x="43.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.16%)</title><rect x="40" y="1060" width="2" height="15" fill="rgb(252,169,11)"/><text x="43.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1076" width="2" height="15" fill="rgb(252,106,5)"/><text x="43.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1092" width="2" height="15" fill="rgb(254,147,22)"/><text x="43.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1108" width="2" height="15" fill="rgb(249,118,16)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1124" width="2" height="15" fill="rgb(240,151,42)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1140" width="2" height="15" fill="rgb(254,164,4)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1156" width="2" height="15" fill="rgb(205,43,2)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="40" y="1172" width="2" height="15" fill="rgb(230,224,5)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1188" width="2" height="15" fill="rgb(237,98,44)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.16%)</title><rect x="40" y="1204" width="2" height="15" fill="rgb(234,78,27)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1220" width="2" height="15" fill="rgb(242,223,51)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1236" width="2" height="15" fill="rgb(221,145,43)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1252" width="2" height="15" fill="rgb(216,85,47)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="40" y="1268" width="2" height="15" fill="rgb(239,159,23)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1284" width="2" height="15" fill="rgb(235,214,19)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.16%)</title><rect x="40" y="1300" width="2" height="15" fill="rgb(226,148,27)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1316" width="2" height="15" fill="rgb(216,115,50)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1332" width="2" height="15" fill="rgb(228,179,18)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1348" width="2" height="15" fill="rgb(228,211,7)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="40" y="1364" width="2" height="15" fill="rgb(241,196,47)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="40" y="1380" width="2" height="15" fill="rgb(231,118,1)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.16%)</title><rect x="40" y="1396" width="2" height="15" fill="rgb(210,130,33)"/><text x="43.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="40" y="1412" width="2" height="15" fill="rgb(236,199,12)"/><text x="43.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="40" y="1428" width="2" height="15" fill="rgb(237,120,41)"/><text x="43.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="40" y="1444" width="2" height="15" fill="rgb(244,2,16)"/><text x="43.00" y="1454.50"></text></g><g><title>_code (sre_compile.py) (1 samples, 0.16%)</title><rect x="40" y="1460" width="2" height="15" fill="rgb(212,100,34)"/><text x="43.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="40" y="1476" width="2" height="15" fill="rgb(231,14,48)"/><text x="43.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="40" y="1492" width="2" height="15" fill="rgb(213,156,32)"/><text x="43.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="40" y="1508" width="2" height="15" fill="rgb(247,45,26)"/><text x="43.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="40" y="1524" width="2" height="15" fill="rgb(249,27,34)"/><text x="43.00" y="1534.50"></text></g><g><title>__getitem__ (sre_parse.py) (1 samples, 0.16%)</title><rect x="40" y="1540" width="2" height="15" fill="rgb(211,192,46)"/><text x="43.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="788" width="4" height="15" fill="rgb(220,140,34)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="804" width="4" height="15" fill="rgb(251,167,16)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="820" width="4" height="15" fill="rgb(216,138,35)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="40" y="836" width="4" height="15" fill="rgb(233,228,32)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="852" width="4" height="15" fill="rgb(223,164,12)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (2 samples, 0.33%)</title><rect x="40" y="868" width="4" height="15" fill="rgb(214,101,29)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="884" width="4" height="15" fill="rgb(229,150,45)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="900" width="4" height="15" fill="rgb(227,15,2)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="916" width="4" height="15" fill="rgb(252,180,50)"/><text x="43.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.33%)</title><rect x="40" y="932" width="4" height="15" fill="rgb(242,193,2)"/><text x="43.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.33%)</title><rect x="40" y="948" width="4" height="15" fill="rgb(223,130,4)"/><text x="43.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/poolmanager.py) (1 samples, 0.16%)</title><rect x="42" y="964" width="2" height="15" fill="rgb(242,69,15)"/><text x="45.00" y="974.50"></text></g><g><title>namedtuple (collections/__init__.py) (1 samples, 0.16%)</title><rect x="42" y="980" width="2" height="15" fill="rgb(206,164,10)"/><text x="45.00" y="990.50"></text></g><g><title>unicode_new (python3.7) (1 samples, 0.16%)</title><rect x="42" y="996" width="2" height="15" fill="rgb(223,198,1)"/><text x="45.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (13 samples, 2.12%)</title><rect x="21" y="244" width="25" height="15" fill="rgb(225,32,12)"/><text x="24.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.12%)</title><rect x="21" y="260" width="25" height="15" fill="rgb(246,123,37)"/><text x="24.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.12%)</title><rect x="21" y="276" width="25" height="15" fill="rgb(246,127,28)"/><text x="24.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.12%)</title><rect x="21" y="292" width="25" height="15" fill="rgb(234,198,25)"/><text x="24.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 2.12%)</title><rect x="21" y="308" width="25" height="15" fill="rgb(229,1,0)"/><text x="24.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 2.12%)</title><rect x="21" y="324" width="25" height="15" fill="rgb(205,81,18)"/><text x="24.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.49%)</title><rect x="40" y="340" width="6" height="15" fill="rgb(247,63,26)"/><text x="43.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="356" width="6" height="15" fill="rgb(241,197,36)"/><text x="43.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="372" width="6" height="15" fill="rgb(211,18,44)"/><text x="43.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="388" width="6" height="15" fill="rgb(205,163,2)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="404" width="6" height="15" fill="rgb(217,77,39)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="420" width="6" height="15" fill="rgb(231,225,14)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="436" width="6" height="15" fill="rgb(207,137,12)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="40" y="452" width="6" height="15" fill="rgb(206,175,24)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="468" width="6" height="15" fill="rgb(233,178,31)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.49%)</title><rect x="40" y="484" width="6" height="15" fill="rgb(239,161,38)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="500" width="6" height="15" fill="rgb(241,105,8)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="516" width="6" height="15" fill="rgb(248,0,4)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="532" width="6" height="15" fill="rgb(231,203,46)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="40" y="548" width="6" height="15" fill="rgb(253,40,31)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="564" width="6" height="15" fill="rgb(222,228,52)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (3 samples, 0.49%)</title><rect x="40" y="580" width="6" height="15" fill="rgb(230,14,1)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="596" width="6" height="15" fill="rgb(219,1,32)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="612" width="6" height="15" fill="rgb(217,86,15)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="628" width="6" height="15" fill="rgb(242,114,8)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="40" y="644" width="6" height="15" fill="rgb(235,120,6)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="660" width="6" height="15" fill="rgb(206,75,9)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (3 samples, 0.49%)</title><rect x="40" y="676" width="6" height="15" fill="rgb(250,12,53)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="692" width="6" height="15" fill="rgb(227,169,38)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="708" width="6" height="15" fill="rgb(212,77,39)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="724" width="6" height="15" fill="rgb(206,208,32)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.49%)</title><rect x="40" y="740" width="6" height="15" fill="rgb(254,37,42)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.49%)</title><rect x="40" y="756" width="6" height="15" fill="rgb(225,225,38)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (3 samples, 0.49%)</title><rect x="40" y="772" width="6" height="15" fill="rgb(229,90,51)"/><text x="43.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="788" width="2" height="15" fill="rgb(213,197,49)"/><text x="47.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="804" width="2" height="15" fill="rgb(216,105,17)"/><text x="47.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="820" width="2" height="15" fill="rgb(221,41,13)"/><text x="47.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="836" width="2" height="15" fill="rgb(206,140,32)"/><text x="47.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="852" width="2" height="15" fill="rgb(221,228,29)"/><text x="47.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="44" y="868" width="2" height="15" fill="rgb(246,211,46)"/><text x="47.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="884" width="2" height="15" fill="rgb(226,165,45)"/><text x="47.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.16%)</title><rect x="44" y="900" width="2" height="15" fill="rgb(240,4,45)"/><text x="47.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="916" width="2" height="15" fill="rgb(220,5,47)"/><text x="47.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="932" width="2" height="15" fill="rgb(227,166,32)"/><text x="47.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="948" width="2" height="15" fill="rgb(232,213,19)"/><text x="47.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="44" y="964" width="2" height="15" fill="rgb(240,71,50)"/><text x="47.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="980" width="2" height="15" fill="rgb(221,106,43)"/><text x="47.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.16%)</title><rect x="44" y="996" width="2" height="15" fill="rgb(230,118,48)"/><text x="47.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1012" width="2" height="15" fill="rgb(237,172,41)"/><text x="47.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1028" width="2" height="15" fill="rgb(218,32,45)"/><text x="47.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1044" width="2" height="15" fill="rgb(236,143,27)"/><text x="47.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="44" y="1060" width="2" height="15" fill="rgb(236,212,31)"/><text x="47.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1076" width="2" height="15" fill="rgb(238,125,42)"/><text x="47.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.16%)</title><rect x="44" y="1092" width="2" height="15" fill="rgb(227,33,52)"/><text x="47.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1108" width="2" height="15" fill="rgb(235,195,43)"/><text x="47.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1124" width="2" height="15" fill="rgb(212,47,9)"/><text x="47.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1140" width="2" height="15" fill="rgb(252,73,54)"/><text x="47.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="44" y="1156" width="2" height="15" fill="rgb(207,206,0)"/><text x="47.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="44" y="1172" width="2" height="15" fill="rgb(234,199,24)"/><text x="47.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/ed25519.py) (1 samples, 0.16%)</title><rect x="44" y="1188" width="2" height="15" fill="rgb(227,92,11)"/><text x="47.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.16%)</title><rect x="44" y="1204" width="2" height="15" fill="rgb(247,109,20)"/><text x="47.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.16%)</title><rect x="44" y="1220" width="2" height="15" fill="rgb(244,134,11)"/><text x="47.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="260" width="2" height="15" fill="rgb(221,75,14)"/><text x="49.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="276" width="2" height="15" fill="rgb(215,226,13)"/><text x="49.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="292" width="2" height="15" fill="rgb(239,8,25)"/><text x="49.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="46" y="308" width="2" height="15" fill="rgb(249,189,9)"/><text x="49.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="324" width="2" height="15" fill="rgb(241,0,4)"/><text x="49.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.16%)</title><rect x="46" y="340" width="2" height="15" fill="rgb(227,194,35)"/><text x="49.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="356" width="2" height="15" fill="rgb(254,75,13)"/><text x="49.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="372" width="2" height="15" fill="rgb(223,33,40)"/><text x="49.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="388" width="2" height="15" fill="rgb(235,117,31)"/><text x="49.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="46" y="404" width="2" height="15" fill="rgb(240,117,21)"/><text x="49.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="420" width="2" height="15" fill="rgb(245,84,26)"/><text x="49.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.16%)</title><rect x="46" y="436" width="2" height="15" fill="rgb(244,120,48)"/><text x="49.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="452" width="2" height="15" fill="rgb(242,98,27)"/><text x="49.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="468" width="2" height="15" fill="rgb(233,84,54)"/><text x="49.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="484" width="2" height="15" fill="rgb(231,199,6)"/><text x="49.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="46" y="500" width="2" height="15" fill="rgb(215,181,54)"/><text x="49.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="46" y="516" width="2" height="15" fill="rgb(247,193,41)"/><text x="49.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.16%)</title><rect x="46" y="532" width="2" height="15" fill="rgb(211,137,0)"/><text x="49.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.43%)</title><rect x="10" y="68" width="40" height="15" fill="rgb(228,100,25)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.43%)</title><rect x="10" y="84" width="40" height="15" fill="rgb(216,17,17)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.43%)</title><rect x="10" y="100" width="40" height="15" fill="rgb(239,115,45)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 3.43%)</title><rect x="10" y="116" width="40" height="15" fill="rgb(238,119,15)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.43%)</title><rect x="10" y="132" width="40" height="15" fill="rgb(237,80,45)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neighbors/KNeighborsRegressor/bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3.py) (21 samples, 3.43%)</title><rect x="10" y="148" width="40" height="15" fill="rgb(250,172,30)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.43%)</title><rect x="10" y="164" width="40" height="15" fill="rgb(223,25,42)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 3.43%)</title><rect x="10" y="180" width="40" height="15" fill="rgb(227,45,30)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.45%)</title><rect x="21" y="196" width="29" height="15" fill="rgb(253,130,22)"/><text x="24.00" y="206.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 2.45%)</title><rect x="21" y="212" width="29" height="15" fill="rgb(234,188,14)"/><text x="24.00" y="222.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 2.45%)</title><rect x="21" y="228" width="29" height="15" fill="rgb(207,156,18)"/><text x="24.00" y="238.50">_c..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.33%)</title><rect x="46" y="244" width="4" height="15" fill="rgb(247,119,23)"/><text x="49.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="260" width="2" height="15" fill="rgb(252,40,17)"/><text x="51.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="276" width="2" height="15" fill="rgb(210,42,8)"/><text x="51.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="292" width="2" height="15" fill="rgb(245,109,48)"/><text x="51.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="308" width="2" height="15" fill="rgb(220,20,24)"/><text x="51.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="324" width="2" height="15" fill="rgb(251,15,13)"/><text x="51.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="48" y="340" width="2" height="15" fill="rgb(247,182,40)"/><text x="51.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="356" width="2" height="15" fill="rgb(209,13,18)"/><text x="51.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py) (1 samples, 0.16%)</title><rect x="48" y="372" width="2" height="15" fill="rgb(235,88,10)"/><text x="51.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="388" width="2" height="15" fill="rgb(233,143,21)"/><text x="51.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="404" width="2" height="15" fill="rgb(227,88,26)"/><text x="51.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="420" width="2" height="15" fill="rgb(248,84,18)"/><text x="51.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="436" width="2" height="15" fill="rgb(253,175,25)"/><text x="51.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="452" width="2" height="15" fill="rgb(213,7,51)"/><text x="51.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="48" y="468" width="2" height="15" fill="rgb(223,156,51)"/><text x="51.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="484" width="2" height="15" fill="rgb(234,194,20)"/><text x="51.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_internal.py) (1 samples, 0.16%)</title><rect x="48" y="500" width="2" height="15" fill="rgb(206,4,37)"/><text x="51.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="516" width="2" height="15" fill="rgb(208,140,47)"/><text x="51.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="532" width="2" height="15" fill="rgb(219,59,7)"/><text x="51.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="548" width="2" height="15" fill="rgb(232,99,39)"/><text x="51.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.16%)</title><rect x="48" y="564" width="2" height="15" fill="rgb(235,5,20)"/><text x="51.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="48" y="580" width="2" height="15" fill="rgb(215,89,46)"/><text x="51.00" y="590.50"></text></g><g><title>&lt;module&gt; (platform.py) (1 samples, 0.16%)</title><rect x="48" y="596" width="2" height="15" fill="rgb(254,198,52)"/><text x="51.00" y="606.50"></text></g><g><title>compile (re.py) (1 samples, 0.16%)</title><rect x="48" y="612" width="2" height="15" fill="rgb(221,112,36)"/><text x="51.00" y="622.50"></text></g><g><title>_compile (re.py) (1 samples, 0.16%)</title><rect x="48" y="628" width="2" height="15" fill="rgb(244,64,45)"/><text x="51.00" y="638.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.16%)</title><rect x="48" y="644" width="2" height="15" fill="rgb(207,201,48)"/><text x="51.00" y="654.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="48" y="660" width="2" height="15" fill="rgb(211,211,38)"/><text x="51.00" y="670.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="48" y="676" width="2" height="15" fill="rgb(217,5,25)"/><text x="51.00" y="686.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="48" y="692" width="2" height="15" fill="rgb(232,92,5)"/><text x="51.00" y="702.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.16%)</title><rect x="48" y="708" width="2" height="15" fill="rgb(212,27,54)"/><text x="51.00" y="718.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.16%)</title><rect x="48" y="724" width="2" height="15" fill="rgb(224,67,47)"/><text x="51.00" y="734.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.16%)</title><rect x="48" y="740" width="2" height="15" fill="rgb(242,210,17)"/><text x="51.00" y="750.50"></text></g><g><title>0x7f6f87bb5ff9 (?) (1 samples, 0.16%)</title><rect x="54" y="212" width="2" height="15" fill="rgb(231,78,39)"/><text x="57.00" y="222.50"></text></g><g><title>0x7f6f87bb0ef6 (?) (1 samples, 0.16%)</title><rect x="54" y="228" width="2" height="15" fill="rgb(211,50,3)"/><text x="57.00" y="238.50"></text></g><g><title>0x7f6f87ba5962 (?) (1 samples, 0.16%)</title><rect x="54" y="244" width="2" height="15" fill="rgb(241,66,5)"/><text x="57.00" y="254.50"></text></g><g><title>0x7f6f87bd97a7 (?) (1 samples, 0.16%)</title><rect x="54" y="260" width="2" height="15" fill="rgb(207,35,13)"/><text x="57.00" y="270.50"></text></g><g><title>0x7f6f87bd9379 (?) (1 samples, 0.16%)</title><rect x="54" y="276" width="2" height="15" fill="rgb(213,94,21)"/><text x="57.00" y="286.50"></text></g><g><title>0x7f6f880378b8 (?) (1 samples, 0.16%)</title><rect x="54" y="292" width="2" height="15" fill="rgb(205,200,40)"/><text x="57.00" y="302.50"></text></g><g><title>0x7f6f88035c7f (?) (1 samples, 0.16%)</title><rect x="54" y="308" width="2" height="15" fill="rgb(205,193,5)"/><text x="57.00" y="318.50"></text></g><g><title>0x7f6f8804899c (?) (1 samples, 0.16%)</title><rect x="54" y="324" width="2" height="15" fill="rgb(245,135,44)"/><text x="57.00" y="334.50"></text></g><g><title>0x7f6f87d00e79 (?) (1 samples, 0.16%)</title><rect x="54" y="340" width="2" height="15" fill="rgb(240,36,5)"/><text x="57.00" y="350.50"></text></g><g><title>0x7f6f87cff02c (?) (1 samples, 0.16%)</title><rect x="54" y="356" width="2" height="15" fill="rgb(237,143,9)"/><text x="57.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (1 samples, 0.16%)</title><rect x="56" y="212" width="2" height="15" fill="rgb(227,186,46)"/><text x="59.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="56" y="228" width="2" height="15" fill="rgb(237,166,30)"/><text x="59.00" y="238.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="58" y="340" width="2" height="15" fill="rgb(234,31,42)"/><text x="61.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelInfo::node (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="58" y="356" width="2" height="15" fill="rgb(224,73,33)"/><text x="61.00" y="366.50"></text></g><g><title>0x7f6fc9b82b87 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="331" y="372" width="2" height="15" fill="rgb(226,119,39)"/><text x="334.00" y="382.50"></text></g><g><title>0x7f6fc9b82d28 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="333" y="372" width="2" height="15" fill="rgb(252,161,2)"/><text x="336.00" y="382.50"></text></g><g><title>0x7f6fc9d54e8d (libm-2.29.so) (1 samples, 0.16%)</title><rect x="335" y="372" width="2" height="15" fill="rgb(206,131,40)"/><text x="338.00" y="382.50"></text></g><g><title>0x7f6fc9d54ea2 (libm-2.29.so) (2 samples, 0.33%)</title><rect x="337" y="372" width="4" height="15" fill="rgb(215,111,31)"/><text x="340.00" y="382.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (5 samples, 0.82%)</title><rect x="341" y="372" width="9" height="15" fill="rgb(236,164,28)"/><text x="344.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (5 samples, 0.82%)</title><rect x="341" y="388" width="9" height="15" fill="rgb(211,217,35)"/><text x="344.00" y="398.50"></text></g><g><title>0x7f6fc9b83b24 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="348" y="404" width="2" height="15" fill="rgb(228,143,24)"/><text x="351.00" y="414.50"></text></g><g><title>std::__insertion_sort&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.65%)</title><rect x="350" y="372" width="8" height="15" fill="rgb(230,175,7)"/><text x="353.00" y="382.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (158 samples, 25.77%)</title><rect x="60" y="340" width="304" height="15" fill="rgb(233,201,42)"/><text x="63.00" y="350.50">onnxruntime::TopK&lt;11, float&gt;::Compute (o..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (158 samples, 25.77%)</title><rect x="60" y="356" width="304" height="15" fill="rgb(225,144,53)"/><text x="63.00" y="366.50">onnxruntime::TopKImpl (onnxruntime/capi/..</text></g><g><title>std::__move_median_to_first&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::LesserValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.49%)</title><rect x="358" y="372" width="6" height="15" fill="rgb(235,201,18)"/><text x="361.00" y="382.50"></text></g><g><title>profile_ort (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (164 samples, 26.75%)</title><rect x="50" y="68" width="316" height="15" fill="rgb(249,217,28)"/><text x="53.00" y="78.50">profile_ort (bench_KNeighborsRegressor_def..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (164 samples, 26.75%)</title><rect x="50" y="84" width="316" height="15" fill="rgb(246,48,38)"/><text x="53.00" y="94.50">setup_profile (bench_KNeighborsRegressor_d..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (164 samples, 26.75%)</title><rect x="50" y="100" width="316" height="15" fill="rgb(246,227,13)"/><text x="53.00" y="110.50">profile (bench_KNeighborsRegressor_default..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (164 samples, 26.75%)</title><rect x="50" y="116" width="316" height="15" fill="rgb(252,78,44)"/><text x="53.00" y="126.50">time_predict (mlprodict/asv_benchmark/comm..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (164 samples, 26.75%)</title><rect x="50" y="132" width="316" height="15" fill="rgb(240,31,35)"/><text x="53.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_a..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (164 samples, 26.75%)</title><rect x="50" y="148" width="316" height="15" fill="rgb(250,36,7)"/><text x="53.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (164 samples, 26.75%)</title><rect x="50" y="164" width="316" height="15" fill="rgb(239,35,12)"/><text x="53.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (162 samples, 26.43%)</title><rect x="54" y="180" width="312" height="15" fill="rgb(210,27,25)"/><text x="57.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (162 samples, 26.43%)</title><rect x="54" y="196" width="312" height="15" fill="rgb(218,219,12)"/><text x="57.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="212" width="308" height="15" fill="rgb(211,89,53)"/><text x="61.00" y="222.50">pybind11::cpp_function::dispatcher (onnxr..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="228" width="308" height="15" fill="rgb(250,164,18)"/><text x="61.00" y="238.50">void pybind11::cpp_function::initialize&lt;o..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="244" width="308" height="15" fill="rgb(252,136,19)"/><text x="61.00" y="254.50">onnxruntime::python::addObjectMethods(pyb..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="260" width="308" height="15" fill="rgb(207,107,46)"/><text x="61.00" y="270.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="276" width="308" height="15" fill="rgb(235,123,50)"/><text x="61.00" y="286.50">onnxruntime::InferenceSession::Run (onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="292" width="308" height="15" fill="rgb(221,9,44)"/><text x="61.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="308" width="308" height="15" fill="rgb(243,143,43)"/><text x="61.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (160 samples, 26.10%)</title><rect x="58" y="324" width="308" height="15" fill="rgb(206,152,36)"/><text x="61.00" y="334.50">onnxruntime::SequentialExecutor::Execute ..</text></g><g><title>onnxruntime::contrib::CDist&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="364" y="340" width="2" height="15" fill="rgb(213,194,22)"/><text x="367.00" y="350.50"></text></g><g><title>onnxruntime::contrib::cdist&lt;float, onnxruntime::Euclidean&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="364" y="356" width="2" height="15" fill="rgb(252,31,23)"/><text x="367.00" y="366.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="364" y="372" width="2" height="15" fill="rgb(213,5,30)"/><text x="367.00" y="382.50"></text></g><g><title>Eigen::ThreadPoolDevice::parallelFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.16%)</title><rect x="364" y="388" width="2" height="15" fill="rgb(223,83,7)"/><text x="367.00" y="398.50"></text></g><g><title>std::condition_variable::wait (libstdc++.so.6.0.28) (1 samples, 0.16%)</title><rect x="364" y="404" width="2" height="15" fill="rgb(239,85,26)"/><text x="367.00" y="414.50"></text></g><g><title>__pthread_cond_wait (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="364" y="420" width="2" height="15" fill="rgb(242,228,25)"/><text x="367.00" y="430.50"></text></g><g><title>PyArray_ToList (convert.c) (1 samples, 0.16%)</title><rect x="383" y="228" width="2" height="15" fill="rgb(238,66,37)"/><text x="386.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.16%)</title><rect x="383" y="244" width="2" height="15" fill="rgb(219,83,16)"/><text x="386.00" y="254.50"></text></g><g><title>recursive_tolist (convert.c) (1 samples, 0.16%)</title><rect x="383" y="260" width="2" height="15" fill="rgb(213,81,29)"/><text x="386.00" y="270.50"></text></g><g><title>0x7f6fc9b82902 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="385" y="244" width="2" height="15" fill="rgb(226,27,8)"/><text x="388.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (1 samples, 0.16%)</title><rect x="387" y="244" width="2" height="15" fill="rgb(229,215,28)"/><text x="390.00" y="254.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="387" y="260" width="2" height="15" fill="rgb(223,203,27)"/><text x="390.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="387" y="276" width="2" height="15" fill="rgb(216,12,34)"/><text x="390.00" y="286.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.16%)</title><rect x="387" y="292" width="2" height="15" fill="rgb(237,201,40)"/><text x="390.00" y="302.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c) (4 samples, 0.65%)</title><rect x="389" y="276" width="7" height="15" fill="rgb(222,154,38)"/><text x="392.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c) (4 samples, 0.65%)</title><rect x="389" y="292" width="7" height="15" fill="rgb(249,129,46)"/><text x="392.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (3 samples, 0.49%)</title><rect x="391" y="308" width="5" height="15" fill="rgb(235,59,49)"/><text x="394.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (3 samples, 0.49%)</title><rect x="391" y="324" width="5" height="15" fill="rgb(232,193,28)"/><text x="394.00" y="334.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src) (2 samples, 0.33%)</title><rect x="393" y="340" width="3" height="15" fill="rgb(248,100,35)"/><text x="396.00" y="350.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.16%)</title><rect x="406" y="340" width="2" height="15" fill="rgb(221,73,41)"/><text x="409.00" y="350.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.16%)</title><rect x="421" y="356" width="2" height="15" fill="rgb(238,205,34)"/><text x="424.00" y="366.50"></text></g><g><title>PyArray_DTypeFromObject (common.c) (15 samples, 2.45%)</title><rect x="396" y="292" width="29" height="15" fill="rgb(208,116,20)"/><text x="399.00" y="302.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (15 samples, 2.45%)</title><rect x="396" y="308" width="29" height="15" fill="rgb(239,225,8)"/><text x="399.00" y="318.50">Py..</text></g><g><title>PyArray_DTypeFromObjectHelper (common.c) (15 samples, 2.45%)</title><rect x="396" y="324" width="29" height="15" fill="rgb(212,75,26)"/><text x="399.00" y="334.50">Py..</text></g><g><title>_array_find_python_scalar_type (common.c) (9 samples, 1.47%)</title><rect x="408" y="340" width="17" height="15" fill="rgb(209,168,50)"/><text x="411.00" y="350.50"></text></g><g><title>PyInt_Check (npy_3kcompat.h) (1 samples, 0.16%)</title><rect x="423" y="356" width="2" height="15" fill="rgb(215,83,33)"/><text x="426.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (28 samples, 4.57%)</title><rect x="383" y="212" width="54" height="15" fill="rgb(206,122,37)"/><text x="386.00" y="222.50">_run ..</text></g><g><title>array_subscript (mapping.c) (27 samples, 4.40%)</title><rect x="385" y="228" width="52" height="15" fill="rgb(231,200,51)"/><text x="388.00" y="238.50">array..</text></g><g><title>prepare_index (mapping.c) (25 samples, 4.08%)</title><rect x="389" y="244" width="48" height="15" fill="rgb(250,218,1)"/><text x="392.00" y="254.50">prep..</text></g><g><title>PyArray_FromAny (ctors.c) (25 samples, 4.08%)</title><rect x="389" y="260" width="48" height="15" fill="rgb(245,177,42)"/><text x="392.00" y="270.50">PyAr..</text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (21 samples, 3.43%)</title><rect x="396" y="276" width="41" height="15" fill="rgb(210,160,18)"/><text x="399.00" y="286.50">PyA..</text></g><g><title>discover_dimensions (ctors.c) (6 samples, 0.98%)</title><rect x="425" y="292" width="12" height="15" fill="rgb(246,226,11)"/><text x="428.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (5 samples, 0.82%)</title><rect x="427" y="308" width="10" height="15" fill="rgb(237,26,28)"/><text x="430.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_flatten.py) (1 samples, 0.16%)</title><rect x="437" y="212" width="2" height="15" fill="rgb(231,171,50)"/><text x="440.00" y="222.50"></text></g><g><title>prod (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="437" y="228" width="2" height="15" fill="rgb(224,169,4)"/><text x="440.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="437" y="244" width="2" height="15" fill="rgb(222,121,30)"/><text x="440.00" y="254.50"></text></g><g><title>prod (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="437" y="260" width="2" height="15" fill="rgb(252,217,4)"/><text x="440.00" y="270.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py) (1 samples, 0.16%)</title><rect x="437" y="276" width="2" height="15" fill="rgb(212,186,10)"/><text x="440.00" y="286.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (1 samples, 0.16%)</title><rect x="437" y="292" width="2" height="15" fill="rgb(227,70,18)"/><text x="440.00" y="302.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (1 samples, 0.16%)</title><rect x="437" y="308" width="2" height="15" fill="rgb(232,97,41)"/><text x="440.00" y="318.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (1 samples, 0.16%)</title><rect x="437" y="324" width="2" height="15" fill="rgb(242,164,5)"/><text x="440.00" y="334.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c) (1 samples, 0.16%)</title><rect x="437" y="340" width="2" height="15" fill="rgb(236,27,44)"/><text x="440.00" y="350.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 0.16%)</title><rect x="441" y="244" width="2" height="15" fill="rgb(251,197,15)"/><text x="444.00" y="254.50"></text></g><g><title>0x7f6fc9b98730 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="441" y="260" width="2" height="15" fill="rgb(249,148,46)"/><text x="444.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.49%)</title><rect x="439" y="212" width="6" height="15" fill="rgb(246,44,36)"/><text x="442.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.49%)</title><rect x="439" y="228" width="6" height="15" fill="rgb(215,130,53)"/><text x="442.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.16%)</title><rect x="443" y="244" width="2" height="15" fill="rgb(232,192,19)"/><text x="446.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.16%)</title><rect x="443" y="260" width="2" height="15" fill="rgb(210,147,1)"/><text x="446.00" y="270.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.16%)</title><rect x="443" y="276" width="2" height="15" fill="rgb(240,198,20)"/><text x="446.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="443" y="292" width="2" height="15" fill="rgb(216,170,43)"/><text x="446.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="443" y="308" width="2" height="15" fill="rgb(212,215,51)"/><text x="446.00" y="318.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_shape.py) (1 samples, 0.16%)</title><rect x="445" y="212" width="1" height="15" fill="rgb(245,173,13)"/><text x="448.00" y="222.50"></text></g><g><title>argpartition (numpy/core/fromnumeric.py) (79 samples, 12.89%)</title><rect x="448" y="292" width="152" height="15" fill="rgb(210,202,45)"/><text x="451.00" y="302.50">argpartition (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (79 samples, 12.89%)</title><rect x="448" y="308" width="152" height="15" fill="rgb(207,59,37)"/><text x="451.00" y="318.50">_wrapfunc (numpy/co..</text></g><g><title>array_argpartition (methods.c) (79 samples, 12.89%)</title><rect x="448" y="324" width="152" height="15" fill="rgb(209,68,38)"/><text x="451.00" y="334.50">array_argpartition ..</text></g><g><title>PyArray_ArgPartition (item_selection.c) (78 samples, 12.72%)</title><rect x="450" y="340" width="150" height="15" fill="rgb(229,77,39)"/><text x="453.00" y="350.50">PyArray_ArgPartitio..</text></g><g><title>_new_argsortlike (item_selection.c) (78 samples, 12.72%)</title><rect x="450" y="356" width="150" height="15" fill="rgb(211,44,40)"/><text x="453.00" y="366.50">_new_argsortlike (i..</text></g><g><title>aintroselect_float (selection.c.src) (67 samples, 10.93%)</title><rect x="471" y="372" width="129" height="15" fill="rgb(243,100,0)"/><text x="474.00" y="382.50">aintroselect_flo..</text></g><g><title>adumb_select_float (selection.c.src) (66 samples, 10.77%)</title><rect x="473" y="388" width="127" height="15" fill="rgb(254,143,20)"/><text x="476.00" y="398.50">adumb_select_fl..</text></g><g><title>FLOAT_LT (npysort_common.h) (48 samples, 7.83%)</title><rect x="508" y="404" width="92" height="15" fill="rgb(252,190,16)"/><text x="511.00" y="414.50">FLOAT_LT (..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (80 samples, 13.05%)</title><rect x="448" y="260" width="154" height="15" fill="rgb(247,183,27)"/><text x="451.00" y="270.50">argpartition (&lt;__ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (80 samples, 13.05%)</title><rect x="448" y="276" width="154" height="15" fill="rgb(239,110,25)"/><text x="451.00" y="286.50">array_implement_arr..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="600" y="292" width="2" height="15" fill="rgb(243,157,39)"/><text x="603.00" y="302.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (5 samples, 0.82%)</title><rect x="602" y="260" width="10" height="15" fill="rgb(231,11,22)"/><text x="605.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (5 samples, 0.82%)</title><rect x="602" y="276" width="10" height="15" fill="rgb(219,106,45)"/><text x="605.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (5 samples, 0.82%)</title><rect x="602" y="292" width="10" height="15" fill="rgb(210,138,43)"/><text x="605.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.82%)</title><rect x="602" y="308" width="10" height="15" fill="rgb(207,98,21)"/><text x="605.00" y="318.50"></text></g><g><title>array_argsort (methods.c) (5 samples, 0.82%)</title><rect x="602" y="324" width="10" height="15" fill="rgb(217,69,49)"/><text x="605.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (4 samples, 0.65%)</title><rect x="604" y="340" width="8" height="15" fill="rgb(228,31,0)"/><text x="607.00" y="350.50"></text></g><g><title>_new_argsortlike (item_selection.c) (4 samples, 0.65%)</title><rect x="604" y="356" width="8" height="15" fill="rgb(234,214,31)"/><text x="607.00" y="366.50"></text></g><g><title>aquicksort_float (quicksort.c.src) (2 samples, 0.33%)</title><rect x="608" y="372" width="4" height="15" fill="rgb(205,60,4)"/><text x="611.00" y="382.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (3 samples, 0.49%)</title><rect x="612" y="276" width="6" height="15" fill="rgb(245,95,20)"/><text x="615.00" y="286.50"></text></g><g><title>check_and_adjust_index (common.h) (2 samples, 0.33%)</title><rect x="614" y="292" width="4" height="15" fill="rgb(212,129,32)"/><text x="617.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (97 samples, 15.82%)</title><rect x="446" y="212" width="187" height="15" fill="rgb(214,117,24)"/><text x="449.00" y="222.50">_run (mlprodict/onnxrt/o..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (97 samples, 15.82%)</title><rect x="446" y="228" width="187" height="15" fill="rgb(236,10,26)"/><text x="449.00" y="238.50">_common_run (mlprodict/o..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py) (97 samples, 15.82%)</title><rect x="446" y="244" width="187" height="15" fill="rgb(216,12,5)"/><text x="449.00" y="254.50">topk_sorted_implementati..</text></g><g><title>array_subscript (mapping.c) (11 samples, 1.79%)</title><rect x="612" y="260" width="21" height="15" fill="rgb(236,88,39)"/><text x="615.00" y="270.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (8 samples, 1.31%)</title><rect x="618" y="276" width="15" height="15" fill="rgb(221,204,22)"/><text x="621.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.16%)</title><rect x="633" y="212" width="2" height="15" fill="rgb(221,222,4)"/><text x="636.00" y="222.50"></text></g><g><title>array_astype (methods.c) (7 samples, 1.14%)</title><rect x="637" y="244" width="14" height="15" fill="rgb(247,147,48)"/><text x="640.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (7 samples, 1.14%)</title><rect x="637" y="260" width="14" height="15" fill="rgb(251,138,53)"/><text x="640.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (7 samples, 1.14%)</title><rect x="637" y="276" width="14" height="15" fill="rgb(248,112,35)"/><text x="640.00" y="286.50"></text></g><g><title>_aligned_contig_cast_double_to_float (lowlevel_strided_loops.c.src) (7 samples, 1.14%)</title><rect x="637" y="292" width="14" height="15" fill="rgb(236,57,53)"/><text x="640.00" y="302.50"></text></g><g><title>0x7f6fa6da86cf (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.65%)</title><rect x="652" y="260" width="8" height="15" fill="rgb(230,61,12)"/><text x="655.00" y="270.50"></text></g><g><title>0x7f6fa6da86e0 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.82%)</title><rect x="660" y="260" width="10" height="15" fill="rgb(207,183,9)"/><text x="663.00" y="270.50"></text></g><g><title>0x7f6fa6da86ef (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.49%)</title><rect x="670" y="260" width="6" height="15" fill="rgb(216,136,34)"/><text x="673.00" y="270.50"></text></g><g><title>0x7f6fa6da86fe (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.14%)</title><rect x="676" y="260" width="13" height="15" fill="rgb(234,189,45)"/><text x="679.00" y="270.50"></text></g><g><title>0x7f6fa6da8710 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="689" y="260" width="4" height="15" fill="rgb(205,148,15)"/><text x="692.00" y="270.50"></text></g><g><title>0x7f6fa6da8720 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.16%)</title><rect x="693" y="260" width="2" height="15" fill="rgb(209,161,31)"/><text x="696.00" y="270.50"></text></g><g><title>0x7f6fa6da8730 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.33%)</title><rect x="695" y="260" width="4" height="15" fill="rgb(224,172,52)"/><text x="698.00" y="270.50"></text></g><g><title>0x7f6fa6da89f9 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (4 samples, 0.65%)</title><rect x="699" y="260" width="7" height="15" fill="rgb(209,173,28)"/><text x="702.00" y="270.50"></text></g><g><title>0x7f6fa6da89fd (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (11 samples, 1.79%)</title><rect x="706" y="260" width="22" height="15" fill="rgb(250,181,51)"/><text x="709.00" y="270.50">0..</text></g><g><title>0x7f6fa6da8a03 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (5 samples, 0.82%)</title><rect x="728" y="260" width="9" height="15" fill="rgb(210,66,26)"/><text x="731.00" y="270.50"></text></g><g><title>0x7f6fa6da8a12 (scipy/spatial/_distance_wrap.cpython-37m-x86_64-linux-gnu.so) (8 samples, 1.31%)</title><rect x="737" y="260" width="16" height="15" fill="rgb(234,29,44)"/><text x="740.00" y="270.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="753" y="436" width="1" height="15" fill="rgb(250,224,1)"/><text x="756.00" y="446.50"></text></g><g><title>_validate_cdist_input (scipy/spatial/distance.py) (2 samples, 0.33%)</title><rect x="753" y="260" width="3" height="15" fill="rgb(249,222,46)"/><text x="756.00" y="270.50"></text></g><g><title>_convert_to_type (scipy/spatial/distance.py) (2 samples, 0.33%)</title><rect x="753" y="276" width="3" height="15" fill="rgb(209,160,4)"/><text x="756.00" y="286.50"></text></g><g><title>ascontiguousarray (numpy/core/_asarray.py) (2 samples, 0.33%)</title><rect x="753" y="292" width="3" height="15" fill="rgb(205,1,9)"/><text x="756.00" y="302.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (2 samples, 0.33%)</title><rect x="753" y="308" width="3" height="15" fill="rgb(229,175,38)"/><text x="756.00" y="318.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="324" width="3" height="15" fill="rgb(218,31,7)"/><text x="756.00" y="334.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="340" width="3" height="15" fill="rgb(238,75,29)"/><text x="756.00" y="350.50"></text></g><g><title>PyArray_FromArray (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="356" width="3" height="15" fill="rgb(211,159,16)"/><text x="756.00" y="366.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="372" width="3" height="15" fill="rgb(213,91,31)"/><text x="756.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="388" width="3" height="15" fill="rgb(253,154,22)"/><text x="756.00" y="398.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="404" width="3" height="15" fill="rgb(249,202,3)"/><text x="756.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.33%)</title><rect x="753" y="420" width="3" height="15" fill="rgb(250,149,38)"/><text x="756.00" y="430.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="754" y="436" width="2" height="15" fill="rgb(247,129,7)"/><text x="757.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.16%)</title><rect x="754" y="452" width="2" height="15" fill="rgb(240,227,45)"/><text x="757.00" y="462.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cdist.py) (64 samples, 10.44%)</title><rect x="635" y="228" width="123" height="15" fill="rgb(214,16,29)"/><text x="638.00" y="238.50">_run (mlprodict..</text></g><g><title>cdist (scipy/spatial/distance.py) (56 samples, 9.14%)</title><rect x="651" y="244" width="107" height="15" fill="rgb(228,98,13)"/><text x="654.00" y="254.50">cdist (scipy/..</text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="756" y="260" width="2" height="15" fill="rgb(223,59,18)"/><text x="759.00" y="270.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.16%)</title><rect x="756" y="276" width="2" height="15" fill="rgb(223,172,31)"/><text x="759.00" y="286.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.16%)</title><rect x="756" y="292" width="2" height="15" fill="rgb(230,177,16)"/><text x="759.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="756" y="308" width="2" height="15" fill="rgb(253,87,31)"/><text x="759.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="756" y="324" width="2" height="15" fill="rgb(244,94,23)"/><text x="759.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.16%)</title><rect x="760" y="308" width="2" height="15" fill="rgb(226,65,43)"/><text x="763.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="760" y="324" width="2" height="15" fill="rgb(236,213,40)"/><text x="763.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.16%)</title><rect x="760" y="340" width="2" height="15" fill="rgb(217,184,17)"/><text x="763.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.16%)</title><rect x="760" y="356" width="2" height="15" fill="rgb(237,31,53)"/><text x="763.00" y="366.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="762" y="324" width="2" height="15" fill="rgb(208,127,24)"/><text x="765.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="762" y="340" width="2" height="15" fill="rgb(250,142,17)"/><text x="765.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="762" y="356" width="2" height="15" fill="rgb(242,100,44)"/><text x="765.00" y="366.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.16%)</title><rect x="762" y="372" width="2" height="15" fill="rgb(223,209,12)"/><text x="765.00" y="382.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.16%)</title><rect x="762" y="388" width="2" height="15" fill="rgb(207,221,39)"/><text x="765.00" y="398.50"></text></g><g><title>NpyIter_GetIterNext (nditer_templ.c.src) (1 samples, 0.16%)</title><rect x="764" y="372" width="2" height="15" fill="rgb(218,71,52)"/><text x="767.00" y="382.50"></text></g><g><title>profile_pyrt (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (209 samples, 34.09%)</title><rect x="366" y="68" width="402" height="15" fill="rgb(225,133,40)"/><text x="369.00" y="78.50">profile_pyrt (bench_KNeighborsRegressor_default_k3_b_r..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (209 samples, 34.09%)</title><rect x="366" y="84" width="402" height="15" fill="rgb(248,39,12)"/><text x="369.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (209 samples, 34.09%)</title><rect x="366" y="100" width="402" height="15" fill="rgb(222,103,40)"/><text x="369.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_al..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (209 samples, 34.09%)</title><rect x="366" y="116" width="402" height="15" fill="rgb(229,30,45)"/><text x="369.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.p..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (208 samples, 33.93%)</title><rect x="368" y="132" width="400" height="15" fill="rgb(228,97,26)"/><text x="371.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (208 samples, 33.93%)</title><rect x="368" y="148" width="400" height="15" fill="rgb(225,27,21)"/><text x="371.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (208 samples, 33.93%)</title><rect x="368" y="164" width="400" height="15" fill="rgb(235,135,54)"/><text x="371.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (205 samples, 33.44%)</title><rect x="373" y="180" width="395" height="15" fill="rgb(231,32,24)"/><text x="376.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (201 samples, 32.79%)</title><rect x="381" y="196" width="387" height="15" fill="rgb(253,61,12)"/><text x="384.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (69 samples, 11.26%)</title><rect x="635" y="212" width="133" height="15" fill="rgb(215,112,20)"/><text x="638.00" y="222.50">run (mlprodict/o..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reduce_mean.py) (5 samples, 0.82%)</title><rect x="758" y="228" width="10" height="15" fill="rgb(229,128,11)"/><text x="761.00" y="238.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;) (5 samples, 0.82%)</title><rect x="758" y="244" width="10" height="15" fill="rgb(244,200,26)"/><text x="761.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.65%)</title><rect x="760" y="260" width="8" height="15" fill="rgb(224,191,33)"/><text x="763.00" y="270.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (4 samples, 0.65%)</title><rect x="760" y="276" width="8" height="15" fill="rgb(243,212,23)"/><text x="763.00" y="286.50"></text></g><g><title>_mean (numpy/core/_methods.py) (4 samples, 0.65%)</title><rect x="760" y="292" width="8" height="15" fill="rgb(221,163,39)"/><text x="763.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (3 samples, 0.49%)</title><rect x="762" y="308" width="6" height="15" fill="rgb(216,76,0)"/><text x="765.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (2 samples, 0.33%)</title><rect x="764" y="324" width="4" height="15" fill="rgb(217,161,3)"/><text x="767.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (2 samples, 0.33%)</title><rect x="764" y="340" width="4" height="15" fill="rgb(219,71,0)"/><text x="767.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (2 samples, 0.33%)</title><rect x="764" y="356" width="4" height="15" fill="rgb(208,80,36)"/><text x="767.00" y="366.50"></text></g><g><title>reduce_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="766" y="372" width="2" height="15" fill="rgb(243,183,31)"/><text x="769.00" y="382.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.16%)</title><rect x="768" y="164" width="2" height="15" fill="rgb(235,201,40)"/><text x="771.00" y="174.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.16%)</title><rect x="768" y="180" width="2" height="15" fill="rgb(223,145,17)"/><text x="771.00" y="190.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.49%)</title><rect x="770" y="164" width="6" height="15" fill="rgb(253,214,28)"/><text x="773.00" y="174.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (3 samples, 0.49%)</title><rect x="770" y="180" width="6" height="15" fill="rgb(241,113,43)"/><text x="773.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="778" y="180" width="1" height="15" fill="rgb(254,196,1)"/><text x="781.00" y="190.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="778" y="196" width="1" height="15" fill="rgb(234,105,10)"/><text x="781.00" y="206.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="779" y="180" width="2" height="15" fill="rgb(205,10,2)"/><text x="782.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="781" y="180" width="2" height="15" fill="rgb(212,85,40)"/><text x="784.00" y="190.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.16%)</title><rect x="783" y="180" width="2" height="15" fill="rgb(219,204,43)"/><text x="786.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (6 samples, 0.98%)</title><rect x="776" y="164" width="11" height="15" fill="rgb(220,227,38)"/><text x="779.00" y="174.50"></text></g><g><title>simplefilter (warnings.py) (1 samples, 0.16%)</title><rect x="785" y="180" width="2" height="15" fill="rgb(250,12,17)"/><text x="788.00" y="190.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.16%)</title><rect x="785" y="196" width="2" height="15" fill="rgb(206,201,45)"/><text x="788.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="793" y="196" width="2" height="15" fill="rgb(205,204,44)"/><text x="796.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.16%)</title><rect x="793" y="212" width="2" height="15" fill="rgb(208,90,26)"/><text x="796.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (3 samples, 0.49%)</title><rect x="795" y="196" width="6" height="15" fill="rgb(227,57,26)"/><text x="798.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (6 samples, 0.98%)</title><rect x="793" y="180" width="12" height="15" fill="rgb(253,133,51)"/><text x="796.00" y="190.50"></text></g><g><title>simplefilter (warnings.py) (2 samples, 0.33%)</title><rect x="801" y="196" width="4" height="15" fill="rgb(225,72,14)"/><text x="804.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 0.16%)</title><rect x="803" y="212" width="2" height="15" fill="rgb(215,215,51)"/><text x="806.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.49%)</title><rect x="805" y="180" width="5" height="15" fill="rgb(220,39,52)"/><text x="808.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="808" y="196" width="2" height="15" fill="rgb(222,11,10)"/><text x="811.00" y="206.50"></text></g><g><title>0x7f6fc9ba3120 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="808" y="212" width="2" height="15" fill="rgb(243,210,40)"/><text x="811.00" y="222.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (2 samples, 0.33%)</title><rect x="810" y="180" width="4" height="15" fill="rgb(254,149,4)"/><text x="813.00" y="190.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.33%)</title><rect x="810" y="196" width="4" height="15" fill="rgb(223,49,2)"/><text x="813.00" y="206.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.16%)</title><rect x="812" y="212" width="2" height="15" fill="rgb(219,131,44)"/><text x="815.00" y="222.50"></text></g><g><title>_check_chunk_size (sklearn/metrics/pairwise.py) (5 samples, 0.82%)</title><rect x="816" y="196" width="10" height="15" fill="rgb(245,61,52)"/><text x="819.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/metrics/pairwise.py) (4 samples, 0.65%)</title><rect x="818" y="212" width="8" height="15" fill="rgb(220,76,20)"/><text x="821.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (4 samples, 0.65%)</title><rect x="818" y="228" width="8" height="15" fill="rgb(231,34,24)"/><text x="821.00" y="238.50"></text></g><g><title>PyArray_ArgPartition (item_selection.c) (78 samples, 12.72%)</title><rect x="826" y="292" width="150" height="15" fill="rgb(221,16,36)"/><text x="829.00" y="302.50">PyArray_ArgPartitio..</text></g><g><title>_new_argsortlike (item_selection.c) (78 samples, 12.72%)</title><rect x="826" y="308" width="150" height="15" fill="rgb(211,42,28)"/><text x="829.00" y="318.50">_new_argsortlike (i..</text></g><g><title>aintroselect_double (selection.c.src) (70 samples, 11.42%)</title><rect x="841" y="324" width="135" height="15" fill="rgb(227,186,10)"/><text x="844.00" y="334.50">aintroselect_doub..</text></g><g><title>adumb_select_double (selection.c.src) (69 samples, 11.26%)</title><rect x="843" y="340" width="133" height="15" fill="rgb(231,32,0)"/><text x="846.00" y="350.50">adumb_select_dou..</text></g><g><title>DOUBLE_LT (npysort_common.h) (44 samples, 7.18%)</title><rect x="891" y="356" width="85" height="15" fill="rgb(243,155,51)"/><text x="894.00" y="366.50">DOUBLE_LT ..</text></g><g><title>argpartition (&lt;__array_function__ internals&gt;) (79 samples, 12.89%)</title><rect x="826" y="212" width="152" height="15" fill="rgb(237,108,24)"/><text x="829.00" y="222.50">argpartition (&lt;__ar..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (79 samples, 12.89%)</title><rect x="826" y="228" width="152" height="15" fill="rgb(215,71,50)"/><text x="829.00" y="238.50">array_implement_arr..</text></g><g><title>argpartition (numpy/core/fromnumeric.py) (79 samples, 12.89%)</title><rect x="826" y="244" width="152" height="15" fill="rgb(232,139,48)"/><text x="829.00" y="254.50">argpartition (numpy..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (79 samples, 12.89%)</title><rect x="826" y="260" width="152" height="15" fill="rgb(230,23,24)"/><text x="829.00" y="270.50">_wrapfunc (numpy/co..</text></g><g><title>array_argpartition (methods.c) (79 samples, 12.89%)</title><rect x="826" y="276" width="152" height="15" fill="rgb(205,66,28)"/><text x="829.00" y="286.50">array_argpartition ..</text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.16%)</title><rect x="976" y="292" width="2" height="15" fill="rgb(229,93,2)"/><text x="979.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="976" y="308" width="2" height="15" fill="rgb(213,177,17)"/><text x="979.00" y="318.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="976" y="324" width="2" height="15" fill="rgb(251,45,35)"/><text x="979.00" y="334.50"></text></g><g><title>PyArray_ArgSort (item_selection.c) (3 samples, 0.49%)</title><rect x="982" y="292" width="5" height="15" fill="rgb(232,67,11)"/><text x="985.00" y="302.50"></text></g><g><title>_new_argsortlike (item_selection.c) (3 samples, 0.49%)</title><rect x="982" y="308" width="5" height="15" fill="rgb(208,117,52)"/><text x="985.00" y="318.50"></text></g><g><title>aquicksort_double (quicksort.c.src) (1 samples, 0.16%)</title><rect x="985" y="324" width="2" height="15" fill="rgb(208,114,24)"/><text x="988.00" y="334.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (6 samples, 0.98%)</title><rect x="978" y="212" width="11" height="15" fill="rgb(235,220,28)"/><text x="981.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 0.98%)</title><rect x="978" y="228" width="11" height="15" fill="rgb(239,50,39)"/><text x="981.00" y="238.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (6 samples, 0.98%)</title><rect x="978" y="244" width="11" height="15" fill="rgb(243,84,18)"/><text x="981.00" y="254.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (5 samples, 0.82%)</title><rect x="980" y="260" width="9" height="15" fill="rgb(229,129,48)"/><text x="983.00" y="270.50"></text></g><g><title>array_argsort (methods.c) (4 samples, 0.65%)</title><rect x="982" y="276" width="7" height="15" fill="rgb(248,103,5)"/><text x="985.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.16%)</title><rect x="987" y="292" width="2" height="15" fill="rgb(251,182,31)"/><text x="990.00" y="302.50"></text></g><g><title>array_arange (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="989" y="212" width="2" height="15" fill="rgb(232,107,2)"/><text x="992.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c) (1 samples, 0.16%)</title><rect x="989" y="228" width="2" height="15" fill="rgb(219,63,34)"/><text x="992.00" y="238.50"></text></g><g><title>_calc_length (ctors.c) (1 samples, 0.16%)</title><rect x="989" y="244" width="2" height="15" fill="rgb(216,204,45)"/><text x="992.00" y="254.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c) (1 samples, 0.16%)</title><rect x="991" y="228" width="2" height="15" fill="rgb(212,41,4)"/><text x="994.00" y="238.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.16%)</title><rect x="991" y="244" width="2" height="15" fill="rgb(217,149,44)"/><text x="994.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c) (3 samples, 0.49%)</title><rect x="993" y="244" width="6" height="15" fill="rgb(206,226,5)"/><text x="996.00" y="254.50"></text></g><g><title>NpyIter_Reset (nditer_api.c) (3 samples, 0.49%)</title><rect x="993" y="260" width="6" height="15" fill="rgb(247,196,39)"/><text x="996.00" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (3 samples, 0.49%)</title><rect x="993" y="276" width="6" height="15" fill="rgb(232,117,14)"/><text x="996.00" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (3 samples, 0.49%)</title><rect x="993" y="292" width="6" height="15" fill="rgb(232,67,44)"/><text x="996.00" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (2 samples, 0.33%)</title><rect x="995" y="308" width="4" height="15" fill="rgb(232,152,10)"/><text x="998.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="999" y="276" width="2" height="15" fill="rgb(212,87,22)"/><text x="1002.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c) (2 samples, 0.33%)</title><rect x="999" y="244" width="4" height="15" fill="rgb(233,205,53)"/><text x="1002.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.33%)</title><rect x="999" y="260" width="4" height="15" fill="rgb(236,8,22)"/><text x="1002.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1001" y="276" width="2" height="15" fill="rgb(215,212,23)"/><text x="1004.00" y="286.50"></text></g><g><title>PyArray_MapIterNew (mapping.c) (6 samples, 0.98%)</title><rect x="993" y="228" width="12" height="15" fill="rgb(226,78,18)"/><text x="996.00" y="238.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1003" y="244" width="2" height="15" fill="rgb(209,100,39)"/><text x="1006.00" y="254.50"></text></g><g><title>0x7f6fc9b840ed (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1003" y="260" width="2" height="15" fill="rgb(226,229,20)"/><text x="1006.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (8 samples, 1.31%)</title><rect x="991" y="212" width="16" height="15" fill="rgb(218,99,17)"/><text x="994.00" y="222.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1005" y="228" width="2" height="15" fill="rgb(211,14,42)"/><text x="1008.00" y="238.50"></text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.16%)</title><rect x="1005" y="244" width="2" height="15" fill="rgb(253,23,46)"/><text x="1008.00" y="254.50"></text></g><g><title>_get_bufsize_errmask (extobj.c) (1 samples, 0.16%)</title><rect x="1007" y="244" width="2" height="15" fill="rgb(253,102,38)"/><text x="1010.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1009" y="244" width="1" height="15" fill="rgb(227,45,20)"/><text x="1012.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.16%)</title><rect x="1009" y="260" width="1" height="15" fill="rgb(209,18,43)"/><text x="1012.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.16%)</title><rect x="1009" y="276" width="1" height="15" fill="rgb(208,76,14)"/><text x="1012.00" y="286.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1009" y="292" width="1" height="15" fill="rgb(235,208,30)"/><text x="1012.00" y="302.50"></text></g><g><title>_kneighbors_reduce_func (sklearn/neighbors/_base.py) (97 samples, 15.82%)</title><rect x="826" y="196" width="186" height="15" fill="rgb(238,158,34)"/><text x="829.00" y="206.50">_kneighbors_reduce_func ..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1007" y="212" width="5" height="15" fill="rgb(250,218,19)"/><text x="1010.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1007" y="228" width="5" height="15" fill="rgb(245,196,36)"/><text x="1010.00" y="238.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1010" y="244" width="2" height="15" fill="rgb(243,184,12)"/><text x="1013.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.16%)</title><rect x="1012" y="196" width="2" height="15" fill="rgb(205,129,14)"/><text x="1015.00" y="206.50"></text></g><g><title>gen_batches (sklearn/utils/__init__.py) (1 samples, 0.16%)</title><rect x="1014" y="196" width="2" height="15" fill="rgb(241,210,21)"/><text x="1017.00" y="206.50"></text></g><g><title>0x7f6fc9b98e7a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1016" y="260" width="2" height="15" fill="rgb(207,7,34)"/><text x="1019.00" y="270.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (2 samples, 0.33%)</title><rect x="1016" y="228" width="4" height="15" fill="rgb(245,115,26)"/><text x="1019.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (2 samples, 0.33%)</title><rect x="1016" y="244" width="4" height="15" fill="rgb(228,108,42)"/><text x="1019.00" y="254.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.16%)</title><rect x="1018" y="260" width="2" height="15" fill="rgb(218,146,46)"/><text x="1021.00" y="270.50"></text></g><g><title>_mm_mul_pd (emmintrin.h) (2 samples, 0.33%)</title><rect x="1022" y="356" width="4" height="15" fill="rgb(216,205,2)"/><text x="1025.00" y="366.50"></text></g><g><title>array_multiply (number.c) (3 samples, 0.49%)</title><rect x="1022" y="244" width="6" height="15" fill="rgb(237,70,32)"/><text x="1025.00" y="254.50"></text></g><g><title>try_binary_elide (temp_elide.c) (3 samples, 0.49%)</title><rect x="1022" y="260" width="6" height="15" fill="rgb(210,63,0)"/><text x="1025.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1022" y="276" width="6" height="15" fill="rgb(242,14,28)"/><text x="1025.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1022" y="292" width="6" height="15" fill="rgb(207,51,54)"/><text x="1025.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1022" y="308" width="6" height="15" fill="rgb(230,112,51)"/><text x="1025.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1022" y="324" width="6" height="15" fill="rgb(210,29,29)"/><text x="1025.00" y="334.50"></text></g><g><title>sse2_binary_scalar2_multiply_DOUBLE (simd.inc.src) (3 samples, 0.49%)</title><rect x="1022" y="340" width="6" height="15" fill="rgb(245,163,41)"/><text x="1025.00" y="350.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.16%)</title><rect x="1026" y="356" width="2" height="15" fill="rgb(250,43,32)"/><text x="1029.00" y="366.50"></text></g><g><title>__init__ (warnings.py) (1 samples, 0.16%)</title><rect x="1030" y="276" width="2" height="15" fill="rgb(241,133,16)"/><text x="1033.00" y="286.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (1 samples, 0.16%)</title><rect x="1032" y="276" width="2" height="15" fill="rgb(244,148,38)"/><text x="1035.00" y="286.50"></text></g><g><title>get_config (sklearn/_config.py) (1 samples, 0.16%)</title><rect x="1032" y="292" width="2" height="15" fill="rgb(248,25,53)"/><text x="1035.00" y="302.50"></text></g><g><title>check_pairwise_arrays (sklearn/metrics/pairwise.py) (4 samples, 0.65%)</title><rect x="1028" y="244" width="8" height="15" fill="rgb(207,127,29)"/><text x="1031.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 0.49%)</title><rect x="1030" y="260" width="6" height="15" fill="rgb(217,29,12)"/><text x="1033.00" y="270.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.16%)</title><rect x="1034" y="276" width="2" height="15" fill="rgb(207,8,26)"/><text x="1037.00" y="286.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1037" y="340" width="2" height="15" fill="rgb(230,149,10)"/><text x="1040.00" y="350.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1037" y="356" width="2" height="15" fill="rgb(220,88,9)"/><text x="1040.00" y="366.50"></text></g><g><title>PyArray_AssignZero (convert.c) (1 samples, 0.16%)</title><rect x="1039" y="340" width="2" height="15" fill="rgb(249,202,45)"/><text x="1042.00" y="350.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.16%)</title><rect x="1039" y="356" width="2" height="15" fill="rgb(211,93,4)"/><text x="1042.00" y="366.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.16%)</title><rect x="1039" y="372" width="2" height="15" fill="rgb(215,29,20)"/><text x="1042.00" y="382.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.16%)</title><rect x="1039" y="388" width="2" height="15" fill="rgb(249,167,22)"/><text x="1042.00" y="398.50"></text></g><g><title>row_norms (sklearn/utils/extmath.py) (5 samples, 0.82%)</title><rect x="1036" y="244" width="9" height="15" fill="rgb(218,199,33)"/><text x="1039.00" y="254.50"></text></g><g><title>einsum (&lt;__array_function__ internals&gt;) (4 samples, 0.65%)</title><rect x="1037" y="260" width="8" height="15" fill="rgb(230,163,32)"/><text x="1040.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (4 samples, 0.65%)</title><rect x="1037" y="276" width="8" height="15" fill="rgb(230,52,51)"/><text x="1040.00" y="286.50"></text></g><g><title>einsum (numpy/core/einsumfunc.py) (4 samples, 0.65%)</title><rect x="1037" y="292" width="8" height="15" fill="rgb(207,149,48)"/><text x="1040.00" y="302.50"></text></g><g><title>array_einsum (multiarraymodule.c) (4 samples, 0.65%)</title><rect x="1037" y="308" width="8" height="15" fill="rgb(221,20,35)"/><text x="1040.00" y="318.50"></text></g><g><title>PyArray_EinsteinSum (einsum.c.src) (4 samples, 0.65%)</title><rect x="1037" y="324" width="8" height="15" fill="rgb(232,171,39)"/><text x="1040.00" y="334.50"></text></g><g><title>unbuffered_loop_nop2_ndim2 (einsum.c.src) (2 samples, 0.33%)</title><rect x="1041" y="340" width="4" height="15" fill="rgb(224,50,0)"/><text x="1044.00" y="350.50"></text></g><g><title>dgemm_beta_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.33%)</title><rect x="1045" y="260" width="4" height="15" fill="rgb(221,133,9)"/><text x="1048.00" y="270.50"></text></g><g><title>dgemm_kernel_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="1049" y="260" width="2" height="15" fill="rgb(211,8,27)"/><text x="1052.00" y="270.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 0.98%)</title><rect x="1053" y="388" width="11" height="15" fill="rgb(227,220,16)"/><text x="1056.00" y="398.50"></text></g><g><title>sched_yield (libc-2.29.so) (6 samples, 0.98%)</title><rect x="1053" y="404" width="11" height="15" fill="rgb(223,220,32)"/><text x="1056.00" y="414.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (8 samples, 1.31%)</title><rect x="1051" y="308" width="15" height="15" fill="rgb(222,147,31)"/><text x="1054.00" y="318.50"></text></g><g><title>cblas_dgemm (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.14%)</title><rect x="1053" y="324" width="13" height="15" fill="rgb(227,42,38)"/><text x="1056.00" y="334.50"></text></g><g><title>dgemm_thread_tn (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.14%)</title><rect x="1053" y="340" width="13" height="15" fill="rgb(239,105,2)"/><text x="1056.00" y="350.50"></text></g><g><title>gemm_driver (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.14%)</title><rect x="1053" y="356" width="13" height="15" fill="rgb(216,170,50)"/><text x="1056.00" y="366.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (7 samples, 1.14%)</title><rect x="1053" y="372" width="13" height="15" fill="rgb(232,155,47)"/><text x="1056.00" y="382.50"></text></g><g><title>inner_thread (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.16%)</title><rect x="1064" y="388" width="2" height="15" fill="rgb(252,149,25)"/><text x="1067.00" y="398.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (12 samples, 1.96%)</title><rect x="1045" y="244" width="23" height="15" fill="rgb(227,23,16)"/><text x="1048.00" y="254.50">s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (9 samples, 1.47%)</title><rect x="1051" y="260" width="17" height="15" fill="rgb(240,106,17)"/><text x="1054.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 1.47%)</title><rect x="1051" y="276" width="17" height="15" fill="rgb(250,104,18)"/><text x="1054.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (9 samples, 1.47%)</title><rect x="1051" y="292" width="17" height="15" fill="rgb(234,184,23)"/><text x="1054.00" y="302.50"></text></g><g><title>_validate_num_dims (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1066" y="308" width="2" height="15" fill="rgb(240,92,25)"/><text x="1069.00" y="318.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (10 samples, 1.63%)</title><rect x="1072" y="356" width="19" height="15" fill="rgb(206,98,49)"/><text x="1075.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (17 samples, 2.77%)</title><rect x="1070" y="308" width="33" height="15" fill="rgb(206,191,36)"/><text x="1073.00" y="318.50">DO..</text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (17 samples, 2.77%)</title><rect x="1070" y="324" width="33" height="15" fill="rgb(225,206,35)"/><text x="1073.00" y="334.50">ru..</text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (17 samples, 2.77%)</title><rect x="1070" y="340" width="33" height="15" fill="rgb(234,187,46)"/><text x="1073.00" y="350.50">ss..</text></g><g><title>_mm_store_pd (emmintrin.h) (6 samples, 0.98%)</title><rect x="1091" y="356" width="12" height="15" fill="rgb(229,91,14)"/><text x="1094.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1103" y="308" width="2" height="15" fill="rgb(238,33,34)"/><text x="1106.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.16%)</title><rect x="1103" y="324" width="2" height="15" fill="rgb(251,88,37)"/><text x="1106.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.16%)</title><rect x="1105" y="308" width="2" height="15" fill="rgb(230,21,30)"/><text x="1108.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.16%)</title><rect x="1105" y="324" width="2" height="15" fill="rgb(234,44,45)"/><text x="1108.00" y="334.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1105" y="340" width="2" height="15" fill="rgb(231,116,44)"/><text x="1108.00" y="350.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1105" y="356" width="2" height="15" fill="rgb(225,101,20)"/><text x="1108.00" y="366.50"></text></g><g><title>0x7f6fc9ba2f36 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1111" y="356" width="2" height="15" fill="rgb(243,165,27)"/><text x="1114.00" y="366.50"></text></g><g><title>0x7f6fc9ba2f3a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1113" y="356" width="1" height="15" fill="rgb(218,147,6)"/><text x="1116.00" y="366.50"></text></g><g><title>0x7f6fc9ba2f4a (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1114" y="356" width="2" height="15" fill="rgb(253,38,36)"/><text x="1117.00" y="366.50"></text></g><g><title>0x7f6fc9ba2f4e (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1116" y="356" width="2" height="15" fill="rgb(233,122,4)"/><text x="1119.00" y="366.50"></text></g><g><title>0x7f6fc9ba2f58 (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1118" y="356" width="2" height="15" fill="rgb(220,207,5)"/><text x="1121.00" y="366.50"></text></g><g><title>0x7f6fc9ba2f5d (libc-2.29.so) (1 samples, 0.16%)</title><rect x="1120" y="356" width="2" height="15" fill="rgb(240,135,13)"/><text x="1123.00" y="366.50"></text></g><g><title>iterator_loop (ufunc_object.c) (34 samples, 5.55%)</title><rect x="1070" y="292" width="66" height="15" fill="rgb(221,224,18)"/><text x="1073.00" y="302.50">iterato..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (15 samples, 2.45%)</title><rect x="1107" y="308" width="29" height="15" fill="rgb(219,88,29)"/><text x="1110.00" y="318.50">np..</text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (14 samples, 2.28%)</title><rect x="1109" y="324" width="27" height="15" fill="rgb(234,148,30)"/><text x="1112.00" y="334.50">n..</text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (14 samples, 2.28%)</title><rect x="1109" y="340" width="27" height="15" fill="rgb(243,219,24)"/><text x="1112.00" y="350.50">P..</text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (7 samples, 1.14%)</title><rect x="1122" y="356" width="14" height="15" fill="rgb(250,87,6)"/><text x="1125.00" y="366.50"></text></g><g><title>pairwise_distances_chunked (sklearn/metrics/pairwise.py) (183 samples, 29.85%)</title><rect x="814" y="180" width="352" height="15" fill="rgb(235,183,33)"/><text x="817.00" y="190.50">pairwise_distances_chunked (sklearn/metrics/pai..</text></g><g><title>pairwise_distances (sklearn/metrics/pairwise.py) (78 samples, 12.72%)</title><rect x="1016" y="196" width="150" height="15" fill="rgb(243,153,2)"/><text x="1019.00" y="206.50">pairwise_distances ..</text></g><g><title>_parallel_pairwise (sklearn/metrics/pairwise.py) (78 samples, 12.72%)</title><rect x="1016" y="212" width="150" height="15" fill="rgb(231,154,45)"/><text x="1019.00" y="222.50">_parallel_pairwise ..</text></g><g><title>euclidean_distances (sklearn/metrics/pairwise.py) (76 samples, 12.40%)</title><rect x="1020" y="228" width="146" height="15" fill="rgb(227,192,19)"/><text x="1023.00" y="238.50">euclidean_distance..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (51 samples, 8.32%)</title><rect x="1068" y="244" width="98" height="15" fill="rgb(214,172,41)"/><text x="1071.00" y="254.50">ufunc_gener..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (51 samples, 8.32%)</title><rect x="1068" y="260" width="98" height="15" fill="rgb(211,62,53)"/><text x="1071.00" y="270.50">PyUFunc_Gen..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (51 samples, 8.32%)</title><rect x="1068" y="276" width="98" height="15" fill="rgb(254,229,27)"/><text x="1071.00" y="286.50">execute_leg..</text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (16 samples, 2.61%)</title><rect x="1136" y="292" width="30" height="15" fill="rgb(222,30,50)"/><text x="1139.00" y="302.50">tr..</text></g><g><title>DOUBLE_maximum (loops.c.src) (16 samples, 2.61%)</title><rect x="1136" y="308" width="30" height="15" fill="rgb(218,34,24)"/><text x="1139.00" y="318.50">DO..</text></g><g><title>kneighbors (sklearn/neighbors/_base.py) (198 samples, 32.30%)</title><rect x="787" y="164" width="381" height="15" fill="rgb(233,98,35)"/><text x="790.00" y="174.50">kneighbors (sklearn/neighbors/_base.py)</text></g><g><title>vstack (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="1166" y="180" width="2" height="15" fill="rgb(224,125,43)"/><text x="1169.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="1166" y="196" width="2" height="15" fill="rgb(214,86,30)"/><text x="1169.00" y="206.50"></text></g><g><title>vstack (numpy/core/shape_base.py) (1 samples, 0.16%)</title><rect x="1166" y="212" width="2" height="15" fill="rgb(243,11,30)"/><text x="1169.00" y="222.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;) (1 samples, 0.16%)</title><rect x="1166" y="228" width="2" height="15" fill="rgb(237,168,17)"/><text x="1169.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.16%)</title><rect x="1166" y="244" width="2" height="15" fill="rgb(237,87,54)"/><text x="1169.00" y="254.50"></text></g><g><title>array_concatenate (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1166" y="260" width="2" height="15" fill="rgb(207,74,22)"/><text x="1169.00" y="270.50"></text></g><g><title>PyArray_ConcatenateInto (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1166" y="276" width="2" height="15" fill="rgb(236,226,37)"/><text x="1169.00" y="286.50"></text></g><g><title>PyArray_ConcatenateArrays (multiarraymodule.c) (1 samples, 0.16%)</title><rect x="1166" y="292" width="2" height="15" fill="rgb(218,52,33)"/><text x="1169.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.16%)</title><rect x="1166" y="308" width="2" height="15" fill="rgb(231,124,0)"/><text x="1169.00" y="318.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 0.16%)</title><rect x="1166" y="324" width="2" height="15" fill="rgb(211,184,32)"/><text x="1169.00" y="334.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.16%)</title><rect x="1166" y="340" width="2" height="15" fill="rgb(241,184,14)"/><text x="1169.00" y="350.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.16%)</title><rect x="1166" y="356" width="2" height="15" fill="rgb(217,29,9)"/><text x="1169.00" y="366.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py) (1 samples, 0.16%)</title><rect x="1172" y="228" width="2" height="15" fill="rgb(216,197,9)"/><text x="1175.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1176" y="260" width="2" height="15" fill="rgb(226,189,3)"/><text x="1179.00" y="270.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.16%)</title><rect x="1176" y="276" width="2" height="15" fill="rgb(247,168,11)"/><text x="1179.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_divide_DOUBLE (simd.inc.src) (1 samples, 0.16%)</title><rect x="1176" y="292" width="2" height="15" fill="rgb(206,191,16)"/><text x="1179.00" y="302.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.16%)</title><rect x="1176" y="308" width="2" height="15" fill="rgb(222,88,17)"/><text x="1179.00" y="318.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1174" y="228" width="6" height="15" fill="rgb(240,5,2)"/><text x="1177.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 0.49%)</title><rect x="1174" y="244" width="6" height="15" fill="rgb(230,211,33)"/><text x="1177.00" y="254.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (1 samples, 0.16%)</title><rect x="1178" y="260" width="2" height="15" fill="rgb(212,165,1)"/><text x="1181.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.16%)</title><rect x="1180" y="244" width="2" height="15" fill="rgb(214,84,37)"/><text x="1183.00" y="254.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.16%)</title><rect x="1180" y="260" width="2" height="15" fill="rgb(205,49,24)"/><text x="1183.00" y="270.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.16%)</title><rect x="1180" y="276" width="2" height="15" fill="rgb(205,29,39)"/><text x="1183.00" y="286.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.16%)</title><rect x="1180" y="292" width="2" height="15" fill="rgb(238,158,41)"/><text x="1183.00" y="302.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.16%)</title><rect x="1180" y="308" width="2" height="15" fill="rgb(212,101,30)"/><text x="1183.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.16%)</title><rect x="1182" y="308" width="2" height="15" fill="rgb(240,128,11)"/><text x="1185.00" y="318.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1182" y="324" width="2" height="15" fill="rgb(245,21,50)"/><text x="1185.00" y="334.50"></text></g><g><title>_aligned_contig_cast_long_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.16%)</title><rect x="1182" y="340" width="2" height="15" fill="rgb(244,122,20)"/><text x="1185.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.33%)</title><rect x="1182" y="292" width="4" height="15" fill="rgb(246,156,49)"/><text x="1185.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.16%)</title><rect x="1184" y="308" width="2" height="15" fill="rgb(206,51,52)"/><text x="1187.00" y="318.50"></text></g><g><title>all (613 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(239,196,1)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (613 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(250,105,53)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py)</text></g><g><title>profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (219 samples, 35.73%)</title><rect x="768" y="68" width="422" height="15" fill="rgb(230,115,43)"/><text x="771.00" y="78.50">profile_skl (bench_KNeighborsRegressor_default_k3_b_reg_a..</text></g><g><title>setup_profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (219 samples, 35.73%)</title><rect x="768" y="84" width="422" height="15" fill="rgb(234,56,47)"/><text x="771.00" y="94.50">setup_profile (bench_KNeighborsRegressor_default_k3_b_reg..</text></g><g><title>profile (bench_KNeighborsRegressor_default_k3_b_reg_algorithmbrute_n_neighbors3_1000_4_12_float_cdist.py) (219 samples, 35.73%)</title><rect x="768" y="100" width="422" height="15" fill="rgb(239,116,47)"/><text x="771.00" y="110.50">profile (bench_KNeighborsRegressor_default_k3_b_reg_algor..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (219 samples, 35.73%)</title><rect x="768" y="116" width="422" height="15" fill="rgb(226,34,33)"/><text x="771.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (219 samples, 35.73%)</title><rect x="768" y="132" width="422" height="15" fill="rgb(232,143,16)"/><text x="771.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neighbors/_regression.py) (219 samples, 35.73%)</title><rect x="768" y="148" width="422" height="15" fill="rgb(226,64,7)"/><text x="771.00" y="158.50">predict (sklearn/neighbors/_regression.py)</text></g><g><title>mean (&lt;__array_function__ internals&gt;) (11 samples, 1.79%)</title><rect x="1168" y="164" width="22" height="15" fill="rgb(232,182,9)"/><text x="1171.00" y="174.50">m..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (10 samples, 1.63%)</title><rect x="1170" y="180" width="20" height="15" fill="rgb(248,42,16)"/><text x="1173.00" y="190.50"></text></g><g><title>mean (numpy/core/fromnumeric.py) (10 samples, 1.63%)</title><rect x="1170" y="196" width="20" height="15" fill="rgb(229,142,42)"/><text x="1173.00" y="206.50"></text></g><g><title>_mean (numpy/core/_methods.py) (10 samples, 1.63%)</title><rect x="1170" y="212" width="20" height="15" fill="rgb(213,134,5)"/><text x="1173.00" y="222.50"></text></g><g><title>ufunc_reduce (ufunc_object.c) (5 samples, 0.82%)</title><rect x="1180" y="228" width="10" height="15" fill="rgb(209,14,17)"/><text x="1183.00" y="238.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (4 samples, 0.65%)</title><rect x="1182" y="244" width="8" height="15" fill="rgb(230,218,21)"/><text x="1185.00" y="254.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c) (4 samples, 0.65%)</title><rect x="1182" y="260" width="8" height="15" fill="rgb(216,137,0)"/><text x="1185.00" y="270.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c) (4 samples, 0.65%)</title><rect x="1182" y="276" width="8" height="15" fill="rgb(218,110,21)"/><text x="1185.00" y="286.50"></text></g><g><title>reduce_loop (ufunc_object.c) (2 samples, 0.33%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(232,105,42)"/><text x="1189.00" y="302.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.33%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(250,9,37)"/><text x="1189.00" y="318.50"></text></g><g><title>pairwise_sum_DOUBLE (loops.c.src) (1 samples, 0.16%)</title><rect x="1188" y="324" width="2" height="15" fill="rgb(219,167,44)"/><text x="1191.00" y="334.50"></text></g></g></svg>