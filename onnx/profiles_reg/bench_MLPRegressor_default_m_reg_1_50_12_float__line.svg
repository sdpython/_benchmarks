<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2358" onload="init(evt)" viewBox="0 0 1200 2358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2358" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2341.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2341.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.26%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(235,110,22)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(225,122,24)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(217,166,36)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(223,82,15)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(214,168,32)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(222,144,53)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(245,12,38)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(240,183,8)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.26%)</title><rect x="10" y="500" width="3" height="15" fill="rgb(229,61,38)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="10" y="516" width="3" height="15" fill="rgb(227,120,34)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="532" width="3" height="15" fill="rgb(212,151,36)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="548" width="3" height="15" fill="rgb(223,30,39)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="564" width="3" height="15" fill="rgb(222,56,53)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="580" width="3" height="15" fill="rgb(222,77,10)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="596" width="3" height="15" fill="rgb(210,176,34)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="612" width="3" height="15" fill="rgb(240,170,54)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:9) (1 samples, 0.26%)</title><rect x="10" y="628" width="3" height="15" fill="rgb(223,143,49)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="644" width="3" height="15" fill="rgb(247,38,7)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="10" y="660" width="3" height="15" fill="rgb(252,209,7)"/><text x="13.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="676" width="3" height="15" fill="rgb(226,117,42)"/><text x="13.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="692" width="3" height="15" fill="rgb(222,106,1)"/><text x="13.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="708" width="3" height="15" fill="rgb(212,116,54)"/><text x="13.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="724" width="3" height="15" fill="rgb(212,40,17)"/><text x="13.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="740" width="3" height="15" fill="rgb(253,227,44)"/><text x="13.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="756" width="3" height="15" fill="rgb(206,216,3)"/><text x="13.00" y="766.50"></text></g><g><title>&lt;module&gt; (numpy/compat/__init__.py:14) (1 samples, 0.26%)</title><rect x="10" y="772" width="3" height="15" fill="rgb(224,141,14)"/><text x="13.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="10" y="788" width="3" height="15" fill="rgb(223,124,42)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="804" width="3" height="15" fill="rgb(249,136,43)"/><text x="13.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="820" width="3" height="15" fill="rgb(211,41,52)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="836" width="3" height="15" fill="rgb(254,144,2)"/><text x="13.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="852" width="3" height="15" fill="rgb(247,49,23)"/><text x="13.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="868" width="3" height="15" fill="rgb(211,32,39)"/><text x="13.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="884" width="3" height="15" fill="rgb(244,214,28)"/><text x="13.00" y="894.50"></text></g><g><title>&lt;module&gt; (numpy/compat/py3k.py:16) (1 samples, 0.26%)</title><rect x="10" y="900" width="3" height="15" fill="rgb(232,198,49)"/><text x="13.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="916" width="3" height="15" fill="rgb(221,211,40)"/><text x="13.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(228,172,9)"/><text x="13.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="948" width="3" height="15" fill="rgb(229,99,20)"/><text x="13.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="964" width="3" height="15" fill="rgb(219,189,23)"/><text x="13.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="980" width="3" height="15" fill="rgb(231,192,48)"/><text x="13.00" y="990.50"></text></g><g><title>&lt;module&gt; (pathlib.py:13) (1 samples, 0.26%)</title><rect x="10" y="996" width="3" height="15" fill="rgb(222,186,29)"/><text x="13.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="10" y="1012" width="3" height="15" fill="rgb(228,31,22)"/><text x="13.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="10" y="1028" width="3" height="15" fill="rgb(216,67,35)"/><text x="13.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="10" y="1044" width="3" height="15" fill="rgb(250,44,54)"/><text x="13.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="10" y="1060" width="3" height="15" fill="rgb(219,45,33)"/><text x="13.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="10" y="1076" width="3" height="15" fill="rgb(238,176,44)"/><text x="13.00" y="1086.50"></text></g><g><title>&lt;module&gt; (urllib/parse.py:237) (1 samples, 0.26%)</title><rect x="10" y="1092" width="3" height="15" fill="rgb(233,14,16)"/><text x="13.00" y="1102.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:1) (2 samples, 0.51%)</title><rect x="10" y="148" width="6" height="15" fill="rgb(252,206,6)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="10" y="164" width="6" height="15" fill="rgb(221,190,10)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="10" y="180" width="6" height="15" fill="rgb(229,96,7)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="10" y="196" width="6" height="15" fill="rgb(222,120,27)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="10" y="212" width="6" height="15" fill="rgb(233,121,11)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="10" y="228" width="6" height="15" fill="rgb(205,120,29)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:142) (2 samples, 0.51%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(213,108,21)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.51%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(244,52,39)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(247,129,10)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(233,118,42)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(245,24,39)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(242,217,18)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(226,25,19)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(243,27,44)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:71) (1 samples, 0.26%)</title><rect x="13" y="372" width="3" height="15" fill="rgb(249,216,36)"/><text x="16.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="13" y="388" width="3" height="15" fill="rgb(249,209,30)"/><text x="16.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="404" width="3" height="15" fill="rgb(226,149,23)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="13" y="420" width="3" height="15" fill="rgb(224,95,25)"/><text x="16.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="13" y="436" width="3" height="15" fill="rgb(252,56,49)"/><text x="16.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="13" y="452" width="3" height="15" fill="rgb(248,171,43)"/><text x="16.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="13" y="468" width="3" height="15" fill="rgb(214,154,49)"/><text x="16.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="484" width="3" height="15" fill="rgb(238,218,11)"/><text x="16.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/numeric.py:2410) (1 samples, 0.26%)</title><rect x="13" y="500" width="3" height="15" fill="rgb(238,38,35)"/><text x="16.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="13" y="516" width="3" height="15" fill="rgb(230,23,34)"/><text x="16.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="532" width="3" height="15" fill="rgb(238,203,27)"/><text x="16.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="13" y="548" width="3" height="15" fill="rgb(209,152,37)"/><text x="16.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="13" y="564" width="3" height="15" fill="rgb(207,213,49)"/><text x="16.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="13" y="580" width="3" height="15" fill="rgb(208,163,20)"/><text x="16.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="13" y="596" width="3" height="15" fill="rgb(237,197,53)"/><text x="16.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="13" y="612" width="3" height="15" fill="rgb(223,193,26)"/><text x="16.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/fromnumeric.py:203) (1 samples, 0.26%)</title><rect x="13" y="628" width="3" height="15" fill="rgb(228,207,18)"/><text x="16.00" y="638.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.26%)</title><rect x="13" y="644" width="3" height="15" fill="rgb(214,151,34)"/><text x="16.00" y="654.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.26%)</title><rect x="16" y="852" width="3" height="15" fill="rgb(230,66,44)"/><text x="19.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.26%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(227,107,35)"/><text x="19.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.26%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(229,45,23)"/><text x="19.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.26%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(250,117,5)"/><text x="19.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.26%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(217,75,31)"/><text x="19.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.26%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(244,10,34)"/><text x="19.00" y="942.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.26%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(221,224,2)"/><text x="19.00" y="958.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.26%)</title><rect x="19" y="852" width="3" height="15" fill="rgb(247,193,21)"/><text x="22.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(230,21,35)"/><text x="22.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(235,18,29)"/><text x="22.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(214,114,31)"/><text x="22.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.26%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(232,115,6)"/><text x="22.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.26%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(252,105,18)"/><text x="22.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.26%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(205,107,53)"/><text x="22.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.26%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(216,177,11)"/><text x="22.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.26%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(228,87,3)"/><text x="22.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.26%)</title><rect x="19" y="996" width="3" height="15" fill="rgb(253,136,50)"/><text x="22.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.26%)</title><rect x="19" y="1012" width="3" height="15" fill="rgb(235,135,27)"/><text x="22.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.26%)</title><rect x="19" y="1028" width="3" height="15" fill="rgb(228,112,39)"/><text x="22.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.26%)</title><rect x="19" y="1044" width="3" height="15" fill="rgb(250,73,26)"/><text x="22.00" y="1054.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(243,74,41)"/><text x="25.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py:69) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(252,61,4)"/><text x="25.00" y="942.50"></text></g><g><title>&lt;lambda&gt; (pkg_resources/_vendor/packaging/version.py:48) (1 samples, 0.26%)</title><rect x="22" y="948" width="3" height="15" fill="rgb(206,149,29)"/><text x="25.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:207) (1 samples, 0.26%)</title><rect x="25" y="964" width="3" height="15" fill="rgb(208,164,50)"/><text x="28.00" y="974.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (3 samples, 0.77%)</title><rect x="22" y="884" width="9" height="15" fill="rgb(221,144,54)"/><text x="25.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (3 samples, 0.77%)</title><rect x="22" y="900" width="9" height="15" fill="rgb(217,207,6)"/><text x="25.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 0.51%)</title><rect x="25" y="916" width="6" height="15" fill="rgb(233,212,11)"/><text x="28.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 0.51%)</title><rect x="25" y="932" width="6" height="15" fill="rgb(217,191,29)"/><text x="28.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (2 samples, 0.51%)</title><rect x="25" y="948" width="6" height="15" fill="rgb(226,201,30)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.26%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(227,182,51)"/><text x="31.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:353) (1 samples, 0.26%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(208,52,41)"/><text x="31.00" y="990.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2127) (1 samples, 0.26%)</title><rect x="34" y="900" width="3" height="15" fill="rgb(238,56,53)"/><text x="37.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.26%)</title><rect x="34" y="916" width="3" height="15" fill="rgb(210,131,38)"/><text x="37.00" y="926.50"></text></g><g><title>__close_nocancel (libc-2.29.so) (1 samples, 0.26%)</title><rect x="34" y="932" width="3" height="15" fill="rgb(222,189,31)"/><text x="37.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:2) (8 samples, 2.05%)</title><rect x="16" y="148" width="24" height="15" fill="rgb(210,117,29)"/><text x="19.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="164" width="24" height="15" fill="rgb(247,12,50)"/><text x="19.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.05%)</title><rect x="16" y="180" width="24" height="15" fill="rgb(240,55,41)"/><text x="19.00" y="190.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="196" width="24" height="15" fill="rgb(207,194,54)"/><text x="19.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="212" width="24" height="15" fill="rgb(215,220,35)"/><text x="19.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.05%)</title><rect x="16" y="228" width="24" height="15" fill="rgb(254,171,52)"/><text x="19.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.05%)</title><rect x="16" y="244" width="24" height="15" fill="rgb(232,125,51)"/><text x="19.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.05%)</title><rect x="16" y="260" width="24" height="15" fill="rgb(232,31,10)"/><text x="19.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="276" width="24" height="15" fill="rgb(205,11,1)"/><text x="19.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (8 samples, 2.05%)</title><rect x="16" y="292" width="24" height="15" fill="rgb(215,183,24)"/><text x="19.00" y="302.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="308" width="24" height="15" fill="rgb(237,163,43)"/><text x="19.00" y="318.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.05%)</title><rect x="16" y="324" width="24" height="15" fill="rgb(223,43,27)"/><text x="19.00" y="334.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.05%)</title><rect x="16" y="340" width="24" height="15" fill="rgb(239,53,51)"/><text x="19.00" y="350.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.05%)</title><rect x="16" y="356" width="24" height="15" fill="rgb(206,193,44)"/><text x="19.00" y="366.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="372" width="24" height="15" fill="rgb(227,190,30)"/><text x="19.00" y="382.50">_..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (8 samples, 2.05%)</title><rect x="16" y="388" width="24" height="15" fill="rgb(244,220,12)"/><text x="19.00" y="398.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="404" width="24" height="15" fill="rgb(229,162,30)"/><text x="19.00" y="414.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.05%)</title><rect x="16" y="420" width="24" height="15" fill="rgb(230,77,36)"/><text x="19.00" y="430.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.05%)</title><rect x="16" y="436" width="24" height="15" fill="rgb(243,195,6)"/><text x="19.00" y="446.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.05%)</title><rect x="16" y="452" width="24" height="15" fill="rgb(225,137,40)"/><text x="19.00" y="462.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="468" width="24" height="15" fill="rgb(240,163,19)"/><text x="19.00" y="478.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (8 samples, 2.05%)</title><rect x="16" y="484" width="24" height="15" fill="rgb(244,35,44)"/><text x="19.00" y="494.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="500" width="24" height="15" fill="rgb(249,81,47)"/><text x="19.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.05%)</title><rect x="16" y="516" width="24" height="15" fill="rgb(218,21,23)"/><text x="19.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.05%)</title><rect x="16" y="532" width="24" height="15" fill="rgb(249,192,24)"/><text x="19.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.05%)</title><rect x="16" y="548" width="24" height="15" fill="rgb(234,72,30)"/><text x="19.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="564" width="24" height="15" fill="rgb(226,120,32)"/><text x="19.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (8 samples, 2.05%)</title><rect x="16" y="580" width="24" height="15" fill="rgb(254,213,6)"/><text x="19.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="596" width="24" height="15" fill="rgb(224,123,50)"/><text x="19.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (8 samples, 2.05%)</title><rect x="16" y="612" width="24" height="15" fill="rgb(248,58,24)"/><text x="19.00" y="622.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="628" width="24" height="15" fill="rgb(254,24,31)"/><text x="19.00" y="638.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="644" width="24" height="15" fill="rgb(217,159,42)"/><text x="19.00" y="654.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.05%)</title><rect x="16" y="660" width="24" height="15" fill="rgb(224,175,32)"/><text x="19.00" y="670.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.05%)</title><rect x="16" y="676" width="24" height="15" fill="rgb(241,41,32)"/><text x="19.00" y="686.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.05%)</title><rect x="16" y="692" width="24" height="15" fill="rgb(249,50,3)"/><text x="19.00" y="702.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="708" width="24" height="15" fill="rgb(214,187,12)"/><text x="19.00" y="718.50">_..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (8 samples, 2.05%)</title><rect x="16" y="724" width="24" height="15" fill="rgb(240,103,27)"/><text x="19.00" y="734.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.05%)</title><rect x="16" y="740" width="24" height="15" fill="rgb(234,155,31)"/><text x="19.00" y="750.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.05%)</title><rect x="16" y="756" width="24" height="15" fill="rgb(236,38,21)"/><text x="19.00" y="766.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.05%)</title><rect x="16" y="772" width="24" height="15" fill="rgb(246,148,34)"/><text x="19.00" y="782.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.05%)</title><rect x="16" y="788" width="24" height="15" fill="rgb(252,142,38)"/><text x="19.00" y="798.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.05%)</title><rect x="16" y="804" width="24" height="15" fill="rgb(209,90,50)"/><text x="19.00" y="814.50">_..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (8 samples, 2.05%)</title><rect x="16" y="820" width="24" height="15" fill="rgb(212,201,21)"/><text x="19.00" y="830.50">&lt;..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (8 samples, 2.05%)</title><rect x="16" y="836" width="24" height="15" fill="rgb(217,104,43)"/><text x="19.00" y="846.50">_..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (6 samples, 1.53%)</title><rect x="22" y="852" width="18" height="15" fill="rgb(238,14,49)"/><text x="25.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (6 samples, 1.53%)</title><rect x="22" y="868" width="18" height="15" fill="rgb(249,14,3)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (3 samples, 0.77%)</title><rect x="31" y="884" width="9" height="15" fill="rgb(208,77,29)"/><text x="34.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.26%)</title><rect x="37" y="900" width="3" height="15" fill="rgb(209,199,51)"/><text x="40.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.26%)</title><rect x="37" y="916" width="3" height="15" fill="rgb(239,55,26)"/><text x="40.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2571) (1 samples, 0.26%)</title><rect x="37" y="932" width="3" height="15" fill="rgb(207,217,27)"/><text x="40.00" y="942.50"></text></g><g><title>safe_version (pkg_resources/__init__.py:1331) (1 samples, 0.26%)</title><rect x="37" y="948" width="3" height="15" fill="rgb(243,142,35)"/><text x="40.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.26%)</title><rect x="37" y="964" width="3" height="15" fill="rgb(224,176,14)"/><text x="40.00" y="974.50"></text></g><g><title>_cmpkey (pkg_resources/_vendor/packaging/version.py:351) (1 samples, 0.26%)</title><rect x="37" y="980" width="3" height="15" fill="rgb(231,176,26)"/><text x="40.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:4) (1 samples, 0.26%)</title><rect x="40" y="148" width="3" height="15" fill="rgb(227,136,43)"/><text x="43.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="164" width="3" height="15" fill="rgb(249,8,3)"/><text x="43.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="40" y="180" width="3" height="15" fill="rgb(228,138,26)"/><text x="43.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="196" width="3" height="15" fill="rgb(229,15,48)"/><text x="43.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="212" width="3" height="15" fill="rgb(253,51,10)"/><text x="43.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="228" width="3" height="15" fill="rgb(252,94,23)"/><text x="43.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="244" width="3" height="15" fill="rgb(252,47,18)"/><text x="43.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="260" width="3" height="15" fill="rgb(232,106,50)"/><text x="43.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="276" width="3" height="15" fill="rgb(239,139,30)"/><text x="43.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py:74) (1 samples, 0.26%)</title><rect x="40" y="292" width="3" height="15" fill="rgb(222,146,21)"/><text x="43.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="308" width="3" height="15" fill="rgb(223,6,52)"/><text x="43.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="324" width="3" height="15" fill="rgb(223,189,0)"/><text x="43.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="340" width="3" height="15" fill="rgb(236,75,3)"/><text x="43.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="356" width="3" height="15" fill="rgb(205,8,4)"/><text x="43.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="372" width="3" height="15" fill="rgb(212,124,51)"/><text x="43.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py:20) (1 samples, 0.26%)</title><rect x="40" y="388" width="3" height="15" fill="rgb(236,67,41)"/><text x="43.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="404" width="3" height="15" fill="rgb(252,76,44)"/><text x="43.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="420" width="3" height="15" fill="rgb(220,171,30)"/><text x="43.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="436" width="3" height="15" fill="rgb(213,148,7)"/><text x="43.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="452" width="3" height="15" fill="rgb(241,77,54)"/><text x="43.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="468" width="3" height="15" fill="rgb(234,110,52)"/><text x="43.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py:25) (1 samples, 0.26%)</title><rect x="40" y="484" width="3" height="15" fill="rgb(237,133,10)"/><text x="43.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="500" width="3" height="15" fill="rgb(236,52,26)"/><text x="43.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="516" width="3" height="15" fill="rgb(215,41,52)"/><text x="43.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="532" width="3" height="15" fill="rgb(243,138,2)"/><text x="43.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="548" width="3" height="15" fill="rgb(243,32,48)"/><text x="43.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="564" width="3" height="15" fill="rgb(207,19,26)"/><text x="43.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py:18) (1 samples, 0.26%)</title><rect x="40" y="580" width="3" height="15" fill="rgb(206,14,33)"/><text x="43.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="596" width="3" height="15" fill="rgb(234,5,3)"/><text x="43.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="612" width="3" height="15" fill="rgb(244,76,37)"/><text x="43.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="628" width="3" height="15" fill="rgb(244,155,3)"/><text x="43.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="644" width="3" height="15" fill="rgb(253,77,19)"/><text x="43.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="660" width="3" height="15" fill="rgb(214,192,15)"/><text x="43.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:379) (1 samples, 0.26%)</title><rect x="40" y="676" width="3" height="15" fill="rgb(250,1,7)"/><text x="43.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="692" width="3" height="15" fill="rgb(238,20,39)"/><text x="43.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="708" width="3" height="15" fill="rgb(248,204,53)"/><text x="43.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="724" width="3" height="15" fill="rgb(252,217,30)"/><text x="43.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="740" width="3" height="15" fill="rgb(254,95,35)"/><text x="43.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="756" width="3" height="15" fill="rgb(254,213,23)"/><text x="43.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py:180) (1 samples, 0.26%)</title><rect x="40" y="772" width="3" height="15" fill="rgb(252,156,25)"/><text x="43.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="788" width="3" height="15" fill="rgb(251,174,24)"/><text x="43.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="804" width="3" height="15" fill="rgb(248,173,37)"/><text x="43.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="40" y="820" width="3" height="15" fill="rgb(206,111,35)"/><text x="43.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="40" y="836" width="3" height="15" fill="rgb(231,106,30)"/><text x="43.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="852" width="3" height="15" fill="rgb(207,33,2)"/><text x="43.00" y="862.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:641) (1 samples, 0.26%)</title><rect x="40" y="868" width="3" height="15" fill="rgb(235,22,36)"/><text x="43.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="40" y="884" width="3" height="15" fill="rgb(251,87,49)"/><text x="43.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="40" y="900" width="3" height="15" fill="rgb(233,39,1)"/><text x="43.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.26%)</title><rect x="40" y="916" width="3" height="15" fill="rgb(215,73,46)"/><text x="43.00" y="926.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.26%)</title><rect x="40" y="932" width="3" height="15" fill="rgb(253,213,54)"/><text x="43.00" y="942.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.26%)</title><rect x="40" y="948" width="3" height="15" fill="rgb(231,203,31)"/><text x="43.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="40" y="964" width="3" height="15" fill="rgb(213,222,51)"/><text x="43.00" y="974.50"></text></g><g><title>0x7f3b6bcdd774 (?) (1 samples, 0.26%)</title><rect x="40" y="980" width="3" height="15" fill="rgb(205,194,3)"/><text x="43.00" y="990.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.26%)</title><rect x="43" y="916" width="3" height="15" fill="rgb(224,110,50)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="932" width="3" height="15" fill="rgb(229,35,51)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="948" width="3" height="15" fill="rgb(215,63,23)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="964" width="3" height="15" fill="rgb(252,205,40)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="980" width="3" height="15" fill="rgb(234,209,33)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="996" width="3" height="15" fill="rgb(233,178,50)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.26%)</title><rect x="43" y="1012" width="3" height="15" fill="rgb(232,14,4)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1028" width="3" height="15" fill="rgb(238,173,15)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1044" width="3" height="15" fill="rgb(219,182,22)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1060" width="3" height="15" fill="rgb(215,161,36)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1076" width="3" height="15" fill="rgb(245,120,32)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1092" width="3" height="15" fill="rgb(206,128,7)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.26%)</title><rect x="43" y="1108" width="3" height="15" fill="rgb(230,113,8)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1124" width="3" height="15" fill="rgb(212,180,10)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1140" width="3" height="15" fill="rgb(252,216,6)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1156" width="3" height="15" fill="rgb(253,168,19)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1172" width="3" height="15" fill="rgb(250,97,15)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1188" width="3" height="15" fill="rgb(241,122,33)"/><text x="46.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.26%)</title><rect x="43" y="1204" width="3" height="15" fill="rgb(211,119,41)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1220" width="3" height="15" fill="rgb(211,125,14)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1236" width="3" height="15" fill="rgb(233,104,41)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1252" width="3" height="15" fill="rgb(227,200,54)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1268" width="3" height="15" fill="rgb(225,150,12)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1284" width="3" height="15" fill="rgb(252,153,11)"/><text x="46.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.26%)</title><rect x="43" y="1300" width="3" height="15" fill="rgb(245,172,22)"/><text x="46.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1316" width="3" height="15" fill="rgb(232,123,14)"/><text x="46.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1332" width="3" height="15" fill="rgb(252,204,35)"/><text x="46.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1348" width="3" height="15" fill="rgb(253,76,4)"/><text x="46.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1364" width="3" height="15" fill="rgb(232,151,11)"/><text x="46.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1380" width="3" height="15" fill="rgb(214,149,50)"/><text x="46.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.26%)</title><rect x="43" y="1396" width="3" height="15" fill="rgb(226,200,31)"/><text x="46.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1412" width="3" height="15" fill="rgb(205,90,17)"/><text x="46.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1428" width="3" height="15" fill="rgb(213,15,11)"/><text x="46.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1444" width="3" height="15" fill="rgb(229,158,20)"/><text x="46.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1460" width="3" height="15" fill="rgb(208,57,52)"/><text x="46.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1476" width="3" height="15" fill="rgb(205,164,43)"/><text x="46.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.26%)</title><rect x="43" y="1492" width="3" height="15" fill="rgb(243,177,34)"/><text x="46.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1508" width="3" height="15" fill="rgb(214,5,1)"/><text x="46.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="43" y="1524" width="3" height="15" fill="rgb(212,207,8)"/><text x="46.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1540" width="3" height="15" fill="rgb(232,226,44)"/><text x="46.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1556" width="3" height="15" fill="rgb(244,66,54)"/><text x="46.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1572" width="3" height="15" fill="rgb(214,217,27)"/><text x="46.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1588" width="3" height="15" fill="rgb(248,152,51)"/><text x="46.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1604" width="3" height="15" fill="rgb(209,193,36)"/><text x="46.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1620" width="3" height="15" fill="rgb(234,218,45)"/><text x="46.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:138) (1 samples, 0.26%)</title><rect x="43" y="1636" width="3" height="15" fill="rgb(230,52,22)"/><text x="46.00" y="1646.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="43" y="1652" width="3" height="15" fill="rgb(221,54,10)"/><text x="46.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1668" width="3" height="15" fill="rgb(209,99,17)"/><text x="46.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1684" width="3" height="15" fill="rgb(246,92,4)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1700" width="3" height="15" fill="rgb(218,168,23)"/><text x="46.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1716" width="3" height="15" fill="rgb(207,52,49)"/><text x="46.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1732" width="3" height="15" fill="rgb(227,117,24)"/><text x="46.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1748" width="3" height="15" fill="rgb(236,4,33)"/><text x="46.00" y="1758.50"></text></g><g><title>&lt;module&gt; (matplotlib/rcsetup.py:24) (1 samples, 0.26%)</title><rect x="43" y="1764" width="3" height="15" fill="rgb(218,190,51)"/><text x="46.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1780" width="3" height="15" fill="rgb(227,155,51)"/><text x="46.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1796" width="3" height="15" fill="rgb(223,38,17)"/><text x="46.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1812" width="3" height="15" fill="rgb(232,164,19)"/><text x="46.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1828" width="3" height="15" fill="rgb(253,124,43)"/><text x="46.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1844" width="3" height="15" fill="rgb(220,82,41)"/><text x="46.00" y="1854.50"></text></g><g><title>&lt;module&gt; (matplotlib/fontconfig_pattern.py:18) (1 samples, 0.26%)</title><rect x="43" y="1860" width="3" height="15" fill="rgb(253,27,32)"/><text x="46.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="43" y="1876" width="3" height="15" fill="rgb(246,125,29)"/><text x="46.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="43" y="1892" width="3" height="15" fill="rgb(240,47,5)"/><text x="46.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="43" y="1908" width="3" height="15" fill="rgb(209,204,51)"/><text x="46.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="43" y="1924" width="3" height="15" fill="rgb(213,160,46)"/><text x="46.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="43" y="1940" width="3" height="15" fill="rgb(241,166,30)"/><text x="46.00" y="1950.50"></text></g><g><title>&lt;module&gt; (pyparsing.py:6379) (1 samples, 0.26%)</title><rect x="43" y="1956" width="3" height="15" fill="rgb(253,4,13)"/><text x="46.00" y="1966.50"></text></g><g><title>pyparsing_common (pyparsing.py:6579) (1 samples, 0.26%)</title><rect x="43" y="1972" width="3" height="15" fill="rgb(246,46,43)"/><text x="46.00" y="1982.50"></text></g><g><title>__init__ (pyparsing.py:5105) (1 samples, 0.26%)</title><rect x="43" y="1988" width="3" height="15" fill="rgb(222,176,0)"/><text x="46.00" y="1998.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.26%)</title><rect x="43" y="2004" width="3" height="15" fill="rgb(215,57,3)"/><text x="46.00" y="2014.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2020" width="3" height="15" fill="rgb(248,26,13)"/><text x="46.00" y="2030.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2036" width="3" height="15" fill="rgb(242,167,33)"/><text x="46.00" y="2046.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2052" width="3" height="15" fill="rgb(223,176,33)"/><text x="46.00" y="2062.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.26%)</title><rect x="43" y="2068" width="3" height="15" fill="rgb(243,205,45)"/><text x="46.00" y="2078.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2084" width="3" height="15" fill="rgb(251,167,4)"/><text x="46.00" y="2094.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.26%)</title><rect x="43" y="2100" width="3" height="15" fill="rgb(205,53,51)"/><text x="46.00" y="2110.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2116" width="3" height="15" fill="rgb(233,5,7)"/><text x="46.00" y="2126.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.26%)</title><rect x="43" y="2132" width="3" height="15" fill="rgb(238,22,31)"/><text x="46.00" y="2142.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2148" width="3" height="15" fill="rgb(226,106,1)"/><text x="46.00" y="2158.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.26%)</title><rect x="43" y="2164" width="3" height="15" fill="rgb(213,35,36)"/><text x="46.00" y="2174.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2180" width="3" height="15" fill="rgb(226,117,22)"/><text x="46.00" y="2190.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4451) (1 samples, 0.26%)</title><rect x="43" y="2196" width="3" height="15" fill="rgb(234,8,37)"/><text x="46.00" y="2206.50"></text></g><g><title>leaveWhitespace (pyparsing.py:3885) (1 samples, 0.26%)</title><rect x="43" y="2212" width="3" height="15" fill="rgb(238,130,53)"/><text x="46.00" y="2222.50"></text></g><g><title>leaveWhitespace (pyparsing.py:4449) (1 samples, 0.26%)</title><rect x="43" y="2228" width="3" height="15" fill="rgb(238,216,17)"/><text x="46.00" y="2238.50"></text></g><g><title>copy (pyparsing.py:3952) (1 samples, 0.26%)</title><rect x="43" y="2244" width="3" height="15" fill="rgb(209,50,38)"/><text x="46.00" y="2254.50"></text></g><g><title>&lt;listcomp&gt; (pyparsing.py:3952) (1 samples, 0.26%)</title><rect x="43" y="2260" width="3" height="15" fill="rgb(245,225,8)"/><text x="46.00" y="2270.50"></text></g><g><title>copy (pyparsing.py:3951) (1 samples, 0.26%)</title><rect x="43" y="2276" width="3" height="15" fill="rgb(216,34,15)"/><text x="46.00" y="2286.50"></text></g><g><title>copy (pyparsing.py:1437) (1 samples, 0.26%)</title><rect x="43" y="2292" width="3" height="15" fill="rgb(230,160,41)"/><text x="46.00" y="2302.50"></text></g><g><title>copy (copy.py:96) (1 samples, 0.26%)</title><rect x="43" y="2308" width="3" height="15" fill="rgb(221,11,3)"/><text x="46.00" y="2318.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:739) (1 samples, 0.26%)</title><rect x="46" y="1044" width="3" height="15" fill="rgb(222,6,48)"/><text x="49.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.26%)</title><rect x="46" y="1060" width="3" height="15" fill="rgb(242,53,11)"/><text x="49.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.26%)</title><rect x="46" y="1076" width="3" height="15" fill="rgb(211,226,4)"/><text x="49.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.26%)</title><rect x="46" y="1092" width="3" height="15" fill="rgb(217,50,24)"/><text x="49.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.26%)</title><rect x="46" y="1108" width="3" height="15" fill="rgb(206,80,45)"/><text x="49.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="46" y="1124" width="3" height="15" fill="rgb(214,103,21)"/><text x="49.00" y="1134.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (3 samples, 0.77%)</title><rect x="43" y="724" width="9" height="15" fill="rgb(212,151,5)"/><text x="46.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.77%)</title><rect x="43" y="740" width="9" height="15" fill="rgb(244,2,41)"/><text x="46.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.77%)</title><rect x="43" y="756" width="9" height="15" fill="rgb(232,19,53)"/><text x="46.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.77%)</title><rect x="43" y="772" width="9" height="15" fill="rgb(214,180,1)"/><text x="46.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="43" y="788" width="9" height="15" fill="rgb(214,205,30)"/><text x="46.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="43" y="804" width="9" height="15" fill="rgb(243,44,32)"/><text x="46.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.77%)</title><rect x="43" y="820" width="9" height="15" fill="rgb(224,188,34)"/><text x="46.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.77%)</title><rect x="43" y="836" width="9" height="15" fill="rgb(208,153,9)"/><text x="46.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.77%)</title><rect x="43" y="852" width="9" height="15" fill="rgb(242,229,21)"/><text x="46.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.77%)</title><rect x="43" y="868" width="9" height="15" fill="rgb(205,181,18)"/><text x="46.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.77%)</title><rect x="43" y="884" width="9" height="15" fill="rgb(228,187,31)"/><text x="46.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.77%)</title><rect x="43" y="900" width="9" height="15" fill="rgb(221,71,30)"/><text x="46.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:52) (2 samples, 0.51%)</title><rect x="46" y="916" width="6" height="15" fill="rgb(246,41,0)"/><text x="49.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.51%)</title><rect x="46" y="932" width="6" height="15" fill="rgb(212,108,48)"/><text x="49.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.51%)</title><rect x="46" y="948" width="6" height="15" fill="rgb(228,146,9)"/><text x="49.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.51%)</title><rect x="46" y="964" width="6" height="15" fill="rgb(229,40,45)"/><text x="49.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.51%)</title><rect x="46" y="980" width="6" height="15" fill="rgb(234,90,21)"/><text x="49.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.51%)</title><rect x="46" y="996" width="6" height="15" fill="rgb(252,201,25)"/><text x="49.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py:1088) (2 samples, 0.51%)</title><rect x="46" y="1012" width="6" height="15" fill="rgb(244,121,44)"/><text x="49.00" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py:873) (2 samples, 0.51%)</title><rect x="46" y="1028" width="6" height="15" fill="rgb(221,160,40)"/><text x="49.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py:748) (1 samples, 0.26%)</title><rect x="49" y="1044" width="3" height="15" fill="rgb(210,13,14)"/><text x="52.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py:1486) (1 samples, 0.26%)</title><rect x="49" y="1060" width="3" height="15" fill="rgb(220,106,9)"/><text x="52.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py:327) (1 samples, 0.26%)</title><rect x="49" y="1076" width="3" height="15" fill="rgb(211,32,16)"/><text x="52.00" y="1086.50"></text></g><g><title>dedent (textwrap.py:431) (1 samples, 0.26%)</title><rect x="49" y="1092" width="3" height="15" fill="rgb(222,161,30)"/><text x="52.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.26%)</title><rect x="49" y="1108" width="3" height="15" fill="rgb(228,205,4)"/><text x="52.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="49" y="1124" width="3" height="15" fill="rgb(222,19,45)"/><text x="52.00" y="1134.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="49" y="1140" width="3" height="15" fill="rgb(253,162,13)"/><text x="52.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (4 samples, 1.02%)</title><rect x="43" y="436" width="12" height="15" fill="rgb(218,103,0)"/><text x="46.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="43" y="452" width="12" height="15" fill="rgb(249,127,1)"/><text x="46.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="43" y="468" width="12" height="15" fill="rgb(215,198,32)"/><text x="46.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="43" y="484" width="12" height="15" fill="rgb(205,43,25)"/><text x="46.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="43" y="500" width="12" height="15" fill="rgb(215,224,0)"/><text x="46.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="43" y="516" width="12" height="15" fill="rgb(239,27,20)"/><text x="46.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (4 samples, 1.02%)</title><rect x="43" y="532" width="12" height="15" fill="rgb(219,169,36)"/><text x="46.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="43" y="548" width="12" height="15" fill="rgb(210,222,5)"/><text x="46.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="43" y="564" width="12" height="15" fill="rgb(246,173,13)"/><text x="46.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="43" y="580" width="12" height="15" fill="rgb(223,129,17)"/><text x="46.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="43" y="596" width="12" height="15" fill="rgb(237,59,26)"/><text x="46.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="43" y="612" width="12" height="15" fill="rgb(244,210,22)"/><text x="46.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (4 samples, 1.02%)</title><rect x="43" y="628" width="12" height="15" fill="rgb(239,170,16)"/><text x="46.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="43" y="644" width="12" height="15" fill="rgb(219,36,19)"/><text x="46.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="43" y="660" width="12" height="15" fill="rgb(242,105,53)"/><text x="46.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="43" y="676" width="12" height="15" fill="rgb(249,11,51)"/><text x="46.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="43" y="692" width="12" height="15" fill="rgb(233,156,48)"/><text x="46.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="43" y="708" width="12" height="15" fill="rgb(251,172,12)"/><text x="46.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.26%)</title><rect x="52" y="724" width="3" height="15" fill="rgb(238,212,47)"/><text x="55.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="740" width="3" height="15" fill="rgb(208,162,6)"/><text x="55.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.26%)</title><rect x="52" y="756" width="3" height="15" fill="rgb(245,192,21)"/><text x="55.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="772" width="3" height="15" fill="rgb(238,10,27)"/><text x="55.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="788" width="3" height="15" fill="rgb(253,85,54)"/><text x="55.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="804" width="3" height="15" fill="rgb(220,131,5)"/><text x="55.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="820" width="3" height="15" fill="rgb(250,178,39)"/><text x="55.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="836" width="3" height="15" fill="rgb(212,198,24)"/><text x="55.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="852" width="3" height="15" fill="rgb(254,11,43)"/><text x="55.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:1) (1 samples, 0.26%)</title><rect x="52" y="868" width="3" height="15" fill="rgb(236,126,10)"/><text x="55.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="884" width="3" height="15" fill="rgb(213,187,13)"/><text x="55.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="900" width="3" height="15" fill="rgb(219,45,30)"/><text x="55.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="916" width="3" height="15" fill="rgb(252,223,26)"/><text x="55.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="932" width="3" height="15" fill="rgb(238,86,21)"/><text x="55.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="948" width="3" height="15" fill="rgb(211,108,5)"/><text x="55.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/array_.py:7) (1 samples, 0.26%)</title><rect x="52" y="964" width="3" height="15" fill="rgb(249,174,22)"/><text x="55.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="980" width="3" height="15" fill="rgb(236,189,30)"/><text x="55.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="996" width="3" height="15" fill="rgb(207,11,29)"/><text x="55.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="1012" width="3" height="15" fill="rgb(207,179,2)"/><text x="55.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="1028" width="3" height="15" fill="rgb(243,132,18)"/><text x="55.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="1044" width="3" height="15" fill="rgb(217,103,33)"/><text x="55.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/common.py:11) (1 samples, 0.26%)</title><rect x="52" y="1060" width="3" height="15" fill="rgb(224,200,27)"/><text x="55.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="1076" width="3" height="15" fill="rgb(209,85,18)"/><text x="55.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="1092" width="3" height="15" fill="rgb(254,11,12)"/><text x="55.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="1108" width="3" height="15" fill="rgb(205,136,46)"/><text x="55.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="1124" width="3" height="15" fill="rgb(210,146,9)"/><text x="55.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="1140" width="3" height="15" fill="rgb(236,51,9)"/><text x="55.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/dtypes.py:14) (1 samples, 0.26%)</title><rect x="52" y="1156" width="3" height="15" fill="rgb(222,34,8)"/><text x="55.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="52" y="1172" width="3" height="15" fill="rgb(209,152,39)"/><text x="55.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="52" y="1188" width="3" height="15" fill="rgb(216,79,32)"/><text x="55.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="52" y="1204" width="3" height="15" fill="rgb(214,78,26)"/><text x="55.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="52" y="1220" width="3" height="15" fill="rgb(217,168,44)"/><text x="55.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="52" y="1236" width="3" height="15" fill="rgb(249,75,49)"/><text x="55.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/dtypes/base.py:11) (1 samples, 0.26%)</title><rect x="52" y="1252" width="3" height="15" fill="rgb(228,94,5)"/><text x="55.00" y="1262.50"></text></g><g><title>ExtensionDtype (pandas/core/dtypes/base.py:161) (1 samples, 0.26%)</title><rect x="52" y="1268" width="3" height="15" fill="rgb(253,211,11)"/><text x="55.00" y="1278.50"></text></g><g><title>inner (typing.py:248) (1 samples, 0.26%)</title><rect x="52" y="1284" width="3" height="15" fill="rgb(254,39,15)"/><text x="55.00" y="1294.50"></text></g><g><title>__getitem__ (typing.py:628) (1 samples, 0.26%)</title><rect x="52" y="1300" width="3" height="15" fill="rgb(245,68,49)"/><text x="55.00" y="1310.50"></text></g><g><title>_subs_tvars (typing.py:193) (1 samples, 0.26%)</title><rect x="52" y="1316" width="3" height="15" fill="rgb(215,65,51)"/><text x="55.00" y="1326.50"></text></g><g><title>copy_with (typing.py:632) (1 samples, 0.26%)</title><rect x="52" y="1332" width="3" height="15" fill="rgb(219,145,39)"/><text x="55.00" y="1342.50"></text></g><g><title>__init__ (typing.py:614) (1 samples, 0.26%)</title><rect x="52" y="1348" width="3" height="15" fill="rgb(242,200,44)"/><text x="55.00" y="1358.50"></text></g><g><title>__setattr__ (typing.py:703) (1 samples, 0.26%)</title><rect x="52" y="1364" width="3" height="15" fill="rgb(208,115,25)"/><text x="55.00" y="1374.50"></text></g><g><title>root (&lt;template&gt;:130) (1 samples, 0.26%)</title><rect x="55" y="1572" width="3" height="15" fill="rgb(225,56,41)"/><text x="58.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.26%)</title><rect x="55" y="1588" width="3" height="15" fill="rgb(252,77,11)"/><text x="58.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="55" y="1604" width="3" height="15" fill="rgb(254,28,40)"/><text x="58.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="55" y="1620" width="3" height="15" fill="rgb(206,190,8)"/><text x="58.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::TypeConstraintParam, std::allocator&lt;onnx::OpSchema::TypeConstraintParam&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="55" y="1636" width="3" height="15" fill="rgb(213,80,11)"/><text x="58.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="55" y="1652" width="3" height="15" fill="rgb(210,78,12)"/><text x="58.00" y="1662.50"></text></g><g><title>pybind11::detail::instance::allocate_layout (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="55" y="1668" width="3" height="15" fill="rgb(213,34,26)"/><text x="58.00" y="1678.50"></text></g><g><title>pybind11::detail::all_type_info (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="55" y="1684" width="3" height="15" fill="rgb(230,186,28)"/><text x="58.00" y="1694.50"></text></g><g><title>root (&lt;template&gt;:59) (1 samples, 0.26%)</title><rect x="58" y="1572" width="3" height="15" fill="rgb(217,75,3)"/><text x="61.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.26%)</title><rect x="58" y="1588" width="3" height="15" fill="rgb(230,20,41)"/><text x="61.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.26%)</title><rect x="58" y="1604" width="3" height="15" fill="rgb(222,48,39)"/><text x="61.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.26%)</title><rect x="58" y="1620" width="3" height="15" fill="rgb(218,69,19)"/><text x="61.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1636" width="3" height="15" fill="rgb(246,19,32)"/><text x="61.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1652" width="3" height="15" fill="rgb(237,121,6)"/><text x="61.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="58" y="1668" width="3" height="15" fill="rgb(232,55,27)"/><text x="61.00" y="1678.50"></text></g><g><title>root (&lt;template&gt;:78) (1 samples, 0.26%)</title><rect x="61" y="1572" width="3" height="15" fill="rgb(225,20,45)"/><text x="64.00" y="1582.50"></text></g><g><title>0x7f3b6ed48c58 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="61" y="1588" width="3" height="15" fill="rgb(243,137,43)"/><text x="64.00" y="1598.50"></text></g><g><title>google::protobuf::TextFormat::Printer::PrintToString (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="61" y="1604" width="3" height="15" fill="rgb(228,129,3)"/><text x="64.00" y="1614.50"></text></g><g><title>google::protobuf::TextFormat::Printer::Print (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="61" y="1620" width="3" height="15" fill="rgb(210,32,26)"/><text x="64.00" y="1630.50"></text></g><g><title>google::protobuf::TextFormat::Printer::Print (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="61" y="1636" width="3" height="15" fill="rgb(205,202,45)"/><text x="64.00" y="1646.50"></text></g><g><title>google::protobuf::TextFormat::Printer::PrintField (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="61" y="1652" width="3" height="15" fill="rgb(254,8,51)"/><text x="64.00" y="1662.50"></text></g><g><title>google::protobuf::Reflection::HasBit (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="61" y="1668" width="3" height="15" fill="rgb(216,24,47)"/><text x="64.00" y="1678.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.02%)</title><rect x="55" y="1236" width="12" height="15" fill="rgb(227,91,0)"/><text x="58.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.02%)</title><rect x="55" y="1252" width="12" height="15" fill="rgb(225,56,50)"/><text x="58.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="55" y="1268" width="12" height="15" fill="rgb(220,207,3)"/><text x="58.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="55" y="1284" width="12" height="15" fill="rgb(226,222,36)"/><text x="58.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="55" y="1300" width="12" height="15" fill="rgb(242,127,5)"/><text x="58.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="55" y="1316" width="12" height="15" fill="rgb(254,13,30)"/><text x="58.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="55" y="1332" width="12" height="15" fill="rgb(206,218,25)"/><text x="58.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="55" y="1348" width="12" height="15" fill="rgb(219,154,28)"/><text x="58.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.02%)</title><rect x="55" y="1364" width="12" height="15" fill="rgb(252,11,13)"/><text x="58.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.02%)</title><rect x="55" y="1380" width="12" height="15" fill="rgb(243,169,16)"/><text x="58.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.02%)</title><rect x="55" y="1396" width="12" height="15" fill="rgb(245,85,26)"/><text x="58.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.02%)</title><rect x="55" y="1412" width="12" height="15" fill="rgb(207,175,6)"/><text x="58.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.02%)</title><rect x="55" y="1428" width="12" height="15" fill="rgb(221,91,36)"/><text x="58.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.02%)</title><rect x="55" y="1444" width="12" height="15" fill="rgb(217,66,37)"/><text x="58.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (4 samples, 1.02%)</title><rect x="55" y="1460" width="12" height="15" fill="rgb(235,221,19)"/><text x="58.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (4 samples, 1.02%)</title><rect x="55" y="1476" width="12" height="15" fill="rgb(222,99,29)"/><text x="58.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (4 samples, 1.02%)</title><rect x="55" y="1492" width="12" height="15" fill="rgb(224,200,44)"/><text x="58.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (4 samples, 1.02%)</title><rect x="55" y="1508" width="12" height="15" fill="rgb(249,47,9)"/><text x="58.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (4 samples, 1.02%)</title><rect x="55" y="1524" width="12" height="15" fill="rgb(208,141,54)"/><text x="58.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (4 samples, 1.02%)</title><rect x="55" y="1540" width="12" height="15" fill="rgb(251,27,4)"/><text x="58.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (4 samples, 1.02%)</title><rect x="55" y="1556" width="12" height="15" fill="rgb(247,187,41)"/><text x="58.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:84) (1 samples, 0.26%)</title><rect x="64" y="1572" width="3" height="15" fill="rgb(244,139,53)"/><text x="67.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.26%)</title><rect x="64" y="1588" width="3" height="15" fill="rgb(247,184,21)"/><text x="67.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="64" y="1604" width="3" height="15" fill="rgb(254,55,38)"/><text x="67.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="64" y="1620" width="3" height="15" fill="rgb(233,25,31)"/><text x="67.00" y="1630.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::vector&lt;onnx::OpSchema::FormalParameter, std::allocator&lt;onnx::OpSchema::FormalParameter&gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="64" y="1636" width="3" height="15" fill="rgb(233,115,38)"/><text x="67.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="64" y="1652" width="3" height="15" fill="rgb(220,47,18)"/><text x="67.00" y="1662.50"></text></g><g><title>std::_Hashtable&lt;void const*, std::pair&lt;void const* const, pybind11::detail::instance*&gt;, std::allocator&lt;std::pair&lt;void const* const, pybind11::detail::instance*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;void const*&gt;, std::hash&lt;void const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, false&gt; &gt;::equal_range (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="64" y="1668" width="3" height="15" fill="rgb(229,131,24)"/><text x="67.00" y="1678.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:4) (20 samples, 5.12%)</title><rect x="10" y="52" width="60" height="15" fill="rgb(223,225,18)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (20 samples, 5.12%)</title><rect x="10" y="68" width="60" height="15" fill="rgb(244,207,5)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (20 samples, 5.12%)</title><rect x="10" y="84" width="60" height="15" fill="rgb(248,173,34)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (20 samples, 5.12%)</title><rect x="10" y="100" width="60" height="15" fill="rgb(230,194,42)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (20 samples, 5.12%)</title><rect x="10" y="116" width="60" height="15" fill="rgb(229,110,19)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (20 samples, 5.12%)</title><rect x="10" y="132" width="60" height="15" fill="rgb(206,198,21)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:7) (9 samples, 2.30%)</title><rect x="43" y="148" width="27" height="15" fill="rgb(220,38,13)"/><text x="46.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.30%)</title><rect x="43" y="164" width="27" height="15" fill="rgb(241,220,30)"/><text x="46.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.30%)</title><rect x="43" y="180" width="27" height="15" fill="rgb(206,144,3)"/><text x="46.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.30%)</title><rect x="43" y="196" width="27" height="15" fill="rgb(233,2,34)"/><text x="46.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.30%)</title><rect x="43" y="212" width="27" height="15" fill="rgb(243,142,16)"/><text x="46.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.30%)</title><rect x="43" y="228" width="27" height="15" fill="rgb(242,181,28)"/><text x="46.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (9 samples, 2.30%)</title><rect x="43" y="244" width="27" height="15" fill="rgb(222,138,47)"/><text x="46.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.30%)</title><rect x="43" y="260" width="27" height="15" fill="rgb(223,148,6)"/><text x="46.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.30%)</title><rect x="43" y="276" width="27" height="15" fill="rgb(211,36,11)"/><text x="46.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.30%)</title><rect x="43" y="292" width="27" height="15" fill="rgb(209,161,17)"/><text x="46.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.30%)</title><rect x="43" y="308" width="27" height="15" fill="rgb(207,172,53)"/><text x="46.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.30%)</title><rect x="43" y="324" width="27" height="15" fill="rgb(226,107,16)"/><text x="46.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (9 samples, 2.30%)</title><rect x="43" y="340" width="27" height="15" fill="rgb(213,133,41)"/><text x="46.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (9 samples, 2.30%)</title><rect x="43" y="356" width="27" height="15" fill="rgb(242,21,47)"/><text x="46.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (9 samples, 2.30%)</title><rect x="43" y="372" width="27" height="15" fill="rgb(242,87,19)"/><text x="46.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (9 samples, 2.30%)</title><rect x="43" y="388" width="27" height="15" fill="rgb(233,61,5)"/><text x="46.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (9 samples, 2.30%)</title><rect x="43" y="404" width="27" height="15" fill="rgb(240,179,22)"/><text x="46.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (9 samples, 2.30%)</title><rect x="43" y="420" width="27" height="15" fill="rgb(206,30,18)"/><text x="46.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (5 samples, 1.28%)</title><rect x="55" y="436" width="15" height="15" fill="rgb(246,204,40)"/><text x="58.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="452" width="15" height="15" fill="rgb(227,214,49)"/><text x="58.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.28%)</title><rect x="55" y="468" width="15" height="15" fill="rgb(212,141,39)"/><text x="58.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="484" width="15" height="15" fill="rgb(237,147,11)"/><text x="58.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="500" width="15" height="15" fill="rgb(253,156,21)"/><text x="58.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="516" width="15" height="15" fill="rgb(216,137,48)"/><text x="58.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="532" width="15" height="15" fill="rgb(232,53,18)"/><text x="58.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="548" width="15" height="15" fill="rgb(210,144,45)"/><text x="58.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="564" width="15" height="15" fill="rgb(229,131,37)"/><text x="58.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (5 samples, 1.28%)</title><rect x="55" y="580" width="15" height="15" fill="rgb(238,132,8)"/><text x="58.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="596" width="15" height="15" fill="rgb(208,118,52)"/><text x="58.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="612" width="15" height="15" fill="rgb(215,81,14)"/><text x="58.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="628" width="15" height="15" fill="rgb(244,175,52)"/><text x="58.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="644" width="15" height="15" fill="rgb(214,17,12)"/><text x="58.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="660" width="15" height="15" fill="rgb(229,80,21)"/><text x="58.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (5 samples, 1.28%)</title><rect x="55" y="676" width="15" height="15" fill="rgb(248,71,6)"/><text x="58.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="692" width="15" height="15" fill="rgb(253,161,11)"/><text x="58.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="708" width="15" height="15" fill="rgb(233,98,20)"/><text x="58.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="724" width="15" height="15" fill="rgb(221,4,50)"/><text x="58.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="740" width="15" height="15" fill="rgb(212,94,19)"/><text x="58.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="756" width="15" height="15" fill="rgb(246,100,12)"/><text x="58.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (5 samples, 1.28%)</title><rect x="55" y="772" width="15" height="15" fill="rgb(226,180,40)"/><text x="58.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="788" width="15" height="15" fill="rgb(243,75,25)"/><text x="58.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="804" width="15" height="15" fill="rgb(227,107,32)"/><text x="58.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="820" width="15" height="15" fill="rgb(217,108,31)"/><text x="58.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="836" width="15" height="15" fill="rgb(239,145,22)"/><text x="58.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="852" width="15" height="15" fill="rgb(205,198,28)"/><text x="58.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (5 samples, 1.28%)</title><rect x="55" y="868" width="15" height="15" fill="rgb(248,14,43)"/><text x="58.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="884" width="15" height="15" fill="rgb(235,123,49)"/><text x="58.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 1.28%)</title><rect x="55" y="900" width="15" height="15" fill="rgb(246,25,21)"/><text x="58.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="916" width="15" height="15" fill="rgb(206,42,42)"/><text x="58.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="932" width="15" height="15" fill="rgb(247,157,48)"/><text x="58.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="948" width="15" height="15" fill="rgb(251,71,42)"/><text x="58.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="964" width="15" height="15" fill="rgb(225,79,2)"/><text x="58.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="980" width="15" height="15" fill="rgb(205,152,2)"/><text x="58.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="996" width="15" height="15" fill="rgb(241,207,12)"/><text x="58.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (5 samples, 1.28%)</title><rect x="55" y="1012" width="15" height="15" fill="rgb(208,49,12)"/><text x="58.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="1028" width="15" height="15" fill="rgb(215,169,43)"/><text x="58.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="1044" width="15" height="15" fill="rgb(238,175,1)"/><text x="58.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="1060" width="15" height="15" fill="rgb(231,186,16)"/><text x="58.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="1076" width="15" height="15" fill="rgb(251,229,46)"/><text x="58.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="1092" width="15" height="15" fill="rgb(230,108,6)"/><text x="58.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (5 samples, 1.28%)</title><rect x="55" y="1108" width="15" height="15" fill="rgb(229,0,49)"/><text x="58.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (5 samples, 1.28%)</title><rect x="55" y="1124" width="15" height="15" fill="rgb(209,191,41)"/><text x="58.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="1140" width="15" height="15" fill="rgb(220,60,28)"/><text x="58.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 1.28%)</title><rect x="55" y="1156" width="15" height="15" fill="rgb(240,3,50)"/><text x="58.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 1.28%)</title><rect x="55" y="1172" width="15" height="15" fill="rgb(211,109,32)"/><text x="58.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 1.28%)</title><rect x="55" y="1188" width="15" height="15" fill="rgb(250,75,17)"/><text x="58.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 1.28%)</title><rect x="55" y="1204" width="15" height="15" fill="rgb(236,198,54)"/><text x="58.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 1.28%)</title><rect x="55" y="1220" width="15" height="15" fill="rgb(217,20,41)"/><text x="58.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:18) (1 samples, 0.26%)</title><rect x="67" y="1236" width="3" height="15" fill="rgb(213,127,35)"/><text x="70.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.26%)</title><rect x="67" y="1252" width="3" height="15" fill="rgb(218,26,29)"/><text x="70.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="67" y="1268" width="3" height="15" fill="rgb(253,23,16)"/><text x="70.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="67" y="1284" width="3" height="15" fill="rgb(225,193,44)"/><text x="70.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="67" y="1300" width="3" height="15" fill="rgb(220,36,11)"/><text x="70.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="67" y="1316" width="3" height="15" fill="rgb(234,23,33)"/><text x="70.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.26%)</title><rect x="67" y="1332" width="3" height="15" fill="rgb(227,117,30)"/><text x="70.00" y="1342.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.26%)</title><rect x="67" y="1348" width="3" height="15" fill="rgb(242,77,3)"/><text x="70.00" y="1358.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.26%)</title><rect x="67" y="1364" width="3" height="15" fill="rgb(229,151,0)"/><text x="70.00" y="1374.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="67" y="1380" width="3" height="15" fill="rgb(209,158,43)"/><text x="70.00" y="1390.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.26%)</title><rect x="70" y="100" width="3" height="15" fill="rgb(252,58,9)"/><text x="73.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.26%)</title><rect x="70" y="116" width="3" height="15" fill="rgb(235,154,14)"/><text x="73.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:91) (1 samples, 0.26%)</title><rect x="70" y="132" width="3" height="15" fill="rgb(205,174,23)"/><text x="73.00" y="142.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.26%)</title><rect x="70" y="148" width="3" height="15" fill="rgb(239,27,0)"/><text x="73.00" y="158.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="70" y="164" width="3" height="15" fill="rgb(249,216,33)"/><text x="73.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.26%)</title><rect x="70" y="180" width="3" height="15" fill="rgb(214,203,17)"/><text x="73.00" y="190.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.26%)</title><rect x="70" y="196" width="3" height="15" fill="rgb(226,145,20)"/><text x="73.00" y="206.50"></text></g><g><title>iterator_loop (ufunc_object.c:1559) (1 samples, 0.26%)</title><rect x="70" y="212" width="3" height="15" fill="rgb(221,158,20)"/><text x="73.00" y="222.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.26%)</title><rect x="70" y="228" width="3" height="15" fill="rgb(233,200,14)"/><text x="73.00" y="238.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:244) (1 samples, 0.26%)</title><rect x="73" y="164" width="3" height="15" fill="rgb(245,64,40)"/><text x="76.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:125) (1 samples, 0.26%)</title><rect x="73" y="180" width="3" height="15" fill="rgb(241,77,37)"/><text x="76.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (1 samples, 0.26%)</title><rect x="73" y="196" width="3" height="15" fill="rgb(229,107,0)"/><text x="76.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="73" y="212" width="3" height="15" fill="rgb(207,114,8)"/><text x="76.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (1 samples, 0.26%)</title><rect x="73" y="228" width="3" height="15" fill="rgb(247,4,22)"/><text x="76.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3008) (1 samples, 0.26%)</title><rect x="73" y="244" width="3" height="15" fill="rgb(215,45,23)"/><text x="76.00" y="254.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src:459) (1 samples, 0.26%)</title><rect x="73" y="260" width="3" height="15" fill="rgb(245,105,0)"/><text x="76.00" y="270.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src:105) (1 samples, 0.26%)</title><rect x="73" y="276" width="3" height="15" fill="rgb(231,153,51)"/><text x="76.00" y="286.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="73" y="292" width="3" height="15" fill="rgb(226,175,47)"/><text x="76.00" y="302.50"></text></g><g><title>dgemv_thread_n (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="73" y="308" width="3" height="15" fill="rgb(254,224,26)"/><text x="76.00" y="318.50"></text></g><g><title>exec_blas (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="73" y="324" width="3" height="15" fill="rgb(227,157,40)"/><text x="76.00" y="334.50"></text></g><g><title>exec_blas_async_wait (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="73" y="340" width="3" height="15" fill="rgb(250,191,46)"/><text x="76.00" y="350.50"></text></g><g><title>sched_yield (libc-2.29.so) (1 samples, 0.26%)</title><rect x="73" y="356" width="3" height="15" fill="rgb(251,44,36)"/><text x="76.00" y="366.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:2) (1 samples, 0.26%)</title><rect x="76" y="196" width="3" height="15" fill="rgb(249,145,8)"/><text x="79.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:40) (4 samples, 1.02%)</title><rect x="70" y="52" width="12" height="15" fill="rgb(207,144,3)"/><text x="73.00" y="62.50"></text></g><g><title>start (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:11) (4 samples, 1.02%)</title><rect x="70" y="68" width="12" height="15" fill="rgb(213,84,40)"/><text x="73.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_m_reg.py:39) (4 samples, 1.02%)</title><rect x="70" y="84" width="12" height="15" fill="rgb(244,198,54)"/><text x="73.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:151) (3 samples, 0.77%)</title><rect x="73" y="100" width="9" height="15" fill="rgb(215,202,24)"/><text x="76.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py:627) (3 samples, 0.77%)</title><rect x="73" y="116" width="9" height="15" fill="rgb(222,187,5)"/><text x="76.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py:370) (3 samples, 0.77%)</title><rect x="73" y="132" width="9" height="15" fill="rgb(245,6,14)"/><text x="76.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py:521) (3 samples, 0.77%)</title><rect x="73" y="148" width="9" height="15" fill="rgb(232,169,10)"/><text x="76.00" y="158.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py:254) (2 samples, 0.51%)</title><rect x="76" y="164" width="6" height="15" fill="rgb(244,164,25)"/><text x="79.00" y="174.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py:129) (2 samples, 0.51%)</title><rect x="76" y="180" width="6" height="15" fill="rgb(242,92,30)"/><text x="79.00" y="190.50"></text></g><g><title>mean (&lt;__array_function__ internals&gt;:6) (1 samples, 0.26%)</title><rect x="79" y="196" width="3" height="15" fill="rgb(215,92,38)"/><text x="82.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.26%)</title><rect x="79" y="212" width="3" height="15" fill="rgb(205,183,9)"/><text x="82.00" y="222.50"></text></g><g><title>mean (numpy/core/fromnumeric.py:3257) (1 samples, 0.26%)</title><rect x="79" y="228" width="3" height="15" fill="rgb(230,53,38)"/><text x="82.00" y="238.50"></text></g><g><title>_mean (numpy/core/_methods.py:154) (1 samples, 0.26%)</title><rect x="79" y="244" width="3" height="15" fill="rgb(232,95,41)"/><text x="82.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.26%)</title><rect x="79" y="260" width="3" height="15" fill="rgb(237,52,15)"/><text x="82.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.26%)</title><rect x="79" y="276" width="3" height="15" fill="rgb(223,71,39)"/><text x="82.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.26%)</title><rect x="79" y="292" width="3" height="15" fill="rgb(217,41,54)"/><text x="82.00" y="302.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.26%)</title><rect x="79" y="308" width="3" height="15" fill="rgb(233,74,51)"/><text x="82.00" y="318.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.26%)</title><rect x="79" y="324" width="3" height="15" fill="rgb(216,162,39)"/><text x="82.00" y="334.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.26%)</title><rect x="79" y="340" width="3" height="15" fill="rgb(246,87,43)"/><text x="82.00" y="350.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:372) (1 samples, 0.26%)</title><rect x="79" y="356" width="3" height="15" fill="rgb(243,228,28)"/><text x="82.00" y="366.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.26%)</title><rect x="79" y="372" width="3" height="15" fill="rgb(210,55,22)"/><text x="82.00" y="382.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.26%)</title><rect x="79" y="388" width="3" height="15" fill="rgb(222,216,29)"/><text x="82.00" y="398.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.26%)</title><rect x="88" y="164" width="3" height="15" fill="rgb(244,0,12)"/><text x="91.00" y="174.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (1 samples, 0.26%)</title><rect x="91" y="164" width="3" height="15" fill="rgb(227,49,15)"/><text x="94.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.51%)</title><rect x="97" y="180" width="6" height="15" fill="rgb(239,86,11)"/><text x="100.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (5 samples, 1.28%)</title><rect x="118" y="196" width="15" height="15" fill="rgb(221,94,45)"/><text x="121.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (11 samples, 2.81%)</title><rect x="103" y="180" width="33" height="15" fill="rgb(235,122,8)"/><text x="106.00" y="190.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.26%)</title><rect x="133" y="196" width="3" height="15" fill="rgb(230,118,45)"/><text x="136.00" y="206.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1332) (22 samples, 5.63%)</title><rect x="88" y="148" width="66" height="15" fill="rgb(249,192,31)"/><text x="91.00" y="158.50">predict..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (20 samples, 5.12%)</title><rect x="94" y="164" width="60" height="15" fill="rgb(220,37,7)"/><text x="97.00" y="174.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (6 samples, 1.53%)</title><rect x="136" y="180" width="18" height="15" fill="rgb(247,63,1)"/><text x="139.00" y="190.50"></text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.51%)</title><rect x="148" y="196" width="6" height="15" fill="rgb(246,35,54)"/><text x="151.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:462) (1 samples, 0.26%)</title><rect x="157" y="180" width="3" height="15" fill="rgb(207,37,7)"/><text x="160.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:488) (1 samples, 0.26%)</title><rect x="160" y="180" width="3" height="15" fill="rgb(221,102,39)"/><text x="163.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.26%)</title><rect x="163" y="180" width="3" height="15" fill="rgb(219,38,11)"/><text x="166.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.26%)</title><rect x="169" y="196" width="3" height="15" fill="rgb(220,89,5)"/><text x="172.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 0.77%)</title><rect x="166" y="180" width="9" height="15" fill="rgb(209,54,20)"/><text x="169.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.26%)</title><rect x="172" y="196" width="3" height="15" fill="rgb(227,162,22)"/><text x="175.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:175) (1 samples, 0.26%)</title><rect x="175" y="196" width="4" height="15" fill="rgb(219,119,48)"/><text x="178.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.26%)</title><rect x="182" y="212" width="3" height="15" fill="rgb(217,79,34)"/><text x="185.00" y="222.50"></text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.26%)</title><rect x="185" y="212" width="3" height="15" fill="rgb(223,185,47)"/><text x="188.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.28%)</title><rect x="175" y="180" width="16" height="15" fill="rgb(239,224,27)"/><text x="178.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (4 samples, 1.02%)</title><rect x="179" y="196" width="12" height="15" fill="rgb(225,30,13)"/><text x="182.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.26%)</title><rect x="188" y="212" width="3" height="15" fill="rgb(247,158,4)"/><text x="191.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (2 samples, 0.51%)</title><rect x="191" y="180" width="6" height="15" fill="rgb(239,188,37)"/><text x="194.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.51%)</title><rect x="191" y="196" width="6" height="15" fill="rgb(220,128,13)"/><text x="194.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1610) (1 samples, 0.26%)</title><rect x="194" y="212" width="3" height="15" fill="rgb(230,39,22)"/><text x="197.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.26%)</title><rect x="200" y="196" width="3" height="15" fill="rgb(227,154,31)"/><text x="203.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (3 samples, 0.77%)</title><rect x="197" y="180" width="9" height="15" fill="rgb(236,122,35)"/><text x="200.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.26%)</title><rect x="203" y="196" width="3" height="15" fill="rgb(223,171,16)"/><text x="206.00" y="206.50"></text></g><g><title>0x7f3b80ad5130 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="203" y="212" width="3" height="15" fill="rgb(250,229,3)"/><text x="206.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:392) (5 samples, 1.28%)</title><rect x="212" y="196" width="15" height="15" fill="rgb(218,109,2)"/><text x="215.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (3 samples, 0.77%)</title><rect x="218" y="212" width="9" height="15" fill="rgb(216,53,22)"/><text x="221.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py:393) (2 samples, 0.51%)</title><rect x="227" y="196" width="6" height="15" fill="rgb(232,204,43)"/><text x="230.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.26%)</title><rect x="230" y="212" width="3" height="15" fill="rgb(206,0,4)"/><text x="233.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:543) (10 samples, 2.56%)</title><rect x="206" y="180" width="30" height="15" fill="rgb(241,195,33)"/><text x="209.00" y="190.50">ch..</text></g><g><title>issubdtype (numpy/core/numerictypes.py:394) (1 samples, 0.26%)</title><rect x="233" y="196" width="3" height="15" fill="rgb(250,203,33)"/><text x="236.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py:328) (1 samples, 0.26%)</title><rect x="233" y="212" width="3" height="15" fill="rgb(235,112,32)"/><text x="236.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.51%)</title><rect x="245" y="212" width="6" height="15" fill="rgb(231,80,28)"/><text x="248.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (6 samples, 1.53%)</title><rect x="236" y="196" width="18" height="15" fill="rgb(227,159,30)"/><text x="239.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="251" y="212" width="3" height="15" fill="rgb(243,30,44)"/><text x="254.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (7 samples, 1.79%)</title><rect x="236" y="180" width="21" height="15" fill="rgb(207,17,10)"/><text x="239.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:42) (1 samples, 0.26%)</title><rect x="254" y="196" width="3" height="15" fill="rgb(219,170,18)"/><text x="257.00" y="206.50"></text></g><g><title>get_config (sklearn/_config.py:26) (1 samples, 0.26%)</title><rect x="254" y="212" width="3" height="15" fill="rgb(205,102,18)"/><text x="257.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (4 samples, 1.02%)</title><rect x="260" y="196" width="12" height="15" fill="rgb(216,36,25)"/><text x="263.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 0.51%)</title><rect x="266" y="212" width="6" height="15" fill="rgb(233,155,28)"/><text x="269.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:667) (43 samples, 11.00%)</title><rect x="157" y="164" width="130" height="15" fill="rgb(223,102,8)"/><text x="160.00" y="174.50">_predict (sklear..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (10 samples, 2.56%)</title><rect x="257" y="180" width="30" height="15" fill="rgb(222,123,21)"/><text x="260.00" y="190.50">ch..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (5 samples, 1.28%)</title><rect x="272" y="196" width="15" height="15" fill="rgb(221,46,33)"/><text x="275.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (4 samples, 1.02%)</title><rect x="275" y="212" width="12" height="15" fill="rgb(207,176,13)"/><text x="278.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (4 samples, 1.02%)</title><rect x="275" y="228" width="12" height="15" fill="rgb(217,121,9)"/><text x="278.00" y="238.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:675) (1 samples, 0.26%)</title><rect x="287" y="164" width="3" height="15" fill="rgb(240,109,11)"/><text x="290.00" y="174.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:681) (1 samples, 0.26%)</title><rect x="290" y="164" width="3" height="15" fill="rgb(227,216,7)"/><text x="293.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1814) (1 samples, 0.26%)</title><rect x="299" y="180" width="3" height="15" fill="rgb(236,223,16)"/><text x="302.00" y="190.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:683) (5 samples, 1.28%)</title><rect x="293" y="164" width="15" height="15" fill="rgb(207,4,33)"/><text x="296.00" y="174.50"></text></g><g><title>array_empty (multiarraymodule.c:1837) (2 samples, 0.51%)</title><rect x="302" y="180" width="6" height="15" fill="rgb(247,45,5)"/><text x="305.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (2 samples, 0.51%)</title><rect x="302" y="196" width="6" height="15" fill="rgb(254,129,50)"/><text x="305.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c:3111) (2 samples, 0.51%)</title><rect x="302" y="212" width="6" height="15" fill="rgb(215,98,54)"/><text x="305.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.51%)</title><rect x="302" y="228" width="6" height="15" fill="rgb(249,110,16)"/><text x="305.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (2 samples, 0.51%)</title><rect x="302" y="244" width="6" height="15" fill="rgb(225,2,23)"/><text x="305.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c:140) (2 samples, 0.51%)</title><rect x="302" y="260" width="6" height="15" fill="rgb(213,37,24)"/><text x="305.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (2 samples, 0.51%)</title><rect x="302" y="276" width="6" height="15" fill="rgb(251,91,50)"/><text x="305.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:100) (2 samples, 0.51%)</title><rect x="308" y="180" width="6" height="15" fill="rgb(229,91,34)"/><text x="311.00" y="190.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:102) (2 samples, 0.51%)</title><rect x="314" y="180" width="6" height="15" fill="rgb(239,191,16)"/><text x="317.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.51%)</title><rect x="320" y="196" width="6" height="15" fill="rgb(233,63,44)"/><text x="323.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.51%)</title><rect x="320" y="212" width="6" height="15" fill="rgb(237,155,42)"/><text x="323.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.51%)</title><rect x="320" y="228" width="6" height="15" fill="rgb(252,59,33)"/><text x="323.00" y="238.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (4 samples, 1.02%)</title><rect x="326" y="212" width="12" height="15" fill="rgb(241,213,6)"/><text x="329.00" y="222.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2603) (1 samples, 0.26%)</title><rect x="338" y="244" width="3" height="15" fill="rgb(242,111,19)"/><text x="341.00" y="254.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2606) (1 samples, 0.26%)</title><rect x="341" y="244" width="3" height="15" fill="rgb(248,27,50)"/><text x="344.00" y="254.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1070) (1 samples, 0.26%)</title><rect x="341" y="260" width="3" height="15" fill="rgb(241,85,47)"/><text x="344.00" y="270.50"></text></g><g><title>0x7f3b7fc1a9d0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="341" y="276" width="3" height="15" fill="rgb(215,86,27)"/><text x="344.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2689) (1 samples, 0.26%)</title><rect x="344" y="244" width="4" height="15" fill="rgb(223,46,20)"/><text x="347.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c:2406) (1 samples, 0.26%)</title><rect x="344" y="260" width="4" height="15" fill="rgb(217,209,53)"/><text x="347.00" y="270.50"></text></g><g><title>PyArray_DIM (ndarraytypes.h:1510) (1 samples, 0.26%)</title><rect x="344" y="276" width="4" height="15" fill="rgb(213,100,9)"/><text x="347.00" y="286.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2811) (1 samples, 0.26%)</title><rect x="348" y="244" width="3" height="15" fill="rgb(209,217,45)"/><text x="351.00" y="254.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c:370) (1 samples, 0.26%)</title><rect x="348" y="260" width="3" height="15" fill="rgb(211,51,3)"/><text x="351.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.26%)</title><rect x="351" y="260" width="3" height="15" fill="rgb(211,21,53)"/><text x="354.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.26%)</title><rect x="351" y="276" width="3" height="15" fill="rgb(245,29,46)"/><text x="354.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1106) (1 samples, 0.26%)</title><rect x="351" y="292" width="3" height="15" fill="rgb(225,193,16)"/><text x="354.00" y="302.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.26%)</title><rect x="351" y="308" width="3" height="15" fill="rgb(254,37,42)"/><text x="354.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2858) (1 samples, 0.26%)</title><rect x="354" y="276" width="3" height="15" fill="rgb(238,201,44)"/><text x="357.00" y="286.50"></text></g><g><title>npyiter_replace_axisdata (nditer_constr.c:1958) (1 samples, 0.26%)</title><rect x="354" y="292" width="3" height="15" fill="rgb(233,43,47)"/><text x="357.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2932) (1 samples, 0.26%)</title><rect x="357" y="276" width="3" height="15" fill="rgb(205,26,20)"/><text x="360.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2514) (1 samples, 0.26%)</title><rect x="357" y="292" width="3" height="15" fill="rgb(244,43,44)"/><text x="360.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:301) (1 samples, 0.26%)</title><rect x="360" y="292" width="3" height="15" fill="rgb(211,197,14)"/><text x="363.00" y="302.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c:691) (1 samples, 0.26%)</title><rect x="360" y="308" width="3" height="15" fill="rgb(210,108,47)"/><text x="363.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:370) (1 samples, 0.26%)</title><rect x="363" y="292" width="3" height="15" fill="rgb(205,187,21)"/><text x="366.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:120) (1 samples, 0.26%)</title><rect x="366" y="308" width="3" height="15" fill="rgb(243,26,10)"/><text x="369.00" y="318.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:722) (1 samples, 0.26%)</title><rect x="366" y="324" width="3" height="15" fill="rgb(239,226,17)"/><text x="369.00" y="334.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:143) (1 samples, 0.26%)</title><rect x="369" y="308" width="3" height="15" fill="rgb(214,167,3)"/><text x="372.00" y="318.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2871) (8 samples, 2.05%)</title><rect x="351" y="244" width="24" height="15" fill="rgb(217,225,30)"/><text x="354.00" y="254.50">P..</text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (7 samples, 1.79%)</title><rect x="354" y="260" width="21" height="15" fill="rgb(249,104,15)"/><text x="357.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2942) (5 samples, 1.28%)</title><rect x="360" y="276" width="15" height="15" fill="rgb(205,174,46)"/><text x="363.00" y="286.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (3 samples, 0.77%)</title><rect x="366" y="292" width="9" height="15" fill="rgb(206,180,1)"/><text x="369.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.26%)</title><rect x="372" y="308" width="3" height="15" fill="rgb(236,76,10)"/><text x="375.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.26%)</title><rect x="372" y="324" width="3" height="15" fill="rgb(250,123,28)"/><text x="375.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.26%)</title><rect x="372" y="340" width="3" height="15" fill="rgb(228,41,14)"/><text x="375.00" y="350.50"></text></g><g><title>0x7f3b80999318 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="372" y="356" width="3" height="15" fill="rgb(252,180,2)"/><text x="375.00" y="366.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2896) (2 samples, 0.51%)</title><rect x="375" y="244" width="6" height="15" fill="rgb(235,132,5)"/><text x="378.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.51%)</title><rect x="375" y="260" width="6" height="15" fill="rgb(243,192,21)"/><text x="378.00" y="270.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:2961) (1 samples, 0.26%)</title><rect x="381" y="244" width="3" height="15" fill="rgb(222,81,31)"/><text x="384.00" y="254.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.26%)</title><rect x="381" y="260" width="3" height="15" fill="rgb(225,216,28)"/><text x="384.00" y="270.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.26%)</title><rect x="381" y="276" width="3" height="15" fill="rgb(251,212,6)"/><text x="384.00" y="286.50"></text></g><g><title>npyiter_goto_iterindex (nditer_api.c:1777) (1 samples, 0.26%)</title><rect x="381" y="292" width="3" height="15" fill="rgb(251,98,52)"/><text x="384.00" y="302.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3051) (1 samples, 0.26%)</title><rect x="384" y="244" width="3" height="15" fill="rgb(219,42,19)"/><text x="387.00" y="254.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:151) (21 samples, 5.37%)</title><rect x="326" y="196" width="64" height="15" fill="rgb(233,44,32)"/><text x="329.00" y="206.50">safe_sp..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (17 samples, 4.35%)</title><rect x="338" y="212" width="52" height="15" fill="rgb(213,94,34)"/><text x="341.00" y="222.50">ufunc..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3142) (17 samples, 4.35%)</title><rect x="338" y="228" width="52" height="15" fill="rgb(210,40,32)"/><text x="341.00" y="238.50">PyUFu..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c:3056) (1 samples, 0.26%)</title><rect x="387" y="244" width="3" height="15" fill="rgb(216,117,1)"/><text x="390.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:697) (1 samples, 0.26%)</title><rect x="387" y="260" width="3" height="15" fill="rgb(209,46,4)"/><text x="390.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="387" y="276" width="3" height="15" fill="rgb(206,24,32)"/><text x="390.00" y="286.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="387" y="292" width="3" height="15" fill="rgb(241,88,31)"/><text x="390.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.26%)</title><rect x="387" y="308" width="3" height="15" fill="rgb(207,27,29)"/><text x="390.00" y="318.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:104) (27 samples, 6.91%)</title><rect x="320" y="180" width="82" height="15" fill="rgb(225,188,48)"/><text x="323.00" y="190.50">_forward_..</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py:153) (4 samples, 1.02%)</title><rect x="390" y="196" width="12" height="15" fill="rgb(240,180,39)"/><text x="393.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (3 samples, 0.77%)</title><rect x="393" y="212" width="9" height="15" fill="rgb(228,102,28)"/><text x="396.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.26%)</title><rect x="402" y="196" width="3" height="15" fill="rgb(211,205,27)"/><text x="405.00" y="206.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.26%)</title><rect x="402" y="212" width="3" height="15" fill="rgb(222,172,49)"/><text x="405.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.26%)</title><rect x="402" y="228" width="3" height="15" fill="rgb(244,155,27)"/><text x="405.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.26%)</title><rect x="402" y="244" width="3" height="15" fill="rgb(222,127,6)"/><text x="405.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.26%)</title><rect x="405" y="260" width="3" height="15" fill="rgb(243,211,41)"/><text x="408.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1476) (1 samples, 0.26%)</title><rect x="405" y="276" width="3" height="15" fill="rgb(244,111,44)"/><text x="408.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (2 samples, 0.51%)</title><rect x="405" y="244" width="6" height="15" fill="rgb(214,90,20)"/><text x="408.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:326) (1 samples, 0.26%)</title><rect x="408" y="260" width="3" height="15" fill="rgb(220,124,34)"/><text x="411.00" y="270.50"></text></g><g><title>npyiter_flip_negative_strides (nditer_constr.c:2147) (1 samples, 0.26%)</title><rect x="408" y="276" width="3" height="15" fill="rgb(234,93,7)"/><text x="411.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1576) (1 samples, 0.26%)</title><rect x="411" y="244" width="3" height="15" fill="rgb(236,229,40)"/><text x="414.00" y="254.50"></text></g><g><title>NpyIter_GetInnerLoopSizePtr (nditer_api.c:1371) (1 samples, 0.26%)</title><rect x="411" y="260" width="3" height="15" fill="rgb(241,66,11)"/><text x="414.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:707) (1 samples, 0.26%)</title><rect x="414" y="260" width="3" height="15" fill="rgb(238,1,33)"/><text x="417.00" y="270.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:105) (6 samples, 1.53%)</title><rect x="402" y="180" width="18" height="15" fill="rgb(214,132,33)"/><text x="405.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.28%)</title><rect x="405" y="196" width="15" height="15" fill="rgb(238,96,2)"/><text x="408.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (5 samples, 1.28%)</title><rect x="405" y="212" width="15" height="15" fill="rgb(206,179,23)"/><text x="408.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (5 samples, 1.28%)</title><rect x="405" y="228" width="15" height="15" fill="rgb(209,188,24)"/><text x="408.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (2 samples, 0.51%)</title><rect x="414" y="244" width="6" height="15" fill="rgb(245,210,2)"/><text x="417.00" y="254.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.26%)</title><rect x="417" y="260" width="3" height="15" fill="rgb(225,7,15)"/><text x="420.00" y="270.50"></text></g><g><title>0x7f3b809f7a41 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="417" y="276" width="3" height="15" fill="rgb(213,28,35)"/><text x="420.00" y="286.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:108) (2 samples, 0.51%)</title><rect x="420" y="180" width="6" height="15" fill="rgb(218,186,41)"/><text x="423.00" y="190.50"></text></g><g><title>__new__ (numpy/core/getlimits.py:372) (1 samples, 0.26%)</title><rect x="444" y="212" width="3" height="15" fill="rgb(235,117,52)"/><text x="447.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;:4) (1 samples, 0.26%)</title><rect x="447" y="212" width="3" height="15" fill="rgb(253,15,36)"/><text x="450.00" y="222.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.26%)</title><rect x="450" y="228" width="3" height="15" fill="rgb(228,65,46)"/><text x="453.00" y="238.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.26%)</title><rect x="450" y="244" width="3" height="15" fill="rgb(234,97,17)"/><text x="453.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c:40) (1 samples, 0.26%)</title><rect x="450" y="260" width="3" height="15" fill="rgb(251,173,11)"/><text x="453.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.26%)</title><rect x="450" y="276" width="3" height="15" fill="rgb(241,11,12)"/><text x="453.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.26%)</title><rect x="450" y="292" width="3" height="15" fill="rgb(246,18,16)"/><text x="453.00" y="302.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="450" y="308" width="3" height="15" fill="rgb(208,202,54)"/><text x="453.00" y="318.50"></text></g><g><title>0x7f3b80a18120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="459" y="260" width="3" height="15" fill="rgb(235,58,15)"/><text x="462.00" y="270.50"></text></g><g><title>_clip (numpy/core/_methods.py:104) (1 samples, 0.26%)</title><rect x="462" y="308" width="3" height="15" fill="rgb(230,226,40)"/><text x="465.00" y="318.50"></text></g><g><title>_clip_dep_is_byte_swapped (numpy/core/_methods.py:75) (1 samples, 0.26%)</title><rect x="462" y="324" width="3" height="15" fill="rgb(225,90,21)"/><text x="465.00" y="334.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (3 samples, 0.77%)</title><rect x="468" y="324" width="9" height="15" fill="rgb(218,192,37)"/><text x="471.00" y="334.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.26%)</title><rect x="474" y="340" width="3" height="15" fill="rgb(215,164,14)"/><text x="477.00" y="350.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 0.77%)</title><rect x="486" y="404" width="9" height="15" fill="rgb(242,64,19)"/><text x="489.00" y="414.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="492" y="420" width="3" height="15" fill="rgb(220,141,44)"/><text x="495.00" y="430.50"></text></g><g><title>0x7f3b80ad5d21 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="492" y="436" width="3" height="15" fill="rgb(210,66,42)"/><text x="495.00" y="446.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (7 samples, 1.79%)</title><rect x="477" y="324" width="21" height="15" fill="rgb(250,114,22)"/><text x="480.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (6 samples, 1.53%)</title><rect x="480" y="340" width="18" height="15" fill="rgb(231,59,42)"/><text x="483.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.53%)</title><rect x="480" y="356" width="18" height="15" fill="rgb(245,192,28)"/><text x="483.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3021) (6 samples, 1.53%)</title><rect x="480" y="372" width="18" height="15" fill="rgb(212,123,15)"/><text x="483.00" y="382.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (6 samples, 1.53%)</title><rect x="480" y="388" width="18" height="15" fill="rgb(248,229,17)"/><text x="483.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.26%)</title><rect x="495" y="404" width="3" height="15" fill="rgb(218,99,37)"/><text x="498.00" y="414.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.26%)</title><rect x="495" y="420" width="3" height="15" fill="rgb(243,177,8)"/><text x="498.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.26%)</title><rect x="495" y="436" width="3" height="15" fill="rgb(251,31,53)"/><text x="498.00" y="446.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.26%)</title><rect x="495" y="452" width="3" height="15" fill="rgb(232,49,35)"/><text x="498.00" y="462.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:242) (1 samples, 0.26%)</title><rect x="495" y="468" width="3" height="15" fill="rgb(218,0,41)"/><text x="498.00" y="478.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.26%)</title><rect x="501" y="340" width="3" height="15" fill="rgb(234,171,44)"/><text x="504.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.26%)</title><rect x="501" y="356" width="3" height="15" fill="rgb(235,111,12)"/><text x="504.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.26%)</title><rect x="501" y="372" width="3" height="15" fill="rgb(247,58,44)"/><text x="504.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:19) (1 samples, 0.26%)</title><rect x="501" y="388" width="3" height="15" fill="rgb(221,151,52)"/><text x="504.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.26%)</title><rect x="504" y="388" width="3" height="15" fill="rgb(250,127,12)"/><text x="507.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (2 samples, 0.51%)</title><rect x="504" y="356" width="6" height="15" fill="rgb(206,123,17)"/><text x="507.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.51%)</title><rect x="504" y="372" width="6" height="15" fill="rgb(244,226,4)"/><text x="507.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1933) (1 samples, 0.26%)</title><rect x="507" y="388" width="3" height="15" fill="rgb(234,108,41)"/><text x="510.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.26%)</title><rect x="507" y="404" width="3" height="15" fill="rgb(242,141,40)"/><text x="510.00" y="414.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1681) (1 samples, 0.26%)</title><rect x="510" y="388" width="3" height="15" fill="rgb(216,222,5)"/><text x="513.00" y="398.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:738) (1 samples, 0.26%)</title><rect x="510" y="404" width="3" height="15" fill="rgb(222,124,11)"/><text x="513.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.51%)</title><rect x="510" y="356" width="7" height="15" fill="rgb(228,119,24)"/><text x="513.00" y="366.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c:2010) (2 samples, 0.51%)</title><rect x="510" y="372" width="7" height="15" fill="rgb(222,213,53)"/><text x="513.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1689) (1 samples, 0.26%)</title><rect x="513" y="388" width="4" height="15" fill="rgb(216,103,46)"/><text x="516.00" y="398.50"></text></g><g><title>_clip (numpy/core/_methods.py:106) (18 samples, 4.60%)</title><rect x="465" y="308" width="55" height="15" fill="rgb(248,53,52)"/><text x="468.00" y="318.50">_clip..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (7 samples, 1.79%)</title><rect x="498" y="324" width="22" height="15" fill="rgb(209,22,32)"/><text x="501.00" y="334.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (5 samples, 1.28%)</title><rect x="504" y="340" width="16" height="15" fill="rgb(238,129,2)"/><text x="507.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.26%)</title><rect x="517" y="356" width="3" height="15" fill="rgb(223,16,53)"/><text x="520.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.26%)</title><rect x="517" y="372" width="3" height="15" fill="rgb(237,152,46)"/><text x="520.00" y="382.50"></text></g><g><title>0x7f3b7fc19820 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="517" y="388" width="3" height="15" fill="rgb(254,66,37)"/><text x="520.00" y="398.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:65) (8 samples, 2.05%)</title><rect x="520" y="324" width="24" height="15" fill="rgb(219,187,33)"/><text x="523.00" y="334.50">_..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (7 samples, 1.79%)</title><rect x="523" y="340" width="21" height="15" fill="rgb(218,126,44)"/><text x="526.00" y="350.50"></text></g><g><title>0x7f3b80a0de50 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="541" y="356" width="3" height="15" fill="rgb(234,51,35)"/><text x="544.00" y="366.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:5) (1 samples, 0.26%)</title><rect x="544" y="340" width="3" height="15" fill="rgb(210,154,40)"/><text x="547.00" y="350.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:66) (2 samples, 0.51%)</title><rect x="544" y="324" width="6" height="15" fill="rgb(221,149,8)"/><text x="547.00" y="334.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;:6) (1 samples, 0.26%)</title><rect x="547" y="340" width="3" height="15" fill="rgb(247,66,51)"/><text x="550.00" y="350.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.26%)</title><rect x="547" y="356" width="3" height="15" fill="rgb(231,60,22)"/><text x="550.00" y="366.50"></text></g><g><title>ndim (numpy/core/fromnumeric.py:3019) (1 samples, 0.26%)</title><rect x="547" y="372" width="3" height="15" fill="rgb(246,166,48)"/><text x="550.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.26%)</title><rect x="550" y="356" width="3" height="15" fill="rgb(243,3,21)"/><text x="553.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.26%)</title><rect x="550" y="372" width="3" height="15" fill="rgb(233,107,14)"/><text x="553.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1897) (1 samples, 0.26%)</title><rect x="550" y="388" width="3" height="15" fill="rgb(221,211,49)"/><text x="553.00" y="398.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c:308) (1 samples, 0.26%)</title><rect x="550" y="404" width="3" height="15" fill="rgb(233,55,46)"/><text x="553.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="550" y="420" width="3" height="15" fill="rgb(209,16,43)"/><text x="553.00" y="430.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.26%)</title><rect x="550" y="436" width="3" height="15" fill="rgb(235,228,19)"/><text x="553.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.51%)</title><rect x="550" y="340" width="6" height="15" fill="rgb(239,169,7)"/><text x="553.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.26%)</title><rect x="553" y="356" width="3" height="15" fill="rgb(229,192,34)"/><text x="556.00" y="366.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1981) (1 samples, 0.26%)</title><rect x="553" y="372" width="3" height="15" fill="rgb(226,201,43)"/><text x="556.00" y="382.50"></text></g><g><title>_clip (numpy/core/_methods.py:109) (13 samples, 3.32%)</title><rect x="520" y="308" width="39" height="15" fill="rgb(220,157,26)"/><text x="523.00" y="318.50">_cl..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py:69) (3 samples, 0.77%)</title><rect x="550" y="324" width="9" height="15" fill="rgb(239,105,36)"/><text x="553.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4768) (1 samples, 0.26%)</title><rect x="556" y="340" width="3" height="15" fill="rgb(224,116,30)"/><text x="559.00" y="350.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.26%)</title><rect x="556" y="356" width="3" height="15" fill="rgb(223,21,35)"/><text x="559.00" y="366.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="556" y="372" width="3" height="15" fill="rgb(232,200,26)"/><text x="559.00" y="382.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="556" y="388" width="3" height="15" fill="rgb(219,47,48)"/><text x="559.00" y="398.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.26%)</title><rect x="556" y="404" width="3" height="15" fill="rgb(240,95,33)"/><text x="559.00" y="414.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.26%)</title><rect x="565" y="372" width="3" height="15" fill="rgb(242,203,52)"/><text x="568.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.26%)</title><rect x="565" y="388" width="3" height="15" fill="rgb(222,142,52)"/><text x="568.00" y="398.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="565" y="404" width="3" height="15" fill="rgb(235,119,16)"/><text x="568.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:76) (1 samples, 0.26%)</title><rect x="568" y="420" width="3" height="15" fill="rgb(251,225,16)"/><text x="571.00" y="430.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="568" y="436" width="3" height="15" fill="rgb(206,10,53)"/><text x="571.00" y="446.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (4 samples, 1.02%)</title><rect x="565" y="340" width="12" height="15" fill="rgb(210,36,18)"/><text x="568.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.02%)</title><rect x="565" y="356" width="12" height="15" fill="rgb(233,29,53)"/><text x="568.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (3 samples, 0.77%)</title><rect x="568" y="372" width="9" height="15" fill="rgb(220,142,39)"/><text x="571.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (3 samples, 0.77%)</title><rect x="568" y="388" width="9" height="15" fill="rgb(248,69,33)"/><text x="571.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (3 samples, 0.77%)</title><rect x="568" y="404" width="9" height="15" fill="rgb(205,223,54)"/><text x="571.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (2 samples, 0.51%)</title><rect x="571" y="420" width="6" height="15" fill="rgb(224,31,4)"/><text x="574.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.26%)</title><rect x="577" y="372" width="3" height="15" fill="rgb(205,29,21)"/><text x="580.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.26%)</title><rect x="577" y="388" width="3" height="15" fill="rgb(249,88,22)"/><text x="580.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1618) (1 samples, 0.26%)</title><rect x="577" y="404" width="3" height="15" fill="rgb(206,166,17)"/><text x="580.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c:540) (1 samples, 0.26%)</title><rect x="577" y="420" width="3" height="15" fill="rgb(237,28,3)"/><text x="580.00" y="430.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1099) (1 samples, 0.26%)</title><rect x="580" y="372" width="3" height="15" fill="rgb(223,38,46)"/><text x="583.00" y="382.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.77%)</title><rect x="577" y="356" width="9" height="15" fill="rgb(211,34,43)"/><text x="580.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1142) (1 samples, 0.26%)</title><rect x="583" y="372" width="3" height="15" fill="rgb(246,121,47)"/><text x="586.00" y="382.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c:910) (1 samples, 0.26%)</title><rect x="583" y="388" width="3" height="15" fill="rgb(230,81,26)"/><text x="586.00" y="398.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="586" y="372" width="3" height="15" fill="rgb(252,69,7)"/><text x="589.00" y="382.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.26%)</title><rect x="586" y="388" width="3" height="15" fill="rgb(242,14,7)"/><text x="589.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.26%)</title><rect x="586" y="404" width="3" height="15" fill="rgb(221,121,52)"/><text x="589.00" y="414.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1630) (1 samples, 0.26%)</title><rect x="586" y="420" width="3" height="15" fill="rgb(220,88,2)"/><text x="589.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.51%)</title><rect x="586" y="356" width="6" height="15" fill="rgb(222,56,18)"/><text x="589.00" y="366.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.26%)</title><rect x="589" y="372" width="3" height="15" fill="rgb(231,229,6)"/><text x="592.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.26%)</title><rect x="589" y="388" width="3" height="15" fill="rgb(245,78,54)"/><text x="592.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.26%)</title><rect x="589" y="404" width="3" height="15" fill="rgb(254,131,28)"/><text x="592.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.26%)</title><rect x="589" y="420" width="3" height="15" fill="rgb(208,217,6)"/><text x="592.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:890) (1 samples, 0.26%)</title><rect x="589" y="436" width="3" height="15" fill="rgb(223,122,16)"/><text x="592.00" y="446.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1298) (1 samples, 0.26%)</title><rect x="592" y="372" width="3" height="15" fill="rgb(245,195,42)"/><text x="595.00" y="382.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1499) (1 samples, 0.26%)</title><rect x="592" y="388" width="3" height="15" fill="rgb(218,216,49)"/><text x="595.00" y="398.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.26%)</title><rect x="595" y="372" width="3" height="15" fill="rgb(230,105,8)"/><text x="598.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:65) (1 samples, 0.26%)</title><rect x="595" y="388" width="3" height="15" fill="rgb(221,111,45)"/><text x="598.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:264) (1 samples, 0.26%)</title><rect x="595" y="404" width="3" height="15" fill="rgb(229,25,42)"/><text x="598.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.26%)</title><rect x="595" y="420" width="3" height="15" fill="rgb(205,110,39)"/><text x="598.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.26%)</title><rect x="595" y="436" width="3" height="15" fill="rgb(229,113,51)"/><text x="598.00" y="446.50"></text></g><g><title>npy_uint_alignment (common.h:216) (1 samples, 0.26%)</title><rect x="595" y="452" width="3" height="15" fill="rgb(217,113,14)"/><text x="598.00" y="462.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.26%)</title><rect x="598" y="388" width="3" height="15" fill="rgb(205,176,19)"/><text x="601.00" y="398.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (4 samples, 1.02%)</title><rect x="592" y="356" width="12" height="15" fill="rgb(236,152,16)"/><text x="595.00" y="366.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (2 samples, 0.51%)</title><rect x="598" y="372" width="6" height="15" fill="rgb(209,226,43)"/><text x="601.00" y="382.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="601" y="388" width="3" height="15" fill="rgb(220,129,30)"/><text x="604.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="601" y="404" width="3" height="15" fill="rgb(210,70,19)"/><text x="604.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.26%)</title><rect x="601" y="420" width="3" height="15" fill="rgb(254,88,7)"/><text x="604.00" y="430.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.26%)</title><rect x="604" y="388" width="3" height="15" fill="rgb(220,159,36)"/><text x="607.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.26%)</title><rect x="604" y="404" width="3" height="15" fill="rgb(220,38,31)"/><text x="607.00" y="414.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1478) (1 samples, 0.26%)</title><rect x="604" y="420" width="3" height="15" fill="rgb(215,135,11)"/><text x="607.00" y="430.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.51%)</title><rect x="604" y="356" width="6" height="15" fill="rgb(206,201,10)"/><text x="607.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (2 samples, 0.51%)</title><rect x="604" y="372" width="6" height="15" fill="rgb(212,141,45)"/><text x="607.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.26%)</title><rect x="607" y="388" width="3" height="15" fill="rgb(233,146,5)"/><text x="610.00" y="398.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:674) (1 samples, 0.26%)</title><rect x="607" y="404" width="3" height="15" fill="rgb(253,180,5)"/><text x="610.00" y="414.50"></text></g><g><title>0x7f3b809f7bc0 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="607" y="420" width="3" height="15" fill="rgb(223,54,30)"/><text x="610.00" y="430.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:109) (62 samples, 15.86%)</title><rect x="426" y="180" width="187" height="15" fill="rgb(225,131,28)"/><text x="429.00" y="190.50">_forward_pass (sklearn/n..</text></g><g><title>relu (sklearn/neural_network/_base.py:75) (62 samples, 15.86%)</title><rect x="426" y="196" width="187" height="15" fill="rgb(243,208,10)"/><text x="429.00" y="206.50">relu (sklearn/neural_net..</text></g><g><title>clip (&lt;__array_function__ internals&gt;:6) (54 samples, 13.81%)</title><rect x="450" y="212" width="163" height="15" fill="rgb(205,128,19)"/><text x="453.00" y="222.50">clip (&lt;__array_functi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (53 samples, 13.55%)</title><rect x="453" y="228" width="160" height="15" fill="rgb(238,166,15)"/><text x="456.00" y="238.50">array_implement_arra..</text></g><g><title>clip (numpy/core/fromnumeric.py:2037) (52 samples, 13.30%)</title><rect x="456" y="244" width="157" height="15" fill="rgb(221,51,9)"/><text x="459.00" y="254.50">clip (numpy/core/fro..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (50 samples, 12.79%)</title><rect x="462" y="260" width="151" height="15" fill="rgb(212,70,20)"/><text x="465.00" y="270.50">_wrapfunc (numpy/co..</text></g><g><title>array_clip (methods.c:2381) (50 samples, 12.79%)</title><rect x="462" y="276" width="151" height="15" fill="rgb(241,88,10)"/><text x="465.00" y="286.50">array_clip (methods..</text></g><g><title>forward_ndarray_method (methods.c:108) (50 samples, 12.79%)</title><rect x="462" y="292" width="151" height="15" fill="rgb(223,215,5)"/><text x="465.00" y="302.50">forward_ndarray_met..</text></g><g><title>_clip (numpy/core/_methods.py:132) (18 samples, 4.60%)</title><rect x="559" y="308" width="54" height="15" fill="rgb(238,108,0)"/><text x="562.00" y="318.50">_clip..</text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py:85) (17 samples, 4.35%)</title><rect x="562" y="324" width="51" height="15" fill="rgb(233,62,35)"/><text x="565.00" y="334.50">_clip..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.07%)</title><rect x="577" y="340" width="36" height="15" fill="rgb(223,172,45)"/><text x="580.00" y="350.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3280) (1 samples, 0.26%)</title><rect x="610" y="356" width="3" height="15" fill="rgb(209,220,22)"/><text x="613.00" y="366.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:685) (102 samples, 26.09%)</title><rect x="308" y="164" width="308" height="15" fill="rgb(212,217,50)"/><text x="311.00" y="174.50">_predict (sklearn/neural_network/_multila..</text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py:112) (1 samples, 0.26%)</title><rect x="613" y="180" width="3" height="15" fill="rgb(215,49,35)"/><text x="616.00" y="190.50"></text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1333) (154 samples, 39.39%)</title><rect x="154" y="148" width="465" height="15" fill="rgb(243,49,26)"/><text x="157.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py:1333)</text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py:686) (1 samples, 0.26%)</title><rect x="616" y="164" width="3" height="15" fill="rgb(217,0,52)"/><text x="619.00" y="174.50"></text></g><g><title>PyArray_Newshape (shape.c:194) (1 samples, 0.26%)</title><rect x="625" y="196" width="3" height="15" fill="rgb(210,192,27)"/><text x="628.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (180 samples, 46.04%)</title><rect x="88" y="132" width="543" height="15" fill="rgb(240,150,1)"/><text x="91.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py:1335) (4 samples, 1.02%)</title><rect x="619" y="148" width="12" height="15" fill="rgb(210,142,42)"/><text x="622.00" y="158.50"></text></g><g><title>array_ravel (methods.c:2443) (2 samples, 0.51%)</title><rect x="625" y="164" width="6" height="15" fill="rgb(247,87,39)"/><text x="628.00" y="174.50"></text></g><g><title>PyArray_Ravel (shape.c:906) (2 samples, 0.51%)</title><rect x="625" y="180" width="6" height="15" fill="rgb(219,21,33)"/><text x="628.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c:230) (1 samples, 0.26%)</title><rect x="628" y="196" width="3" height="15" fill="rgb(214,198,27)"/><text x="631.00" y="206.50"></text></g><g><title>_fix_unknown_dimension (shape.c:504) (1 samples, 0.26%)</title><rect x="628" y="212" width="3" height="15" fill="rgb(206,156,44)"/><text x="631.00" y="222.50"></text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.26%)</title><rect x="631" y="132" width="3" height="15" fill="rgb(227,195,42)"/><text x="634.00" y="142.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:54) (184 samples, 47.06%)</title><rect x="82" y="52" width="555" height="15" fill="rgb(214,120,16)"/><text x="85.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:53) (184 samples, 47.06%)</title><rect x="82" y="68" width="555" height="15" fill="rgb(215,94,42)"/><text x="85.00" y="78.50">profile_skl (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:37) (184 samples, 47.06%)</title><rect x="82" y="84" width="555" height="15" fill="rgb(210,144,43)"/><text x="85.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:37)</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:31) (184 samples, 47.06%)</title><rect x="82" y="100" width="555" height="15" fill="rgb(241,150,19)"/><text x="85.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (184 samples, 47.06%)</title><rect x="82" y="116" width="555" height="15" fill="rgb(243,127,14)"/><text x="85.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.26%)</title><rect x="634" y="132" width="3" height="15" fill="rgb(225,67,13)"/><text x="637.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.26%)</title><rect x="643" y="148" width="3" height="15" fill="rgb(205,206,18)"/><text x="646.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.51%)</title><rect x="646" y="148" width="6" height="15" fill="rgb(253,82,36)"/><text x="649.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:427) (1 samples, 0.26%)</title><rect x="655" y="164" width="3" height="15" fill="rgb(215,67,29)"/><text x="658.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:447) (1 samples, 0.26%)</title><rect x="658" y="164" width="3" height="15" fill="rgb(236,109,14)"/><text x="661.00" y="174.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:457) (1 samples, 0.26%)</title><rect x="661" y="164" width="3" height="15" fill="rgb(233,150,51)"/><text x="664.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (18 samples, 4.60%)</title><rect x="679" y="180" width="55" height="15" fill="rgb(252,120,49)"/><text x="682.00" y="190.50">run (..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (3 samples, 0.77%)</title><rect x="725" y="196" width="9" height="15" fill="rgb(217,123,39)"/><text x="728.00" y="206.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.26%)</title><rect x="752" y="244" width="3" height="15" fill="rgb(206,184,25)"/><text x="755.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1385) (1 samples, 0.26%)</title><rect x="752" y="260" width="3" height="15" fill="rgb(225,138,49)"/><text x="755.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:333) (1 samples, 0.26%)</title><rect x="755" y="260" width="3" height="15" fill="rgb(222,23,7)"/><text x="758.00" y="270.50"></text></g><g><title>arrays_overlap (array_assign.c:162) (1 samples, 0.26%)</title><rect x="755" y="276" width="3" height="15" fill="rgb(235,86,30)"/><text x="758.00" y="286.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:758) (1 samples, 0.26%)</title><rect x="755" y="292" width="3" height="15" fill="rgb(230,34,52)"/><text x="758.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (3 samples, 0.77%)</title><rect x="752" y="212" width="9" height="15" fill="rgb(239,169,14)"/><text x="755.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (3 samples, 0.77%)</title><rect x="752" y="228" width="9" height="15" fill="rgb(254,72,2)"/><text x="755.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.51%)</title><rect x="755" y="244" width="6" height="15" fill="rgb(225,123,44)"/><text x="758.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:443) (1 samples, 0.26%)</title><rect x="758" y="260" width="3" height="15" fill="rgb(213,121,8)"/><text x="761.00" y="270.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (5 samples, 1.28%)</title><rect x="752" y="196" width="15" height="15" fill="rgb(234,111,26)"/><text x="755.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py:17) (2 samples, 0.51%)</title><rect x="761" y="212" width="6" height="15" fill="rgb(246,143,38)"/><text x="764.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.26%)</title><rect x="764" y="228" width="3" height="15" fill="rgb(231,154,27)"/><text x="767.00" y="238.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.26%)</title><rect x="764" y="244" width="3" height="15" fill="rgb(231,227,9)"/><text x="767.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:958) (1 samples, 0.26%)</title><rect x="764" y="260" width="3" height="15" fill="rgb(254,90,20)"/><text x="767.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.26%)</title><rect x="764" y="276" width="3" height="15" fill="rgb(225,65,53)"/><text x="767.00" y="286.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.26%)</title><rect x="764" y="292" width="3" height="15" fill="rgb(249,118,30)"/><text x="767.00" y="302.50"></text></g><g><title>0x7f3b80a18120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="794" y="244" width="3" height="15" fill="rgb(224,56,43)"/><text x="797.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (2 samples, 0.51%)</title><rect x="797" y="244" width="6" height="15" fill="rgb(229,219,42)"/><text x="800.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (2 samples, 0.51%)</title><rect x="797" y="260" width="6" height="15" fill="rgb(227,19,8)"/><text x="800.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (2 samples, 0.51%)</title><rect x="797" y="276" width="6" height="15" fill="rgb(235,139,45)"/><text x="800.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.51%)</title><rect x="797" y="292" width="6" height="15" fill="rgb(230,78,14)"/><text x="800.00" y="302.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.26%)</title><rect x="800" y="308" width="3" height="15" fill="rgb(219,201,9)"/><text x="803.00" y="318.50"></text></g><g><title>0x7f3b80ad6004 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="800" y="324" width="3" height="15" fill="rgb(210,27,12)"/><text x="803.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1079) (1 samples, 0.26%)</title><rect x="803" y="276" width="3" height="15" fill="rgb(240,115,0)"/><text x="806.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.26%)</title><rect x="806" y="292" width="3" height="15" fill="rgb(206,190,49)"/><text x="809.00" y="302.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1611) (1 samples, 0.26%)</title><rect x="806" y="308" width="3" height="15" fill="rgb(233,196,1)"/><text x="809.00" y="318.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (3 samples, 0.77%)</title><rect x="803" y="260" width="9" height="15" fill="rgb(228,207,53)"/><text x="806.00" y="270.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (2 samples, 0.51%)</title><rect x="806" y="276" width="6" height="15" fill="rgb(253,208,31)"/><text x="809.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1895) (1 samples, 0.26%)</title><rect x="809" y="292" width="3" height="15" fill="rgb(237,81,3)"/><text x="812.00" y="302.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.26%)</title><rect x="812" y="276" width="3" height="15" fill="rgb(234,169,16)"/><text x="815.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1893) (1 samples, 0.26%)</title><rect x="812" y="292" width="3" height="15" fill="rgb(206,109,28)"/><text x="815.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c:1722) (1 samples, 0.26%)</title><rect x="812" y="308" width="3" height="15" fill="rgb(243,0,38)"/><text x="815.00" y="318.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c:1427) (1 samples, 0.26%)</title><rect x="812" y="324" width="3" height="15" fill="rgb(207,161,15)"/><text x="815.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (2 samples, 0.51%)</title><rect x="812" y="260" width="6" height="15" fill="rgb(249,23,35)"/><text x="815.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:563) (1 samples, 0.26%)</title><rect x="815" y="276" width="3" height="15" fill="rgb(231,190,26)"/><text x="818.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c:242) (1 samples, 0.26%)</title><rect x="815" y="292" width="3" height="15" fill="rgb(243,72,22)"/><text x="818.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:970) (1 samples, 0.26%)</title><rect x="815" y="308" width="3" height="15" fill="rgb(231,117,41)"/><text x="818.00" y="318.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c:952) (1 samples, 0.26%)</title><rect x="815" y="324" width="3" height="15" fill="rgb(252,181,3)"/><text x="818.00" y="334.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:858) (1 samples, 0.26%)</title><rect x="815" y="340" width="3" height="15" fill="rgb(224,184,32)"/><text x="818.00" y="350.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1306) (1 samples, 0.26%)</title><rect x="818" y="276" width="3" height="15" fill="rgb(215,40,40)"/><text x="821.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1313) (1 samples, 0.26%)</title><rect x="821" y="276" width="3" height="15" fill="rgb(236,166,52)"/><text x="824.00" y="286.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c:61) (1 samples, 0.26%)</title><rect x="821" y="292" width="3" height="15" fill="rgb(231,186,27)"/><text x="824.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.26%)</title><rect x="821" y="308" width="3" height="15" fill="rgb(253,89,48)"/><text x="824.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.26%)</title><rect x="821" y="324" width="3" height="15" fill="rgb(243,203,38)"/><text x="824.00" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.26%)</title><rect x="821" y="340" width="3" height="15" fill="rgb(243,90,5)"/><text x="824.00" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c:72) (1 samples, 0.26%)</title><rect x="821" y="356" width="3" height="15" fill="rgb(220,133,22)"/><text x="824.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.26%)</title><rect x="824" y="324" width="3" height="15" fill="rgb(239,39,29)"/><text x="827.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3254) (4 samples, 1.02%)</title><rect x="818" y="260" width="12" height="15" fill="rgb(235,102,38)"/><text x="821.00" y="270.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c:1316) (2 samples, 0.51%)</title><rect x="824" y="276" width="6" height="15" fill="rgb(216,177,32)"/><text x="827.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.51%)</title><rect x="824" y="292" width="6" height="15" fill="rgb(214,183,21)"/><text x="827.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.51%)</title><rect x="824" y="308" width="6" height="15" fill="rgb(214,169,51)"/><text x="827.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.26%)</title><rect x="827" y="324" width="3" height="15" fill="rgb(222,181,30)"/><text x="830.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (1 samples, 0.26%)</title><rect x="830" y="276" width="3" height="15" fill="rgb(238,40,34)"/><text x="833.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (1 samples, 0.26%)</title><rect x="830" y="292" width="3" height="15" fill="rgb(245,228,5)"/><text x="833.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (1 samples, 0.26%)</title><rect x="830" y="308" width="3" height="15" fill="rgb(225,58,9)"/><text x="833.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.26%)</title><rect x="830" y="324" width="3" height="15" fill="rgb(221,28,37)"/><text x="833.00" y="334.50"></text></g><g><title>0x7f3b809f7902 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="830" y="340" width="3" height="15" fill="rgb(242,159,12)"/><text x="833.00" y="350.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (11 samples, 2.81%)</title><rect x="803" y="244" width="33" height="15" fill="rgb(219,12,24)"/><text x="806.00" y="254.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (2 samples, 0.51%)</title><rect x="830" y="260" width="6" height="15" fill="rgb(212,96,52)"/><text x="833.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.26%)</title><rect x="833" y="276" width="3" height="15" fill="rgb(224,210,16)"/><text x="836.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.26%)</title><rect x="833" y="292" width="3" height="15" fill="rgb(218,204,29)"/><text x="836.00" y="302.50"></text></g><g><title>FLOAT_maximum (loops.c.src:1867) (1 samples, 0.26%)</title><rect x="833" y="308" width="3" height="15" fill="rgb(206,152,7)"/><text x="836.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (24 samples, 6.14%)</title><rect x="767" y="196" width="72" height="15" fill="rgb(237,24,6)"/><text x="770.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (22 samples, 5.63%)</title><rect x="773" y="212" width="66" height="15" fill="rgb(253,191,3)"/><text x="776.00" y="222.50">run (ml..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py:19) (19 samples, 4.86%)</title><rect x="782" y="228" width="57" height="15" fill="rgb(243,175,28)"/><text x="785.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.26%)</title><rect x="836" y="244" width="3" height="15" fill="rgb(210,78,50)"/><text x="839.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:349) (2 samples, 0.51%)</title><rect x="839" y="196" width="6" height="15" fill="rgb(212,31,38)"/><text x="842.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (3 samples, 0.77%)</title><rect x="858" y="212" width="9" height="15" fill="rgb(238,88,20)"/><text x="861.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:519) (2 samples, 0.51%)</title><rect x="870" y="228" width="6" height="15" fill="rgb(241,11,49)"/><text x="873.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c:38) (1 samples, 0.26%)</title><rect x="882" y="276" width="3" height="15" fill="rgb(223,90,25)"/><text x="885.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:80) (1 samples, 0.26%)</title><rect x="885" y="292" width="3" height="15" fill="rgb(211,223,50)"/><text x="888.00" y="302.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (4 samples, 1.02%)</title><rect x="882" y="244" width="12" height="15" fill="rgb(230,6,1)"/><text x="885.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (4 samples, 1.02%)</title><rect x="882" y="260" width="12" height="15" fill="rgb(230,59,21)"/><text x="885.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (3 samples, 0.77%)</title><rect x="885" y="276" width="9" height="15" fill="rgb(212,224,12)"/><text x="888.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (2 samples, 0.51%)</title><rect x="888" y="292" width="6" height="15" fill="rgb(215,19,7)"/><text x="891.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3136) (1 samples, 0.26%)</title><rect x="894" y="260" width="3" height="15" fill="rgb(219,26,34)"/><text x="897.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3171) (1 samples, 0.26%)</title><rect x="897" y="260" width="3" height="15" fill="rgb(251,191,12)"/><text x="900.00" y="270.50"></text></g><g><title>_get_bufsize_errmask (extobj.c:313) (1 samples, 0.26%)</title><rect x="897" y="276" width="3" height="15" fill="rgb(245,1,26)"/><text x="900.00" y="286.50"></text></g><g><title>get_global_ext_obj (extobj.c:162) (1 samples, 0.26%)</title><rect x="897" y="292" width="3" height="15" fill="rgb(247,38,24)"/><text x="900.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3222) (1 samples, 0.26%)</title><rect x="900" y="260" width="3" height="15" fill="rgb(237,56,35)"/><text x="903.00" y="270.50"></text></g><g><title>_find_array_prepare (ufunc_object.c:295) (1 samples, 0.26%)</title><rect x="900" y="276" width="3" height="15" fill="rgb(248,48,48)"/><text x="903.00" y="286.50"></text></g><g><title>_find_array_method (ufunc_object.c:176) (1 samples, 0.26%)</title><rect x="900" y="292" width="3" height="15" fill="rgb(208,155,36)"/><text x="903.00" y="302.50"></text></g><g><title>solve_diophantine (mem_overlap.c:555) (1 samples, 0.26%)</title><rect x="903" y="324" width="3" height="15" fill="rgb(246,139,52)"/><text x="906.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c:373) (1 samples, 0.26%)</title><rect x="903" y="340" width="3" height="15" fill="rgb(217,222,39)"/><text x="906.00" y="350.50"></text></g><g><title>ceildiv_128_64 (npy_extint128.h:310) (1 samples, 0.26%)</title><rect x="903" y="356" width="3" height="15" fill="rgb(221,108,11)"/><text x="906.00" y="366.50"></text></g><g><title>divmod_128_64 (npy_extint128.h:243) (1 samples, 0.26%)</title><rect x="903" y="372" width="3" height="15" fill="rgb(214,75,4)"/><text x="906.00" y="382.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1717) (2 samples, 0.51%)</title><rect x="903" y="276" width="6" height="15" fill="rgb(223,62,44)"/><text x="906.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h:721) (2 samples, 0.51%)</title><rect x="903" y="292" width="6" height="15" fill="rgb(228,215,41)"/><text x="906.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c:835) (2 samples, 0.51%)</title><rect x="903" y="308" width="6" height="15" fill="rgb(247,45,13)"/><text x="906.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c:559) (1 samples, 0.26%)</title><rect x="906" y="324" width="3" height="15" fill="rgb(217,99,11)"/><text x="909.00" y="334.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="906" y="340" width="3" height="15" fill="rgb(210,4,6)"/><text x="909.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.26%)</title><rect x="909" y="276" width="3" height="15" fill="rgb(233,70,17)"/><text x="912.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.26%)</title><rect x="909" y="292" width="3" height="15" fill="rgb(245,118,19)"/><text x="912.00" y="302.50"></text></g><g><title>FLOAT_add (loops.c.src:1741) (1 samples, 0.26%)</title><rect x="909" y="308" width="3" height="15" fill="rgb(238,17,2)"/><text x="912.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:195) (1 samples, 0.26%)</title><rect x="912" y="308" width="3" height="15" fill="rgb(211,211,34)"/><text x="915.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="912" y="324" width="3" height="15" fill="rgb(250,130,34)"/><text x="915.00" y="334.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.26%)</title><rect x="915" y="308" width="3" height="15" fill="rgb(230,166,4)"/><text x="918.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1182) (1 samples, 0.26%)</title><rect x="915" y="324" width="3" height="15" fill="rgb(250,124,48)"/><text x="918.00" y="334.50"></text></g><g><title>npyiter_check_per_op_flags (nditer_constr.c:924) (1 samples, 0.26%)</title><rect x="915" y="340" width="3" height="15" fill="rgb(237,138,42)"/><text x="918.00" y="350.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (3 samples, 0.77%)</title><rect x="912" y="292" width="9" height="15" fill="rgb(219,174,26)"/><text x="915.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.26%)</title><rect x="918" y="308" width="3" height="15" fill="rgb(254,157,18)"/><text x="921.00" y="318.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.26%)</title><rect x="918" y="324" width="3" height="15" fill="rgb(214,20,15)"/><text x="921.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (7 samples, 1.79%)</title><rect x="903" y="260" width="21" height="15" fill="rgb(211,47,25)"/><text x="906.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (4 samples, 1.02%)</title><rect x="912" y="276" width="12" height="15" fill="rgb(236,216,7)"/><text x="915.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1586) (1 samples, 0.26%)</title><rect x="921" y="292" width="3" height="15" fill="rgb(238,116,47)"/><text x="924.00" y="302.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c:716) (1 samples, 0.26%)</title><rect x="921" y="308" width="3" height="15" fill="rgb(238,195,48)"/><text x="924.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.26%)</title><rect x="921" y="324" width="3" height="15" fill="rgb(219,123,13)"/><text x="924.00" y="334.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (12 samples, 3.07%)</title><rect x="894" y="244" width="36" height="15" fill="rgb(235,66,30)"/><text x="897.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3287) (2 samples, 0.51%)</title><rect x="924" y="260" width="6" height="15" fill="rgb(228,198,19)"/><text x="927.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (19 samples, 4.86%)</title><rect x="876" y="228" width="57" height="15" fill="rgb(224,150,0)"/><text x="879.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c:4775) (1 samples, 0.26%)</title><rect x="930" y="244" width="3" height="15" fill="rgb(219,112,8)"/><text x="933.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:524) (1 samples, 0.26%)</title><rect x="933" y="228" width="3" height="15" fill="rgb(229,16,23)"/><text x="936.00" y="238.50"></text></g><g><title>PyArray_NewFlagsObject (flagsobject.c:29) (1 samples, 0.26%)</title><rect x="939" y="260" width="3" height="15" fill="rgb(227,179,21)"/><text x="942.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:12) (4 samples, 1.02%)</title><rect x="936" y="244" width="12" height="15" fill="rgb(234,214,8)"/><text x="939.00" y="254.50"></text></g><g><title>arrayflags_dealloc (flagsobject.c:195) (2 samples, 0.51%)</title><rect x="942" y="260" width="6" height="15" fill="rgb(215,207,54)"/><text x="945.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:13) (1 samples, 0.26%)</title><rect x="948" y="244" width="3" height="15" fill="rgb(247,93,37)"/><text x="951.00" y="254.50"></text></g><g><title>arrayflags_getitem (flagsobject.c:533) (1 samples, 0.26%)</title><rect x="948" y="260" width="3" height="15" fill="rgb(249,216,2)"/><text x="951.00" y="270.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:14) (1 samples, 0.26%)</title><rect x="951" y="244" width="3" height="15" fill="rgb(220,41,42)"/><text x="954.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.26%)</title><rect x="951" y="260" width="3" height="15" fill="rgb(227,117,28)"/><text x="954.00" y="270.50"></text></g><g><title>0x7f3b80a18124 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="951" y="276" width="3" height="15" fill="rgb(232,73,52)"/><text x="954.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.26%)</title><rect x="960" y="260" width="3" height="15" fill="rgb(217,163,50)"/><text x="963.00" y="270.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.26%)</title><rect x="960" y="276" width="3" height="15" fill="rgb(236,180,41)"/><text x="963.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.26%)</title><rect x="960" y="292" width="3" height="15" fill="rgb(242,66,7)"/><text x="963.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.26%)</title><rect x="960" y="308" width="3" height="15" fill="rgb(211,149,52)"/><text x="963.00" y="318.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.26%)</title><rect x="963" y="276" width="3" height="15" fill="rgb(207,184,36)"/><text x="966.00" y="286.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:94) (1 samples, 0.26%)</title><rect x="963" y="292" width="3" height="15" fill="rgb(220,193,20)"/><text x="966.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (3 samples, 0.77%)</title><rect x="966" y="292" width="9" height="15" fill="rgb(229,101,14)"/><text x="969.00" y="302.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:252) (1 samples, 0.26%)</title><rect x="975" y="324" width="3" height="15" fill="rgb(205,159,27)"/><text x="978.00" y="334.50"></text></g><g><title>_select_matrix_shape (cblasfuncs.c:168) (1 samples, 0.26%)</title><rect x="975" y="340" width="3" height="15" fill="rgb(246,168,50)"/><text x="978.00" y="350.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:527) (1 samples, 0.26%)</title><rect x="978" y="324" width="3" height="15" fill="rgb(241,192,26)"/><text x="981.00" y="334.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="978" y="340" width="3" height="15" fill="rgb(238,173,33)"/><text x="981.00" y="350.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:16) (10 samples, 2.56%)</title><rect x="954" y="244" width="30" height="15" fill="rgb(222,199,9)"/><text x="957.00" y="254.50">nu..</text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (7 samples, 1.79%)</title><rect x="963" y="260" width="21" height="15" fill="rgb(246,128,3)"/><text x="966.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.53%)</title><rect x="966" y="276" width="18" height="15" fill="rgb(225,123,18)"/><text x="969.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.77%)</title><rect x="975" y="292" width="9" height="15" fill="rgb(225,180,54)"/><text x="978.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (3 samples, 0.77%)</title><rect x="975" y="308" width="9" height="15" fill="rgb(210,214,19)"/><text x="978.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:685) (1 samples, 0.26%)</title><rect x="981" y="324" width="3" height="15" fill="rgb(240,70,53)"/><text x="984.00" y="334.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c:430) (1 samples, 0.26%)</title><rect x="981" y="340" width="3" height="15" fill="rgb(212,69,50)"/><text x="984.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c:2819) (1 samples, 0.26%)</title><rect x="981" y="356" width="3" height="15" fill="rgb(246,166,1)"/><text x="984.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.26%)</title><rect x="981" y="372" width="3" height="15" fill="rgb(231,73,12)"/><text x="984.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.26%)</title><rect x="981" y="388" width="3" height="15" fill="rgb(243,57,18)"/><text x="984.00" y="398.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.26%)</title><rect x="981" y="404" width="3" height="15" fill="rgb(231,159,14)"/><text x="984.00" y="414.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:17) (1 samples, 0.26%)</title><rect x="984" y="244" width="3" height="15" fill="rgb(221,22,15)"/><text x="987.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:4) (1 samples, 0.26%)</title><rect x="987" y="260" width="3" height="15" fill="rgb(253,81,7)"/><text x="990.00" y="270.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2213) (1 samples, 0.26%)</title><rect x="990" y="292" width="3" height="15" fill="rgb(245,49,50)"/><text x="993.00" y="302.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2218) (2 samples, 0.51%)</title><rect x="993" y="292" width="6" height="15" fill="rgb(237,83,28)"/><text x="996.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:943) (1 samples, 0.26%)</title><rect x="999" y="308" width="3" height="15" fill="rgb(241,93,12)"/><text x="1002.00" y="318.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.26%)</title><rect x="999" y="324" width="3" height="15" fill="rgb(239,88,18)"/><text x="1002.00" y="334.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:363) (1 samples, 0.26%)</title><rect x="999" y="340" width="3" height="15" fill="rgb(232,49,46)"/><text x="1002.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (54 samples, 13.81%)</title><rect x="845" y="196" width="163" height="15" fill="rgb(251,202,15)"/><text x="848.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (47 samples, 12.02%)</title><rect x="867" y="212" width="141" height="15" fill="rgb(242,72,29)"/><text x="870.00" y="222.50">run (mlprodict/on..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py:17) (24 samples, 6.14%)</title><rect x="936" y="228" width="72" height="15" fill="rgb(252,53,29)"/><text x="939.00" y="238.50">_run (ml..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py:40) (7 samples, 1.79%)</title><rect x="987" y="244" width="21" height="15" fill="rgb(238,174,16)"/><text x="990.00" y="254.50"></text></g><g><title>dot (&lt;__array_function__ internals&gt;:6) (6 samples, 1.53%)</title><rect x="990" y="260" width="18" height="15" fill="rgb(250,149,23)"/><text x="993.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.53%)</title><rect x="990" y="276" width="18" height="15" fill="rgb(213,7,3)"/><text x="993.00" y="286.50"></text></g><g><title>array_matrixproduct (multiarraymodule.c:2232) (3 samples, 0.77%)</title><rect x="999" y="292" width="9" height="15" fill="rgb(228,124,7)"/><text x="1002.00" y="302.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c:958) (2 samples, 0.51%)</title><rect x="1002" y="308" width="6" height="15" fill="rgb(207,83,50)"/><text x="1005.00" y="318.50"></text></g><g><title>cblas_matrixproduct (cblasfuncs.c:594) (2 samples, 0.51%)</title><rect x="1002" y="324" width="6" height="15" fill="rgb(226,142,5)"/><text x="1005.00" y="334.50"></text></g><g><title>gemv (cblasfuncs.c:86) (2 samples, 0.51%)</title><rect x="1002" y="340" width="6" height="15" fill="rgb(233,90,53)"/><text x="1005.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="1002" y="356" width="6" height="15" fill="rgb(220,169,36)"/><text x="1005.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.51%)</title><rect x="1002" y="372" width="6" height="15" fill="rgb(213,69,21)"/><text x="1005.00" y="382.50"></text></g><g><title>sgemv_kernel_4x8 (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.26%)</title><rect x="1005" y="388" width="3" height="15" fill="rgb(221,50,30)"/><text x="1008.00" y="398.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (92 samples, 23.53%)</title><rect x="734" y="180" width="277" height="15" fill="rgb(235,104,8)"/><text x="737.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:490) (1 samples, 0.26%)</title><rect x="1008" y="196" width="3" height="15" fill="rgb(248,135,35)"/><text x="1011.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (1 samples, 0.26%)</title><rect x="1011" y="180" width="3" height="15" fill="rgb(220,54,48)"/><text x="1014.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (2 samples, 0.51%)</title><rect x="1014" y="180" width="6" height="15" fill="rgb(232,53,12)"/><text x="1017.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (125 samples, 31.97%)</title><rect x="664" y="164" width="378" height="15" fill="rgb(251,162,15)"/><text x="667.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_infere..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (7 samples, 1.79%)</title><rect x="1020" y="180" width="22" height="15" fill="rgb(242,63,2)"/><text x="1023.00" y="190.50">r..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:540) (1 samples, 0.26%)</title><rect x="1042" y="164" width="3" height="15" fill="rgb(237,62,49)"/><text x="1045.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:61) (136 samples, 34.78%)</title><rect x="637" y="52" width="411" height="15" fill="rgb(223,79,21)"/><text x="640.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float..</text></g><g><title>profile_pyrt (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:60) (136 samples, 34.78%)</title><rect x="637" y="68" width="411" height="15" fill="rgb(207,175,23)"/><text x="640.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_m_reg_1_50_12_f..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:37) (136 samples, 34.78%)</title><rect x="637" y="84" width="411" height="15" fill="rgb(231,76,31)"/><text x="640.00" y="94.50">setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:31) (136 samples, 34.78%)</title><rect x="637" y="100" width="411" height="15" fill="rgb(239,143,16)"/><text x="640.00" y="110.50">profile (bench_MLPRegressor_default_m_reg_1_50_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (136 samples, 34.78%)</title><rect x="637" y="116" width="411" height="15" fill="rgb(211,1,48)"/><text x="640.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (135 samples, 34.53%)</title><rect x="640" y="132" width="408" height="15" fill="rgb(220,163,40)"/><text x="643.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (131 samples, 33.50%)</title><rect x="652" y="148" width="396" height="15" fill="rgb(253,32,4)"/><text x="655.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.26%)</title><rect x="1045" y="164" width="3" height="15" fill="rgb(228,77,17)"/><text x="1048.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.26%)</title><rect x="1045" y="180" width="3" height="15" fill="rgb(245,155,9)"/><text x="1048.00" y="190.50"></text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:36) (1 samples, 0.26%)</title><rect x="1048" y="84" width="3" height="15" fill="rgb(245,135,23)"/><text x="1051.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.26%)</title><rect x="1048" y="100" width="3" height="15" fill="rgb(206,136,22)"/><text x="1051.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.26%)</title><rect x="1048" y="116" width="3" height="15" fill="rgb(237,53,35)"/><text x="1051.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.26%)</title><rect x="1048" y="132" width="3" height="15" fill="rgb(210,203,13)"/><text x="1051.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.26%)</title><rect x="1048" y="148" width="3" height="15" fill="rgb(212,46,18)"/><text x="1051.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (1 samples, 0.26%)</title><rect x="1048" y="164" width="3" height="15" fill="rgb(234,62,18)"/><text x="1051.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="1048" y="180" width="3" height="15" fill="rgb(221,55,23)"/><text x="1051.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="1048" y="196" width="3" height="15" fill="rgb(234,179,15)"/><text x="1051.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="1048" y="212" width="3" height="15" fill="rgb(253,159,50)"/><text x="1051.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="1048" y="228" width="3" height="15" fill="rgb(206,72,37)"/><text x="1051.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="1048" y="244" width="3" height="15" fill="rgb(211,51,18)"/><text x="1051.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (1 samples, 0.26%)</title><rect x="1048" y="260" width="3" height="15" fill="rgb(227,7,18)"/><text x="1051.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="1048" y="276" width="3" height="15" fill="rgb(240,152,2)"/><text x="1051.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="1048" y="292" width="3" height="15" fill="rgb(244,172,52)"/><text x="1051.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="1048" y="308" width="3" height="15" fill="rgb(242,7,18)"/><text x="1051.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="1048" y="324" width="3" height="15" fill="rgb(254,19,42)"/><text x="1051.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="1048" y="340" width="3" height="15" fill="rgb(210,139,6)"/><text x="1051.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (1 samples, 0.26%)</title><rect x="1048" y="356" width="3" height="15" fill="rgb(224,176,8)"/><text x="1051.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="1048" y="372" width="3" height="15" fill="rgb(232,117,7)"/><text x="1051.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="1048" y="388" width="3" height="15" fill="rgb(230,90,3)"/><text x="1051.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.26%)</title><rect x="1048" y="404" width="3" height="15" fill="rgb(228,128,5)"/><text x="1051.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.26%)</title><rect x="1048" y="420" width="3" height="15" fill="rgb(205,95,3)"/><text x="1051.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="1048" y="436" width="3" height="15" fill="rgb(233,165,6)"/><text x="1051.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (1 samples, 0.26%)</title><rect x="1048" y="452" width="3" height="15" fill="rgb(209,133,33)"/><text x="1051.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.26%)</title><rect x="1048" y="468" width="3" height="15" fill="rgb(209,19,10)"/><text x="1051.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.26%)</title><rect x="1048" y="484" width="3" height="15" fill="rgb(245,48,35)"/><text x="1051.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.26%)</title><rect x="1048" y="500" width="3" height="15" fill="rgb(247,157,30)"/><text x="1051.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.26%)</title><rect x="1048" y="516" width="3" height="15" fill="rgb(243,142,42)"/><text x="1051.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.26%)</title><rect x="1048" y="532" width="3" height="15" fill="rgb(230,98,33)"/><text x="1051.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.26%)</title><rect x="1048" y="548" width="3" height="15" fill="rgb(239,186,44)"/><text x="1051.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="564" width="3" height="15" fill="rgb(239,28,37)"/><text x="1051.00" y="574.50"></text></g><g><title>0x7f3b80c7f995 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="580" width="3" height="15" fill="rgb(250,109,28)"/><text x="1051.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="596" width="3" height="15" fill="rgb(249,91,9)"/><text x="1051.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="612" width="3" height="15" fill="rgb(245,57,50)"/><text x="1051.00" y="622.50"></text></g><g><title>0x7f3b80c7f258 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="628" width="3" height="15" fill="rgb(253,192,1)"/><text x="1051.00" y="638.50"></text></g><g><title>0x7f3b80cccd7a (ld-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="644" width="3" height="15" fill="rgb(221,95,43)"/><text x="1051.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="660" width="3" height="15" fill="rgb(225,207,18)"/><text x="1051.00" y="670.50"></text></g><g><title>0x7f3b80ccd473 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="676" width="3" height="15" fill="rgb(253,16,14)"/><text x="1051.00" y="686.50"></text></g><g><title>0x7f3b80cc96b9 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="692" width="3" height="15" fill="rgb(254,74,41)"/><text x="1051.00" y="702.50"></text></g><g><title>0x7f3b80cc95ba (ld-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="708" width="3" height="15" fill="rgb(211,225,4)"/><text x="1051.00" y="718.50"></text></g><g><title>0x7f3b383a29a4 (?) (1 samples, 0.26%)</title><rect x="1048" y="724" width="3" height="15" fill="rgb(223,18,29)"/><text x="1051.00" y="734.50"></text></g><g><title>_dl_addr (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1048" y="740" width="3" height="15" fill="rgb(239,76,3)"/><text x="1051.00" y="750.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.26%)</title><rect x="1054" y="116" width="3" height="15" fill="rgb(252,74,26)"/><text x="1057.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.26%)</title><rect x="1054" y="132" width="3" height="15" fill="rgb(210,71,9)"/><text x="1057.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.26%)</title><rect x="1054" y="148" width="3" height="15" fill="rgb(208,9,4)"/><text x="1057.00" y="158.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.26%)</title><rect x="1057" y="116" width="3" height="15" fill="rgb(217,137,52)"/><text x="1060.00" y="126.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.26%)</title><rect x="1057" y="132" width="3" height="15" fill="rgb(232,101,13)"/><text x="1060.00" y="142.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (1 samples, 0.26%)</title><rect x="1084" y="196" width="3" height="15" fill="rgb(223,191,19)"/><text x="1087.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (1 samples, 0.26%)</title><rect x="1084" y="212" width="3" height="15" fill="rgb(231,70,38)"/><text x="1087.00" y="222.50"></text></g><g><title>0x7f3b80a1814a (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1087" y="212" width="3" height="15" fill="rgb(212,182,25)"/><text x="1090.00" y="222.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1093" y="292" width="6" height="15" fill="rgb(220,167,7)"/><text x="1096.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1093" y="308" width="6" height="15" fill="rgb(244,2,52)"/><text x="1096.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.51%)</title><rect x="1093" y="324" width="6" height="15" fill="rgb(212,124,10)"/><text x="1096.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.51%)</title><rect x="1093" y="340" width="6" height="15" fill="rgb(215,127,2)"/><text x="1096.00" y="350.50"></text></g><g><title>0x7f3b809f8c38 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1096" y="356" width="3" height="15" fill="rgb(253,79,20)"/><text x="1099.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1099" y="292" width="3" height="15" fill="rgb(232,44,8)"/><text x="1102.00" y="302.50"></text></g><g><title>0x7f3b809f79a1 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1099" y="308" width="3" height="15" fill="rgb(233,0,7)"/><text x="1102.00" y="318.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1102" y="340" width="6" height="15" fill="rgb(235,80,36)"/><text x="1105.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1105" y="356" width="3" height="15" fill="rgb(242,86,54)"/><text x="1108.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1105" y="372" width="3" height="15" fill="rgb(213,96,17)"/><text x="1108.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1105" y="388" width="3" height="15" fill="rgb(246,138,10)"/><text x="1108.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1105" y="404" width="3" height="15" fill="rgb(223,67,17)"/><text x="1108.00" y="414.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="1111" y="372" width="3" height="15" fill="rgb(210,26,25)"/><text x="1114.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkIterFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1117" y="388" width="3" height="15" fill="rgb(250,91,41)"/><text x="1120.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.28%)</title><rect x="1108" y="356" width="15" height="15" fill="rgb(231,171,18)"/><text x="1111.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="1114" y="372" width="9" height="15" fill="rgb(241,197,43)"/><text x="1117.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1120" y="388" width="3" height="15" fill="rgb(241,27,27)"/><text x="1123.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1123" y="356" width="3" height="15" fill="rgb(233,117,15)"/><text x="1126.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1123" y="372" width="3" height="15" fill="rgb(246,205,8)"/><text x="1126.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, unsigned long&gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, unsigned long&gt; &gt; &gt;::find (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1123" y="388" width="3" height="15" fill="rgb(237,41,6)"/><text x="1126.00" y="398.50"></text></g><g><title>0x7f3b3ea026b0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1123" y="404" width="3" height="15" fill="rgb(233,12,31)"/><text x="1126.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.79%)</title><rect x="1108" y="340" width="21" height="15" fill="rgb(206,111,44)"/><text x="1111.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1126" y="356" width="3" height="15" fill="rgb(217,196,9)"/><text x="1129.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1126" y="372" width="3" height="15" fill="rgb(219,65,37)"/><text x="1129.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1126" y="388" width="3" height="15" fill="rgb(249,108,33)"/><text x="1129.00" y="398.50"></text></g><g><title>0x7f3b809f7be8 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1132" y="356" width="3" height="15" fill="rgb(242,130,5)"/><text x="1135.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1135" y="356" width="3" height="15" fill="rgb(241,117,50)"/><text x="1138.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1138" y="356" width="6" height="15" fill="rgb(211,204,47)"/><text x="1141.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1138" y="372" width="6" height="15" fill="rgb(246,222,25)"/><text x="1141.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1138" y="388" width="6" height="15" fill="rgb(211,50,3)"/><text x="1141.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1138" y="404" width="6" height="15" fill="rgb(253,39,25)"/><text x="1141.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1138" y="420" width="6" height="15" fill="rgb(229,104,11)"/><text x="1141.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1138" y="436" width="6" height="15" fill="rgb(234,123,40)"/><text x="1141.00" y="446.50"></text></g><g><title>0x7f3b3ea026b0 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1141" y="452" width="3" height="15" fill="rgb(229,83,37)"/><text x="1144.00" y="462.50"></text></g><g><title>0x7f3b36b6c190 (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1150" y="436" width="3" height="15" fill="rgb(239,113,20)"/><text x="1153.00" y="446.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 2.30%)</title><rect x="1129" y="340" width="27" height="15" fill="rgb(240,88,3)"/><text x="1132.00" y="350.50">o..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.02%)</title><rect x="1144" y="356" width="12" height="15" fill="rgb(222,14,12)"/><text x="1147.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (4 samples, 1.02%)</title><rect x="1144" y="372" width="12" height="15" fill="rgb(230,97,52)"/><text x="1147.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (4 samples, 1.02%)</title><rect x="1144" y="388" width="12" height="15" fill="rgb(250,51,27)"/><text x="1147.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.77%)</title><rect x="1147" y="404" width="9" height="15" fill="rgb(231,89,38)"/><text x="1150.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.51%)</title><rect x="1150" y="420" width="6" height="15" fill="rgb(234,10,25)"/><text x="1153.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1153" y="436" width="3" height="15" fill="rgb(239,178,36)"/><text x="1156.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (1 samples, 0.26%)</title><rect x="1153" y="452" width="3" height="15" fill="rgb(228,79,47)"/><text x="1156.00" y="462.50"></text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1156" y="340" width="3" height="15" fill="rgb(249,40,29)"/><text x="1159.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1159" y="356" width="6" height="15" fill="rgb(209,41,14)"/><text x="1162.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1159" y="372" width="6" height="15" fill="rgb(215,30,10)"/><text x="1162.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1159" y="388" width="6" height="15" fill="rgb(206,66,11)"/><text x="1162.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1159" y="404" width="6" height="15" fill="rgb(244,117,35)"/><text x="1162.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1159" y="420" width="6" height="15" fill="rgb(218,31,50)"/><text x="1162.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1159" y="436" width="6" height="15" fill="rgb(250,100,9)"/><text x="1162.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1162" y="452" width="3" height="15" fill="rgb(226,64,8)"/><text x="1165.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1162" y="468" width="3" height="15" fill="rgb(210,62,36)"/><text x="1165.00" y="478.50"></text></g><g><title>onnxruntime::OrtMutex::lock (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1162" y="484" width="3" height="15" fill="rgb(205,123,43)"/><text x="1165.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 6.39%)</title><rect x="1093" y="260" width="75" height="15" fill="rgb(218,64,1)"/><text x="1096.00" y="270.50">onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 6.39%)</title><rect x="1093" y="276" width="75" height="15" fill="rgb(251,79,13)"/><text x="1096.00" y="286.50">onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.63%)</title><rect x="1102" y="292" width="66" height="15" fill="rgb(238,175,21)"/><text x="1105.00" y="302.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.63%)</title><rect x="1102" y="308" width="66" height="15" fill="rgb(242,146,34)"/><text x="1105.00" y="318.50">onnxrun..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (22 samples, 5.63%)</title><rect x="1102" y="324" width="66" height="15" fill="rgb(234,210,1)"/><text x="1105.00" y="334.50">onnxrun..</text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.77%)</title><rect x="1159" y="340" width="9" height="15" fill="rgb(218,156,8)"/><text x="1162.00" y="350.50"></text></g><g><title>onnxruntime::ReshapeHelper::ReshapeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1165" y="356" width="3" height="15" fill="rgb(231,44,13)"/><text x="1168.00" y="366.50"></text></g><g><title>onnxruntime::TensorShape::SizeHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1165" y="372" width="3" height="15" fill="rgb(229,174,19)"/><text x="1168.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (28 samples, 7.16%)</title><rect x="1090" y="244" width="84" height="15" fill="rgb(234,70,19)"/><text x="1093.00" y="254.50">onnxrunti..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="1168" y="260" width="6" height="15" fill="rgb(206,111,14)"/><text x="1171.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1171" y="276" width="3" height="15" fill="rgb(214,221,29)"/><text x="1174.00" y="286.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="1171" y="292" width="3" height="15" fill="rgb(238,126,27)"/><text x="1174.00" y="302.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1171" y="308" width="3" height="15" fill="rgb(211,136,48)"/><text x="1174.00" y="318.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1174" y="244" width="3" height="15" fill="rgb(206,50,5)"/><text x="1177.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1174" y="260" width="3" height="15" fill="rgb(227,147,7)"/><text x="1177.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1177" y="244" width="3" height="15" fill="rgb(220,105,29)"/><text x="1180.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .constprop.381] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1180" y="244" width="3" height="15" fill="rgb(217,88,31)"/><text x="1183.00" y="254.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1180" y="260" width="3" height="15" fill="rgb(208,42,31)"/><text x="1183.00" y="270.50"></text></g><g><title>std::_Hash_bytes (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="1180" y="276" width="3" height="15" fill="rgb(237,175,26)"/><text x="1183.00" y="286.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (38 samples, 9.72%)</title><rect x="1072" y="164" width="114" height="15" fill="rgb(218,65,6)"/><text x="1075.00" y="174.50">_run_whole_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (36 samples, 9.21%)</title><rect x="1078" y="180" width="108" height="15" fill="rgb(230,73,6)"/><text x="1081.00" y="190.50">run (mlprodic..</text></g><g><title>run (onnxruntime/capi/session.py:136) (33 samples, 8.44%)</title><rect x="1087" y="196" width="99" height="15" fill="rgb(232,38,17)"/><text x="1090.00" y="206.50">run (onnxru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.18%)</title><rect x="1090" y="212" width="96" height="15" fill="rgb(241,87,6)"/><text x="1093.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (32 samples, 8.18%)</title><rect x="1090" y="228" width="96" height="15" fill="rgb(205,97,45)"/><text x="1093.00" y="238.50">void pybind..</text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.26%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(209,157,34)"/><text x="1186.00" y="254.50"></text></g><g><title>all (391 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(216,95,36)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:68) (47 samples, 12.02%)</title><rect x="1048" y="52" width="142" height="15" fill="rgb(249,200,7)"/><text x="1051.00" y="62.50">&lt;module&gt; (bench_ML..</text></g><g><title>profile_ort (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:67) (47 samples, 12.02%)</title><rect x="1048" y="68" width="142" height="15" fill="rgb(254,3,29)"/><text x="1051.00" y="78.50">profile_ort (bench..</text></g><g><title>setup_profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:37) (46 samples, 11.76%)</title><rect x="1051" y="84" width="139" height="15" fill="rgb(218,115,17)"/><text x="1054.00" y="94.50">setup_profile (be..</text></g><g><title>profile (bench_MLPRegressor_default_m_reg_1_50_12_float_.py:31) (46 samples, 11.76%)</title><rect x="1051" y="100" width="139" height="15" fill="rgb(215,209,28)"/><text x="1054.00" y="110.50">profile (bench_ML..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (43 samples, 11.00%)</title><rect x="1060" y="116" width="130" height="15" fill="rgb(215,26,2)"/><text x="1063.00" y="126.50">time_predict (ml..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (42 samples, 10.74%)</title><rect x="1063" y="132" width="127" height="15" fill="rgb(242,67,30)"/><text x="1066.00" y="142.50">&lt;lambda&gt; (mlpro..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (40 samples, 10.23%)</title><rect x="1069" y="148" width="121" height="15" fill="rgb(225,90,8)"/><text x="1072.00" y="158.50">run (mlprodict/..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.26%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(220,21,15)"/><text x="1189.00" y="174.50"></text></g></g></svg>