<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1926" onload="init(evt)" viewBox="0 0 1200 1926" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1926" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1909.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1909.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="868" width="2" height="15" fill="rgb(218,65,24)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="884" width="2" height="15" fill="rgb(243,88,9)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="900" width="2" height="15" fill="rgb(209,92,34)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="10" y="916" width="2" height="15" fill="rgb(216,30,46)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="932" width="2" height="15" fill="rgb(221,12,47)"/><text x="13.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="948" width="2" height="15" fill="rgb(233,16,5)"/><text x="13.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="964" width="2" height="15" fill="rgb(217,65,53)"/><text x="13.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="980" width="2" height="15" fill="rgb(221,53,33)"/><text x="13.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="996" width="2" height="15" fill="rgb(210,151,34)"/><text x="13.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="10" y="1012" width="2" height="15" fill="rgb(242,62,34)"/><text x="13.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.25%)</title><rect x="10" y="1028" width="2" height="15" fill="rgb(251,70,49)"/><text x="13.00" y="1038.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.25%)</title><rect x="10" y="1044" width="2" height="15" fill="rgb(239,141,27)"/><text x="13.00" y="1054.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="932" width="3" height="15" fill="rgb(236,112,23)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="948" width="3" height="15" fill="rgb(239,69,47)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="15" y="964" width="3" height="15" fill="rgb(224,106,29)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.25%)</title><rect x="15" y="980" width="3" height="15" fill="rgb(234,149,43)"/><text x="18.00" y="990.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.26%)</title><rect x="10" y="836" width="14" height="15" fill="rgb(243,207,34)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.26%)</title><rect x="10" y="852" width="14" height="15" fill="rgb(210,229,11)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 1.01%)</title><rect x="12" y="868" width="12" height="15" fill="rgb(220,192,52)"/><text x="15.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 1.01%)</title><rect x="12" y="884" width="12" height="15" fill="rgb(207,26,17)"/><text x="15.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.01%)</title><rect x="12" y="900" width="12" height="15" fill="rgb(242,81,45)"/><text x="15.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 0.76%)</title><rect x="15" y="916" width="9" height="15" fill="rgb(221,85,23)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.51%)</title><rect x="18" y="932" width="6" height="15" fill="rgb(208,165,23)"/><text x="21.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="948" width="3" height="15" fill="rgb(252,188,10)"/><text x="24.00" y="958.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="964" width="3" height="15" fill="rgb(228,28,20)"/><text x="24.00" y="974.50"></text></g><g><title>_get_version (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="980" width="3" height="15" fill="rgb(251,100,3)"/><text x="24.00" y="990.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="996" width="3" height="15" fill="rgb(219,207,27)"/><text x="24.00" y="1006.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="1012" width="3" height="15" fill="rgb(214,88,42)"/><text x="24.00" y="1022.50"></text></g><g><title>yield_lines (pkg_resources/__init__.py) (1 samples, 0.25%)</title><rect x="21" y="1028" width="3" height="15" fill="rgb(218,3,7)"/><text x="24.00" y="1038.50"></text></g><g><title>unicode_splitlines (python3.7) (1 samples, 0.25%)</title><rect x="21" y="1044" width="3" height="15" fill="rgb(236,223,28)"/><text x="24.00" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="196" width="17" height="15" fill="rgb(233,226,16)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="212" width="17" height="15" fill="rgb(209,118,16)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="228" width="17" height="15" fill="rgb(225,202,10)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="244" width="17" height="15" fill="rgb(248,171,52)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.52%)</title><rect x="10" y="260" width="17" height="15" fill="rgb(207,68,3)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="276" width="17" height="15" fill="rgb(226,14,9)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (6 samples, 1.52%)</title><rect x="10" y="292" width="17" height="15" fill="rgb(234,167,52)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="308" width="17" height="15" fill="rgb(224,144,47)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="324" width="17" height="15" fill="rgb(219,176,40)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="340" width="17" height="15" fill="rgb(217,191,33)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.52%)</title><rect x="10" y="356" width="17" height="15" fill="rgb(235,197,13)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="372" width="17" height="15" fill="rgb(229,109,13)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (6 samples, 1.52%)</title><rect x="10" y="388" width="17" height="15" fill="rgb(242,46,39)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="404" width="17" height="15" fill="rgb(206,2,9)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="420" width="17" height="15" fill="rgb(251,90,17)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="436" width="17" height="15" fill="rgb(243,121,37)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.52%)</title><rect x="10" y="452" width="17" height="15" fill="rgb(251,90,25)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="468" width="17" height="15" fill="rgb(209,8,46)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (6 samples, 1.52%)</title><rect x="10" y="484" width="17" height="15" fill="rgb(249,102,42)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="500" width="17" height="15" fill="rgb(205,108,18)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="516" width="17" height="15" fill="rgb(250,52,4)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="532" width="17" height="15" fill="rgb(206,83,33)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.52%)</title><rect x="10" y="548" width="17" height="15" fill="rgb(245,185,42)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="564" width="17" height="15" fill="rgb(236,124,28)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (6 samples, 1.52%)</title><rect x="10" y="580" width="17" height="15" fill="rgb(234,77,48)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="596" width="17" height="15" fill="rgb(215,227,25)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="612" width="17" height="15" fill="rgb(237,19,14)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="628" width="17" height="15" fill="rgb(247,12,50)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="644" width="17" height="15" fill="rgb(225,46,29)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="660" width="17" height="15" fill="rgb(234,91,4)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="676" width="17" height="15" fill="rgb(245,188,1)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.52%)</title><rect x="10" y="692" width="17" height="15" fill="rgb(254,89,15)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="708" width="17" height="15" fill="rgb(232,210,15)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (6 samples, 1.52%)</title><rect x="10" y="724" width="17" height="15" fill="rgb(235,24,38)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="740" width="17" height="15" fill="rgb(250,135,25)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="756" width="17" height="15" fill="rgb(244,155,37)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="772" width="17" height="15" fill="rgb(248,159,34)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 1.52%)</title><rect x="10" y="788" width="17" height="15" fill="rgb(250,52,31)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.52%)</title><rect x="10" y="804" width="17" height="15" fill="rgb(205,31,31)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (6 samples, 1.52%)</title><rect x="10" y="820" width="17" height="15" fill="rgb(228,217,36)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="836" width="3" height="15" fill="rgb(233,8,27)"/><text x="27.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="852" width="3" height="15" fill="rgb(236,64,30)"/><text x="27.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="868" width="3" height="15" fill="rgb(222,78,25)"/><text x="27.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="24" y="884" width="3" height="15" fill="rgb(229,225,6)"/><text x="27.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="24" y="900" width="3" height="15" fill="rgb(220,77,4)"/><text x="27.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.25%)</title><rect x="24" y="916" width="3" height="15" fill="rgb(223,201,12)"/><text x="27.00" y="926.50"></text></g><g><title>LegacySpecifier (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.25%)</title><rect x="24" y="932" width="3" height="15" fill="rgb(241,194,53)"/><text x="27.00" y="942.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="24" y="948" width="3" height="15" fill="rgb(239,37,26)"/><text x="27.00" y="958.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="24" y="964" width="3" height="15" fill="rgb(233,125,11)"/><text x="27.00" y="974.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="24" y="980" width="3" height="15" fill="rgb(217,199,21)"/><text x="27.00" y="990.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="996" width="3" height="15" fill="rgb(221,132,25)"/><text x="27.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="1012" width="3" height="15" fill="rgb(246,59,30)"/><text x="27.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="1028" width="3" height="15" fill="rgb(208,206,39)"/><text x="27.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="1044" width="3" height="15" fill="rgb(233,211,10)"/><text x="27.00" y="1054.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="1060" width="3" height="15" fill="rgb(239,169,31)"/><text x="27.00" y="1070.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="1076" width="3" height="15" fill="rgb(212,30,9)"/><text x="27.00" y="1086.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.25%)</title><rect x="24" y="1092" width="3" height="15" fill="rgb(214,137,51)"/><text x="27.00" y="1102.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.25%)</title><rect x="24" y="1108" width="3" height="15" fill="rgb(246,141,40)"/><text x="27.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1476" width="3" height="15" fill="rgb(230,33,15)"/><text x="30.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1492" width="3" height="15" fill="rgb(205,109,33)"/><text x="30.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1508" width="3" height="15" fill="rgb(240,32,42)"/><text x="30.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="27" y="1524" width="3" height="15" fill="rgb(240,177,34)"/><text x="30.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="27" y="1540" width="3" height="15" fill="rgb(239,151,43)"/><text x="30.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="27" y="1556" width="3" height="15" fill="rgb(254,196,33)"/><text x="30.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="27" y="1572" width="3" height="15" fill="rgb(253,215,38)"/><text x="30.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="27" y="1588" width="3" height="15" fill="rgb(228,74,54)"/><text x="30.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="27" y="1604" width="3" height="15" fill="rgb(245,124,1)"/><text x="30.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="27" y="1620" width="3" height="15" fill="rgb(206,15,23)"/><text x="30.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="27" y="1636" width="3" height="15" fill="rgb(224,130,15)"/><text x="30.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py) (1 samples, 0.25%)</title><rect x="27" y="1652" width="3" height="15" fill="rgb(216,120,38)"/><text x="30.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="27" y="1668" width="3" height="15" fill="rgb(242,84,29)"/><text x="30.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py) (1 samples, 0.25%)</title><rect x="27" y="1684" width="3" height="15" fill="rgb(224,88,3)"/><text x="30.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py) (1 samples, 0.25%)</title><rect x="27" y="1700" width="3" height="15" fill="rgb(210,70,31)"/><text x="30.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py) (1 samples, 0.25%)</title><rect x="27" y="1716" width="3" height="15" fill="rgb(227,203,41)"/><text x="30.00" y="1726.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="27" y="1732" width="3" height="15" fill="rgb(215,199,30)"/><text x="30.00" y="1742.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="27" y="1748" width="3" height="15" fill="rgb(229,0,32)"/><text x="30.00" y="1758.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="27" y="1764" width="3" height="15" fill="rgb(250,188,4)"/><text x="30.00" y="1774.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1780" width="3" height="15" fill="rgb(239,20,7)"/><text x="30.00" y="1790.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1796" width="3" height="15" fill="rgb(205,102,21)"/><text x="30.00" y="1806.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1812" width="3" height="15" fill="rgb(242,216,47)"/><text x="30.00" y="1822.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1828" width="3" height="15" fill="rgb(241,97,40)"/><text x="30.00" y="1838.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1844" width="3" height="15" fill="rgb(243,220,22)"/><text x="30.00" y="1854.50"></text></g><g><title>closegroup (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1860" width="3" height="15" fill="rgb(222,51,49)"/><text x="30.00" y="1870.50"></text></g><g><title>getwidth (sre_parse.py) (1 samples, 0.25%)</title><rect x="27" y="1876" width="3" height="15" fill="rgb(229,116,28)"/><text x="30.00" y="1886.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="484" width="9" height="15" fill="rgb(208,56,21)"/><text x="30.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="500" width="9" height="15" fill="rgb(237,64,36)"/><text x="30.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="516" width="9" height="15" fill="rgb(240,138,26)"/><text x="30.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="532" width="9" height="15" fill="rgb(223,64,15)"/><text x="30.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="548" width="9" height="15" fill="rgb(220,115,54)"/><text x="30.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="564" width="9" height="15" fill="rgb(207,48,14)"/><text x="30.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.76%)</title><rect x="27" y="580" width="9" height="15" fill="rgb(248,94,49)"/><text x="30.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="596" width="9" height="15" fill="rgb(225,56,23)"/><text x="30.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="612" width="9" height="15" fill="rgb(237,90,23)"/><text x="30.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="628" width="9" height="15" fill="rgb(216,207,32)"/><text x="30.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="644" width="9" height="15" fill="rgb(229,158,53)"/><text x="30.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="660" width="9" height="15" fill="rgb(228,227,37)"/><text x="30.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.76%)</title><rect x="27" y="676" width="9" height="15" fill="rgb(206,209,44)"/><text x="30.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="692" width="9" height="15" fill="rgb(214,5,51)"/><text x="30.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="708" width="9" height="15" fill="rgb(213,45,28)"/><text x="30.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="724" width="9" height="15" fill="rgb(216,174,28)"/><text x="30.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="740" width="9" height="15" fill="rgb(248,48,34)"/><text x="30.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="756" width="9" height="15" fill="rgb(217,162,18)"/><text x="30.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.76%)</title><rect x="27" y="772" width="9" height="15" fill="rgb(225,20,35)"/><text x="30.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="788" width="9" height="15" fill="rgb(251,44,26)"/><text x="30.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="804" width="9" height="15" fill="rgb(253,194,12)"/><text x="30.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="820" width="9" height="15" fill="rgb(211,74,29)"/><text x="30.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="836" width="9" height="15" fill="rgb(242,83,17)"/><text x="30.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="852" width="9" height="15" fill="rgb(232,24,28)"/><text x="30.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.76%)</title><rect x="27" y="868" width="9" height="15" fill="rgb(242,189,3)"/><text x="30.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="884" width="9" height="15" fill="rgb(219,191,44)"/><text x="30.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="900" width="9" height="15" fill="rgb(239,101,8)"/><text x="30.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="916" width="9" height="15" fill="rgb(253,175,34)"/><text x="30.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="932" width="9" height="15" fill="rgb(230,101,41)"/><text x="30.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="948" width="9" height="15" fill="rgb(227,196,41)"/><text x="30.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="964" width="9" height="15" fill="rgb(212,84,52)"/><text x="30.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="980" width="9" height="15" fill="rgb(250,143,2)"/><text x="30.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="996" width="9" height="15" fill="rgb(254,33,14)"/><text x="30.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.76%)</title><rect x="27" y="1012" width="9" height="15" fill="rgb(234,177,1)"/><text x="30.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1028" width="9" height="15" fill="rgb(239,0,0)"/><text x="30.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1044" width="9" height="15" fill="rgb(234,107,26)"/><text x="30.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1060" width="9" height="15" fill="rgb(223,92,43)"/><text x="30.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="1076" width="9" height="15" fill="rgb(242,75,46)"/><text x="30.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1092" width="9" height="15" fill="rgb(210,194,47)"/><text x="30.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.76%)</title><rect x="27" y="1108" width="9" height="15" fill="rgb(252,123,11)"/><text x="30.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1124" width="9" height="15" fill="rgb(221,136,12)"/><text x="30.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1140" width="9" height="15" fill="rgb(243,169,20)"/><text x="30.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1156" width="9" height="15" fill="rgb(245,69,45)"/><text x="30.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1172" width="9" height="15" fill="rgb(224,80,26)"/><text x="30.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1188" width="9" height="15" fill="rgb(213,164,20)"/><text x="30.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="1204" width="9" height="15" fill="rgb(207,129,40)"/><text x="30.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1220" width="9" height="15" fill="rgb(240,175,21)"/><text x="30.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (3 samples, 0.76%)</title><rect x="27" y="1236" width="9" height="15" fill="rgb(227,172,38)"/><text x="30.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1252" width="9" height="15" fill="rgb(218,19,36)"/><text x="30.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1268" width="9" height="15" fill="rgb(234,45,8)"/><text x="30.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1284" width="9" height="15" fill="rgb(252,113,18)"/><text x="30.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1300" width="9" height="15" fill="rgb(221,220,11)"/><text x="30.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1316" width="9" height="15" fill="rgb(233,46,12)"/><text x="30.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="1332" width="9" height="15" fill="rgb(252,87,1)"/><text x="30.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1348" width="9" height="15" fill="rgb(244,142,4)"/><text x="30.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (3 samples, 0.76%)</title><rect x="27" y="1364" width="9" height="15" fill="rgb(243,184,26)"/><text x="30.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1380" width="9" height="15" fill="rgb(233,229,45)"/><text x="30.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1396" width="9" height="15" fill="rgb(208,37,30)"/><text x="30.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1412" width="9" height="15" fill="rgb(205,136,44)"/><text x="30.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="27" y="1428" width="9" height="15" fill="rgb(231,195,11)"/><text x="30.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="27" y="1444" width="9" height="15" fill="rgb(254,61,30)"/><text x="30.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.76%)</title><rect x="27" y="1460" width="9" height="15" fill="rgb(253,200,0)"/><text x="30.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.51%)</title><rect x="30" y="1476" width="6" height="15" fill="rgb(239,105,29)"/><text x="33.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.51%)</title><rect x="30" y="1492" width="6" height="15" fill="rgb(225,18,17)"/><text x="33.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.25%)</title><rect x="33" y="1508" width="3" height="15" fill="rgb(206,190,45)"/><text x="36.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.25%)</title><rect x="33" y="1524" width="3" height="15" fill="rgb(210,95,45)"/><text x="36.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.25%)</title><rect x="33" y="1540" width="3" height="15" fill="rgb(242,113,35)"/><text x="36.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.25%)</title><rect x="33" y="1556" width="3" height="15" fill="rgb(243,223,17)"/><text x="36.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.25%)</title><rect x="33" y="1572" width="3" height="15" fill="rgb(225,135,44)"/><text x="36.00" y="1582.50"></text></g><g><title>0x7f80480db07e (?) (1 samples, 0.25%)</title><rect x="33" y="1588" width="3" height="15" fill="rgb(221,138,27)"/><text x="36.00" y="1598.50"></text></g><g><title>0x7f80480da7df (?) (1 samples, 0.25%)</title><rect x="33" y="1604" width="3" height="15" fill="rgb(245,14,32)"/><text x="36.00" y="1614.50"></text></g><g><title>0x7f80480d51b8 (?) (1 samples, 0.25%)</title><rect x="33" y="1620" width="3" height="15" fill="rgb(229,121,33)"/><text x="36.00" y="1630.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.01%)</title><rect x="27" y="340" width="12" height="15" fill="rgb(243,210,44)"/><text x="30.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="27" y="356" width="12" height="15" fill="rgb(232,163,14)"/><text x="30.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="27" y="372" width="12" height="15" fill="rgb(209,211,54)"/><text x="30.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="27" y="388" width="12" height="15" fill="rgb(223,200,37)"/><text x="30.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.01%)</title><rect x="27" y="404" width="12" height="15" fill="rgb(207,141,7)"/><text x="30.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="27" y="420" width="12" height="15" fill="rgb(244,110,54)"/><text x="30.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.01%)</title><rect x="27" y="436" width="12" height="15" fill="rgb(237,6,50)"/><text x="30.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="27" y="452" width="12" height="15" fill="rgb(240,144,39)"/><text x="30.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="27" y="468" width="12" height="15" fill="rgb(230,172,36)"/><text x="30.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(252,89,49)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(242,174,12)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(233,62,4)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.25%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(223,6,51)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(220,115,53)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(249,167,29)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(211,143,21)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(253,187,33)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(246,3,5)"/><text x="39.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.25%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(225,121,20)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(209,32,11)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(233,210,52)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(224,220,22)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(247,122,51)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(232,6,21)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.25%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(249,113,18)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(229,141,12)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(230,212,14)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(253,79,54)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(232,74,45)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(248,168,22)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.25%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(237,37,29)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(243,119,34)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(253,192,18)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(230,78,9)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(248,25,42)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(253,183,53)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.25%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(233,224,13)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(231,200,40)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(231,51,29)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(209,44,40)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(237,102,48)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(207,104,28)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.25%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(254,173,45)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(228,214,17)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(244,225,9)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(251,203,45)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(225,43,36)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(230,107,4)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.25%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(220,164,44)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(211,45,4)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(233,15,36)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(249,3,54)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(242,8,22)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(218,205,0)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.25%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(237,139,14)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(205,219,44)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1236" width="3" height="15" fill="rgb(216,82,41)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1252" width="3" height="15" fill="rgb(220,96,34)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="1268" width="3" height="15" fill="rgb(217,63,13)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1284" width="3" height="15" fill="rgb(211,154,3)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.25%)</title><rect x="36" y="1300" width="3" height="15" fill="rgb(237,41,9)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1316" width="3" height="15" fill="rgb(226,68,36)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1332" width="3" height="15" fill="rgb(221,109,4)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1348" width="3" height="15" fill="rgb(210,81,45)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="36" y="1364" width="3" height="15" fill="rgb(207,164,12)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="36" y="1380" width="3" height="15" fill="rgb(253,132,28)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/datetimes.py) (1 samples, 0.25%)</title><rect x="36" y="1396" width="3" height="15" fill="rgb(222,151,52)"/><text x="39.00" y="1406.50"></text></g><g><title>DatetimeIndex (pandas/core/indexes/datetimes.py) (1 samples, 0.25%)</title><rect x="36" y="1412" width="3" height="15" fill="rgb(241,216,13)"/><text x="39.00" y="1422.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.25%)</title><rect x="36" y="1428" width="3" height="15" fill="rgb(231,151,46)"/><text x="39.00" y="1438.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.25%)</title><rect x="36" y="1444" width="3" height="15" fill="rgb(226,161,39)"/><text x="39.00" y="1454.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.25%)</title><rect x="36" y="1460" width="3" height="15" fill="rgb(208,87,2)"/><text x="39.00" y="1470.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.25%)</title><rect x="36" y="1476" width="3" height="15" fill="rgb(229,79,9)"/><text x="39.00" y="1486.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.25%)</title><rect x="36" y="1492" width="3" height="15" fill="rgb(222,116,29)"/><text x="39.00" y="1502.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py) (1 samples, 0.25%)</title><rect x="39" y="484" width="3" height="15" fill="rgb(225,193,27)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="500" width="3" height="15" fill="rgb(209,78,50)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="516" width="3" height="15" fill="rgb(211,85,25)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="532" width="3" height="15" fill="rgb(251,71,28)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="548" width="3" height="15" fill="rgb(214,119,39)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="564" width="3" height="15" fill="rgb(231,184,15)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py) (1 samples, 0.25%)</title><rect x="39" y="580" width="3" height="15" fill="rgb(253,45,51)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="596" width="3" height="15" fill="rgb(220,7,0)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="612" width="3" height="15" fill="rgb(213,72,44)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="628" width="3" height="15" fill="rgb(223,110,45)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="644" width="3" height="15" fill="rgb(239,129,3)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="660" width="3" height="15" fill="rgb(253,53,54)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/cc/__init__.py) (1 samples, 0.25%)</title><rect x="39" y="676" width="3" height="15" fill="rgb(213,66,35)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="692" width="3" height="15" fill="rgb(244,2,18)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="708" width="3" height="15" fill="rgb(249,53,53)"/><text x="42.00" y="718.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="39" y="724" width="3" height="15" fill="rgb(239,124,2)"/><text x="42.00" y="734.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="39" y="740" width="3" height="15" fill="rgb(222,165,32)"/><text x="42.00" y="750.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.25%)</title><rect x="42" y="580" width="3" height="15" fill="rgb(213,26,29)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="596" width="3" height="15" fill="rgb(251,52,29)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="612" width="3" height="15" fill="rgb(226,36,20)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="628" width="3" height="15" fill="rgb(245,45,1)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="644" width="3" height="15" fill="rgb(230,123,47)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="660" width="3" height="15" fill="rgb(249,182,4)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.25%)</title><rect x="42" y="676" width="3" height="15" fill="rgb(210,164,34)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="692" width="3" height="15" fill="rgb(223,186,21)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="708" width="3" height="15" fill="rgb(253,124,23)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="724" width="3" height="15" fill="rgb(220,86,17)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="42" y="740" width="3" height="15" fill="rgb(249,158,35)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="42" y="756" width="3" height="15" fill="rgb(206,11,28)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.25%)</title><rect x="42" y="772" width="3" height="15" fill="rgb(207,197,51)"/><text x="45.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="42" y="788" width="3" height="15" fill="rgb(238,165,8)"/><text x="45.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="42" y="804" width="3" height="15" fill="rgb(226,187,32)"/><text x="45.00" y="814.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="42" y="820" width="3" height="15" fill="rgb(209,13,12)"/><text x="45.00" y="830.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="42" y="836" width="3" height="15" fill="rgb(224,159,54)"/><text x="45.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="42" y="852" width="3" height="15" fill="rgb(222,154,4)"/><text x="45.00" y="862.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="42" y="868" width="3" height="15" fill="rgb(212,103,45)"/><text x="45.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="42" y="884" width="3" height="15" fill="rgb(243,113,38)"/><text x="45.00" y="894.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="42" y="900" width="3" height="15" fill="rgb(206,208,36)"/><text x="45.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="788" width="3" height="15" fill="rgb(237,12,15)"/><text x="48.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="804" width="3" height="15" fill="rgb(210,113,5)"/><text x="48.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="820" width="3" height="15" fill="rgb(225,210,1)"/><text x="48.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="836" width="3" height="15" fill="rgb(244,90,14)"/><text x="48.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="852" width="3" height="15" fill="rgb(220,34,19)"/><text x="48.00" y="862.50"></text></g><g><title>&lt;module&gt; (chardet/__init__.py) (1 samples, 0.25%)</title><rect x="45" y="868" width="3" height="15" fill="rgb(218,220,50)"/><text x="48.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="884" width="3" height="15" fill="rgb(216,118,51)"/><text x="48.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="900" width="3" height="15" fill="rgb(222,171,11)"/><text x="48.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="916" width="3" height="15" fill="rgb(219,151,29)"/><text x="48.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="932" width="3" height="15" fill="rgb(227,211,41)"/><text x="48.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="948" width="3" height="15" fill="rgb(241,219,18)"/><text x="48.00" y="958.50"></text></g><g><title>&lt;module&gt; (chardet/universaldetector.py) (1 samples, 0.25%)</title><rect x="45" y="964" width="3" height="15" fill="rgb(205,102,51)"/><text x="48.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="980" width="3" height="15" fill="rgb(230,102,44)"/><text x="48.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="996" width="3" height="15" fill="rgb(216,36,32)"/><text x="48.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1012" width="3" height="15" fill="rgb(238,158,1)"/><text x="48.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="1028" width="3" height="15" fill="rgb(244,219,35)"/><text x="48.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1044" width="3" height="15" fill="rgb(236,136,30)"/><text x="48.00" y="1054.50"></text></g><g><title>&lt;module&gt; (chardet/sbcsgroupprober.py) (1 samples, 0.25%)</title><rect x="45" y="1060" width="3" height="15" fill="rgb(224,92,17)"/><text x="48.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1076" width="3" height="15" fill="rgb(207,183,9)"/><text x="48.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1092" width="3" height="15" fill="rgb(247,120,47)"/><text x="48.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1108" width="3" height="15" fill="rgb(225,104,28)"/><text x="48.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="45" y="1124" width="3" height="15" fill="rgb(212,229,36)"/><text x="48.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="45" y="1140" width="3" height="15" fill="rgb(227,110,2)"/><text x="48.00" y="1150.50"></text></g><g><title>&lt;module&gt; (chardet/hebrewprober.py) (1 samples, 0.25%)</title><rect x="45" y="1156" width="3" height="15" fill="rgb(241,165,0)"/><text x="48.00" y="1166.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (8 samples, 2.02%)</title><rect x="27" y="244" width="24" height="15" fill="rgb(233,156,20)"/><text x="30.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.02%)</title><rect x="27" y="260" width="24" height="15" fill="rgb(209,127,7)"/><text x="30.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.02%)</title><rect x="27" y="276" width="24" height="15" fill="rgb(205,87,0)"/><text x="30.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.02%)</title><rect x="27" y="292" width="24" height="15" fill="rgb(253,178,40)"/><text x="30.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.02%)</title><rect x="27" y="308" width="24" height="15" fill="rgb(230,78,50)"/><text x="30.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.02%)</title><rect x="27" y="324" width="24" height="15" fill="rgb(216,221,19)"/><text x="30.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (4 samples, 1.01%)</title><rect x="39" y="340" width="12" height="15" fill="rgb(233,188,4)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="356" width="12" height="15" fill="rgb(234,46,16)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="372" width="12" height="15" fill="rgb(215,23,10)"/><text x="42.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="388" width="12" height="15" fill="rgb(206,122,19)"/><text x="42.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="404" width="12" height="15" fill="rgb(226,223,16)"/><text x="42.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="420" width="12" height="15" fill="rgb(230,138,26)"/><text x="42.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="436" width="12" height="15" fill="rgb(209,5,14)"/><text x="42.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.01%)</title><rect x="39" y="452" width="12" height="15" fill="rgb(252,50,25)"/><text x="42.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="39" y="468" width="12" height="15" fill="rgb(216,95,4)"/><text x="42.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.76%)</title><rect x="42" y="484" width="9" height="15" fill="rgb(227,166,39)"/><text x="45.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="42" y="500" width="9" height="15" fill="rgb(245,172,54)"/><text x="45.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="42" y="516" width="9" height="15" fill="rgb(223,145,52)"/><text x="45.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="42" y="532" width="9" height="15" fill="rgb(250,204,28)"/><text x="45.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.76%)</title><rect x="42" y="548" width="9" height="15" fill="rgb(219,27,4)"/><text x="45.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.76%)</title><rect x="42" y="564" width="9" height="15" fill="rgb(210,84,29)"/><text x="45.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.51%)</title><rect x="45" y="580" width="6" height="15" fill="rgb(253,150,4)"/><text x="48.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="596" width="6" height="15" fill="rgb(223,214,19)"/><text x="48.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="612" width="6" height="15" fill="rgb(243,51,40)"/><text x="48.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="628" width="6" height="15" fill="rgb(213,224,21)"/><text x="48.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="45" y="644" width="6" height="15" fill="rgb(220,59,12)"/><text x="48.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="660" width="6" height="15" fill="rgb(228,23,2)"/><text x="48.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.51%)</title><rect x="45" y="676" width="6" height="15" fill="rgb(242,175,8)"/><text x="48.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="692" width="6" height="15" fill="rgb(235,182,11)"/><text x="48.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="708" width="6" height="15" fill="rgb(217,67,39)"/><text x="48.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="724" width="6" height="15" fill="rgb(228,196,10)"/><text x="48.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.51%)</title><rect x="45" y="740" width="6" height="15" fill="rgb(251,127,46)"/><text x="48.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.51%)</title><rect x="45" y="756" width="6" height="15" fill="rgb(234,83,28)"/><text x="48.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.51%)</title><rect x="45" y="772" width="6" height="15" fill="rgb(222,57,24)"/><text x="48.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="788" width="3" height="15" fill="rgb(247,140,12)"/><text x="51.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="804" width="3" height="15" fill="rgb(220,41,38)"/><text x="51.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="820" width="3" height="15" fill="rgb(208,173,36)"/><text x="51.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="836" width="3" height="15" fill="rgb(210,92,17)"/><text x="51.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="852" width="3" height="15" fill="rgb(206,108,46)"/><text x="51.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="48" y="868" width="3" height="15" fill="rgb(223,148,52)"/><text x="51.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="884" width="3" height="15" fill="rgb(249,134,25)"/><text x="51.00" y="894.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.25%)</title><rect x="48" y="900" width="3" height="15" fill="rgb(217,196,10)"/><text x="51.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="916" width="3" height="15" fill="rgb(246,152,32)"/><text x="51.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="932" width="3" height="15" fill="rgb(220,184,11)"/><text x="51.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="948" width="3" height="15" fill="rgb(209,73,11)"/><text x="51.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="48" y="964" width="3" height="15" fill="rgb(244,174,24)"/><text x="51.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="980" width="3" height="15" fill="rgb(231,135,18)"/><text x="51.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.25%)</title><rect x="48" y="996" width="3" height="15" fill="rgb(242,142,8)"/><text x="51.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1012" width="3" height="15" fill="rgb(222,172,18)"/><text x="51.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(222,66,41)"/><text x="51.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(234,143,50)"/><text x="51.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(207,134,51)"/><text x="51.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1076" width="3" height="15" fill="rgb(234,158,13)"/><text x="51.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.25%)</title><rect x="48" y="1092" width="3" height="15" fill="rgb(243,66,26)"/><text x="51.00" y="1102.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1108" width="3" height="15" fill="rgb(239,136,11)"/><text x="51.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1124" width="3" height="15" fill="rgb(243,146,42)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1140" width="3" height="15" fill="rgb(224,177,0)"/><text x="51.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1156" width="3" height="15" fill="rgb(247,191,33)"/><text x="51.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1172" width="3" height="15" fill="rgb(244,27,43)"/><text x="51.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="48" y="1188" width="3" height="15" fill="rgb(230,85,11)"/><text x="51.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="48" y="1204" width="3" height="15" fill="rgb(237,71,16)"/><text x="51.00" y="1214.50"></text></g><g><title>&lt;module&gt; (http/cookiejar.py) (1 samples, 0.25%)</title><rect x="48" y="1220" width="3" height="15" fill="rgb(233,55,23)"/><text x="51.00" y="1230.50"></text></g><g><title>compile (re.py) (1 samples, 0.25%)</title><rect x="48" y="1236" width="3" height="15" fill="rgb(217,209,53)"/><text x="51.00" y="1246.50"></text></g><g><title>_compile (re.py) (1 samples, 0.25%)</title><rect x="48" y="1252" width="3" height="15" fill="rgb(230,21,24)"/><text x="51.00" y="1262.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.25%)</title><rect x="48" y="1268" width="3" height="15" fill="rgb(241,27,15)"/><text x="51.00" y="1278.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1284" width="3" height="15" fill="rgb(254,86,50)"/><text x="51.00" y="1294.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1300" width="3" height="15" fill="rgb(210,127,29)"/><text x="51.00" y="1310.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1316" width="3" height="15" fill="rgb(235,107,37)"/><text x="51.00" y="1326.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1332" width="3" height="15" fill="rgb(249,96,12)"/><text x="51.00" y="1342.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1348" width="3" height="15" fill="rgb(227,221,26)"/><text x="51.00" y="1358.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1364" width="3" height="15" fill="rgb(228,2,34)"/><text x="51.00" y="1374.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.25%)</title><rect x="48" y="1380" width="3" height="15" fill="rgb(233,63,42)"/><text x="51.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.79%)</title><rect x="10" y="68" width="44" height="15" fill="rgb(218,37,45)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.79%)</title><rect x="10" y="84" width="44" height="15" fill="rgb(239,208,6)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.79%)</title><rect x="10" y="100" width="44" height="15" fill="rgb(237,63,1)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.79%)</title><rect x="10" y="116" width="44" height="15" fill="rgb(227,201,18)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.79%)</title><rect x="10" y="132" width="44" height="15" fill="rgb(231,100,41)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (15 samples, 3.79%)</title><rect x="10" y="148" width="44" height="15" fill="rgb(224,36,25)"/><text x="13.00" y="158.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.79%)</title><rect x="10" y="164" width="44" height="15" fill="rgb(213,22,31)"/><text x="13.00" y="174.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.79%)</title><rect x="10" y="180" width="44" height="15" fill="rgb(235,2,1)"/><text x="13.00" y="190.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.27%)</title><rect x="27" y="196" width="27" height="15" fill="rgb(219,62,0)"/><text x="30.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 2.27%)</title><rect x="27" y="212" width="27" height="15" fill="rgb(234,46,33)"/><text x="30.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.27%)</title><rect x="27" y="228" width="27" height="15" fill="rgb(232,166,6)"/><text x="30.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.25%)</title><rect x="51" y="244" width="3" height="15" fill="rgb(233,178,14)"/><text x="54.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="260" width="3" height="15" fill="rgb(242,37,26)"/><text x="54.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="276" width="3" height="15" fill="rgb(224,25,29)"/><text x="54.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="292" width="3" height="15" fill="rgb(219,207,28)"/><text x="54.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="308" width="3" height="15" fill="rgb(242,167,13)"/><text x="54.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="324" width="3" height="15" fill="rgb(250,36,11)"/><text x="54.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="340" width="3" height="15" fill="rgb(211,175,0)"/><text x="54.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="356" width="3" height="15" fill="rgb(251,110,22)"/><text x="54.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (1 samples, 0.25%)</title><rect x="51" y="372" width="3" height="15" fill="rgb(231,158,16)"/><text x="54.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="388" width="3" height="15" fill="rgb(249,59,38)"/><text x="54.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="404" width="3" height="15" fill="rgb(238,53,15)"/><text x="54.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="420" width="3" height="15" fill="rgb(216,127,39)"/><text x="54.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="436" width="3" height="15" fill="rgb(235,123,19)"/><text x="54.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="452" width="3" height="15" fill="rgb(207,28,15)"/><text x="54.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py) (1 samples, 0.25%)</title><rect x="51" y="468" width="3" height="15" fill="rgb(229,5,1)"/><text x="54.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="484" width="3" height="15" fill="rgb(215,74,51)"/><text x="54.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="500" width="3" height="15" fill="rgb(220,7,52)"/><text x="54.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="516" width="3" height="15" fill="rgb(249,165,48)"/><text x="54.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="532" width="3" height="15" fill="rgb(209,14,44)"/><text x="54.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="548" width="3" height="15" fill="rgb(238,105,13)"/><text x="54.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/__init__.py) (1 samples, 0.25%)</title><rect x="51" y="564" width="3" height="15" fill="rgb(238,80,51)"/><text x="54.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="580" width="3" height="15" fill="rgb(236,100,6)"/><text x="54.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="596" width="3" height="15" fill="rgb(243,47,28)"/><text x="54.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="612" width="3" height="15" fill="rgb(225,207,38)"/><text x="54.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="628" width="3" height="15" fill="rgb(226,154,0)"/><text x="54.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="644" width="3" height="15" fill="rgb(250,124,12)"/><text x="54.00" y="654.50"></text></g><g><title>&lt;module&gt; (numpy/matrixlib/defmatrix.py) (1 samples, 0.25%)</title><rect x="51" y="660" width="3" height="15" fill="rgb(228,22,1)"/><text x="54.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="676" width="3" height="15" fill="rgb(227,89,14)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="692" width="3" height="15" fill="rgb(229,4,12)"/><text x="54.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="708" width="3" height="15" fill="rgb(235,159,24)"/><text x="54.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="724" width="3" height="15" fill="rgb(219,125,19)"/><text x="54.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="740" width="3" height="15" fill="rgb(252,34,43)"/><text x="54.00" y="750.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/__init__.py) (1 samples, 0.25%)</title><rect x="51" y="756" width="3" height="15" fill="rgb(213,31,2)"/><text x="54.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="772" width="3" height="15" fill="rgb(220,146,27)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="788" width="3" height="15" fill="rgb(228,103,48)"/><text x="54.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="804" width="3" height="15" fill="rgb(230,1,21)"/><text x="54.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="820" width="3" height="15" fill="rgb(225,11,22)"/><text x="54.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="836" width="3" height="15" fill="rgb(215,101,15)"/><text x="54.00" y="846.50"></text></g><g><title>&lt;module&gt; (numpy/linalg/linalg.py) (1 samples, 0.25%)</title><rect x="51" y="852" width="3" height="15" fill="rgb(213,190,54)"/><text x="54.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="868" width="3" height="15" fill="rgb(253,15,12)"/><text x="54.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="884" width="3" height="15" fill="rgb(244,212,46)"/><text x="54.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="900" width="3" height="15" fill="rgb(214,206,9)"/><text x="54.00" y="910.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.25%)</title><rect x="51" y="916" width="3" height="15" fill="rgb(245,108,19)"/><text x="54.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.25%)</title><rect x="51" y="932" width="3" height="15" fill="rgb(238,32,10)"/><text x="54.00" y="942.50"></text></g><g><title>&lt;module&gt; (numpy/lib/twodim_base.py) (1 samples, 0.25%)</title><rect x="51" y="948" width="3" height="15" fill="rgb(205,168,34)"/><text x="54.00" y="958.50"></text></g><g><title>decorator (numpy/core/overrides.py) (1 samples, 0.25%)</title><rect x="51" y="964" width="3" height="15" fill="rgb(234,77,25)"/><text x="54.00" y="974.50"></text></g><g><title>verify_matching_signatures (numpy/core/overrides.py) (1 samples, 0.25%)</title><rect x="51" y="980" width="3" height="15" fill="rgb(238,131,13)"/><text x="54.00" y="990.50"></text></g><g><title>__new__ (&lt;string&gt;) (1 samples, 0.25%)</title><rect x="51" y="996" width="3" height="15" fill="rgb(235,67,24)"/><text x="54.00" y="1006.50"></text></g><g><title>0x7f8031a6c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="60" y="356" width="3" height="15" fill="rgb(209,133,52)"/><text x="63.00" y="366.50"></text></g><g><title>0x7f8031a50d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="60" y="372" width="3" height="15" fill="rgb(214,135,36)"/><text x="63.00" y="382.50"></text></g><g><title>0x7f8031a50666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="60" y="388" width="3" height="15" fill="rgb(206,203,28)"/><text x="63.00" y="398.50"></text></g><g><title>0x7f8031a4610c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="60" y="404" width="3" height="15" fill="rgb(251,3,34)"/><text x="63.00" y="414.50"></text></g><g><title>0x7f8031a6c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="63" y="356" width="3" height="15" fill="rgb(239,122,39)"/><text x="66.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="63" y="372" width="3" height="15" fill="rgb(251,143,26)"/><text x="66.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.25%)</title><rect x="63" y="388" width="3" height="15" fill="rgb(229,122,52)"/><text x="66.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.25%)</title><rect x="63" y="404" width="3" height="15" fill="rgb(227,83,54)"/><text x="66.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="63" y="420" width="3" height="15" fill="rgb(244,63,20)"/><text x="66.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.25%)</title><rect x="63" y="436" width="3" height="15" fill="rgb(231,40,53)"/><text x="66.00" y="446.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (1 samples, 0.25%)</title><rect x="63" y="452" width="3" height="15" fill="rgb(225,16,24)"/><text x="66.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="63" y="468" width="3" height="15" fill="rgb(213,210,11)"/><text x="66.00" y="478.50"></text></g><g><title>0x7f805803b120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="63" y="484" width="3" height="15" fill="rgb(246,119,29)"/><text x="66.00" y="494.50"></text></g><g><title>0x7f8031a6c7b3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="66" y="356" width="6" height="15" fill="rgb(226,181,1)"/><text x="69.00" y="366.50"></text></g><g><title>0x7f8031a5ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.26%)</title><rect x="60" y="308" width="15" height="15" fill="rgb(250,118,52)"/><text x="63.00" y="318.50"></text></g><g><title>0x7f8031a5dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.26%)</title><rect x="60" y="324" width="15" height="15" fill="rgb(247,192,28)"/><text x="63.00" y="334.50"></text></g><g><title>0x7f8031a6d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.26%)</title><rect x="60" y="340" width="15" height="15" fill="rgb(211,55,6)"/><text x="63.00" y="350.50"></text></g><g><title>0x7f8031a6cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="72" y="356" width="3" height="15" fill="rgb(249,44,10)"/><text x="75.00" y="366.50"></text></g><g><title>0x7f8031a44529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="72" y="372" width="3" height="15" fill="rgb(218,78,34)"/><text x="75.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.25%)</title><rect x="72" y="388" width="3" height="15" fill="rgb(225,128,44)"/><text x="75.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.25%)</title><rect x="72" y="404" width="3" height="15" fill="rgb(211,185,7)"/><text x="75.00" y="414.50"></text></g><g><title>_dispatch (joblib/parallel.py) (7 samples, 1.77%)</title><rect x="57" y="196" width="21" height="15" fill="rgb(224,198,27)"/><text x="60.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (7 samples, 1.77%)</title><rect x="57" y="212" width="21" height="15" fill="rgb(214,104,32)"/><text x="60.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (7 samples, 1.77%)</title><rect x="57" y="228" width="21" height="15" fill="rgb(205,142,1)"/><text x="60.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (7 samples, 1.77%)</title><rect x="57" y="244" width="21" height="15" fill="rgb(241,61,25)"/><text x="60.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (6 samples, 1.52%)</title><rect x="60" y="260" width="18" height="15" fill="rgb(250,192,36)"/><text x="63.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (6 samples, 1.52%)</title><rect x="60" y="276" width="18" height="15" fill="rgb(230,227,39)"/><text x="63.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (6 samples, 1.52%)</title><rect x="60" y="292" width="18" height="15" fill="rgb(246,114,38)"/><text x="63.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="75" y="308" width="3" height="15" fill="rgb(221,123,2)"/><text x="78.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.25%)</title><rect x="75" y="324" width="3" height="15" fill="rgb(227,219,16)"/><text x="78.00" y="334.50"></text></g><g><title>get (queue.py) (1 samples, 0.25%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(254,174,42)"/><text x="81.00" y="206.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (10 samples, 2.53%)</title><rect x="54" y="68" width="30" height="15" fill="rgb(247,82,29)"/><text x="57.00" y="78.50">pr..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (10 samples, 2.53%)</title><rect x="54" y="84" width="30" height="15" fill="rgb(205,103,34)"/><text x="57.00" y="94.50">se..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (10 samples, 2.53%)</title><rect x="54" y="100" width="30" height="15" fill="rgb(225,9,3)"/><text x="57.00" y="110.50">pr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 2.53%)</title><rect x="54" y="116" width="30" height="15" fill="rgb(211,123,4)"/><text x="57.00" y="126.50">ti..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 2.53%)</title><rect x="54" y="132" width="30" height="15" fill="rgb(230,219,22)"/><text x="57.00" y="142.50">&lt;l..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (10 samples, 2.53%)</title><rect x="54" y="148" width="30" height="15" fill="rgb(252,161,11)"/><text x="57.00" y="158.50">pr..</text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 2.53%)</title><rect x="54" y="164" width="30" height="15" fill="rgb(224,118,37)"/><text x="57.00" y="174.50">__..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (10 samples, 2.53%)</title><rect x="54" y="180" width="30" height="15" fill="rgb(206,120,19)"/><text x="57.00" y="190.50">di..</text></g><g><title>put (queue.py) (1 samples, 0.25%)</title><rect x="81" y="196" width="3" height="15" fill="rgb(254,103,1)"/><text x="84.00" y="206.50"></text></g><g><title>0x7f8018058ff9 (?) (1 samples, 0.25%)</title><rect x="84" y="212" width="3" height="15" fill="rgb(213,107,54)"/><text x="87.00" y="222.50"></text></g><g><title>0x7f8018053ef6 (?) (1 samples, 0.25%)</title><rect x="84" y="228" width="3" height="15" fill="rgb(235,171,10)"/><text x="87.00" y="238.50"></text></g><g><title>0x7f8018048962 (?) (1 samples, 0.25%)</title><rect x="84" y="244" width="3" height="15" fill="rgb(213,189,37)"/><text x="87.00" y="254.50"></text></g><g><title>0x7f801807c7a7 (?) (1 samples, 0.25%)</title><rect x="84" y="260" width="3" height="15" fill="rgb(241,127,48)"/><text x="87.00" y="270.50"></text></g><g><title>0x7f801807c379 (?) (1 samples, 0.25%)</title><rect x="84" y="276" width="3" height="15" fill="rgb(245,215,22)"/><text x="87.00" y="286.50"></text></g><g><title>0x7f80184da8b8 (?) (1 samples, 0.25%)</title><rect x="84" y="292" width="3" height="15" fill="rgb(213,60,3)"/><text x="87.00" y="302.50"></text></g><g><title>0x7f80184d8c7f (?) (1 samples, 0.25%)</title><rect x="84" y="308" width="3" height="15" fill="rgb(207,83,35)"/><text x="87.00" y="318.50"></text></g><g><title>0x7f80184eb99c (?) (1 samples, 0.25%)</title><rect x="84" y="324" width="3" height="15" fill="rgb(222,179,25)"/><text x="87.00" y="334.50"></text></g><g><title>0x7f8018212dc2 (?) (1 samples, 0.25%)</title><rect x="84" y="340" width="3" height="15" fill="rgb(207,16,33)"/><text x="87.00" y="350.50"></text></g><g><title>0x7f80182123c7 (?) (1 samples, 0.25%)</title><rect x="84" y="356" width="3" height="15" fill="rgb(223,138,41)"/><text x="87.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.25%)</title><rect x="105" y="356" width="3" height="15" fill="rgb(250,28,28)"/><text x="108.00" y="366.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (137 samples, 34.60%)</title><rect x="108" y="356" width="408" height="15" fill="rgb(232,0,53)"/><text x="111.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessT..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="510" y="372" width="6" height="15" fill="rgb(214,116,31)"/><text x="513.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.51%)</title><rect x="510" y="388" width="6" height="15" fill="rgb(231,97,29)"/><text x="513.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (2 samples, 0.51%)</title><rect x="510" y="404" width="6" height="15" fill="rgb(242,175,1)"/><text x="513.00" y="414.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_next_bkt (libstdc++.so.6.0.28) (2 samples, 0.51%)</title><rect x="510" y="420" width="6" height="15" fill="rgb(241,211,12)"/><text x="513.00" y="430.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (146 samples, 36.87%)</title><rect x="84" y="68" width="435" height="15" fill="rgb(222,98,49)"/><text x="87.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_b_reg_1000..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (146 samples, 36.87%)</title><rect x="84" y="84" width="435" height="15" fill="rgb(247,185,12)"/><text x="87.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_10..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (146 samples, 36.87%)</title><rect x="84" y="100" width="435" height="15" fill="rgb(246,59,5)"/><text x="87.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_50_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (146 samples, 36.87%)</title><rect x="84" y="116" width="435" height="15" fill="rgb(239,65,27)"/><text x="87.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (146 samples, 36.87%)</title><rect x="84" y="132" width="435" height="15" fill="rgb(239,136,22)"/><text x="87.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (146 samples, 36.87%)</title><rect x="84" y="148" width="435" height="15" fill="rgb(235,219,6)"/><text x="87.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (146 samples, 36.87%)</title><rect x="84" y="164" width="435" height="15" fill="rgb(254,35,2)"/><text x="87.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (146 samples, 36.87%)</title><rect x="84" y="180" width="435" height="15" fill="rgb(250,105,18)"/><text x="87.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (146 samples, 36.87%)</title><rect x="84" y="196" width="435" height="15" fill="rgb(239,178,51)"/><text x="87.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="212" width="432" height="15" fill="rgb(253,42,5)"/><text x="90.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxru..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="228" width="432" height="15" fill="rgb(242,132,25)"/><text x="90.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::python..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="244" width="432" height="15" fill="rgb(208,209,1)"/><text x="90.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="260" width="432" height="15" fill="rgb(212,83,43)"/><text x="90.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="276" width="432" height="15" fill="rgb(221,45,46)"/><text x="90.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="292" width="432" height="15" fill="rgb(254,116,40)"/><text x="90.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="308" width="432" height="15" fill="rgb(236,71,26)"/><text x="90.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="324" width="432" height="15" fill="rgb(206,178,53)"/><text x="90.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (145 samples, 36.62%)</title><rect x="87" y="340" width="432" height="15" fill="rgb(249,76,38)"/><text x="90.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onn..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.25%)</title><rect x="516" y="356" width="3" height="15" fill="rgb(208,200,48)"/><text x="519.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.25%)</title><rect x="516" y="372" width="3" height="15" fill="rgb(244,217,45)"/><text x="519.00" y="382.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="516" y="388" width="3" height="15" fill="rgb(239,219,48)"/><text x="519.00" y="398.50"></text></g><g><title>0x7f8018ab354f (?) (1 samples, 0.25%)</title><rect x="519" y="244" width="3" height="15" fill="rgb(221,63,32)"/><text x="522.00" y="254.50"></text></g><g><title>0x7f8018ab965e (?) (1 samples, 0.25%)</title><rect x="519" y="260" width="3" height="15" fill="rgb(219,204,19)"/><text x="522.00" y="270.50"></text></g><g><title>0x7f8018ab950f (?) (1 samples, 0.25%)</title><rect x="519" y="276" width="3" height="15" fill="rgb(236,67,13)"/><text x="522.00" y="286.50"></text></g><g><title>0x7f8018abfd6c (?) (1 samples, 0.25%)</title><rect x="519" y="292" width="3" height="15" fill="rgb(224,165,25)"/><text x="522.00" y="302.50"></text></g><g><title>0x7f8021fe0ab9 (?) (1 samples, 0.25%)</title><rect x="519" y="308" width="3" height="15" fill="rgb(241,144,19)"/><text x="522.00" y="318.50"></text></g><g><title>0x7f8021fe1ea9 (?) (1 samples, 0.25%)</title><rect x="519" y="324" width="3" height="15" fill="rgb(251,172,13)"/><text x="522.00" y="334.50"></text></g><g><title>0x7f8021fe1ea9 (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="522" y="484" width="3" height="15" fill="rgb(252,52,9)"/><text x="525.00" y="494.50"></text></g><g><title>0x7f8021fe0ab9 (libgomp.so.1.0.0) (2 samples, 0.51%)</title><rect x="522" y="468" width="6" height="15" fill="rgb(216,99,27)"/><text x="525.00" y="478.50"></text></g><g><title>0x7f8021fe1eab (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="525" y="484" width="3" height="15" fill="rgb(249,119,18)"/><text x="528.00" y="494.50"></text></g><g><title>0x7f8021fdfdaa (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="528" y="484" width="3" height="15" fill="rgb(247,126,54)"/><text x="531.00" y="494.50"></text></g><g><title>0x7f8021fe1cfb (libgomp.so.1.0.0) (1 samples, 0.25%)</title><rect x="528" y="500" width="3" height="15" fill="rgb(245,131,3)"/><text x="531.00" y="510.50"></text></g><g><title>std::isnan (cmath) (1 samples, 0.25%)</title><rect x="564" y="532" width="3" height="15" fill="rgb(232,108,34)"/><text x="567.00" y="542.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.25%)</title><rect x="567" y="564" width="3" height="15" fill="rgb(236,91,47)"/><text x="570.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="567" y="580" width="3" height="15" fill="rgb(240,2,49)"/><text x="570.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="567" y="596" width="3" height="15" fill="rgb(219,210,29)"/><text x="570.00" y="606.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (25 samples, 6.31%)</title><rect x="519" y="100" width="75" height="15" fill="rgb(241,38,26)"/><text x="522.00" y="110.50">profile ..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 6.31%)</title><rect x="519" y="116" width="75" height="15" fill="rgb(205,98,54)"/><text x="522.00" y="126.50">time_pre..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (25 samples, 6.31%)</title><rect x="519" y="132" width="75" height="15" fill="rgb(214,73,34)"/><text x="522.00" y="142.50">&lt;lambda&gt;..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (25 samples, 6.31%)</title><rect x="519" y="148" width="75" height="15" fill="rgb(220,61,10)"/><text x="522.00" y="158.50">run (mlp..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (25 samples, 6.31%)</title><rect x="519" y="164" width="75" height="15" fill="rgb(239,224,53)"/><text x="522.00" y="174.50">_run_seq..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (25 samples, 6.31%)</title><rect x="519" y="180" width="75" height="15" fill="rgb(226,7,51)"/><text x="522.00" y="190.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 6.31%)</title><rect x="519" y="196" width="75" height="15" fill="rgb(247,202,4)"/><text x="522.00" y="206.50">run (mlp..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (25 samples, 6.31%)</title><rect x="519" y="212" width="75" height="15" fill="rgb(241,171,4)"/><text x="522.00" y="222.50">run (mlp..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (25 samples, 6.31%)</title><rect x="519" y="228" width="75" height="15" fill="rgb(244,224,53)"/><text x="522.00" y="238.50">_run (ml..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (24 samples, 6.06%)</title><rect x="522" y="244" width="72" height="15" fill="rgb(214,58,31)"/><text x="525.00" y="254.50">pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (24 samples, 6.06%)</title><rect x="522" y="260" width="72" height="15" fill="rgb(232,144,3)"/><text x="525.00" y="270.50">void pyb..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (24 samples, 6.06%)</title><rect x="522" y="276" width="72" height="15" fill="rgb(223,222,3)"/><text x="525.00" y="286.50">void pyb..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (24 samples, 6.06%)</title><rect x="522" y="292" width="72" height="15" fill="rgb(243,175,10)"/><text x="525.00" y="302.50">pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (24 samples, 6.06%)</title><rect x="522" y="308" width="72" height="15" fill="rgb(220,190,26)"/><text x="525.00" y="318.50">pybind11..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (24 samples, 6.06%)</title><rect x="522" y="324" width="72" height="15" fill="rgb(242,114,40)"/><text x="525.00" y="334.50">pybind11..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (24 samples, 6.06%)</title><rect x="522" y="340" width="72" height="15" fill="rgb(244,40,43)"/><text x="525.00" y="350.50">pybind11..</text></g><g><title>pybind11::array::~array (numpy.h) (24 samples, 6.06%)</title><rect x="522" y="356" width="72" height="15" fill="rgb(205,103,5)"/><text x="525.00" y="366.50">pybind11..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (24 samples, 6.06%)</title><rect x="522" y="372" width="72" height="15" fill="rgb(233,53,8)"/><text x="525.00" y="382.50">pybind11..</text></g><g><title>pybind11::object::~object (pytypes.h) (24 samples, 6.06%)</title><rect x="522" y="388" width="72" height="15" fill="rgb(238,39,15)"/><text x="525.00" y="398.50">pybind11..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (24 samples, 6.06%)</title><rect x="522" y="404" width="72" height="15" fill="rgb(206,138,2)"/><text x="525.00" y="414.50">pybind11..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (24 samples, 6.06%)</title><rect x="522" y="420" width="72" height="15" fill="rgb(240,43,37)"/><text x="525.00" y="430.50">RuntimeT..</text></g><g><title>pybind11::array::size (numpy.h) (24 samples, 6.06%)</title><rect x="522" y="436" width="72" height="15" fill="rgb(217,102,25)"/><text x="525.00" y="446.50">pybind11..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (24 samples, 6.06%)</title><rect x="522" y="452" width="72" height="15" fill="rgb(241,125,23)"/><text x="525.00" y="462.50">std::acc..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (22 samples, 5.56%)</title><rect x="528" y="468" width="66" height="15" fill="rgb(208,44,34)"/><text x="531.00" y="478.50">GOMP_pa..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (21 samples, 5.30%)</title><rect x="531" y="484" width="63" height="15" fill="rgb(225,96,15)"/><text x="534.00" y="494.50">Runtim..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (20 samples, 5.05%)</title><rect x="534" y="500" width="60" height="15" fill="rgb(220,176,49)"/><text x="537.00" y="510.50">std::v..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (20 samples, 5.05%)</title><rect x="534" y="516" width="60" height="15" fill="rgb(228,147,7)"/><text x="537.00" y="526.50">Runtim..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (9 samples, 2.27%)</title><rect x="567" y="532" width="27" height="15" fill="rgb(209,180,47)"/><text x="570.00" y="542.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (9 samples, 2.27%)</title><rect x="567" y="548" width="27" height="15" fill="rgb(237,195,47)"/><text x="570.00" y="558.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (8 samples, 2.02%)</title><rect x="570" y="564" width="24" height="15" fill="rgb(242,125,23)"/><text x="573.00" y="574.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (8 samples, 2.02%)</title><rect x="570" y="580" width="24" height="15" fill="rgb(229,95,42)"/><text x="573.00" y="590.50">s..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.25%)</title><rect x="591" y="596" width="3" height="15" fill="rgb(233,81,43)"/><text x="594.00" y="606.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="591" y="612" width="3" height="15" fill="rgb(210,126,45)"/><text x="594.00" y="622.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.25%)</title><rect x="591" y="628" width="3" height="15" fill="rgb(251,162,34)"/><text x="594.00" y="638.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (26 samples, 6.57%)</title><rect x="519" y="68" width="78" height="15" fill="rgb(235,53,18)"/><text x="522.00" y="78.50">profile_p..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (26 samples, 6.57%)</title><rect x="519" y="84" width="78" height="15" fill="rgb(218,145,16)"/><text x="522.00" y="94.50">setup_pro..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="594" y="100" width="3" height="15" fill="rgb(206,51,46)"/><text x="597.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="594" y="116" width="3" height="15" fill="rgb(242,27,36)"/><text x="597.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="594" y="132" width="3" height="15" fill="rgb(240,212,52)"/><text x="597.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="594" y="148" width="3" height="15" fill="rgb(227,133,40)"/><text x="597.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="594" y="164" width="3" height="15" fill="rgb(247,15,32)"/><text x="597.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="594" y="180" width="3" height="15" fill="rgb(235,85,33)"/><text x="597.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.25%)</title><rect x="594" y="196" width="3" height="15" fill="rgb(211,92,13)"/><text x="597.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.25%)</title><rect x="594" y="212" width="3" height="15" fill="rgb(246,151,26)"/><text x="597.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="594" y="228" width="3" height="15" fill="rgb(205,71,49)"/><text x="597.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="594" y="244" width="3" height="15" fill="rgb(219,127,26)"/><text x="597.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="594" y="260" width="3" height="15" fill="rgb(205,78,51)"/><text x="597.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="594" y="276" width="3" height="15" fill="rgb(214,122,20)"/><text x="597.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.25%)</title><rect x="594" y="292" width="3" height="15" fill="rgb(245,196,19)"/><text x="597.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.25%)</title><rect x="594" y="308" width="3" height="15" fill="rgb(242,53,24)"/><text x="597.00" y="318.50"></text></g><g><title>update_wrapper (functools.py) (11 samples, 2.78%)</title><rect x="662" y="228" width="33" height="15" fill="rgb(244,111,17)"/><text x="665.00" y="238.50">up..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (20 samples, 5.05%)</title><rect x="647" y="196" width="60" height="15" fill="rgb(254,168,18)"/><text x="650.00" y="206.50">&lt;genex..</text></g><g><title>delayed (joblib/parallel.py) (20 samples, 5.05%)</title><rect x="647" y="212" width="60" height="15" fill="rgb(231,22,11)"/><text x="650.00" y="222.50">delaye..</text></g><g><title>wraps (functools.py) (4 samples, 1.01%)</title><rect x="695" y="228" width="12" height="15" fill="rgb(213,1,33)"/><text x="698.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 0.76%)</title><rect x="707" y="196" width="9" height="15" fill="rgb(241,197,32)"/><text x="710.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.51%)</title><rect x="725" y="212" width="6" height="15" fill="rgb(217,72,32)"/><text x="728.00" y="222.50"></text></g><g><title>__call__ (joblib/parallel.py) (5 samples, 1.26%)</title><rect x="740" y="228" width="14" height="15" fill="rgb(246,156,28)"/><text x="743.00" y="238.50"></text></g><g><title>PyThread_get_thread_ident (python3.7) (1 samples, 0.25%)</title><rect x="751" y="244" width="3" height="15" fill="rgb(208,6,34)"/><text x="754.00" y="254.50"></text></g><g><title>pthread_self@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="751" y="260" width="3" height="15" fill="rgb(230,61,14)"/><text x="754.00" y="270.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.25%)</title><rect x="811" y="292" width="3" height="15" fill="rgb(216,43,16)"/><text x="814.00" y="302.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="814" y="292" width="3" height="15" fill="rgb(254,89,39)"/><text x="817.00" y="302.50"></text></g><g><title>0x7f8031a5df55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="829" y="324" width="3" height="15" fill="rgb(245,68,27)"/><text x="832.00" y="334.50"></text></g><g><title>0x7f8031a4dd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="829" y="340" width="3" height="15" fill="rgb(219,19,24)"/><text x="832.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.25%)</title><rect x="829" y="356" width="3" height="15" fill="rgb(241,176,9)"/><text x="832.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="829" y="372" width="3" height="15" fill="rgb(249,154,47)"/><text x="832.00" y="382.50"></text></g><g><title>0x7f8031a50d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="832" y="372" width="6" height="15" fill="rgb(233,23,54)"/><text x="835.00" y="382.50"></text></g><g><title>0x7f8031a50666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="832" y="388" width="6" height="15" fill="rgb(236,209,7)"/><text x="835.00" y="398.50"></text></g><g><title>0x7f8031a462fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="835" y="404" width="3" height="15" fill="rgb(235,76,18)"/><text x="838.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.25%)</title><rect x="835" y="420" width="3" height="15" fill="rgb(224,78,6)"/><text x="838.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.25%)</title><rect x="835" y="436" width="3" height="15" fill="rgb(222,100,3)"/><text x="838.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.25%)</title><rect x="835" y="452" width="3" height="15" fill="rgb(252,141,4)"/><text x="838.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.25%)</title><rect x="835" y="468" width="3" height="15" fill="rgb(210,208,2)"/><text x="838.00" y="478.50"></text></g><g><title>0x7f8031a43f22 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="838" y="388" width="3" height="15" fill="rgb(207,126,1)"/><text x="841.00" y="398.50"></text></g><g><title>0x7f8031a50e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="838" y="372" width="6" height="15" fill="rgb(226,181,45)"/><text x="841.00" y="382.50"></text></g><g><title>0x7f8031a43fda (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="841" y="388" width="3" height="15" fill="rgb(248,87,19)"/><text x="844.00" y="398.50"></text></g><g><title>0x7f8031a43a09 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="841" y="404" width="3" height="15" fill="rgb(212,102,47)"/><text x="844.00" y="414.50"></text></g><g><title>0x7f8031a6c2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 1.26%)</title><rect x="832" y="356" width="15" height="15" fill="rgb(224,170,46)"/><text x="835.00" y="366.50"></text></g><g><title>0x7f8031a50efd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="844" y="372" width="3" height="15" fill="rgb(245,197,31)"/><text x="847.00" y="382.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="853" y="468" width="3" height="15" fill="rgb(241,225,23)"/><text x="856.00" y="478.50"></text></g><g><title>0x7f805801bb68 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="856" y="484" width="3" height="15" fill="rgb(239,136,0)"/><text x="859.00" y="494.50"></text></g><g><title>0x7f805803b103 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="859" y="484" width="3" height="15" fill="rgb(220,51,8)"/><text x="862.00" y="494.50"></text></g><g><title>PyDataMem_NEW_ZEROED (alloc.c) (5 samples, 1.26%)</title><rect x="850" y="452" width="15" height="15" fill="rgb(236,18,46)"/><text x="853.00" y="462.50"></text></g><g><title>__libc_calloc (libc-2.29.so) (3 samples, 0.76%)</title><rect x="856" y="468" width="9" height="15" fill="rgb(235,201,49)"/><text x="859.00" y="478.50"></text></g><g><title>0x7f805803b120 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="862" y="484" width="3" height="15" fill="rgb(230,123,30)"/><text x="865.00" y="494.50"></text></g><g><title>0x7f8031a6c592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.77%)</title><rect x="847" y="356" width="21" height="15" fill="rgb(218,199,10)"/><text x="850.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (7 samples, 1.77%)</title><rect x="847" y="372" width="21" height="15" fill="rgb(209,192,7)"/><text x="850.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (6 samples, 1.52%)</title><rect x="850" y="388" width="18" height="15" fill="rgb(206,53,35)"/><text x="853.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (6 samples, 1.52%)</title><rect x="850" y="404" width="18" height="15" fill="rgb(254,84,44)"/><text x="853.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (6 samples, 1.52%)</title><rect x="850" y="420" width="18" height="15" fill="rgb(214,188,3)"/><text x="853.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (6 samples, 1.52%)</title><rect x="850" y="436" width="18" height="15" fill="rgb(232,58,17)"/><text x="853.00" y="446.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="865" y="452" width="3" height="15" fill="rgb(219,133,22)"/><text x="868.00" y="462.50"></text></g><g><title>0x7f8031a6c698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="868" y="356" width="6" height="15" fill="rgb(207,106,43)"/><text x="871.00" y="366.50"></text></g><g><title>0x7f8031a6c6a5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="874" y="356" width="6" height="15" fill="rgb(224,142,23)"/><text x="877.00" y="366.50"></text></g><g><title>0x7f8031a6c6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.01%)</title><rect x="880" y="356" width="12" height="15" fill="rgb(226,178,12)"/><text x="883.00" y="366.50"></text></g><g><title>0x7f8031a6c6ad (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.01%)</title><rect x="892" y="356" width="11" height="15" fill="rgb(208,154,13)"/><text x="895.00" y="366.50"></text></g><g><title>0x7f8031a6c6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="903" y="356" width="3" height="15" fill="rgb(226,134,29)"/><text x="906.00" y="366.50"></text></g><g><title>0x7f8031a6c6bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="906" y="356" width="3" height="15" fill="rgb(239,73,37)"/><text x="909.00" y="366.50"></text></g><g><title>0x7f8031a6c6e2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="909" y="356" width="3" height="15" fill="rgb(233,228,46)"/><text x="912.00" y="366.50"></text></g><g><title>0x7f8031a6c8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="912" y="356" width="3" height="15" fill="rgb(228,55,34)"/><text x="915.00" y="366.50"></text></g><g><title>0x7f8031a6d405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (29 samples, 7.32%)</title><rect x="832" y="340" width="86" height="15" fill="rgb(235,49,0)"/><text x="835.00" y="350.50">0x7f8031a6..</text></g><g><title>0x7f8031a6cc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="915" y="356" width="3" height="15" fill="rgb(221,138,34)"/><text x="918.00" y="366.50"></text></g><g><title>0x7f8031a44529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="915" y="372" width="3" height="15" fill="rgb(231,150,1)"/><text x="918.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.25%)</title><rect x="915" y="388" width="3" height="15" fill="rgb(211,184,54)"/><text x="918.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.25%)</title><rect x="915" y="404" width="3" height="15" fill="rgb(213,180,24)"/><text x="918.00" y="414.50"></text></g><g><title>0x7f8031a41530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="918" y="372" width="3" height="15" fill="rgb(207,51,25)"/><text x="921.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.25%)</title><rect x="918" y="388" width="3" height="15" fill="rgb(230,101,43)"/><text x="921.00" y="398.50"></text></g><g><title>0x7f8031a5dfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 7.83%)</title><rect x="832" y="324" width="92" height="15" fill="rgb(244,165,54)"/><text x="835.00" y="334.50">0x7f8031a5..</text></g><g><title>0x7f8031a6d540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="918" y="340" width="6" height="15" fill="rgb(222,89,24)"/><text x="921.00" y="350.50"></text></g><g><title>0x7f8031a422f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="918" y="356" width="6" height="15" fill="rgb(248,38,48)"/><text x="921.00" y="366.50"></text></g><g><title>0x7f8031a41570 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="921" y="372" width="3" height="15" fill="rgb(249,118,29)"/><text x="924.00" y="382.50"></text></g><g><title>0x7f8031a5e011 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="924" y="324" width="3" height="15" fill="rgb(245,219,27)"/><text x="927.00" y="334.50"></text></g><g><title>0x7f8058030e66 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="927" y="356" width="3" height="15" fill="rgb(249,130,23)"/><text x="930.00" y="366.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="930" y="356" width="3" height="15" fill="rgb(252,118,48)"/><text x="933.00" y="366.50"></text></g><g><title>0x7f8031a5e05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.76%)</title><rect x="927" y="324" width="9" height="15" fill="rgb(214,142,39)"/><text x="930.00" y="334.50"></text></g><g><title>array_take (methods.c) (3 samples, 0.76%)</title><rect x="927" y="340" width="9" height="15" fill="rgb(246,106,18)"/><text x="930.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.25%)</title><rect x="933" y="356" width="3" height="15" fill="rgb(226,68,51)"/><text x="936.00" y="366.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.25%)</title><rect x="936" y="356" width="3" height="15" fill="rgb(242,95,43)"/><text x="939.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.25%)</title><rect x="936" y="372" width="3" height="15" fill="rgb(235,34,54)"/><text x="939.00" y="382.50"></text></g><g><title>0x7f8031a5e13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.51%)</title><rect x="936" y="324" width="6" height="15" fill="rgb(222,170,0)"/><text x="939.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.51%)</title><rect x="936" y="340" width="6" height="15" fill="rgb(246,118,44)"/><text x="939.00" y="350.50"></text></g><g><title>npy_free_cache_dim (alloc.c) (1 samples, 0.25%)</title><rect x="939" y="356" width="3" height="15" fill="rgb(245,67,53)"/><text x="942.00" y="366.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.25%)</title><rect x="939" y="372" width="3" height="15" fill="rgb(212,157,45)"/><text x="942.00" y="382.50"></text></g><g><title>0x7f8031a5e14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="942" y="324" width="3" height="15" fill="rgb(227,16,3)"/><text x="945.00" y="334.50"></text></g><g><title>0x7f8031a5e328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="945" y="324" width="3" height="15" fill="rgb(254,205,22)"/><text x="948.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.25%)</title><rect x="945" y="340" width="3" height="15" fill="rgb(254,171,50)"/><text x="948.00" y="350.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.25%)</title><rect x="945" y="356" width="3" height="15" fill="rgb(244,8,37)"/><text x="948.00" y="366.50"></text></g><g><title>0x7f8031a5ed2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (41 samples, 10.35%)</title><rect x="829" y="308" width="122" height="15" fill="rgb(208,21,26)"/><text x="832.00" y="318.50">0x7f8031a5ed2e ..</text></g><g><title>0x7f8031a5e550 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="948" y="324" width="3" height="15" fill="rgb(245,212,35)"/><text x="951.00" y="334.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.51%)</title><rect x="951" y="308" width="6" height="15" fill="rgb(250,217,8)"/><text x="954.00" y="318.50"></text></g><g><title>array_subscript (mapping.c) (3 samples, 0.76%)</title><rect x="957" y="308" width="9" height="15" fill="rgb(254,9,43)"/><text x="960.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.76%)</title><rect x="957" y="324" width="9" height="15" fill="rgb(234,127,42)"/><text x="960.00" y="334.50"></text></g><g><title>check_and_adjust_index (common.h) (1 samples, 0.25%)</title><rect x="963" y="340" width="3" height="15" fill="rgb(240,104,14)"/><text x="966.00" y="350.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.51%)</title><rect x="984" y="340" width="6" height="15" fill="rgb(233,189,13)"/><text x="987.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (9 samples, 2.27%)</title><rect x="972" y="324" width="27" height="15" fill="rgb(223,208,51)"/><text x="975.00" y="334.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 0.76%)</title><rect x="990" y="340" width="9" height="15" fill="rgb(206,0,45)"/><text x="993.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (62 samples, 15.66%)</title><rect x="817" y="292" width="185" height="15" fill="rgb(239,42,37)"/><text x="820.00" y="302.50">predict (sklearn/tree/_c..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (12 samples, 3.03%)</title><rect x="966" y="308" width="36" height="15" fill="rgb(250,153,45)"/><text x="969.00" y="318.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.25%)</title><rect x="999" y="324" width="3" height="15" fill="rgb(253,91,29)"/><text x="1002.00" y="334.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.25%)</title><rect x="1002" y="324" width="3" height="15" fill="rgb(205,90,43)"/><text x="1005.00" y="334.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1002" y="340" width="3" height="15" fill="rgb(227,192,25)"/><text x="1005.00" y="350.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1002" y="356" width="3" height="15" fill="rgb(218,179,21)"/><text x="1005.00" y="366.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.25%)</title><rect x="1002" y="372" width="3" height="15" fill="rgb(250,5,18)"/><text x="1005.00" y="382.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.25%)</title><rect x="1005" y="340" width="3" height="15" fill="rgb(245,220,50)"/><text x="1008.00" y="350.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.25%)</title><rect x="1011" y="372" width="3" height="15" fill="rgb(225,58,27)"/><text x="1014.00" y="382.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1011" y="388" width="3" height="15" fill="rgb(240,163,52)"/><text x="1014.00" y="398.50"></text></g><g><title>0x7f8057fd27a5 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1011" y="404" width="3" height="15" fill="rgb(211,81,13)"/><text x="1014.00" y="414.50"></text></g><g><title>0x7f805803ad50 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1011" y="420" width="3" height="15" fill="rgb(224,54,44)"/><text x="1014.00" y="430.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (3 samples, 0.76%)</title><rect x="1008" y="340" width="9" height="15" fill="rgb(250,179,3)"/><text x="1011.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (3 samples, 0.76%)</title><rect x="1008" y="356" width="9" height="15" fill="rgb(252,178,40)"/><text x="1011.00" y="366.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.25%)</title><rect x="1014" y="372" width="3" height="15" fill="rgb(220,96,28)"/><text x="1017.00" y="382.50"></text></g><g><title>0x7f805801aa4c (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1014" y="388" width="3" height="15" fill="rgb(242,16,33)"/><text x="1017.00" y="398.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.51%)</title><rect x="1017" y="356" width="6" height="15" fill="rgb(223,145,20)"/><text x="1020.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.51%)</title><rect x="1017" y="372" width="6" height="15" fill="rgb(240,88,48)"/><text x="1020.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (2 samples, 0.51%)</title><rect x="1017" y="388" width="6" height="15" fill="rgb(236,212,26)"/><text x="1020.00" y="398.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (2 samples, 0.51%)</title><rect x="1017" y="404" width="6" height="15" fill="rgb(236,14,32)"/><text x="1020.00" y="414.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.77%)</title><rect x="1005" y="324" width="21" height="15" fill="rgb(246,143,0)"/><text x="1008.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.76%)</title><rect x="1017" y="340" width="9" height="15" fill="rgb(245,87,42)"/><text x="1020.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_unlock (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="1023" y="356" width="3" height="15" fill="rgb(205,16,50)"/><text x="1026.00" y="366.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1026" y="324" width="3" height="15" fill="rgb(229,33,19)"/><text x="1029.00" y="334.50"></text></g><g><title>_set_out_array (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1026" y="340" width="3" height="15" fill="rgb(224,50,3)"/><text x="1029.00" y="350.50"></text></g><g><title>PyArray_FailUnlessWriteable (arrayobject.c) (1 samples, 0.25%)</title><rect x="1026" y="356" width="3" height="15" fill="rgb(222,126,50)"/><text x="1029.00" y="366.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.53%)</title><rect x="1002" y="308" width="30" height="15" fill="rgb(232,122,14)"/><text x="1005.00" y="318.50">Py..</text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="1029" y="324" width="3" height="15" fill="rgb(229,106,46)"/><text x="1032.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.25%)</title><rect x="1029" y="340" width="3" height="15" fill="rgb(244,62,37)"/><text x="1032.00" y="350.50"></text></g><g><title>0x7f805723ce80 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1029" y="356" width="3" height="15" fill="rgb(216,190,16)"/><text x="1032.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (80 samples, 20.20%)</title><rect x="796" y="260" width="239" height="15" fill="rgb(232,190,1)"/><text x="799.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (79 samples, 19.95%)</title><rect x="799" y="276" width="236" height="15" fill="rgb(231,6,34)"/><text x="802.00" y="286.50">_accumulate_prediction (sklearn..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 2.78%)</title><rect x="1002" y="292" width="33" height="15" fill="rgb(253,193,18)"/><text x="1005.00" y="302.50">uf..</text></g><g><title>_apply_array_wrap (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1032" y="308" width="3" height="15" fill="rgb(217,87,41)"/><text x="1035.00" y="318.50"></text></g><g><title>__exit__ (joblib/parallel.py) (3 samples, 0.76%)</title><rect x="1035" y="260" width="8" height="15" fill="rgb(206,156,45)"/><text x="1038.00" y="270.50"></text></g><g><title>unregister (joblib/parallel.py) (2 samples, 0.51%)</title><rect x="1038" y="276" width="5" height="15" fill="rgb(239,224,28)"/><text x="1041.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (118 samples, 29.80%)</title><rect x="716" y="196" width="351" height="15" fill="rgb(249,167,2)"/><text x="719.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (113 samples, 28.54%)</title><rect x="731" y="212" width="336" height="15" fill="rgb(249,176,6)"/><text x="734.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (105 samples, 26.52%)</title><rect x="754" y="228" width="313" height="15" fill="rgb(209,16,51)"/><text x="757.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (102 samples, 25.76%)</title><rect x="763" y="244" width="304" height="15" fill="rgb(220,83,44)"/><text x="766.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (8 samples, 2.02%)</title><rect x="1043" y="260" width="24" height="15" fill="rgb(249,204,16)"/><text x="1046.00" y="270.50">_..</text></g><g><title>__enter__ (threading.py) (1 samples, 0.25%)</title><rect x="1079" y="212" width="3" height="15" fill="rgb(225,63,49)"/><text x="1082.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.25%)</title><rect x="1082" y="212" width="3" height="15" fill="rgb(253,27,32)"/><text x="1085.00" y="222.50"></text></g><g><title>get (queue.py) (7 samples, 1.77%)</title><rect x="1067" y="196" width="21" height="15" fill="rgb(219,138,37)"/><text x="1070.00" y="206.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.25%)</title><rect x="1085" y="212" width="3" height="15" fill="rgb(241,162,7)"/><text x="1088.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.26%)</title><rect x="1097" y="212" width="15" height="15" fill="rgb(211,31,44)"/><text x="1100.00" y="222.50"></text></g><g><title>0x7f805803b1d1 (libc-2.29.so) (1 samples, 0.25%)</title><rect x="1109" y="228" width="3" height="15" fill="rgb(234,1,50)"/><text x="1112.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (8 samples, 2.02%)</title><rect x="1112" y="212" width="24" height="15" fill="rgb(206,39,50)"/><text x="1115.00" y="222.50">g..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.25%)</title><rect x="1133" y="228" width="3" height="15" fill="rgb(251,34,41)"/><text x="1136.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (20 samples, 5.05%)</title><rect x="1088" y="196" width="60" height="15" fill="rgb(217,4,0)"/><text x="1091.00" y="206.50">get_ne..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.01%)</title><rect x="1136" y="212" width="12" height="15" fill="rgb(216,67,5)"/><text x="1139.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.25%)</title><rect x="1148" y="212" width="3" height="15" fill="rgb(219,105,39)"/><text x="1151.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (185 samples, 46.72%)</title><rect x="602" y="180" width="552" height="15" fill="rgb(224,108,0)"/><text x="605.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (2 samples, 0.51%)</title><rect x="1148" y="196" width="6" height="15" fill="rgb(245,75,33)"/><text x="1151.00" y="206.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.25%)</title><rect x="1151" y="212" width="3" height="15" fill="rgb(222,142,50)"/><text x="1154.00" y="222.50"></text></g><g><title>lock_PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="1151" y="228" width="3" height="15" fill="rgb(205,191,33)"/><text x="1154.00" y="238.50"></text></g><g><title>PyThread_release_lock (python3.7) (1 samples, 0.25%)</title><rect x="1151" y="244" width="3" height="15" fill="rgb(254,174,11)"/><text x="1154.00" y="254.50"></text></g><g><title>sem_post@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.25%)</title><rect x="1151" y="260" width="3" height="15" fill="rgb(224,180,35)"/><text x="1154.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py) (188 samples, 47.47%)</title><rect x="597" y="164" width="560" height="15" fill="rgb(218,182,18)"/><text x="600.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="1154" y="180" width="3" height="15" fill="rgb(253,22,43)"/><text x="1157.00" y="190.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.25%)</title><rect x="1157" y="164" width="3" height="15" fill="rgb(235,197,30)"/><text x="1160.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1157" y="180" width="3" height="15" fill="rgb(222,153,34)"/><text x="1160.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1157" y="196" width="3" height="15" fill="rgb(219,206,22)"/><text x="1160.00" y="206.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1157" y="212" width="3" height="15" fill="rgb(251,158,23)"/><text x="1160.00" y="222.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (190 samples, 47.98%)</title><rect x="597" y="100" width="566" height="15" fill="rgb(225,151,53)"/><text x="600.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (190 samples, 47.98%)</title><rect x="597" y="116" width="566" height="15" fill="rgb(241,122,37)"/><text x="600.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (190 samples, 47.98%)</title><rect x="597" y="132" width="566" height="15" fill="rgb(242,98,52)"/><text x="600.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (190 samples, 47.98%)</title><rect x="597" y="148" width="566" height="15" fill="rgb(247,209,1)"/><text x="600.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1160" y="164" width="3" height="15" fill="rgb(234,151,38)"/><text x="1163.00" y="174.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1160" y="180" width="3" height="15" fill="rgb(243,102,33)"/><text x="1163.00" y="190.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.25%)</title><rect x="1160" y="196" width="3" height="15" fill="rgb(216,146,45)"/><text x="1163.00" y="206.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (191 samples, 48.23%)</title><rect x="597" y="68" width="569" height="15" fill="rgb(238,213,1)"/><text x="600.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (191 samples, 48.23%)</title><rect x="597" y="84" width="569" height="15" fill="rgb(250,118,1)"/><text x="600.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="1163" y="100" width="3" height="15" fill="rgb(235,50,9)"/><text x="1166.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="1163" y="116" width="3" height="15" fill="rgb(207,34,40)"/><text x="1166.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.25%)</title><rect x="1163" y="132" width="3" height="15" fill="rgb(217,39,19)"/><text x="1166.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.25%)</title><rect x="1163" y="148" width="3" height="15" fill="rgb(244,229,12)"/><text x="1166.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.25%)</title><rect x="1163" y="164" width="3" height="15" fill="rgb(236,61,54)"/><text x="1166.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.25%)</title><rect x="1163" y="180" width="3" height="15" fill="rgb(243,124,38)"/><text x="1166.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.25%)</title><rect x="1163" y="196" width="3" height="15" fill="rgb(250,226,32)"/><text x="1166.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.25%)</title><rect x="1163" y="212" width="3" height="15" fill="rgb(224,195,11)"/><text x="1166.00" y="222.50"></text></g><g><title>long_richcompare (scalarmath.c.src) (1 samples, 0.25%)</title><rect x="1163" y="228" width="3" height="15" fill="rgb(241,41,4)"/><text x="1166.00" y="238.50"></text></g><g><title>_long_convert2_to_ctypes (scalarmath.c.src) (1 samples, 0.25%)</title><rect x="1163" y="244" width="3" height="15" fill="rgb(220,166,29)"/><text x="1166.00" y="254.50"></text></g><g><title>_long_convert_to_ctype (scalarmath.c.src) (1 samples, 0.25%)</title><rect x="1163" y="260" width="3" height="15" fill="rgb(253,88,12)"/><text x="1166.00" y="270.50"></text></g><g><title>PyArray_ScalarFromObject (scalarapi.c) (1 samples, 0.25%)</title><rect x="1163" y="276" width="3" height="15" fill="rgb(206,219,1)"/><text x="1166.00" y="286.50"></text></g><g><title>gentype_alloc (scalartypes.c.src) (1 samples, 0.25%)</title><rect x="1163" y="292" width="3" height="15" fill="rgb(251,28,18)"/><text x="1166.00" y="302.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (1 samples, 0.25%)</title><rect x="1169" y="260" width="3" height="15" fill="rgb(232,193,40)"/><text x="1172.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.25%)</title><rect x="1169" y="276" width="3" height="15" fill="rgb(210,49,8)"/><text x="1172.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (3 samples, 0.76%)</title><rect x="1166" y="132" width="9" height="15" fill="rgb(226,80,9)"/><text x="1169.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (3 samples, 0.76%)</title><rect x="1166" y="148" width="9" height="15" fill="rgb(244,11,31)"/><text x="1169.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (2 samples, 0.51%)</title><rect x="1169" y="164" width="6" height="15" fill="rgb(251,157,41)"/><text x="1172.00" y="174.50"></text></g><g><title>randint (mtrand.c) (2 samples, 0.51%)</title><rect x="1169" y="180" width="6" height="15" fill="rgb(249,111,18)"/><text x="1172.00" y="190.50"></text></g><g><title>randint (mtrand.c) (2 samples, 0.51%)</title><rect x="1169" y="196" width="6" height="15" fill="rgb(234,58,39)"/><text x="1172.00" y="206.50"></text></g><g><title>__Pyx_PyObject_GetAttrStr (mtrand.c) (2 samples, 0.51%)</title><rect x="1169" y="212" width="6" height="15" fill="rgb(206,53,23)"/><text x="1172.00" y="222.50"></text></g><g><title>arraydescr_name_get (descriptor.c) (2 samples, 0.51%)</title><rect x="1169" y="228" width="6" height="15" fill="rgb(216,164,31)"/><text x="1172.00" y="238.50"></text></g><g><title>_name_get (numpy/core/_dtype.py) (2 samples, 0.51%)</title><rect x="1169" y="244" width="6" height="15" fill="rgb(216,221,44)"/><text x="1172.00" y="254.50"></text></g><g><title>unicode_subscript (python3.7) (1 samples, 0.25%)</title><rect x="1172" y="260" width="3" height="15" fill="rgb(240,10,51)"/><text x="1175.00" y="270.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.25%)</title><rect x="1175" y="196" width="3" height="15" fill="rgb(250,87,44)"/><text x="1178.00" y="206.50"></text></g><g><title>__init__ (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="372" width="6" height="15" fill="rgb(227,104,11)"/><text x="1181.00" y="382.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="388" width="6" height="15" fill="rgb(214,103,5)"/><text x="1181.00" y="398.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="404" width="6" height="15" fill="rgb(209,53,32)"/><text x="1181.00" y="414.50"></text></g><g><title>__init__ (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="420" width="6" height="15" fill="rgb(254,17,31)"/><text x="1181.00" y="430.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="436" width="6" height="15" fill="rgb(225,90,20)"/><text x="1181.00" y="446.50"></text></g><g><title>SeedSequence_get_assembled_entropy (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="452" width="6" height="15" fill="rgb(244,120,45)"/><text x="1181.00" y="462.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="468" width="6" height="15" fill="rgb(232,4,15)"/><text x="1181.00" y="478.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="484" width="6" height="15" fill="rgb(205,32,33)"/><text x="1181.00" y="494.50"></text></g><g><title>_coerce_to_uint32_array (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="500" width="6" height="15" fill="rgb(223,223,5)"/><text x="1181.00" y="510.50"></text></g><g><title>__Pyx_PyObject_CallMethO (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="516" width="6" height="15" fill="rgb(216,58,2)"/><text x="1181.00" y="526.50"></text></g><g><title>_int_to_uint32_array (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="532" width="6" height="15" fill="rgb(205,179,43)"/><text x="1181.00" y="542.50"></text></g><g><title>bit_generator__int_to_uint32_array (bit_generator.c) (2 samples, 0.51%)</title><rect x="1178" y="548" width="6" height="15" fill="rgb(243,31,36)"/><text x="1181.00" y="558.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.25%)</title><rect x="1181" y="564" width="3" height="15" fill="rgb(248,134,7)"/><text x="1184.00" y="574.50"></text></g><g><title>uint_arrtype_new (scalartypes.c.src) (1 samples, 0.25%)</title><rect x="1181" y="580" width="3" height="15" fill="rgb(249,2,47)"/><text x="1184.00" y="590.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.25%)</title><rect x="1181" y="596" width="3" height="15" fill="rgb(206,204,48)"/><text x="1184.00" y="606.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.25%)</title><rect x="1181" y="612" width="3" height="15" fill="rgb(222,193,42)"/><text x="1184.00" y="622.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="1181" y="628" width="3" height="15" fill="rgb(208,65,52)"/><text x="1184.00" y="638.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.25%)</title><rect x="1181" y="644" width="3" height="15" fill="rgb(236,154,44)"/><text x="1184.00" y="654.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (3 samples, 0.76%)</title><rect x="1178" y="260" width="9" height="15" fill="rgb(233,77,15)"/><text x="1181.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (3 samples, 0.76%)</title><rect x="1178" y="276" width="9" height="15" fill="rgb(222,172,39)"/><text x="1181.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (3 samples, 0.76%)</title><rect x="1178" y="292" width="9" height="15" fill="rgb(218,92,39)"/><text x="1181.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (3 samples, 0.76%)</title><rect x="1178" y="308" width="9" height="15" fill="rgb(251,116,46)"/><text x="1181.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (3 samples, 0.76%)</title><rect x="1178" y="324" width="9" height="15" fill="rgb(234,147,36)"/><text x="1181.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (3 samples, 0.76%)</title><rect x="1178" y="340" width="9" height="15" fill="rgb(252,14,4)"/><text x="1181.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (3 samples, 0.76%)</title><rect x="1178" y="356" width="9" height="15" fill="rgb(217,155,13)"/><text x="1181.00" y="366.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.25%)</title><rect x="1184" y="372" width="3" height="15" fill="rgb(230,203,18)"/><text x="1187.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.25%)</title><rect x="1184" y="388" width="3" height="15" fill="rgb(212,131,5)"/><text x="1187.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.25%)</title><rect x="1184" y="404" width="3" height="15" fill="rgb(232,14,45)"/><text x="1187.00" y="414.50"></text></g><g><title>__Pyx_PyIter_Next2 (bit_generator.c) (1 samples, 0.25%)</title><rect x="1184" y="420" width="3" height="15" fill="rgb(206,193,5)"/><text x="1187.00" y="430.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.25%)</title><rect x="1184" y="436" width="3" height="15" fill="rgb(234,133,51)"/><text x="1187.00" y="446.50"></text></g><g><title>all (396 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(246,27,8)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (396 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(239,90,49)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (8 samples, 2.02%)</title><rect x="1166" y="68" width="24" height="15" fill="rgb(228,103,38)"/><text x="1169.00" y="78.50">s..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (8 samples, 2.02%)</title><rect x="1166" y="84" width="24" height="15" fill="rgb(233,198,26)"/><text x="1169.00" y="94.50">s..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 2.02%)</title><rect x="1166" y="100" width="24" height="15" fill="rgb(225,83,30)"/><text x="1169.00" y="110.50">s..</text></g><g><title>fit (sklearn/ensemble/_forest.py) (8 samples, 2.02%)</title><rect x="1166" y="116" width="24" height="15" fill="rgb(236,105,10)"/><text x="1169.00" y="126.50">f..</text></g><g><title>__call__ (joblib/parallel.py) (5 samples, 1.26%)</title><rect x="1175" y="132" width="15" height="15" fill="rgb(229,44,41)"/><text x="1178.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (5 samples, 1.26%)</title><rect x="1175" y="148" width="15" height="15" fill="rgb(209,86,12)"/><text x="1178.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (5 samples, 1.26%)</title><rect x="1175" y="164" width="15" height="15" fill="rgb(233,122,7)"/><text x="1178.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (5 samples, 1.26%)</title><rect x="1175" y="180" width="15" height="15" fill="rgb(235,44,49)"/><text x="1178.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.01%)</title><rect x="1178" y="196" width="12" height="15" fill="rgb(214,182,49)"/><text x="1181.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.01%)</title><rect x="1178" y="212" width="12" height="15" fill="rgb(212,176,12)"/><text x="1181.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.01%)</title><rect x="1178" y="228" width="12" height="15" fill="rgb(233,134,53)"/><text x="1181.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 1.01%)</title><rect x="1178" y="244" width="12" height="15" fill="rgb(243,204,0)"/><text x="1181.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.25%)</title><rect x="1187" y="260" width="3" height="15" fill="rgb(245,171,10)"/><text x="1190.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (1 samples, 0.25%)</title><rect x="1187" y="276" width="3" height="15" fill="rgb(223,1,6)"/><text x="1190.00" y="286.50"></text></g><g><title>0x7f8031a52b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1187" y="292" width="3" height="15" fill="rgb(242,114,3)"/><text x="1190.00" y="302.50"></text></g><g><title>0x7f8031a83ee8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1187" y="308" width="3" height="15" fill="rgb(227,175,29)"/><text x="1190.00" y="318.50"></text></g><g><title>0x7f8031cb4398 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1187" y="324" width="3" height="15" fill="rgb(205,134,48)"/><text x="1190.00" y="334.50"></text></g><g><title>0x7f8031caa402 (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.25%)</title><rect x="1187" y="340" width="3" height="15" fill="rgb(228,187,29)"/><text x="1190.00" y="350.50"></text></g></g></svg>