<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2166" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2149.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2149.00"> </text><g id="frames"><g><title>0x7f2af1cf8b1c (libc-2.29.so) (1 samples, 0.26%)</title><rect x="10" y="52" width="3" height="15" fill="rgb(210,97,43)"/><text x="13.00" y="62.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(215,128,29)"/><text x="16.00" y="990.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="13" y="868" width="6" height="15" fill="rgb(251,130,53)"/><text x="16.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="13" y="884" width="6" height="15" fill="rgb(230,60,11)"/><text x="16.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="13" y="900" width="6" height="15" fill="rgb(254,74,35)"/><text x="16.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="13" y="916" width="6" height="15" fill="rgb(217,156,22)"/><text x="16.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="13" y="932" width="6" height="15" fill="rgb(228,178,13)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="13" y="948" width="6" height="15" fill="rgb(252,85,23)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="13" y="964" width="6" height="15" fill="rgb(208,213,22)"/><text x="16.00" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="16" y="980" width="3" height="15" fill="rgb(236,174,21)"/><text x="19.00" y="990.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="868" width="3" height="15" fill="rgb(253,177,9)"/><text x="22.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="884" width="3" height="15" fill="rgb(248,81,31)"/><text x="22.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="900" width="3" height="15" fill="rgb(251,0,17)"/><text x="22.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="916" width="3" height="15" fill="rgb(217,74,17)"/><text x="22.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="19" y="932" width="3" height="15" fill="rgb(253,19,33)"/><text x="22.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.26%)</title><rect x="19" y="948" width="3" height="15" fill="rgb(245,179,43)"/><text x="22.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="19" y="964" width="3" height="15" fill="rgb(210,2,48)"/><text x="22.00" y="974.50"></text></g><g><title>0x7f2af1d38237 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="19" y="980" width="3" height="15" fill="rgb(241,88,18)"/><text x="22.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="22" y="900" width="3" height="15" fill="rgb(228,15,34)"/><text x="25.00" y="910.50"></text></g><g><title>__lt__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.26%)</title><rect x="22" y="916" width="3" height="15" fill="rgb(214,216,48)"/><text x="25.00" y="926.50"></text></g><g><title>_compare (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.26%)</title><rect x="22" y="932" width="3" height="15" fill="rgb(222,216,43)"/><text x="25.00" y="942.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.32%)</title><rect x="13" y="292" width="15" height="15" fill="rgb(218,46,37)"/><text x="16.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="308" width="15" height="15" fill="rgb(229,81,17)"/><text x="16.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="324" width="15" height="15" fill="rgb(244,210,47)"/><text x="16.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="340" width="15" height="15" fill="rgb(239,117,18)"/><text x="16.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="13" y="356" width="15" height="15" fill="rgb(216,195,13)"/><text x="16.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="372" width="15" height="15" fill="rgb(212,78,40)"/><text x="16.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (5 samples, 1.32%)</title><rect x="13" y="388" width="15" height="15" fill="rgb(238,44,27)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="404" width="15" height="15" fill="rgb(226,153,18)"/><text x="16.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="420" width="15" height="15" fill="rgb(234,224,21)"/><text x="16.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="436" width="15" height="15" fill="rgb(224,223,42)"/><text x="16.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="13" y="452" width="15" height="15" fill="rgb(248,18,40)"/><text x="16.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="468" width="15" height="15" fill="rgb(227,112,29)"/><text x="16.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (5 samples, 1.32%)</title><rect x="13" y="484" width="15" height="15" fill="rgb(214,152,14)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="500" width="15" height="15" fill="rgb(253,131,23)"/><text x="16.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="516" width="15" height="15" fill="rgb(234,188,19)"/><text x="16.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="532" width="15" height="15" fill="rgb(217,213,30)"/><text x="16.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="13" y="548" width="15" height="15" fill="rgb(225,103,33)"/><text x="16.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="564" width="15" height="15" fill="rgb(230,101,8)"/><text x="16.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (5 samples, 1.32%)</title><rect x="13" y="580" width="15" height="15" fill="rgb(211,70,29)"/><text x="16.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="596" width="15" height="15" fill="rgb(218,86,47)"/><text x="16.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="612" width="15" height="15" fill="rgb(253,22,49)"/><text x="16.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="628" width="15" height="15" fill="rgb(235,50,36)"/><text x="16.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="644" width="15" height="15" fill="rgb(234,142,25)"/><text x="16.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="660" width="15" height="15" fill="rgb(229,26,30)"/><text x="16.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="676" width="15" height="15" fill="rgb(236,144,26)"/><text x="16.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="13" y="692" width="15" height="15" fill="rgb(212,175,28)"/><text x="16.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="708" width="15" height="15" fill="rgb(242,190,51)"/><text x="16.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (5 samples, 1.32%)</title><rect x="13" y="724" width="15" height="15" fill="rgb(230,27,8)"/><text x="16.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="740" width="15" height="15" fill="rgb(218,49,49)"/><text x="16.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="756" width="15" height="15" fill="rgb(211,154,21)"/><text x="16.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="772" width="15" height="15" fill="rgb(245,16,43)"/><text x="16.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="13" y="788" width="15" height="15" fill="rgb(228,2,13)"/><text x="16.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="13" y="804" width="15" height="15" fill="rgb(228,220,3)"/><text x="16.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (5 samples, 1.32%)</title><rect x="13" y="820" width="15" height="15" fill="rgb(214,82,53)"/><text x="16.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (5 samples, 1.32%)</title><rect x="13" y="836" width="15" height="15" fill="rgb(214,52,50)"/><text x="16.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (5 samples, 1.32%)</title><rect x="13" y="852" width="15" height="15" fill="rgb(243,215,33)"/><text x="16.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="22" y="868" width="6" height="15" fill="rgb(216,24,27)"/><text x="25.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.53%)</title><rect x="22" y="884" width="6" height="15" fill="rgb(232,114,45)"/><text x="25.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="900" width="3" height="15" fill="rgb(229,25,1)"/><text x="28.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.26%)</title><rect x="25" y="916" width="3" height="15" fill="rgb(213,145,7)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="500" width="3" height="15" fill="rgb(245,222,20)"/><text x="31.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="516" width="3" height="15" fill="rgb(222,15,9)"/><text x="31.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="532" width="3" height="15" fill="rgb(238,27,31)"/><text x="31.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="548" width="3" height="15" fill="rgb(206,72,13)"/><text x="31.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="564" width="3" height="15" fill="rgb(234,48,45)"/><text x="31.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.26%)</title><rect x="28" y="580" width="3" height="15" fill="rgb(240,121,43)"/><text x="31.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="596" width="3" height="15" fill="rgb(248,67,14)"/><text x="31.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="612" width="3" height="15" fill="rgb(226,82,41)"/><text x="31.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="628" width="3" height="15" fill="rgb(224,137,49)"/><text x="31.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="644" width="3" height="15" fill="rgb(243,94,12)"/><text x="31.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="660" width="3" height="15" fill="rgb(237,10,25)"/><text x="31.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.26%)</title><rect x="28" y="676" width="3" height="15" fill="rgb(237,144,19)"/><text x="31.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="692" width="3" height="15" fill="rgb(253,221,49)"/><text x="31.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="708" width="3" height="15" fill="rgb(247,45,21)"/><text x="31.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="724" width="3" height="15" fill="rgb(223,5,24)"/><text x="31.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="740" width="3" height="15" fill="rgb(217,91,17)"/><text x="31.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="756" width="3" height="15" fill="rgb(229,104,11)"/><text x="31.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.26%)</title><rect x="28" y="772" width="3" height="15" fill="rgb(242,202,29)"/><text x="31.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="788" width="3" height="15" fill="rgb(242,99,18)"/><text x="31.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="804" width="3" height="15" fill="rgb(208,61,5)"/><text x="31.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="820" width="3" height="15" fill="rgb(250,211,49)"/><text x="31.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="836" width="3" height="15" fill="rgb(238,14,52)"/><text x="31.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="852" width="3" height="15" fill="rgb(229,90,6)"/><text x="31.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="868" width="3" height="15" fill="rgb(205,209,47)"/><text x="31.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="884" width="3" height="15" fill="rgb(226,80,45)"/><text x="31.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.26%)</title><rect x="28" y="900" width="3" height="15" fill="rgb(209,150,8)"/><text x="31.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="916" width="3" height="15" fill="rgb(229,201,7)"/><text x="31.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="932" width="3" height="15" fill="rgb(237,71,16)"/><text x="31.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="948" width="3" height="15" fill="rgb(211,8,13)"/><text x="31.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="964" width="3" height="15" fill="rgb(233,88,31)"/><text x="31.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="980" width="3" height="15" fill="rgb(227,127,17)"/><text x="31.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="28" y="996" width="3" height="15" fill="rgb(246,21,31)"/><text x="31.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="28" y="1012" width="3" height="15" fill="rgb(216,145,21)"/><text x="31.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.26%)</title><rect x="28" y="1028" width="3" height="15" fill="rgb(205,204,53)"/><text x="31.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.26%)</title><rect x="28" y="1044" width="3" height="15" fill="rgb(225,124,46)"/><text x="31.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.26%)</title><rect x="28" y="1060" width="3" height="15" fill="rgb(223,144,15)"/><text x="31.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.26%)</title><rect x="28" y="1076" width="3" height="15" fill="rgb(245,92,2)"/><text x="31.00" y="1086.50"></text></g><g><title>unicode_expandtabs (python3.7) (1 samples, 0.26%)</title><rect x="28" y="1092" width="3" height="15" fill="rgb(246,4,48)"/><text x="31.00" y="1102.50"></text></g><g><title>&lt;module&gt; (joblib/memory.py) (1 samples, 0.26%)</title><rect x="31" y="804" width="3" height="15" fill="rgb(242,196,51)"/><text x="34.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="820" width="3" height="15" fill="rgb(227,141,34)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="836" width="3" height="15" fill="rgb(206,18,1)"/><text x="34.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="852" width="3" height="15" fill="rgb(251,190,42)"/><text x="34.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="868" width="3" height="15" fill="rgb(243,40,30)"/><text x="34.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="884" width="3" height="15" fill="rgb(206,147,54)"/><text x="34.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_store_backends.py) (1 samples, 0.26%)</title><rect x="31" y="900" width="3" height="15" fill="rgb(247,208,38)"/><text x="34.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="916" width="3" height="15" fill="rgb(242,214,31)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="932" width="3" height="15" fill="rgb(215,211,24)"/><text x="34.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="948" width="3" height="15" fill="rgb(234,221,10)"/><text x="34.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="964" width="3" height="15" fill="rgb(225,65,51)"/><text x="34.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="980" width="3" height="15" fill="rgb(233,198,51)"/><text x="34.00" y="990.50"></text></g><g><title>&lt;module&gt; (json/__init__.py) (1 samples, 0.26%)</title><rect x="31" y="996" width="3" height="15" fill="rgb(220,27,32)"/><text x="34.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1012" width="3" height="15" fill="rgb(247,175,21)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1028" width="3" height="15" fill="rgb(215,209,13)"/><text x="34.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1044" width="3" height="15" fill="rgb(239,185,15)"/><text x="34.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="31" y="1060" width="3" height="15" fill="rgb(243,22,49)"/><text x="34.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="31" y="1076" width="3" height="15" fill="rgb(234,114,11)"/><text x="34.00" y="1086.50"></text></g><g><title>&lt;module&gt; (json/encoder.py) (1 samples, 0.26%)</title><rect x="31" y="1092" width="3" height="15" fill="rgb(207,12,18)"/><text x="34.00" y="1102.50"></text></g><g><title>compile (re.py) (1 samples, 0.26%)</title><rect x="31" y="1108" width="3" height="15" fill="rgb(238,213,22)"/><text x="34.00" y="1118.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="31" y="1124" width="3" height="15" fill="rgb(248,150,3)"/><text x="34.00" y="1134.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.26%)</title><rect x="31" y="1140" width="3" height="15" fill="rgb(239,120,4)"/><text x="34.00" y="1150.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.26%)</title><rect x="31" y="1156" width="3" height="15" fill="rgb(209,115,32)"/><text x="34.00" y="1166.50"></text></g><g><title>__init__ (sre_parse.py) (1 samples, 0.26%)</title><rect x="31" y="1172" width="3" height="15" fill="rgb(250,16,51)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.12%)</title><rect x="13" y="196" width="25" height="15" fill="rgb(247,0,24)"/><text x="16.00" y="206.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.12%)</title><rect x="13" y="212" width="25" height="15" fill="rgb(220,164,27)"/><text x="16.00" y="222.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.12%)</title><rect x="13" y="228" width="25" height="15" fill="rgb(231,98,41)"/><text x="16.00" y="238.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.12%)</title><rect x="13" y="244" width="25" height="15" fill="rgb(227,190,19)"/><text x="16.00" y="254.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.12%)</title><rect x="13" y="260" width="25" height="15" fill="rgb(219,51,4)"/><text x="16.00" y="270.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.12%)</title><rect x="13" y="276" width="25" height="15" fill="rgb(212,73,39)"/><text x="16.00" y="286.50">_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (3 samples, 0.79%)</title><rect x="28" y="292" width="10" height="15" fill="rgb(220,118,35)"/><text x="31.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="308" width="10" height="15" fill="rgb(213,200,42)"/><text x="31.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="324" width="10" height="15" fill="rgb(235,156,50)"/><text x="31.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="340" width="10" height="15" fill="rgb(254,110,37)"/><text x="31.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.79%)</title><rect x="28" y="356" width="10" height="15" fill="rgb(240,129,27)"/><text x="31.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="372" width="10" height="15" fill="rgb(205,112,24)"/><text x="31.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (3 samples, 0.79%)</title><rect x="28" y="388" width="10" height="15" fill="rgb(242,80,51)"/><text x="31.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="404" width="10" height="15" fill="rgb(246,166,13)"/><text x="31.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="420" width="10" height="15" fill="rgb(205,163,28)"/><text x="31.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="436" width="10" height="15" fill="rgb(237,26,49)"/><text x="31.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.79%)</title><rect x="28" y="452" width="10" height="15" fill="rgb(250,114,9)"/><text x="31.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.79%)</title><rect x="28" y="468" width="10" height="15" fill="rgb(249,223,25)"/><text x="31.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (3 samples, 0.79%)</title><rect x="28" y="484" width="10" height="15" fill="rgb(209,40,44)"/><text x="31.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="500" width="7" height="15" fill="rgb(208,97,45)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="516" width="7" height="15" fill="rgb(224,134,26)"/><text x="34.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="532" width="7" height="15" fill="rgb(243,92,18)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="548" width="7" height="15" fill="rgb(226,71,31)"/><text x="34.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="564" width="7" height="15" fill="rgb(252,9,34)"/><text x="34.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="31" y="580" width="7" height="15" fill="rgb(252,169,54)"/><text x="34.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="596" width="7" height="15" fill="rgb(222,0,34)"/><text x="34.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (2 samples, 0.53%)</title><rect x="31" y="612" width="7" height="15" fill="rgb(225,5,16)"/><text x="34.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="628" width="7" height="15" fill="rgb(238,159,18)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="644" width="7" height="15" fill="rgb(212,80,47)"/><text x="34.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="660" width="7" height="15" fill="rgb(253,59,42)"/><text x="34.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="31" y="676" width="7" height="15" fill="rgb(218,72,19)"/><text x="34.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="692" width="7" height="15" fill="rgb(207,63,12)"/><text x="34.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (2 samples, 0.53%)</title><rect x="31" y="708" width="7" height="15" fill="rgb(213,25,53)"/><text x="34.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="724" width="7" height="15" fill="rgb(243,169,32)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="740" width="7" height="15" fill="rgb(233,221,27)"/><text x="34.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="756" width="7" height="15" fill="rgb(217,151,2)"/><text x="34.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="31" y="772" width="7" height="15" fill="rgb(246,107,4)"/><text x="34.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="31" y="788" width="7" height="15" fill="rgb(251,218,33)"/><text x="34.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.26%)</title><rect x="34" y="804" width="4" height="15" fill="rgb(243,160,15)"/><text x="37.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="820" width="4" height="15" fill="rgb(221,108,43)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="836" width="4" height="15" fill="rgb(250,45,9)"/><text x="37.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="852" width="4" height="15" fill="rgb(226,223,50)"/><text x="37.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="868" width="4" height="15" fill="rgb(220,183,49)"/><text x="37.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="884" width="4" height="15" fill="rgb(240,185,23)"/><text x="37.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/_parallel_backends.py) (1 samples, 0.26%)</title><rect x="34" y="900" width="4" height="15" fill="rgb(210,209,38)"/><text x="37.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="916" width="4" height="15" fill="rgb(232,225,30)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="932" width="4" height="15" fill="rgb(231,165,9)"/><text x="37.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="948" width="4" height="15" fill="rgb(222,121,12)"/><text x="37.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="964" width="4" height="15" fill="rgb(237,120,18)"/><text x="37.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="980" width="4" height="15" fill="rgb(248,111,27)"/><text x="37.00" y="990.50"></text></g><g><title>&lt;module&gt; (joblib/executor.py) (1 samples, 0.26%)</title><rect x="34" y="996" width="4" height="15" fill="rgb(207,141,12)"/><text x="37.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1012" width="4" height="15" fill="rgb(224,48,31)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1028" width="4" height="15" fill="rgb(213,15,43)"/><text x="37.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1044" width="4" height="15" fill="rgb(236,174,28)"/><text x="37.00" y="1054.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1060" width="4" height="15" fill="rgb(207,153,4)"/><text x="37.00" y="1070.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1076" width="4" height="15" fill="rgb(238,201,4)"/><text x="37.00" y="1086.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1092" width="4" height="15" fill="rgb(228,39,49)"/><text x="37.00" y="1102.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1108" width="4" height="15" fill="rgb(229,207,41)"/><text x="37.00" y="1118.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1124" width="4" height="15" fill="rgb(233,165,23)"/><text x="37.00" y="1134.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="1140" width="4" height="15" fill="rgb(253,187,24)"/><text x="37.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1156" width="4" height="15" fill="rgb(231,203,37)"/><text x="37.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1172" width="4" height="15" fill="rgb(214,25,19)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1188" width="4" height="15" fill="rgb(243,193,48)"/><text x="37.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1204" width="4" height="15" fill="rgb(225,168,31)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1220" width="4" height="15" fill="rgb(215,214,49)"/><text x="37.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1236" width="4" height="15" fill="rgb(222,127,24)"/><text x="37.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1252" width="4" height="15" fill="rgb(209,199,29)"/><text x="37.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1268" width="4" height="15" fill="rgb(238,202,25)"/><text x="37.00" y="1278.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/__init__.py) (1 samples, 0.26%)</title><rect x="34" y="1284" width="4" height="15" fill="rgb(254,144,47)"/><text x="37.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1300" width="4" height="15" fill="rgb(209,58,23)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1316" width="4" height="15" fill="rgb(215,78,25)"/><text x="37.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1332" width="4" height="15" fill="rgb(219,96,49)"/><text x="37.00" y="1342.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1348" width="4" height="15" fill="rgb(226,58,48)"/><text x="37.00" y="1358.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1364" width="4" height="15" fill="rgb(253,45,30)"/><text x="37.00" y="1374.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/context.py) (1 samples, 0.26%)</title><rect x="34" y="1380" width="4" height="15" fill="rgb(235,73,50)"/><text x="37.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1396" width="4" height="15" fill="rgb(251,9,4)"/><text x="37.00" y="1406.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1412" width="4" height="15" fill="rgb(211,155,33)"/><text x="37.00" y="1422.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1428" width="4" height="15" fill="rgb(222,171,21)"/><text x="37.00" y="1438.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1444" width="4" height="15" fill="rgb(208,114,44)"/><text x="37.00" y="1454.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1460" width="4" height="15" fill="rgb(207,117,30)"/><text x="37.00" y="1470.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/process.py) (1 samples, 0.26%)</title><rect x="34" y="1476" width="4" height="15" fill="rgb(206,217,39)"/><text x="37.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1492" width="4" height="15" fill="rgb(221,41,13)"/><text x="37.00" y="1502.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1508" width="4" height="15" fill="rgb(246,207,22)"/><text x="37.00" y="1518.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1524" width="4" height="15" fill="rgb(225,214,51)"/><text x="37.00" y="1534.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1540" width="4" height="15" fill="rgb(209,48,27)"/><text x="37.00" y="1550.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1556" width="4" height="15" fill="rgb(228,140,27)"/><text x="37.00" y="1566.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat.py) (1 samples, 0.26%)</title><rect x="34" y="1572" width="4" height="15" fill="rgb(227,166,38)"/><text x="37.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1588" width="4" height="15" fill="rgb(217,226,17)"/><text x="37.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1604" width="4" height="15" fill="rgb(231,89,43)"/><text x="37.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1620" width="4" height="15" fill="rgb(244,143,51)"/><text x="37.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="34" y="1636" width="4" height="15" fill="rgb(216,216,7)"/><text x="37.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1652" width="4" height="15" fill="rgb(209,90,46)"/><text x="37.00" y="1662.50"></text></g><g><title>&lt;module&gt; (joblib/externals/loky/backend/compat_posix.py) (1 samples, 0.26%)</title><rect x="34" y="1668" width="4" height="15" fill="rgb(243,100,46)"/><text x="37.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1684" width="4" height="15" fill="rgb(230,153,19)"/><text x="37.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1700" width="4" height="15" fill="rgb(243,154,52)"/><text x="37.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1716" width="4" height="15" fill="rgb(231,9,30)"/><text x="37.00" y="1726.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1732" width="4" height="15" fill="rgb(253,53,51)"/><text x="37.00" y="1742.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1748" width="4" height="15" fill="rgb(205,69,30)"/><text x="37.00" y="1758.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="34" y="1764" width="4" height="15" fill="rgb(220,13,40)"/><text x="37.00" y="1774.50"></text></g><g><title>compile (re.py) (1 samples, 0.26%)</title><rect x="38" y="1332" width="3" height="15" fill="rgb(247,147,4)"/><text x="41.00" y="1342.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="38" y="1348" width="3" height="15" fill="rgb(249,13,48)"/><text x="41.00" y="1358.50"></text></g><g><title>__and__ (enum.py) (1 samples, 0.26%)</title><rect x="38" y="1364" width="3" height="15" fill="rgb(213,132,25)"/><text x="41.00" y="1374.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.26%)</title><rect x="38" y="1380" width="3" height="15" fill="rgb(217,17,5)"/><text x="41.00" y="1390.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1124" width="6" height="15" fill="rgb(215,13,47)"/><text x="41.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1140" width="6" height="15" fill="rgb(205,126,41)"/><text x="41.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1156" width="6" height="15" fill="rgb(223,217,54)"/><text x="41.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="38" y="1172" width="6" height="15" fill="rgb(216,178,54)"/><text x="41.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1188" width="6" height="15" fill="rgb(246,33,2)"/><text x="41.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (2 samples, 0.53%)</title><rect x="38" y="1204" width="6" height="15" fill="rgb(232,103,32)"/><text x="41.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1220" width="6" height="15" fill="rgb(242,167,32)"/><text x="41.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1236" width="6" height="15" fill="rgb(244,146,35)"/><text x="41.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1252" width="6" height="15" fill="rgb(221,191,43)"/><text x="41.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="38" y="1268" width="6" height="15" fill="rgb(220,224,14)"/><text x="41.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="38" y="1284" width="6" height="15" fill="rgb(250,1,36)"/><text x="41.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py) (2 samples, 0.53%)</title><rect x="38" y="1300" width="6" height="15" fill="rgb(224,93,22)"/><text x="41.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py) (2 samples, 0.53%)</title><rect x="38" y="1316" width="6" height="15" fill="rgb(238,23,34)"/><text x="41.00" y="1326.50"></text></g><g><title>getsource (inspect.py) (1 samples, 0.26%)</title><rect x="41" y="1332" width="3" height="15" fill="rgb(209,205,28)"/><text x="44.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py) (1 samples, 0.26%)</title><rect x="41" y="1348" width="3" height="15" fill="rgb(225,202,12)"/><text x="44.00" y="1358.50"></text></g><g><title>getblock (inspect.py) (1 samples, 0.26%)</title><rect x="41" y="1364" width="3" height="15" fill="rgb(231,94,36)"/><text x="44.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py) (1 samples, 0.26%)</title><rect x="41" y="1380" width="3" height="15" fill="rgb(245,13,45)"/><text x="44.00" y="1390.50"></text></g><g><title>_compile (tokenize.py) (1 samples, 0.26%)</title><rect x="41" y="1396" width="3" height="15" fill="rgb(241,30,24)"/><text x="44.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.26%)</title><rect x="41" y="1412" width="3" height="15" fill="rgb(246,163,6)"/><text x="44.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.26%)</title><rect x="41" y="1428" width="3" height="15" fill="rgb(227,21,4)"/><text x="44.00" y="1438.50"></text></g><g><title>parse_for (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="44" y="1828" width="3" height="15" fill="rgb(209,41,27)"/><text x="47.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="44" y="1844" width="3" height="15" fill="rgb(220,197,52)"/><text x="47.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="44" y="1860" width="3" height="15" fill="rgb(248,71,10)"/><text x="47.00" y="1870.50"></text></g><g><title>flush_data (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="44" y="1876" width="3" height="15" fill="rgb(236,189,51)"/><text x="47.00" y="1886.50"></text></g><g><title>__init__ (jinja2/nodes.py) (1 samples, 0.26%)</title><rect x="44" y="1892" width="3" height="15" fill="rgb(223,51,19)"/><text x="47.00" y="1902.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1476" width="6" height="15" fill="rgb(213,107,31)"/><text x="47.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1492" width="6" height="15" fill="rgb(254,142,13)"/><text x="47.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1508" width="6" height="15" fill="rgb(227,229,19)"/><text x="47.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="44" y="1524" width="6" height="15" fill="rgb(230,195,10)"/><text x="47.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="44" y="1540" width="6" height="15" fill="rgb(232,17,39)"/><text x="47.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (2 samples, 0.53%)</title><rect x="44" y="1556" width="6" height="15" fill="rgb(240,191,32)"/><text x="47.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (2 samples, 0.53%)</title><rect x="44" y="1572" width="6" height="15" fill="rgb(241,106,10)"/><text x="47.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py) (2 samples, 0.53%)</title><rect x="44" y="1588" width="6" height="15" fill="rgb(224,222,1)"/><text x="47.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py) (2 samples, 0.53%)</title><rect x="44" y="1604" width="6" height="15" fill="rgb(240,212,38)"/><text x="47.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py) (2 samples, 0.53%)</title><rect x="44" y="1620" width="6" height="15" fill="rgb(214,73,36)"/><text x="47.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py) (2 samples, 0.53%)</title><rect x="44" y="1636" width="6" height="15" fill="rgb(219,74,16)"/><text x="47.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1652" width="6" height="15" fill="rgb(215,51,30)"/><text x="47.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1668" width="6" height="15" fill="rgb(228,128,2)"/><text x="47.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1684" width="6" height="15" fill="rgb(241,151,13)"/><text x="47.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1700" width="6" height="15" fill="rgb(230,207,29)"/><text x="47.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1716" width="6" height="15" fill="rgb(221,16,8)"/><text x="47.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1732" width="6" height="15" fill="rgb(239,208,47)"/><text x="47.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1748" width="6" height="15" fill="rgb(212,31,29)"/><text x="47.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1764" width="6" height="15" fill="rgb(246,78,20)"/><text x="47.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1780" width="6" height="15" fill="rgb(229,200,1)"/><text x="47.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1796" width="6" height="15" fill="rgb(211,70,11)"/><text x="47.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py) (2 samples, 0.53%)</title><rect x="44" y="1812" width="6" height="15" fill="rgb(226,75,25)"/><text x="47.00" y="1822.50"></text></g><g><title>parse_if (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1828" width="3" height="15" fill="rgb(241,160,19)"/><text x="50.00" y="1838.50"></text></g><g><title>parse_tuple (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1844" width="3" height="15" fill="rgb(254,74,16)"/><text x="50.00" y="1854.50"></text></g><g><title>&lt;lambda&gt; (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1860" width="3" height="15" fill="rgb(207,77,53)"/><text x="50.00" y="1870.50"></text></g><g><title>parse_expression (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1876" width="3" height="15" fill="rgb(231,90,19)"/><text x="50.00" y="1886.50"></text></g><g><title>parse_or (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1892" width="3" height="15" fill="rgb(241,165,5)"/><text x="50.00" y="1902.50"></text></g><g><title>parse_and (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1908" width="3" height="15" fill="rgb(220,112,19)"/><text x="50.00" y="1918.50"></text></g><g><title>parse_not (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1924" width="3" height="15" fill="rgb(240,192,24)"/><text x="50.00" y="1934.50"></text></g><g><title>parse_compare (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1940" width="3" height="15" fill="rgb(249,84,26)"/><text x="50.00" y="1950.50"></text></g><g><title>parse_math1 (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1956" width="3" height="15" fill="rgb(247,109,19)"/><text x="50.00" y="1966.50"></text></g><g><title>parse_concat (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1972" width="3" height="15" fill="rgb(246,105,24)"/><text x="50.00" y="1982.50"></text></g><g><title>parse_math2 (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="1988" width="3" height="15" fill="rgb(220,58,42)"/><text x="50.00" y="1998.50"></text></g><g><title>parse_pow (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="2004" width="3" height="15" fill="rgb(238,121,35)"/><text x="50.00" y="2014.50"></text></g><g><title>parse_unary (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="2020" width="3" height="15" fill="rgb(250,202,29)"/><text x="50.00" y="2030.50"></text></g><g><title>parse_primary (jinja2/parser.py) (1 samples, 0.26%)</title><rect x="47" y="2036" width="3" height="15" fill="rgb(233,36,36)"/><text x="50.00" y="2046.50"></text></g><g><title>__next__ (jinja2/lexer.py) (1 samples, 0.26%)</title><rect x="47" y="2052" width="3" height="15" fill="rgb(238,163,52)"/><text x="50.00" y="2062.50"></text></g><g><title>wrap (jinja2/lexer.py) (1 samples, 0.26%)</title><rect x="47" y="2068" width="3" height="15" fill="rgb(231,153,48)"/><text x="50.00" y="2078.50"></text></g><g><title>tokeniter (jinja2/lexer.py) (1 samples, 0.26%)</title><rect x="47" y="2084" width="3" height="15" fill="rgb(219,167,21)"/><text x="50.00" y="2094.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.26%)</title><rect x="47" y="2100" width="3" height="15" fill="rgb(235,197,19)"/><text x="50.00" y="2110.50"></text></g><g><title>0x7f2af1cf8929 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="47" y="2116" width="3" height="15" fill="rgb(241,124,52)"/><text x="50.00" y="2126.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.26%)</title><rect x="50" y="1588" width="3" height="15" fill="rgb(222,188,16)"/><text x="53.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py) (1 samples, 0.26%)</title><rect x="50" y="1604" width="3" height="15" fill="rgb(245,160,7)"/><text x="53.00" y="1614.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="50" y="1620" width="3" height="15" fill="rgb(250,193,39)"/><text x="53.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="50" y="1636" width="3" height="15" fill="rgb(232,222,52)"/><text x="53.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.26%)</title><rect x="50" y="1652" width="3" height="15" fill="rgb(237,190,39)"/><text x="53.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="50" y="1668" width="3" height="15" fill="rgb(243,94,25)"/><text x="53.00" y="1678.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="484" width="21" height="15" fill="rgb(224,42,25)"/><text x="41.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="500" width="21" height="15" fill="rgb(240,38,20)"/><text x="41.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="516" width="21" height="15" fill="rgb(243,73,15)"/><text x="41.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="532" width="21" height="15" fill="rgb(220,2,10)"/><text x="41.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.85%)</title><rect x="38" y="548" width="21" height="15" fill="rgb(249,202,23)"/><text x="41.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="564" width="21" height="15" fill="rgb(226,68,34)"/><text x="41.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (7 samples, 1.85%)</title><rect x="38" y="580" width="21" height="15" fill="rgb(215,107,14)"/><text x="41.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="596" width="21" height="15" fill="rgb(227,107,39)"/><text x="41.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="612" width="21" height="15" fill="rgb(223,75,12)"/><text x="41.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="628" width="21" height="15" fill="rgb(245,114,1)"/><text x="41.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.85%)</title><rect x="38" y="644" width="21" height="15" fill="rgb(205,198,32)"/><text x="41.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="660" width="21" height="15" fill="rgb(245,182,3)"/><text x="41.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (7 samples, 1.85%)</title><rect x="38" y="676" width="21" height="15" fill="rgb(228,21,40)"/><text x="41.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="692" width="21" height="15" fill="rgb(247,149,23)"/><text x="41.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="708" width="21" height="15" fill="rgb(230,136,10)"/><text x="41.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="724" width="21" height="15" fill="rgb(237,208,22)"/><text x="41.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.85%)</title><rect x="38" y="740" width="21" height="15" fill="rgb(237,3,38)"/><text x="41.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="756" width="21" height="15" fill="rgb(238,66,19)"/><text x="41.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (7 samples, 1.85%)</title><rect x="38" y="772" width="21" height="15" fill="rgb(221,56,11)"/><text x="41.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="788" width="21" height="15" fill="rgb(243,153,34)"/><text x="41.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="804" width="21" height="15" fill="rgb(248,184,18)"/><text x="41.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="820" width="21" height="15" fill="rgb(250,83,7)"/><text x="41.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.85%)</title><rect x="38" y="836" width="21" height="15" fill="rgb(205,99,21)"/><text x="41.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="852" width="21" height="15" fill="rgb(209,125,54)"/><text x="41.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (7 samples, 1.85%)</title><rect x="38" y="868" width="21" height="15" fill="rgb(247,67,5)"/><text x="41.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="884" width="21" height="15" fill="rgb(254,34,41)"/><text x="41.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="900" width="21" height="15" fill="rgb(215,209,30)"/><text x="41.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="916" width="21" height="15" fill="rgb(236,82,23)"/><text x="41.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="932" width="21" height="15" fill="rgb(229,211,33)"/><text x="41.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="948" width="21" height="15" fill="rgb(226,180,18)"/><text x="41.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="964" width="21" height="15" fill="rgb(239,139,40)"/><text x="41.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.85%)</title><rect x="38" y="980" width="21" height="15" fill="rgb(206,82,3)"/><text x="41.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="996" width="21" height="15" fill="rgb(209,5,1)"/><text x="41.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (7 samples, 1.85%)</title><rect x="38" y="1012" width="21" height="15" fill="rgb(246,177,15)"/><text x="41.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="1028" width="21" height="15" fill="rgb(214,17,19)"/><text x="41.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="1044" width="21" height="15" fill="rgb(237,175,6)"/><text x="41.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="1060" width="21" height="15" fill="rgb(243,85,42)"/><text x="41.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.85%)</title><rect x="38" y="1076" width="21" height="15" fill="rgb(244,169,0)"/><text x="41.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.85%)</title><rect x="38" y="1092" width="21" height="15" fill="rgb(214,54,38)"/><text x="41.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (7 samples, 1.85%)</title><rect x="38" y="1108" width="21" height="15" fill="rgb(229,194,34)"/><text x="41.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1124" width="15" height="15" fill="rgb(233,194,42)"/><text x="47.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1140" width="15" height="15" fill="rgb(236,143,45)"/><text x="47.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1156" width="15" height="15" fill="rgb(223,226,45)"/><text x="47.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1172" width="15" height="15" fill="rgb(235,5,49)"/><text x="47.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1188" width="15" height="15" fill="rgb(223,52,8)"/><text x="47.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="44" y="1204" width="15" height="15" fill="rgb(237,132,41)"/><text x="47.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1220" width="15" height="15" fill="rgb(239,216,50)"/><text x="47.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (5 samples, 1.32%)</title><rect x="44" y="1236" width="15" height="15" fill="rgb(233,12,19)"/><text x="47.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1252" width="15" height="15" fill="rgb(235,87,49)"/><text x="47.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1268" width="15" height="15" fill="rgb(224,140,22)"/><text x="47.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1284" width="15" height="15" fill="rgb(229,56,26)"/><text x="47.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1300" width="15" height="15" fill="rgb(218,68,2)"/><text x="47.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1316" width="15" height="15" fill="rgb(236,221,25)"/><text x="47.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="44" y="1332" width="15" height="15" fill="rgb(240,197,25)"/><text x="47.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1348" width="15" height="15" fill="rgb(251,172,48)"/><text x="47.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (5 samples, 1.32%)</title><rect x="44" y="1364" width="15" height="15" fill="rgb(232,129,54)"/><text x="47.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1380" width="15" height="15" fill="rgb(215,148,53)"/><text x="47.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1396" width="15" height="15" fill="rgb(213,222,0)"/><text x="47.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1412" width="15" height="15" fill="rgb(223,126,38)"/><text x="47.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.32%)</title><rect x="44" y="1428" width="15" height="15" fill="rgb(223,27,35)"/><text x="47.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.32%)</title><rect x="44" y="1444" width="15" height="15" fill="rgb(217,214,19)"/><text x="47.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (5 samples, 1.32%)</title><rect x="44" y="1460" width="15" height="15" fill="rgb(247,156,21)"/><text x="47.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.79%)</title><rect x="50" y="1476" width="9" height="15" fill="rgb(222,110,21)"/><text x="53.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 0.79%)</title><rect x="50" y="1492" width="9" height="15" fill="rgb(251,28,9)"/><text x="53.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 0.79%)</title><rect x="50" y="1508" width="9" height="15" fill="rgb(213,76,6)"/><text x="53.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 0.79%)</title><rect x="50" y="1524" width="9" height="15" fill="rgb(210,169,6)"/><text x="53.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (3 samples, 0.79%)</title><rect x="50" y="1540" width="9" height="15" fill="rgb(227,2,2)"/><text x="53.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.79%)</title><rect x="50" y="1556" width="9" height="15" fill="rgb(214,223,7)"/><text x="53.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (3 samples, 0.79%)</title><rect x="50" y="1572" width="9" height="15" fill="rgb(221,10,4)"/><text x="53.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (2 samples, 0.53%)</title><rect x="53" y="1588" width="6" height="15" fill="rgb(226,179,12)"/><text x="56.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="56" y="1604" width="3" height="15" fill="rgb(208,197,11)"/><text x="59.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="56" y="1620" width="3" height="15" fill="rgb(245,115,13)"/><text x="59.00" y="1630.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute&gt;::cast&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="56" y="1636" width="3" height="15" fill="rgb(237,217,16)"/><text x="59.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="56" y="1652" width="3" height="15" fill="rgb(237,11,31)"/><text x="59.00" y="1662.50"></text></g><g><title>pybind11::detail::keep_alive_impl (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="56" y="1668" width="3" height="15" fill="rgb(224,222,33)"/><text x="59.00" y="1678.50"></text></g><g><title>std::_Hashtable&lt;_object const*, std::pair&lt;_object const* const, std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;_object const* const, std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;_object const*&gt;, std::hash&lt;_object const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="56" y="1684" width="3" height="15" fill="rgb(250,202,31)"/><text x="59.00" y="1694.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="56" y="1700" width="3" height="15" fill="rgb(223,178,42)"/><text x="59.00" y="1710.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference_exports.py) (1 samples, 0.26%)</title><rect x="59" y="628" width="4" height="15" fill="rgb(248,68,23)"/><text x="62.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="644" width="4" height="15" fill="rgb(213,144,54)"/><text x="62.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="660" width="4" height="15" fill="rgb(251,113,8)"/><text x="62.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="676" width="4" height="15" fill="rgb(210,126,29)"/><text x="62.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="692" width="4" height="15" fill="rgb(224,10,1)"/><text x="62.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="708" width="4" height="15" fill="rgb(223,193,11)"/><text x="62.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="59" y="724" width="4" height="15" fill="rgb(229,222,29)"/><text x="62.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="59" y="740" width="4" height="15" fill="rgb(240,195,44)"/><text x="62.00" y="750.50"></text></g><g><title>&lt;module&gt; (onnx/numpy_helper.py) (1 samples, 0.26%)</title><rect x="59" y="756" width="4" height="15" fill="rgb(240,185,27)"/><text x="62.00" y="766.50"></text></g><g><title>system (platform.py) (1 samples, 0.26%)</title><rect x="59" y="772" width="4" height="15" fill="rgb(251,138,22)"/><text x="62.00" y="782.50"></text></g><g><title>uname (platform.py) (1 samples, 0.26%)</title><rect x="59" y="788" width="4" height="15" fill="rgb(247,192,35)"/><text x="62.00" y="798.50"></text></g><g><title>_syscmd_uname (platform.py) (1 samples, 0.26%)</title><rect x="59" y="804" width="4" height="15" fill="rgb(210,187,21)"/><text x="62.00" y="814.50"></text></g><g><title>popen (os.py) (1 samples, 0.26%)</title><rect x="59" y="820" width="4" height="15" fill="rgb(211,184,24)"/><text x="62.00" y="830.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.26%)</title><rect x="59" y="836" width="4" height="15" fill="rgb(219,88,30)"/><text x="62.00" y="846.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.26%)</title><rect x="59" y="852" width="4" height="15" fill="rgb(250,118,30)"/><text x="62.00" y="862.50"></text></g><g><title>0x7f2ae6379372 (?) (1 samples, 0.26%)</title><rect x="59" y="868" width="4" height="15" fill="rgb(217,175,39)"/><text x="62.00" y="878.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.26%)</title><rect x="59" y="884" width="4" height="15" fill="rgb(215,17,21)"/><text x="62.00" y="894.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (9 samples, 2.38%)</title><rect x="38" y="436" width="28" height="15" fill="rgb(219,74,18)"/><text x="41.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.38%)</title><rect x="38" y="452" width="28" height="15" fill="rgb(234,156,41)"/><text x="41.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 2.38%)</title><rect x="38" y="468" width="28" height="15" fill="rgb(215,23,40)"/><text x="41.00" y="478.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="59" y="484" width="7" height="15" fill="rgb(227,212,19)"/><text x="62.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="59" y="500" width="7" height="15" fill="rgb(218,151,25)"/><text x="62.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="59" y="516" width="7" height="15" fill="rgb(238,45,7)"/><text x="62.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.53%)</title><rect x="59" y="532" width="7" height="15" fill="rgb(215,185,48)"/><text x="62.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="59" y="548" width="7" height="15" fill="rgb(250,204,41)"/><text x="62.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="59" y="564" width="7" height="15" fill="rgb(205,86,25)"/><text x="62.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="59" y="580" width="7" height="15" fill="rgb(235,138,5)"/><text x="62.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="59" y="596" width="7" height="15" fill="rgb(212,68,23)"/><text x="62.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="59" y="612" width="7" height="15" fill="rgb(206,152,34)"/><text x="62.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.26%)</title><rect x="63" y="628" width="3" height="15" fill="rgb(247,213,20)"/><text x="66.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="644" width="3" height="15" fill="rgb(222,216,1)"/><text x="66.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="660" width="3" height="15" fill="rgb(219,200,54)"/><text x="66.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="676" width="3" height="15" fill="rgb(217,89,18)"/><text x="66.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="63" y="692" width="3" height="15" fill="rgb(241,149,37)"/><text x="66.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="708" width="3" height="15" fill="rgb(208,112,30)"/><text x="66.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.26%)</title><rect x="63" y="724" width="3" height="15" fill="rgb(232,117,47)"/><text x="66.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="740" width="3" height="15" fill="rgb(239,171,0)"/><text x="66.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="756" width="3" height="15" fill="rgb(208,59,17)"/><text x="66.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="772" width="3" height="15" fill="rgb(233,111,30)"/><text x="66.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="63" y="788" width="3" height="15" fill="rgb(212,22,37)"/><text x="66.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="804" width="3" height="15" fill="rgb(242,25,20)"/><text x="66.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.26%)</title><rect x="63" y="820" width="3" height="15" fill="rgb(227,40,34)"/><text x="66.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="836" width="3" height="15" fill="rgb(225,155,29)"/><text x="66.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="852" width="3" height="15" fill="rgb(218,152,27)"/><text x="66.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="868" width="3" height="15" fill="rgb(226,109,49)"/><text x="66.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="63" y="884" width="3" height="15" fill="rgb(250,223,36)"/><text x="66.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="900" width="3" height="15" fill="rgb(206,205,48)"/><text x="66.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.26%)</title><rect x="63" y="916" width="3" height="15" fill="rgb(216,167,45)"/><text x="66.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="932" width="3" height="15" fill="rgb(244,47,23)"/><text x="66.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="948" width="3" height="15" fill="rgb(233,206,11)"/><text x="66.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="964" width="3" height="15" fill="rgb(226,119,39)"/><text x="66.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="63" y="980" width="3" height="15" fill="rgb(220,26,16)"/><text x="66.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="996" width="3" height="15" fill="rgb(233,194,4)"/><text x="66.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.26%)</title><rect x="63" y="1012" width="3" height="15" fill="rgb(242,56,52)"/><text x="66.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1028" width="3" height="15" fill="rgb(228,59,19)"/><text x="66.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1044" width="3" height="15" fill="rgb(235,79,16)"/><text x="66.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1060" width="3" height="15" fill="rgb(224,66,49)"/><text x="66.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="63" y="1076" width="3" height="15" fill="rgb(231,207,4)"/><text x="66.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1092" width="3" height="15" fill="rgb(218,101,43)"/><text x="66.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (1 samples, 0.26%)</title><rect x="63" y="1108" width="3" height="15" fill="rgb(218,173,49)"/><text x="66.00" y="1118.50"></text></g><g><title>_add_series_or_dataframe_operations (pandas/core/generic.py) (1 samples, 0.26%)</title><rect x="63" y="1124" width="3" height="15" fill="rgb(224,12,44)"/><text x="66.00" y="1134.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1140" width="3" height="15" fill="rgb(230,178,3)"/><text x="66.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1156" width="3" height="15" fill="rgb(225,29,29)"/><text x="66.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1172" width="3" height="15" fill="rgb(250,159,2)"/><text x="66.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1188" width="3" height="15" fill="rgb(234,198,25)"/><text x="66.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1204" width="3" height="15" fill="rgb(219,89,39)"/><text x="66.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="63" y="1220" width="3" height="15" fill="rgb(251,39,53)"/><text x="66.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="63" y="1236" width="3" height="15" fill="rgb(240,172,50)"/><text x="66.00" y="1246.50"></text></g><g><title>&lt;module&gt; (pandas/core/window.py) (1 samples, 0.26%)</title><rect x="63" y="1252" width="3" height="15" fill="rgb(247,111,5)"/><text x="66.00" y="1262.50"></text></g><g><title>Rolling (pandas/core/window.py) (1 samples, 0.26%)</title><rect x="63" y="1268" width="3" height="15" fill="rgb(220,55,29)"/><text x="66.00" y="1278.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.26%)</title><rect x="63" y="1284" width="3" height="15" fill="rgb(236,38,29)"/><text x="66.00" y="1294.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.26%)</title><rect x="63" y="1300" width="3" height="15" fill="rgb(249,31,10)"/><text x="66.00" y="1310.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="63" y="1316" width="3" height="15" fill="rgb(237,118,14)"/><text x="66.00" y="1326.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.26%)</title><rect x="63" y="1332" width="3" height="15" fill="rgb(241,213,15)"/><text x="66.00" y="1342.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.26%)</title><rect x="63" y="1348" width="3" height="15" fill="rgb(235,67,19)"/><text x="66.00" y="1358.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 2.65%)</title><rect x="38" y="340" width="31" height="15" fill="rgb(222,223,49)"/><text x="41.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.65%)</title><rect x="38" y="356" width="31" height="15" fill="rgb(217,74,42)"/><text x="41.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.65%)</title><rect x="38" y="372" width="31" height="15" fill="rgb(227,204,49)"/><text x="41.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.65%)</title><rect x="38" y="388" width="31" height="15" fill="rgb(212,184,33)"/><text x="41.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 2.65%)</title><rect x="38" y="404" width="31" height="15" fill="rgb(244,74,39)"/><text x="41.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 2.65%)</title><rect x="38" y="420" width="31" height="15" fill="rgb(214,51,20)"/><text x="41.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (sklearn/datasets/__init__.py) (1 samples, 0.26%)</title><rect x="66" y="436" width="3" height="15" fill="rgb(223,189,12)"/><text x="69.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="452" width="3" height="15" fill="rgb(234,143,28)"/><text x="69.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="468" width="3" height="15" fill="rgb(205,135,31)"/><text x="69.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="484" width="3" height="15" fill="rgb(238,49,42)"/><text x="69.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="66" y="500" width="3" height="15" fill="rgb(217,81,12)"/><text x="69.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="516" width="3" height="15" fill="rgb(233,95,28)"/><text x="69.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/datasets/_base.py) (1 samples, 0.26%)</title><rect x="66" y="532" width="3" height="15" fill="rgb(251,0,37)"/><text x="69.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="548" width="3" height="15" fill="rgb(213,158,18)"/><text x="69.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="564" width="3" height="15" fill="rgb(243,89,26)"/><text x="69.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="580" width="3" height="15" fill="rgb(244,165,27)"/><text x="69.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="66" y="596" width="3" height="15" fill="rgb(221,8,25)"/><text x="69.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="612" width="3" height="15" fill="rgb(227,42,8)"/><text x="69.00" y="622.50"></text></g><g><title>&lt;module&gt; (urllib/request.py) (1 samples, 0.26%)</title><rect x="66" y="628" width="3" height="15" fill="rgb(206,64,25)"/><text x="69.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="644" width="3" height="15" fill="rgb(253,191,30)"/><text x="69.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="660" width="3" height="15" fill="rgb(247,66,22)"/><text x="69.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="676" width="3" height="15" fill="rgb(251,209,44)"/><text x="69.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="66" y="692" width="3" height="15" fill="rgb(209,132,1)"/><text x="69.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="708" width="3" height="15" fill="rgb(245,161,46)"/><text x="69.00" y="718.50"></text></g><g><title>&lt;module&gt; (http/client.py) (1 samples, 0.26%)</title><rect x="66" y="724" width="3" height="15" fill="rgb(214,96,49)"/><text x="69.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="740" width="3" height="15" fill="rgb(235,35,16)"/><text x="69.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="756" width="3" height="15" fill="rgb(243,167,5)"/><text x="69.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="772" width="3" height="15" fill="rgb(239,124,43)"/><text x="69.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="66" y="788" width="3" height="15" fill="rgb(218,209,19)"/><text x="69.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="804" width="3" height="15" fill="rgb(222,53,12)"/><text x="69.00" y="814.50"></text></g><g><title>&lt;module&gt; (ssl.py) (1 samples, 0.26%)</title><rect x="66" y="820" width="3" height="15" fill="rgb(235,137,18)"/><text x="69.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="836" width="3" height="15" fill="rgb(248,71,49)"/><text x="69.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="852" width="3" height="15" fill="rgb(227,155,22)"/><text x="69.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="868" width="3" height="15" fill="rgb(210,193,13)"/><text x="69.00" y="878.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="884" width="3" height="15" fill="rgb(246,124,40)"/><text x="69.00" y="894.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="66" y="900" width="3" height="15" fill="rgb(233,8,0)"/><text x="69.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="66" y="916" width="3" height="15" fill="rgb(236,115,49)"/><text x="69.00" y="926.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="932" width="3" height="15" fill="rgb(221,146,15)"/><text x="69.00" y="942.50"></text></g><g><title>0x7f2af1f80995 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="948" width="3" height="15" fill="rgb(230,198,18)"/><text x="69.00" y="958.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="964" width="3" height="15" fill="rgb(220,105,39)"/><text x="69.00" y="974.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="980" width="3" height="15" fill="rgb(223,195,42)"/><text x="69.00" y="990.50"></text></g><g><title>0x7f2af1f80258 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="996" width="3" height="15" fill="rgb(214,40,5)"/><text x="69.00" y="1006.50"></text></g><g><title>0x7f2af1fcdd7a (ld-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="1012" width="3" height="15" fill="rgb(250,201,14)"/><text x="69.00" y="1022.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="1028" width="3" height="15" fill="rgb(244,143,16)"/><text x="69.00" y="1038.50"></text></g><g><title>0x7f2af1fce345 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="1044" width="3" height="15" fill="rgb(227,70,48)"/><text x="69.00" y="1054.50"></text></g><g><title>0x7f2af1fc6fec (ld-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="1060" width="3" height="15" fill="rgb(238,91,15)"/><text x="69.00" y="1070.50"></text></g><g><title>0x7f2af1fc556b (ld-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="1076" width="3" height="15" fill="rgb(226,202,11)"/><text x="69.00" y="1086.50"></text></g><g><title>0x7f2af1fc491c (ld-2.29.so) (1 samples, 0.26%)</title><rect x="66" y="1092" width="3" height="15" fill="rgb(254,143,44)"/><text x="69.00" y="1102.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 2.91%)</title><rect x="38" y="244" width="34" height="15" fill="rgb(244,150,21)"/><text x="41.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.91%)</title><rect x="38" y="260" width="34" height="15" fill="rgb(247,228,26)"/><text x="41.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.91%)</title><rect x="38" y="276" width="34" height="15" fill="rgb(231,5,33)"/><text x="41.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.91%)</title><rect x="38" y="292" width="34" height="15" fill="rgb(216,172,8)"/><text x="41.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 2.91%)</title><rect x="38" y="308" width="34" height="15" fill="rgb(247,89,53)"/><text x="41.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 2.91%)</title><rect x="38" y="324" width="34" height="15" fill="rgb(215,28,7)"/><text x="41.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.26%)</title><rect x="69" y="340" width="3" height="15" fill="rgb(218,194,29)"/><text x="72.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="356" width="3" height="15" fill="rgb(225,16,14)"/><text x="72.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="372" width="3" height="15" fill="rgb(227,62,50)"/><text x="72.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="388" width="3" height="15" fill="rgb(226,42,25)"/><text x="72.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="404" width="3" height="15" fill="rgb(246,117,39)"/><text x="72.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="420" width="3" height="15" fill="rgb(243,85,12)"/><text x="72.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="436" width="3" height="15" fill="rgb(246,144,53)"/><text x="72.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="452" width="3" height="15" fill="rgb(213,66,45)"/><text x="72.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="468" width="3" height="15" fill="rgb(248,118,4)"/><text x="72.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.26%)</title><rect x="69" y="484" width="3" height="15" fill="rgb(241,68,51)"/><text x="72.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="500" width="3" height="15" fill="rgb(216,207,45)"/><text x="72.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="516" width="3" height="15" fill="rgb(217,133,14)"/><text x="72.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="532" width="3" height="15" fill="rgb(231,0,8)"/><text x="72.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="548" width="3" height="15" fill="rgb(214,88,24)"/><text x="72.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="564" width="3" height="15" fill="rgb(248,123,33)"/><text x="72.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.26%)</title><rect x="69" y="580" width="3" height="15" fill="rgb(217,108,8)"/><text x="72.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="596" width="3" height="15" fill="rgb(254,158,26)"/><text x="72.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="612" width="3" height="15" fill="rgb(217,81,53)"/><text x="72.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="628" width="3" height="15" fill="rgb(209,155,45)"/><text x="72.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="644" width="3" height="15" fill="rgb(227,111,30)"/><text x="72.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="660" width="3" height="15" fill="rgb(214,50,3)"/><text x="72.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="676" width="3" height="15" fill="rgb(238,218,21)"/><text x="72.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="692" width="3" height="15" fill="rgb(253,74,41)"/><text x="72.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="708" width="3" height="15" fill="rgb(217,21,27)"/><text x="72.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.26%)</title><rect x="69" y="724" width="3" height="15" fill="rgb(228,110,48)"/><text x="72.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="740" width="3" height="15" fill="rgb(251,202,22)"/><text x="72.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="756" width="3" height="15" fill="rgb(216,33,4)"/><text x="72.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="772" width="3" height="15" fill="rgb(240,207,36)"/><text x="72.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="788" width="3" height="15" fill="rgb(222,144,42)"/><text x="72.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="804" width="3" height="15" fill="rgb(237,84,27)"/><text x="72.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.26%)</title><rect x="69" y="820" width="3" height="15" fill="rgb(252,200,2)"/><text x="72.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="836" width="3" height="15" fill="rgb(239,207,32)"/><text x="72.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="852" width="3" height="15" fill="rgb(248,212,44)"/><text x="72.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="868" width="3" height="15" fill="rgb(214,134,49)"/><text x="72.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="884" width="3" height="15" fill="rgb(216,48,12)"/><text x="72.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="900" width="3" height="15" fill="rgb(236,85,20)"/><text x="72.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.26%)</title><rect x="69" y="916" width="3" height="15" fill="rgb(250,138,42)"/><text x="72.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="932" width="3" height="15" fill="rgb(250,156,12)"/><text x="72.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="948" width="3" height="15" fill="rgb(217,43,7)"/><text x="72.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="964" width="3" height="15" fill="rgb(249,180,17)"/><text x="72.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="980" width="3" height="15" fill="rgb(248,202,30)"/><text x="72.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="996" width="3" height="15" fill="rgb(222,35,26)"/><text x="72.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="1012" width="3" height="15" fill="rgb(250,51,23)"/><text x="72.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="1028" width="3" height="15" fill="rgb(241,138,10)"/><text x="72.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="1044" width="3" height="15" fill="rgb(206,171,23)"/><text x="72.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.26%)</title><rect x="69" y="1060" width="3" height="15" fill="rgb(232,76,39)"/><text x="72.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="1076" width="3" height="15" fill="rgb(221,56,7)"/><text x="72.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="1092" width="3" height="15" fill="rgb(251,144,15)"/><text x="72.00" y="1102.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="69" y="1108" width="3" height="15" fill="rgb(214,32,28)"/><text x="72.00" y="1118.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="1124" width="3" height="15" fill="rgb(228,45,54)"/><text x="72.00" y="1134.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="1140" width="3" height="15" fill="rgb(249,18,38)"/><text x="72.00" y="1150.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="69" y="1156" width="3" height="15" fill="rgb(249,104,37)"/><text x="72.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="452" width="3" height="15" fill="rgb(227,28,9)"/><text x="75.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/npyio.py) (1 samples, 0.26%)</title><rect x="72" y="468" width="3" height="15" fill="rgb(250,182,14)"/><text x="75.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="484" width="3" height="15" fill="rgb(205,61,17)"/><text x="75.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="500" width="3" height="15" fill="rgb(228,44,39)"/><text x="75.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="516" width="3" height="15" fill="rgb(240,28,18)"/><text x="75.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="72" y="532" width="3" height="15" fill="rgb(212,142,28)"/><text x="75.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="548" width="3" height="15" fill="rgb(215,97,31)"/><text x="75.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/_datasource.py) (1 samples, 0.26%)</title><rect x="72" y="564" width="3" height="15" fill="rgb(235,224,36)"/><text x="75.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="580" width="3" height="15" fill="rgb(211,70,13)"/><text x="75.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="596" width="3" height="15" fill="rgb(211,0,4)"/><text x="75.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="612" width="3" height="15" fill="rgb(223,62,25)"/><text x="75.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="72" y="628" width="3" height="15" fill="rgb(253,221,3)"/><text x="75.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="644" width="3" height="15" fill="rgb(241,73,21)"/><text x="75.00" y="654.50"></text></g><g><title>&lt;module&gt; (shutil.py) (1 samples, 0.26%)</title><rect x="72" y="660" width="3" height="15" fill="rgb(251,114,36)"/><text x="75.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="676" width="3" height="15" fill="rgb(245,115,34)"/><text x="75.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="692" width="3" height="15" fill="rgb(206,142,24)"/><text x="75.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="708" width="3" height="15" fill="rgb(251,20,30)"/><text x="75.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="72" y="724" width="3" height="15" fill="rgb(235,11,1)"/><text x="75.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="740" width="3" height="15" fill="rgb(216,97,4)"/><text x="75.00" y="750.50"></text></g><g><title>&lt;module&gt; (bz2.py) (1 samples, 0.26%)</title><rect x="72" y="756" width="3" height="15" fill="rgb(224,7,13)"/><text x="75.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="772" width="3" height="15" fill="rgb(218,6,38)"/><text x="75.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="788" width="3" height="15" fill="rgb(228,95,3)"/><text x="75.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="804" width="3" height="15" fill="rgb(224,87,35)"/><text x="75.00" y="814.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="820" width="3" height="15" fill="rgb(210,89,41)"/><text x="75.00" y="830.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="72" y="836" width="3" height="15" fill="rgb(251,179,16)"/><text x="75.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="72" y="852" width="3" height="15" fill="rgb(229,33,15)"/><text x="75.00" y="862.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="868" width="3" height="15" fill="rgb(248,135,24)"/><text x="75.00" y="878.50"></text></g><g><title>0x7f2af1f80995 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="884" width="3" height="15" fill="rgb(214,142,12)"/><text x="75.00" y="894.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="900" width="3" height="15" fill="rgb(210,124,34)"/><text x="75.00" y="910.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="916" width="3" height="15" fill="rgb(237,213,50)"/><text x="75.00" y="926.50"></text></g><g><title>0x7f2af1f80258 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="932" width="3" height="15" fill="rgb(243,174,3)"/><text x="75.00" y="942.50"></text></g><g><title>0x7f2af1fcdd7a (ld-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="948" width="3" height="15" fill="rgb(239,108,19)"/><text x="75.00" y="958.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="964" width="3" height="15" fill="rgb(237,53,54)"/><text x="75.00" y="974.50"></text></g><g><title>0x7f2af1fce345 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="980" width="3" height="15" fill="rgb(249,39,24)"/><text x="75.00" y="990.50"></text></g><g><title>0x7f2af1fc6f28 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="72" y="996" width="3" height="15" fill="rgb(215,156,25)"/><text x="75.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 5.56%)</title><rect x="13" y="68" width="65" height="15" fill="rgb(249,180,14)"/><text x="16.00" y="78.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 5.56%)</title><rect x="13" y="84" width="65" height="15" fill="rgb(226,13,11)"/><text x="16.00" y="94.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 5.56%)</title><rect x="13" y="100" width="65" height="15" fill="rgb(215,82,5)"/><text x="16.00" y="110.50">_load_u..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 5.56%)</title><rect x="13" y="116" width="65" height="15" fill="rgb(205,192,19)"/><text x="16.00" y="126.50">exec_mo..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 5.56%)</title><rect x="13" y="132" width="65" height="15" fill="rgb(246,180,46)"/><text x="16.00" y="142.50">_call_w..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (21 samples, 5.56%)</title><rect x="13" y="148" width="65" height="15" fill="rgb(216,223,24)"/><text x="16.00" y="158.50">&lt;module..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 5.56%)</title><rect x="13" y="164" width="65" height="15" fill="rgb(210,216,11)"/><text x="16.00" y="174.50">_find_a..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 5.56%)</title><rect x="13" y="180" width="65" height="15" fill="rgb(210,7,31)"/><text x="16.00" y="190.50">_find_a..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.44%)</title><rect x="38" y="196" width="40" height="15" fill="rgb(220,150,29)"/><text x="41.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.44%)</title><rect x="38" y="212" width="40" height="15" fill="rgb(253,153,12)"/><text x="41.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.44%)</title><rect x="38" y="228" width="40" height="15" fill="rgb(232,57,41)"/><text x="41.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (2 samples, 0.53%)</title><rect x="72" y="244" width="6" height="15" fill="rgb(220,121,19)"/><text x="75.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="260" width="6" height="15" fill="rgb(249,213,15)"/><text x="75.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="276" width="6" height="15" fill="rgb(233,4,43)"/><text x="75.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="292" width="6" height="15" fill="rgb(237,30,2)"/><text x="75.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="308" width="6" height="15" fill="rgb(253,50,5)"/><text x="75.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="324" width="6" height="15" fill="rgb(211,159,31)"/><text x="75.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="72" y="340" width="6" height="15" fill="rgb(248,127,24)"/><text x="75.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="356" width="6" height="15" fill="rgb(212,104,27)"/><text x="75.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py) (2 samples, 0.53%)</title><rect x="72" y="372" width="6" height="15" fill="rgb(210,108,48)"/><text x="75.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="388" width="6" height="15" fill="rgb(235,112,9)"/><text x="75.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="404" width="6" height="15" fill="rgb(239,160,3)"/><text x="75.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="72" y="420" width="6" height="15" fill="rgb(221,110,44)"/><text x="75.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="72" y="436" width="6" height="15" fill="rgb(251,83,13)"/><text x="75.00" y="446.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="75" y="452" width="3" height="15" fill="rgb(244,134,5)"/><text x="78.00" y="462.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="75" y="468" width="3" height="15" fill="rgb(217,140,40)"/><text x="78.00" y="478.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="75" y="484" width="3" height="15" fill="rgb(217,34,8)"/><text x="78.00" y="494.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.26%)</title><rect x="78" y="196" width="3" height="15" fill="rgb(239,121,37)"/><text x="81.00" y="206.50"></text></g><g><title>delayed (joblib/parallel.py) (1 samples, 0.26%)</title><rect x="78" y="212" width="3" height="15" fill="rgb(206,229,24)"/><text x="81.00" y="222.50"></text></g><g><title>update_wrapper (functools.py) (1 samples, 0.26%)</title><rect x="78" y="228" width="3" height="15" fill="rgb(209,135,11)"/><text x="81.00" y="238.50"></text></g><g><title>0x7f2acb74b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="88" y="340" width="3" height="15" fill="rgb(207,78,8)"/><text x="91.00" y="350.50"></text></g><g><title>0x7f2acb74a698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="88" y="356" width="3" height="15" fill="rgb(234,17,2)"/><text x="91.00" y="366.50"></text></g><g><title>0x7f2acb73bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="88" y="324" width="6" height="15" fill="rgb(245,62,35)"/><text x="91.00" y="334.50"></text></g><g><title>0x7f2acb74b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="91" y="340" width="3" height="15" fill="rgb(205,60,46)"/><text x="94.00" y="350.50"></text></g><g><title>0x7f2acb7202f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="91" y="356" width="3" height="15" fill="rgb(244,8,41)"/><text x="94.00" y="366.50"></text></g><g><title>0x7f2acb71f530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="91" y="372" width="3" height="15" fill="rgb(222,157,12)"/><text x="94.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.26%)</title><rect x="91" y="388" width="3" height="15" fill="rgb(227,166,53)"/><text x="94.00" y="398.50"></text></g><g><title>0x7f2acb73cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.79%)</title><rect x="88" y="308" width="9" height="15" fill="rgb(243,125,2)"/><text x="91.00" y="318.50"></text></g><g><title>0x7f2acb73c163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="94" y="324" width="3" height="15" fill="rgb(250,210,24)"/><text x="97.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (6 samples, 1.59%)</title><rect x="88" y="292" width="18" height="15" fill="rgb(226,92,26)"/><text x="91.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (3 samples, 0.79%)</title><rect x="97" y="308" width="9" height="15" fill="rgb(236,41,29)"/><text x="100.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="103" y="324" width="3" height="15" fill="rgb(248,145,27)"/><text x="106.00" y="334.50"></text></g><g><title>_dispatch (joblib/parallel.py) (9 samples, 2.38%)</title><rect x="81" y="196" width="28" height="15" fill="rgb(251,165,35)"/><text x="84.00" y="206.50">_..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (9 samples, 2.38%)</title><rect x="81" y="212" width="28" height="15" fill="rgb(244,101,29)"/><text x="84.00" y="222.50">a..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (8 samples, 2.12%)</title><rect x="84" y="228" width="25" height="15" fill="rgb(234,52,25)"/><text x="87.00" y="238.50">_..</text></g><g><title>__call__ (joblib/parallel.py) (8 samples, 2.12%)</title><rect x="84" y="244" width="25" height="15" fill="rgb(221,15,28)"/><text x="87.00" y="254.50">_..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (8 samples, 2.12%)</title><rect x="84" y="260" width="25" height="15" fill="rgb(240,136,15)"/><text x="87.00" y="270.50">&lt;..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (8 samples, 2.12%)</title><rect x="84" y="276" width="25" height="15" fill="rgb(236,130,35)"/><text x="87.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.26%)</title><rect x="106" y="292" width="3" height="15" fill="rgb(252,203,36)"/><text x="109.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.26%)</title><rect x="106" y="308" width="3" height="15" fill="rgb(226,30,10)"/><text x="109.00" y="318.50"></text></g><g><title>get (queue.py) (1 samples, 0.26%)</title><rect x="109" y="196" width="4" height="15" fill="rgb(251,122,36)"/><text x="112.00" y="206.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (12 samples, 3.17%)</title><rect x="78" y="68" width="38" height="15" fill="rgb(245,170,46)"/><text x="81.00" y="78.50">pro..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (12 samples, 3.17%)</title><rect x="78" y="84" width="38" height="15" fill="rgb(218,21,27)"/><text x="81.00" y="94.50">set..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (12 samples, 3.17%)</title><rect x="78" y="100" width="38" height="15" fill="rgb(247,58,11)"/><text x="81.00" y="110.50">pro..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 3.17%)</title><rect x="78" y="116" width="38" height="15" fill="rgb(213,130,52)"/><text x="81.00" y="126.50">tim..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 3.17%)</title><rect x="78" y="132" width="38" height="15" fill="rgb(213,98,32)"/><text x="81.00" y="142.50">&lt;la..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (12 samples, 3.17%)</title><rect x="78" y="148" width="38" height="15" fill="rgb(250,225,17)"/><text x="81.00" y="158.50">pre..</text></g><g><title>__call__ (joblib/parallel.py) (12 samples, 3.17%)</title><rect x="78" y="164" width="38" height="15" fill="rgb(238,103,17)"/><text x="81.00" y="174.50">__c..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (12 samples, 3.17%)</title><rect x="78" y="180" width="38" height="15" fill="rgb(245,191,46)"/><text x="81.00" y="190.50">dis..</text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.26%)</title><rect x="113" y="196" width="3" height="15" fill="rgb(250,43,28)"/><text x="116.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="113" y="212" width="3" height="15" fill="rgb(253,182,44)"/><text x="116.00" y="222.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="116" y="180" width="3" height="15" fill="rgb(250,62,24)"/><text x="119.00" y="190.50"></text></g><g><title>0x7f2af1cf8bd8 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="125" y="356" width="3" height="15" fill="rgb(228,92,4)"/><text x="128.00" y="366.50"></text></g><g><title>0x7f2ae17c4d50 (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="518" y="436" width="3" height="15" fill="rgb(248,200,18)"/><text x="521.00" y="446.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.79%)</title><rect x="515" y="404" width="10" height="15" fill="rgb(236,134,22)"/><text x="518.00" y="414.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.53%)</title><rect x="518" y="420" width="7" height="15" fill="rgb(216,9,42)"/><text x="521.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="521" y="436" width="4" height="15" fill="rgb(230,210,3)"/><text x="524.00" y="446.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (132 samples, 34.92%)</title><rect x="116" y="100" width="412" height="15" fill="rgb(237,79,3)"/><text x="119.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 34.92%)</title><rect x="116" y="116" width="412" height="15" fill="rgb(236,39,35)"/><text x="119.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 34.92%)</title><rect x="116" y="132" width="412" height="15" fill="rgb(230,129,19)"/><text x="119.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (132 samples, 34.92%)</title><rect x="116" y="148" width="412" height="15" fill="rgb(235,157,27)"/><text x="119.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (132 samples, 34.92%)</title><rect x="116" y="164" width="412" height="15" fill="rgb(240,52,42)"/><text x="119.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (131 samples, 34.66%)</title><rect x="119" y="180" width="409" height="15" fill="rgb(217,131,3)"/><text x="122.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (131 samples, 34.66%)</title><rect x="119" y="196" width="409" height="15" fill="rgb(221,215,30)"/><text x="122.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="212" width="409" height="15" fill="rgb(210,35,23)"/><text x="122.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/capi/on..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="228" width="409" height="15" fill="rgb(242,208,19)"/><text x="122.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime::py..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="244" width="409" height="15" fill="rgb(232,81,33)"/><text x="122.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::module&amp;..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="260" width="409" height="15" fill="rgb(240,181,45)"/><text x="122.00" y="270.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="276" width="409" height="15" fill="rgb(216,26,1)"/><text x="122.00" y="286.50">onnxruntime::InferenceSession::Run (onnxruntime/capi/on..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="292" width="409" height="15" fill="rgb(232,150,29)"/><text x="122.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="308" width="409" height="15" fill="rgb(249,27,28)"/><text x="122.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="324" width="409" height="15" fill="rgb(211,118,22)"/><text x="122.00" y="334.50">onnxruntime::SequentialExecutor::Execute (onnxruntime/c..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (131 samples, 34.66%)</title><rect x="119" y="340" width="409" height="15" fill="rgb(253,80,2)"/><text x="122.00" y="350.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute ..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (128 samples, 33.86%)</title><rect x="128" y="356" width="400" height="15" fill="rgb(205,22,30)"/><text x="131.00" y="366.50">onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Process..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;long, std::tuple&lt;float, float, float&gt; &gt;&amp;&gt; [clone .isra.301] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.32%)</title><rect x="512" y="372" width="16" height="15" fill="rgb(209,55,1)"/><text x="515.00" y="382.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt;, std::allocator&lt;std::pair&lt;long const, std::tuple&lt;float, float, float&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.32%)</title><rect x="512" y="388" width="16" height="15" fill="rgb(235,227,29)"/><text x="515.00" y="398.50"></text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.26%)</title><rect x="525" y="404" width="3" height="15" fill="rgb(221,82,10)"/><text x="528.00" y="414.50"></text></g><g><title>0x7f2ab1d3eaf0 (?) (1 samples, 0.26%)</title><rect x="528" y="564" width="3" height="15" fill="rgb(250,54,1)"/><text x="531.00" y="574.50"></text></g><g><title>0x7f2ab1d511d2 (?) (1 samples, 0.26%)</title><rect x="528" y="580" width="3" height="15" fill="rgb(217,207,0)"/><text x="531.00" y="590.50"></text></g><g><title>0x7f2ab1d507b8 (?) (1 samples, 0.26%)</title><rect x="528" y="596" width="3" height="15" fill="rgb(232,46,6)"/><text x="531.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="528" y="612" width="3" height="15" fill="rgb(240,179,48)"/><text x="531.00" y="622.50"></text></g><g><title>0x7f2ab1d4e6f8 (?) (1 samples, 0.26%)</title><rect x="528" y="628" width="3" height="15" fill="rgb(253,10,13)"/><text x="531.00" y="638.50"></text></g><g><title>0x7f2ab21d84b0 (?) (1 samples, 0.26%)</title><rect x="528" y="644" width="3" height="15" fill="rgb(233,2,41)"/><text x="531.00" y="654.50"></text></g><g><title>0x7f2ab22f64dc (?) (1 samples, 0.26%)</title><rect x="528" y="660" width="3" height="15" fill="rgb(207,182,16)"/><text x="531.00" y="670.50"></text></g><g><title>0x7f2ab22f6305 (?) (1 samples, 0.26%)</title><rect x="528" y="676" width="3" height="15" fill="rgb(208,178,12)"/><text x="531.00" y="686.50"></text></g><g><title>0x7f2ab22f5681 (?) (1 samples, 0.26%)</title><rect x="528" y="692" width="3" height="15" fill="rgb(247,224,51)"/><text x="531.00" y="702.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.53%)</title><rect x="528" y="132" width="6" height="15" fill="rgb(227,76,39)"/><text x="531.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.53%)</title><rect x="528" y="148" width="6" height="15" fill="rgb(232,79,12)"/><text x="531.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.53%)</title><rect x="528" y="164" width="6" height="15" fill="rgb(226,33,16)"/><text x="531.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="180" width="6" height="15" fill="rgb(213,205,22)"/><text x="531.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="196" width="6" height="15" fill="rgb(252,28,10)"/><text x="531.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="212" width="6" height="15" fill="rgb(209,207,34)"/><text x="531.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="528" y="228" width="6" height="15" fill="rgb(232,83,29)"/><text x="531.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="244" width="6" height="15" fill="rgb(220,185,51)"/><text x="531.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.53%)</title><rect x="528" y="260" width="6" height="15" fill="rgb(220,30,53)"/><text x="531.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="276" width="6" height="15" fill="rgb(238,118,24)"/><text x="531.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="292" width="6" height="15" fill="rgb(205,183,32)"/><text x="531.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="308" width="6" height="15" fill="rgb(249,167,52)"/><text x="531.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="528" y="324" width="6" height="15" fill="rgb(231,76,49)"/><text x="531.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="340" width="6" height="15" fill="rgb(205,83,26)"/><text x="531.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (2 samples, 0.53%)</title><rect x="528" y="356" width="6" height="15" fill="rgb(236,191,12)"/><text x="531.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="372" width="6" height="15" fill="rgb(246,206,13)"/><text x="531.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="388" width="6" height="15" fill="rgb(235,183,7)"/><text x="531.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="404" width="6" height="15" fill="rgb(242,68,39)"/><text x="531.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="528" y="420" width="6" height="15" fill="rgb(248,45,23)"/><text x="531.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="436" width="6" height="15" fill="rgb(237,97,45)"/><text x="531.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py) (2 samples, 0.53%)</title><rect x="528" y="452" width="6" height="15" fill="rgb(223,148,49)"/><text x="531.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="468" width="6" height="15" fill="rgb(206,157,21)"/><text x="531.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="484" width="6" height="15" fill="rgb(205,229,31)"/><text x="531.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="500" width="6" height="15" fill="rgb(211,134,20)"/><text x="531.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="516" width="6" height="15" fill="rgb(224,88,23)"/><text x="531.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.53%)</title><rect x="528" y="532" width="6" height="15" fill="rgb(233,54,54)"/><text x="531.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.53%)</title><rect x="528" y="548" width="6" height="15" fill="rgb(239,124,27)"/><text x="531.00" y="558.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="564" width="3" height="15" fill="rgb(232,62,14)"/><text x="534.00" y="574.50"></text></g><g><title>0x7f2af1f80995 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="580" width="3" height="15" fill="rgb(225,219,38)"/><text x="534.00" y="590.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="596" width="3" height="15" fill="rgb(232,121,52)"/><text x="534.00" y="606.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="612" width="3" height="15" fill="rgb(238,117,27)"/><text x="534.00" y="622.50"></text></g><g><title>0x7f2af1f80258 (libdl-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="628" width="3" height="15" fill="rgb(213,16,49)"/><text x="534.00" y="638.50"></text></g><g><title>0x7f2af1fcdd7a (ld-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="644" width="3" height="15" fill="rgb(220,21,21)"/><text x="534.00" y="654.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="660" width="3" height="15" fill="rgb(235,82,39)"/><text x="534.00" y="670.50"></text></g><g><title>0x7f2af1fce345 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="676" width="3" height="15" fill="rgb(206,188,33)"/><text x="534.00" y="686.50"></text></g><g><title>0x7f2af1fc6fec (ld-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="692" width="3" height="15" fill="rgb(235,144,32)"/><text x="534.00" y="702.50"></text></g><g><title>0x7f2af1fc556b (ld-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="708" width="3" height="15" fill="rgb(230,149,43)"/><text x="534.00" y="718.50"></text></g><g><title>0x7f2af1fc4b27 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="724" width="3" height="15" fill="rgb(247,154,12)"/><text x="534.00" y="734.50"></text></g><g><title>0x7f2af1fc4751 (ld-2.29.so) (1 samples, 0.26%)</title><rect x="531" y="740" width="3" height="15" fill="rgb(246,64,35)"/><text x="534.00" y="750.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (135 samples, 35.71%)</title><rect x="116" y="68" width="421" height="15" fill="rgb(210,15,26)"/><text x="119.00" y="78.50">profile_ort (bench_RandomForestRegressor_default_b_reg_10..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (135 samples, 35.71%)</title><rect x="116" y="84" width="421" height="15" fill="rgb(232,94,3)"/><text x="119.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.79%)</title><rect x="528" y="100" width="9" height="15" fill="rgb(230,159,40)"/><text x="531.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 0.79%)</title><rect x="528" y="116" width="9" height="15" fill="rgb(243,129,38)"/><text x="531.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="534" y="132" width="3" height="15" fill="rgb(249,105,31)"/><text x="537.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.26%)</title><rect x="534" y="148" width="3" height="15" fill="rgb(212,98,23)"/><text x="537.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.26%)</title><rect x="534" y="164" width="3" height="15" fill="rgb(212,137,51)"/><text x="537.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.26%)</title><rect x="534" y="180" width="3" height="15" fill="rgb(231,39,8)"/><text x="537.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.26%)</title><rect x="534" y="196" width="3" height="15" fill="rgb(212,7,40)"/><text x="537.00" y="206.50"></text></g><g><title>add_tree_to_attribute_pairs (skl2onnx/common/tree_ensemble.py) (1 samples, 0.26%)</title><rect x="534" y="212" width="3" height="15" fill="rgb(226,173,5)"/><text x="537.00" y="222.50"></text></g><g><title>add_node (skl2onnx/common/tree_ensemble.py) (1 samples, 0.26%)</title><rect x="534" y="228" width="3" height="15" fill="rgb(209,113,13)"/><text x="537.00" y="238.50"></text></g><g><title>0x7f2ab27d154f (?) (1 samples, 0.26%)</title><rect x="537" y="244" width="3" height="15" fill="rgb(235,152,30)"/><text x="540.00" y="254.50"></text></g><g><title>0x7f2ab27d765e (?) (1 samples, 0.26%)</title><rect x="537" y="260" width="3" height="15" fill="rgb(207,123,21)"/><text x="540.00" y="270.50"></text></g><g><title>0x7f2ab27d750f (?) (1 samples, 0.26%)</title><rect x="537" y="276" width="3" height="15" fill="rgb(243,93,43)"/><text x="540.00" y="286.50"></text></g><g><title>0x7f2ab27ddd6c (?) (1 samples, 0.26%)</title><rect x="537" y="292" width="3" height="15" fill="rgb(210,98,45)"/><text x="540.00" y="302.50"></text></g><g><title>0x7f2abbcb4cff (?) (1 samples, 0.26%)</title><rect x="537" y="308" width="3" height="15" fill="rgb(237,164,7)"/><text x="540.00" y="318.50"></text></g><g><title>0x7f2ab27c227c (?) (1 samples, 0.26%)</title><rect x="537" y="324" width="3" height="15" fill="rgb(222,31,30)"/><text x="540.00" y="334.50"></text></g><g><title>0x7f2ab27c20b3 (?) (1 samples, 0.26%)</title><rect x="537" y="340" width="3" height="15" fill="rgb(234,24,7)"/><text x="540.00" y="350.50"></text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.26%)</title><rect x="578" y="564" width="3" height="15" fill="rgb(229,6,41)"/><text x="581.00" y="574.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.26%)</title><rect x="578" y="580" width="3" height="15" fill="rgb(230,214,32)"/><text x="581.00" y="590.50"></text></g><g><title>std::__detail::_Mod_range_hashing::operator() (hashtable_policy.h) (1 samples, 0.26%)</title><rect x="578" y="596" width="3" height="15" fill="rgb(209,25,0)"/><text x="581.00" y="606.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (30 samples, 7.94%)</title><rect x="537" y="100" width="94" height="15" fill="rgb(221,37,50)"/><text x="540.00" y="110.50">profile (be..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 7.94%)</title><rect x="537" y="116" width="94" height="15" fill="rgb(251,140,3)"/><text x="540.00" y="126.50">time_predic..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (30 samples, 7.94%)</title><rect x="537" y="132" width="94" height="15" fill="rgb(243,191,19)"/><text x="540.00" y="142.50">&lt;lambda&gt; (m..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (30 samples, 7.94%)</title><rect x="537" y="148" width="94" height="15" fill="rgb(247,118,50)"/><text x="540.00" y="158.50">run (mlprod..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (30 samples, 7.94%)</title><rect x="537" y="164" width="94" height="15" fill="rgb(248,160,43)"/><text x="540.00" y="174.50">_run_sequen..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (30 samples, 7.94%)</title><rect x="537" y="180" width="94" height="15" fill="rgb(239,59,21)"/><text x="540.00" y="190.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 7.94%)</title><rect x="537" y="196" width="94" height="15" fill="rgb(253,204,21)"/><text x="540.00" y="206.50">run (mlprod..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (30 samples, 7.94%)</title><rect x="537" y="212" width="94" height="15" fill="rgb(236,51,26)"/><text x="540.00" y="222.50">run (mlprod..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (30 samples, 7.94%)</title><rect x="537" y="228" width="94" height="15" fill="rgb(228,203,38)"/><text x="540.00" y="238.50">_run (mlpro..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (29 samples, 7.67%)</title><rect x="540" y="244" width="91" height="15" fill="rgb(219,226,23)"/><text x="543.00" y="254.50">pybind11::..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (29 samples, 7.67%)</title><rect x="540" y="260" width="91" height="15" fill="rgb(251,184,50)"/><text x="543.00" y="270.50">void pybin..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (29 samples, 7.67%)</title><rect x="540" y="276" width="91" height="15" fill="rgb(231,11,43)"/><text x="543.00" y="286.50">void pybin..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (29 samples, 7.67%)</title><rect x="540" y="292" width="91" height="15" fill="rgb(217,7,9)"/><text x="543.00" y="302.50">pybind11::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (29 samples, 7.67%)</title><rect x="540" y="308" width="91" height="15" fill="rgb(235,228,36)"/><text x="543.00" y="318.50">pybind11::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (29 samples, 7.67%)</title><rect x="540" y="324" width="91" height="15" fill="rgb(253,208,25)"/><text x="543.00" y="334.50">pybind11::..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (29 samples, 7.67%)</title><rect x="540" y="340" width="91" height="15" fill="rgb(240,160,38)"/><text x="543.00" y="350.50">pybind11::..</text></g><g><title>pybind11::array::~array (numpy.h) (29 samples, 7.67%)</title><rect x="540" y="356" width="91" height="15" fill="rgb(246,106,49)"/><text x="543.00" y="366.50">pybind11::..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (29 samples, 7.67%)</title><rect x="540" y="372" width="91" height="15" fill="rgb(223,134,45)"/><text x="543.00" y="382.50">pybind11::..</text></g><g><title>pybind11::object::~object (pytypes.h) (29 samples, 7.67%)</title><rect x="540" y="388" width="91" height="15" fill="rgb(252,202,26)"/><text x="543.00" y="398.50">pybind11::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (29 samples, 7.67%)</title><rect x="540" y="404" width="91" height="15" fill="rgb(216,37,34)"/><text x="543.00" y="414.50">pybind11::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (29 samples, 7.67%)</title><rect x="540" y="420" width="91" height="15" fill="rgb(246,173,43)"/><text x="543.00" y="430.50">RuntimeTre..</text></g><g><title>pybind11::array::size (numpy.h) (29 samples, 7.67%)</title><rect x="540" y="436" width="91" height="15" fill="rgb(215,164,21)"/><text x="543.00" y="446.50">pybind11::..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h) (29 samples, 7.67%)</title><rect x="540" y="452" width="91" height="15" fill="rgb(253,95,3)"/><text x="543.00" y="462.50">std::accum..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (29 samples, 7.67%)</title><rect x="540" y="468" width="91" height="15" fill="rgb(241,171,53)"/><text x="543.00" y="478.50">GOMP_paral..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute_gil_free [clone ._omp_fn.2] (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (29 samples, 7.67%)</title><rect x="540" y="484" width="91" height="15" fill="rgb(206,138,54)"/><text x="543.00" y="494.50">RuntimeTre..</text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::size (stl_vector.h) (29 samples, 7.67%)</title><rect x="540" y="500" width="91" height="15" fill="rgb(207,72,44)"/><text x="543.00" y="510.50">std::vecto..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp) (28 samples, 7.41%)</title><rect x="543" y="516" width="88" height="15" fill="rgb(234,15,39)"/><text x="546.00" y="526.50">RuntimeTre..</text></g><g><title>std::unordered_map&lt;long, unsigned long, std::hash&lt;long&gt;, std::equal_to&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt; &gt;::find (unordered_map.h) (17 samples, 4.50%)</title><rect x="578" y="532" width="53" height="15" fill="rgb(233,105,21)"/><text x="581.00" y="542.50">std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (hashtable.h) (17 samples, 4.50%)</title><rect x="578" y="548" width="53" height="15" fill="rgb(208,24,47)"/><text x="581.00" y="558.50">std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (hashtable.h) (16 samples, 4.23%)</title><rect x="581" y="564" width="50" height="15" fill="rgb(205,183,51)"/><text x="584.00" y="574.50">std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (hashtable.h) (16 samples, 4.23%)</title><rect x="581" y="580" width="50" height="15" fill="rgb(244,16,5)"/><text x="584.00" y="590.50">std::..</text></g><g><title>std::_Hashtable&lt;long, std::pair&lt;long const, unsigned long&gt;, std::allocator&lt;std::pair&lt;long const, unsigned long&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;long&gt;, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (hashtable.h) (1 samples, 0.26%)</title><rect x="628" y="596" width="3" height="15" fill="rgb(254,100,21)"/><text x="631.00" y="606.50"></text></g><g><title>std::__detail::_Hash_code_base&lt;long, std::pair&lt;long const, unsigned long&gt;, std::__detail::_Select1st, std::hash&lt;long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (hashtable_policy.h) (1 samples, 0.26%)</title><rect x="628" y="612" width="3" height="15" fill="rgb(243,179,22)"/><text x="631.00" y="622.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (31 samples, 8.20%)</title><rect x="537" y="68" width="97" height="15" fill="rgb(235,189,41)"/><text x="540.00" y="78.50">profile_pyr..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (31 samples, 8.20%)</title><rect x="537" y="84" width="97" height="15" fill="rgb(229,113,49)"/><text x="540.00" y="94.50">setup_profi..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="631" y="100" width="3" height="15" fill="rgb(244,226,34)"/><text x="634.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="631" y="116" width="3" height="15" fill="rgb(222,38,0)"/><text x="634.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.26%)</title><rect x="631" y="132" width="3" height="15" fill="rgb(249,207,8)"/><text x="634.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="631" y="148" width="3" height="15" fill="rgb(222,48,6)"/><text x="634.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.26%)</title><rect x="631" y="164" width="3" height="15" fill="rgb(238,63,8)"/><text x="634.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.26%)</title><rect x="631" y="180" width="3" height="15" fill="rgb(229,119,46)"/><text x="634.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (1 samples, 0.26%)</title><rect x="631" y="196" width="3" height="15" fill="rgb(249,200,18)"/><text x="634.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="212" width="3" height="15" fill="rgb(253,67,31)"/><text x="634.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="228" width="3" height="15" fill="rgb(246,71,42)"/><text x="634.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="244" width="3" height="15" fill="rgb(218,199,38)"/><text x="634.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="631" y="260" width="3" height="15" fill="rgb(244,22,22)"/><text x="634.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="276" width="3" height="15" fill="rgb(235,180,16)"/><text x="634.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (1 samples, 0.26%)</title><rect x="631" y="292" width="3" height="15" fill="rgb(222,209,31)"/><text x="634.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="308" width="3" height="15" fill="rgb(212,128,49)"/><text x="634.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="324" width="3" height="15" fill="rgb(227,101,0)"/><text x="634.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="340" width="3" height="15" fill="rgb(214,75,29)"/><text x="634.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.26%)</title><rect x="631" y="356" width="3" height="15" fill="rgb(210,96,31)"/><text x="634.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="631" y="372" width="3" height="15" fill="rgb(230,128,27)"/><text x="634.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (1 samples, 0.26%)</title><rect x="631" y="388" width="3" height="15" fill="rgb(230,178,11)"/><text x="634.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (1 samples, 0.26%)</title><rect x="631" y="404" width="3" height="15" fill="rgb(223,185,54)"/><text x="634.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.26%)</title><rect x="631" y="420" width="3" height="15" fill="rgb(218,176,41)"/><text x="634.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.26%)</title><rect x="631" y="436" width="3" height="15" fill="rgb(238,229,38)"/><text x="634.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.26%)</title><rect x="631" y="452" width="3" height="15" fill="rgb(240,223,39)"/><text x="634.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.26%)</title><rect x="631" y="468" width="3" height="15" fill="rgb(209,187,29)"/><text x="634.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.26%)</title><rect x="631" y="484" width="3" height="15" fill="rgb(237,196,44)"/><text x="634.00" y="494.50"></text></g><g><title>change_style (mlprodict/tools/code_helper.py) (1 samples, 0.26%)</title><rect x="631" y="500" width="3" height="15" fill="rgb(254,112,20)"/><text x="634.00" y="510.50"></text></g><g><title>sub (re.py) (1 samples, 0.26%)</title><rect x="631" y="516" width="3" height="15" fill="rgb(215,80,15)"/><text x="634.00" y="526.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.26%)</title><rect x="631" y="532" width="3" height="15" fill="rgb(249,91,49)"/><text x="634.00" y="542.50"></text></g><g><title>_initialize_backend (joblib/parallel.py) (1 samples, 0.26%)</title><rect x="640" y="180" width="3" height="15" fill="rgb(246,49,12)"/><text x="643.00" y="190.50"></text></g><g><title>_initialize_backend (joblib/parallel.py) (1 samples, 0.26%)</title><rect x="640" y="196" width="3" height="15" fill="rgb(220,190,35)"/><text x="643.00" y="206.50"></text></g><g><title>update_wrapper (functools.py) (4 samples, 1.06%)</title><rect x="706" y="228" width="12" height="15" fill="rgb(208,224,24)"/><text x="709.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (10 samples, 2.65%)</title><rect x="690" y="196" width="31" height="15" fill="rgb(238,6,20)"/><text x="693.00" y="206.50">&lt;g..</text></g><g><title>delayed (joblib/parallel.py) (7 samples, 1.85%)</title><rect x="699" y="212" width="22" height="15" fill="rgb(208,47,13)"/><text x="702.00" y="222.50">d..</text></g><g><title>wraps (functools.py) (1 samples, 0.26%)</title><rect x="718" y="228" width="3" height="15" fill="rgb(223,201,2)"/><text x="721.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.26%)</title><rect x="721" y="196" width="3" height="15" fill="rgb(205,180,51)"/><text x="724.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.53%)</title><rect x="746" y="228" width="6" height="15" fill="rgb(221,52,19)"/><text x="749.00" y="238.50"></text></g><g><title>array_inplace_add (number.c) (1 samples, 0.26%)</title><rect x="796" y="292" width="3" height="15" fill="rgb(244,209,8)"/><text x="799.00" y="302.50"></text></g><g><title>PyArray_GenericInplaceBinaryFunction (number.c) (1 samples, 0.26%)</title><rect x="796" y="308" width="3" height="15" fill="rgb(238,41,18)"/><text x="799.00" y="318.50"></text></g><g><title>0x7f2acb74b272 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="818" y="340" width="3" height="15" fill="rgb(243,79,47)"/><text x="821.00" y="350.50"></text></g><g><title>0x7f2acb72ed04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.79%)</title><rect x="821" y="372" width="10" height="15" fill="rgb(222,5,26)"/><text x="824.00" y="382.50"></text></g><g><title>0x7f2acb72e666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.79%)</title><rect x="821" y="388" width="10" height="15" fill="rgb(213,129,25)"/><text x="824.00" y="398.50"></text></g><g><title>0x7f2acb7242fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.79%)</title><rect x="821" y="404" width="10" height="15" fill="rgb(219,36,39)"/><text x="824.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (3 samples, 0.79%)</title><rect x="821" y="420" width="10" height="15" fill="rgb(206,199,28)"/><text x="824.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (3 samples, 0.79%)</title><rect x="821" y="436" width="10" height="15" fill="rgb(231,113,10)"/><text x="824.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (2 samples, 0.53%)</title><rect x="824" y="452" width="7" height="15" fill="rgb(234,103,45)"/><text x="827.00" y="462.50"></text></g><g><title>_buffer_format_string (buffer.c) (2 samples, 0.53%)</title><rect x="824" y="468" width="7" height="15" fill="rgb(245,100,24)"/><text x="827.00" y="478.50"></text></g><g><title>0x7f2acb721929 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="831" y="404" width="3" height="15" fill="rgb(210,127,0)"/><text x="834.00" y="414.50"></text></g><g><title>0x7f2acb72ee72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="831" y="372" width="6" height="15" fill="rgb(251,145,13)"/><text x="834.00" y="382.50"></text></g><g><title>0x7f2acb7222bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="831" y="388" width="6" height="15" fill="rgb(225,140,29)"/><text x="834.00" y="398.50"></text></g><g><title>0x7f2acb721db9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="834" y="404" width="3" height="15" fill="rgb(243,110,37)"/><text x="837.00" y="414.50"></text></g><g><title>0x7f2acb74a2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 1.59%)</title><rect x="821" y="356" width="19" height="15" fill="rgb(249,91,39)"/><text x="824.00" y="366.50"></text></g><g><title>0x7f2acb72f085 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="837" y="372" width="3" height="15" fill="rgb(249,24,51)"/><text x="840.00" y="382.50"></text></g><g><title>0x7f2acb74a644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="840" y="356" width="3" height="15" fill="rgb(248,117,15)"/><text x="843.00" y="366.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="840" y="372" width="3" height="15" fill="rgb(254,198,10)"/><text x="843.00" y="382.50"></text></g><g><title>0x7f2acb74a687 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="843" y="356" width="3" height="15" fill="rgb(232,25,16)"/><text x="846.00" y="366.50"></text></g><g><title>0x7f2acb74a698 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="846" y="356" width="3" height="15" fill="rgb(241,45,52)"/><text x="849.00" y="366.50"></text></g><g><title>0x7f2acb74a69b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="849" y="356" width="3" height="15" fill="rgb(247,80,32)"/><text x="852.00" y="366.50"></text></g><g><title>0x7f2acb74a6aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.85%)</title><rect x="852" y="356" width="22" height="15" fill="rgb(247,165,10)"/><text x="855.00" y="366.50">0..</text></g><g><title>0x7f2acb74a6b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.85%)</title><rect x="874" y="356" width="22" height="15" fill="rgb(230,163,54)"/><text x="877.00" y="366.50">0..</text></g><g><title>0x7f2acb74a7a0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="896" y="356" width="3" height="15" fill="rgb(236,42,53)"/><text x="899.00" y="366.50"></text></g><g><title>0x7f2acb722529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="899" y="372" width="3" height="15" fill="rgb(220,17,31)"/><text x="902.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.26%)</title><rect x="899" y="388" width="3" height="15" fill="rgb(253,92,22)"/><text x="902.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.26%)</title><rect x="899" y="404" width="3" height="15" fill="rgb(216,92,3)"/><text x="902.00" y="414.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.26%)</title><rect x="899" y="420" width="3" height="15" fill="rgb(233,29,19)"/><text x="902.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="899" y="436" width="3" height="15" fill="rgb(206,39,8)"/><text x="902.00" y="446.50"></text></g><g><title>0x7f2acb74b405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 7.14%)</title><rect x="821" y="340" width="84" height="15" fill="rgb(237,16,15)"/><text x="824.00" y="350.50">0x7f2acb7..</text></g><g><title>0x7f2acb74ac27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="899" y="356" width="6" height="15" fill="rgb(225,88,4)"/><text x="902.00" y="366.50"></text></g><g><title>0x7f2acb72254b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="902" y="372" width="3" height="15" fill="rgb(226,71,45)"/><text x="905.00" y="382.50"></text></g><g><title>0x7f2acb73bfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (30 samples, 7.94%)</title><rect x="818" y="324" width="94" height="15" fill="rgb(216,55,29)"/><text x="821.00" y="334.50">0x7f2acb73b..</text></g><g><title>0x7f2acb74b540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="905" y="340" width="7" height="15" fill="rgb(243,11,36)"/><text x="908.00" y="350.50"></text></g><g><title>0x7f2acb7202f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="905" y="356" width="7" height="15" fill="rgb(232,214,28)"/><text x="908.00" y="366.50"></text></g><g><title>0x7f2acb71f530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="905" y="372" width="7" height="15" fill="rgb(243,97,8)"/><text x="908.00" y="382.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.53%)</title><rect x="905" y="388" width="7" height="15" fill="rgb(228,1,16)"/><text x="908.00" y="398.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src) (2 samples, 0.53%)</title><rect x="918" y="372" width="6" height="15" fill="rgb(217,208,0)"/><text x="921.00" y="382.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.26%)</title><rect x="924" y="372" width="3" height="15" fill="rgb(218,11,32)"/><text x="927.00" y="382.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.26%)</title><rect x="924" y="388" width="3" height="15" fill="rgb(219,221,23)"/><text x="927.00" y="398.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.26%)</title><rect x="924" y="404" width="3" height="15" fill="rgb(211,98,4)"/><text x="927.00" y="414.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.26%)</title><rect x="924" y="420" width="3" height="15" fill="rgb(230,59,21)"/><text x="927.00" y="430.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.26%)</title><rect x="924" y="436" width="3" height="15" fill="rgb(231,201,53)"/><text x="927.00" y="446.50"></text></g><g><title>0x7f2acb73c05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 1.85%)</title><rect x="912" y="324" width="22" height="15" fill="rgb(222,53,33)"/><text x="915.00" y="334.50">0..</text></g><g><title>array_take (methods.c) (7 samples, 1.85%)</title><rect x="912" y="340" width="22" height="15" fill="rgb(210,56,24)"/><text x="915.00" y="350.50">a..</text></g><g><title>PyArray_TakeFrom (item_selection.c) (5 samples, 1.32%)</title><rect x="918" y="356" width="16" height="15" fill="rgb(245,156,46)"/><text x="921.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (2 samples, 0.53%)</title><rect x="927" y="372" width="7" height="15" fill="rgb(242,216,29)"/><text x="930.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.53%)</title><rect x="927" y="388" width="7" height="15" fill="rgb(223,78,26)"/><text x="930.00" y="398.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="930" y="404" width="4" height="15" fill="rgb(208,191,45)"/><text x="933.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.26%)</title><rect x="930" y="420" width="4" height="15" fill="rgb(208,75,17)"/><text x="933.00" y="430.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.26%)</title><rect x="930" y="436" width="4" height="15" fill="rgb(250,32,16)"/><text x="933.00" y="446.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.26%)</title><rect x="930" y="452" width="4" height="15" fill="rgb(252,42,33)"/><text x="933.00" y="462.50"></text></g><g><title>0x7f2af1cfa1a7 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="930" y="468" width="4" height="15" fill="rgb(219,65,33)"/><text x="933.00" y="478.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.26%)</title><rect x="934" y="356" width="3" height="15" fill="rgb(243,68,3)"/><text x="937.00" y="366.50"></text></g><g><title>0x7f2acb73c14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="934" y="324" width="6" height="15" fill="rgb(230,36,32)"/><text x="937.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.53%)</title><rect x="934" y="340" width="6" height="15" fill="rgb(220,90,40)"/><text x="937.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="937" y="356" width="3" height="15" fill="rgb(208,114,10)"/><text x="940.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="937" y="372" width="3" height="15" fill="rgb(251,147,14)"/><text x="940.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.26%)</title><rect x="937" y="388" width="3" height="15" fill="rgb(238,79,13)"/><text x="940.00" y="398.50"></text></g><g><title>0x7f2af1cf8991 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="937" y="404" width="3" height="15" fill="rgb(214,44,45)"/><text x="940.00" y="414.50"></text></g><g><title>0x7f2acb73c18f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="940" y="324" width="3" height="15" fill="rgb(224,22,12)"/><text x="943.00" y="334.50"></text></g><g><title>0x7f2acb73cd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (42 samples, 11.11%)</title><rect x="818" y="308" width="131" height="15" fill="rgb(212,181,27)"/><text x="821.00" y="318.50">0x7f2acb73cd2e (..</text></g><g><title>0x7f2acb73c1bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.53%)</title><rect x="943" y="324" width="6" height="15" fill="rgb(236,215,8)"/><text x="946.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (2 samples, 0.53%)</title><rect x="943" y="340" width="6" height="15" fill="rgb(233,130,46)"/><text x="946.00" y="350.50"></text></g><g><title>0x7f2af1d1913e (libc-2.29.so) (1 samples, 0.26%)</title><rect x="946" y="356" width="3" height="15" fill="rgb(233,109,9)"/><text x="949.00" y="366.50"></text></g><g><title>get_view_from_index (mapping.c) (3 samples, 0.79%)</title><rect x="949" y="324" width="9" height="15" fill="rgb(228,126,47)"/><text x="952.00" y="334.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.26%)</title><rect x="955" y="340" width="3" height="15" fill="rgb(232,100,50)"/><text x="958.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.26%)</title><rect x="955" y="356" width="3" height="15" fill="rgb(248,84,1)"/><text x="958.00" y="366.50"></text></g><g><title>PyArray_SetBaseObject (arrayobject.c) (1 samples, 0.26%)</title><rect x="955" y="372" width="3" height="15" fill="rgb(233,3,51)"/><text x="958.00" y="382.50"></text></g><g><title>array_subscript (mapping.c) (4 samples, 1.06%)</title><rect x="949" y="308" width="13" height="15" fill="rgb(241,133,2)"/><text x="952.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.26%)</title><rect x="958" y="324" width="4" height="15" fill="rgb(213,176,10)"/><text x="961.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (2 samples, 0.53%)</title><rect x="987" y="340" width="6" height="15" fill="rgb(237,124,47)"/><text x="990.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (7 samples, 1.85%)</title><rect x="977" y="324" width="22" height="15" fill="rgb(231,217,0)"/><text x="980.00" y="334.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.53%)</title><rect x="993" y="340" width="6" height="15" fill="rgb(225,153,8)"/><text x="996.00" y="350.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (13 samples, 3.44%)</title><rect x="962" y="308" width="40" height="15" fill="rgb(221,150,29)"/><text x="965.00" y="318.50">che..</text></g><g><title>isclass (inspect.py) (1 samples, 0.26%)</title><rect x="999" y="324" width="3" height="15" fill="rgb(218,116,29)"/><text x="1002.00" y="334.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (66 samples, 17.46%)</title><rect x="799" y="292" width="206" height="15" fill="rgb(246,3,23)"/><text x="802.00" y="302.50">predict (sklearn/tree/_clas..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.26%)</title><rect x="1002" y="308" width="3" height="15" fill="rgb(229,115,19)"/><text x="1005.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.53%)</title><rect x="1008" y="308" width="7" height="15" fill="rgb(220,22,27)"/><text x="1011.00" y="318.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.53%)</title><rect x="1008" y="324" width="7" height="15" fill="rgb(237,14,9)"/><text x="1011.00" y="334.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (1 samples, 0.26%)</title><rect x="1012" y="340" width="3" height="15" fill="rgb(223,76,1)"/><text x="1015.00" y="350.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.26%)</title><rect x="1015" y="356" width="3" height="15" fill="rgb(249,161,31)"/><text x="1018.00" y="366.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (1 samples, 0.26%)</title><rect x="1015" y="372" width="3" height="15" fill="rgb(223,149,51)"/><text x="1018.00" y="382.50"></text></g><g><title>sse2_binary_add_DOUBLE (simd.inc.src) (1 samples, 0.26%)</title><rect x="1015" y="388" width="3" height="15" fill="rgb(224,174,2)"/><text x="1018.00" y="398.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 0.26%)</title><rect x="1015" y="404" width="3" height="15" fill="rgb(213,83,20)"/><text x="1018.00" y="414.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (2 samples, 0.53%)</title><rect x="1015" y="308" width="6" height="15" fill="rgb(227,146,18)"/><text x="1018.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.53%)</title><rect x="1015" y="324" width="6" height="15" fill="rgb(247,97,54)"/><text x="1018.00" y="334.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (2 samples, 0.53%)</title><rect x="1015" y="340" width="6" height="15" fill="rgb(237,18,6)"/><text x="1018.00" y="350.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="1018" y="356" width="3" height="15" fill="rgb(217,195,7)"/><text x="1021.00" y="366.50"></text></g><g><title>_find_array_wrap (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1021" y="308" width="3" height="15" fill="rgb(214,116,7)"/><text x="1024.00" y="318.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1021" y="324" width="3" height="15" fill="rgb(222,173,48)"/><text x="1024.00" y="334.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (74 samples, 19.58%)</title><rect x="796" y="276" width="231" height="15" fill="rgb(221,0,3)"/><text x="799.00" y="286.50">_accumulate_prediction (sklear..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.85%)</title><rect x="1005" y="292" width="22" height="15" fill="rgb(208,121,32)"/><text x="1008.00" y="302.50">u..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.26%)</title><rect x="1024" y="308" width="3" height="15" fill="rgb(251,193,20)"/><text x="1027.00" y="318.50"></text></g><g><title>0x7f2af1d19120 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1024" y="324" width="3" height="15" fill="rgb(212,97,32)"/><text x="1027.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="1027" y="292" width="3" height="15" fill="rgb(237,103,4)"/><text x="1030.00" y="302.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="1027" y="308" width="3" height="15" fill="rgb(230,166,47)"/><text x="1030.00" y="318.50"></text></g><g><title>0x7f2af1cf8b26 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1030" y="356" width="3" height="15" fill="rgb(252,68,44)"/><text x="1033.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (80 samples, 21.16%)</title><rect x="787" y="260" width="250" height="15" fill="rgb(212,47,7)"/><text x="790.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>array_dealloc (arrayobject.c) (3 samples, 0.79%)</title><rect x="1027" y="276" width="10" height="15" fill="rgb(251,57,53)"/><text x="1030.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.53%)</title><rect x="1030" y="292" width="7" height="15" fill="rgb(224,38,15)"/><text x="1033.00" y="302.50"></text></g><g><title>npy_free_cache (alloc.c) (2 samples, 0.53%)</title><rect x="1030" y="308" width="7" height="15" fill="rgb(239,213,28)"/><text x="1033.00" y="318.50"></text></g><g><title>_npy_free_cache (alloc.c) (2 samples, 0.53%)</title><rect x="1030" y="324" width="7" height="15" fill="rgb(245,0,20)"/><text x="1033.00" y="334.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (2 samples, 0.53%)</title><rect x="1030" y="340" width="7" height="15" fill="rgb(231,170,35)"/><text x="1033.00" y="350.50"></text></g><g><title>0x7f2af1cf8b87 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1033" y="356" width="4" height="15" fill="rgb(252,205,54)"/><text x="1036.00" y="366.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (95 samples, 25.13%)</title><rect x="746" y="212" width="297" height="15" fill="rgb(253,205,50)"/><text x="749.00" y="222.50">apply_async (joblib/_parallel_backends...</text></g><g><title>__init__ (joblib/_parallel_backends.py) (93 samples, 24.60%)</title><rect x="752" y="228" width="291" height="15" fill="rgb(254,188,10)"/><text x="755.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (90 samples, 23.81%)</title><rect x="762" y="244" width="281" height="15" fill="rgb(206,16,49)"/><text x="765.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (2 samples, 0.53%)</title><rect x="1037" y="260" width="6" height="15" fill="rgb(251,197,7)"/><text x="1040.00" y="270.50"></text></g><g><title>_dispatch (joblib/parallel.py) (103 samples, 27.25%)</title><rect x="724" y="196" width="322" height="15" fill="rgb(250,38,24)"/><text x="727.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>time_time (python3.7) (1 samples, 0.26%)</title><rect x="1043" y="212" width="3" height="15" fill="rgb(217,89,30)"/><text x="1046.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.26%)</title><rect x="1077" y="212" width="3" height="15" fill="rgb(220,59,9)"/><text x="1080.00" y="222.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.26%)</title><rect x="1080" y="212" width="3" height="15" fill="rgb(250,113,40)"/><text x="1083.00" y="222.50"></text></g><g><title>get (queue.py) (13 samples, 3.44%)</title><rect x="1046" y="196" width="40" height="15" fill="rgb(244,5,12)"/><text x="1049.00" y="206.50">get..</text></g><g><title>notify (threading.py) (1 samples, 0.26%)</title><rect x="1083" y="212" width="3" height="15" fill="rgb(245,113,0)"/><text x="1086.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="1099" y="212" width="3" height="15" fill="rgb(230,168,6)"/><text x="1102.00" y="222.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (13 samples, 3.44%)</title><rect x="1102" y="212" width="41" height="15" fill="rgb(251,199,19)"/><text x="1105.00" y="222.50">get..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (6 samples, 1.59%)</title><rect x="1124" y="228" width="19" height="15" fill="rgb(232,100,16)"/><text x="1127.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.26%)</title><rect x="1140" y="244" width="3" height="15" fill="rgb(239,210,52)"/><text x="1143.00" y="254.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (19 samples, 5.03%)</title><rect x="1086" y="196" width="60" height="15" fill="rgb(239,104,28)"/><text x="1089.00" y="206.50">get_ne..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.26%)</title><rect x="1143" y="212" width="3" height="15" fill="rgb(225,40,3)"/><text x="1146.00" y="222.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.26%)</title><rect x="1143" y="228" width="3" height="15" fill="rgb(250,23,49)"/><text x="1146.00" y="238.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.26%)</title><rect x="1165" y="212" width="3" height="15" fill="rgb(253,27,36)"/><text x="1168.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (169 samples, 44.71%)</title><rect x="643" y="180" width="528" height="15" fill="rgb(232,64,10)"/><text x="646.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (8 samples, 2.12%)</title><rect x="1146" y="196" width="25" height="15" fill="rgb(234,53,26)"/><text x="1149.00" y="206.50">p..</text></g><g><title>notify (threading.py) (1 samples, 0.26%)</title><rect x="1168" y="212" width="3" height="15" fill="rgb(247,95,6)"/><text x="1171.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.26%)</title><rect x="1168" y="228" width="3" height="15" fill="rgb(245,101,40)"/><text x="1171.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.26%)</title><rect x="1168" y="244" width="3" height="15" fill="rgb(248,166,15)"/><text x="1171.00" y="254.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.26%)</title><rect x="1168" y="260" width="3" height="15" fill="rgb(206,69,0)"/><text x="1171.00" y="270.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.26%)</title><rect x="1168" y="276" width="3" height="15" fill="rgb(224,9,34)"/><text x="1171.00" y="286.50"></text></g><g><title>retrieve (joblib/parallel.py) (1 samples, 0.26%)</title><rect x="1171" y="180" width="3" height="15" fill="rgb(212,48,22)"/><text x="1174.00" y="190.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (174 samples, 46.03%)</title><rect x="634" y="68" width="543" height="15" fill="rgb(242,4,35)"/><text x="637.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.p..</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (174 samples, 46.03%)</title><rect x="634" y="84" width="543" height="15" fill="rgb(236,25,27)"/><text x="637.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_..</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (174 samples, 46.03%)</title><rect x="634" y="100" width="543" height="15" fill="rgb(242,206,5)"/><text x="637.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (174 samples, 46.03%)</title><rect x="634" y="116" width="543" height="15" fill="rgb(208,221,49)"/><text x="637.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (174 samples, 46.03%)</title><rect x="634" y="132" width="543" height="15" fill="rgb(232,140,19)"/><text x="637.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (174 samples, 46.03%)</title><rect x="634" y="148" width="543" height="15" fill="rgb(228,68,11)"/><text x="637.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>__call__ (joblib/parallel.py) (174 samples, 46.03%)</title><rect x="634" y="164" width="543" height="15" fill="rgb(243,96,29)"/><text x="637.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>short_format_time (joblib/logger.py) (1 samples, 0.26%)</title><rect x="1174" y="180" width="3" height="15" fill="rgb(208,48,18)"/><text x="1177.00" y="190.50"></text></g><g><title>0x7f2acb730b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1180" y="292" width="3" height="15" fill="rgb(212,87,40)"/><text x="1183.00" y="302.50"></text></g><g><title>0x7f2acb76210a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1180" y="308" width="3" height="15" fill="rgb(208,74,12)"/><text x="1183.00" y="318.50"></text></g><g><title>0x7f2acb98ddbe (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1180" y="324" width="3" height="15" fill="rgb(215,77,17)"/><text x="1183.00" y="334.50"></text></g><g><title>0x7f2acbbc2059 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.26%)</title><rect x="1180" y="340" width="3" height="15" fill="rgb(241,22,8)"/><text x="1183.00" y="350.50"></text></g><g><title>0x7f2af1d191d6 (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1180" y="356" width="3" height="15" fill="rgb(232,176,37)"/><text x="1183.00" y="366.50"></text></g><g><title>__call__ (joblib/parallel.py) (3 samples, 0.79%)</title><rect x="1177" y="132" width="9" height="15" fill="rgb(205,106,19)"/><text x="1180.00" y="142.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (2 samples, 0.53%)</title><rect x="1180" y="148" width="6" height="15" fill="rgb(252,59,53)"/><text x="1183.00" y="158.50"></text></g><g><title>_dispatch (joblib/parallel.py) (2 samples, 0.53%)</title><rect x="1180" y="164" width="6" height="15" fill="rgb(224,99,50)"/><text x="1183.00" y="174.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (2 samples, 0.53%)</title><rect x="1180" y="180" width="6" height="15" fill="rgb(250,132,7)"/><text x="1183.00" y="190.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.53%)</title><rect x="1180" y="196" width="6" height="15" fill="rgb(231,26,12)"/><text x="1183.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.53%)</title><rect x="1180" y="212" width="6" height="15" fill="rgb(245,197,1)"/><text x="1183.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (2 samples, 0.53%)</title><rect x="1180" y="228" width="6" height="15" fill="rgb(226,49,16)"/><text x="1183.00" y="238.50"></text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (2 samples, 0.53%)</title><rect x="1180" y="244" width="6" height="15" fill="rgb(227,70,26)"/><text x="1183.00" y="254.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.53%)</title><rect x="1180" y="260" width="6" height="15" fill="rgb(247,222,7)"/><text x="1183.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (2 samples, 0.53%)</title><rect x="1180" y="276" width="6" height="15" fill="rgb(247,72,48)"/><text x="1183.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="1183" y="292" width="3" height="15" fill="rgb(205,32,46)"/><text x="1186.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.26%)</title><rect x="1183" y="308" width="3" height="15" fill="rgb(208,93,47)"/><text x="1186.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.26%)</title><rect x="1183" y="324" width="3" height="15" fill="rgb(233,97,5)"/><text x="1186.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.26%)</title><rect x="1183" y="340" width="3" height="15" fill="rgb(234,59,16)"/><text x="1186.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.26%)</title><rect x="1183" y="356" width="3" height="15" fill="rgb(242,191,18)"/><text x="1186.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.26%)</title><rect x="1183" y="372" width="3" height="15" fill="rgb(236,84,8)"/><text x="1186.00" y="382.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.26%)</title><rect x="1183" y="388" width="3" height="15" fill="rgb(230,100,53)"/><text x="1186.00" y="398.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.26%)</title><rect x="1183" y="404" width="3" height="15" fill="rgb(243,16,23)"/><text x="1186.00" y="414.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.26%)</title><rect x="1183" y="420" width="3" height="15" fill="rgb(222,124,29)"/><text x="1186.00" y="430.50"></text></g><g><title>all (378 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,5,32)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (377 samples, 99.74%)</title><rect x="13" y="52" width="1177" height="15" fill="rgb(248,41,36)"/><text x="16.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1000_50_12_float_.py) (4 samples, 1.06%)</title><rect x="1177" y="68" width="13" height="15" fill="rgb(233,35,28)"/><text x="1180.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (4 samples, 1.06%)</title><rect x="1177" y="84" width="13" height="15" fill="rgb(232,54,11)"/><text x="1180.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.06%)</title><rect x="1177" y="100" width="13" height="15" fill="rgb(245,96,9)"/><text x="1180.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (4 samples, 1.06%)</title><rect x="1177" y="116" width="13" height="15" fill="rgb(212,183,47)"/><text x="1180.00" y="126.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.26%)</title><rect x="1186" y="132" width="4" height="15" fill="rgb(241,162,1)"/><text x="1189.00" y="142.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.26%)</title><rect x="1186" y="148" width="4" height="15" fill="rgb(251,181,13)"/><text x="1189.00" y="158.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.26%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(238,102,23)"/><text x="1189.00" y="174.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.26%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(237,121,19)"/><text x="1189.00" y="190.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.26%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(208,194,46)"/><text x="1189.00" y="206.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.26%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(213,173,30)"/><text x="1189.00" y="222.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(218,24,21)"/><text x="1189.00" y="238.50"></text></g><g><title>BitGenerator___init__ (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(216,229,51)"/><text x="1189.00" y="254.50"></text></g><g><title>__Pyx__PyObject_CallOneArg (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="260" width="4" height="15" fill="rgb(230,220,3)"/><text x="1189.00" y="270.50"></text></g><g><title>__init__ (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="276" width="4" height="15" fill="rgb(224,229,23)"/><text x="1189.00" y="286.50"></text></g><g><title>SeedSequence___init__ (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="292" width="4" height="15" fill="rgb(206,40,21)"/><text x="1189.00" y="302.50"></text></g><g><title>__Pyx_PyObject_Call2Args (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="308" width="4" height="15" fill="rgb(230,48,3)"/><text x="1189.00" y="318.50"></text></g><g><title>__Pyx_PyFunction_FastCallNoKw (bit_generator.c) (1 samples, 0.26%)</title><rect x="1186" y="324" width="4" height="15" fill="rgb(234,7,49)"/><text x="1189.00" y="334.50"></text></g><g><title>getrandbits (random.py) (1 samples, 0.26%)</title><rect x="1186" y="340" width="4" height="15" fill="rgb(222,209,37)"/><text x="1189.00" y="350.50"></text></g><g><title>os_urandom (python3.7) (1 samples, 0.26%)</title><rect x="1186" y="356" width="4" height="15" fill="rgb(231,186,3)"/><text x="1189.00" y="366.50"></text></g><g><title>syscall (libc-2.29.so) (1 samples, 0.26%)</title><rect x="1186" y="372" width="4" height="15" fill="rgb(232,16,27)"/><text x="1189.00" y="382.50"></text></g></g></svg>