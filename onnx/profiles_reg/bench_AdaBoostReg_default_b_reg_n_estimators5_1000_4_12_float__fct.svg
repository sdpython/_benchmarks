<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2150" onload="init(evt)" viewBox="0 0 1200 2150" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2150" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy</text><text id="details" x="10" y="2133.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="2133.00"> </text><svg id="frames" x="10" width="1180"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="0.0000%" y="868" width="1.2658%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="0.0000%" y="884" width="1.2658%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="0.0000%" y="900" width="1.2658%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="0.0000%" y="916" width="1.2658%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="0.0000%" y="932" width="1.2658%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="0.0000%" y="948" width="1.2658%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="0.0000%" y="964" width="1.2658%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="974.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="0.0000%" y="980" width="1.2658%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="990.50"></text></g><g><title>add (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="1.2658%" y="916" width="1.2658%" height="15" fill="rgb(218,30,26)"/><text x="1.5158%" y="926.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="292" width="3.7975%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="302.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="308" width="3.7975%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="318.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="324" width="3.7975%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="334.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="340" width="3.7975%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="350.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="356" width="3.7975%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="366.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="372" width="3.7975%" height="15" fill="rgb(217,207,13)"/><text x="0.2500%" y="382.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="388" width="3.7975%" height="15" fill="rgb(231,73,38)"/><text x="0.2500%" y="398.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="404" width="3.7975%" height="15" fill="rgb(225,20,46)"/><text x="0.2500%" y="414.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="420" width="3.7975%" height="15" fill="rgb(210,31,41)"/><text x="0.2500%" y="430.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="436" width="3.7975%" height="15" fill="rgb(221,200,47)"/><text x="0.2500%" y="446.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="452" width="3.7975%" height="15" fill="rgb(226,26,5)"/><text x="0.2500%" y="462.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="468" width="3.7975%" height="15" fill="rgb(249,33,26)"/><text x="0.2500%" y="478.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="484" width="3.7975%" height="15" fill="rgb(235,183,28)"/><text x="0.2500%" y="494.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="500" width="3.7975%" height="15" fill="rgb(221,5,38)"/><text x="0.2500%" y="510.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="516" width="3.7975%" height="15" fill="rgb(247,18,42)"/><text x="0.2500%" y="526.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="532" width="3.7975%" height="15" fill="rgb(241,131,45)"/><text x="0.2500%" y="542.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="548" width="3.7975%" height="15" fill="rgb(249,31,29)"/><text x="0.2500%" y="558.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="564" width="3.7975%" height="15" fill="rgb(225,111,53)"/><text x="0.2500%" y="574.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="580" width="3.7975%" height="15" fill="rgb(238,160,17)"/><text x="0.2500%" y="590.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="596" width="3.7975%" height="15" fill="rgb(214,148,48)"/><text x="0.2500%" y="606.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="612" width="3.7975%" height="15" fill="rgb(232,36,49)"/><text x="0.2500%" y="622.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="628" width="3.7975%" height="15" fill="rgb(209,103,24)"/><text x="0.2500%" y="638.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="644" width="3.7975%" height="15" fill="rgb(229,88,8)"/><text x="0.2500%" y="654.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="660" width="3.7975%" height="15" fill="rgb(213,181,19)"/><text x="0.2500%" y="670.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="676" width="3.7975%" height="15" fill="rgb(254,191,54)"/><text x="0.2500%" y="686.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="692" width="3.7975%" height="15" fill="rgb(241,83,37)"/><text x="0.2500%" y="702.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="708" width="3.7975%" height="15" fill="rgb(233,36,39)"/><text x="0.2500%" y="718.50">_cal..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="724" width="3.7975%" height="15" fill="rgb(226,3,54)"/><text x="0.2500%" y="734.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="740" width="3.7975%" height="15" fill="rgb(245,192,40)"/><text x="0.2500%" y="750.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="756" width="3.7975%" height="15" fill="rgb(238,167,29)"/><text x="0.2500%" y="766.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="772" width="3.7975%" height="15" fill="rgb(232,182,51)"/><text x="0.2500%" y="782.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="788" width="3.7975%" height="15" fill="rgb(231,60,39)"/><text x="0.2500%" y="798.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="0.0000%" y="804" width="3.7975%" height="15" fill="rgb(208,69,12)"/><text x="0.2500%" y="814.50">_cal..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="820" width="3.7975%" height="15" fill="rgb(235,93,37)"/><text x="0.2500%" y="830.50">&lt;mod..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="836" width="3.7975%" height="15" fill="rgb(213,116,39)"/><text x="0.2500%" y="846.50">_cal..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 3.80%)</title><rect x="0.0000%" y="852" width="3.7975%" height="15" fill="rgb(222,207,29)"/><text x="0.2500%" y="862.50">_ini..</text></g><g><title>_build_master (pkg_resources/__init__.py) (2 samples, 2.53%)</title><rect x="1.2658%" y="868" width="2.5316%" height="15" fill="rgb(206,96,30)"/><text x="1.5158%" y="878.50">_b..</text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 2.53%)</title><rect x="1.2658%" y="884" width="2.5316%" height="15" fill="rgb(218,138,4)"/><text x="1.5158%" y="894.50">__..</text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 2.53%)</title><rect x="1.2658%" y="900" width="2.5316%" height="15" fill="rgb(250,191,14)"/><text x="1.5158%" y="910.50">ad..</text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="2.5316%" y="916" width="1.2658%" height="15" fill="rgb(239,60,40)"/><text x="2.7816%" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="2.5316%" y="932" width="1.2658%" height="15" fill="rgb(206,27,48)"/><text x="2.7816%" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="2.5316%" y="948" width="1.2658%" height="15" fill="rgb(225,35,8)"/><text x="2.7816%" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 1.27%)</title><rect x="2.5316%" y="964" width="1.2658%" height="15" fill="rgb(250,213,24)"/><text x="2.7816%" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 1.27%)</title><rect x="2.5316%" y="980" width="1.2658%" height="15" fill="rgb(247,123,22)"/><text x="2.7816%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="0.0000%" y="196" width="5.0633%" height="15" fill="rgb(231,138,38)"/><text x="0.2500%" y="206.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="0.0000%" y="212" width="5.0633%" height="15" fill="rgb(231,145,46)"/><text x="0.2500%" y="222.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="0.0000%" y="228" width="5.0633%" height="15" fill="rgb(251,118,11)"/><text x="0.2500%" y="238.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="0.0000%" y="244" width="5.0633%" height="15" fill="rgb(217,147,25)"/><text x="0.2500%" y="254.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="0.0000%" y="260" width="5.0633%" height="15" fill="rgb(247,81,37)"/><text x="0.2500%" y="270.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="0.0000%" y="276" width="5.0633%" height="15" fill="rgb(209,12,38)"/><text x="0.2500%" y="286.50">_call_..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="292" width="1.2658%" height="15" fill="rgb(227,1,9)"/><text x="4.0475%" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="308" width="1.2658%" height="15" fill="rgb(248,47,43)"/><text x="4.0475%" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="324" width="1.2658%" height="15" fill="rgb(221,10,30)"/><text x="4.0475%" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="340" width="1.2658%" height="15" fill="rgb(210,229,1)"/><text x="4.0475%" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="356" width="1.2658%" height="15" fill="rgb(222,148,37)"/><text x="4.0475%" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="372" width="1.2658%" height="15" fill="rgb(234,67,33)"/><text x="4.0475%" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="388" width="1.2658%" height="15" fill="rgb(247,98,35)"/><text x="4.0475%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="404" width="1.2658%" height="15" fill="rgb(247,138,52)"/><text x="4.0475%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="420" width="1.2658%" height="15" fill="rgb(213,79,30)"/><text x="4.0475%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="436" width="1.2658%" height="15" fill="rgb(246,177,23)"/><text x="4.0475%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="452" width="1.2658%" height="15" fill="rgb(230,62,27)"/><text x="4.0475%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="468" width="1.2658%" height="15" fill="rgb(216,154,8)"/><text x="4.0475%" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="484" width="1.2658%" height="15" fill="rgb(244,35,45)"/><text x="4.0475%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="500" width="1.2658%" height="15" fill="rgb(251,115,12)"/><text x="4.0475%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="516" width="1.2658%" height="15" fill="rgb(240,54,50)"/><text x="4.0475%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="532" width="1.2658%" height="15" fill="rgb(233,84,52)"/><text x="4.0475%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="548" width="1.2658%" height="15" fill="rgb(207,117,47)"/><text x="4.0475%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="564" width="1.2658%" height="15" fill="rgb(249,43,39)"/><text x="4.0475%" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="580" width="1.2658%" height="15" fill="rgb(209,38,44)"/><text x="4.0475%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="596" width="1.2658%" height="15" fill="rgb(236,212,23)"/><text x="4.0475%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="612" width="1.2658%" height="15" fill="rgb(242,79,21)"/><text x="4.0475%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="628" width="1.2658%" height="15" fill="rgb(211,96,35)"/><text x="4.0475%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="644" width="1.2658%" height="15" fill="rgb(253,215,40)"/><text x="4.0475%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="660" width="1.2658%" height="15" fill="rgb(211,81,21)"/><text x="4.0475%" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="676" width="1.2658%" height="15" fill="rgb(208,190,38)"/><text x="4.0475%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="692" width="1.2658%" height="15" fill="rgb(235,213,38)"/><text x="4.0475%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="708" width="1.2658%" height="15" fill="rgb(237,122,38)"/><text x="4.0475%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="724" width="1.2658%" height="15" fill="rgb(244,218,35)"/><text x="4.0475%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="740" width="1.2658%" height="15" fill="rgb(240,68,47)"/><text x="4.0475%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="756" width="1.2658%" height="15" fill="rgb(210,16,53)"/><text x="4.0475%" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="772" width="1.2658%" height="15" fill="rgb(235,124,12)"/><text x="4.0475%" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="788" width="1.2658%" height="15" fill="rgb(224,169,11)"/><text x="4.0475%" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="804" width="1.2658%" height="15" fill="rgb(250,166,2)"/><text x="4.0475%" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="820" width="1.2658%" height="15" fill="rgb(242,216,29)"/><text x="4.0475%" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="836" width="1.2658%" height="15" fill="rgb(230,116,27)"/><text x="4.0475%" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="852" width="1.2658%" height="15" fill="rgb(228,99,48)"/><text x="4.0475%" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="868" width="1.2658%" height="15" fill="rgb(253,11,6)"/><text x="4.0475%" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="884" width="1.2658%" height="15" fill="rgb(247,143,39)"/><text x="4.0475%" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="900" width="1.2658%" height="15" fill="rgb(236,97,10)"/><text x="4.0475%" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="916" width="1.2658%" height="15" fill="rgb(233,208,19)"/><text x="4.0475%" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="932" width="1.2658%" height="15" fill="rgb(216,164,2)"/><text x="4.0475%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="948" width="1.2658%" height="15" fill="rgb(220,129,5)"/><text x="4.0475%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="964" width="1.2658%" height="15" fill="rgb(242,17,10)"/><text x="4.0475%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="980" width="1.2658%" height="15" fill="rgb(242,107,0)"/><text x="4.0475%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="996" width="1.2658%" height="15" fill="rgb(251,28,31)"/><text x="4.0475%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="3.7975%" y="1012" width="1.2658%" height="15" fill="rgb(233,223,10)"/><text x="4.0475%" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="1028" width="1.2658%" height="15" fill="rgb(215,21,27)"/><text x="4.0475%" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="1044" width="1.2658%" height="15" fill="rgb(232,23,21)"/><text x="4.0475%" y="1054.50"></text></g><g><title>_construct_argparser (scipy/stats/_distn_infrastructure.py) (1 samples, 1.27%)</title><rect x="3.7975%" y="1060" width="1.2658%" height="15" fill="rgb(244,5,23)"/><text x="4.0475%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1476" width="1.2658%" height="15" fill="rgb(226,81,46)"/><text x="5.3133%" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1492" width="1.2658%" height="15" fill="rgb(247,70,30)"/><text x="5.3133%" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1508" width="1.2658%" height="15" fill="rgb(212,68,19)"/><text x="5.3133%" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1524" width="1.2658%" height="15" fill="rgb(240,187,13)"/><text x="5.3133%" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1540" width="1.2658%" height="15" fill="rgb(223,113,26)"/><text x="5.3133%" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1556" width="1.2658%" height="15" fill="rgb(206,192,2)"/><text x="5.3133%" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1572" width="1.2658%" height="15" fill="rgb(241,108,4)"/><text x="5.3133%" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1588" width="1.2658%" height="15" fill="rgb(247,173,49)"/><text x="5.3133%" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1604" width="1.2658%" height="15" fill="rgb(224,114,35)"/><text x="5.3133%" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1620" width="1.2658%" height="15" fill="rgb(245,159,27)"/><text x="5.3133%" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1636" width="1.2658%" height="15" fill="rgb(245,172,44)"/><text x="5.3133%" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1652" width="1.2658%" height="15" fill="rgb(236,23,11)"/><text x="5.3133%" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1668" width="1.2658%" height="15" fill="rgb(205,117,38)"/><text x="5.3133%" y="1678.50"></text></g><g><title>_patch_async (jinja2/__init__.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1684" width="1.2658%" height="15" fill="rgb(237,72,25)"/><text x="5.3133%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1700" width="1.2658%" height="15" fill="rgb(244,70,9)"/><text x="5.3133%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1716" width="1.2658%" height="15" fill="rgb(217,125,39)"/><text x="5.3133%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1732" width="1.2658%" height="15" fill="rgb(235,36,10)"/><text x="5.3133%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1748" width="1.2658%" height="15" fill="rgb(251,123,47)"/><text x="5.3133%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1764" width="1.2658%" height="15" fill="rgb(221,13,13)"/><text x="5.3133%" y="1774.50"></text></g><g><title>&lt;module&gt; (jinja2/asyncsupport.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1780" width="1.2658%" height="15" fill="rgb(238,131,9)"/><text x="5.3133%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1796" width="1.2658%" height="15" fill="rgb(211,50,8)"/><text x="5.3133%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1812" width="1.2658%" height="15" fill="rgb(245,182,24)"/><text x="5.3133%" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1828" width="1.2658%" height="15" fill="rgb(242,14,37)"/><text x="5.3133%" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1844" width="1.2658%" height="15" fill="rgb(246,228,12)"/><text x="5.3133%" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1860" width="1.2658%" height="15" fill="rgb(213,55,15)"/><text x="5.3133%" y="1870.50"></text></g><g><title>&lt;module&gt; (asyncio/__init__.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1876" width="1.2658%" height="15" fill="rgb(209,9,3)"/><text x="5.3133%" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1892" width="1.2658%" height="15" fill="rgb(230,59,30)"/><text x="5.3133%" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1908" width="1.2658%" height="15" fill="rgb(209,121,21)"/><text x="5.3133%" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1924" width="1.2658%" height="15" fill="rgb(220,109,13)"/><text x="5.3133%" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1940" width="1.2658%" height="15" fill="rgb(232,18,1)"/><text x="5.3133%" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1956" width="1.2658%" height="15" fill="rgb(215,41,42)"/><text x="5.3133%" y="1966.50"></text></g><g><title>&lt;module&gt; (asyncio/base_events.py) (1 samples, 1.27%)</title><rect x="5.0633%" y="1972" width="1.2658%" height="15" fill="rgb(224,123,36)"/><text x="5.3133%" y="1982.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="1988" width="1.2658%" height="15" fill="rgb(240,125,3)"/><text x="5.3133%" y="1998.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2004" width="1.2658%" height="15" fill="rgb(205,98,50)"/><text x="5.3133%" y="2014.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2020" width="1.2658%" height="15" fill="rgb(205,185,37)"/><text x="5.3133%" y="2030.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2036" width="1.2658%" height="15" fill="rgb(238,207,15)"/><text x="5.3133%" y="2046.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2052" width="1.2658%" height="15" fill="rgb(213,199,42)"/><text x="5.3133%" y="2062.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2068" width="1.2658%" height="15" fill="rgb(235,201,11)"/><text x="5.3133%" y="2078.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2084" width="1.2658%" height="15" fill="rgb(207,46,11)"/><text x="5.3133%" y="2094.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="5.0633%" y="2100" width="1.2658%" height="15" fill="rgb(241,35,35)"/><text x="5.3133%" y="2110.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 2.53%)</title><rect x="6.3291%" y="1588" width="2.5316%" height="15" fill="rgb(243,32,47)"/><text x="6.5791%" y="1598.50">ca..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="484" width="5.0633%" height="15" fill="rgb(247,202,23)"/><text x="5.3133%" y="494.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="500" width="5.0633%" height="15" fill="rgb(219,102,11)"/><text x="5.3133%" y="510.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="516" width="5.0633%" height="15" fill="rgb(243,110,44)"/><text x="5.3133%" y="526.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="532" width="5.0633%" height="15" fill="rgb(222,74,54)"/><text x="5.3133%" y="542.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="548" width="5.0633%" height="15" fill="rgb(216,99,12)"/><text x="5.3133%" y="558.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="564" width="5.0633%" height="15" fill="rgb(226,22,26)"/><text x="5.3133%" y="574.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="580" width="5.0633%" height="15" fill="rgb(217,163,10)"/><text x="5.3133%" y="590.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="596" width="5.0633%" height="15" fill="rgb(213,25,53)"/><text x="5.3133%" y="606.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="612" width="5.0633%" height="15" fill="rgb(252,105,26)"/><text x="5.3133%" y="622.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="628" width="5.0633%" height="15" fill="rgb(220,39,43)"/><text x="5.3133%" y="638.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="644" width="5.0633%" height="15" fill="rgb(229,68,48)"/><text x="5.3133%" y="654.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="660" width="5.0633%" height="15" fill="rgb(252,8,32)"/><text x="5.3133%" y="670.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="676" width="5.0633%" height="15" fill="rgb(223,20,43)"/><text x="5.3133%" y="686.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="692" width="5.0633%" height="15" fill="rgb(229,81,49)"/><text x="5.3133%" y="702.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="708" width="5.0633%" height="15" fill="rgb(236,28,36)"/><text x="5.3133%" y="718.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="724" width="5.0633%" height="15" fill="rgb(249,185,26)"/><text x="5.3133%" y="734.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="740" width="5.0633%" height="15" fill="rgb(249,174,33)"/><text x="5.3133%" y="750.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="756" width="5.0633%" height="15" fill="rgb(233,201,37)"/><text x="5.3133%" y="766.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="772" width="5.0633%" height="15" fill="rgb(221,78,26)"/><text x="5.3133%" y="782.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="788" width="5.0633%" height="15" fill="rgb(250,127,30)"/><text x="5.3133%" y="798.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="804" width="5.0633%" height="15" fill="rgb(230,49,44)"/><text x="5.3133%" y="814.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="820" width="5.0633%" height="15" fill="rgb(229,67,23)"/><text x="5.3133%" y="830.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="836" width="5.0633%" height="15" fill="rgb(249,83,47)"/><text x="5.3133%" y="846.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="852" width="5.0633%" height="15" fill="rgb(215,43,3)"/><text x="5.3133%" y="862.50">_call_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="868" width="5.0633%" height="15" fill="rgb(238,154,13)"/><text x="5.3133%" y="878.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="884" width="5.0633%" height="15" fill="rgb(219,56,2)"/><text x="5.3133%" y="894.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="900" width="5.0633%" height="15" fill="rgb(233,0,4)"/><text x="5.3133%" y="910.50">_find_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="916" width="5.0633%" height="15" fill="rgb(235,30,7)"/><text x="5.3133%" y="926.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="932" width="5.0633%" height="15" fill="rgb(250,79,13)"/><text x="5.3133%" y="942.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="948" width="5.0633%" height="15" fill="rgb(211,146,34)"/><text x="5.3133%" y="958.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="964" width="5.0633%" height="15" fill="rgb(228,22,38)"/><text x="5.3133%" y="974.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="980" width="5.0633%" height="15" fill="rgb(235,168,5)"/><text x="5.3133%" y="990.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="996" width="5.0633%" height="15" fill="rgb(221,155,16)"/><text x="5.3133%" y="1006.50">_call_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="1012" width="5.0633%" height="15" fill="rgb(215,215,53)"/><text x="5.3133%" y="1022.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1028" width="5.0633%" height="15" fill="rgb(223,4,10)"/><text x="5.3133%" y="1038.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1044" width="5.0633%" height="15" fill="rgb(234,103,6)"/><text x="5.3133%" y="1054.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1060" width="5.0633%" height="15" fill="rgb(227,97,0)"/><text x="5.3133%" y="1070.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1076" width="5.0633%" height="15" fill="rgb(234,150,53)"/><text x="5.3133%" y="1086.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1092" width="5.0633%" height="15" fill="rgb(228,201,54)"/><text x="5.3133%" y="1102.50">_call_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="1108" width="5.0633%" height="15" fill="rgb(222,22,37)"/><text x="5.3133%" y="1118.50">&lt;modul..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1124" width="5.0633%" height="15" fill="rgb(237,53,32)"/><text x="5.3133%" y="1134.50">_handl..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1140" width="5.0633%" height="15" fill="rgb(233,25,53)"/><text x="5.3133%" y="1150.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1156" width="5.0633%" height="15" fill="rgb(210,40,34)"/><text x="5.3133%" y="1166.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1172" width="5.0633%" height="15" fill="rgb(241,220,44)"/><text x="5.3133%" y="1182.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1188" width="5.0633%" height="15" fill="rgb(235,28,35)"/><text x="5.3133%" y="1198.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1204" width="5.0633%" height="15" fill="rgb(210,56,17)"/><text x="5.3133%" y="1214.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1220" width="5.0633%" height="15" fill="rgb(224,130,29)"/><text x="5.3133%" y="1230.50">_call_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="1236" width="5.0633%" height="15" fill="rgb(235,212,8)"/><text x="5.3133%" y="1246.50">&lt;modul..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1252" width="5.0633%" height="15" fill="rgb(223,33,50)"/><text x="5.3133%" y="1262.50">_handl..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1268" width="5.0633%" height="15" fill="rgb(219,149,13)"/><text x="5.3133%" y="1278.50">_call_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1284" width="5.0633%" height="15" fill="rgb(250,156,29)"/><text x="5.3133%" y="1294.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1300" width="5.0633%" height="15" fill="rgb(216,193,19)"/><text x="5.3133%" y="1310.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1316" width="5.0633%" height="15" fill="rgb(216,135,14)"/><text x="5.3133%" y="1326.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1332" width="5.0633%" height="15" fill="rgb(241,47,5)"/><text x="5.3133%" y="1342.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1348" width="5.0633%" height="15" fill="rgb(233,42,35)"/><text x="5.3133%" y="1358.50">_call_..</text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="1364" width="5.0633%" height="15" fill="rgb(231,13,6)"/><text x="5.3133%" y="1374.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1380" width="5.0633%" height="15" fill="rgb(207,181,40)"/><text x="5.3133%" y="1390.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1396" width="5.0633%" height="15" fill="rgb(254,173,49)"/><text x="5.3133%" y="1406.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1412" width="5.0633%" height="15" fill="rgb(221,1,38)"/><text x="5.3133%" y="1422.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1428" width="5.0633%" height="15" fill="rgb(206,124,46)"/><text x="5.3133%" y="1438.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="5.0633%" y="1444" width="5.0633%" height="15" fill="rgb(249,21,11)"/><text x="5.3133%" y="1454.50">_call_..</text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (4 samples, 5.06%)</title><rect x="5.0633%" y="1460" width="5.0633%" height="15" fill="rgb(222,201,40)"/><text x="5.3133%" y="1470.50">&lt;modul..</text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (3 samples, 3.80%)</title><rect x="6.3291%" y="1476" width="3.7975%" height="15" fill="rgb(235,61,29)"/><text x="6.5791%" y="1486.50">_upd..</text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (3 samples, 3.80%)</title><rect x="6.3291%" y="1492" width="3.7975%" height="15" fill="rgb(219,207,3)"/><text x="6.5791%" y="1502.50">dyna..</text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (3 samples, 3.80%)</title><rect x="6.3291%" y="1508" width="3.7975%" height="15" fill="rgb(222,56,46)"/><text x="6.5791%" y="1518.50">get_..</text></g><g><title>render (jinja2/asyncsupport.py) (3 samples, 3.80%)</title><rect x="6.3291%" y="1524" width="3.7975%" height="15" fill="rgb(239,76,54)"/><text x="6.5791%" y="1534.50">rend..</text></g><g><title>render (jinja2/environment.py) (3 samples, 3.80%)</title><rect x="6.3291%" y="1540" width="3.7975%" height="15" fill="rgb(231,124,27)"/><text x="6.5791%" y="1550.50">rend..</text></g><g><title>unicode_join (python3.7) (3 samples, 3.80%)</title><rect x="6.3291%" y="1556" width="3.7975%" height="15" fill="rgb(249,195,6)"/><text x="6.5791%" y="1566.50">unic..</text></g><g><title>root (&lt;template&gt;) (3 samples, 3.80%)</title><rect x="6.3291%" y="1572" width="3.7975%" height="15" fill="rgb(237,174,47)"/><text x="6.5791%" y="1582.50">root..</text></g><g><title>getattr (jinja2/environment.py) (1 samples, 1.27%)</title><rect x="8.8608%" y="1588" width="1.2658%" height="15" fill="rgb(206,201,31)"/><text x="9.1108%" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="772" width="2.5316%" height="15" fill="rgb(231,57,52)"/><text x="10.3766%" y="782.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="788" width="2.5316%" height="15" fill="rgb(248,177,22)"/><text x="10.3766%" y="798.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="804" width="2.5316%" height="15" fill="rgb(215,211,37)"/><text x="10.3766%" y="814.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="820" width="2.5316%" height="15" fill="rgb(241,128,51)"/><text x="10.3766%" y="830.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="836" width="2.5316%" height="15" fill="rgb(227,165,31)"/><text x="10.3766%" y="846.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="852" width="2.5316%" height="15" fill="rgb(228,167,24)"/><text x="10.3766%" y="862.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py) (2 samples, 2.53%)</title><rect x="10.1266%" y="868" width="2.5316%" height="15" fill="rgb(228,143,12)"/><text x="10.3766%" y="878.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="884" width="2.5316%" height="15" fill="rgb(249,149,8)"/><text x="10.3766%" y="894.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="900" width="2.5316%" height="15" fill="rgb(243,35,44)"/><text x="10.3766%" y="910.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="916" width="2.5316%" height="15" fill="rgb(246,89,9)"/><text x="10.3766%" y="926.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="932" width="2.5316%" height="15" fill="rgb(233,213,13)"/><text x="10.3766%" y="942.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="948" width="2.5316%" height="15" fill="rgb(233,141,41)"/><text x="10.3766%" y="958.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse.py) (2 samples, 2.53%)</title><rect x="10.1266%" y="964" width="2.5316%" height="15" fill="rgb(239,167,4)"/><text x="10.3766%" y="974.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="980" width="2.5316%" height="15" fill="rgb(209,217,16)"/><text x="10.3766%" y="990.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="996" width="2.5316%" height="15" fill="rgb(219,88,35)"/><text x="10.3766%" y="1006.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="1012" width="2.5316%" height="15" fill="rgb(220,193,23)"/><text x="10.3766%" y="1022.50">_l..</text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="1028" width="2.5316%" height="15" fill="rgb(230,90,52)"/><text x="10.3766%" y="1038.50">mo..</text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="1044" width="2.5316%" height="15" fill="rgb(252,106,19)"/><text x="10.3766%" y="1054.50">cr..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="10.1266%" y="1060" width="2.5316%" height="15" fill="rgb(206,74,20)"/><text x="10.3766%" y="1070.50">_c..</text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 1.27%)</title><rect x="12.6582%" y="1108" width="1.2658%" height="15" fill="rgb(230,138,44)"/><text x="12.9082%" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 1.27%)</title><rect x="12.6582%" y="1124" width="1.2658%" height="15" fill="rgb(235,182,43)"/><text x="12.9082%" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 1.27%)</title><rect x="12.6582%" y="1140" width="1.2658%" height="15" fill="rgb(242,16,51)"/><text x="12.9082%" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 1.27%)</title><rect x="12.6582%" y="1156" width="1.2658%" height="15" fill="rgb(248,9,4)"/><text x="12.9082%" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 1.27%)</title><rect x="12.6582%" y="1172" width="1.2658%" height="15" fill="rgb(210,31,22)"/><text x="12.9082%" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 1.27%)</title><rect x="12.6582%" y="1188" width="1.2658%" height="15" fill="rgb(239,54,39)"/><text x="12.9082%" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 1.27%)</title><rect x="12.6582%" y="1204" width="1.2658%" height="15" fill="rgb(230,99,41)"/><text x="12.9082%" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 1.27%)</title><rect x="12.6582%" y="1220" width="1.2658%" height="15" fill="rgb(253,106,12)"/><text x="12.9082%" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="13.9241%" y="1540" width="1.2658%" height="15" fill="rgb(213,46,41)"/><text x="14.1741%" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="13.9241%" y="1556" width="1.2658%" height="15" fill="rgb(215,133,35)"/><text x="14.1741%" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="13.9241%" y="1572" width="1.2658%" height="15" fill="rgb(213,28,5)"/><text x="14.1741%" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="13.9241%" y="1588" width="1.2658%" height="15" fill="rgb(215,77,49)"/><text x="14.1741%" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="13.9241%" y="1604" width="1.2658%" height="15" fill="rgb(248,100,22)"/><text x="14.1741%" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="13.9241%" y="1620" width="1.2658%" height="15" fill="rgb(208,67,9)"/><text x="14.1741%" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 1.27%)</title><rect x="13.9241%" y="1636" width="1.2658%" height="15" fill="rgb(219,133,21)"/><text x="14.1741%" y="1646.50"></text></g><g><title>rc_params (matplotlib/__init__.py) (1 samples, 1.27%)</title><rect x="13.9241%" y="1652" width="1.2658%" height="15" fill="rgb(246,46,29)"/><text x="14.1741%" y="1662.50"></text></g><g><title>rc_params_from_file (matplotlib/__init__.py) (1 samples, 1.27%)</title><rect x="13.9241%" y="1668" width="1.2658%" height="15" fill="rgb(246,185,52)"/><text x="14.1741%" y="1678.50"></text></g><g><title>__init__ (matplotlib/__init__.py) (1 samples, 1.27%)</title><rect x="13.9241%" y="1684" width="1.2658%" height="15" fill="rgb(252,136,11)"/><text x="14.1741%" y="1694.50"></text></g><g><title>update (_collections_abc.py) (1 samples, 1.27%)</title><rect x="13.9241%" y="1700" width="1.2658%" height="15" fill="rgb(219,138,53)"/><text x="14.1741%" y="1710.50"></text></g><g><title>__setitem__ (matplotlib/__init__.py) (1 samples, 1.27%)</title><rect x="13.9241%" y="1716" width="1.2658%" height="15" fill="rgb(211,51,23)"/><text x="14.1741%" y="1726.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 3.80%)</title><rect x="12.6582%" y="1012" width="3.7975%" height="15" fill="rgb(247,221,28)"/><text x="12.9082%" y="1022.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="12.6582%" y="1028" width="3.7975%" height="15" fill="rgb(251,222,45)"/><text x="12.9082%" y="1038.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="12.6582%" y="1044" width="3.7975%" height="15" fill="rgb(217,162,53)"/><text x="12.9082%" y="1054.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="12.6582%" y="1060" width="3.7975%" height="15" fill="rgb(229,93,14)"/><text x="12.9082%" y="1070.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 3.80%)</title><rect x="12.6582%" y="1076" width="3.7975%" height="15" fill="rgb(209,67,49)"/><text x="12.9082%" y="1086.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 3.80%)</title><rect x="12.6582%" y="1092" width="3.7975%" height="15" fill="rgb(213,87,29)"/><text x="12.9082%" y="1102.50">_cal..</text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 2.53%)</title><rect x="13.9241%" y="1108" width="2.5316%" height="15" fill="rgb(205,151,52)"/><text x="14.1741%" y="1118.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1124" width="2.5316%" height="15" fill="rgb(253,215,39)"/><text x="14.1741%" y="1134.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1140" width="2.5316%" height="15" fill="rgb(221,220,41)"/><text x="14.1741%" y="1150.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1156" width="2.5316%" height="15" fill="rgb(218,133,21)"/><text x="14.1741%" y="1166.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1172" width="2.5316%" height="15" fill="rgb(221,193,43)"/><text x="14.1741%" y="1182.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1188" width="2.5316%" height="15" fill="rgb(240,128,52)"/><text x="14.1741%" y="1198.50">_c..</text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 2.53%)</title><rect x="13.9241%" y="1204" width="2.5316%" height="15" fill="rgb(253,114,12)"/><text x="14.1741%" y="1214.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1220" width="2.5316%" height="15" fill="rgb(215,223,47)"/><text x="14.1741%" y="1230.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1236" width="2.5316%" height="15" fill="rgb(248,225,23)"/><text x="14.1741%" y="1246.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1252" width="2.5316%" height="15" fill="rgb(250,108,0)"/><text x="14.1741%" y="1262.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1268" width="2.5316%" height="15" fill="rgb(228,208,7)"/><text x="14.1741%" y="1278.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1284" width="2.5316%" height="15" fill="rgb(244,45,10)"/><text x="14.1741%" y="1294.50">_c..</text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 2.53%)</title><rect x="13.9241%" y="1300" width="2.5316%" height="15" fill="rgb(207,125,25)"/><text x="14.1741%" y="1310.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1316" width="2.5316%" height="15" fill="rgb(210,195,18)"/><text x="14.1741%" y="1326.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1332" width="2.5316%" height="15" fill="rgb(249,80,12)"/><text x="14.1741%" y="1342.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1348" width="2.5316%" height="15" fill="rgb(221,65,9)"/><text x="14.1741%" y="1358.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1364" width="2.5316%" height="15" fill="rgb(235,49,36)"/><text x="14.1741%" y="1374.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1380" width="2.5316%" height="15" fill="rgb(225,32,20)"/><text x="14.1741%" y="1390.50">_c..</text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 2.53%)</title><rect x="13.9241%" y="1396" width="2.5316%" height="15" fill="rgb(215,141,46)"/><text x="14.1741%" y="1406.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1412" width="2.5316%" height="15" fill="rgb(250,160,47)"/><text x="14.1741%" y="1422.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1428" width="2.5316%" height="15" fill="rgb(216,222,40)"/><text x="14.1741%" y="1438.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1444" width="2.5316%" height="15" fill="rgb(234,217,39)"/><text x="14.1741%" y="1454.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1460" width="2.5316%" height="15" fill="rgb(207,178,40)"/><text x="14.1741%" y="1470.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1476" width="2.5316%" height="15" fill="rgb(221,136,13)"/><text x="14.1741%" y="1486.50">_c..</text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 2.53%)</title><rect x="13.9241%" y="1492" width="2.5316%" height="15" fill="rgb(249,199,10)"/><text x="14.1741%" y="1502.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1508" width="2.5316%" height="15" fill="rgb(249,222,13)"/><text x="14.1741%" y="1518.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 2.53%)</title><rect x="13.9241%" y="1524" width="2.5316%" height="15" fill="rgb(244,185,38)"/><text x="14.1741%" y="1534.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1540" width="1.2658%" height="15" fill="rgb(236,202,9)"/><text x="15.4399%" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1556" width="1.2658%" height="15" fill="rgb(250,229,37)"/><text x="15.4399%" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1572" width="1.2658%" height="15" fill="rgb(206,174,23)"/><text x="15.4399%" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (1 samples, 1.27%)</title><rect x="15.1899%" y="1588" width="1.2658%" height="15" fill="rgb(211,33,43)"/><text x="15.4399%" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1604" width="1.2658%" height="15" fill="rgb(245,58,50)"/><text x="15.4399%" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1620" width="1.2658%" height="15" fill="rgb(244,68,36)"/><text x="15.4399%" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1636" width="1.2658%" height="15" fill="rgb(232,229,15)"/><text x="15.4399%" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1652" width="1.2658%" height="15" fill="rgb(254,30,23)"/><text x="15.4399%" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1668" width="1.2658%" height="15" fill="rgb(235,160,14)"/><text x="15.4399%" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/style.py) (1 samples, 1.27%)</title><rect x="15.1899%" y="1684" width="1.2658%" height="15" fill="rgb(212,155,44)"/><text x="15.4399%" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1700" width="1.2658%" height="15" fill="rgb(226,2,50)"/><text x="15.4399%" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1716" width="1.2658%" height="15" fill="rgb(234,177,6)"/><text x="15.4399%" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1732" width="1.2658%" height="15" fill="rgb(217,24,9)"/><text x="15.4399%" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1748" width="1.2658%" height="15" fill="rgb(220,13,46)"/><text x="15.4399%" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1764" width="1.2658%" height="15" fill="rgb(239,221,27)"/><text x="15.4399%" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/cm.py) (1 samples, 1.27%)</title><rect x="15.1899%" y="1780" width="1.2658%" height="15" fill="rgb(222,198,25)"/><text x="15.4399%" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1796" width="1.2658%" height="15" fill="rgb(211,99,13)"/><text x="15.4399%" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1812" width="1.2658%" height="15" fill="rgb(232,111,31)"/><text x="15.4399%" y="1822.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1828" width="1.2658%" height="15" fill="rgb(245,82,37)"/><text x="15.4399%" y="1838.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1844" width="1.2658%" height="15" fill="rgb(227,149,46)"/><text x="15.4399%" y="1854.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1860" width="1.2658%" height="15" fill="rgb(218,36,50)"/><text x="15.4399%" y="1870.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1876" width="1.2658%" height="15" fill="rgb(226,80,48)"/><text x="15.4399%" y="1886.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1892" width="1.2658%" height="15" fill="rgb(238,224,15)"/><text x="15.4399%" y="1902.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="15.1899%" y="1908" width="1.2658%" height="15" fill="rgb(241,136,10)"/><text x="15.4399%" y="1918.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 12.66%)</title><rect x="5.0633%" y="340" width="12.6582%" height="15" fill="rgb(208,32,45)"/><text x="5.3133%" y="350.50">&lt;module&gt; (mlprodict..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="356" width="12.6582%" height="15" fill="rgb(207,135,9)"/><text x="5.3133%" y="366.50">_find_and_load (&lt;fr..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="372" width="12.6582%" height="15" fill="rgb(206,86,44)"/><text x="5.3133%" y="382.50">_find_and_load_unlo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="388" width="12.6582%" height="15" fill="rgb(245,177,15)"/><text x="5.3133%" y="398.50">_load_unlocked (&lt;fr..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="404" width="12.6582%" height="15" fill="rgb(206,64,50)"/><text x="5.3133%" y="414.50">exec_module (&lt;froze..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="420" width="12.6582%" height="15" fill="rgb(234,36,40)"/><text x="5.3133%" y="430.50">_call_with_frames_r..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (10 samples, 12.66%)</title><rect x="5.0633%" y="436" width="12.6582%" height="15" fill="rgb(213,64,8)"/><text x="5.3133%" y="446.50">&lt;module&gt; (mlprodict..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="452" width="12.6582%" height="15" fill="rgb(210,75,36)"/><text x="5.3133%" y="462.50">_find_and_load (&lt;fr..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 12.66%)</title><rect x="5.0633%" y="468" width="12.6582%" height="15" fill="rgb(229,88,21)"/><text x="5.3133%" y="478.50">_find_and_load_unlo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="484" width="7.5949%" height="15" fill="rgb(252,204,47)"/><text x="10.3766%" y="494.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="500" width="7.5949%" height="15" fill="rgb(208,77,27)"/><text x="10.3766%" y="510.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="516" width="7.5949%" height="15" fill="rgb(221,76,26)"/><text x="10.3766%" y="526.50">_call_with..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (6 samples, 7.59%)</title><rect x="10.1266%" y="532" width="7.5949%" height="15" fill="rgb(225,139,18)"/><text x="10.3766%" y="542.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="548" width="7.5949%" height="15" fill="rgb(230,137,11)"/><text x="10.3766%" y="558.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="564" width="7.5949%" height="15" fill="rgb(212,28,1)"/><text x="10.3766%" y="574.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="580" width="7.5949%" height="15" fill="rgb(248,164,17)"/><text x="10.3766%" y="590.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="596" width="7.5949%" height="15" fill="rgb(222,171,42)"/><text x="10.3766%" y="606.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="612" width="7.5949%" height="15" fill="rgb(243,84,45)"/><text x="10.3766%" y="622.50">_call_with..</text></g><g><title>&lt;module&gt; (pandas/__init__.py) (6 samples, 7.59%)</title><rect x="10.1266%" y="628" width="7.5949%" height="15" fill="rgb(252,49,23)"/><text x="10.3766%" y="638.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="644" width="7.5949%" height="15" fill="rgb(215,19,7)"/><text x="10.3766%" y="654.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="660" width="7.5949%" height="15" fill="rgb(238,81,41)"/><text x="10.3766%" y="670.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="676" width="7.5949%" height="15" fill="rgb(210,199,37)"/><text x="10.3766%" y="686.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="692" width="7.5949%" height="15" fill="rgb(244,192,49)"/><text x="10.3766%" y="702.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="708" width="7.5949%" height="15" fill="rgb(226,211,11)"/><text x="10.3766%" y="718.50">_call_with..</text></g><g><title>&lt;module&gt; (pandas/core/api.py) (6 samples, 7.59%)</title><rect x="10.1266%" y="724" width="7.5949%" height="15" fill="rgb(236,162,54)"/><text x="10.3766%" y="734.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="740" width="7.5949%" height="15" fill="rgb(220,229,9)"/><text x="10.3766%" y="750.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 7.59%)</title><rect x="10.1266%" y="756" width="7.5949%" height="15" fill="rgb(250,87,22)"/><text x="10.3766%" y="766.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="772" width="5.0633%" height="15" fill="rgb(239,43,17)"/><text x="12.9082%" y="782.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="788" width="5.0633%" height="15" fill="rgb(231,177,25)"/><text x="12.9082%" y="798.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="804" width="5.0633%" height="15" fill="rgb(219,179,1)"/><text x="12.9082%" y="814.50">_call_..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 5.06%)</title><rect x="12.6582%" y="820" width="5.0633%" height="15" fill="rgb(238,219,53)"/><text x="12.9082%" y="830.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="836" width="5.0633%" height="15" fill="rgb(232,167,36)"/><text x="12.9082%" y="846.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="852" width="5.0633%" height="15" fill="rgb(244,19,51)"/><text x="12.9082%" y="862.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="868" width="5.0633%" height="15" fill="rgb(224,6,22)"/><text x="12.9082%" y="878.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="884" width="5.0633%" height="15" fill="rgb(224,145,5)"/><text x="12.9082%" y="894.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="900" width="5.0633%" height="15" fill="rgb(234,130,49)"/><text x="12.9082%" y="910.50">_call_..</text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 5.06%)</title><rect x="12.6582%" y="916" width="5.0633%" height="15" fill="rgb(254,6,2)"/><text x="12.9082%" y="926.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="932" width="5.0633%" height="15" fill="rgb(208,96,46)"/><text x="12.9082%" y="942.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="948" width="5.0633%" height="15" fill="rgb(239,3,39)"/><text x="12.9082%" y="958.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="964" width="5.0633%" height="15" fill="rgb(233,210,1)"/><text x="12.9082%" y="974.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="980" width="5.0633%" height="15" fill="rgb(244,137,37)"/><text x="12.9082%" y="990.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 5.06%)</title><rect x="12.6582%" y="996" width="5.0633%" height="15" fill="rgb(240,136,2)"/><text x="12.9082%" y="1006.50">_call_..</text></g><g><title>&lt;module&gt; (pandas/core/sparse/frame.py) (1 samples, 1.27%)</title><rect x="16.4557%" y="1012" width="1.2658%" height="15" fill="rgb(239,18,37)"/><text x="16.7057%" y="1022.50"></text></g><g><title>add_flex_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 1.27%)</title><rect x="16.4557%" y="1028" width="1.2658%" height="15" fill="rgb(218,185,22)"/><text x="16.7057%" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 1.27%)</title><rect x="16.4557%" y="1044" width="1.2658%" height="15" fill="rgb(225,218,4)"/><text x="16.7057%" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 1.27%)</title><rect x="16.4557%" y="1060" width="1.2658%" height="15" fill="rgb(230,182,32)"/><text x="16.7057%" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 1.27%)</title><rect x="16.4557%" y="1076" width="1.2658%" height="15" fill="rgb(242,56,43)"/><text x="16.7057%" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 1.27%)</title><rect x="16.4557%" y="1092" width="1.2658%" height="15" fill="rgb(233,99,24)"/><text x="16.7057%" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 1.27%)</title><rect x="16.4557%" y="1108" width="1.2658%" height="15" fill="rgb(234,209,42)"/><text x="16.7057%" y="1118.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 1.27%)</title><rect x="16.4557%" y="1124" width="1.2658%" height="15" fill="rgb(227,7,12)"/><text x="16.7057%" y="1134.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 1.27%)</title><rect x="16.4557%" y="1140" width="1.2658%" height="15" fill="rgb(245,203,43)"/><text x="16.7057%" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="68" width="18.9873%" height="15" fill="rgb(238,205,33)"/><text x="0.2500%" y="78.50">_find_and_load (&lt;frozen import..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="84" width="18.9873%" height="15" fill="rgb(231,56,7)"/><text x="0.2500%" y="94.50">_find_and_load_unlocked (&lt;froz..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="100" width="18.9873%" height="15" fill="rgb(244,186,29)"/><text x="0.2500%" y="110.50">_load_unlocked (&lt;frozen import..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="116" width="18.9873%" height="15" fill="rgb(234,111,31)"/><text x="0.2500%" y="126.50">exec_module (&lt;frozen importlib..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="132" width="18.9873%" height="15" fill="rgb(241,149,10)"/><text x="0.2500%" y="142.50">_call_with_frames_removed (&lt;fr..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostReg_default_b_reg_n_estimators5.py) (15 samples, 18.99%)</title><rect x="0.0000%" y="148" width="18.9873%" height="15" fill="rgb(249,206,44)"/><text x="0.2500%" y="158.50">&lt;module&gt; (profiles/benches/ens..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="164" width="18.9873%" height="15" fill="rgb(251,153,30)"/><text x="0.2500%" y="174.50">_find_and_load (&lt;frozen import..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 18.99%)</title><rect x="0.0000%" y="180" width="18.9873%" height="15" fill="rgb(239,152,38)"/><text x="0.2500%" y="190.50">_find_and_load_unlocked (&lt;froz..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="196" width="13.9241%" height="15" fill="rgb(249,139,47)"/><text x="5.3133%" y="206.50">_load_unlocked (&lt;froz..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="212" width="13.9241%" height="15" fill="rgb(244,64,35)"/><text x="5.3133%" y="222.50">exec_module (&lt;frozen ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="228" width="13.9241%" height="15" fill="rgb(216,46,15)"/><text x="5.3133%" y="238.50">_call_with_frames_rem..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (11 samples, 13.92%)</title><rect x="5.0633%" y="244" width="13.9241%" height="15" fill="rgb(250,74,19)"/><text x="5.3133%" y="254.50">&lt;module&gt; (mlprodict/a..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="260" width="13.9241%" height="15" fill="rgb(249,42,33)"/><text x="5.3133%" y="270.50">_find_and_load (&lt;froz..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="276" width="13.9241%" height="15" fill="rgb(242,149,17)"/><text x="5.3133%" y="286.50">_find_and_load_unlock..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="292" width="13.9241%" height="15" fill="rgb(244,29,21)"/><text x="5.3133%" y="302.50">_load_unlocked (&lt;froz..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="308" width="13.9241%" height="15" fill="rgb(220,130,37)"/><text x="5.3133%" y="318.50">exec_module (&lt;frozen ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (11 samples, 13.92%)</title><rect x="5.0633%" y="324" width="13.9241%" height="15" fill="rgb(211,67,2)"/><text x="5.3133%" y="334.50">_call_with_frames_rem..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 1.27%)</title><rect x="17.7215%" y="340" width="1.2658%" height="15" fill="rgb(235,68,52)"/><text x="17.9715%" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="356" width="1.2658%" height="15" fill="rgb(246,142,3)"/><text x="17.9715%" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="372" width="1.2658%" height="15" fill="rgb(241,25,7)"/><text x="17.9715%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="388" width="1.2658%" height="15" fill="rgb(242,119,39)"/><text x="17.9715%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="404" width="1.2658%" height="15" fill="rgb(241,98,45)"/><text x="17.9715%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="420" width="1.2658%" height="15" fill="rgb(254,28,30)"/><text x="17.9715%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="436" width="1.2658%" height="15" fill="rgb(241,142,54)"/><text x="17.9715%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="452" width="1.2658%" height="15" fill="rgb(222,85,15)"/><text x="17.9715%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="468" width="1.2658%" height="15" fill="rgb(210,85,47)"/><text x="17.9715%" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 1.27%)</title><rect x="17.7215%" y="484" width="1.2658%" height="15" fill="rgb(224,206,25)"/><text x="17.9715%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="500" width="1.2658%" height="15" fill="rgb(243,201,19)"/><text x="17.9715%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="516" width="1.2658%" height="15" fill="rgb(236,59,4)"/><text x="17.9715%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="532" width="1.2658%" height="15" fill="rgb(254,179,45)"/><text x="17.9715%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="548" width="1.2658%" height="15" fill="rgb(226,14,10)"/><text x="17.9715%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="564" width="1.2658%" height="15" fill="rgb(244,27,41)"/><text x="17.9715%" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 1.27%)</title><rect x="17.7215%" y="580" width="1.2658%" height="15" fill="rgb(235,35,32)"/><text x="17.9715%" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="596" width="1.2658%" height="15" fill="rgb(218,68,31)"/><text x="17.9715%" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="612" width="1.2658%" height="15" fill="rgb(207,120,37)"/><text x="17.9715%" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="628" width="1.2658%" height="15" fill="rgb(227,98,0)"/><text x="17.9715%" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="644" width="1.2658%" height="15" fill="rgb(207,7,3)"/><text x="17.9715%" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="660" width="1.2658%" height="15" fill="rgb(206,98,19)"/><text x="17.9715%" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 1.27%)</title><rect x="17.7215%" y="676" width="1.2658%" height="15" fill="rgb(217,5,26)"/><text x="17.9715%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="692" width="1.2658%" height="15" fill="rgb(235,190,38)"/><text x="17.9715%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="708" width="1.2658%" height="15" fill="rgb(247,86,24)"/><text x="17.9715%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="724" width="1.2658%" height="15" fill="rgb(205,101,16)"/><text x="17.9715%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="740" width="1.2658%" height="15" fill="rgb(246,168,33)"/><text x="17.9715%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="756" width="1.2658%" height="15" fill="rgb(231,114,1)"/><text x="17.9715%" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 1.27%)</title><rect x="17.7215%" y="772" width="1.2658%" height="15" fill="rgb(207,184,53)"/><text x="17.9715%" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="788" width="1.2658%" height="15" fill="rgb(224,95,51)"/><text x="17.9715%" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="804" width="1.2658%" height="15" fill="rgb(212,188,45)"/><text x="17.9715%" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="820" width="1.2658%" height="15" fill="rgb(223,154,38)"/><text x="17.9715%" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="836" width="1.2658%" height="15" fill="rgb(251,22,52)"/><text x="17.9715%" y="846.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="852" width="1.2658%" height="15" fill="rgb(229,209,22)"/><text x="17.9715%" y="862.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="17.7215%" y="868" width="1.2658%" height="15" fill="rgb(234,138,34)"/><text x="17.9715%" y="878.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;) (1 samples, 1.27%)</title><rect x="18.9873%" y="180" width="1.2658%" height="15" fill="rgb(212,95,11)"/><text x="19.2373%" y="190.50"></text></g><g><title>0x7f240bcf875d (?) (1 samples, 1.27%)</title><rect x="18.9873%" y="196" width="1.2658%" height="15" fill="rgb(240,179,47)"/><text x="19.2373%" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py) (1 samples, 1.27%)</title><rect x="18.9873%" y="212" width="1.2658%" height="15" fill="rgb(240,163,11)"/><text x="19.2373%" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 1.27%)</title><rect x="18.9873%" y="228" width="1.2658%" height="15" fill="rgb(236,37,12)"/><text x="19.2373%" y="238.50"></text></g><g><title>0x7f240bd9b0d9 (?) (1 samples, 1.27%)</title><rect x="18.9873%" y="244" width="1.2658%" height="15" fill="rgb(232,164,16)"/><text x="19.2373%" y="254.50"></text></g><g><title>0x7f240bd5c670 (?) (1 samples, 1.27%)</title><rect x="18.9873%" y="260" width="1.2658%" height="15" fill="rgb(244,205,15)"/><text x="19.2373%" y="270.50"></text></g><g><title>0x7f240bd591ea (?) (1 samples, 1.27%)</title><rect x="18.9873%" y="276" width="1.2658%" height="15" fill="rgb(223,117,47)"/><text x="19.2373%" y="286.50"></text></g><g><title>0x7f240bf46159 (?) (1 samples, 1.27%)</title><rect x="18.9873%" y="292" width="1.2658%" height="15" fill="rgb(244,107,35)"/><text x="19.2373%" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 1.27%)</title><rect x="20.2532%" y="212" width="1.2658%" height="15" fill="rgb(205,140,8)"/><text x="20.5032%" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="20.2532%" y="228" width="1.2658%" height="15" fill="rgb(228,84,46)"/><text x="20.5032%" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="20.2532%" y="244" width="1.2658%" height="15" fill="rgb(254,188,9)"/><text x="20.5032%" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 1.27%)</title><rect x="20.2532%" y="260" width="1.2658%" height="15" fill="rgb(206,112,54)"/><text x="20.5032%" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 1.27%)</title><rect x="20.2532%" y="276" width="1.2658%" height="15" fill="rgb(216,84,49)"/><text x="20.5032%" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 1.27%)</title><rect x="20.2532%" y="292" width="1.2658%" height="15" fill="rgb(214,194,35)"/><text x="20.5032%" y="302.50"></text></g><g><title>array_multiply (number.c) (2 samples, 2.53%)</title><rect x="20.2532%" y="180" width="2.5316%" height="15" fill="rgb(249,28,3)"/><text x="20.5032%" y="190.50">ar..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (2 samples, 2.53%)</title><rect x="20.2532%" y="196" width="2.5316%" height="15" fill="rgb(222,56,52)"/><text x="20.5032%" y="206.50">uf..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 1.27%)</title><rect x="21.5190%" y="212" width="1.2658%" height="15" fill="rgb(245,217,50)"/><text x="21.7690%" y="222.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 1.27%)</title><rect x="21.5190%" y="228" width="1.2658%" height="15" fill="rgb(213,201,24)"/><text x="21.7690%" y="238.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 1.27%)</title><rect x="21.5190%" y="244" width="1.2658%" height="15" fill="rgb(248,116,28)"/><text x="21.7690%" y="254.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c) (1 samples, 1.27%)</title><rect x="22.7848%" y="228" width="1.2658%" height="15" fill="rgb(219,72,43)"/><text x="23.0348%" y="238.50"></text></g><g><title>ufunc_get_name_cstr (ufunc_object.c) (1 samples, 1.27%)</title><rect x="22.7848%" y="244" width="1.2658%" height="15" fill="rgb(209,138,14)"/><text x="23.0348%" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 1.27%)</title><rect x="24.0506%" y="260" width="1.2658%" height="15" fill="rgb(222,18,33)"/><text x="24.3006%" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 1.27%)</title><rect x="24.0506%" y="276" width="1.2658%" height="15" fill="rgb(213,199,7)"/><text x="24.3006%" y="286.50"></text></g><g><title>profile0_skl (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="68" width="7.5949%" height="15" fill="rgb(250,110,10)"/><text x="19.2373%" y="78.50">profile0_s..</text></g><g><title>setup_profile0 (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="84" width="7.5949%" height="15" fill="rgb(248,123,6)"/><text x="19.2373%" y="94.50">setup_prof..</text></g><g><title>profile0 (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="100" width="7.5949%" height="15" fill="rgb(206,91,31)"/><text x="19.2373%" y="110.50">profile0 (..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="116" width="7.5949%" height="15" fill="rgb(211,154,13)"/><text x="19.2373%" y="126.50">time_predi..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="132" width="7.5949%" height="15" fill="rgb(225,148,7)"/><text x="19.2373%" y="142.50">&lt;lambda&gt; (..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="148" width="7.5949%" height="15" fill="rgb(220,160,43)"/><text x="19.2373%" y="158.50">predict (s..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (6 samples, 7.59%)</title><rect x="18.9873%" y="164" width="7.5949%" height="15" fill="rgb(213,52,39)"/><text x="19.2373%" y="174.50">_get_media..</text></g><g><title>array_richcompare (arrayobject.c) (3 samples, 3.80%)</title><rect x="22.7848%" y="180" width="3.7975%" height="15" fill="rgb(243,137,7)"/><text x="23.0348%" y="190.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (3 samples, 3.80%)</title><rect x="22.7848%" y="196" width="3.7975%" height="15" fill="rgb(230,79,13)"/><text x="23.0348%" y="206.50">ufun..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (3 samples, 3.80%)</title><rect x="22.7848%" y="212" width="3.7975%" height="15" fill="rgb(247,105,23)"/><text x="23.0348%" y="222.50">PyUF..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 2.53%)</title><rect x="24.0506%" y="228" width="2.5316%" height="15" fill="rgb(223,179,41)"/><text x="24.3006%" y="238.50">ex..</text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 2.53%)</title><rect x="24.0506%" y="244" width="2.5316%" height="15" fill="rgb(218,9,34)"/><text x="24.3006%" y="254.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 1.27%)</title><rect x="25.3165%" y="260" width="1.2658%" height="15" fill="rgb(222,106,8)"/><text x="25.5665%" y="270.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 1.27%)</title><rect x="25.3165%" y="276" width="1.2658%" height="15" fill="rgb(211,220,0)"/><text x="25.5665%" y="286.50"></text></g><g><title>PyArray_TransferNDimToStrided (lowlevel_strided_loops.c.src) (1 samples, 1.27%)</title><rect x="25.3165%" y="292" width="1.2658%" height="15" fill="rgb(229,52,16)"/><text x="25.5665%" y="302.50"></text></g><g><title>_aligned_strided_to_contig_size8_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 1.27%)</title><rect x="25.3165%" y="308" width="1.2658%" height="15" fill="rgb(212,155,18)"/><text x="25.5665%" y="318.50"></text></g><g><title>0x7f23d234c6a9 (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="212" width="1.2658%" height="15" fill="rgb(242,21,14)"/><text x="28.0981%" y="222.50"></text></g><g><title>0x7f23d235d8df (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="228" width="1.2658%" height="15" fill="rgb(222,19,48)"/><text x="28.0981%" y="238.50"></text></g><g><title>0x7f23d23734d1 (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="244" width="1.2658%" height="15" fill="rgb(232,45,27)"/><text x="28.0981%" y="254.50"></text></g><g><title>0x7f23d23730e9 (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="260" width="1.2658%" height="15" fill="rgb(249,103,42)"/><text x="28.0981%" y="270.50"></text></g><g><title>0x7f23d280f188 (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="276" width="1.2658%" height="15" fill="rgb(246,81,33)"/><text x="28.0981%" y="286.50"></text></g><g><title>0x7f23d280cba0 (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="292" width="1.2658%" height="15" fill="rgb(252,33,42)"/><text x="28.0981%" y="302.50"></text></g><g><title>0x7f23d282033c (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="308" width="1.2658%" height="15" fill="rgb(209,212,41)"/><text x="28.0981%" y="318.50"></text></g><g><title>0x7f23d261846e (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="324" width="1.2658%" height="15" fill="rgb(207,154,6)"/><text x="28.0981%" y="334.50"></text></g><g><title>0x7f23d2612751 (?) (1 samples, 1.27%)</title><rect x="27.8481%" y="340" width="1.2658%" height="15" fill="rgb(223,64,47)"/><text x="28.0981%" y="350.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="29.1139%" y="324" width="2.5316%" height="15" fill="rgb(211,161,38)"/><text x="29.3639%" y="334.50">on..</text></g><g><title>(anonymous namespace)::SumSlices&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="29.1139%" y="340" width="2.5316%" height="15" fill="rgb(219,138,40)"/><text x="29.3639%" y="350.50">(a..</text></g><g><title>onnxruntime::GraphViewer::GetNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="31.6456%" y="324" width="1.2658%" height="15" fill="rgb(241,228,46)"/><text x="31.8956%" y="334.50"></text></g><g><title>onnxruntime::Less&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="32.9114%" y="324" width="1.2658%" height="15" fill="rgb(223,209,38)"/><text x="33.1614%" y="334.50"></text></g><g><title>onnxruntime::BroadcastTwo&lt;float, bool, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Less&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;bool, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="32.9114%" y="340" width="1.2658%" height="15" fill="rgb(236,164,45)"/><text x="33.1614%" y="350.50"></text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="32.9114%" y="356" width="1.2658%" height="15" fill="rgb(231,15,5)"/><text x="33.1614%" y="366.50"></text></g><g><title>onnxruntime::Mul&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="34.1772%" y="324" width="2.5316%" height="15" fill="rgb(252,35,15)"/><text x="34.4272%" y="334.50">on..</text></g><g><title>onnxruntime::BroadcastTwo&lt;float, float, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="34.1772%" y="340" width="2.5316%" height="15" fill="rgb(248,181,18)"/><text x="34.4272%" y="350.50">on..</text></g><g><title>onnxruntime::BroadcastLoop&lt;onnxruntime::TBroadcaster&lt;float, float&gt;, onnxruntime::TBroadcastOutput&lt;float&gt;, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#1}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, float)#2}, onnxruntime::Mul&lt;float&gt;::Compute(onnxruntime::OpKernelContext*) const::{lambda(Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt;, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;, Eigen::Map&lt;Eigen::Matrix&lt;float, -1, 1, 0, -1, 1&gt; const, 0, Eigen::Stride&lt;0, 0&gt; &gt;)#3}&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="34.1772%" y="356" width="2.5316%" height="15" fill="rgb(233,39,42)"/><text x="34.4272%" y="366.50">on..</text></g><g><title>onnxruntime::BroadcastIterator::AdvanceBy (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="34.1772%" y="372" width="2.5316%" height="15" fill="rgb(238,110,33)"/><text x="34.4272%" y="382.50">on..</text></g><g><title>0x7f240cc4fe61 (libm-2.29.so) (1 samples, 1.27%)</title><rect x="44.3038%" y="372" width="1.2658%" height="15" fill="rgb(233,195,10)"/><text x="44.5538%" y="382.50"></text></g><g><title>0x7f240cc4fe7e (libm-2.29.so) (1 samples, 1.27%)</title><rect x="45.5696%" y="372" width="1.2658%" height="15" fill="rgb(254,105,3)"/><text x="45.8196%" y="382.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 2.53%)</title><rect x="46.8354%" y="372" width="2.5316%" height="15" fill="rgb(221,225,9)"/><text x="47.0854%" y="382.50">st..</text></g><g><title>0x7f23fc6d07a0 (libstdc++.so.6.0.28) (1 samples, 1.27%)</title><rect x="49.3671%" y="388" width="1.2658%" height="15" fill="rgb(224,227,45)"/><text x="49.6171%" y="398.50"></text></g><g><title>0x7f23fc6cfd50 (libstdc++.so.6.0.28) (1 samples, 1.27%)</title><rect x="50.6329%" y="404" width="1.2658%" height="15" fill="rgb(229,198,43)"/><text x="50.8829%" y="414.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 16.46%)</title><rect x="36.7089%" y="324" width="16.4557%" height="15" fill="rgb(206,209,35)"/><text x="36.9589%" y="334.50">onnxruntime::TopK&lt;11, flo..</text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 16.46%)</title><rect x="36.7089%" y="340" width="16.4557%" height="15" fill="rgb(245,195,53)"/><text x="36.9589%" y="350.50">onnxruntime::TopKImpl (on..</text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 16.46%)</title><rect x="36.7089%" y="356" width="16.4557%" height="15" fill="rgb(240,92,26)"/><text x="36.9589%" y="366.50">onnxruntime::extract_top_..</text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 3.80%)</title><rect x="49.3671%" y="372" width="3.7975%" height="15" fill="rgb(207,40,23)"/><text x="49.6171%" y="382.50">std:..</text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 2.53%)</title><rect x="50.6329%" y="388" width="2.5316%" height="15" fill="rgb(223,111,35)"/><text x="50.8829%" y="398.50">op..</text></g><g><title>malloc (libc-2.29.so) (1 samples, 1.27%)</title><rect x="51.8987%" y="404" width="1.2658%" height="15" fill="rgb(229,147,28)"/><text x="52.1487%" y="414.50"></text></g><g><title>onnxruntime::ml::ArrayFeatureExtractorOp&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="53.1646%" y="324" width="1.2658%" height="15" fill="rgb(211,29,28)"/><text x="53.4146%" y="334.50"></text></g><g><title>profile_ort (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="68" width="29.1139%" height="15" fill="rgb(228,72,33)"/><text x="26.8323%" y="78.50">profile_ort (bench_AdaBoostReg_default_b_reg_n_..</text></g><g><title>setup_profile (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="84" width="29.1139%" height="15" fill="rgb(205,214,31)"/><text x="26.8323%" y="94.50">setup_profile (bench_AdaBoostReg_default_b_reg_..</text></g><g><title>profile (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="100" width="29.1139%" height="15" fill="rgb(224,111,15)"/><text x="26.8323%" y="110.50">profile (bench_AdaBoostReg_default_b_reg_n_esti..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="116" width="29.1139%" height="15" fill="rgb(253,21,26)"/><text x="26.8323%" y="126.50">time_predict (mlprodict/asv_benchmark/common_as..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="132" width="29.1139%" height="15" fill="rgb(245,139,43)"/><text x="26.8323%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_sk..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="148" width="29.1139%" height="15" fill="rgb(252,170,7)"/><text x="26.8323%" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (23 samples, 29.11%)</title><rect x="26.5823%" y="164" width="29.1139%" height="15" fill="rgb(231,118,14)"/><text x="26.8323%" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_infer..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (22 samples, 27.85%)</title><rect x="27.8481%" y="180" width="27.8481%" height="15" fill="rgb(238,83,0)"/><text x="28.0981%" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (22 samples, 27.85%)</title><rect x="27.8481%" y="196" width="27.8481%" height="15" fill="rgb(221,39,39)"/><text x="28.0981%" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="212" width="26.5823%" height="15" fill="rgb(222,119,46)"/><text x="29.3639%" y="222.50">pybind11::cpp_function::dispatcher (onnxrun..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="228" width="26.5823%" height="15" fill="rgb(222,165,49)"/><text x="29.3639%" y="238.50">void pybind11::cpp_function::initialize&lt;onn..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="244" width="26.5823%" height="15" fill="rgb(219,113,52)"/><text x="29.3639%" y="254.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="260" width="26.5823%" height="15" fill="rgb(214,7,15)"/><text x="29.3639%" y="270.50">onnxruntime::InferenceSession::Run (onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="276" width="26.5823%" height="15" fill="rgb(235,32,4)"/><text x="29.3639%" y="286.50">onnxruntime::utils::ExecuteGraph (onnxrunti..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="292" width="26.5823%" height="15" fill="rgb(238,90,54)"/><text x="29.3639%" y="302.50">onnxruntime::utils::ExecuteGraphImpl (onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 26.58%)</title><rect x="29.1139%" y="308" width="26.5823%" height="15" fill="rgb(213,208,19)"/><text x="29.3639%" y="318.50">onnxruntime::SequentialExecutor::Execute (o..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="54.4304%" y="324" width="1.2658%" height="15" fill="rgb(233,156,4)"/><text x="54.6804%" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 1.27%)</title><rect x="54.4304%" y="340" width="1.2658%" height="15" fill="rgb(207,194,5)"/><text x="54.6804%" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 1.27%)</title><rect x="55.6962%" y="180" width="1.2658%" height="15" fill="rgb(206,111,30)"/><text x="55.9462%" y="190.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 1.27%)</title><rect x="55.6962%" y="196" width="1.2658%" height="15" fill="rgb(243,70,54)"/><text x="55.9462%" y="206.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 1.27%)</title><rect x="55.6962%" y="212" width="1.2658%" height="15" fill="rgb(242,28,8)"/><text x="55.9462%" y="222.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 1.27%)</title><rect x="55.6962%" y="228" width="1.2658%" height="15" fill="rgb(219,106,18)"/><text x="55.9462%" y="238.50"></text></g><g><title>0x7f240ca7db97 (libc-2.29.so) (1 samples, 1.27%)</title><rect x="55.6962%" y="244" width="1.2658%" height="15" fill="rgb(244,222,10)"/><text x="55.9462%" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (1 samples, 1.27%)</title><rect x="56.9620%" y="196" width="1.2658%" height="15" fill="rgb(236,179,52)"/><text x="57.2120%" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py) (1 samples, 1.27%)</title><rect x="56.9620%" y="212" width="1.2658%" height="15" fill="rgb(213,23,39)"/><text x="57.2120%" y="222.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py) (1 samples, 1.27%)</title><rect x="56.9620%" y="228" width="1.2658%" height="15" fill="rgb(238,48,10)"/><text x="57.2120%" y="238.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;) (1 samples, 1.27%)</title><rect x="56.9620%" y="244" width="1.2658%" height="15" fill="rgb(251,196,23)"/><text x="57.2120%" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 1.27%)</title><rect x="56.9620%" y="260" width="1.2658%" height="15" fill="rgb(250,152,24)"/><text x="57.2120%" y="270.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py) (1 samples, 1.27%)</title><rect x="56.9620%" y="276" width="1.2658%" height="15" fill="rgb(209,150,17)"/><text x="57.2120%" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 1.27%)</title><rect x="56.9620%" y="292" width="1.2658%" height="15" fill="rgb(234,202,34)"/><text x="57.2120%" y="302.50"></text></g><g><title>array_argmin (methods.c) (1 samples, 1.27%)</title><rect x="56.9620%" y="308" width="1.2658%" height="15" fill="rgb(253,148,53)"/><text x="57.2120%" y="318.50"></text></g><g><title>PyArray_ArgMin (calculation.c) (1 samples, 1.27%)</title><rect x="56.9620%" y="324" width="1.2658%" height="15" fill="rgb(218,129,16)"/><text x="57.2120%" y="334.50"></text></g><g><title>FLOAT_argmin (arraytypes.c.src) (1 samples, 1.27%)</title><rect x="56.9620%" y="340" width="1.2658%" height="15" fill="rgb(216,85,19)"/><text x="57.2120%" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py) (1 samples, 1.27%)</title><rect x="58.2278%" y="196" width="1.2658%" height="15" fill="rgb(235,228,7)"/><text x="58.4778%" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="212" width="1.2658%" height="15" fill="rgb(245,175,0)"/><text x="58.4778%" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::array_t&lt;float, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), pybind11::array_t&lt;float, 16&gt;, pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;, pybind11::name, pybind11::scope, pybind11::sibling, char [114]&gt;(pybind11::array_t&lt;float, 16&gt; (*&amp;&amp;&amp;)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), pybind11::array_t&lt;float, 16&gt; (*)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [114])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="228" width="1.2658%" height="15" fill="rgb(208,168,36)"/><text x="58.4778%" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::array_t&lt;float, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), pybind11::array_t&lt;float, 16&gt;, pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;, pybind11::name, pybind11::scope, pybind11::sibling, char [114]&gt;(pybind11::array_t&lt;float, 16&gt; (*&amp;&amp;&amp;)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), pybind11::array_t&lt;float, 16&gt; (*)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [114])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="244" width="1.2658%" height="15" fill="rgb(246,171,24)"/><text x="58.4778%" y="254.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::cast (numpy.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="260" width="1.2658%" height="15" fill="rgb(215,142,24)"/><text x="58.4778%" y="270.50"></text></g><g><title>pybind11::handle::inc_ref &amp; (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="276" width="1.2658%" height="15" fill="rgb(250,187,7)"/><text x="58.4778%" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::array_t&lt;float, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, pybind11::array_t&lt;long, 17&gt;), (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="292" width="1.2658%" height="15" fill="rgb(228,66,33)"/><text x="58.4778%" y="302.50"></text></g><g><title>pybind11::array_t&lt;float, 17&gt;::~array_t (numpy.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="308" width="1.2658%" height="15" fill="rgb(234,215,21)"/><text x="58.4778%" y="318.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="324" width="1.2658%" height="15" fill="rgb(222,191,20)"/><text x="58.4778%" y="334.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="340" width="1.2658%" height="15" fill="rgb(245,79,54)"/><text x="58.4778%" y="350.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="356" width="1.2658%" height="15" fill="rgb(240,10,37)"/><text x="58.4778%" y="366.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="372" width="1.2658%" height="15" fill="rgb(214,192,32)"/><text x="58.4778%" y="382.50"></text></g><g><title>array_feature_extractor_float (mlprodict/onnxrt/ops_cpu/_op_onnx_numpy.cpp) (1 samples, 1.27%)</title><rect x="58.2278%" y="388" width="1.2658%" height="15" fill="rgb(209,36,54)"/><text x="58.4778%" y="398.50"></text></g><g><title>pybind11::array_t&lt;float, 17&gt;::~array_t (numpy.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="404" width="1.2658%" height="15" fill="rgb(220,10,11)"/><text x="58.4778%" y="414.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="420" width="1.2658%" height="15" fill="rgb(221,106,17)"/><text x="58.4778%" y="430.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="436" width="1.2658%" height="15" fill="rgb(251,142,44)"/><text x="58.4778%" y="446.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="452" width="1.2658%" height="15" fill="rgb(238,13,15)"/><text x="58.4778%" y="462.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="468" width="1.2658%" height="15" fill="rgb(208,107,27)"/><text x="58.4778%" y="478.50"></text></g><g><title>array_feature_extractor&lt;float&gt; (mlprodict/onnxrt/ops_cpu/_op_onnx_numpy.cpp) (1 samples, 1.27%)</title><rect x="58.2278%" y="484" width="1.2658%" height="15" fill="rgb(205,136,37)"/><text x="58.4778%" y="494.50"></text></g><g><title>pybind11::buffer_info::buffer_info (buffer_info.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="500" width="1.2658%" height="15" fill="rgb(250,205,27)"/><text x="58.4778%" y="510.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::vector (stl_vector.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="516" width="1.2658%" height="15" fill="rgb(210,80,43)"/><text x="58.4778%" y="526.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_base (stl_vector.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="532" width="1.2658%" height="15" fill="rgb(247,160,36)"/><text x="58.4778%" y="542.50"></text></g><g><title>std::_Vector_base&lt;long, std::allocator&lt;long&gt; &gt;::_Vector_impl::_M_swap_data (stl_vector.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="548" width="1.2658%" height="15" fill="rgb(234,13,49)"/><text x="58.4778%" y="558.50"></text></g><g><title>std::swap&lt;long*&gt; (move.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="564" width="1.2658%" height="15" fill="rgb(234,122,0)"/><text x="58.4778%" y="574.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (basic_string.tcc) (1 samples, 1.27%)</title><rect x="58.2278%" y="580" width="1.2658%" height="15" fill="rgb(207,146,38)"/><text x="58.4778%" y="590.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (basic_string.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="596" width="1.2658%" height="15" fill="rgb(207,177,25)"/><text x="58.4778%" y="606.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (basic_string.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="612" width="1.2658%" height="15" fill="rgb(211,178,42)"/><text x="58.4778%" y="622.50"></text></g><g><title>std::char_traits&lt;char&gt;::assign (char_traits.h) (1 samples, 1.27%)</title><rect x="58.2278%" y="628" width="1.2658%" height="15" fill="rgb(230,69,54)"/><text x="58.4778%" y="638.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c) (1 samples, 1.27%)</title><rect x="59.4937%" y="308" width="1.2658%" height="15" fill="rgb(214,135,41)"/><text x="59.7437%" y="318.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 1.27%)</title><rect x="59.4937%" y="324" width="1.2658%" height="15" fill="rgb(237,67,25)"/><text x="59.7437%" y="334.50"></text></g><g><title>0x7f240cb5b140 (libc-2.29.so) (1 samples, 1.27%)</title><rect x="59.4937%" y="340" width="1.2658%" height="15" fill="rgb(222,189,50)"/><text x="59.7437%" y="350.50"></text></g><g><title>0x7f240ca9ddd3 (libc-2.29.so) (1 samples, 1.27%)</title><rect x="64.5570%" y="324" width="1.2658%" height="15" fill="rgb(245,148,34)"/><text x="64.8070%" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (6 samples, 7.59%)</title><rect x="59.4937%" y="196" width="7.5949%" height="15" fill="rgb(222,29,6)"/><text x="59.7437%" y="206.50">_run (mlpr..</text></g><g><title>gather_numpy (mlprodict/onnxrt/ops_cpu/op_gather_elements.py) (6 samples, 7.59%)</title><rect x="59.4937%" y="212" width="7.5949%" height="15" fill="rgb(221,189,43)"/><text x="59.7437%" y="222.50">gather_num..</text></g><g><title>choose (&lt;__array_function__ internals&gt;) (6 samples, 7.59%)</title><rect x="59.4937%" y="228" width="7.5949%" height="15" fill="rgb(207,36,27)"/><text x="59.7437%" y="238.50">choose (&lt;_..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (6 samples, 7.59%)</title><rect x="59.4937%" y="244" width="7.5949%" height="15" fill="rgb(217,90,24)"/><text x="59.7437%" y="254.50">array_impl..</text></g><g><title>choose (numpy/core/fromnumeric.py) (6 samples, 7.59%)</title><rect x="59.4937%" y="260" width="7.5949%" height="15" fill="rgb(224,66,35)"/><text x="59.7437%" y="270.50">choose (nu..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (6 samples, 7.59%)</title><rect x="59.4937%" y="276" width="7.5949%" height="15" fill="rgb(221,13,50)"/><text x="59.7437%" y="286.50">_wrapfunc ..</text></g><g><title>array_choose (methods.c) (6 samples, 7.59%)</title><rect x="59.4937%" y="292" width="7.5949%" height="15" fill="rgb(236,68,49)"/><text x="59.7437%" y="302.50">array_choo..</text></g><g><title>PyArray_Choose (item_selection.c) (5 samples, 6.33%)</title><rect x="60.7595%" y="308" width="6.3291%" height="15" fill="rgb(229,146,28)"/><text x="61.0095%" y="318.50">PyArray_..</text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c) (1 samples, 1.27%)</title><rect x="65.8228%" y="324" width="1.2658%" height="15" fill="rgb(225,31,38)"/><text x="66.0728%" y="334.50"></text></g><g><title>PyArray_NewCopy (convert.c) (1 samples, 1.27%)</title><rect x="65.8228%" y="340" width="1.2658%" height="15" fill="rgb(250,208,3)"/><text x="66.0728%" y="350.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 1.27%)</title><rect x="65.8228%" y="356" width="1.2658%" height="15" fill="rgb(246,54,23)"/><text x="66.0728%" y="366.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (1 samples, 1.27%)</title><rect x="65.8228%" y="372" width="1.2658%" height="15" fill="rgb(243,76,11)"/><text x="66.0728%" y="382.50"></text></g><g><title>_aligned_strided_to_contig_size4 (lowlevel_strided_loops.c.src) (1 samples, 1.27%)</title><rect x="65.8228%" y="388" width="1.2658%" height="15" fill="rgb(245,21,50)"/><text x="66.0728%" y="398.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py) (1 samples, 1.27%)</title><rect x="67.0886%" y="196" width="1.2658%" height="15" fill="rgb(228,9,43)"/><text x="67.3386%" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 1.27%)</title><rect x="67.0886%" y="212" width="1.2658%" height="15" fill="rgb(208,100,47)"/><text x="67.3386%" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 1.27%)</title><rect x="67.0886%" y="228" width="1.2658%" height="15" fill="rgb(232,26,8)"/><text x="67.3386%" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="67.0886%" y="244" width="1.2658%" height="15" fill="rgb(216,166,38)"/><text x="67.3386%" y="254.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="67.0886%" y="260" width="1.2658%" height="15" fill="rgb(251,202,51)"/><text x="67.3386%" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 1.27%)</title><rect x="67.0886%" y="276" width="1.2658%" height="15" fill="rgb(254,216,34)"/><text x="67.3386%" y="286.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 1.27%)</title><rect x="67.0886%" y="292" width="1.2658%" height="15" fill="rgb(251,32,27)"/><text x="67.3386%" y="302.50"></text></g><g><title>0x7f23d39babf1 (?) (1 samples, 1.27%)</title><rect x="68.3544%" y="244" width="1.2658%" height="15" fill="rgb(208,127,28)"/><text x="68.6044%" y="254.50"></text></g><g><title>0x7f23d39bef9e (?) (1 samples, 1.27%)</title><rect x="68.3544%" y="260" width="1.2658%" height="15" fill="rgb(224,137,22)"/><text x="68.6044%" y="270.50"></text></g><g><title>0x7f23d39bee9b (?) (1 samples, 1.27%)</title><rect x="68.3544%" y="276" width="1.2658%" height="15" fill="rgb(254,70,32)"/><text x="68.6044%" y="286.50"></text></g><g><title>0x7f23d39aceb0 (?) (1 samples, 1.27%)</title><rect x="68.3544%" y="292" width="1.2658%" height="15" fill="rgb(229,75,37)"/><text x="68.6044%" y="302.50"></text></g><g><title>0x7f23d39c5af8 (?) (1 samples, 1.27%)</title><rect x="68.3544%" y="308" width="1.2658%" height="15" fill="rgb(252,64,23)"/><text x="68.6044%" y="318.50"></text></g><g><title>0x7f23dc7ffab9 (libgomp.so.1.0.0) (1 samples, 1.27%)</title><rect x="68.3544%" y="324" width="1.2658%" height="15" fill="rgb(232,162,48)"/><text x="68.6044%" y="334.50"></text></g><g><title>0x7f23dc800ead (libgomp.so.1.0.0) (1 samples, 1.27%)</title><rect x="68.3544%" y="340" width="1.2658%" height="15" fill="rgb(246,160,12)"/><text x="68.6044%" y="350.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (2 samples, 2.53%)</title><rect x="68.3544%" y="196" width="2.5316%" height="15" fill="rgb(247,166,0)"/><text x="68.6044%" y="206.50">_r..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py) (2 samples, 2.53%)</title><rect x="68.3544%" y="212" width="2.5316%" height="15" fill="rgb(249,219,21)"/><text x="68.6044%" y="222.50">_c..</text></g><g><title>topk_sorted_implementation_cpp (mlprodict/onnxrt/ops_cpu/op_topk.py) (2 samples, 2.53%)</title><rect x="68.3544%" y="228" width="2.5316%" height="15" fill="rgb(205,209,3)"/><text x="68.6044%" y="238.50">to..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="244" width="1.2658%" height="15" fill="rgb(243,44,1)"/><text x="69.8703%" y="254.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::array_t&lt;long, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, long, bool), pybind11::array_t&lt;long, 16&gt;, pybind11::array_t&lt;float, 17&gt;, long, bool, pybind11::name, pybind11::scope, pybind11::sibling, char [183]&gt;(pybind11::array_t&lt;long, 16&gt; (*&amp;&amp;&amp;)(pybind11::array_t&lt;float, 17&gt;, long, bool), pybind11::array_t&lt;long, 16&gt; (*)(pybind11::array_t&lt;float, 17&gt;, long, bool), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [183])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="260" width="1.2658%" height="15" fill="rgb(206,159,16)"/><text x="69.8703%" y="270.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::array_t&lt;long, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, long, bool), pybind11::array_t&lt;long, 16&gt;, pybind11::array_t&lt;float, 17&gt;, long, bool, pybind11::name, pybind11::scope, pybind11::sibling, char [183]&gt;(pybind11::array_t&lt;long, 16&gt; (*&amp;&amp;&amp;)(pybind11::array_t&lt;float, 17&gt;, long, bool), pybind11::array_t&lt;long, 16&gt; (*)(pybind11::array_t&lt;float, 17&gt;, long, bool), pybind11::name const, pybind11::scope&amp;, pybind11::sibling, char [183])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="276" width="1.2658%" height="15" fill="rgb(244,77,30)"/><text x="69.8703%" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;pybind11::array_t&lt;float, 17&gt;, long, bool&gt;::call&lt;pybind11::array_t&lt;long, 16&gt;, pybind11::detail::void_type, pybind11::array_t&lt;long, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, long, bool)&gt; &amp;&amp; (cast.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="292" width="1.2658%" height="15" fill="rgb(218,69,12)"/><text x="69.8703%" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;pybind11::array_t&lt;float, 17&gt;, long, bool&gt;::call_impl&lt;pybind11::array_t&lt;long, 16&gt;, pybind11::array_t&lt;long, 16&gt; (*&amp;)(pybind11::array_t&lt;float, 17&gt;, long, bool), (unsigned long)0, (unsigned long)1, (unsigned long)2, pybind11::detail::void_type&gt; (cast.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="308" width="1.2658%" height="15" fill="rgb(212,87,7)"/><text x="69.8703%" y="318.50"></text></g><g><title>pybind11::array_t&lt;float, 17&gt;::~array_t (numpy.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="324" width="1.2658%" height="15" fill="rgb(245,114,25)"/><text x="69.8703%" y="334.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="340" width="1.2658%" height="15" fill="rgb(210,61,42)"/><text x="69.8703%" y="350.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="356" width="1.2658%" height="15" fill="rgb(211,52,33)"/><text x="69.8703%" y="366.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="372" width="1.2658%" height="15" fill="rgb(234,58,33)"/><text x="69.8703%" y="382.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="388" width="1.2658%" height="15" fill="rgb(220,115,36)"/><text x="69.8703%" y="398.50"></text></g><g><title>topk_element_max_float (mlprodict/onnxrt/ops_cpu/_op_onnx_numpy.cpp) (1 samples, 1.27%)</title><rect x="69.6203%" y="404" width="1.2658%" height="15" fill="rgb(243,153,54)"/><text x="69.8703%" y="414.50"></text></g><g><title>pybind11::array_t&lt;float, 17&gt;::~array_t (numpy.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="420" width="1.2658%" height="15" fill="rgb(251,47,18)"/><text x="69.8703%" y="430.50"></text></g><g><title>pybind11::array::~array (numpy.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="436" width="1.2658%" height="15" fill="rgb(242,102,42)"/><text x="69.8703%" y="446.50"></text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="452" width="1.2658%" height="15" fill="rgb(234,31,38)"/><text x="69.8703%" y="462.50"></text></g><g><title>pybind11::object::~object (pytypes.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="468" width="1.2658%" height="15" fill="rgb(221,117,51)"/><text x="69.8703%" y="478.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (1 samples, 1.27%)</title><rect x="69.6203%" y="484" width="1.2658%" height="15" fill="rgb(212,20,18)"/><text x="69.8703%" y="494.50"></text></g><g><title>topk_element&lt;float, void (float const*, long, long, long*, bool)&gt; (mlprodict/onnxrt/ops_cpu/_op_onnx_numpy.cpp) (1 samples, 1.27%)</title><rect x="69.6203%" y="500" width="1.2658%" height="15" fill="rgb(245,133,36)"/><text x="69.8703%" y="510.50"></text></g><g><title>0x7f23dc7ffab9 (libgomp.so.1.0.0) (1 samples, 1.27%)</title><rect x="69.6203%" y="516" width="1.2658%" height="15" fill="rgb(212,6,19)"/><text x="69.8703%" y="526.50"></text></g><g><title>0x7f23dc800ead (libgomp.so.1.0.0) (1 samples, 1.27%)</title><rect x="69.6203%" y="532" width="1.2658%" height="15" fill="rgb(218,1,36)"/><text x="69.8703%" y="542.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (14 samples, 17.72%)</title><rect x="55.6962%" y="132" width="17.7215%" height="15" fill="rgb(246,84,54)"/><text x="55.9462%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benc..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (14 samples, 17.72%)</title><rect x="55.6962%" y="148" width="17.7215%" height="15" fill="rgb(242,110,6)"/><text x="55.9462%" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_sequence_runtime_compiled (mlprodict/onnxrt/onnx_inference.py) (14 samples, 17.72%)</title><rect x="55.6962%" y="164" width="17.7215%" height="15" fill="rgb(214,47,5)"/><text x="55.9462%" y="174.50">_run_sequence_runtime_compil..</text></g><g><title>compiled_run (&lt;string&gt;) (13 samples, 16.46%)</title><rect x="56.9620%" y="180" width="16.4557%" height="15" fill="rgb(218,159,25)"/><text x="57.2120%" y="190.50">compiled_run (&lt;string&gt;)</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (2 samples, 2.53%)</title><rect x="70.8861%" y="196" width="2.5316%" height="15" fill="rgb(215,211,28)"/><text x="71.1361%" y="206.50">_r..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="212" width="2.5316%" height="15" fill="rgb(238,59,32)"/><text x="71.1361%" y="222.50">py..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="228" width="2.5316%" height="15" fill="rgb(226,82,3)"/><text x="71.1361%" y="238.50">vo..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="244" width="2.5316%" height="15" fill="rgb(240,164,32)"/><text x="71.1361%" y="254.50">vo..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="260" width="2.5316%" height="15" fill="rgb(232,46,7)"/><text x="71.1361%" y="270.50">py..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="276" width="2.5316%" height="15" fill="rgb(229,129,53)"/><text x="71.1361%" y="286.50">py..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorPFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorPFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="292" width="2.5316%" height="15" fill="rgb(234,188,29)"/><text x="71.1361%" y="302.50">py..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="308" width="2.5316%" height="15" fill="rgb(246,141,4)"/><text x="71.1361%" y="318.50">py..</text></g><g><title>pybind11::array::~array (numpy.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="324" width="2.5316%" height="15" fill="rgb(229,23,39)"/><text x="71.1361%" y="334.50">py..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="340" width="2.5316%" height="15" fill="rgb(206,12,3)"/><text x="71.1361%" y="350.50">py..</text></g><g><title>pybind11::object::~object (pytypes.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="356" width="2.5316%" height="15" fill="rgb(252,226,20)"/><text x="71.1361%" y="366.50">py..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h) (2 samples, 2.53%)</title><rect x="70.8861%" y="372" width="2.5316%" height="15" fill="rgb(216,123,35)"/><text x="71.1361%" y="382.50">py..</text></g><g><title>RuntimeTreeEnsembleRegressorP&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_p_.cpp) (2 samples, 2.53%)</title><rect x="70.8861%" y="388" width="2.5316%" height="15" fill="rgb(212,68,40)"/><text x="71.1361%" y="398.50">Ru..</text></g><g><title>RuntimeTreeEnsembleRegressorP&lt;float&gt;::compute_gil_free&lt;_AggregatorSum&lt;float&gt; &gt; (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_p_.cpp) (2 samples, 2.53%)</title><rect x="70.8861%" y="404" width="2.5316%" height="15" fill="rgb(254,125,32)"/><text x="71.1361%" y="414.50">Ru..</text></g><g><title>0x7f23dc7ffab9 (libgomp.so.1.0.0) (2 samples, 2.53%)</title><rect x="70.8861%" y="420" width="2.5316%" height="15" fill="rgb(253,97,22)"/><text x="71.1361%" y="430.50">0x..</text></g><g><title>0x7f23dc800ead (libgomp.so.1.0.0) (2 samples, 2.53%)</title><rect x="70.8861%" y="436" width="2.5316%" height="15" fill="rgb(241,101,14)"/><text x="71.1361%" y="446.50">0x..</text></g><g><title>profile_pyrtc (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (15 samples, 18.99%)</title><rect x="55.6962%" y="68" width="18.9873%" height="15" fill="rgb(238,103,29)"/><text x="55.9462%" y="78.50">profile_pyrtc (bench_AdaBoostR..</text></g><g><title>setup_profile (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (15 samples, 18.99%)</title><rect x="55.6962%" y="84" width="18.9873%" height="15" fill="rgb(233,195,47)"/><text x="55.9462%" y="94.50">setup_profile (bench_AdaBoostR..</text></g><g><title>profile (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (15 samples, 18.99%)</title><rect x="55.6962%" y="100" width="18.9873%" height="15" fill="rgb(246,218,30)"/><text x="55.9462%" y="110.50">profile (bench_AdaBoostReg_def..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (15 samples, 18.99%)</title><rect x="55.6962%" y="116" width="18.9873%" height="15" fill="rgb(219,145,47)"/><text x="55.9462%" y="126.50">time_predict (mlprodict/asv_be..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 1.27%)</title><rect x="73.4177%" y="132" width="1.2658%" height="15" fill="rgb(243,12,26)"/><text x="73.6677%" y="142.50"></text></g><g><title>0x7f23ee9442df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="74.6835%" y="260" width="1.2658%" height="15" fill="rgb(214,87,16)"/><text x="74.9335%" y="270.50"></text></g><g><title>0x7f23ee928e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="74.6835%" y="276" width="1.2658%" height="15" fill="rgb(208,99,42)"/><text x="74.9335%" y="286.50"></text></g><g><title>0x7f23ee91c022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="74.6835%" y="292" width="1.2658%" height="15" fill="rgb(253,99,2)"/><text x="74.9335%" y="302.50"></text></g><g><title>0x7f23ee9446b1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="75.9494%" y="260" width="1.2658%" height="15" fill="rgb(220,168,23)"/><text x="76.1994%" y="270.50"></text></g><g><title>0x7f23ee9446b7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="77.2152%" y="260" width="1.2658%" height="15" fill="rgb(242,38,24)"/><text x="77.4652%" y="270.50"></text></g><g><title>0x7f23ee935fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 5.06%)</title><rect x="74.6835%" y="228" width="5.0633%" height="15" fill="rgb(225,182,9)"/><text x="74.9335%" y="238.50">0x7f23..</text></g><g><title>0x7f23ee945405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 5.06%)</title><rect x="74.6835%" y="244" width="5.0633%" height="15" fill="rgb(243,178,37)"/><text x="74.9335%" y="254.50">0x7f23..</text></g><g><title>0x7f23ee944c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="78.4810%" y="260" width="1.2658%" height="15" fill="rgb(232,139,19)"/><text x="78.7310%" y="270.50"></text></g><g><title>0x7f23ee91c529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="78.4810%" y="276" width="1.2658%" height="15" fill="rgb(225,201,24)"/><text x="78.7310%" y="286.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 1.27%)</title><rect x="78.4810%" y="292" width="1.2658%" height="15" fill="rgb(221,47,46)"/><text x="78.7310%" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 1.27%)</title><rect x="78.4810%" y="308" width="1.2658%" height="15" fill="rgb(249,23,13)"/><text x="78.7310%" y="318.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 1.27%)</title><rect x="78.4810%" y="324" width="1.2658%" height="15" fill="rgb(219,9,5)"/><text x="78.7310%" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 1.27%)</title><rect x="78.4810%" y="340" width="1.2658%" height="15" fill="rgb(254,171,16)"/><text x="78.7310%" y="350.50"></text></g><g><title>0x7f23ee93605a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="79.7468%" y="228" width="1.2658%" height="15" fill="rgb(230,171,20)"/><text x="79.9968%" y="238.50"></text></g><g><title>array_take (methods.c) (1 samples, 1.27%)</title><rect x="79.7468%" y="244" width="1.2658%" height="15" fill="rgb(210,71,41)"/><text x="79.9968%" y="254.50"></text></g><g><title>0x7f23ee936d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 7.59%)</title><rect x="74.6835%" y="212" width="7.5949%" height="15" fill="rgb(206,173,20)"/><text x="74.9335%" y="222.50">0x7f23ee93..</text></g><g><title>0x7f23ee93613a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="81.0127%" y="228" width="1.2658%" height="15" fill="rgb(233,88,34)"/><text x="81.2627%" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 1.27%)</title><rect x="81.0127%" y="244" width="1.2658%" height="15" fill="rgb(223,209,46)"/><text x="81.2627%" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 1.27%)</title><rect x="81.0127%" y="260" width="1.2658%" height="15" fill="rgb(250,43,18)"/><text x="81.2627%" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 1.27%)</title><rect x="81.0127%" y="276" width="1.2658%" height="15" fill="rgb(208,13,10)"/><text x="81.2627%" y="286.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 1.27%)</title><rect x="83.5443%" y="244" width="1.2658%" height="15" fill="rgb(212,200,36)"/><text x="83.7943%" y="254.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (3 samples, 3.80%)</title><rect x="82.2785%" y="212" width="3.7975%" height="15" fill="rgb(225,90,30)"/><text x="82.5285%" y="222.50">_val..</text></g><g><title>check_array (sklearn/utils/validation.py) (3 samples, 3.80%)</title><rect x="82.2785%" y="228" width="3.7975%" height="15" fill="rgb(236,182,39)"/><text x="82.5285%" y="238.50">chec..</text></g><g><title>simplefilter (warnings.py) (1 samples, 1.27%)</title><rect x="84.8101%" y="244" width="1.2658%" height="15" fill="rgb(212,144,35)"/><text x="85.0601%" y="254.50"></text></g><g><title>_add_filter (warnings.py) (1 samples, 1.27%)</title><rect x="84.8101%" y="260" width="1.2658%" height="15" fill="rgb(228,63,44)"/><text x="85.0601%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py) (10 samples, 12.66%)</title><rect x="74.6835%" y="180" width="12.6582%" height="15" fill="rgb(228,109,6)"/><text x="74.9335%" y="190.50">&lt;listcomp&gt; (sklearn..</text></g><g><title>predict (sklearn/tree/_classes.py) (10 samples, 12.66%)</title><rect x="74.6835%" y="196" width="12.6582%" height="15" fill="rgb(238,117,24)"/><text x="74.9335%" y="206.50">predict (sklearn/tr..</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 1.27%)</title><rect x="86.0759%" y="212" width="1.2658%" height="15" fill="rgb(242,26,26)"/><text x="86.3259%" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (1 samples, 1.27%)</title><rect x="87.3418%" y="180" width="1.2658%" height="15" fill="rgb(221,92,48)"/><text x="87.5918%" y="190.50"></text></g><g><title>array_argmax (methods.c) (1 samples, 1.27%)</title><rect x="88.6076%" y="180" width="1.2658%" height="15" fill="rgb(209,209,32)"/><text x="88.8576%" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 1.27%)</title><rect x="89.8734%" y="180" width="1.2658%" height="15" fill="rgb(221,70,22)"/><text x="90.1234%" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 1.27%)</title><rect x="89.8734%" y="196" width="1.2658%" height="15" fill="rgb(248,145,5)"/><text x="90.1234%" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 1.27%)</title><rect x="89.8734%" y="212" width="1.2658%" height="15" fill="rgb(226,116,26)"/><text x="90.1234%" y="222.50"></text></g><g><title>array_multiply (number.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="180" width="1.2658%" height="15" fill="rgb(244,5,17)"/><text x="91.3892%" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="196" width="1.2658%" height="15" fill="rgb(252,159,33)"/><text x="91.3892%" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="212" width="1.2658%" height="15" fill="rgb(206,71,0)"/><text x="91.3892%" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="228" width="1.2658%" height="15" fill="rgb(233,118,54)"/><text x="91.3892%" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="244" width="1.2658%" height="15" fill="rgb(234,83,48)"/><text x="91.3892%" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="260" width="1.2658%" height="15" fill="rgb(228,3,54)"/><text x="91.3892%" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="276" width="1.2658%" height="15" fill="rgb(226,155,13)"/><text x="91.3892%" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="292" width="1.2658%" height="15" fill="rgb(241,28,37)"/><text x="91.3892%" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="308" width="1.2658%" height="15" fill="rgb(233,93,10)"/><text x="91.3892%" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="324" width="1.2658%" height="15" fill="rgb(225,113,19)"/><text x="91.3892%" y="334.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="340" width="1.2658%" height="15" fill="rgb(241,2,18)"/><text x="91.3892%" y="350.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 1.27%)</title><rect x="91.1392%" y="356" width="1.2658%" height="15" fill="rgb(228,207,21)"/><text x="91.3892%" y="366.50"></text></g><g><title>0x7f240bca6b60 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 1.27%)</title><rect x="91.1392%" y="372" width="1.2658%" height="15" fill="rgb(213,211,35)"/><text x="91.3892%" y="382.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;) (3 samples, 3.80%)</title><rect x="93.6709%" y="196" width="3.7975%" height="15" fill="rgb(209,83,10)"/><text x="93.9209%" y="206.50">cums..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="212" width="3.7975%" height="15" fill="rgb(209,164,1)"/><text x="93.9209%" y="222.50">arra..</text></g><g><title>cumsum (numpy/core/fromnumeric.py) (3 samples, 3.80%)</title><rect x="93.6709%" y="228" width="3.7975%" height="15" fill="rgb(213,184,43)"/><text x="93.9209%" y="238.50">cums..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (3 samples, 3.80%)</title><rect x="93.6709%" y="244" width="3.7975%" height="15" fill="rgb(231,61,34)"/><text x="93.9209%" y="254.50">_wra..</text></g><g><title>array_cumsum (methods.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="260" width="3.7975%" height="15" fill="rgb(235,75,3)"/><text x="93.9209%" y="270.50">arra..</text></g><g><title>PyArray_CumSum (calculation.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="276" width="3.7975%" height="15" fill="rgb(220,106,47)"/><text x="93.9209%" y="286.50">PyAr..</text></g><g><title>PyArray_GenericAccumulateFunction (number.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="292" width="3.7975%" height="15" fill="rgb(210,196,33)"/><text x="93.9209%" y="302.50">PyAr..</text></g><g><title>ufunc_accumulate (ufunc_object.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="308" width="3.7975%" height="15" fill="rgb(229,154,42)"/><text x="93.9209%" y="318.50">ufun..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="324" width="3.7975%" height="15" fill="rgb(228,114,26)"/><text x="93.9209%" y="334.50">PyUF..</text></g><g><title>PyUFunc_Accumulate (ufunc_object.c) (3 samples, 3.80%)</title><rect x="93.6709%" y="340" width="3.7975%" height="15" fill="rgb(208,144,1)"/><text x="93.9209%" y="350.50">PyUF..</text></g><g><title>0x7f240ca9dd60 (libc-2.29.so) (1 samples, 1.27%)</title><rect x="96.2025%" y="356" width="1.2658%" height="15" fill="rgb(239,112,37)"/><text x="96.4525%" y="366.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (78 samples, 98.73%)</title><rect x="0.0000%" y="52" width="98.7342%" height="15" fill="rgb(210,96,50)"/><text x="0.2500%" y="62.50">&lt;module&gt; (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="68" width="24.0506%" height="15" fill="rgb(222,178,2)"/><text x="74.9335%" y="78.50">profile_skl (bench_AdaBoostReg_default..</text></g><g><title>setup_profile (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="84" width="24.0506%" height="15" fill="rgb(226,74,18)"/><text x="74.9335%" y="94.50">setup_profile (bench_AdaBoostReg_defau..</text></g><g><title>profile (bench_AdaBoostReg_default_b_reg_n_estimators5_1000_4_12_float_.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="100" width="24.0506%" height="15" fill="rgb(225,67,54)"/><text x="74.9335%" y="110.50">profile (bench_AdaBoostReg_default_b_r..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="116" width="24.0506%" height="15" fill="rgb(251,92,32)"/><text x="74.9335%" y="126.50">time_predict (mlprodict/asv_benchmark/..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="132" width="24.0506%" height="15" fill="rgb(228,149,22)"/><text x="74.9335%" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/comm..</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="148" width="24.0506%" height="15" fill="rgb(243,54,13)"/><text x="74.9335%" y="158.50">predict (sklearn/ensemble/_weight_boos..</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py) (19 samples, 24.05%)</title><rect x="74.6835%" y="164" width="24.0506%" height="15" fill="rgb(243,180,28)"/><text x="74.9335%" y="174.50">_get_median_predict (sklearn/ensemble/..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py) (5 samples, 6.33%)</title><rect x="92.4051%" y="180" width="6.3291%" height="15" fill="rgb(208,167,24)"/><text x="92.6551%" y="190.50">stable_c..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;) (1 samples, 1.27%)</title><rect x="97.4684%" y="196" width="1.2658%" height="15" fill="rgb(245,73,45)"/><text x="97.7184%" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 1.27%)</title><rect x="97.4684%" y="212" width="1.2658%" height="15" fill="rgb(237,203,48)"/><text x="97.7184%" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py) (1 samples, 1.27%)</title><rect x="97.4684%" y="228" width="1.2658%" height="15" fill="rgb(211,197,16)"/><text x="97.7184%" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py) (1 samples, 1.27%)</title><rect x="97.4684%" y="244" width="1.2658%" height="15" fill="rgb(243,99,51)"/><text x="97.7184%" y="254.50"></text></g><g><title>array_subtract (number.c) (1 samples, 1.27%)</title><rect x="97.4684%" y="260" width="1.2658%" height="15" fill="rgb(215,123,29)"/><text x="97.7184%" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 1.27%)</title><rect x="97.4684%" y="276" width="1.2658%" height="15" fill="rgb(239,186,37)"/><text x="97.7184%" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 1.27%)</title><rect x="97.4684%" y="292" width="1.2658%" height="15" fill="rgb(252,136,39)"/><text x="97.7184%" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="97.4684%" y="308" width="1.2658%" height="15" fill="rgb(223,213,32)"/><text x="97.7184%" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 1.27%)</title><rect x="97.4684%" y="324" width="1.2658%" height="15" fill="rgb(233,115,5)"/><text x="97.7184%" y="334.50"></text></g><g><title>DOUBLE_subtract (loops.c.src) (1 samples, 1.27%)</title><rect x="97.4684%" y="340" width="1.2658%" height="15" fill="rgb(207,226,44)"/><text x="97.7184%" y="350.50"></text></g><g><title>run_binary_simd_subtract_DOUBLE (simd.inc.src) (1 samples, 1.27%)</title><rect x="97.4684%" y="356" width="1.2658%" height="15" fill="rgb(208,126,0)"/><text x="97.7184%" y="366.50"></text></g><g><title>sse2_binary_subtract_DOUBLE (simd.inc.src) (1 samples, 1.27%)</title><rect x="97.4684%" y="372" width="1.2658%" height="15" fill="rgb(244,66,21)"/><text x="97.7184%" y="382.50"></text></g><g><title>_mm_store_pd (emmintrin.h) (1 samples, 1.27%)</title><rect x="97.4684%" y="388" width="1.2658%" height="15" fill="rgb(222,97,12)"/><text x="97.7184%" y="398.50"></text></g><g><title>all (79 samples, 100%)</title><rect x="0.0000%" y="36" width="100.0000%" height="15" fill="rgb(219,213,19)"/><text x="0.2500%" y="46.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="98.7342%" y="52" width="1.2658%" height="15" fill="rgb(252,169,30)"/><text x="98.9842%" y="62.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="98.7342%" y="68" width="1.2658%" height="15" fill="rgb(206,32,51)"/><text x="98.9842%" y="78.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="98.7342%" y="84" width="1.2658%" height="15" fill="rgb(250,172,42)"/><text x="98.9842%" y="94.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 1.27%)</title><rect x="98.7342%" y="100" width="1.2658%" height="15" fill="rgb(209,34,43)"/><text x="98.9842%" y="110.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 1.27%)</title><rect x="98.7342%" y="116" width="1.2658%" height="15" fill="rgb(223,11,35)"/><text x="98.9842%" y="126.50"></text></g><g><title>&lt;module&gt; (site.py) (1 samples, 1.27%)</title><rect x="98.7342%" y="132" width="1.2658%" height="15" fill="rgb(251,219,26)"/><text x="98.9842%" y="142.50"></text></g><g><title>main (site.py) (1 samples, 1.27%)</title><rect x="98.7342%" y="148" width="1.2658%" height="15" fill="rgb(231,119,3)"/><text x="98.9842%" y="158.50"></text></g><g><title>virtual_addsitepackages (site.py) (1 samples, 1.27%)</title><rect x="98.7342%" y="164" width="1.2658%" height="15" fill="rgb(216,97,11)"/><text x="98.9842%" y="174.50"></text></g><g><title>addsitepackages (site.py) (1 samples, 1.27%)</title><rect x="98.7342%" y="180" width="1.2658%" height="15" fill="rgb(223,59,9)"/><text x="98.9842%" y="190.50"></text></g><g><title>addsitedir (site.py) (1 samples, 1.27%)</title><rect x="98.7342%" y="196" width="1.2658%" height="15" fill="rgb(233,93,31)"/><text x="98.9842%" y="206.50"></text></g><g><title>addpackage (site.py) (1 samples, 1.27%)</title><rect x="98.7342%" y="212" width="1.2658%" height="15" fill="rgb(239,81,33)"/><text x="98.9842%" y="222.50"></text></g></svg></svg>