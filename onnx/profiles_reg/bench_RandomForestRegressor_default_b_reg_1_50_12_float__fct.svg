<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1638" onload="init(evt)" viewBox="0 0 1200 1638" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1638" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1621.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1621.00"> </text><g id="frames"><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(240,143,50)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(211,19,45)"/><text x="13.00" y="894.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(232,151,21)"/><text x="13.00" y="910.50"></text></g><g><title>has_metadata (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(222,39,21)"/><text x="13.00" y="926.50"></text></g><g><title>_get_metadata_path (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(244,81,32)"/><text x="13.00" y="942.50"></text></g><g><title>_fn (pkg_resources/__init__.py) (1 samples, 0.45%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(223,40,28)"/><text x="13.00" y="958.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="15" y="932" width="10" height="15" fill="rgb(211,14,26)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="15" y="948" width="10" height="15" fill="rgb(239,108,1)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="15" y="964" width="10" height="15" fill="rgb(221,141,3)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="15" y="980" width="10" height="15" fill="rgb(254,220,22)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="15" y="996" width="10" height="15" fill="rgb(234,225,26)"/><text x="18.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="15" y="1012" width="10" height="15" fill="rgb(213,16,36)"/><text x="18.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="20" y="1028" width="5" height="15" fill="rgb(241,164,14)"/><text x="23.00" y="1038.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 1.79%)</title><rect x="15" y="868" width="21" height="15" fill="rgb(219,91,13)"/><text x="18.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 1.79%)</title><rect x="15" y="884" width="21" height="15" fill="rgb(237,87,24)"/><text x="18.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 1.79%)</title><rect x="15" y="900" width="21" height="15" fill="rgb(218,76,7)"/><text x="18.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.79%)</title><rect x="15" y="916" width="21" height="15" fill="rgb(249,43,19)"/><text x="18.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="25" y="932" width="11" height="15" fill="rgb(208,23,35)"/><text x="28.00" y="942.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="25" y="948" width="11" height="15" fill="rgb(218,196,11)"/><text x="28.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="25" y="964" width="11" height="15" fill="rgb(245,121,13)"/><text x="28.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="25" y="980" width="11" height="15" fill="rgb(237,156,7)"/><text x="28.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="25" y="996" width="11" height="15" fill="rgb(214,8,7)"/><text x="28.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_search (python3.7) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(215,225,36)"/><text x="34.00" y="1022.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(222,190,46)"/><text x="34.00" y="1038.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(214,216,18)"/><text x="34.00" y="1054.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(248,70,12)"/><text x="34.00" y="1070.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.45%)</title><rect x="41" y="996" width="6" height="15" fill="rgb(253,228,4)"/><text x="44.00" y="1006.50"></text></g><g><title>_sre_SRE_Pattern_split (python3.7) (1 samples, 0.45%)</title><rect x="41" y="1012" width="6" height="15" fill="rgb(252,85,5)"/><text x="44.00" y="1022.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.45%)</title><rect x="41" y="1028" width="6" height="15" fill="rgb(242,149,4)"/><text x="44.00" y="1038.50"></text></g><g><title>sre_ucs1_count (python3.7) (1 samples, 0.45%)</title><rect x="41" y="1044" width="6" height="15" fill="rgb(244,179,35)"/><text x="44.00" y="1054.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (8 samples, 3.59%)</title><rect x="10" y="292" width="42" height="15" fill="rgb(219,146,19)"/><text x="13.00" y="302.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="308" width="42" height="15" fill="rgb(218,34,48)"/><text x="13.00" y="318.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="324" width="42" height="15" fill="rgb(236,170,54)"/><text x="13.00" y="334.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="340" width="42" height="15" fill="rgb(237,193,16)"/><text x="13.00" y="350.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.59%)</title><rect x="10" y="356" width="42" height="15" fill="rgb(217,225,21)"/><text x="13.00" y="366.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="372" width="42" height="15" fill="rgb(210,219,40)"/><text x="13.00" y="382.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (8 samples, 3.59%)</title><rect x="10" y="388" width="42" height="15" fill="rgb(209,49,20)"/><text x="13.00" y="398.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="404" width="42" height="15" fill="rgb(228,60,23)"/><text x="13.00" y="414.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="420" width="42" height="15" fill="rgb(219,106,28)"/><text x="13.00" y="430.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="436" width="42" height="15" fill="rgb(234,78,5)"/><text x="13.00" y="446.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.59%)</title><rect x="10" y="452" width="42" height="15" fill="rgb(225,41,47)"/><text x="13.00" y="462.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="468" width="42" height="15" fill="rgb(227,152,7)"/><text x="13.00" y="478.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (8 samples, 3.59%)</title><rect x="10" y="484" width="42" height="15" fill="rgb(243,153,10)"/><text x="13.00" y="494.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="500" width="42" height="15" fill="rgb(229,104,13)"/><text x="13.00" y="510.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="516" width="42" height="15" fill="rgb(252,119,53)"/><text x="13.00" y="526.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="532" width="42" height="15" fill="rgb(251,50,10)"/><text x="13.00" y="542.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.59%)</title><rect x="10" y="548" width="42" height="15" fill="rgb(214,162,35)"/><text x="13.00" y="558.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="564" width="42" height="15" fill="rgb(211,151,15)"/><text x="13.00" y="574.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (8 samples, 3.59%)</title><rect x="10" y="580" width="42" height="15" fill="rgb(211,22,3)"/><text x="13.00" y="590.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="596" width="42" height="15" fill="rgb(209,51,29)"/><text x="13.00" y="606.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="612" width="42" height="15" fill="rgb(237,11,24)"/><text x="13.00" y="622.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="628" width="42" height="15" fill="rgb(211,5,15)"/><text x="13.00" y="638.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="644" width="42" height="15" fill="rgb(217,99,6)"/><text x="13.00" y="654.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="660" width="42" height="15" fill="rgb(212,7,9)"/><text x="13.00" y="670.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="676" width="42" height="15" fill="rgb(212,176,29)"/><text x="13.00" y="686.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.59%)</title><rect x="10" y="692" width="42" height="15" fill="rgb(246,163,4)"/><text x="13.00" y="702.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="708" width="42" height="15" fill="rgb(226,126,34)"/><text x="13.00" y="718.50">_ca..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (8 samples, 3.59%)</title><rect x="10" y="724" width="42" height="15" fill="rgb(210,83,26)"/><text x="13.00" y="734.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="740" width="42" height="15" fill="rgb(232,165,16)"/><text x="13.00" y="750.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="756" width="42" height="15" fill="rgb(205,226,18)"/><text x="13.00" y="766.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="772" width="42" height="15" fill="rgb(246,81,11)"/><text x="13.00" y="782.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.59%)</title><rect x="10" y="788" width="42" height="15" fill="rgb(206,226,45)"/><text x="13.00" y="798.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="10" y="804" width="42" height="15" fill="rgb(212,11,26)"/><text x="13.00" y="814.50">_ca..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (8 samples, 3.59%)</title><rect x="10" y="820" width="42" height="15" fill="rgb(222,200,36)"/><text x="13.00" y="830.50">&lt;mo..</text></g><g><title>_call_aside (pkg_resources/__init__.py) (8 samples, 3.59%)</title><rect x="10" y="836" width="42" height="15" fill="rgb(221,22,25)"/><text x="13.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (8 samples, 3.59%)</title><rect x="10" y="852" width="42" height="15" fill="rgb(246,70,51)"/><text x="13.00" y="862.50">_in..</text></g><g><title>add_entry (pkg_resources/__init__.py) (3 samples, 1.35%)</title><rect x="36" y="868" width="16" height="15" fill="rgb(214,49,30)"/><text x="39.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (3 samples, 1.35%)</title><rect x="36" y="884" width="16" height="15" fill="rgb(220,229,20)"/><text x="39.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (3 samples, 1.35%)</title><rect x="36" y="900" width="16" height="15" fill="rgb(223,99,37)"/><text x="39.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="41" y="916" width="11" height="15" fill="rgb(208,172,35)"/><text x="44.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (2 samples, 0.90%)</title><rect x="41" y="932" width="11" height="15" fill="rgb(215,219,6)"/><text x="44.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="41" y="948" width="11" height="15" fill="rgb(240,98,35)"/><text x="44.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="41" y="964" width="11" height="15" fill="rgb(217,56,7)"/><text x="44.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (2 samples, 0.90%)</title><rect x="41" y="980" width="11" height="15" fill="rgb(245,76,20)"/><text x="44.00" y="990.50"></text></g><g><title>unicode_lower (python3.7) (1 samples, 0.45%)</title><rect x="47" y="996" width="5" height="15" fill="rgb(216,29,48)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/kde.py) (1 samples, 0.45%)</title><rect x="52" y="772" width="5" height="15" fill="rgb(250,171,31)"/><text x="55.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="788" width="5" height="15" fill="rgb(227,118,12)"/><text x="55.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="804" width="5" height="15" fill="rgb(227,128,1)"/><text x="55.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="820" width="5" height="15" fill="rgb(222,151,5)"/><text x="55.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="836" width="5" height="15" fill="rgb(233,123,49)"/><text x="55.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="852" width="5" height="15" fill="rgb(232,74,42)"/><text x="55.00" y="862.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="868" width="5" height="15" fill="rgb(214,127,18)"/><text x="55.00" y="878.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="52" y="884" width="5" height="15" fill="rgb(251,28,14)"/><text x="55.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="52" y="900" width="5" height="15" fill="rgb(215,77,10)"/><text x="55.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="10" y="196" width="52" height="15" fill="rgb(246,149,38)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="10" y="212" width="52" height="15" fill="rgb(207,92,12)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="10" y="228" width="52" height="15" fill="rgb(211,134,33)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="10" y="244" width="52" height="15" fill="rgb(239,130,18)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.48%)</title><rect x="10" y="260" width="52" height="15" fill="rgb(210,174,23)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="10" y="276" width="52" height="15" fill="rgb(242,76,38)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (2 samples, 0.90%)</title><rect x="52" y="292" width="10" height="15" fill="rgb(241,227,53)"/><text x="55.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="308" width="10" height="15" fill="rgb(217,43,44)"/><text x="55.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="324" width="10" height="15" fill="rgb(216,45,0)"/><text x="55.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="340" width="10" height="15" fill="rgb(229,165,13)"/><text x="55.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="356" width="10" height="15" fill="rgb(218,11,13)"/><text x="55.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="372" width="10" height="15" fill="rgb(211,31,4)"/><text x="55.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (2 samples, 0.90%)</title><rect x="52" y="388" width="10" height="15" fill="rgb(249,109,37)"/><text x="55.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="404" width="10" height="15" fill="rgb(223,151,54)"/><text x="55.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="420" width="10" height="15" fill="rgb(240,23,49)"/><text x="55.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="436" width="10" height="15" fill="rgb(226,95,32)"/><text x="55.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="452" width="10" height="15" fill="rgb(229,199,53)"/><text x="55.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="468" width="10" height="15" fill="rgb(241,87,17)"/><text x="55.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (2 samples, 0.90%)</title><rect x="52" y="484" width="10" height="15" fill="rgb(209,168,10)"/><text x="55.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="500" width="10" height="15" fill="rgb(213,84,5)"/><text x="55.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="516" width="10" height="15" fill="rgb(215,52,21)"/><text x="55.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="532" width="10" height="15" fill="rgb(235,153,51)"/><text x="55.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="548" width="10" height="15" fill="rgb(249,77,47)"/><text x="55.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="564" width="10" height="15" fill="rgb(236,102,25)"/><text x="55.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (2 samples, 0.90%)</title><rect x="52" y="580" width="10" height="15" fill="rgb(253,98,42)"/><text x="55.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="596" width="10" height="15" fill="rgb(206,129,12)"/><text x="55.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="612" width="10" height="15" fill="rgb(235,35,39)"/><text x="55.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="628" width="10" height="15" fill="rgb(248,25,44)"/><text x="55.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="644" width="10" height="15" fill="rgb(207,10,41)"/><text x="55.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="660" width="10" height="15" fill="rgb(241,116,13)"/><text x="55.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (2 samples, 0.90%)</title><rect x="52" y="676" width="10" height="15" fill="rgb(205,201,12)"/><text x="55.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="692" width="10" height="15" fill="rgb(208,43,24)"/><text x="55.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="708" width="10" height="15" fill="rgb(212,186,46)"/><text x="55.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="724" width="10" height="15" fill="rgb(237,40,7)"/><text x="55.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="52" y="740" width="10" height="15" fill="rgb(230,88,31)"/><text x="55.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="52" y="756" width="10" height="15" fill="rgb(206,112,30)"/><text x="55.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.45%)</title><rect x="57" y="772" width="5" height="15" fill="rgb(206,41,32)"/><text x="60.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="788" width="5" height="15" fill="rgb(214,71,20)"/><text x="60.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="804" width="5" height="15" fill="rgb(223,5,31)"/><text x="60.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="820" width="5" height="15" fill="rgb(229,210,15)"/><text x="60.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="836" width="5" height="15" fill="rgb(207,214,42)"/><text x="60.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="852" width="5" height="15" fill="rgb(240,210,5)"/><text x="60.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="57" y="868" width="5" height="15" fill="rgb(249,117,11)"/><text x="60.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="884" width="5" height="15" fill="rgb(224,37,46)"/><text x="60.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.45%)</title><rect x="57" y="900" width="5" height="15" fill="rgb(205,165,46)"/><text x="60.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="916" width="5" height="15" fill="rgb(235,219,25)"/><text x="60.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="932" width="5" height="15" fill="rgb(235,144,11)"/><text x="60.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="948" width="5" height="15" fill="rgb(244,216,31)"/><text x="60.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="964" width="5" height="15" fill="rgb(224,23,37)"/><text x="60.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="980" width="5" height="15" fill="rgb(224,58,31)"/><text x="60.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="57" y="996" width="5" height="15" fill="rgb(233,194,48)"/><text x="60.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="57" y="1012" width="5" height="15" fill="rgb(226,211,43)"/><text x="60.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.45%)</title><rect x="57" y="1028" width="5" height="15" fill="rgb(221,153,54)"/><text x="60.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="57" y="1044" width="5" height="15" fill="rgb(233,172,31)"/><text x="60.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="57" y="1060" width="5" height="15" fill="rgb(245,145,5)"/><text x="60.00" y="1070.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.45%)</title><rect x="57" y="1076" width="5" height="15" fill="rgb(221,125,48)"/><text x="60.00" y="1086.50"></text></g><g><title>&lt;genexpr&gt; (scipy/stats/_distn_infrastructure.py) (1 samples, 0.45%)</title><rect x="57" y="1092" width="5" height="15" fill="rgb(238,225,54)"/><text x="60.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1124" width="6" height="15" fill="rgb(215,186,41)"/><text x="65.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1140" width="6" height="15" fill="rgb(207,116,46)"/><text x="65.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1156" width="6" height="15" fill="rgb(246,207,23)"/><text x="65.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="62" y="1172" width="6" height="15" fill="rgb(220,203,10)"/><text x="65.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1188" width="6" height="15" fill="rgb(209,154,51)"/><text x="65.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.45%)</title><rect x="62" y="1204" width="6" height="15" fill="rgb(232,164,2)"/><text x="65.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1220" width="6" height="15" fill="rgb(237,18,16)"/><text x="65.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1236" width="6" height="15" fill="rgb(206,64,47)"/><text x="65.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1252" width="6" height="15" fill="rgb(237,63,41)"/><text x="65.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="62" y="1268" width="6" height="15" fill="rgb(229,108,31)"/><text x="65.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1284" width="6" height="15" fill="rgb(239,40,33)"/><text x="65.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py) (1 samples, 0.45%)</title><rect x="62" y="1300" width="6" height="15" fill="rgb(230,187,7)"/><text x="65.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1316" width="6" height="15" fill="rgb(242,101,33)"/><text x="65.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1332" width="6" height="15" fill="rgb(239,150,11)"/><text x="65.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="62" y="1348" width="6" height="15" fill="rgb(224,99,11)"/><text x="65.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="62" y="1364" width="6" height="15" fill="rgb(207,105,15)"/><text x="65.00" y="1374.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="62" y="1380" width="6" height="15" fill="rgb(212,29,50)"/><text x="65.00" y="1390.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="62" y="1396" width="6" height="15" fill="rgb(246,117,0)"/><text x="65.00" y="1406.50"></text></g><g><title>0x7f3224ea0cd2 (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="68" y="1588" width="5" height="15" fill="rgb(219,30,18)"/><text x="71.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="756" width="16" height="15" fill="rgb(251,11,13)"/><text x="65.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 1.35%)</title><rect x="62" y="772" width="16" height="15" fill="rgb(215,224,49)"/><text x="65.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="788" width="16" height="15" fill="rgb(229,98,1)"/><text x="65.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="804" width="16" height="15" fill="rgb(241,40,4)"/><text x="65.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="820" width="16" height="15" fill="rgb(213,23,54)"/><text x="65.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="62" y="836" width="16" height="15" fill="rgb(217,139,35)"/><text x="65.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="852" width="16" height="15" fill="rgb(212,166,44)"/><text x="65.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 1.35%)</title><rect x="62" y="868" width="16" height="15" fill="rgb(240,178,16)"/><text x="65.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="884" width="16" height="15" fill="rgb(245,207,7)"/><text x="65.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="900" width="16" height="15" fill="rgb(239,12,8)"/><text x="65.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="916" width="16" height="15" fill="rgb(248,166,30)"/><text x="65.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="932" width="16" height="15" fill="rgb(216,177,0)"/><text x="65.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="948" width="16" height="15" fill="rgb(243,141,23)"/><text x="65.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="964" width="16" height="15" fill="rgb(243,70,1)"/><text x="65.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="62" y="980" width="16" height="15" fill="rgb(210,46,13)"/><text x="65.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="996" width="16" height="15" fill="rgb(240,56,39)"/><text x="65.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 1.35%)</title><rect x="62" y="1012" width="16" height="15" fill="rgb(243,121,29)"/><text x="65.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="1028" width="16" height="15" fill="rgb(243,225,49)"/><text x="65.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="1044" width="16" height="15" fill="rgb(244,176,44)"/><text x="65.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="1060" width="16" height="15" fill="rgb(227,221,6)"/><text x="65.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="62" y="1076" width="16" height="15" fill="rgb(217,163,13)"/><text x="65.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="62" y="1092" width="16" height="15" fill="rgb(223,167,47)"/><text x="65.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 1.35%)</title><rect x="62" y="1108" width="16" height="15" fill="rgb(210,136,10)"/><text x="65.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1124" width="10" height="15" fill="rgb(234,95,35)"/><text x="71.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1140" width="10" height="15" fill="rgb(211,70,28)"/><text x="71.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1156" width="10" height="15" fill="rgb(248,142,44)"/><text x="71.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1172" width="10" height="15" fill="rgb(239,53,10)"/><text x="71.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1188" width="10" height="15" fill="rgb(206,151,38)"/><text x="71.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="68" y="1204" width="10" height="15" fill="rgb(235,166,2)"/><text x="71.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1220" width="10" height="15" fill="rgb(219,0,49)"/><text x="71.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.90%)</title><rect x="68" y="1236" width="10" height="15" fill="rgb(209,101,44)"/><text x="71.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1252" width="10" height="15" fill="rgb(229,64,27)"/><text x="71.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1268" width="10" height="15" fill="rgb(224,155,45)"/><text x="71.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1284" width="10" height="15" fill="rgb(239,211,25)"/><text x="71.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1300" width="10" height="15" fill="rgb(230,202,49)"/><text x="71.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1316" width="10" height="15" fill="rgb(208,144,4)"/><text x="71.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="68" y="1332" width="10" height="15" fill="rgb(208,184,41)"/><text x="71.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1348" width="10" height="15" fill="rgb(229,46,29)"/><text x="71.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.90%)</title><rect x="68" y="1364" width="10" height="15" fill="rgb(218,201,15)"/><text x="71.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1380" width="10" height="15" fill="rgb(219,3,40)"/><text x="71.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1396" width="10" height="15" fill="rgb(247,227,18)"/><text x="71.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1412" width="10" height="15" fill="rgb(219,80,22)"/><text x="71.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="68" y="1428" width="10" height="15" fill="rgb(218,194,45)"/><text x="71.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="68" y="1444" width="10" height="15" fill="rgb(220,207,39)"/><text x="71.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.90%)</title><rect x="68" y="1460" width="10" height="15" fill="rgb(208,35,50)"/><text x="71.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.90%)</title><rect x="68" y="1476" width="10" height="15" fill="rgb(222,15,4)"/><text x="71.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.90%)</title><rect x="68" y="1492" width="10" height="15" fill="rgb(215,184,12)"/><text x="71.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (2 samples, 0.90%)</title><rect x="68" y="1508" width="10" height="15" fill="rgb(239,64,50)"/><text x="71.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.90%)</title><rect x="68" y="1524" width="10" height="15" fill="rgb(228,163,32)"/><text x="71.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="68" y="1540" width="10" height="15" fill="rgb(232,131,32)"/><text x="71.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.90%)</title><rect x="68" y="1556" width="10" height="15" fill="rgb(250,201,23)"/><text x="71.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.90%)</title><rect x="68" y="1572" width="10" height="15" fill="rgb(229,196,49)"/><text x="71.00" y="1582.50"></text></g><g><title>resolve_or_missing (jinja2/runtime.py) (1 samples, 0.45%)</title><rect x="73" y="1588" width="5" height="15" fill="rgb(251,219,40)"/><text x="76.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="484" width="22" height="15" fill="rgb(212,53,19)"/><text x="65.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="500" width="22" height="15" fill="rgb(210,79,3)"/><text x="65.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="516" width="22" height="15" fill="rgb(249,4,11)"/><text x="65.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="532" width="22" height="15" fill="rgb(241,20,24)"/><text x="65.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="62" y="548" width="22" height="15" fill="rgb(251,25,20)"/><text x="65.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="564" width="22" height="15" fill="rgb(249,63,50)"/><text x="65.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 1.79%)</title><rect x="62" y="580" width="22" height="15" fill="rgb(244,37,1)"/><text x="65.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="596" width="22" height="15" fill="rgb(210,10,53)"/><text x="65.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="612" width="22" height="15" fill="rgb(215,124,10)"/><text x="65.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="628" width="22" height="15" fill="rgb(216,153,18)"/><text x="65.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="62" y="644" width="22" height="15" fill="rgb(220,22,30)"/><text x="65.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="660" width="22" height="15" fill="rgb(230,42,39)"/><text x="65.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 1.79%)</title><rect x="62" y="676" width="22" height="15" fill="rgb(225,227,34)"/><text x="65.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="692" width="22" height="15" fill="rgb(245,26,21)"/><text x="65.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="708" width="22" height="15" fill="rgb(228,52,44)"/><text x="65.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="62" y="724" width="22" height="15" fill="rgb(245,19,22)"/><text x="65.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="62" y="740" width="22" height="15" fill="rgb(217,177,22)"/><text x="65.00" y="750.50">e..</text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="78" y="756" width="6" height="15" fill="rgb(239,58,43)"/><text x="81.00" y="766.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="78" y="772" width="6" height="15" fill="rgb(213,138,41)"/><text x="81.00" y="782.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (1 samples, 0.45%)</title><rect x="84" y="724" width="5" height="15" fill="rgb(242,201,1)"/><text x="87.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="740" width="5" height="15" fill="rgb(232,203,3)"/><text x="87.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="756" width="5" height="15" fill="rgb(253,203,35)"/><text x="87.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="772" width="5" height="15" fill="rgb(217,20,18)"/><text x="87.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="788" width="5" height="15" fill="rgb(249,43,6)"/><text x="87.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="804" width="5" height="15" fill="rgb(232,204,3)"/><text x="87.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (1 samples, 0.45%)</title><rect x="84" y="820" width="5" height="15" fill="rgb(212,145,20)"/><text x="87.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="836" width="5" height="15" fill="rgb(253,207,37)"/><text x="87.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="852" width="5" height="15" fill="rgb(242,196,29)"/><text x="87.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="868" width="5" height="15" fill="rgb(205,175,23)"/><text x="87.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="84" y="884" width="5" height="15" fill="rgb(223,16,40)"/><text x="87.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="900" width="5" height="15" fill="rgb(209,217,45)"/><text x="87.00" y="910.50"></text></g><g><title>0x7f320c081403 (?) (1 samples, 0.45%)</title><rect x="84" y="916" width="5" height="15" fill="rgb(221,62,29)"/><text x="87.00" y="926.50"></text></g><g><title>0x7f320c083b8a (?) (1 samples, 0.45%)</title><rect x="84" y="932" width="5" height="15" fill="rgb(240,65,9)"/><text x="87.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="948" width="5" height="15" fill="rgb(230,216,41)"/><text x="87.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="964" width="5" height="15" fill="rgb(243,47,28)"/><text x="87.00" y="974.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="980" width="5" height="15" fill="rgb(229,197,24)"/><text x="87.00" y="990.50"></text></g><g><title>__enter__ (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="84" y="996" width="5" height="15" fill="rgb(210,71,17)"/><text x="87.00" y="1006.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.45%)</title><rect x="89" y="1124" width="5" height="15" fill="rgb(211,154,49)"/><text x="92.00" y="1134.50"></text></g><g><title>inner (typing.py) (1 samples, 0.45%)</title><rect x="89" y="1140" width="5" height="15" fill="rgb(214,73,1)"/><text x="92.00" y="1150.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.45%)</title><rect x="89" y="1156" width="5" height="15" fill="rgb(245,84,50)"/><text x="92.00" y="1166.50"></text></g><g><title>inner (typing.py) (1 samples, 0.45%)</title><rect x="89" y="1172" width="5" height="15" fill="rgb(232,195,36)"/><text x="92.00" y="1182.50"></text></g><g><title>__getitem__ (typing.py) (1 samples, 0.45%)</title><rect x="89" y="1188" width="5" height="15" fill="rgb(248,91,4)"/><text x="92.00" y="1198.50"></text></g><g><title>_remove_dups_flatten (typing.py) (1 samples, 0.45%)</title><rect x="89" y="1204" width="5" height="15" fill="rgb(227,187,38)"/><text x="92.00" y="1214.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.59%)</title><rect x="62" y="340" width="43" height="15" fill="rgb(245,214,11)"/><text x="65.00" y="350.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="62" y="356" width="43" height="15" fill="rgb(251,188,22)"/><text x="65.00" y="366.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="62" y="372" width="43" height="15" fill="rgb(216,18,33)"/><text x="65.00" y="382.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="62" y="388" width="43" height="15" fill="rgb(223,125,35)"/><text x="65.00" y="398.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.59%)</title><rect x="62" y="404" width="43" height="15" fill="rgb(214,52,33)"/><text x="65.00" y="414.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="62" y="420" width="43" height="15" fill="rgb(237,163,19)"/><text x="65.00" y="430.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (8 samples, 3.59%)</title><rect x="62" y="436" width="43" height="15" fill="rgb(249,127,16)"/><text x="65.00" y="446.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="62" y="452" width="43" height="15" fill="rgb(242,169,49)"/><text x="65.00" y="462.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.59%)</title><rect x="62" y="468" width="43" height="15" fill="rgb(242,207,28)"/><text x="65.00" y="478.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="484" width="21" height="15" fill="rgb(212,200,44)"/><text x="87.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="84" y="500" width="21" height="15" fill="rgb(230,134,54)"/><text x="87.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="516" width="21" height="15" fill="rgb(216,228,18)"/><text x="87.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (4 samples, 1.79%)</title><rect x="84" y="532" width="21" height="15" fill="rgb(211,63,6)"/><text x="87.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="548" width="21" height="15" fill="rgb(247,214,54)"/><text x="87.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="564" width="21" height="15" fill="rgb(208,35,41)"/><text x="87.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="580" width="21" height="15" fill="rgb(252,29,32)"/><text x="87.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="84" y="596" width="21" height="15" fill="rgb(237,159,25)"/><text x="87.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="612" width="21" height="15" fill="rgb(245,83,39)"/><text x="87.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (4 samples, 1.79%)</title><rect x="84" y="628" width="21" height="15" fill="rgb(211,46,35)"/><text x="87.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="644" width="21" height="15" fill="rgb(206,105,51)"/><text x="87.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="660" width="21" height="15" fill="rgb(251,98,23)"/><text x="87.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="676" width="21" height="15" fill="rgb(208,147,35)"/><text x="87.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.79%)</title><rect x="84" y="692" width="21" height="15" fill="rgb(233,60,7)"/><text x="87.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="84" y="708" width="21" height="15" fill="rgb(224,39,31)"/><text x="87.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.35%)</title><rect x="89" y="724" width="16" height="15" fill="rgb(223,30,10)"/><text x="92.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="740" width="16" height="15" fill="rgb(221,192,53)"/><text x="92.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="756" width="16" height="15" fill="rgb(214,30,8)"/><text x="92.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="772" width="16" height="15" fill="rgb(245,201,24)"/><text x="92.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="89" y="788" width="16" height="15" fill="rgb(207,120,23)"/><text x="92.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="804" width="16" height="15" fill="rgb(251,101,1)"/><text x="92.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.35%)</title><rect x="89" y="820" width="16" height="15" fill="rgb(253,177,23)"/><text x="92.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="836" width="16" height="15" fill="rgb(221,125,24)"/><text x="92.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="852" width="16" height="15" fill="rgb(234,202,39)"/><text x="92.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="868" width="16" height="15" fill="rgb(221,109,47)"/><text x="92.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="89" y="884" width="16" height="15" fill="rgb(235,72,12)"/><text x="92.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="900" width="16" height="15" fill="rgb(251,114,5)"/><text x="92.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.35%)</title><rect x="89" y="916" width="16" height="15" fill="rgb(239,56,14)"/><text x="92.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="932" width="16" height="15" fill="rgb(210,98,20)"/><text x="92.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="948" width="16" height="15" fill="rgb(219,176,39)"/><text x="92.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="964" width="16" height="15" fill="rgb(233,220,11)"/><text x="92.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="89" y="980" width="16" height="15" fill="rgb(245,133,20)"/><text x="92.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="996" width="16" height="15" fill="rgb(241,12,28)"/><text x="92.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.35%)</title><rect x="89" y="1012" width="16" height="15" fill="rgb(230,93,46)"/><text x="92.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="1028" width="16" height="15" fill="rgb(213,123,45)"/><text x="92.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="1044" width="16" height="15" fill="rgb(230,168,48)"/><text x="92.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="1060" width="16" height="15" fill="rgb(229,226,3)"/><text x="92.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.35%)</title><rect x="89" y="1076" width="16" height="15" fill="rgb(243,104,13)"/><text x="92.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.35%)</title><rect x="89" y="1092" width="16" height="15" fill="rgb(243,87,47)"/><text x="92.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (3 samples, 1.35%)</title><rect x="89" y="1108" width="16" height="15" fill="rgb(251,179,32)"/><text x="92.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="94" y="1124" width="11" height="15" fill="rgb(252,108,17)"/><text x="97.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="94" y="1140" width="11" height="15" fill="rgb(225,4,42)"/><text x="97.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="94" y="1156" width="11" height="15" fill="rgb(210,132,22)"/><text x="97.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="94" y="1172" width="11" height="15" fill="rgb(245,38,9)"/><text x="97.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="94" y="1188" width="11" height="15" fill="rgb(210,67,29)"/><text x="97.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/io/formats/format.py) (2 samples, 0.90%)</title><rect x="94" y="1204" width="11" height="15" fill="rgb(221,21,45)"/><text x="97.00" y="1214.50"></text></g><g><title>DataFrameFormatter (pandas/io/formats/format.py) (1 samples, 0.45%)</title><rect x="99" y="1220" width="6" height="15" fill="rgb(242,119,32)"/><text x="102.00" y="1230.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (9 samples, 4.04%)</title><rect x="62" y="244" width="48" height="15" fill="rgb(226,171,28)"/><text x="65.00" y="254.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.04%)</title><rect x="62" y="260" width="48" height="15" fill="rgb(250,9,40)"/><text x="65.00" y="270.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.04%)</title><rect x="62" y="276" width="48" height="15" fill="rgb(246,87,4)"/><text x="65.00" y="286.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.04%)</title><rect x="62" y="292" width="48" height="15" fill="rgb(253,105,10)"/><text x="65.00" y="302.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.04%)</title><rect x="62" y="308" width="48" height="15" fill="rgb(237,209,45)"/><text x="65.00" y="318.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.04%)</title><rect x="62" y="324" width="48" height="15" fill="rgb(251,62,8)"/><text x="65.00" y="334.50">_cal..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (1 samples, 0.45%)</title><rect x="105" y="340" width="5" height="15" fill="rgb(249,106,53)"/><text x="108.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="356" width="5" height="15" fill="rgb(220,149,45)"/><text x="108.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="372" width="5" height="15" fill="rgb(252,141,11)"/><text x="108.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="388" width="5" height="15" fill="rgb(211,217,23)"/><text x="108.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="404" width="5" height="15" fill="rgb(209,147,0)"/><text x="108.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="420" width="5" height="15" fill="rgb(223,91,46)"/><text x="108.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="436" width="5" height="15" fill="rgb(245,225,50)"/><text x="108.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="452" width="5" height="15" fill="rgb(223,143,12)"/><text x="108.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="468" width="5" height="15" fill="rgb(208,65,20)"/><text x="108.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.45%)</title><rect x="105" y="484" width="5" height="15" fill="rgb(224,157,44)"/><text x="108.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="500" width="5" height="15" fill="rgb(243,45,33)"/><text x="108.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="516" width="5" height="15" fill="rgb(219,201,4)"/><text x="108.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="532" width="5" height="15" fill="rgb(218,33,45)"/><text x="108.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="548" width="5" height="15" fill="rgb(218,158,17)"/><text x="108.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="564" width="5" height="15" fill="rgb(224,65,33)"/><text x="108.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (1 samples, 0.45%)</title><rect x="105" y="580" width="5" height="15" fill="rgb(238,212,28)"/><text x="108.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="596" width="5" height="15" fill="rgb(249,173,35)"/><text x="108.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="612" width="5" height="15" fill="rgb(242,54,1)"/><text x="108.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="628" width="5" height="15" fill="rgb(224,16,46)"/><text x="108.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="644" width="5" height="15" fill="rgb(244,49,54)"/><text x="108.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="660" width="5" height="15" fill="rgb(239,167,28)"/><text x="108.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (1 samples, 0.45%)</title><rect x="105" y="676" width="5" height="15" fill="rgb(230,105,47)"/><text x="108.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="692" width="5" height="15" fill="rgb(214,97,37)"/><text x="108.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="708" width="5" height="15" fill="rgb(208,22,28)"/><text x="108.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="724" width="5" height="15" fill="rgb(212,93,50)"/><text x="108.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="740" width="5" height="15" fill="rgb(221,92,31)"/><text x="108.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="756" width="5" height="15" fill="rgb(234,209,25)"/><text x="108.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (1 samples, 0.45%)</title><rect x="105" y="772" width="5" height="15" fill="rgb(225,184,0)"/><text x="108.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="788" width="5" height="15" fill="rgb(251,114,3)"/><text x="108.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="804" width="5" height="15" fill="rgb(224,53,13)"/><text x="108.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="820" width="5" height="15" fill="rgb(226,211,21)"/><text x="108.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="836" width="5" height="15" fill="rgb(248,58,13)"/><text x="108.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="852" width="5" height="15" fill="rgb(205,210,15)"/><text x="108.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (1 samples, 0.45%)</title><rect x="105" y="868" width="5" height="15" fill="rgb(205,192,3)"/><text x="108.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="884" width="5" height="15" fill="rgb(251,51,32)"/><text x="108.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="900" width="5" height="15" fill="rgb(233,214,1)"/><text x="108.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="916" width="5" height="15" fill="rgb(221,92,1)"/><text x="108.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="932" width="5" height="15" fill="rgb(213,25,12)"/><text x="108.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="948" width="5" height="15" fill="rgb(228,137,5)"/><text x="108.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (1 samples, 0.45%)</title><rect x="105" y="964" width="5" height="15" fill="rgb(228,91,36)"/><text x="108.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="980" width="5" height="15" fill="rgb(205,99,18)"/><text x="108.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="996" width="5" height="15" fill="rgb(241,111,9)"/><text x="108.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1012" width="5" height="15" fill="rgb(229,52,9)"/><text x="108.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="1028" width="5" height="15" fill="rgb(230,13,26)"/><text x="108.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1044" width="5" height="15" fill="rgb(244,210,29)"/><text x="108.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (1 samples, 0.45%)</title><rect x="105" y="1060" width="5" height="15" fill="rgb(240,59,8)"/><text x="108.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1076" width="5" height="15" fill="rgb(249,147,29)"/><text x="108.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1092" width="5" height="15" fill="rgb(230,31,51)"/><text x="108.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1108" width="5" height="15" fill="rgb(224,141,48)"/><text x="108.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1124" width="5" height="15" fill="rgb(233,207,33)"/><text x="108.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1140" width="5" height="15" fill="rgb(246,223,53)"/><text x="108.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1156" width="5" height="15" fill="rgb(240,114,12)"/><text x="108.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="1172" width="5" height="15" fill="rgb(215,68,48)"/><text x="108.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1188" width="5" height="15" fill="rgb(239,138,39)"/><text x="108.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (1 samples, 0.45%)</title><rect x="105" y="1204" width="5" height="15" fill="rgb(242,33,1)"/><text x="108.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1220" width="5" height="15" fill="rgb(212,43,4)"/><text x="108.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1236" width="5" height="15" fill="rgb(237,161,43)"/><text x="108.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1252" width="5" height="15" fill="rgb(222,155,0)"/><text x="108.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="1268" width="5" height="15" fill="rgb(221,168,51)"/><text x="108.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1284" width="5" height="15" fill="rgb(219,109,9)"/><text x="108.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (1 samples, 0.45%)</title><rect x="105" y="1300" width="5" height="15" fill="rgb(207,158,41)"/><text x="108.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1316" width="5" height="15" fill="rgb(238,84,36)"/><text x="108.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1332" width="5" height="15" fill="rgb(225,207,5)"/><text x="108.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1348" width="5" height="15" fill="rgb(254,24,51)"/><text x="108.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="105" y="1364" width="5" height="15" fill="rgb(233,223,38)"/><text x="108.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="105" y="1380" width="5" height="15" fill="rgb(252,166,6)"/><text x="108.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (1 samples, 0.45%)</title><rect x="105" y="1396" width="5" height="15" fill="rgb(232,176,48)"/><text x="108.00" y="1406.50"></text></g><g><title>compile (re.py) (1 samples, 0.45%)</title><rect x="105" y="1412" width="5" height="15" fill="rgb(207,40,15)"/><text x="108.00" y="1422.50"></text></g><g><title>_compile (re.py) (1 samples, 0.45%)</title><rect x="105" y="1428" width="5" height="15" fill="rgb(212,123,20)"/><text x="108.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.45%)</title><rect x="105" y="1444" width="5" height="15" fill="rgb(228,63,43)"/><text x="108.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1460" width="5" height="15" fill="rgb(251,39,40)"/><text x="108.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1476" width="5" height="15" fill="rgb(216,64,25)"/><text x="108.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1492" width="5" height="15" fill="rgb(232,8,5)"/><text x="108.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1508" width="5" height="15" fill="rgb(212,159,15)"/><text x="108.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1524" width="5" height="15" fill="rgb(209,224,7)"/><text x="108.00" y="1534.50"></text></g><g><title>get (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1540" width="5" height="15" fill="rgb(237,161,46)"/><text x="108.00" y="1550.50"></text></g><g><title>__next (sre_parse.py) (1 samples, 0.45%)</title><rect x="105" y="1556" width="5" height="15" fill="rgb(221,148,43)"/><text x="108.00" y="1566.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.97%)</title><rect x="10" y="68" width="105" height="15" fill="rgb(252,109,16)"/><text x="13.00" y="78.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.97%)</title><rect x="10" y="84" width="105" height="15" fill="rgb(236,167,51)"/><text x="13.00" y="94.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.97%)</title><rect x="10" y="100" width="105" height="15" fill="rgb(211,187,34)"/><text x="13.00" y="110.50">_load_unlock..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (20 samples, 8.97%)</title><rect x="10" y="116" width="105" height="15" fill="rgb(221,174,20)"/><text x="13.00" y="126.50">exec_module ..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.97%)</title><rect x="10" y="132" width="105" height="15" fill="rgb(239,123,4)"/><text x="13.00" y="142.50">_call_with_f..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (20 samples, 8.97%)</title><rect x="10" y="148" width="105" height="15" fill="rgb(240,27,10)"/><text x="13.00" y="158.50">&lt;module&gt; (pr..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.97%)</title><rect x="10" y="164" width="105" height="15" fill="rgb(221,162,3)"/><text x="13.00" y="174.50">_find_and_lo..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (20 samples, 8.97%)</title><rect x="10" y="180" width="105" height="15" fill="rgb(253,110,41)"/><text x="13.00" y="190.50">_find_and_lo..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="62" y="196" width="53" height="15" fill="rgb(229,204,52)"/><text x="65.00" y="206.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.48%)</title><rect x="62" y="212" width="53" height="15" fill="rgb(205,120,19)"/><text x="65.00" y="222.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.48%)</title><rect x="62" y="228" width="53" height="15" fill="rgb(209,67,31)"/><text x="65.00" y="238.50">_call..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.45%)</title><rect x="110" y="244" width="5" height="15" fill="rgb(225,141,50)"/><text x="113.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="260" width="5" height="15" fill="rgb(210,159,16)"/><text x="113.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="276" width="5" height="15" fill="rgb(224,15,42)"/><text x="113.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="292" width="5" height="15" fill="rgb(233,123,25)"/><text x="113.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="308" width="5" height="15" fill="rgb(240,72,54)"/><text x="113.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="324" width="5" height="15" fill="rgb(244,126,3)"/><text x="113.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.45%)</title><rect x="110" y="340" width="5" height="15" fill="rgb(228,48,14)"/><text x="113.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="356" width="5" height="15" fill="rgb(225,201,33)"/><text x="113.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="372" width="5" height="15" fill="rgb(239,186,25)"/><text x="113.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="388" width="5" height="15" fill="rgb(225,116,31)"/><text x="113.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="404" width="5" height="15" fill="rgb(245,34,6)"/><text x="113.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="420" width="5" height="15" fill="rgb(217,94,18)"/><text x="113.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.45%)</title><rect x="110" y="436" width="5" height="15" fill="rgb(215,12,30)"/><text x="113.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="452" width="5" height="15" fill="rgb(249,81,9)"/><text x="113.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="468" width="5" height="15" fill="rgb(209,144,33)"/><text x="113.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="110" y="484" width="5" height="15" fill="rgb(215,200,1)"/><text x="113.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="500" width="5" height="15" fill="rgb(250,189,34)"/><text x="113.00" y="510.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="516" width="5" height="15" fill="rgb(226,5,52)"/><text x="113.00" y="526.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.45%)</title><rect x="110" y="532" width="5" height="15" fill="rgb(221,229,50)"/><text x="113.00" y="542.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.45%)</title><rect x="121" y="196" width="5" height="15" fill="rgb(219,226,35)"/><text x="124.00" y="206.50"></text></g><g><title>__init__ (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="126" y="196" width="5" height="15" fill="rgb(211,193,52)"/><text x="129.00" y="206.50"></text></g><g><title>__call__ (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="131" y="228" width="5" height="15" fill="rgb(207,89,47)"/><text x="134.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (2 samples, 0.90%)</title><rect x="142" y="292" width="10" height="15" fill="rgb(229,200,30)"/><text x="145.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="147" y="308" width="5" height="15" fill="rgb(235,63,40)"/><text x="150.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="147" y="324" width="5" height="15" fill="rgb(217,228,22)"/><text x="150.00" y="334.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.45%)</title><rect x="147" y="340" width="5" height="15" fill="rgb(252,67,7)"/><text x="150.00" y="350.50"></text></g><g><title>_dispatch (joblib/parallel.py) (5 samples, 2.24%)</title><rect x="131" y="196" width="27" height="15" fill="rgb(248,34,10)"/><text x="134.00" y="206.50">_..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (5 samples, 2.24%)</title><rect x="131" y="212" width="27" height="15" fill="rgb(229,205,49)"/><text x="134.00" y="222.50">a..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.79%)</title><rect x="136" y="228" width="22" height="15" fill="rgb(216,50,23)"/><text x="139.00" y="238.50">_..</text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="136" y="244" width="22" height="15" fill="rgb(231,94,31)"/><text x="139.00" y="254.50">_..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="136" y="260" width="22" height="15" fill="rgb(226,119,44)"/><text x="139.00" y="270.50">&lt;..</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (4 samples, 1.79%)</title><rect x="136" y="276" width="22" height="15" fill="rgb(222,44,10)"/><text x="139.00" y="286.50">_..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="152" y="292" width="6" height="15" fill="rgb(213,85,22)"/><text x="155.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="152" y="308" width="6" height="15" fill="rgb(205,177,35)"/><text x="155.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="152" y="324" width="6" height="15" fill="rgb(233,41,2)"/><text x="155.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.45%)</title><rect x="152" y="340" width="6" height="15" fill="rgb(212,228,44)"/><text x="155.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.45%)</title><rect x="152" y="356" width="6" height="15" fill="rgb(237,62,20)"/><text x="155.00" y="366.50"></text></g><g><title>diophantine_simplify (mem_overlap.c) (1 samples, 0.45%)</title><rect x="152" y="372" width="6" height="15" fill="rgb(240,163,50)"/><text x="155.00" y="382.50"></text></g><g><title>0x7f3235d724f0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="152" y="388" width="6" height="15" fill="rgb(224,112,13)"/><text x="155.00" y="398.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="158" y="196" width="5" height="15" fill="rgb(223,83,52)"/><text x="161.00" y="206.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (10 samples, 4.48%)</title><rect x="115" y="68" width="53" height="15" fill="rgb(239,42,28)"/><text x="118.00" y="78.50">profi..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (10 samples, 4.48%)</title><rect x="115" y="84" width="53" height="15" fill="rgb(208,189,38)"/><text x="118.00" y="94.50">setup..</text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (10 samples, 4.48%)</title><rect x="115" y="100" width="53" height="15" fill="rgb(254,207,29)"/><text x="118.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 4.48%)</title><rect x="115" y="116" width="53" height="15" fill="rgb(210,83,5)"/><text x="118.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (10 samples, 4.48%)</title><rect x="115" y="132" width="53" height="15" fill="rgb(238,170,23)"/><text x="118.00" y="142.50">&lt;lamb..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (10 samples, 4.48%)</title><rect x="115" y="148" width="53" height="15" fill="rgb(213,159,39)"/><text x="118.00" y="158.50">predi..</text></g><g><title>__call__ (joblib/parallel.py) (10 samples, 4.48%)</title><rect x="115" y="164" width="53" height="15" fill="rgb(244,108,2)"/><text x="118.00" y="174.50">__cal..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (10 samples, 4.48%)</title><rect x="115" y="180" width="53" height="15" fill="rgb(205,189,24)"/><text x="118.00" y="190.50">dispa..</text></g><g><title>put (queue.py) (1 samples, 0.45%)</title><rect x="163" y="196" width="5" height="15" fill="rgb(222,36,51)"/><text x="166.00" y="206.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.45%)</title><rect x="168" y="68" width="6" height="15" fill="rgb(210,107,18)"/><text x="171.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.45%)</title><rect x="168" y="84" width="6" height="15" fill="rgb(210,78,23)"/><text x="171.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="168" y="100" width="6" height="15" fill="rgb(247,99,19)"/><text x="171.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="168" y="116" width="6" height="15" fill="rgb(221,76,26)"/><text x="171.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="168" y="132" width="6" height="15" fill="rgb(249,153,39)"/><text x="171.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="168" y="148" width="6" height="15" fill="rgb(227,126,37)"/><text x="171.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="168" y="164" width="6" height="15" fill="rgb(242,194,46)"/><text x="171.00" y="174.50"></text></g><g><title>to_sequence (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.45%)</title><rect x="168" y="180" width="6" height="15" fill="rgb(218,229,29)"/><text x="171.00" y="190.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.45%)</title><rect x="168" y="196" width="6" height="15" fill="rgb(219,134,10)"/><text x="171.00" y="206.50"></text></g><g><title>_var_as_dict (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.45%)</title><rect x="168" y="212" width="6" height="15" fill="rgb(215,227,44)"/><text x="171.00" y="222.50"></text></g><g><title>_numpy_array (mlprodict/onnxrt/onnx2py_helper.py) (1 samples, 0.45%)</title><rect x="168" y="228" width="6" height="15" fill="rgb(221,113,43)"/><text x="171.00" y="238.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="168" y="244" width="6" height="15" fill="rgb(241,26,2)"/><text x="171.00" y="254.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (1 samples, 0.45%)</title><rect x="168" y="260" width="6" height="15" fill="rgb(211,192,26)"/><text x="171.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.45%)</title><rect x="168" y="276" width="6" height="15" fill="rgb(232,207,16)"/><text x="171.00" y="286.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.45%)</title><rect x="168" y="292" width="6" height="15" fill="rgb(248,81,9)"/><text x="171.00" y="302.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.45%)</title><rect x="168" y="308" width="6" height="15" fill="rgb(207,187,13)"/><text x="171.00" y="318.50"></text></g><g><title>discover_dimensions (ctors.c) (1 samples, 0.45%)</title><rect x="168" y="324" width="6" height="15" fill="rgb(221,24,37)"/><text x="171.00" y="334.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (2 samples, 0.90%)</title><rect x="174" y="68" width="10" height="15" fill="rgb(244,39,2)"/><text x="177.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (2 samples, 0.90%)</title><rect x="174" y="84" width="10" height="15" fill="rgb(232,137,3)"/><text x="177.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="174" y="100" width="10" height="15" fill="rgb(217,74,29)"/><text x="177.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="174" y="116" width="10" height="15" fill="rgb(245,67,18)"/><text x="177.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.90%)</title><rect x="174" y="132" width="10" height="15" fill="rgb(236,225,17)"/><text x="177.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.90%)</title><rect x="174" y="148" width="10" height="15" fill="rgb(227,42,50)"/><text x="177.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.90%)</title><rect x="174" y="164" width="10" height="15" fill="rgb(222,87,14)"/><text x="177.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.90%)</title><rect x="174" y="180" width="10" height="15" fill="rgb(231,60,33)"/><text x="177.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.90%)</title><rect x="174" y="196" width="10" height="15" fill="rgb(232,38,28)"/><text x="177.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="212" width="10" height="15" fill="rgb(246,137,10)"/><text x="177.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="228" width="10" height="15" fill="rgb(220,103,20)"/><text x="177.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="244" width="10" height="15" fill="rgb(249,41,45)"/><text x="177.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="174" y="260" width="10" height="15" fill="rgb(213,63,33)"/><text x="177.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="276" width="10" height="15" fill="rgb(208,165,26)"/><text x="177.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.90%)</title><rect x="174" y="292" width="10" height="15" fill="rgb(229,20,31)"/><text x="177.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="308" width="10" height="15" fill="rgb(237,76,24)"/><text x="177.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="324" width="10" height="15" fill="rgb(213,61,9)"/><text x="177.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="340" width="10" height="15" fill="rgb(228,122,35)"/><text x="177.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.90%)</title><rect x="174" y="356" width="10" height="15" fill="rgb(241,4,7)"/><text x="177.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.90%)</title><rect x="174" y="372" width="10" height="15" fill="rgb(210,92,16)"/><text x="177.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.90%)</title><rect x="174" y="388" width="10" height="15" fill="rgb(224,25,26)"/><text x="177.00" y="398.50"></text></g><g><title>get_rst_doc (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.90%)</title><rect x="174" y="404" width="10" height="15" fill="rgb(245,10,40)"/><text x="177.00" y="414.50"></text></g><g><title>render (jinja2/asyncsupport.py) (2 samples, 0.90%)</title><rect x="174" y="420" width="10" height="15" fill="rgb(219,225,41)"/><text x="177.00" y="430.50"></text></g><g><title>render (jinja2/environment.py) (2 samples, 0.90%)</title><rect x="174" y="436" width="10" height="15" fill="rgb(210,9,19)"/><text x="177.00" y="446.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.90%)</title><rect x="174" y="452" width="10" height="15" fill="rgb(244,104,42)"/><text x="177.00" y="462.50"></text></g><g><title>root (&lt;template&gt;) (2 samples, 0.90%)</title><rect x="174" y="468" width="10" height="15" fill="rgb(226,34,52)"/><text x="177.00" y="478.50"></text></g><g><title>call (jinja2/runtime.py) (2 samples, 0.90%)</title><rect x="174" y="484" width="10" height="15" fill="rgb(235,229,40)"/><text x="177.00" y="494.50"></text></g><g><title>format_option (mlprodict/onnxrt/doc/doc_helper.py) (2 samples, 0.90%)</title><rect x="174" y="500" width="10" height="15" fill="rgb(222,219,3)"/><text x="177.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="179" y="516" width="5" height="15" fill="rgb(209,168,17)"/><text x="182.00" y="526.50"></text></g><g><title>_initialize_backend (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="189" y="180" width="6" height="15" fill="rgb(220,26,7)"/><text x="192.00" y="190.50"></text></g><g><title>update_wrapper (functools.py) (3 samples, 1.35%)</title><rect x="353" y="228" width="16" height="15" fill="rgb(244,176,0)"/><text x="356.00" y="238.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (13 samples, 5.83%)</title><rect x="306" y="196" width="69" height="15" fill="rgb(250,31,39)"/><text x="309.00" y="206.50">&lt;genexp..</text></g><g><title>delayed (joblib/parallel.py) (9 samples, 4.04%)</title><rect x="327" y="212" width="48" height="15" fill="rgb(225,30,40)"/><text x="330.00" y="222.50">dela..</text></g><g><title>wraps (functools.py) (1 samples, 0.45%)</title><rect x="369" y="228" width="6" height="15" fill="rgb(224,27,11)"/><text x="372.00" y="238.50"></text></g><g><title>__init__ (joblib/parallel.py) (6 samples, 2.69%)</title><rect x="375" y="196" width="31" height="15" fill="rgb(245,101,10)"/><text x="378.00" y="206.50">__..</text></g><g><title>__init__ (joblib/parallel.py) (3 samples, 1.35%)</title><rect x="438" y="212" width="16" height="15" fill="rgb(233,64,25)"/><text x="441.00" y="222.50"></text></g><g><title>0x7f3236b7016d (libc-2.29.so) (1 samples, 0.45%)</title><rect x="449" y="228" width="5" height="15" fill="rgb(226,161,46)"/><text x="452.00" y="238.50"></text></g><g><title>batch_completed (joblib/_parallel_backends.py) (1 samples, 0.45%)</title><rect x="491" y="244" width="5" height="15" fill="rgb(226,77,42)"/><text x="494.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (6 samples, 2.69%)</title><rect x="470" y="228" width="32" height="15" fill="rgb(227,86,12)"/><text x="473.00" y="238.50">__..</text></g><g><title>time_time (python3.7) (1 samples, 0.45%)</title><rect x="496" y="244" width="6" height="15" fill="rgb(224,164,53)"/><text x="499.00" y="254.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.45%)</title><rect x="496" y="260" width="6" height="15" fill="rgb(232,64,4)"/><text x="499.00" y="270.50"></text></g><g><title>0x7f3210582d15 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="586" y="340" width="6" height="15" fill="rgb(247,38,14)"/><text x="589.00" y="350.50"></text></g><g><title>0x7f3210592f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="586" y="324" width="11" height="15" fill="rgb(226,98,18)"/><text x="589.00" y="334.50"></text></g><g><title>0x7f3210582d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="592" y="340" width="5" height="15" fill="rgb(244,180,10)"/><text x="595.00" y="350.50"></text></g><g><title>0x7f321056fb8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="592" y="356" width="5" height="15" fill="rgb(223,197,35)"/><text x="595.00" y="366.50"></text></g><g><title>0x7f3210592f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="597" y="324" width="5" height="15" fill="rgb(217,220,38)"/><text x="600.00" y="334.50"></text></g><g><title>0x7f32105a124c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="602" y="356" width="5" height="15" fill="rgb(244,131,32)"/><text x="605.00" y="366.50"></text></g><g><title>0x7f32105855d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="607" y="388" width="6" height="15" fill="rgb(229,182,27)"/><text x="610.00" y="398.50"></text></g><g><title>0x7f321057b10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="623" y="404" width="6" height="15" fill="rgb(239,178,23)"/><text x="626.00" y="414.50"></text></g><g><title>_buffer_info_cmp (buffer.c) (1 samples, 0.45%)</title><rect x="634" y="452" width="5" height="15" fill="rgb(244,149,9)"/><text x="637.00" y="462.50"></text></g><g><title>0x7f3236b5e6e3 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="634" y="468" width="5" height="15" fill="rgb(242,29,0)"/><text x="637.00" y="478.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.45%)</title><rect x="639" y="452" width="5" height="15" fill="rgb(210,227,17)"/><text x="642.00" y="462.50"></text></g><g><title>0x7f3236b4fa38 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="639" y="468" width="5" height="15" fill="rgb(226,86,53)"/><text x="642.00" y="478.50"></text></g><g><title>0x7f3210585666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 3.14%)</title><rect x="613" y="388" width="37" height="15" fill="rgb(232,19,44)"/><text x="616.00" y="398.50">0x7..</text></g><g><title>0x7f321057b2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.79%)</title><rect x="629" y="404" width="21" height="15" fill="rgb(235,216,9)"/><text x="632.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (4 samples, 1.79%)</title><rect x="629" y="420" width="21" height="15" fill="rgb(231,142,41)"/><text x="632.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (4 samples, 1.79%)</title><rect x="629" y="436" width="21" height="15" fill="rgb(251,206,13)"/><text x="632.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.45%)</title><rect x="644" y="452" width="6" height="15" fill="rgb(219,59,15)"/><text x="647.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="644" y="468" width="6" height="15" fill="rgb(210,85,22)"/><text x="647.00" y="478.50"></text></g><g><title>0x7f3210585d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (9 samples, 4.04%)</title><rect x="607" y="372" width="48" height="15" fill="rgb(229,91,3)"/><text x="610.00" y="382.50">0x7f..</text></g><g><title>0x7f32105856fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="650" y="388" width="5" height="15" fill="rgb(223,187,28)"/><text x="653.00" y="398.50"></text></g><g><title>0x7f32105a12df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (10 samples, 4.48%)</title><rect x="607" y="356" width="53" height="15" fill="rgb(235,197,43)"/><text x="610.00" y="366.50">0x7f3..</text></g><g><title>0x7f3210585e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="655" y="372" width="5" height="15" fill="rgb(211,173,39)"/><text x="658.00" y="382.50"></text></g><g><title>0x7f3210578f40 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="655" y="388" width="5" height="15" fill="rgb(213,146,1)"/><text x="658.00" y="398.50"></text></g><g><title>0x7f32105a1364 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="660" y="356" width="6" height="15" fill="rgb(234,78,20)"/><text x="663.00" y="366.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.45%)</title><rect x="660" y="372" width="6" height="15" fill="rgb(207,219,2)"/><text x="663.00" y="382.50"></text></g><g><title>0x7f32105a1511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="666" y="356" width="5" height="15" fill="rgb(205,46,19)"/><text x="669.00" y="366.50"></text></g><g><title>0x7f32105a1592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="671" y="356" width="5" height="15" fill="rgb(254,32,47)"/><text x="674.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="671" y="372" width="5" height="15" fill="rgb(232,6,4)"/><text x="674.00" y="382.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.45%)</title><rect x="671" y="388" width="5" height="15" fill="rgb(252,134,18)"/><text x="674.00" y="398.50"></text></g><g><title>PyArray_Zeros (ctors.c) (1 samples, 0.45%)</title><rect x="671" y="404" width="5" height="15" fill="rgb(233,121,22)"/><text x="674.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.45%)</title><rect x="671" y="420" width="5" height="15" fill="rgb(228,18,27)"/><text x="674.00" y="430.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c) (1 samples, 0.45%)</title><rect x="671" y="436" width="5" height="15" fill="rgb(236,115,20)"/><text x="674.00" y="446.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.45%)</title><rect x="671" y="452" width="5" height="15" fill="rgb(233,7,22)"/><text x="674.00" y="462.50"></text></g><g><title>0x7f32105768a1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="676" y="372" width="6" height="15" fill="rgb(216,131,13)"/><text x="679.00" y="382.50"></text></g><g><title>0x7f32105769af (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="682" y="372" width="5" height="15" fill="rgb(245,223,20)"/><text x="685.00" y="382.50"></text></g><g><title>0x7f32105a192f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.35%)</title><rect x="676" y="356" width="16" height="15" fill="rgb(233,196,49)"/><text x="679.00" y="366.50"></text></g><g><title>0x7f3210576a05 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="687" y="372" width="5" height="15" fill="rgb(224,207,44)"/><text x="690.00" y="382.50"></text></g><g><title>0x7f3210592fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 8.07%)</title><rect x="602" y="324" width="95" height="15" fill="rgb(233,181,21)"/><text x="605.00" y="334.50">0x7f3210592..</text></g><g><title>0x7f32105a2405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (18 samples, 8.07%)</title><rect x="602" y="340" width="95" height="15" fill="rgb(211,53,9)"/><text x="605.00" y="350.50">0x7f32105a2..</text></g><g><title>0x7f32105a1c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="692" y="356" width="5" height="15" fill="rgb(233,91,0)"/><text x="695.00" y="366.50"></text></g><g><title>0x7f3210579529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="692" y="372" width="5" height="15" fill="rgb(216,71,54)"/><text x="695.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.45%)</title><rect x="692" y="388" width="5" height="15" fill="rgb(225,144,9)"/><text x="695.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.45%)</title><rect x="692" y="404" width="5" height="15" fill="rgb(220,19,0)"/><text x="695.00" y="414.50"></text></g><g><title>0x7f3210592fbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="697" y="324" width="6" height="15" fill="rgb(228,72,48)"/><text x="700.00" y="334.50"></text></g><g><title>0x7f3210593002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="703" y="324" width="5" height="15" fill="rgb(238,154,32)"/><text x="706.00" y="334.50"></text></g><g><title>0x7f321059305a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.35%)</title><rect x="708" y="324" width="16" height="15" fill="rgb(236,173,27)"/><text x="711.00" y="334.50"></text></g><g><title>array_take (methods.c) (3 samples, 1.35%)</title><rect x="708" y="340" width="16" height="15" fill="rgb(225,25,37)"/><text x="711.00" y="350.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (2 samples, 0.90%)</title><rect x="713" y="356" width="11" height="15" fill="rgb(248,60,4)"/><text x="716.00" y="366.50"></text></g><g><title>PyArray_CheckAxis (ctors.c) (1 samples, 0.45%)</title><rect x="719" y="372" width="5" height="15" fill="rgb(217,39,27)"/><text x="722.00" y="382.50"></text></g><g><title>0x7f321059314f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="724" y="324" width="10" height="15" fill="rgb(236,148,45)"/><text x="727.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.90%)</title><rect x="724" y="340" width="10" height="15" fill="rgb(219,147,7)"/><text x="727.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.90%)</title><rect x="724" y="356" width="10" height="15" fill="rgb(244,102,40)"/><text x="727.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.90%)</title><rect x="724" y="372" width="10" height="15" fill="rgb(246,211,9)"/><text x="727.00" y="382.50"></text></g><g><title>0x7f3210593163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="734" y="324" width="6" height="15" fill="rgb(217,207,32)"/><text x="737.00" y="334.50"></text></g><g><title>0x7f32105931bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="740" y="324" width="5" height="15" fill="rgb(251,146,36)"/><text x="743.00" y="334.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.45%)</title><rect x="740" y="340" width="5" height="15" fill="rgb(244,141,18)"/><text x="743.00" y="350.50"></text></g><g><title>0x7f3210593d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (31 samples, 13.90%)</title><rect x="586" y="308" width="164" height="15" fill="rgb(241,100,3)"/><text x="589.00" y="318.50">0x7f3210593d2e (sklea..</text></g><g><title>0x7f32105932b5 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="745" y="324" width="5" height="15" fill="rgb(229,7,20)"/><text x="748.00" y="334.50"></text></g><g><title>0x7f3236b70120 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="745" y="340" width="5" height="15" fill="rgb(216,36,34)"/><text x="748.00" y="350.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (2 samples, 0.90%)</title><rect x="750" y="308" width="11" height="15" fill="rgb(248,200,40)"/><text x="753.00" y="318.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (10 samples, 4.48%)</title><rect x="761" y="308" width="53" height="15" fill="rgb(209,25,41)"/><text x="764.00" y="318.50">check..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (5 samples, 2.24%)</title><rect x="787" y="324" width="27" height="15" fill="rgb(215,229,19)"/><text x="790.00" y="334.50">&lt;..</text></g><g><title>predict (sklearn/tree/_classes.py) (47 samples, 21.08%)</title><rect x="570" y="292" width="249" height="15" fill="rgb(206,61,32)"/><text x="573.00" y="302.50">predict (sklearn/tree/_classes.py)</text></g><g><title>is_classifier (sklearn/base.py) (1 samples, 0.45%)</title><rect x="814" y="308" width="5" height="15" fill="rgb(239,1,16)"/><text x="817.00" y="318.50"></text></g><g><title>_ufunc_setup_flags (ufunc_object.c) (1 samples, 0.45%)</title><rect x="824" y="324" width="6" height="15" fill="rgb(232,81,43)"/><text x="827.00" y="334.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="830" y="324" width="5" height="15" fill="rgb(242,222,5)"/><text x="833.00" y="334.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="830" y="340" width="5" height="15" fill="rgb(243,19,3)"/><text x="833.00" y="350.50"></text></g><g><title>PyArray_CompareLists (multiarraymodule.c) (1 samples, 0.45%)</title><rect x="835" y="340" width="5" height="15" fill="rgb(238,138,34)"/><text x="838.00" y="350.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.45%)</title><rect x="840" y="340" width="6" height="15" fill="rgb(238,104,40)"/><text x="843.00" y="350.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.45%)</title><rect x="840" y="356" width="6" height="15" fill="rgb(241,4,10)"/><text x="843.00" y="366.50"></text></g><g><title>DOUBLE_add (loops.c.src) (1 samples, 0.45%)</title><rect x="846" y="356" width="5" height="15" fill="rgb(217,151,43)"/><text x="849.00" y="366.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.45%)</title><rect x="851" y="356" width="5" height="15" fill="rgb(250,150,10)"/><text x="854.00" y="366.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (2 samples, 0.90%)</title><rect x="856" y="356" width="11" height="15" fill="rgb(252,54,8)"/><text x="859.00" y="366.50"></text></g><g><title>NpyIter_GetInnerStrideArray (nditer_api.c) (1 samples, 0.45%)</title><rect x="867" y="356" width="5" height="15" fill="rgb(247,37,42)"/><text x="870.00" y="366.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (62 samples, 27.80%)</title><rect x="549" y="260" width="328" height="15" fill="rgb(254,57,30)"/><text x="552.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (62 samples, 27.80%)</title><rect x="549" y="276" width="328" height="15" fill="rgb(239,28,15)"/><text x="552.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_fo..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 4.93%)</title><rect x="819" y="292" width="58" height="15" fill="rgb(224,36,14)"/><text x="822.00" y="302.50">ufunc_..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 4.48%)</title><rect x="824" y="308" width="53" height="15" fill="rgb(221,31,26)"/><text x="827.00" y="318.50">PyUFu..</text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 3.59%)</title><rect x="835" y="324" width="42" height="15" fill="rgb(234,211,29)"/><text x="838.00" y="334.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c) (6 samples, 2.69%)</title><rect x="846" y="340" width="31" height="15" fill="rgb(211,210,50)"/><text x="849.00" y="350.50">it..</text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.45%)</title><rect x="872" y="356" width="5" height="15" fill="rgb(220,200,32)"/><text x="875.00" y="366.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.45%)</title><rect x="872" y="372" width="5" height="15" fill="rgb(243,184,6)"/><text x="875.00" y="382.50"></text></g><g><title>__exit__ (joblib/parallel.py) (5 samples, 2.24%)</title><rect x="877" y="260" width="27" height="15" fill="rgb(245,69,13)"/><text x="880.00" y="270.50">_..</text></g><g><title>unregister (joblib/parallel.py) (3 samples, 1.35%)</title><rect x="888" y="276" width="16" height="15" fill="rgb(222,93,4)"/><text x="891.00" y="286.50"></text></g><g><title>_dispatch (joblib/parallel.py) (102 samples, 45.74%)</title><rect x="406" y="196" width="540" height="15" fill="rgb(251,203,47)"/><text x="409.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>apply_async (joblib/_parallel_backends.py) (93 samples, 41.70%)</title><rect x="454" y="212" width="492" height="15" fill="rgb(232,220,43)"/><text x="457.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (84 samples, 37.67%)</title><rect x="502" y="228" width="444" height="15" fill="rgb(217,221,0)"/><text x="505.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (82 samples, 36.77%)</title><rect x="512" y="244" width="434" height="15" fill="rgb(251,84,42)"/><text x="515.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (8 samples, 3.59%)</title><rect x="904" y="260" width="42" height="15" fill="rgb(242,73,25)"/><text x="907.00" y="270.50">__i..</text></g><g><title>__enter__ (threading.py) (1 samples, 0.45%)</title><rect x="967" y="212" width="6" height="15" fill="rgb(240,198,27)"/><text x="970.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.45%)</title><rect x="967" y="228" width="6" height="15" fill="rgb(236,92,16)"/><text x="970.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.45%)</title><rect x="967" y="244" width="6" height="15" fill="rgb(226,0,0)"/><text x="970.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="967" y="260" width="6" height="15" fill="rgb(252,114,48)"/><text x="970.00" y="270.50"></text></g><g><title>_qsize (queue.py) (2 samples, 0.90%)</title><rect x="973" y="212" width="10" height="15" fill="rgb(222,136,46)"/><text x="976.00" y="222.50"></text></g><g><title>get (queue.py) (9 samples, 4.04%)</title><rect x="946" y="196" width="48" height="15" fill="rgb(240,225,35)"/><text x="949.00" y="206.50">get ..</text></g><g><title>notify (threading.py) (2 samples, 0.90%)</title><rect x="983" y="212" width="11" height="15" fill="rgb(236,62,32)"/><text x="986.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (1 samples, 0.45%)</title><rect x="988" y="228" width="6" height="15" fill="rgb(224,17,26)"/><text x="991.00" y="238.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.45%)</title><rect x="988" y="244" width="6" height="15" fill="rgb(231,118,25)"/><text x="991.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.79%)</title><rect x="1036" y="212" width="21" height="15" fill="rgb(217,218,41)"/><text x="1039.00" y="222.50"></text></g><g><title>0x7f3236b65e7a (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1078" y="228" width="6" height="15" fill="rgb(246,119,2)"/><text x="1081.00" y="238.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (8 samples, 3.59%)</title><rect x="1057" y="212" width="43" height="15" fill="rgb(207,61,35)"/><text x="1060.00" y="222.50">get_..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (3 samples, 1.35%)</title><rect x="1084" y="228" width="16" height="15" fill="rgb(240,111,44)"/><text x="1087.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (21 samples, 9.42%)</title><rect x="994" y="196" width="111" height="15" fill="rgb(210,135,25)"/><text x="997.00" y="206.50">get_nested_ba..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.45%)</title><rect x="1100" y="212" width="5" height="15" fill="rgb(213,203,47)"/><text x="1103.00" y="222.50"></text></g><g><title>__exit__ (threading.py) (1 samples, 0.45%)</title><rect x="1115" y="212" width="6" height="15" fill="rgb(242,152,35)"/><text x="1118.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (178 samples, 79.82%)</title><rect x="195" y="180" width="942" height="15" fill="rgb(250,42,36)"/><text x="198.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (6 samples, 2.69%)</title><rect x="1105" y="196" width="32" height="15" fill="rgb(243,119,28)"/><text x="1108.00" y="206.50">pu..</text></g><g><title>notify (threading.py) (3 samples, 1.35%)</title><rect x="1121" y="212" width="16" height="15" fill="rgb(234,170,30)"/><text x="1124.00" y="222.50"></text></g><g><title>_is_owned (threading.py) (2 samples, 0.90%)</title><rect x="1126" y="228" width="11" height="15" fill="rgb(237,226,47)"/><text x="1129.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (181 samples, 81.17%)</title><rect x="189" y="164" width="958" height="15" fill="rgb(242,43,27)"/><text x="192.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (2 samples, 0.90%)</title><rect x="1137" y="180" width="10" height="15" fill="rgb(220,97,21)"/><text x="1140.00" y="190.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (183 samples, 82.06%)</title><rect x="184" y="68" width="968" height="15" fill="rgb(236,135,0)"/><text x="187.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (183 samples, 82.06%)</title><rect x="184" y="84" width="968" height="15" fill="rgb(248,116,42)"/><text x="187.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (183 samples, 82.06%)</title><rect x="184" y="100" width="968" height="15" fill="rgb(228,48,21)"/><text x="187.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 82.06%)</title><rect x="184" y="116" width="968" height="15" fill="rgb(249,111,47)"/><text x="187.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 82.06%)</title><rect x="184" y="132" width="968" height="15" fill="rgb(240,175,20)"/><text x="187.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (183 samples, 82.06%)</title><rect x="184" y="148" width="968" height="15" fill="rgb(206,192,22)"/><text x="187.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.45%)</title><rect x="1147" y="164" width="5" height="15" fill="rgb(249,111,51)"/><text x="1150.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1147" y="180" width="5" height="15" fill="rgb(223,177,38)"/><text x="1150.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1147" y="196" width="5" height="15" fill="rgb(213,128,45)"/><text x="1150.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.45%)</title><rect x="1147" y="212" width="5" height="15" fill="rgb(223,99,20)"/><text x="1150.00" y="222.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.45%)</title><rect x="1152" y="116" width="6" height="15" fill="rgb(209,203,12)"/><text x="1155.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py) (1 samples, 0.45%)</title><rect x="1152" y="132" width="6" height="15" fill="rgb(226,9,36)"/><text x="1155.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;) (1 samples, 0.45%)</title><rect x="1152" y="148" width="6" height="15" fill="rgb(247,38,7)"/><text x="1155.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.45%)</title><rect x="1152" y="164" width="6" height="15" fill="rgb(208,48,32)"/><text x="1155.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py) (1 samples, 0.45%)</title><rect x="1152" y="180" width="6" height="15" fill="rgb(223,126,10)"/><text x="1155.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py) (1 samples, 0.45%)</title><rect x="1152" y="196" width="6" height="15" fill="rgb(217,87,19)"/><text x="1155.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.45%)</title><rect x="1158" y="132" width="5" height="15" fill="rgb(206,139,16)"/><text x="1161.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (1 samples, 0.45%)</title><rect x="1158" y="148" width="5" height="15" fill="rgb(221,42,53)"/><text x="1161.00" y="158.50"></text></g><g><title>clone (sklearn/base.py) (1 samples, 0.45%)</title><rect x="1158" y="164" width="5" height="15" fill="rgb(250,36,5)"/><text x="1161.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (1 samples, 0.45%)</title><rect x="1158" y="180" width="5" height="15" fill="rgb(237,186,42)"/><text x="1161.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (1 samples, 0.45%)</title><rect x="1158" y="196" width="5" height="15" fill="rgb(219,78,36)"/><text x="1161.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.45%)</title><rect x="1158" y="212" width="5" height="15" fill="rgb(212,2,40)"/><text x="1161.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.45%)</title><rect x="1158" y="228" width="5" height="15" fill="rgb(219,149,14)"/><text x="1161.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.45%)</title><rect x="1158" y="244" width="5" height="15" fill="rgb(205,39,27)"/><text x="1161.00" y="254.50"></text></g><g><title>_signature_from_function (inspect.py) (1 samples, 0.45%)</title><rect x="1158" y="260" width="5" height="15" fill="rgb(211,133,49)"/><text x="1161.00" y="270.50"></text></g><g><title>__init__ (inspect.py) (1 samples, 0.45%)</title><rect x="1158" y="276" width="5" height="15" fill="rgb(253,95,22)"/><text x="1161.00" y="286.50"></text></g><g><title>__call__ (enum.py) (1 samples, 0.45%)</title><rect x="1158" y="292" width="5" height="15" fill="rgb(205,168,45)"/><text x="1161.00" y="302.50"></text></g><g><title>__new__ (enum.py) (1 samples, 0.45%)</title><rect x="1158" y="308" width="5" height="15" fill="rgb(228,190,42)"/><text x="1161.00" y="318.50"></text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (1 samples, 0.45%)</title><rect x="1163" y="164" width="5" height="15" fill="rgb(234,216,41)"/><text x="1166.00" y="174.50"></text></g><g><title>delayed (joblib/parallel.py) (1 samples, 0.45%)</title><rect x="1163" y="180" width="5" height="15" fill="rgb(248,65,41)"/><text x="1166.00" y="190.50"></text></g><g><title>_generate_sample_indices (sklearn/ensemble/_forest.py) (1 samples, 0.45%)</title><rect x="1168" y="260" width="6" height="15" fill="rgb(251,204,27)"/><text x="1171.00" y="270.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (1 samples, 0.45%)</title><rect x="1168" y="276" width="6" height="15" fill="rgb(250,36,35)"/><text x="1171.00" y="286.50"></text></g><g><title>__init__ (mtrand.c) (1 samples, 0.45%)</title><rect x="1168" y="292" width="6" height="15" fill="rgb(226,182,37)"/><text x="1171.00" y="302.50"></text></g><g><title>RandomState___init__ (mtrand.c) (1 samples, 0.45%)</title><rect x="1168" y="308" width="6" height="15" fill="rgb(247,31,12)"/><text x="1171.00" y="318.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (1 samples, 0.45%)</title><rect x="1168" y="324" width="6" height="15" fill="rgb(242,4,13)"/><text x="1171.00" y="334.50"></text></g><g><title>__init__ (mt19937.c) (1 samples, 0.45%)</title><rect x="1168" y="340" width="6" height="15" fill="rgb(249,143,11)"/><text x="1171.00" y="350.50"></text></g><g><title>MT19937___init__ (mt19937.c) (1 samples, 0.45%)</title><rect x="1168" y="356" width="6" height="15" fill="rgb(207,53,14)"/><text x="1171.00" y="366.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.45%)</title><rect x="1168" y="372" width="6" height="15" fill="rgb(233,203,40)"/><text x="1171.00" y="382.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.45%)</title><rect x="1168" y="388" width="6" height="15" fill="rgb(222,146,54)"/><text x="1171.00" y="398.50"></text></g><g><title>generate_state (bit_generator.c) (1 samples, 0.45%)</title><rect x="1168" y="404" width="6" height="15" fill="rgb(247,211,28)"/><text x="1171.00" y="414.50"></text></g><g><title>array_assign_subscript (mapping.c) (1 samples, 0.45%)</title><rect x="1168" y="420" width="6" height="15" fill="rgb(215,216,22)"/><text x="1171.00" y="430.50"></text></g><g><title>UINT_setitem (arraytypes.c.src) (1 samples, 0.45%)</title><rect x="1168" y="436" width="6" height="15" fill="rgb(232,146,10)"/><text x="1171.00" y="446.50"></text></g><g><title>0x7f3210587b11 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1174" y="292" width="5" height="15" fill="rgb(247,1,22)"/><text x="1177.00" y="302.50"></text></g><g><title>0x7f32105b910a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1174" y="308" width="5" height="15" fill="rgb(211,30,47)"/><text x="1177.00" y="318.50"></text></g><g><title>0x7f32107e4e2e (sklearn/tree/_splitter.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1174" y="324" width="5" height="15" fill="rgb(244,172,18)"/><text x="1177.00" y="334.50"></text></g><g><title>0x7f3210a20a68 (sklearn/tree/_criterion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="1174" y="340" width="5" height="15" fill="rgb(239,104,17)"/><text x="1177.00" y="350.50"></text></g><g><title>all (223 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(248,181,25)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (223 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(229,34,18)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (7 samples, 3.14%)</title><rect x="1152" y="68" width="38" height="15" fill="rgb(240,229,2)"/><text x="1155.00" y="78.50">sta..</text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (7 samples, 3.14%)</title><rect x="1152" y="84" width="38" height="15" fill="rgb(254,52,51)"/><text x="1155.00" y="94.50">set..</text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (7 samples, 3.14%)</title><rect x="1152" y="100" width="38" height="15" fill="rgb(238,192,6)"/><text x="1155.00" y="110.50">set..</text></g><g><title>fit (sklearn/ensemble/_forest.py) (6 samples, 2.69%)</title><rect x="1158" y="116" width="32" height="15" fill="rgb(235,205,14)"/><text x="1161.00" y="126.50">fi..</text></g><g><title>__call__ (joblib/parallel.py) (5 samples, 2.24%)</title><rect x="1163" y="132" width="27" height="15" fill="rgb(238,38,36)"/><text x="1166.00" y="142.50">_..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (5 samples, 2.24%)</title><rect x="1163" y="148" width="27" height="15" fill="rgb(246,84,49)"/><text x="1166.00" y="158.50">d..</text></g><g><title>_dispatch (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="1168" y="164" width="22" height="15" fill="rgb(243,40,15)"/><text x="1171.00" y="174.50">_..</text></g><g><title>apply_async (joblib/_parallel_backends.py) (4 samples, 1.79%)</title><rect x="1168" y="180" width="22" height="15" fill="rgb(250,77,46)"/><text x="1171.00" y="190.50">a..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (4 samples, 1.79%)</title><rect x="1168" y="196" width="22" height="15" fill="rgb(249,224,1)"/><text x="1171.00" y="206.50">_..</text></g><g><title>__call__ (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="1168" y="212" width="22" height="15" fill="rgb(210,68,41)"/><text x="1171.00" y="222.50">_..</text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (4 samples, 1.79%)</title><rect x="1168" y="228" width="22" height="15" fill="rgb(221,119,44)"/><text x="1171.00" y="238.50">&lt;..</text></g><g><title>_parallel_build_trees (sklearn/ensemble/_forest.py) (4 samples, 1.79%)</title><rect x="1168" y="244" width="22" height="15" fill="rgb(233,93,41)"/><text x="1171.00" y="254.50">_..</text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 1.35%)</title><rect x="1174" y="260" width="16" height="15" fill="rgb(208,39,28)"/><text x="1177.00" y="270.50"></text></g><g><title>fit (sklearn/tree/_classes.py) (3 samples, 1.35%)</title><rect x="1174" y="276" width="16" height="15" fill="rgb(235,109,29)"/><text x="1177.00" y="286.50"></text></g><g><title>check_random_state (sklearn/utils/validation.py) (2 samples, 0.90%)</title><rect x="1179" y="292" width="11" height="15" fill="rgb(252,152,8)"/><text x="1182.00" y="302.50"></text></g><g><title>__init__ (mtrand.c) (2 samples, 0.90%)</title><rect x="1179" y="308" width="11" height="15" fill="rgb(247,62,11)"/><text x="1182.00" y="318.50"></text></g><g><title>RandomState___init__ (mtrand.c) (2 samples, 0.90%)</title><rect x="1179" y="324" width="11" height="15" fill="rgb(249,163,5)"/><text x="1182.00" y="334.50"></text></g><g><title>__Pyx_PyObject_CallNoArg (mtrand.c) (2 samples, 0.90%)</title><rect x="1179" y="340" width="11" height="15" fill="rgb(217,135,24)"/><text x="1182.00" y="350.50"></text></g><g><title>__init__ (mt19937.c) (2 samples, 0.90%)</title><rect x="1179" y="356" width="11" height="15" fill="rgb(231,132,31)"/><text x="1182.00" y="366.50"></text></g><g><title>MT19937___init__ (mt19937.c) (2 samples, 0.90%)</title><rect x="1179" y="372" width="11" height="15" fill="rgb(209,77,32)"/><text x="1182.00" y="382.50"></text></g><g><title>inner (contextlib.py) (1 samples, 0.45%)</title><rect x="1184" y="388" width="6" height="15" fill="rgb(226,11,32)"/><text x="1187.00" y="398.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py) (1 samples, 0.45%)</title><rect x="1184" y="404" width="6" height="15" fill="rgb(209,128,13)"/><text x="1187.00" y="414.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py) (1 samples, 0.45%)</title><rect x="1184" y="420" width="6" height="15" fill="rgb(231,191,8)"/><text x="1187.00" y="430.50"></text></g></g></svg>