<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2182" onload="init(evt)" viewBox="0 0 1200 2182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2182" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2165.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2165.00"> </text><g id="frames"><g><title>add (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(209,74,42)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="15" y="932" width="5" height="15" fill="rgb(227,199,0)"/><text x="18.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="15" y="948" width="5" height="15" fill="rgb(251,190,41)"/><text x="18.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="15" y="964" width="5" height="15" fill="rgb(251,162,46)"/><text x="18.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="15" y="980" width="5" height="15" fill="rgb(248,66,28)"/><text x="18.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="15" y="996" width="5" height="15" fill="rgb(240,154,11)"/><text x="18.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="15" y="1012" width="5" height="15" fill="rgb(244,20,17)"/><text x="18.00" y="1022.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="15" y="1028" width="5" height="15" fill="rgb(246,110,35)"/><text x="18.00" y="1038.50"></text></g><g><title>from_location (pkg_resources/__init__.py) (2 samples, 0.93%)</title><rect x="20" y="948" width="11" height="15" fill="rgb(235,72,28)"/><text x="23.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (2 samples, 0.93%)</title><rect x="20" y="964" width="11" height="15" fill="rgb(218,175,44)"/><text x="23.00" y="974.50"></text></g><g><title>safe_version (pkg_resources/__init__.py) (2 samples, 0.93%)</title><rect x="20" y="980" width="11" height="15" fill="rgb(247,137,25)"/><text x="23.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(205,116,46)"/><text x="29.00" y="1006.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (5 samples, 2.33%)</title><rect x="10" y="868" width="27" height="15" fill="rgb(251,56,11)"/><text x="13.00" y="878.50">_..</text></g><g><title>__init__ (pkg_resources/__init__.py) (5 samples, 2.33%)</title><rect x="10" y="884" width="27" height="15" fill="rgb(211,114,13)"/><text x="13.00" y="894.50">_..</text></g><g><title>add_entry (pkg_resources/__init__.py) (5 samples, 2.33%)</title><rect x="10" y="900" width="27" height="15" fill="rgb(207,189,39)"/><text x="13.00" y="910.50">a..</text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 1.86%)</title><rect x="15" y="916" width="22" height="15" fill="rgb(217,60,5)"/><text x="18.00" y="926.50">f..</text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (3 samples, 1.40%)</title><rect x="20" y="932" width="17" height="15" fill="rgb(235,182,53)"/><text x="23.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.47%)</title><rect x="31" y="948" width="6" height="15" fill="rgb(245,1,10)"/><text x="34.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="31" y="964" width="6" height="15" fill="rgb(235,86,0)"/><text x="34.00" y="974.50"></text></g><g><title>0x7f6fbf0e9237 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="31" y="980" width="6" height="15" fill="rgb(236,151,33)"/><text x="34.00" y="990.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="37" y="900" width="5" height="15" fill="rgb(243,185,21)"/><text x="40.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="37" y="916" width="5" height="15" fill="rgb(236,7,6)"/><text x="40.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="37" y="932" width="5" height="15" fill="rgb(249,222,3)"/><text x="40.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="37" y="948" width="5" height="15" fill="rgb(237,170,51)"/><text x="40.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="37" y="964" width="5" height="15" fill="rgb(252,153,54)"/><text x="40.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="37" y="980" width="5" height="15" fill="rgb(238,44,46)"/><text x="40.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py) (1 samples, 0.47%)</title><rect x="37" y="996" width="5" height="15" fill="rgb(235,215,29)"/><text x="40.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (7 samples, 3.26%)</title><rect x="10" y="836" width="38" height="15" fill="rgb(220,174,14)"/><text x="13.00" y="846.50">_ca..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (7 samples, 3.26%)</title><rect x="10" y="852" width="38" height="15" fill="rgb(247,35,17)"/><text x="13.00" y="862.50">_in..</text></g><g><title>add_entry (pkg_resources/__init__.py) (2 samples, 0.93%)</title><rect x="37" y="868" width="11" height="15" fill="rgb(222,181,39)"/><text x="40.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (2 samples, 0.93%)</title><rect x="37" y="884" width="11" height="15" fill="rgb(246,209,39)"/><text x="40.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.47%)</title><rect x="42" y="900" width="6" height="15" fill="rgb(241,135,16)"/><text x="45.00" y="910.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (9 samples, 4.19%)</title><rect x="10" y="292" width="49" height="15" fill="rgb(251,195,34)"/><text x="13.00" y="302.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="308" width="49" height="15" fill="rgb(254,203,9)"/><text x="13.00" y="318.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="324" width="49" height="15" fill="rgb(219,55,17)"/><text x="13.00" y="334.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="340" width="49" height="15" fill="rgb(221,197,16)"/><text x="13.00" y="350.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.19%)</title><rect x="10" y="356" width="49" height="15" fill="rgb(244,154,22)"/><text x="13.00" y="366.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="372" width="49" height="15" fill="rgb(252,120,46)"/><text x="13.00" y="382.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (9 samples, 4.19%)</title><rect x="10" y="388" width="49" height="15" fill="rgb(246,132,6)"/><text x="13.00" y="398.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="404" width="49" height="15" fill="rgb(213,164,6)"/><text x="13.00" y="414.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="420" width="49" height="15" fill="rgb(240,116,54)"/><text x="13.00" y="430.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="436" width="49" height="15" fill="rgb(205,76,15)"/><text x="13.00" y="446.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.19%)</title><rect x="10" y="452" width="49" height="15" fill="rgb(241,167,48)"/><text x="13.00" y="462.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="468" width="49" height="15" fill="rgb(251,24,46)"/><text x="13.00" y="478.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (9 samples, 4.19%)</title><rect x="10" y="484" width="49" height="15" fill="rgb(212,104,50)"/><text x="13.00" y="494.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="500" width="49" height="15" fill="rgb(209,153,12)"/><text x="13.00" y="510.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="516" width="49" height="15" fill="rgb(230,116,37)"/><text x="13.00" y="526.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="532" width="49" height="15" fill="rgb(228,200,12)"/><text x="13.00" y="542.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.19%)</title><rect x="10" y="548" width="49" height="15" fill="rgb(222,125,33)"/><text x="13.00" y="558.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="564" width="49" height="15" fill="rgb(238,69,22)"/><text x="13.00" y="574.50">_cal..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (9 samples, 4.19%)</title><rect x="10" y="580" width="49" height="15" fill="rgb(245,189,47)"/><text x="13.00" y="590.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="596" width="49" height="15" fill="rgb(237,89,15)"/><text x="13.00" y="606.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="612" width="49" height="15" fill="rgb(249,203,51)"/><text x="13.00" y="622.50">_fin..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="628" width="49" height="15" fill="rgb(244,57,23)"/><text x="13.00" y="638.50">_cal..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="644" width="49" height="15" fill="rgb(225,167,33)"/><text x="13.00" y="654.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="660" width="49" height="15" fill="rgb(242,67,48)"/><text x="13.00" y="670.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="676" width="49" height="15" fill="rgb(219,72,38)"/><text x="13.00" y="686.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.19%)</title><rect x="10" y="692" width="49" height="15" fill="rgb(212,115,2)"/><text x="13.00" y="702.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="708" width="49" height="15" fill="rgb(242,193,28)"/><text x="13.00" y="718.50">_cal..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (9 samples, 4.19%)</title><rect x="10" y="724" width="49" height="15" fill="rgb(243,166,43)"/><text x="13.00" y="734.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="740" width="49" height="15" fill="rgb(241,160,9)"/><text x="13.00" y="750.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="756" width="49" height="15" fill="rgb(237,90,28)"/><text x="13.00" y="766.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="772" width="49" height="15" fill="rgb(215,127,37)"/><text x="13.00" y="782.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (9 samples, 4.19%)</title><rect x="10" y="788" width="49" height="15" fill="rgb(211,147,26)"/><text x="13.00" y="798.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (9 samples, 4.19%)</title><rect x="10" y="804" width="49" height="15" fill="rgb(212,144,35)"/><text x="13.00" y="814.50">_cal..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (9 samples, 4.19%)</title><rect x="10" y="820" width="49" height="15" fill="rgb(218,75,3)"/><text x="13.00" y="830.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="48" y="836" width="11" height="15" fill="rgb(213,114,35)"/><text x="51.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="53" y="852" width="6" height="15" fill="rgb(241,106,21)"/><text x="56.00" y="862.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="53" y="868" width="6" height="15" fill="rgb(205,15,5)"/><text x="56.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="10" y="196" width="54" height="15" fill="rgb(207,202,29)"/><text x="13.00" y="206.50">_call..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="10" y="212" width="54" height="15" fill="rgb(212,50,29)"/><text x="13.00" y="222.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="10" y="228" width="54" height="15" fill="rgb(219,9,5)"/><text x="13.00" y="238.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="10" y="244" width="54" height="15" fill="rgb(236,201,53)"/><text x="13.00" y="254.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (10 samples, 4.65%)</title><rect x="10" y="260" width="54" height="15" fill="rgb(209,186,20)"/><text x="13.00" y="270.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (10 samples, 4.65%)</title><rect x="10" y="276" width="54" height="15" fill="rgb(238,223,6)"/><text x="13.00" y="286.50">_call..</text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="292" width="5" height="15" fill="rgb(246,116,32)"/><text x="62.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="308" width="5" height="15" fill="rgb(234,160,47)"/><text x="62.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="324" width="5" height="15" fill="rgb(220,60,25)"/><text x="62.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="340" width="5" height="15" fill="rgb(234,95,2)"/><text x="62.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="356" width="5" height="15" fill="rgb(239,42,15)"/><text x="62.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="372" width="5" height="15" fill="rgb(213,37,28)"/><text x="62.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.47%)</title><rect x="59" y="388" width="5" height="15" fill="rgb(234,73,26)"/><text x="62.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="404" width="5" height="15" fill="rgb(212,190,50)"/><text x="62.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="420" width="5" height="15" fill="rgb(209,155,39)"/><text x="62.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="436" width="5" height="15" fill="rgb(254,84,2)"/><text x="62.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="452" width="5" height="15" fill="rgb(222,202,20)"/><text x="62.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="468" width="5" height="15" fill="rgb(205,36,18)"/><text x="62.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="484" width="5" height="15" fill="rgb(225,185,1)"/><text x="62.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="500" width="5" height="15" fill="rgb(223,112,52)"/><text x="62.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="516" width="5" height="15" fill="rgb(230,20,38)"/><text x="62.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="532" width="5" height="15" fill="rgb(233,74,19)"/><text x="62.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="548" width="5" height="15" fill="rgb(227,40,20)"/><text x="62.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="564" width="5" height="15" fill="rgb(241,153,25)"/><text x="62.00" y="574.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/fixes.py) (1 samples, 0.47%)</title><rect x="59" y="580" width="5" height="15" fill="rgb(226,2,10)"/><text x="62.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="596" width="5" height="15" fill="rgb(243,40,8)"/><text x="62.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="612" width="5" height="15" fill="rgb(216,216,21)"/><text x="62.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="628" width="5" height="15" fill="rgb(210,28,33)"/><text x="62.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="644" width="5" height="15" fill="rgb(249,86,52)"/><text x="62.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="660" width="5" height="15" fill="rgb(235,191,50)"/><text x="62.00" y="670.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py) (1 samples, 0.47%)</title><rect x="59" y="676" width="5" height="15" fill="rgb(251,89,16)"/><text x="62.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="692" width="5" height="15" fill="rgb(216,120,33)"/><text x="62.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="708" width="5" height="15" fill="rgb(216,31,50)"/><text x="62.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="724" width="5" height="15" fill="rgb(208,206,48)"/><text x="62.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="740" width="5" height="15" fill="rgb(234,200,36)"/><text x="62.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="756" width="5" height="15" fill="rgb(253,1,11)"/><text x="62.00" y="766.50"></text></g><g><title>&lt;module&gt; (scipy/stats/stats.py) (1 samples, 0.47%)</title><rect x="59" y="772" width="5" height="15" fill="rgb(247,219,18)"/><text x="62.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="788" width="5" height="15" fill="rgb(243,71,25)"/><text x="62.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="804" width="5" height="15" fill="rgb(210,135,18)"/><text x="62.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="820" width="5" height="15" fill="rgb(236,0,30)"/><text x="62.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="836" width="5" height="15" fill="rgb(217,211,38)"/><text x="62.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="852" width="5" height="15" fill="rgb(225,76,45)"/><text x="62.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="868" width="5" height="15" fill="rgb(214,56,53)"/><text x="62.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="884" width="5" height="15" fill="rgb(218,91,53)"/><text x="62.00" y="894.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py) (1 samples, 0.47%)</title><rect x="59" y="900" width="5" height="15" fill="rgb(246,131,11)"/><text x="62.00" y="910.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="916" width="5" height="15" fill="rgb(242,86,22)"/><text x="62.00" y="926.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="932" width="5" height="15" fill="rgb(217,169,19)"/><text x="62.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="948" width="5" height="15" fill="rgb(248,179,35)"/><text x="62.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="964" width="5" height="15" fill="rgb(220,24,19)"/><text x="62.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="980" width="5" height="15" fill="rgb(245,173,10)"/><text x="62.00" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="59" y="996" width="5" height="15" fill="rgb(248,46,12)"/><text x="62.00" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="59" y="1012" width="5" height="15" fill="rgb(253,69,19)"/><text x="62.00" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py) (1 samples, 0.47%)</title><rect x="59" y="1028" width="5" height="15" fill="rgb(251,53,17)"/><text x="62.00" y="1038.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py) (1 samples, 0.47%)</title><rect x="59" y="1044" width="5" height="15" fill="rgb(254,157,6)"/><text x="62.00" y="1054.50"></text></g><g><title>_construct_doc (scipy/stats/_distn_infrastructure.py) (1 samples, 0.47%)</title><rect x="59" y="1060" width="5" height="15" fill="rgb(219,88,2)"/><text x="62.00" y="1070.50"></text></g><g><title>docformat (scipy/_lib/doccer.py) (1 samples, 0.47%)</title><rect x="59" y="1076" width="5" height="15" fill="rgb(254,55,11)"/><text x="62.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.47%)</title><rect x="64" y="1108" width="6" height="15" fill="rgb(239,155,31)"/><text x="67.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1124" width="6" height="15" fill="rgb(230,17,0)"/><text x="67.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1140" width="6" height="15" fill="rgb(243,36,43)"/><text x="67.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1156" width="6" height="15" fill="rgb(220,15,41)"/><text x="67.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="64" y="1172" width="6" height="15" fill="rgb(205,26,34)"/><text x="67.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1188" width="6" height="15" fill="rgb(210,139,39)"/><text x="67.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/core/index.py) (1 samples, 0.47%)</title><rect x="64" y="1204" width="6" height="15" fill="rgb(205,42,27)"/><text x="67.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1220" width="6" height="15" fill="rgb(214,85,26)"/><text x="67.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1236" width="6" height="15" fill="rgb(249,99,46)"/><text x="67.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1252" width="6" height="15" fill="rgb(230,36,24)"/><text x="67.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="64" y="1268" width="6" height="15" fill="rgb(211,150,32)"/><text x="67.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1284" width="6" height="15" fill="rgb(217,133,24)"/><text x="67.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/api.py) (1 samples, 0.47%)</title><rect x="64" y="1300" width="6" height="15" fill="rgb(205,90,9)"/><text x="67.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1316" width="6" height="15" fill="rgb(219,184,40)"/><text x="67.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1332" width="6" height="15" fill="rgb(229,68,5)"/><text x="67.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1348" width="6" height="15" fill="rgb(243,160,3)"/><text x="67.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="64" y="1364" width="6" height="15" fill="rgb(226,111,22)"/><text x="67.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1380" width="6" height="15" fill="rgb(211,131,27)"/><text x="67.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexes/interval.py) (1 samples, 0.47%)</title><rect x="64" y="1396" width="6" height="15" fill="rgb(230,225,12)"/><text x="67.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1412" width="6" height="15" fill="rgb(253,228,39)"/><text x="67.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1428" width="6" height="15" fill="rgb(222,69,2)"/><text x="67.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="64" y="1444" width="6" height="15" fill="rgb(245,109,30)"/><text x="67.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="64" y="1460" width="6" height="15" fill="rgb(226,45,20)"/><text x="67.00" y="1470.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="64" y="1476" width="6" height="15" fill="rgb(215,102,31)"/><text x="67.00" y="1486.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="64" y="1492" width="6" height="15" fill="rgb(234,80,48)"/><text x="67.00" y="1502.50"></text></g><g><title>&lt;module&gt; (matplotlib/patches.py) (1 samples, 0.47%)</title><rect x="70" y="1876" width="5" height="15" fill="rgb(208,110,12)"/><text x="73.00" y="1886.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="1892" width="5" height="15" fill="rgb(246,79,14)"/><text x="73.00" y="1902.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="1908" width="5" height="15" fill="rgb(238,58,12)"/><text x="73.00" y="1918.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="1924" width="5" height="15" fill="rgb(212,61,39)"/><text x="73.00" y="1934.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="1940" width="5" height="15" fill="rgb(240,193,34)"/><text x="73.00" y="1950.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="70" y="1956" width="5" height="15" fill="rgb(236,166,37)"/><text x="73.00" y="1966.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="70" y="1972" width="5" height="15" fill="rgb(226,136,45)"/><text x="73.00" y="1982.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="70" y="1988" width="5" height="15" fill="rgb(224,200,29)"/><text x="73.00" y="1998.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="70" y="2004" width="5" height="15" fill="rgb(242,92,50)"/><text x="73.00" y="2014.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (3 samples, 1.40%)</title><rect x="64" y="340" width="17" height="15" fill="rgb(243,153,7)"/><text x="67.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="356" width="17" height="15" fill="rgb(239,113,46)"/><text x="67.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="372" width="17" height="15" fill="rgb(239,198,32)"/><text x="67.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="388" width="17" height="15" fill="rgb(241,134,24)"/><text x="67.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="404" width="17" height="15" fill="rgb(219,180,50)"/><text x="67.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="420" width="17" height="15" fill="rgb(207,17,40)"/><text x="67.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (3 samples, 1.40%)</title><rect x="64" y="436" width="17" height="15" fill="rgb(250,180,5)"/><text x="67.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="452" width="17" height="15" fill="rgb(230,165,44)"/><text x="67.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="468" width="17" height="15" fill="rgb(232,148,48)"/><text x="67.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="484" width="17" height="15" fill="rgb(215,157,30)"/><text x="67.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="500" width="17" height="15" fill="rgb(223,120,44)"/><text x="67.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="516" width="17" height="15" fill="rgb(223,42,18)"/><text x="67.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (3 samples, 1.40%)</title><rect x="64" y="532" width="17" height="15" fill="rgb(222,16,10)"/><text x="67.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="548" width="17" height="15" fill="rgb(239,150,33)"/><text x="67.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="564" width="17" height="15" fill="rgb(249,149,40)"/><text x="67.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="580" width="17" height="15" fill="rgb(206,201,10)"/><text x="67.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="596" width="17" height="15" fill="rgb(234,179,38)"/><text x="67.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="612" width="17" height="15" fill="rgb(221,62,5)"/><text x="67.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (3 samples, 1.40%)</title><rect x="64" y="628" width="17" height="15" fill="rgb(228,154,52)"/><text x="67.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="644" width="17" height="15" fill="rgb(213,170,8)"/><text x="67.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="660" width="17" height="15" fill="rgb(208,19,1)"/><text x="67.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="676" width="17" height="15" fill="rgb(225,161,17)"/><text x="67.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="692" width="17" height="15" fill="rgb(206,84,10)"/><text x="67.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="708" width="17" height="15" fill="rgb(252,6,39)"/><text x="67.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (3 samples, 1.40%)</title><rect x="64" y="724" width="17" height="15" fill="rgb(240,203,35)"/><text x="67.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="740" width="17" height="15" fill="rgb(214,151,0)"/><text x="67.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="756" width="17" height="15" fill="rgb(250,135,47)"/><text x="67.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="772" width="17" height="15" fill="rgb(232,191,25)"/><text x="67.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="788" width="17" height="15" fill="rgb(229,116,38)"/><text x="67.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="804" width="17" height="15" fill="rgb(248,198,5)"/><text x="67.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (3 samples, 1.40%)</title><rect x="64" y="820" width="17" height="15" fill="rgb(232,74,20)"/><text x="67.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="836" width="17" height="15" fill="rgb(251,135,50)"/><text x="67.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="852" width="17" height="15" fill="rgb(241,200,19)"/><text x="67.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="868" width="17" height="15" fill="rgb(207,16,48)"/><text x="67.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="884" width="17" height="15" fill="rgb(207,162,42)"/><text x="67.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="900" width="17" height="15" fill="rgb(207,163,46)"/><text x="67.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (3 samples, 1.40%)</title><rect x="64" y="916" width="17" height="15" fill="rgb(248,115,47)"/><text x="67.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="932" width="17" height="15" fill="rgb(216,141,22)"/><text x="67.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="948" width="17" height="15" fill="rgb(236,102,42)"/><text x="67.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="964" width="17" height="15" fill="rgb(250,67,36)"/><text x="67.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="980" width="17" height="15" fill="rgb(212,0,51)"/><text x="67.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="996" width="17" height="15" fill="rgb(252,142,36)"/><text x="67.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (3 samples, 1.40%)</title><rect x="64" y="1012" width="17" height="15" fill="rgb(220,26,32)"/><text x="67.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="1028" width="17" height="15" fill="rgb(239,67,21)"/><text x="67.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="1044" width="17" height="15" fill="rgb(242,189,53)"/><text x="67.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="1060" width="17" height="15" fill="rgb(226,161,5)"/><text x="67.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="64" y="1076" width="17" height="15" fill="rgb(238,34,47)"/><text x="67.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="64" y="1092" width="17" height="15" fill="rgb(244,7,46)"/><text x="67.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (2 samples, 0.93%)</title><rect x="70" y="1108" width="11" height="15" fill="rgb(226,90,14)"/><text x="73.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1124" width="11" height="15" fill="rgb(234,177,33)"/><text x="73.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1140" width="11" height="15" fill="rgb(243,21,46)"/><text x="73.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1156" width="11" height="15" fill="rgb(208,110,14)"/><text x="73.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1172" width="11" height="15" fill="rgb(227,20,11)"/><text x="73.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1188" width="11" height="15" fill="rgb(216,132,46)"/><text x="73.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (2 samples, 0.93%)</title><rect x="70" y="1204" width="11" height="15" fill="rgb(220,151,37)"/><text x="73.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1220" width="11" height="15" fill="rgb(206,64,41)"/><text x="73.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1236" width="11" height="15" fill="rgb(213,6,34)"/><text x="73.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1252" width="11" height="15" fill="rgb(250,166,44)"/><text x="73.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1268" width="11" height="15" fill="rgb(242,44,4)"/><text x="73.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1284" width="11" height="15" fill="rgb(229,123,54)"/><text x="73.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (2 samples, 0.93%)</title><rect x="70" y="1300" width="11" height="15" fill="rgb(220,160,33)"/><text x="73.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1316" width="11" height="15" fill="rgb(248,78,11)"/><text x="73.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1332" width="11" height="15" fill="rgb(210,149,53)"/><text x="73.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1348" width="11" height="15" fill="rgb(219,93,10)"/><text x="73.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1364" width="11" height="15" fill="rgb(237,51,21)"/><text x="73.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1380" width="11" height="15" fill="rgb(216,169,34)"/><text x="73.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (2 samples, 0.93%)</title><rect x="70" y="1396" width="11" height="15" fill="rgb(227,131,24)"/><text x="73.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1412" width="11" height="15" fill="rgb(223,26,37)"/><text x="73.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1428" width="11" height="15" fill="rgb(208,73,34)"/><text x="73.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1444" width="11" height="15" fill="rgb(242,170,28)"/><text x="73.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1460" width="11" height="15" fill="rgb(244,133,9)"/><text x="73.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1476" width="11" height="15" fill="rgb(215,226,33)"/><text x="73.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (2 samples, 0.93%)</title><rect x="70" y="1492" width="11" height="15" fill="rgb(238,95,31)"/><text x="73.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1508" width="11" height="15" fill="rgb(243,154,19)"/><text x="73.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1524" width="11" height="15" fill="rgb(230,20,7)"/><text x="73.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1540" width="11" height="15" fill="rgb(234,8,41)"/><text x="73.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1556" width="11" height="15" fill="rgb(249,144,9)"/><text x="73.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1572" width="11" height="15" fill="rgb(213,90,32)"/><text x="73.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.93%)</title><rect x="70" y="1588" width="11" height="15" fill="rgb(244,224,1)"/><text x="73.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1604" width="11" height="15" fill="rgb(219,15,17)"/><text x="73.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1620" width="11" height="15" fill="rgb(222,105,52)"/><text x="73.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1636" width="11" height="15" fill="rgb(219,71,51)"/><text x="73.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1652" width="11" height="15" fill="rgb(209,31,32)"/><text x="73.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1668" width="11" height="15" fill="rgb(254,146,42)"/><text x="73.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.93%)</title><rect x="70" y="1684" width="11" height="15" fill="rgb(213,191,25)"/><text x="73.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1700" width="11" height="15" fill="rgb(252,68,43)"/><text x="73.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1716" width="11" height="15" fill="rgb(215,169,13)"/><text x="73.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1732" width="11" height="15" fill="rgb(215,161,22)"/><text x="73.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1748" width="11" height="15" fill="rgb(252,111,51)"/><text x="73.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1764" width="11" height="15" fill="rgb(233,5,22)"/><text x="73.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.93%)</title><rect x="70" y="1780" width="11" height="15" fill="rgb(207,33,2)"/><text x="73.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1796" width="11" height="15" fill="rgb(239,123,52)"/><text x="73.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1812" width="11" height="15" fill="rgb(239,203,8)"/><text x="73.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1828" width="11" height="15" fill="rgb(252,50,0)"/><text x="73.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="70" y="1844" width="11" height="15" fill="rgb(244,54,19)"/><text x="73.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="70" y="1860" width="11" height="15" fill="rgb(232,26,34)"/><text x="73.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (1 samples, 0.47%)</title><rect x="75" y="1876" width="6" height="15" fill="rgb(217,212,4)"/><text x="78.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1892" width="6" height="15" fill="rgb(240,165,30)"/><text x="78.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1908" width="6" height="15" fill="rgb(237,113,38)"/><text x="78.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1924" width="6" height="15" fill="rgb(240,111,8)"/><text x="78.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="1940" width="6" height="15" fill="rgb(245,100,22)"/><text x="78.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1956" width="6" height="15" fill="rgb(219,79,47)"/><text x="78.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/textpath.py) (1 samples, 0.47%)</title><rect x="75" y="1972" width="6" height="15" fill="rgb(251,5,18)"/><text x="78.00" y="1982.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="1988" width="6" height="15" fill="rgb(249,131,48)"/><text x="78.00" y="1998.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="2004" width="6" height="15" fill="rgb(252,32,26)"/><text x="78.00" y="2014.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="2020" width="6" height="15" fill="rgb(229,228,39)"/><text x="78.00" y="2030.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="75" y="2036" width="6" height="15" fill="rgb(238,124,42)"/><text x="78.00" y="2046.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="75" y="2052" width="6" height="15" fill="rgb(254,127,39)"/><text x="78.00" y="2062.50"></text></g><g><title>&lt;module&gt; (matplotlib/mathtext.py) (1 samples, 0.47%)</title><rect x="75" y="2068" width="6" height="15" fill="rgb(245,178,36)"/><text x="78.00" y="2078.50"></text></g><g><title>Parser (matplotlib/mathtext.py) (1 samples, 0.47%)</title><rect x="75" y="2084" width="6" height="15" fill="rgb(251,126,32)"/><text x="78.00" y="2094.50"></text></g><g><title>&lt;lambda&gt; (matplotlib/mathtext.py) (1 samples, 0.47%)</title><rect x="75" y="2100" width="6" height="15" fill="rgb(216,97,4)"/><text x="78.00" y="2110.50"></text></g><g><title>&lt;listcomp&gt; (matplotlib/mathtext.py) (1 samples, 0.47%)</title><rect x="75" y="2116" width="6" height="15" fill="rgb(215,93,33)"/><text x="78.00" y="2126.50"></text></g><g><title>&lt;genexpr&gt; (matplotlib/mathtext.py) (1 samples, 0.47%)</title><rect x="75" y="2132" width="6" height="15" fill="rgb(226,101,34)"/><text x="78.00" y="2142.50"></text></g><g><title>&lt;module&gt; (requests/utils.py) (1 samples, 0.47%)</title><rect x="86" y="900" width="6" height="15" fill="rgb(234,220,23)"/><text x="89.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="916" width="6" height="15" fill="rgb(239,66,20)"/><text x="89.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="932" width="6" height="15" fill="rgb(233,66,16)"/><text x="89.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="948" width="6" height="15" fill="rgb(222,124,12)"/><text x="89.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="86" y="964" width="6" height="15" fill="rgb(217,92,53)"/><text x="89.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="980" width="6" height="15" fill="rgb(210,198,20)"/><text x="89.00" y="990.50"></text></g><g><title>&lt;module&gt; (requests/_internal_utils.py) (1 samples, 0.47%)</title><rect x="86" y="996" width="6" height="15" fill="rgb(239,126,48)"/><text x="89.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1012" width="6" height="15" fill="rgb(223,107,10)"/><text x="89.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1028" width="6" height="15" fill="rgb(224,163,41)"/><text x="89.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1044" width="6" height="15" fill="rgb(252,93,39)"/><text x="89.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="86" y="1060" width="6" height="15" fill="rgb(222,137,45)"/><text x="89.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1076" width="6" height="15" fill="rgb(228,179,38)"/><text x="89.00" y="1086.50"></text></g><g><title>&lt;module&gt; (requests/compat.py) (1 samples, 0.47%)</title><rect x="86" y="1092" width="6" height="15" fill="rgb(235,202,23)"/><text x="89.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1108" width="6" height="15" fill="rgb(224,6,40)"/><text x="89.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1124" width="6" height="15" fill="rgb(234,151,29)"/><text x="89.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1140" width="6" height="15" fill="rgb(226,56,48)"/><text x="89.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="86" y="1156" width="6" height="15" fill="rgb(206,112,21)"/><text x="89.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1172" width="6" height="15" fill="rgb(208,128,6)"/><text x="89.00" y="1182.50"></text></g><g><title>&lt;module&gt; (simplejson/__init__.py) (1 samples, 0.47%)</title><rect x="86" y="1188" width="6" height="15" fill="rgb(207,193,51)"/><text x="89.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1204" width="6" height="15" fill="rgb(250,123,8)"/><text x="89.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1220" width="6" height="15" fill="rgb(205,18,21)"/><text x="89.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1236" width="6" height="15" fill="rgb(221,184,27)"/><text x="89.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="86" y="1252" width="6" height="15" fill="rgb(219,194,21)"/><text x="89.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1268" width="6" height="15" fill="rgb(217,138,47)"/><text x="89.00" y="1278.50"></text></g><g><title>&lt;module&gt; (simplejson/decoder.py) (1 samples, 0.47%)</title><rect x="86" y="1284" width="6" height="15" fill="rgb(250,90,1)"/><text x="89.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1300" width="6" height="15" fill="rgb(213,5,24)"/><text x="89.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1316" width="6" height="15" fill="rgb(253,138,54)"/><text x="89.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1332" width="6" height="15" fill="rgb(207,223,51)"/><text x="89.00" y="1342.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1348" width="6" height="15" fill="rgb(208,141,39)"/><text x="89.00" y="1358.50"></text></g><g><title>_init_module_attrs (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1364" width="6" height="15" fill="rgb(235,45,26)"/><text x="89.00" y="1374.50"></text></g><g><title>cached (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="86" y="1380" width="6" height="15" fill="rgb(246,6,36)"/><text x="89.00" y="1390.50"></text></g><g><title>_get_cached (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="86" y="1396" width="6" height="15" fill="rgb(236,96,25)"/><text x="89.00" y="1406.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="86" y="1412" width="6" height="15" fill="rgb(230,60,14)"/><text x="89.00" y="1422.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.47%)</title><rect x="86" y="1428" width="6" height="15" fill="rgb(249,40,19)"/><text x="89.00" y="1438.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (6 samples, 2.79%)</title><rect x="64" y="244" width="33" height="15" fill="rgb(228,77,9)"/><text x="67.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.79%)</title><rect x="64" y="260" width="33" height="15" fill="rgb(245,66,24)"/><text x="67.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.79%)</title><rect x="64" y="276" width="33" height="15" fill="rgb(221,207,5)"/><text x="67.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.79%)</title><rect x="64" y="292" width="33" height="15" fill="rgb(209,170,41)"/><text x="67.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (6 samples, 2.79%)</title><rect x="64" y="308" width="33" height="15" fill="rgb(218,108,35)"/><text x="67.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (6 samples, 2.79%)</title><rect x="64" y="324" width="33" height="15" fill="rgb(235,45,52)"/><text x="67.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 1.40%)</title><rect x="81" y="340" width="16" height="15" fill="rgb(250,46,20)"/><text x="84.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="356" width="16" height="15" fill="rgb(224,11,28)"/><text x="84.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="372" width="16" height="15" fill="rgb(218,224,6)"/><text x="84.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="388" width="16" height="15" fill="rgb(217,78,2)"/><text x="84.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="404" width="16" height="15" fill="rgb(252,195,14)"/><text x="84.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="420" width="16" height="15" fill="rgb(210,176,52)"/><text x="84.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="436" width="16" height="15" fill="rgb(228,40,21)"/><text x="84.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 1.40%)</title><rect x="81" y="452" width="16" height="15" fill="rgb(240,144,54)"/><text x="84.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="468" width="16" height="15" fill="rgb(248,96,9)"/><text x="84.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 1.40%)</title><rect x="81" y="484" width="16" height="15" fill="rgb(249,88,25)"/><text x="84.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="500" width="16" height="15" fill="rgb(211,93,50)"/><text x="84.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="516" width="16" height="15" fill="rgb(221,162,45)"/><text x="84.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 1.40%)</title><rect x="81" y="532" width="16" height="15" fill="rgb(224,144,20)"/><text x="84.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="86" y="548" width="11" height="15" fill="rgb(240,128,51)"/><text x="89.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="564" width="11" height="15" fill="rgb(245,158,13)"/><text x="89.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.93%)</title><rect x="86" y="580" width="11" height="15" fill="rgb(247,165,31)"/><text x="89.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="596" width="11" height="15" fill="rgb(214,228,21)"/><text x="89.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="612" width="11" height="15" fill="rgb(248,105,49)"/><text x="89.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="628" width="11" height="15" fill="rgb(208,216,25)"/><text x="89.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="86" y="644" width="11" height="15" fill="rgb(227,156,12)"/><text x="89.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="660" width="11" height="15" fill="rgb(230,107,9)"/><text x="89.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.93%)</title><rect x="86" y="676" width="11" height="15" fill="rgb(210,4,5)"/><text x="89.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="692" width="11" height="15" fill="rgb(220,110,43)"/><text x="89.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="708" width="11" height="15" fill="rgb(250,37,4)"/><text x="89.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="724" width="11" height="15" fill="rgb(206,92,34)"/><text x="89.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="86" y="740" width="11" height="15" fill="rgb(218,84,43)"/><text x="89.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="756" width="11" height="15" fill="rgb(213,57,4)"/><text x="89.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.93%)</title><rect x="86" y="772" width="11" height="15" fill="rgb(242,107,28)"/><text x="89.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="788" width="11" height="15" fill="rgb(231,107,39)"/><text x="89.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="804" width="11" height="15" fill="rgb(208,154,50)"/><text x="89.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="820" width="11" height="15" fill="rgb(250,140,6)"/><text x="89.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="836" width="11" height="15" fill="rgb(208,167,36)"/><text x="89.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="852" width="11" height="15" fill="rgb(229,172,0)"/><text x="89.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="86" y="868" width="11" height="15" fill="rgb(210,56,10)"/><text x="89.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="86" y="884" width="11" height="15" fill="rgb(223,2,31)"/><text x="89.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py) (1 samples, 0.47%)</title><rect x="92" y="900" width="5" height="15" fill="rgb(239,207,23)"/><text x="95.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="916" width="5" height="15" fill="rgb(230,13,0)"/><text x="95.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="932" width="5" height="15" fill="rgb(206,23,6)"/><text x="95.00" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="948" width="5" height="15" fill="rgb(221,206,6)"/><text x="95.00" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="92" y="964" width="5" height="15" fill="rgb(252,206,28)"/><text x="95.00" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="980" width="5" height="15" fill="rgb(230,187,12)"/><text x="95.00" y="990.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/__init__.py) (1 samples, 0.47%)</title><rect x="92" y="996" width="5" height="15" fill="rgb(205,10,9)"/><text x="95.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1012" width="5" height="15" fill="rgb(238,170,32)"/><text x="95.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1028" width="5" height="15" fill="rgb(221,0,33)"/><text x="95.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1044" width="5" height="15" fill="rgb(243,85,35)"/><text x="95.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="92" y="1060" width="5" height="15" fill="rgb(238,132,33)"/><text x="95.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1076" width="5" height="15" fill="rgb(233,31,26)"/><text x="95.00" y="1086.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/backend.py) (1 samples, 0.47%)</title><rect x="92" y="1092" width="5" height="15" fill="rgb(223,41,15)"/><text x="95.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1108" width="5" height="15" fill="rgb(210,169,50)"/><text x="95.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1124" width="5" height="15" fill="rgb(234,127,38)"/><text x="95.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1140" width="5" height="15" fill="rgb(230,91,2)"/><text x="95.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="92" y="1156" width="5" height="15" fill="rgb(240,7,3)"/><text x="95.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="92" y="1172" width="5" height="15" fill="rgb(241,74,6)"/><text x="95.00" y="1182.50"></text></g><g><title>&lt;module&gt; (cryptography/hazmat/backends/openssl/dsa.py) (1 samples, 0.47%)</title><rect x="92" y="1188" width="5" height="15" fill="rgb(240,110,46)"/><text x="95.00" y="1198.50"></text></g><g><title>register_decorator (cryptography/utils.py) (1 samples, 0.47%)</title><rect x="92" y="1204" width="5" height="15" fill="rgb(232,184,46)"/><text x="95.00" y="1214.50"></text></g><g><title>verify_interface (cryptography/utils.py) (1 samples, 0.47%)</title><rect x="92" y="1220" width="5" height="15" fill="rgb(220,24,29)"/><text x="95.00" y="1230.50"></text></g><g><title>__eq__ (inspect.py) (1 samples, 0.47%)</title><rect x="92" y="1236" width="5" height="15" fill="rgb(235,74,43)"/><text x="95.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py) (1 samples, 0.47%)</title><rect x="97" y="532" width="6" height="15" fill="rgb(206,190,31)"/><text x="100.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="548" width="6" height="15" fill="rgb(244,36,45)"/><text x="100.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="564" width="6" height="15" fill="rgb(248,217,19)"/><text x="100.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="580" width="6" height="15" fill="rgb(252,2,38)"/><text x="100.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="596" width="6" height="15" fill="rgb(222,172,53)"/><text x="100.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="612" width="6" height="15" fill="rgb(227,229,14)"/><text x="100.00" y="622.50"></text></g><g><title>0x7f6f98f70373 (?) (1 samples, 0.47%)</title><rect x="97" y="628" width="6" height="15" fill="rgb(237,93,19)"/><text x="100.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="644" width="6" height="15" fill="rgb(222,200,46)"/><text x="100.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="660" width="6" height="15" fill="rgb(249,160,43)"/><text x="100.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="676" width="6" height="15" fill="rgb(252,61,48)"/><text x="100.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="692" width="6" height="15" fill="rgb(219,18,8)"/><text x="100.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="708" width="6" height="15" fill="rgb(236,216,35)"/><text x="100.00" y="718.50"></text></g><g><title>0x7f6f98d33eea (?) (1 samples, 0.47%)</title><rect x="97" y="724" width="6" height="15" fill="rgb(239,115,9)"/><text x="100.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="740" width="6" height="15" fill="rgb(239,218,23)"/><text x="100.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="756" width="6" height="15" fill="rgb(218,107,33)"/><text x="100.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="772" width="6" height="15" fill="rgb(216,66,37)"/><text x="100.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="788" width="6" height="15" fill="rgb(253,41,37)"/><text x="100.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="804" width="6" height="15" fill="rgb(208,140,50)"/><text x="100.00" y="814.50"></text></g><g><title>0x7f6f98acc887 (?) (1 samples, 0.47%)</title><rect x="97" y="820" width="6" height="15" fill="rgb(211,112,29)"/><text x="100.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="836" width="6" height="15" fill="rgb(244,48,22)"/><text x="100.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="852" width="6" height="15" fill="rgb(215,226,5)"/><text x="100.00" y="862.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="868" width="6" height="15" fill="rgb(215,14,18)"/><text x="100.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="884" width="6" height="15" fill="rgb(205,29,41)"/><text x="100.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="900" width="6" height="15" fill="rgb(206,162,29)"/><text x="100.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="916" width="6" height="15" fill="rgb(235,49,34)"/><text x="100.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="932" width="6" height="15" fill="rgb(247,180,39)"/><text x="100.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="948" width="6" height="15" fill="rgb(212,45,17)"/><text x="100.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.47%)</title><rect x="97" y="964" width="6" height="15" fill="rgb(247,63,33)"/><text x="100.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="980" width="6" height="15" fill="rgb(242,164,29)"/><text x="100.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="996" width="6" height="15" fill="rgb(209,60,22)"/><text x="100.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1012" width="6" height="15" fill="rgb(218,26,39)"/><text x="100.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="1028" width="6" height="15" fill="rgb(250,60,34)"/><text x="100.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1044" width="6" height="15" fill="rgb(225,170,0)"/><text x="100.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_nca.py) (1 samples, 0.47%)</title><rect x="97" y="1060" width="6" height="15" fill="rgb(220,160,2)"/><text x="100.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1076" width="6" height="15" fill="rgb(221,95,17)"/><text x="100.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1092" width="6" height="15" fill="rgb(250,40,2)"/><text x="100.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1108" width="6" height="15" fill="rgb(238,83,54)"/><text x="100.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="1124" width="6" height="15" fill="rgb(227,59,14)"/><text x="100.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1140" width="6" height="15" fill="rgb(214,103,54)"/><text x="100.00" y="1150.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/__init__.py) (1 samples, 0.47%)</title><rect x="97" y="1156" width="6" height="15" fill="rgb(237,53,43)"/><text x="100.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1172" width="6" height="15" fill="rgb(210,19,51)"/><text x="100.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1188" width="6" height="15" fill="rgb(226,106,17)"/><text x="100.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1204" width="6" height="15" fill="rgb(229,61,38)"/><text x="100.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="1220" width="6" height="15" fill="rgb(240,196,29)"/><text x="100.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1236" width="6" height="15" fill="rgb(242,133,15)"/><text x="100.00" y="1246.50"></text></g><g><title>&lt;module&gt; (sklearn/decomposition/_sparse_pca.py) (1 samples, 0.47%)</title><rect x="97" y="1252" width="6" height="15" fill="rgb(216,11,40)"/><text x="100.00" y="1262.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1268" width="6" height="15" fill="rgb(241,178,8)"/><text x="100.00" y="1278.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1284" width="6" height="15" fill="rgb(210,210,22)"/><text x="100.00" y="1294.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1300" width="6" height="15" fill="rgb(250,46,14)"/><text x="100.00" y="1310.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="1316" width="6" height="15" fill="rgb(239,196,41)"/><text x="100.00" y="1326.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1332" width="6" height="15" fill="rgb(228,195,36)"/><text x="100.00" y="1342.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/__init__.py) (1 samples, 0.47%)</title><rect x="97" y="1348" width="6" height="15" fill="rgb(222,119,34)"/><text x="100.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1364" width="6" height="15" fill="rgb(253,77,11)"/><text x="100.00" y="1374.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1380" width="6" height="15" fill="rgb(239,210,48)"/><text x="100.00" y="1390.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1396" width="6" height="15" fill="rgb(235,130,4)"/><text x="100.00" y="1406.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="1412" width="6" height="15" fill="rgb(232,115,9)"/><text x="100.00" y="1422.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1428" width="6" height="15" fill="rgb(232,16,44)"/><text x="100.00" y="1438.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_ridge.py) (1 samples, 0.47%)</title><rect x="97" y="1444" width="6" height="15" fill="rgb(243,31,25)"/><text x="100.00" y="1454.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1460" width="6" height="15" fill="rgb(249,88,23)"/><text x="100.00" y="1470.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1476" width="6" height="15" fill="rgb(225,194,20)"/><text x="100.00" y="1486.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1492" width="6" height="15" fill="rgb(222,105,22)"/><text x="100.00" y="1502.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="97" y="1508" width="6" height="15" fill="rgb(252,86,9)"/><text x="100.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1524" width="6" height="15" fill="rgb(212,137,1)"/><text x="100.00" y="1534.50"></text></g><g><title>&lt;module&gt; (sklearn/linear_model/_sag.py) (1 samples, 0.47%)</title><rect x="97" y="1540" width="6" height="15" fill="rgb(245,35,8)"/><text x="100.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1556" width="6" height="15" fill="rgb(220,115,0)"/><text x="100.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1572" width="6" height="15" fill="rgb(239,45,54)"/><text x="100.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1588" width="6" height="15" fill="rgb(254,193,31)"/><text x="100.00" y="1598.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="97" y="1604" width="6" height="15" fill="rgb(245,132,18)"/><text x="100.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 8.37%)</title><rect x="10" y="68" width="98" height="15" fill="rgb(208,120,30)"/><text x="13.00" y="78.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 8.37%)</title><rect x="10" y="84" width="98" height="15" fill="rgb(222,18,48)"/><text x="13.00" y="94.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 8.37%)</title><rect x="10" y="100" width="98" height="15" fill="rgb(210,123,39)"/><text x="13.00" y="110.50">_load_unloc..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (18 samples, 8.37%)</title><rect x="10" y="116" width="98" height="15" fill="rgb(249,124,15)"/><text x="13.00" y="126.50">exec_module..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (18 samples, 8.37%)</title><rect x="10" y="132" width="98" height="15" fill="rgb(242,8,35)"/><text x="13.00" y="142.50">_call_with_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (18 samples, 8.37%)</title><rect x="10" y="148" width="98" height="15" fill="rgb(251,183,23)"/><text x="13.00" y="158.50">&lt;module&gt; (p..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (18 samples, 8.37%)</title><rect x="10" y="164" width="98" height="15" fill="rgb(213,50,38)"/><text x="13.00" y="174.50">_find_and_l..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (18 samples, 8.37%)</title><rect x="10" y="180" width="98" height="15" fill="rgb(234,8,9)"/><text x="13.00" y="190.50">_find_and_l..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.72%)</title><rect x="64" y="196" width="44" height="15" fill="rgb(205,192,33)"/><text x="67.00" y="206.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 3.72%)</title><rect x="64" y="212" width="44" height="15" fill="rgb(242,198,32)"/><text x="67.00" y="222.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 3.72%)</title><rect x="64" y="228" width="44" height="15" fill="rgb(222,81,31)"/><text x="67.00" y="238.50">_cal..</text></g><g><title>&lt;module&gt; (sklearn/ensemble/__init__.py) (2 samples, 0.93%)</title><rect x="97" y="244" width="11" height="15" fill="rgb(235,74,11)"/><text x="100.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="260" width="11" height="15" fill="rgb(214,125,5)"/><text x="100.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="276" width="11" height="15" fill="rgb(254,116,3)"/><text x="100.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="292" width="11" height="15" fill="rgb(253,137,18)"/><text x="100.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="97" y="308" width="11" height="15" fill="rgb(225,47,43)"/><text x="100.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="324" width="11" height="15" fill="rgb(221,152,51)"/><text x="100.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.93%)</title><rect x="97" y="340" width="11" height="15" fill="rgb(223,84,34)"/><text x="100.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="356" width="11" height="15" fill="rgb(228,20,20)"/><text x="100.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="372" width="11" height="15" fill="rgb(211,141,10)"/><text x="100.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="388" width="11" height="15" fill="rgb(250,175,6)"/><text x="100.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="97" y="404" width="11" height="15" fill="rgb(223,225,53)"/><text x="100.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="420" width="11" height="15" fill="rgb(228,210,16)"/><text x="100.00" y="430.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py) (2 samples, 0.93%)</title><rect x="97" y="436" width="11" height="15" fill="rgb(241,204,5)"/><text x="100.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="452" width="11" height="15" fill="rgb(232,174,39)"/><text x="100.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="468" width="11" height="15" fill="rgb(217,48,33)"/><text x="100.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="484" width="11" height="15" fill="rgb(221,224,49)"/><text x="100.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.93%)</title><rect x="97" y="500" width="11" height="15" fill="rgb(251,170,40)"/><text x="100.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="97" y="516" width="11" height="15" fill="rgb(250,145,16)"/><text x="100.00" y="526.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_export.py) (1 samples, 0.47%)</title><rect x="103" y="532" width="5" height="15" fill="rgb(209,55,44)"/><text x="106.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="103" y="548" width="5" height="15" fill="rgb(216,102,10)"/><text x="106.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="103" y="564" width="5" height="15" fill="rgb(249,86,40)"/><text x="106.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.47%)</title><rect x="103" y="580" width="5" height="15" fill="rgb(224,63,13)"/><text x="106.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="103" y="596" width="5" height="15" fill="rgb(241,136,27)"/><text x="106.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="103" y="612" width="5" height="15" fill="rgb(219,217,42)"/><text x="106.00" y="622.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.47%)</title><rect x="103" y="628" width="5" height="15" fill="rgb(243,52,21)"/><text x="106.00" y="638.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="103" y="644" width="5" height="15" fill="rgb(237,60,34)"/><text x="106.00" y="654.50"></text></g><g><title>0x7f6f98aedd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="125" y="308" width="5" height="15" fill="rgb(232,52,2)"/><text x="128.00" y="318.50"></text></g><g><title>0x7f6f98aed05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="125" y="324" width="5" height="15" fill="rgb(221,15,43)"/><text x="128.00" y="334.50"></text></g><g><title>_dispatch (joblib/parallel.py) (3 samples, 1.40%)</title><rect x="119" y="196" width="17" height="15" fill="rgb(239,63,45)"/><text x="122.00" y="206.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (2 samples, 0.93%)</title><rect x="125" y="212" width="11" height="15" fill="rgb(247,151,20)"/><text x="128.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.93%)</title><rect x="125" y="228" width="11" height="15" fill="rgb(250,132,52)"/><text x="128.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (2 samples, 0.93%)</title><rect x="125" y="244" width="11" height="15" fill="rgb(239,163,17)"/><text x="128.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (2 samples, 0.93%)</title><rect x="125" y="260" width="11" height="15" fill="rgb(245,94,4)"/><text x="128.00" y="270.50"></text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (2 samples, 0.93%)</title><rect x="125" y="276" width="11" height="15" fill="rgb(225,159,54)"/><text x="128.00" y="286.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (2 samples, 0.93%)</title><rect x="125" y="292" width="11" height="15" fill="rgb(218,90,5)"/><text x="128.00" y="302.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (1 samples, 0.47%)</title><rect x="130" y="308" width="6" height="15" fill="rgb(214,55,10)"/><text x="133.00" y="318.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (1 samples, 0.47%)</title><rect x="130" y="324" width="6" height="15" fill="rgb(214,159,45)"/><text x="133.00" y="334.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.47%)</title><rect x="130" y="340" width="6" height="15" fill="rgb(224,128,20)"/><text x="133.00" y="350.50"></text></g><g><title>get (queue.py) (1 samples, 0.47%)</title><rect x="136" y="196" width="5" height="15" fill="rgb(219,54,14)"/><text x="139.00" y="206.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (1 samples, 0.47%)</title><rect x="141" y="196" width="6" height="15" fill="rgb(251,132,14)"/><text x="144.00" y="206.50"></text></g><g><title>get_active_backend (joblib/parallel.py) (1 samples, 0.47%)</title><rect x="141" y="212" width="6" height="15" fill="rgb(224,97,14)"/><text x="144.00" y="222.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.47%)</title><rect x="141" y="228" width="6" height="15" fill="rgb(212,63,45)"/><text x="144.00" y="238.50"></text></g><g><title>profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (8 samples, 3.72%)</title><rect x="108" y="100" width="44" height="15" fill="rgb(205,141,51)"/><text x="111.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.72%)</title><rect x="108" y="116" width="44" height="15" fill="rgb(233,111,11)"/><text x="111.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (8 samples, 3.72%)</title><rect x="108" y="132" width="44" height="15" fill="rgb(234,95,52)"/><text x="111.00" y="142.50">&lt;lam..</text></g><g><title>predict (sklearn/ensemble/_forest.py) (8 samples, 3.72%)</title><rect x="108" y="148" width="44" height="15" fill="rgb(230,172,37)"/><text x="111.00" y="158.50">pred..</text></g><g><title>__call__ (joblib/parallel.py) (8 samples, 3.72%)</title><rect x="108" y="164" width="44" height="15" fill="rgb(223,0,30)"/><text x="111.00" y="174.50">__ca..</text></g><g><title>dispatch_one_batch (joblib/parallel.py) (8 samples, 3.72%)</title><rect x="108" y="180" width="44" height="15" fill="rgb(243,97,44)"/><text x="111.00" y="190.50">disp..</text></g><g><title>put (queue.py) (1 samples, 0.47%)</title><rect x="147" y="196" width="5" height="15" fill="rgb(226,205,13)"/><text x="150.00" y="206.50"></text></g><g><title>_put (queue.py) (1 samples, 0.47%)</title><rect x="147" y="212" width="5" height="15" fill="rgb(232,59,18)"/><text x="150.00" y="222.50"></text></g><g><title>profile0_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (9 samples, 4.19%)</title><rect x="108" y="68" width="50" height="15" fill="rgb(243,151,32)"/><text x="111.00" y="78.50">profi..</text></g><g><title>setup_profile0 (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (9 samples, 4.19%)</title><rect x="108" y="84" width="50" height="15" fill="rgb(238,174,53)"/><text x="111.00" y="94.50">setup..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.47%)</title><rect x="152" y="100" width="6" height="15" fill="rgb(254,209,41)"/><text x="155.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.47%)</title><rect x="152" y="116" width="6" height="15" fill="rgb(210,197,28)"/><text x="155.00" y="126.50"></text></g><g><title>_to_onnx (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.47%)</title><rect x="152" y="132" width="6" height="15" fill="rgb(211,143,3)"/><text x="155.00" y="142.50"></text></g><g><title>to_onnx (mlprodict/onnx_conv/convert.py) (1 samples, 0.47%)</title><rect x="152" y="148" width="6" height="15" fill="rgb(240,216,1)"/><text x="155.00" y="158.50"></text></g><g><title>convert_sklearn (skl2onnx/convert.py) (1 samples, 0.47%)</title><rect x="152" y="164" width="6" height="15" fill="rgb(229,19,23)"/><text x="155.00" y="174.50"></text></g><g><title>convert_topology (skl2onnx/common/_topology.py) (1 samples, 0.47%)</title><rect x="152" y="180" width="6" height="15" fill="rgb(231,134,18)"/><text x="155.00" y="190.50"></text></g><g><title>convert_sklearn_random_forest_regressor_converter (mlprodict/onnx_conv/sklconv/tree_converters.py) (1 samples, 0.47%)</title><rect x="152" y="196" width="6" height="15" fill="rgb(214,178,16)"/><text x="155.00" y="206.50"></text></g><g><title>add_node (skl2onnx/common/_container.py) (1 samples, 0.47%)</title><rect x="152" y="212" width="6" height="15" fill="rgb(252,22,22)"/><text x="155.00" y="222.50"></text></g><g><title>make_node (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.47%)</title><rect x="152" y="228" width="6" height="15" fill="rgb(245,192,35)"/><text x="155.00" y="238.50"></text></g><g><title>google::protobuf::python::repeated_composite_container::Extend (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="152" y="244" width="6" height="15" fill="rgb(247,17,4)"/><text x="155.00" y="254.50"></text></g><g><title>&lt;genexpr&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.47%)</title><rect x="152" y="260" width="6" height="15" fill="rgb(237,78,39)"/><text x="155.00" y="270.50"></text></g><g><title>make_attribute (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.47%)</title><rect x="152" y="276" width="6" height="15" fill="rgb(209,71,27)"/><text x="155.00" y="286.50"></text></g><g><title>&lt;listcomp&gt; (skl2onnx/proto/onnx_helper_modified.py) (1 samples, 0.47%)</title><rect x="152" y="292" width="6" height="15" fill="rgb(217,102,41)"/><text x="155.00" y="302.50"></text></g><g><title>_to_bytes_or_false (onnx/helper.py) (1 samples, 0.47%)</title><rect x="152" y="308" width="6" height="15" fill="rgb(248,136,22)"/><text x="155.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="260" width="5" height="15" fill="rgb(213,117,29)"/><text x="161.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="276" width="5" height="15" fill="rgb(242,55,38)"/><text x="161.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="292" width="5" height="15" fill="rgb(226,44,23)"/><text x="161.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="308" width="5" height="15" fill="rgb(210,194,28)"/><text x="161.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="324" width="5" height="15" fill="rgb(244,87,11)"/><text x="161.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="340" width="5" height="15" fill="rgb(237,201,28)"/><text x="161.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="158" y="356" width="5" height="15" fill="rgb(229,54,1)"/><text x="161.00" y="366.50"></text></g><g><title>profile_ort (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (2 samples, 0.93%)</title><rect x="158" y="68" width="11" height="15" fill="rgb(242,7,3)"/><text x="161.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (2 samples, 0.93%)</title><rect x="158" y="84" width="11" height="15" fill="rgb(254,211,38)"/><text x="161.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (2 samples, 0.93%)</title><rect x="158" y="100" width="11" height="15" fill="rgb(211,49,37)"/><text x="161.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.93%)</title><rect x="158" y="116" width="11" height="15" fill="rgb(238,168,19)"/><text x="161.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.93%)</title><rect x="158" y="132" width="11" height="15" fill="rgb(227,198,24)"/><text x="161.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.93%)</title><rect x="158" y="148" width="11" height="15" fill="rgb(254,198,0)"/><text x="161.00" y="158.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.93%)</title><rect x="158" y="164" width="11" height="15" fill="rgb(223,151,43)"/><text x="161.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (2 samples, 0.93%)</title><rect x="158" y="180" width="11" height="15" fill="rgb(233,135,1)"/><text x="161.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py) (2 samples, 0.93%)</title><rect x="158" y="196" width="11" height="15" fill="rgb(216,101,33)"/><text x="161.00" y="206.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="158" y="212" width="11" height="15" fill="rgb(233,166,15)"/><text x="161.00" y="222.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="158" y="228" width="11" height="15" fill="rgb(250,133,36)"/><text x="161.00" y="238.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.93%)</title><rect x="158" y="244" width="11" height="15" fill="rgb(234,215,25)"/><text x="161.00" y="254.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="260" width="6" height="15" fill="rgb(230,44,38)"/><text x="166.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="276" width="6" height="15" fill="rgb(206,227,42)"/><text x="166.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="292" width="6" height="15" fill="rgb(208,126,48)"/><text x="166.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="308" width="6" height="15" fill="rgb(254,18,31)"/><text x="166.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="324" width="6" height="15" fill="rgb(218,157,16)"/><text x="166.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="340" width="6" height="15" fill="rgb(238,19,14)"/><text x="166.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.47%)</title><rect x="163" y="356" width="6" height="15" fill="rgb(242,209,4)"/><text x="166.00" y="366.50"></text></g><g><title>profile_pyrt (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.47%)</title><rect x="169" y="68" width="5" height="15" fill="rgb(241,110,53)"/><text x="172.00" y="78.50"></text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.47%)</title><rect x="169" y="84" width="5" height="15" fill="rgb(210,100,53)"/><text x="172.00" y="94.50"></text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.47%)</title><rect x="169" y="100" width="5" height="15" fill="rgb(233,50,28)"/><text x="172.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.47%)</title><rect x="169" y="116" width="5" height="15" fill="rgb(231,152,52)"/><text x="172.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.47%)</title><rect x="169" y="132" width="5" height="15" fill="rgb(254,35,53)"/><text x="172.00" y="142.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.47%)</title><rect x="169" y="148" width="5" height="15" fill="rgb(246,194,16)"/><text x="172.00" y="158.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.47%)</title><rect x="169" y="164" width="5" height="15" fill="rgb(215,180,37)"/><text x="172.00" y="174.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.47%)</title><rect x="169" y="180" width="5" height="15" fill="rgb(240,26,13)"/><text x="172.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.47%)</title><rect x="169" y="196" width="5" height="15" fill="rgb(220,16,15)"/><text x="172.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (1 samples, 0.47%)</title><rect x="169" y="212" width="5" height="15" fill="rgb(205,210,38)"/><text x="172.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py) (1 samples, 0.47%)</title><rect x="169" y="228" width="5" height="15" fill="rgb(244,26,2)"/><text x="172.00" y="238.50"></text></g><g><title>0x7f6f7fb4254f (?) (1 samples, 0.47%)</title><rect x="169" y="244" width="5" height="15" fill="rgb(241,38,8)"/><text x="172.00" y="254.50"></text></g><g><title>0x7f6f7fb4865e (?) (1 samples, 0.47%)</title><rect x="169" y="260" width="5" height="15" fill="rgb(213,64,37)"/><text x="172.00" y="270.50"></text></g><g><title>0x7f6f7fb4850f (?) (1 samples, 0.47%)</title><rect x="169" y="276" width="5" height="15" fill="rgb(244,61,14)"/><text x="172.00" y="286.50"></text></g><g><title>0x7f6f7fb4ed6c (?) (1 samples, 0.47%)</title><rect x="169" y="292" width="5" height="15" fill="rgb(222,172,50)"/><text x="172.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="169" y="308" width="5" height="15" fill="rgb(215,71,33)"/><text x="172.00" y="318.50"></text></g><g><title>0x7f6f8906edaa (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="169" y="324" width="5" height="15" fill="rgb(246,154,48)"/><text x="172.00" y="334.50"></text></g><g><title>0x7f6f89070cfb (libgomp.so.1.0.0) (1 samples, 0.47%)</title><rect x="169" y="340" width="5" height="15" fill="rgb(209,19,39)"/><text x="172.00" y="350.50"></text></g><g><title>update_wrapper (functools.py) (4 samples, 1.86%)</title><rect x="295" y="228" width="22" height="15" fill="rgb(215,189,40)"/><text x="298.00" y="238.50">u..</text></g><g><title>&lt;genexpr&gt; (sklearn/ensemble/_forest.py) (14 samples, 6.51%)</title><rect x="246" y="196" width="76" height="15" fill="rgb(211,188,37)"/><text x="249.00" y="206.50">&lt;genexpr..</text></g><g><title>delayed (joblib/parallel.py) (11 samples, 5.12%)</title><rect x="262" y="212" width="60" height="15" fill="rgb(222,153,19)"/><text x="265.00" y="222.50">delaye..</text></g><g><title>wraps (functools.py) (1 samples, 0.47%)</title><rect x="317" y="228" width="5" height="15" fill="rgb(214,229,9)"/><text x="320.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.47%)</title><rect x="322" y="196" width="6" height="15" fill="rgb(218,224,12)"/><text x="325.00" y="206.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="322" y="212" width="6" height="15" fill="rgb(222,18,13)"/><text x="325.00" y="222.50"></text></g><g><title>0x564c176ce9c0 (?) (1 samples, 0.47%)</title><rect x="355" y="212" width="6" height="15" fill="rgb(251,19,33)"/><text x="358.00" y="222.50"></text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.47%)</title><rect x="355" y="228" width="6" height="15" fill="rgb(250,49,46)"/><text x="358.00" y="238.50"></text></g><g><title>0x7ffc23b54a5e ([vdso]) (1 samples, 0.47%)</title><rect x="355" y="244" width="6" height="15" fill="rgb(222,98,53)"/><text x="358.00" y="254.50"></text></g><g><title>__call__ (joblib/parallel.py) (9 samples, 4.19%)</title><rect x="366" y="228" width="50" height="15" fill="rgb(222,153,4)"/><text x="369.00" y="238.50">__cal..</text></g><g><title>print_progress (joblib/parallel.py) (1 samples, 0.47%)</title><rect x="410" y="244" width="6" height="15" fill="rgb(211,117,22)"/><text x="413.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.47%)</title><rect x="498" y="388" width="5" height="15" fill="rgb(232,165,45)"/><text x="501.00" y="398.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.47%)</title><rect x="498" y="404" width="5" height="15" fill="rgb(205,146,29)"/><text x="501.00" y="414.50"></text></g><g><title>raw_array_is_aligned (array_assign.c) (1 samples, 0.47%)</title><rect x="498" y="420" width="5" height="15" fill="rgb(220,205,39)"/><text x="501.00" y="430.50"></text></g><g><title>0x7f6f98aecf55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="498" y="324" width="11" height="15" fill="rgb(206,23,32)"/><text x="501.00" y="334.50"></text></g><g><title>0x7f6f98adcd33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="498" y="340" width="11" height="15" fill="rgb(236,151,23)"/><text x="501.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.93%)</title><rect x="498" y="356" width="11" height="15" fill="rgb(248,89,14)"/><text x="501.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.93%)</title><rect x="498" y="372" width="11" height="15" fill="rgb(212,143,2)"/><text x="501.00" y="382.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c) (1 samples, 0.47%)</title><rect x="503" y="388" width="6" height="15" fill="rgb(243,8,29)"/><text x="506.00" y="398.50"></text></g><g><title>0x7f6f98afc2d7 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="509" y="340" width="5" height="15" fill="rgb(246,44,41)"/><text x="512.00" y="350.50"></text></g><g><title>0x7f6f98afb1dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="514" y="356" width="6" height="15" fill="rgb(212,168,47)"/><text x="517.00" y="366.50"></text></g><g><title>0x7f6f98adf5d8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="520" y="388" width="5" height="15" fill="rgb(253,144,12)"/><text x="523.00" y="398.50"></text></g><g><title>0x7f6f98ac7c10 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="520" y="404" width="5" height="15" fill="rgb(239,132,46)"/><text x="523.00" y="414.50"></text></g><g><title>0x7f6f98adfd04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.86%)</title><rect x="520" y="372" width="22" height="15" fill="rgb(225,41,36)"/><text x="523.00" y="382.50">0..</text></g><g><title>0x7f6f98adf666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.40%)</title><rect x="525" y="388" width="17" height="15" fill="rgb(227,76,53)"/><text x="528.00" y="398.50"></text></g><g><title>0x7f6f98ad52fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="536" y="404" width="6" height="15" fill="rgb(233,40,35)"/><text x="539.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.47%)</title><rect x="536" y="420" width="6" height="15" fill="rgb(235,38,7)"/><text x="539.00" y="430.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.47%)</title><rect x="536" y="436" width="6" height="15" fill="rgb(219,1,2)"/><text x="539.00" y="446.50"></text></g><g><title>_buffer_info_new (buffer.c) (1 samples, 0.47%)</title><rect x="536" y="452" width="6" height="15" fill="rgb(206,82,53)"/><text x="539.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.47%)</title><rect x="536" y="468" width="6" height="15" fill="rgb(236,119,18)"/><text x="539.00" y="478.50"></text></g><g><title>0x7f6f98afb2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.33%)</title><rect x="520" y="356" width="27" height="15" fill="rgb(232,228,11)"/><text x="523.00" y="366.50">0..</text></g><g><title>0x7f6f98adfe72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="542" y="372" width="5" height="15" fill="rgb(239,195,1)"/><text x="545.00" y="382.50"></text></g><g><title>0x7f6f98ad32bc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="542" y="388" width="5" height="15" fill="rgb(242,66,13)"/><text x="545.00" y="398.50"></text></g><g><title>0x7f6f98ad2b17 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="542" y="404" width="5" height="15" fill="rgb(244,120,27)"/><text x="545.00" y="414.50"></text></g><g><title>0x7f6f98afb592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.40%)</title><rect x="547" y="356" width="17" height="15" fill="rgb(215,70,50)"/><text x="550.00" y="366.50"></text></g><g><title>array_zeros (multiarraymodule.c) (2 samples, 0.93%)</title><rect x="553" y="372" width="11" height="15" fill="rgb(252,165,22)"/><text x="556.00" y="382.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.47%)</title><rect x="558" y="388" width="6" height="15" fill="rgb(207,14,2)"/><text x="561.00" y="398.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.47%)</title><rect x="558" y="404" width="6" height="15" fill="rgb(227,171,33)"/><text x="561.00" y="414.50"></text></g><g><title>0x7f6f98afb8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="564" y="356" width="5" height="15" fill="rgb(215,44,51)"/><text x="567.00" y="366.50"></text></g><g><title>0x7f6f98afc405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.12%)</title><rect x="514" y="340" width="61" height="15" fill="rgb(236,49,47)"/><text x="517.00" y="350.50">0x7f6f..</text></g><g><title>0x7f6f98afbc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="569" y="356" width="6" height="15" fill="rgb(241,32,42)"/><text x="572.00" y="366.50"></text></g><g><title>0x7f6f98ad3529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="569" y="372" width="6" height="15" fill="rgb(218,107,48)"/><text x="572.00" y="382.50"></text></g><g><title>array_getbuffer (buffer.c) (1 samples, 0.47%)</title><rect x="569" y="388" width="6" height="15" fill="rgb(236,136,0)"/><text x="572.00" y="398.50"></text></g><g><title>_buffer_get_info (buffer.c) (1 samples, 0.47%)</title><rect x="569" y="404" width="6" height="15" fill="rgb(214,123,11)"/><text x="572.00" y="414.50"></text></g><g><title>0x7f6f98aecfa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (13 samples, 6.05%)</title><rect x="509" y="324" width="71" height="15" fill="rgb(227,98,4)"/><text x="512.00" y="334.50">0x7f6f98..</text></g><g><title>0x7f6f98afc540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="575" y="340" width="5" height="15" fill="rgb(232,6,35)"/><text x="578.00" y="350.50"></text></g><g><title>0x7f6f98ad11ed (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="575" y="356" width="5" height="15" fill="rgb(211,26,16)"/><text x="578.00" y="366.50"></text></g><g><title>0x7f6f98aecfbc (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="580" y="324" width="6" height="15" fill="rgb(227,61,9)"/><text x="583.00" y="334.50"></text></g><g><title>0x7f6f98aed002 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="586" y="324" width="5" height="15" fill="rgb(245,217,31)"/><text x="589.00" y="334.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c) (1 samples, 0.47%)</title><rect x="608" y="356" width="5" height="15" fill="rgb(205,187,8)"/><text x="611.00" y="366.50"></text></g><g><title>0x7f6f98aed05a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.33%)</title><rect x="591" y="324" width="28" height="15" fill="rgb(243,27,27)"/><text x="594.00" y="334.50">0..</text></g><g><title>array_take (methods.c) (5 samples, 2.33%)</title><rect x="591" y="340" width="28" height="15" fill="rgb(233,133,39)"/><text x="594.00" y="350.50">a..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.47%)</title><rect x="613" y="356" width="6" height="15" fill="rgb(228,23,31)"/><text x="616.00" y="366.50"></text></g><g><title>0x7f6fbf187151 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="613" y="372" width="6" height="15" fill="rgb(230,173,14)"/><text x="616.00" y="382.50"></text></g><g><title>0x7f6f98aed13a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="619" y="324" width="5" height="15" fill="rgb(246,2,49)"/><text x="622.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.47%)</title><rect x="619" y="340" width="5" height="15" fill="rgb(223,72,30)"/><text x="622.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.47%)</title><rect x="619" y="356" width="5" height="15" fill="rgb(251,141,14)"/><text x="622.00" y="366.50"></text></g><g><title>0x7f6f98aed14f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.93%)</title><rect x="624" y="324" width="11" height="15" fill="rgb(250,164,25)"/><text x="627.00" y="334.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.93%)</title><rect x="624" y="340" width="11" height="15" fill="rgb(218,163,50)"/><text x="627.00" y="350.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.93%)</title><rect x="624" y="356" width="11" height="15" fill="rgb(247,188,27)"/><text x="627.00" y="366.50"></text></g><g><title>_buffer_clear_info (buffer.c) (2 samples, 0.93%)</title><rect x="624" y="372" width="11" height="15" fill="rgb(214,153,53)"/><text x="627.00" y="382.50"></text></g><g><title>_buffer_info_free (buffer.c) (1 samples, 0.47%)</title><rect x="630" y="388" width="5" height="15" fill="rgb(221,131,39)"/><text x="633.00" y="398.50"></text></g><g><title>0x7f6fbf0a9991 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="630" y="404" width="5" height="15" fill="rgb(224,192,51)"/><text x="633.00" y="414.50"></text></g><g><title>0x7f6f98aed163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="635" y="324" width="6" height="15" fill="rgb(211,205,3)"/><text x="638.00" y="334.50"></text></g><g><title>0x7f6f98aed328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="641" y="324" width="5" height="15" fill="rgb(217,53,10)"/><text x="644.00" y="334.50"></text></g><g><title>array_reshape (methods.c) (1 samples, 0.47%)</title><rect x="641" y="340" width="5" height="15" fill="rgb(234,213,19)"/><text x="644.00" y="350.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.47%)</title><rect x="641" y="356" width="5" height="15" fill="rgb(252,8,41)"/><text x="644.00" y="366.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.47%)</title><rect x="641" y="372" width="5" height="15" fill="rgb(230,153,41)"/><text x="644.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.47%)</title><rect x="641" y="388" width="5" height="15" fill="rgb(251,41,28)"/><text x="644.00" y="398.50"></text></g><g><title>0x7f6f98aedd2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (28 samples, 13.02%)</title><rect x="498" y="308" width="154" height="15" fill="rgb(210,149,15)"/><text x="501.00" y="318.50">0x7f6f98aedd2e (skl..</text></g><g><title>0x7f6f98aed5f2 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.47%)</title><rect x="646" y="324" width="6" height="15" fill="rgb(231,109,3)"/><text x="649.00" y="334.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.47%)</title><rect x="652" y="308" width="5" height="15" fill="rgb(217,217,46)"/><text x="655.00" y="318.50"></text></g><g><title>get_view_from_index (mapping.c) (1 samples, 0.47%)</title><rect x="657" y="324" width="6" height="15" fill="rgb(252,102,52)"/><text x="660.00" y="334.50"></text></g><g><title>array_subscript (mapping.c) (2 samples, 0.93%)</title><rect x="657" y="308" width="11" height="15" fill="rgb(208,7,28)"/><text x="660.00" y="318.50"></text></g><g><title>prepare_index (mapping.c) (1 samples, 0.47%)</title><rect x="663" y="324" width="5" height="15" fill="rgb(245,13,12)"/><text x="666.00" y="334.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c) (1 samples, 0.47%)</title><rect x="663" y="340" width="5" height="15" fill="rgb(225,75,53)"/><text x="666.00" y="350.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c) (1 samples, 0.47%)</title><rect x="663" y="356" width="5" height="15" fill="rgb(208,34,27)"/><text x="666.00" y="366.50"></text></g><g><title>unicode_endswith (python3.7) (3 samples, 1.40%)</title><rect x="707" y="340" width="16" height="15" fill="rgb(210,13,3)"/><text x="710.00" y="350.50"></text></g><g><title>predict (sklearn/tree/_classes.py) (44 samples, 20.47%)</title><rect x="487" y="292" width="241" height="15" fill="rgb(235,102,28)"/><text x="490.00" y="302.50">predict (sklearn/tree/_classes.p..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (11 samples, 5.12%)</title><rect x="668" y="308" width="60" height="15" fill="rgb(253,140,25)"/><text x="671.00" y="318.50">check_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (8 samples, 3.72%)</title><rect x="685" y="324" width="43" height="15" fill="rgb(226,71,35)"/><text x="688.00" y="334.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.47%)</title><rect x="723" y="340" width="5" height="15" fill="rgb(211,25,26)"/><text x="726.00" y="350.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.47%)</title><rect x="734" y="372" width="5" height="15" fill="rgb(218,31,22)"/><text x="737.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.93%)</title><rect x="734" y="356" width="11" height="15" fill="rgb(244,48,29)"/><text x="737.00" y="366.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.47%)</title><rect x="739" y="372" width="6" height="15" fill="rgb(207,147,37)"/><text x="742.00" y="382.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (3 samples, 1.40%)</title><rect x="745" y="356" width="16" height="15" fill="rgb(209,38,43)"/><text x="748.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.47%)</title><rect x="756" y="372" width="5" height="15" fill="rgb(217,210,50)"/><text x="759.00" y="382.50"></text></g><g><title>NpyIter_GetDataPtrArray (nditer_api.c) (1 samples, 0.47%)</title><rect x="761" y="356" width="6" height="15" fill="rgb(231,77,46)"/><text x="764.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 3.26%)</title><rect x="734" y="324" width="38" height="15" fill="rgb(225,174,45)"/><text x="737.00" y="334.50">exe..</text></g><g><title>iterator_loop (ufunc_object.c) (7 samples, 3.26%)</title><rect x="734" y="340" width="38" height="15" fill="rgb(206,30,0)"/><text x="737.00" y="350.50">ite..</text></g><g><title>npyiter_buffered_iternext (nditer_templ.c.src) (1 samples, 0.47%)</title><rect x="767" y="356" width="5" height="15" fill="rgb(223,138,7)"/><text x="770.00" y="366.50"></text></g><g><title>npyiter_copy_from_buffers (nditer_api.c) (1 samples, 0.47%)</title><rect x="767" y="372" width="5" height="15" fill="rgb(239,144,17)"/><text x="770.00" y="382.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.47%)</title><rect x="772" y="324" width="6" height="15" fill="rgb(229,189,14)"/><text x="775.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (9 samples, 4.19%)</title><rect x="734" y="308" width="49" height="15" fill="rgb(247,228,53)"/><text x="737.00" y="318.50">PyUF..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.47%)</title><rect x="778" y="324" width="5" height="15" fill="rgb(235,170,22)"/><text x="781.00" y="334.50"></text></g><g><title>0x7f6fbf0ca1ef (libc-2.29.so) (1 samples, 0.47%)</title><rect x="778" y="340" width="5" height="15" fill="rgb(253,198,13)"/><text x="781.00" y="350.50"></text></g><g><title>&lt;listcomp&gt; (joblib/parallel.py) (60 samples, 27.91%)</title><rect x="460" y="260" width="329" height="15" fill="rgb(240,151,50)"/><text x="463.00" y="270.50">&lt;listcomp&gt; (joblib/parallel.py)</text></g><g><title>_accumulate_prediction (sklearn/ensemble/_forest.py) (59 samples, 27.44%)</title><rect x="465" y="276" width="324" height="15" fill="rgb(215,52,41)"/><text x="468.00" y="286.50">_accumulate_prediction (sklearn/ensemble/_f..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 5.12%)</title><rect x="728" y="292" width="61" height="15" fill="rgb(210,202,27)"/><text x="731.00" y="302.50">ufunc_..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.47%)</title><rect x="783" y="308" width="6" height="15" fill="rgb(211,91,21)"/><text x="786.00" y="318.50"></text></g><g><title>__exit__ (joblib/parallel.py) (5 samples, 2.33%)</title><rect x="789" y="260" width="27" height="15" fill="rgb(225,91,13)"/><text x="792.00" y="270.50">_..</text></g><g><title>unregister (joblib/parallel.py) (3 samples, 1.40%)</title><rect x="800" y="276" width="16" height="15" fill="rgb(247,213,16)"/><text x="803.00" y="286.50"></text></g><g><title>apply_async (joblib/_parallel_backends.py) (90 samples, 41.86%)</title><rect x="361" y="212" width="494" height="15" fill="rgb(208,44,16)"/><text x="364.00" y="222.50">apply_async (joblib/_parallel_backends.py)</text></g><g><title>__init__ (joblib/_parallel_backends.py) (80 samples, 37.21%)</title><rect x="416" y="228" width="439" height="15" fill="rgb(221,58,31)"/><text x="419.00" y="238.50">__init__ (joblib/_parallel_backends.py)</text></g><g><title>__call__ (joblib/parallel.py) (79 samples, 36.74%)</title><rect x="421" y="244" width="434" height="15" fill="rgb(220,206,1)"/><text x="424.00" y="254.50">__call__ (joblib/parallel.py)</text></g><g><title>__init__ (joblib/parallel.py) (7 samples, 3.26%)</title><rect x="816" y="260" width="39" height="15" fill="rgb(248,89,53)"/><text x="819.00" y="270.50">__i..</text></g><g><title>_dispatch (joblib/parallel.py) (97 samples, 45.12%)</title><rect x="328" y="196" width="532" height="15" fill="rgb(206,118,49)"/><text x="331.00" y="206.50">_dispatch (joblib/parallel.py)</text></g><g><title>clock_gettime (libc-2.29.so) (1 samples, 0.47%)</title><rect x="855" y="212" width="5" height="15" fill="rgb(218,74,18)"/><text x="858.00" y="222.50"></text></g><g><title>0x7ffc23b54af6 ([vdso]) (1 samples, 0.47%)</title><rect x="855" y="228" width="5" height="15" fill="rgb(244,5,52)"/><text x="858.00" y="238.50"></text></g><g><title>__enter__ (threading.py) (5 samples, 2.33%)</title><rect x="877" y="212" width="27" height="15" fill="rgb(221,171,12)"/><text x="880.00" y="222.50">_..</text></g><g><title>__exit__ (threading.py) (1 samples, 0.47%)</title><rect x="904" y="212" width="6" height="15" fill="rgb(224,80,5)"/><text x="907.00" y="222.50"></text></g><g><title>_get (queue.py) (2 samples, 0.93%)</title><rect x="910" y="212" width="11" height="15" fill="rgb(224,63,43)"/><text x="913.00" y="222.50"></text></g><g><title>_qsize (queue.py) (1 samples, 0.47%)</title><rect x="921" y="212" width="5" height="15" fill="rgb(253,204,53)"/><text x="924.00" y="222.50"></text></g><g><title>get (queue.py) (13 samples, 6.05%)</title><rect x="860" y="196" width="72" height="15" fill="rgb(254,76,9)"/><text x="863.00" y="206.50">get (que..</text></g><g><title>notify (threading.py) (1 samples, 0.47%)</title><rect x="926" y="212" width="6" height="15" fill="rgb(219,11,13)"/><text x="929.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (5 samples, 2.33%)</title><rect x="954" y="212" width="27" height="15" fill="rgb(236,70,30)"/><text x="957.00" y="222.50">_..</text></g><g><title>get_active_backend (joblib/parallel.py) (14 samples, 6.51%)</title><rect x="981" y="212" width="77" height="15" fill="rgb(236,137,25)"/><text x="984.00" y="222.50">get_acti..</text></g><g><title>__init__ (joblib/_parallel_backends.py) (2 samples, 0.93%)</title><rect x="1047" y="228" width="11" height="15" fill="rgb(205,112,11)"/><text x="1050.00" y="238.50"></text></g><g><title>__init__ (joblib/_parallel_backends.py) (1 samples, 0.47%)</title><rect x="1052" y="244" width="6" height="15" fill="rgb(221,94,8)"/><text x="1055.00" y="254.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.93%)</title><rect x="1058" y="212" width="11" height="15" fill="rgb(253,176,17)"/><text x="1061.00" y="222.50"></text></g><g><title>0x7f6fbf0ba9a0 (libc-2.29.so) (1 samples, 0.47%)</title><rect x="1063" y="228" width="6" height="15" fill="rgb(222,187,45)"/><text x="1066.00" y="238.50"></text></g><g><title>get_nested_backend (joblib/_parallel_backends.py) (26 samples, 12.09%)</title><rect x="932" y="196" width="142" height="15" fill="rgb(215,61,40)"/><text x="935.00" y="206.50">get_nested_backend..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.47%)</title><rect x="1069" y="212" width="5" height="15" fill="rgb(230,61,28)"/><text x="1072.00" y="222.50"></text></g><g><title>__enter__ (threading.py) (1 samples, 0.47%)</title><rect x="1096" y="212" width="6" height="15" fill="rgb(230,7,6)"/><text x="1099.00" y="222.50"></text></g><g><title>lock_PyThread_acquire_lock (python3.7) (1 samples, 0.47%)</title><rect x="1096" y="228" width="6" height="15" fill="rgb(251,169,20)"/><text x="1099.00" y="238.50"></text></g><g><title>PyThread_acquire_lock_timed (python3.7) (1 samples, 0.47%)</title><rect x="1096" y="244" width="6" height="15" fill="rgb(251,118,53)"/><text x="1099.00" y="254.50"></text></g><g><title>sem_trywait@@GLIBC_2.2.5 (libpthread-2.29.so) (1 samples, 0.47%)</title><rect x="1096" y="260" width="6" height="15" fill="rgb(226,194,30)"/><text x="1099.00" y="270.50"></text></g><g><title>__exit__ (threading.py) (2 samples, 0.93%)</title><rect x="1102" y="212" width="11" height="15" fill="rgb(228,156,35)"/><text x="1105.00" y="222.50"></text></g><g><title>_put (queue.py) (1 samples, 0.47%)</title><rect x="1113" y="212" width="5" height="15" fill="rgb(243,62,9)"/><text x="1116.00" y="222.50"></text></g><g><title>dispatch_one_batch (joblib/parallel.py) (175 samples, 81.40%)</title><rect x="185" y="180" width="961" height="15" fill="rgb(225,163,25)"/><text x="188.00" y="190.50">dispatch_one_batch (joblib/parallel.py)</text></g><g><title>put (queue.py) (13 samples, 6.05%)</title><rect x="1074" y="196" width="72" height="15" fill="rgb(250,168,22)"/><text x="1077.00" y="206.50">put (que..</text></g><g><title>notify (threading.py) (5 samples, 2.33%)</title><rect x="1118" y="212" width="28" height="15" fill="rgb(213,9,39)"/><text x="1121.00" y="222.50">n..</text></g><g><title>_is_owned (threading.py) (1 samples, 0.47%)</title><rect x="1140" y="228" width="6" height="15" fill="rgb(241,164,36)"/><text x="1143.00" y="238.50"></text></g><g><title>__call__ (joblib/parallel.py) (180 samples, 83.72%)</title><rect x="174" y="164" width="988" height="15" fill="rgb(231,63,14)"/><text x="177.00" y="174.50">__call__ (joblib/parallel.py)</text></g><g><title>retrieve (joblib/parallel.py) (3 samples, 1.40%)</title><rect x="1146" y="180" width="16" height="15" fill="rgb(205,178,23)"/><text x="1149.00" y="190.50"></text></g><g><title>_joblib_parallel_args (sklearn/utils/fixes.py) (1 samples, 0.47%)</title><rect x="1162" y="164" width="6" height="15" fill="rgb(209,77,39)"/><text x="1165.00" y="174.50"></text></g><g><title>__init__ (distutils/version.py) (1 samples, 0.47%)</title><rect x="1162" y="180" width="6" height="15" fill="rgb(248,157,51)"/><text x="1165.00" y="190.50"></text></g><g><title>parse (distutils/version.py) (1 samples, 0.47%)</title><rect x="1162" y="196" width="6" height="15" fill="rgb(243,5,26)"/><text x="1165.00" y="206.50"></text></g><g><title>_partition_estimators (sklearn/ensemble/_base.py) (1 samples, 0.47%)</title><rect x="1168" y="164" width="5" height="15" fill="rgb(245,166,35)"/><text x="1171.00" y="174.50"></text></g><g><title>effective_n_jobs (joblib/parallel.py) (1 samples, 0.47%)</title><rect x="1168" y="180" width="5" height="15" fill="rgb(225,225,33)"/><text x="1171.00" y="190.50"></text></g><g><title>effective_n_jobs (joblib/_parallel_backends.py) (1 samples, 0.47%)</title><rect x="1168" y="196" width="5" height="15" fill="rgb(235,162,48)"/><text x="1171.00" y="206.50"></text></g><g><title>profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (183 samples, 85.12%)</title><rect x="174" y="68" width="1005" height="15" fill="rgb(213,135,27)"/><text x="177.00" y="78.50">profile_skl (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (183 samples, 85.12%)</title><rect x="174" y="84" width="1005" height="15" fill="rgb(213,62,25)"/><text x="177.00" y="94.50">setup_profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (183 samples, 85.12%)</title><rect x="174" y="100" width="1005" height="15" fill="rgb(239,173,0)"/><text x="177.00" y="110.50">profile (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 85.12%)</title><rect x="174" y="116" width="1005" height="15" fill="rgb(218,60,39)"/><text x="177.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 85.12%)</title><rect x="174" y="132" width="1005" height="15" fill="rgb(254,18,24)"/><text x="177.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/ensemble/_forest.py) (183 samples, 85.12%)</title><rect x="174" y="148" width="1005" height="15" fill="rgb(214,13,10)"/><text x="177.00" y="158.50">predict (sklearn/ensemble/_forest.py)</text></g><g><title>_validate_X_predict (sklearn/ensemble/_forest.py) (1 samples, 0.47%)</title><rect x="1173" y="164" width="6" height="15" fill="rgb(241,227,9)"/><text x="1176.00" y="174.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py) (1 samples, 0.47%)</title><rect x="1173" y="180" width="6" height="15" fill="rgb(252,28,13)"/><text x="1176.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.47%)</title><rect x="1173" y="196" width="6" height="15" fill="rgb(211,192,26)"/><text x="1176.00" y="206.50"></text></g><g><title>all (215 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(219,14,28)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (215 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(213,30,15)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>start (bench_RandomForestRegressor_default_b_reg_1_50_12_float_.py) (2 samples, 0.93%)</title><rect x="1179" y="68" width="11" height="15" fill="rgb(249,209,54)"/><text x="1182.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/RandomForestRegressor/bench_RandomForestRegressor_default_b_reg.py) (2 samples, 0.93%)</title><rect x="1179" y="84" width="11" height="15" fill="rgb(240,8,44)"/><text x="1182.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.93%)</title><rect x="1179" y="100" width="11" height="15" fill="rgb(218,227,50)"/><text x="1182.00" y="110.50"></text></g><g><title>fit (sklearn/ensemble/_forest.py) (2 samples, 0.93%)</title><rect x="1179" y="116" width="11" height="15" fill="rgb(226,179,33)"/><text x="1182.00" y="126.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_forest.py) (2 samples, 0.93%)</title><rect x="1179" y="132" width="11" height="15" fill="rgb(236,180,43)"/><text x="1182.00" y="142.50"></text></g><g><title>_make_estimator (sklearn/ensemble/_base.py) (2 samples, 0.93%)</title><rect x="1179" y="148" width="11" height="15" fill="rgb(245,30,52)"/><text x="1182.00" y="158.50"></text></g><g><title>_set_random_states (sklearn/ensemble/_base.py) (2 samples, 0.93%)</title><rect x="1179" y="164" width="11" height="15" fill="rgb(250,192,37)"/><text x="1182.00" y="174.50"></text></g><g><title>get_params (sklearn/base.py) (2 samples, 0.93%)</title><rect x="1179" y="180" width="11" height="15" fill="rgb(238,71,14)"/><text x="1182.00" y="190.50"></text></g><g><title>_get_param_names (sklearn/base.py) (2 samples, 0.93%)</title><rect x="1179" y="196" width="11" height="15" fill="rgb(233,143,42)"/><text x="1182.00" y="206.50"></text></g><g><title>signature (inspect.py) (1 samples, 0.47%)</title><rect x="1184" y="212" width="6" height="15" fill="rgb(206,83,53)"/><text x="1187.00" y="222.50"></text></g><g><title>from_callable (inspect.py) (1 samples, 0.47%)</title><rect x="1184" y="228" width="6" height="15" fill="rgb(244,59,19)"/><text x="1187.00" y="238.50"></text></g><g><title>_signature_from_callable (inspect.py) (1 samples, 0.47%)</title><rect x="1184" y="244" width="6" height="15" fill="rgb(249,163,40)"/><text x="1187.00" y="254.50"></text></g></g></svg>