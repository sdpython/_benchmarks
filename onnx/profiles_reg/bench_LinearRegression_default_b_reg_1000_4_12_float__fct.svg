<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2262" onload="init(evt)" viewBox="0 0 1200 2262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2262" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2245.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2245.00"> </text><g id="frames"><g><title>from_location (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="948" width="3" height="15" fill="rgb(238,191,22)"/><text x="15.00" y="958.50"></text></g><g><title>_reload_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="964" width="3" height="15" fill="rgb(231,194,15)"/><text x="15.00" y="974.50"></text></g><g><title>_get_version (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="980" width="3" height="15" fill="rgb(224,6,13)"/><text x="15.00" y="990.50"></text></g><g><title>_version_from_file (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="996" width="3" height="15" fill="rgb(209,212,32)"/><text x="15.00" y="1006.50"></text></g><g><title>_get_metadata (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="1012" width="3" height="15" fill="rgb(214,87,8)"/><text x="15.00" y="1022.50"></text></g><g><title>get_metadata_lines (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="1028" width="3" height="15" fill="rgb(233,138,22)"/><text x="15.00" y="1038.50"></text></g><g><title>get_metadata (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="1044" width="3" height="15" fill="rgb(247,108,24)"/><text x="15.00" y="1054.50"></text></g><g><title>_get (pkg_resources/__init__.py) (1 samples, 0.22%)</title><rect x="12" y="1060" width="3" height="15" fill="rgb(214,193,54)"/><text x="15.00" y="1070.50"></text></g><g><title>open64 (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="12" y="1076" width="3" height="15" fill="rgb(243,117,38)"/><text x="15.00" y="1086.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.22%)</title><rect x="15" y="948" width="2" height="15" fill="rgb(234,158,18)"/><text x="18.00" y="958.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="15" y="964" width="2" height="15" fill="rgb(246,94,43)"/><text x="18.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="10" y="356" width="10" height="15" fill="rgb(208,195,40)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="372" width="10" height="15" fill="rgb(247,37,47)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 0.87%)</title><rect x="10" y="388" width="10" height="15" fill="rgb(240,92,46)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="404" width="10" height="15" fill="rgb(246,106,11)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="420" width="10" height="15" fill="rgb(241,26,17)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="436" width="10" height="15" fill="rgb(228,13,53)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="10" y="452" width="10" height="15" fill="rgb(212,146,9)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="468" width="10" height="15" fill="rgb(233,7,10)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 0.87%)</title><rect x="10" y="484" width="10" height="15" fill="rgb(218,146,27)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="500" width="10" height="15" fill="rgb(227,113,18)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="516" width="10" height="15" fill="rgb(211,89,32)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="532" width="10" height="15" fill="rgb(234,152,4)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="10" y="548" width="10" height="15" fill="rgb(212,180,47)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="564" width="10" height="15" fill="rgb(212,60,44)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 0.87%)</title><rect x="10" y="580" width="10" height="15" fill="rgb(230,101,36)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="596" width="10" height="15" fill="rgb(253,120,11)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="612" width="10" height="15" fill="rgb(253,65,34)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="628" width="10" height="15" fill="rgb(248,156,3)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="644" width="10" height="15" fill="rgb(253,42,6)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="660" width="10" height="15" fill="rgb(224,34,8)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="676" width="10" height="15" fill="rgb(254,14,51)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="10" y="692" width="10" height="15" fill="rgb(205,121,9)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="708" width="10" height="15" fill="rgb(242,220,42)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="724" width="10" height="15" fill="rgb(220,67,37)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="740" width="10" height="15" fill="rgb(232,134,9)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="756" width="10" height="15" fill="rgb(248,151,14)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="772" width="10" height="15" fill="rgb(224,38,52)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="10" y="788" width="10" height="15" fill="rgb(225,227,34)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="10" y="804" width="10" height="15" fill="rgb(205,196,11)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(238,59,29)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(237,140,1)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="852" width="10" height="15" fill="rgb(235,53,41)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="868" width="10" height="15" fill="rgb(217,51,29)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="884" width="10" height="15" fill="rgb(245,104,42)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="900" width="10" height="15" fill="rgb(230,18,26)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="916" width="10" height="15" fill="rgb(209,112,31)"/><text x="13.00" y="926.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (4 samples, 0.87%)</title><rect x="10" y="932" width="10" height="15" fill="rgb(216,59,13)"/><text x="13.00" y="942.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.22%)</title><rect x="17" y="948" width="3" height="15" fill="rgb(208,54,13)"/><text x="20.00" y="958.50"></text></g><g><title>readdir64 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="17" y="964" width="3" height="15" fill="rgb(229,129,29)"/><text x="20.00" y="974.50"></text></g><g><title>0x7f612b236237 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="17" y="980" width="3" height="15" fill="rgb(249,162,12)"/><text x="20.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(235,170,44)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(228,215,36)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(236,111,37)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="244" width="12" height="15" fill="rgb(216,102,18)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.09%)</title><rect x="10" y="260" width="12" height="15" fill="rgb(234,101,33)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="276" width="12" height="15" fill="rgb(247,81,22)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (5 samples, 1.09%)</title><rect x="10" y="292" width="12" height="15" fill="rgb(215,92,4)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="308" width="12" height="15" fill="rgb(218,126,27)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="324" width="12" height="15" fill="rgb(226,6,38)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.09%)</title><rect x="10" y="340" width="12" height="15" fill="rgb(222,7,33)"/><text x="13.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="356" width="2" height="15" fill="rgb(254,199,54)"/><text x="23.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="20" y="372" width="2" height="15" fill="rgb(221,65,7)"/><text x="23.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="20" y="388" width="2" height="15" fill="rgb(216,210,15)"/><text x="23.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="404" width="2" height="15" fill="rgb(229,210,41)"/><text x="23.00" y="414.50"></text></g><g><title>0x7f612b47e995 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="420" width="2" height="15" fill="rgb(243,5,6)"/><text x="23.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="436" width="2" height="15" fill="rgb(232,109,16)"/><text x="23.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="452" width="2" height="15" fill="rgb(215,161,21)"/><text x="23.00" y="462.50"></text></g><g><title>0x7f612b47e258 (libdl-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="468" width="2" height="15" fill="rgb(248,112,53)"/><text x="23.00" y="478.50"></text></g><g><title>0x7f612b4cbd7a (ld-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="484" width="2" height="15" fill="rgb(209,31,36)"/><text x="23.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="500" width="2" height="15" fill="rgb(224,224,10)"/><text x="23.00" y="510.50"></text></g><g><title>0x7f612b4cc345 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="516" width="2" height="15" fill="rgb(240,27,32)"/><text x="23.00" y="526.50"></text></g><g><title>0x7f612b4c53d4 (ld-2.29.so) (1 samples, 0.22%)</title><rect x="20" y="532" width="2" height="15" fill="rgb(248,87,37)"/><text x="23.00" y="542.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.22%)</title><rect x="22" y="1204" width="3" height="15" fill="rgb(230,16,22)"/><text x="25.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1220" width="3" height="15" fill="rgb(222,175,19)"/><text x="25.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1236" width="3" height="15" fill="rgb(238,68,38)"/><text x="25.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1252" width="3" height="15" fill="rgb(240,183,47)"/><text x="25.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1268" width="3" height="15" fill="rgb(239,41,17)"/><text x="25.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1284" width="3" height="15" fill="rgb(245,193,24)"/><text x="25.00" y="1294.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py) (1 samples, 0.22%)</title><rect x="22" y="1300" width="3" height="15" fill="rgb(220,94,37)"/><text x="25.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1316" width="3" height="15" fill="rgb(210,141,34)"/><text x="25.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1332" width="3" height="15" fill="rgb(219,49,36)"/><text x="25.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1348" width="3" height="15" fill="rgb(210,30,53)"/><text x="25.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1364" width="3" height="15" fill="rgb(250,120,30)"/><text x="25.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1380" width="3" height="15" fill="rgb(244,91,16)"/><text x="25.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py) (1 samples, 0.22%)</title><rect x="22" y="1396" width="3" height="15" fill="rgb(242,5,38)"/><text x="25.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1412" width="3" height="15" fill="rgb(210,225,53)"/><text x="25.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1428" width="3" height="15" fill="rgb(252,179,2)"/><text x="25.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1444" width="3" height="15" fill="rgb(239,52,35)"/><text x="25.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="22" y="1460" width="3" height="15" fill="rgb(232,25,33)"/><text x="25.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="22" y="1476" width="3" height="15" fill="rgb(252,178,38)"/><text x="25.00" y="1486.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="22" y="1124" width="6" height="15" fill="rgb(238,46,35)"/><text x="25.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="22" y="1140" width="6" height="15" fill="rgb(241,212,5)"/><text x="25.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="22" y="1156" width="6" height="15" fill="rgb(246,176,45)"/><text x="25.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="22" y="1172" width="6" height="15" fill="rgb(251,106,46)"/><text x="25.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="22" y="1188" width="6" height="15" fill="rgb(217,43,35)"/><text x="25.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py) (1 samples, 0.22%)</title><rect x="25" y="1204" width="3" height="15" fill="rgb(240,132,46)"/><text x="28.00" y="1214.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1220" width="3" height="15" fill="rgb(212,46,0)"/><text x="28.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1236" width="3" height="15" fill="rgb(238,203,52)"/><text x="28.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1252" width="3" height="15" fill="rgb(207,178,50)"/><text x="28.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1268" width="3" height="15" fill="rgb(215,157,6)"/><text x="28.00" y="1278.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="25" y="1284" width="3" height="15" fill="rgb(228,142,47)"/><text x="28.00" y="1294.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1300" width="3" height="15" fill="rgb(225,129,24)"/><text x="28.00" y="1310.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1316" width="3" height="15" fill="rgb(234,94,26)"/><text x="28.00" y="1326.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1332" width="3" height="15" fill="rgb(235,116,53)"/><text x="28.00" y="1342.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="25" y="1348" width="3" height="15" fill="rgb(215,42,20)"/><text x="28.00" y="1358.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1476" width="2" height="15" fill="rgb(210,145,12)"/><text x="31.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1492" width="2" height="15" fill="rgb(253,122,54)"/><text x="31.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1508" width="2" height="15" fill="rgb(235,121,3)"/><text x="31.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1524" width="2" height="15" fill="rgb(248,34,10)"/><text x="31.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1540" width="2" height="15" fill="rgb(221,196,49)"/><text x="31.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py) (1 samples, 0.22%)</title><rect x="28" y="1556" width="2" height="15" fill="rgb(235,148,18)"/><text x="31.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py) (1 samples, 0.22%)</title><rect x="28" y="1572" width="2" height="15" fill="rgb(228,13,7)"/><text x="31.00" y="1582.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1588" width="2" height="15" fill="rgb(248,116,39)"/><text x="31.00" y="1598.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1604" width="2" height="15" fill="rgb(217,0,46)"/><text x="31.00" y="1614.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1620" width="2" height="15" fill="rgb(252,123,31)"/><text x="31.00" y="1630.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1636" width="2" height="15" fill="rgb(226,3,19)"/><text x="31.00" y="1646.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1652" width="2" height="15" fill="rgb(207,35,31)"/><text x="31.00" y="1662.50"></text></g><g><title>&lt;module&gt; (jinja2/__init__.py) (1 samples, 0.22%)</title><rect x="28" y="1668" width="2" height="15" fill="rgb(237,90,9)"/><text x="31.00" y="1678.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1684" width="2" height="15" fill="rgb(237,196,22)"/><text x="31.00" y="1694.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1700" width="2" height="15" fill="rgb(213,126,50)"/><text x="31.00" y="1710.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1716" width="2" height="15" fill="rgb(208,75,42)"/><text x="31.00" y="1726.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1732" width="2" height="15" fill="rgb(232,156,12)"/><text x="31.00" y="1742.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1748" width="2" height="15" fill="rgb(249,193,37)"/><text x="31.00" y="1758.50"></text></g><g><title>&lt;module&gt; (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="28" y="1764" width="2" height="15" fill="rgb(221,109,52)"/><text x="31.00" y="1774.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1780" width="2" height="15" fill="rgb(207,27,24)"/><text x="31.00" y="1790.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1796" width="2" height="15" fill="rgb(219,49,30)"/><text x="31.00" y="1806.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1812" width="2" height="15" fill="rgb(249,150,40)"/><text x="31.00" y="1822.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1828" width="2" height="15" fill="rgb(245,21,25)"/><text x="31.00" y="1838.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1844" width="2" height="15" fill="rgb(224,131,46)"/><text x="31.00" y="1854.50"></text></g><g><title>&lt;module&gt; (jinja2/defaults.py) (1 samples, 0.22%)</title><rect x="28" y="1860" width="2" height="15" fill="rgb(213,26,49)"/><text x="31.00" y="1870.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1876" width="2" height="15" fill="rgb(240,14,44)"/><text x="31.00" y="1886.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1892" width="2" height="15" fill="rgb(209,136,4)"/><text x="31.00" y="1902.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1908" width="2" height="15" fill="rgb(236,215,36)"/><text x="31.00" y="1918.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="1924" width="2" height="15" fill="rgb(216,171,50)"/><text x="31.00" y="1934.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1940" width="2" height="15" fill="rgb(212,179,2)"/><text x="31.00" y="1950.50"></text></g><g><title>&lt;module&gt; (jinja2/filters.py) (1 samples, 0.22%)</title><rect x="28" y="1956" width="2" height="15" fill="rgb(209,139,25)"/><text x="31.00" y="1966.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1972" width="2" height="15" fill="rgb(230,193,14)"/><text x="31.00" y="1982.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="1988" width="2" height="15" fill="rgb(224,173,3)"/><text x="31.00" y="1998.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="2004" width="2" height="15" fill="rgb(254,42,21)"/><text x="31.00" y="2014.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="28" y="2020" width="2" height="15" fill="rgb(246,156,37)"/><text x="31.00" y="2030.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="28" y="2036" width="2" height="15" fill="rgb(235,49,41)"/><text x="31.00" y="2046.50"></text></g><g><title>&lt;module&gt; (jinja2/runtime.py) (1 samples, 0.22%)</title><rect x="28" y="2052" width="2" height="15" fill="rgb(252,16,40)"/><text x="31.00" y="2062.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="484" width="11" height="15" fill="rgb(231,55,53)"/><text x="25.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="500" width="11" height="15" fill="rgb(236,189,50)"/><text x="25.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="516" width="11" height="15" fill="rgb(231,222,16)"/><text x="25.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="532" width="11" height="15" fill="rgb(231,83,13)"/><text x="25.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="22" y="548" width="11" height="15" fill="rgb(229,61,48)"/><text x="25.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="564" width="11" height="15" fill="rgb(240,94,31)"/><text x="25.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (4 samples, 0.87%)</title><rect x="22" y="580" width="11" height="15" fill="rgb(221,114,24)"/><text x="25.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="596" width="11" height="15" fill="rgb(236,12,45)"/><text x="25.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="612" width="11" height="15" fill="rgb(214,111,16)"/><text x="25.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="628" width="11" height="15" fill="rgb(224,229,18)"/><text x="25.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="22" y="644" width="11" height="15" fill="rgb(226,208,12)"/><text x="25.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="660" width="11" height="15" fill="rgb(209,25,5)"/><text x="25.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (4 samples, 0.87%)</title><rect x="22" y="676" width="11" height="15" fill="rgb(244,36,14)"/><text x="25.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="692" width="11" height="15" fill="rgb(233,55,27)"/><text x="25.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="708" width="11" height="15" fill="rgb(240,88,16)"/><text x="25.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="724" width="11" height="15" fill="rgb(241,40,51)"/><text x="25.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="22" y="740" width="11" height="15" fill="rgb(238,28,18)"/><text x="25.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="756" width="11" height="15" fill="rgb(248,38,46)"/><text x="25.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (4 samples, 0.87%)</title><rect x="22" y="772" width="11" height="15" fill="rgb(236,142,11)"/><text x="25.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="788" width="11" height="15" fill="rgb(215,214,7)"/><text x="25.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="804" width="11" height="15" fill="rgb(209,216,26)"/><text x="25.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="820" width="11" height="15" fill="rgb(225,129,25)"/><text x="25.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="22" y="836" width="11" height="15" fill="rgb(237,94,22)"/><text x="25.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="852" width="11" height="15" fill="rgb(252,186,9)"/><text x="25.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (4 samples, 0.87%)</title><rect x="22" y="868" width="11" height="15" fill="rgb(236,79,27)"/><text x="25.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="884" width="11" height="15" fill="rgb(252,49,42)"/><text x="25.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="900" width="11" height="15" fill="rgb(231,186,12)"/><text x="25.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="916" width="11" height="15" fill="rgb(225,132,36)"/><text x="25.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="932" width="11" height="15" fill="rgb(218,0,26)"/><text x="25.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="948" width="11" height="15" fill="rgb(234,200,9)"/><text x="25.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="964" width="11" height="15" fill="rgb(217,58,54)"/><text x="25.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="22" y="980" width="11" height="15" fill="rgb(236,105,27)"/><text x="25.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="996" width="11" height="15" fill="rgb(247,2,17)"/><text x="25.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (4 samples, 0.87%)</title><rect x="22" y="1012" width="11" height="15" fill="rgb(240,55,18)"/><text x="25.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="1028" width="11" height="15" fill="rgb(240,57,52)"/><text x="25.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="1044" width="11" height="15" fill="rgb(249,137,6)"/><text x="25.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="1060" width="11" height="15" fill="rgb(211,161,22)"/><text x="25.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="22" y="1076" width="11" height="15" fill="rgb(225,205,18)"/><text x="25.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="22" y="1092" width="11" height="15" fill="rgb(243,222,32)"/><text x="25.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (4 samples, 0.87%)</title><rect x="22" y="1108" width="11" height="15" fill="rgb(217,175,38)"/><text x="25.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1124" width="5" height="15" fill="rgb(239,46,21)"/><text x="31.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1140" width="5" height="15" fill="rgb(236,90,44)"/><text x="31.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1156" width="5" height="15" fill="rgb(212,180,6)"/><text x="31.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1172" width="5" height="15" fill="rgb(213,56,41)"/><text x="31.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1188" width="5" height="15" fill="rgb(236,89,30)"/><text x="31.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="28" y="1204" width="5" height="15" fill="rgb(209,25,33)"/><text x="31.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1220" width="5" height="15" fill="rgb(227,112,31)"/><text x="31.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.44%)</title><rect x="28" y="1236" width="5" height="15" fill="rgb(239,173,49)"/><text x="31.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1252" width="5" height="15" fill="rgb(229,53,2)"/><text x="31.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1268" width="5" height="15" fill="rgb(225,75,16)"/><text x="31.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1284" width="5" height="15" fill="rgb(252,56,52)"/><text x="31.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1300" width="5" height="15" fill="rgb(254,18,48)"/><text x="31.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1316" width="5" height="15" fill="rgb(234,64,37)"/><text x="31.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="28" y="1332" width="5" height="15" fill="rgb(213,39,5)"/><text x="31.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1348" width="5" height="15" fill="rgb(215,50,21)"/><text x="31.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.44%)</title><rect x="28" y="1364" width="5" height="15" fill="rgb(207,88,28)"/><text x="31.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1380" width="5" height="15" fill="rgb(241,39,17)"/><text x="31.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1396" width="5" height="15" fill="rgb(212,114,50)"/><text x="31.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1412" width="5" height="15" fill="rgb(225,134,45)"/><text x="31.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="28" y="1428" width="5" height="15" fill="rgb(235,63,17)"/><text x="31.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="28" y="1444" width="5" height="15" fill="rgb(251,226,41)"/><text x="31.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.44%)</title><rect x="28" y="1460" width="5" height="15" fill="rgb(223,84,6)"/><text x="31.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="30" y="1476" width="3" height="15" fill="rgb(216,85,30)"/><text x="33.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (1 samples, 0.22%)</title><rect x="30" y="1492" width="3" height="15" fill="rgb(225,166,44)"/><text x="33.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.22%)</title><rect x="30" y="1508" width="3" height="15" fill="rgb(251,168,28)"/><text x="33.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.22%)</title><rect x="30" y="1524" width="3" height="15" fill="rgb(211,229,2)"/><text x="33.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.22%)</title><rect x="30" y="1540" width="3" height="15" fill="rgb(244,158,0)"/><text x="33.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.22%)</title><rect x="30" y="1556" width="3" height="15" fill="rgb(218,13,2)"/><text x="33.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.22%)</title><rect x="30" y="1572" width="3" height="15" fill="rgb(253,97,15)"/><text x="33.00" y="1582.50"></text></g><g><title>call (jinja2/runtime.py) (1 samples, 0.22%)</title><rect x="30" y="1588" width="3" height="15" fill="rgb(208,94,8)"/><text x="33.00" y="1598.50"></text></g><g><title>format_option (skl2onnx/algebra/automation.py) (1 samples, 0.22%)</title><rect x="30" y="1604" width="3" height="15" fill="rgb(240,68,36)"/><text x="33.00" y="1614.50"></text></g><g><title>pybind11_object_dealloc (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="30" y="1620" width="3" height="15" fill="rgb(254,146,11)"/><text x="33.00" y="1630.50"></text></g><g><title>pybind11::detail::clear_instance (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="30" y="1636" width="3" height="15" fill="rgb(205,1,17)"/><text x="33.00" y="1646.50"></text></g><g><title>0x7f610237d40e (?) (1 samples, 0.22%)</title><rect x="33" y="916" width="2" height="15" fill="rgb(248,211,19)"/><text x="36.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="932" width="2" height="15" fill="rgb(208,4,5)"/><text x="36.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="948" width="2" height="15" fill="rgb(238,228,8)"/><text x="36.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="964" width="2" height="15" fill="rgb(246,13,5)"/><text x="36.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="980" width="2" height="15" fill="rgb(237,120,4)"/><text x="36.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="996" width="2" height="15" fill="rgb(251,135,7)"/><text x="36.00" y="1006.50"></text></g><g><title>0x7f6102136bb0 (?) (1 samples, 0.22%)</title><rect x="33" y="1012" width="2" height="15" fill="rgb(240,145,39)"/><text x="36.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1028" width="2" height="15" fill="rgb(205,59,46)"/><text x="36.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1044" width="2" height="15" fill="rgb(216,137,46)"/><text x="36.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1060" width="2" height="15" fill="rgb(233,33,11)"/><text x="36.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1076" width="2" height="15" fill="rgb(237,103,39)"/><text x="36.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1092" width="2" height="15" fill="rgb(220,151,51)"/><text x="36.00" y="1102.50"></text></g><g><title>0x7f6101abde18 (?) (1 samples, 0.22%)</title><rect x="33" y="1108" width="2" height="15" fill="rgb(233,115,27)"/><text x="36.00" y="1118.50"></text></g><g><title>0x7f6101ac028a (?) (1 samples, 0.22%)</title><rect x="33" y="1124" width="2" height="15" fill="rgb(207,162,45)"/><text x="36.00" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1140" width="2" height="15" fill="rgb(245,155,3)"/><text x="36.00" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1156" width="2" height="15" fill="rgb(231,46,53)"/><text x="36.00" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1172" width="2" height="15" fill="rgb(246,7,9)"/><text x="36.00" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1188" width="2" height="15" fill="rgb(254,16,24)"/><text x="36.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1204" width="2" height="15" fill="rgb(210,116,35)"/><text x="36.00" y="1214.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/__init__.py) (1 samples, 0.22%)</title><rect x="33" y="1220" width="2" height="15" fill="rgb(239,30,4)"/><text x="36.00" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1236" width="2" height="15" fill="rgb(225,90,40)"/><text x="36.00" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1252" width="2" height="15" fill="rgb(232,56,51)"/><text x="36.00" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1268" width="2" height="15" fill="rgb(250,79,2)"/><text x="36.00" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1284" width="2" height="15" fill="rgb(222,23,17)"/><text x="36.00" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1300" width="2" height="15" fill="rgb(207,179,48)"/><text x="36.00" y="1310.50"></text></g><g><title>&lt;module&gt; (dateutil/tz/tz.py) (1 samples, 0.22%)</title><rect x="33" y="1316" width="2" height="15" fill="rgb(248,108,32)"/><text x="36.00" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1332" width="2" height="15" fill="rgb(236,146,33)"/><text x="36.00" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1348" width="2" height="15" fill="rgb(242,157,11)"/><text x="36.00" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="33" y="1364" width="2" height="15" fill="rgb(247,214,24)"/><text x="36.00" y="1374.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1380" width="2" height="15" fill="rgb(214,162,36)"/><text x="36.00" y="1390.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1396" width="2" height="15" fill="rgb(221,21,10)"/><text x="36.00" y="1406.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="33" y="1412" width="2" height="15" fill="rgb(253,54,48)"/><text x="36.00" y="1422.50"></text></g><g><title>0x7f610237d40e (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="916" width="3" height="15" fill="rgb(246,223,27)"/><text x="38.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="932" width="3" height="15" fill="rgb(217,130,49)"/><text x="38.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="948" width="3" height="15" fill="rgb(212,217,15)"/><text x="38.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="964" width="3" height="15" fill="rgb(213,154,31)"/><text x="38.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="980" width="3" height="15" fill="rgb(239,1,48)"/><text x="38.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="996" width="3" height="15" fill="rgb(217,100,40)"/><text x="38.00" y="1006.50"></text></g><g><title>0x7f61021372f7 (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1012" width="3" height="15" fill="rgb(212,95,52)"/><text x="38.00" y="1022.50"></text></g><g><title>0x7f610213959a (pandas/_libs/tslibs/c_timestamp.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1028" width="3" height="15" fill="rgb(236,161,0)"/><text x="38.00" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="1044" width="3" height="15" fill="rgb(210,22,46)"/><text x="38.00" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="1060" width="3" height="15" fill="rgb(215,7,27)"/><text x="38.00" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="1076" width="3" height="15" fill="rgb(210,205,34)"/><text x="38.00" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="35" y="1092" width="3" height="15" fill="rgb(229,224,27)"/><text x="38.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="1108" width="3" height="15" fill="rgb(235,125,1)"/><text x="38.00" y="1118.50"></text></g><g><title>0x7f6100c347dd (pandas/_libs/tslibs/fields.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1124" width="3" height="15" fill="rgb(220,149,15)"/><text x="38.00" y="1134.50"></text></g><g><title>0x7f6100c3648a (pandas/_libs/tslibs/fields.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="35" y="1140" width="3" height="15" fill="rgb(207,48,27)"/><text x="38.00" y="1150.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="35" y="1156" width="3" height="15" fill="rgb(249,168,5)"/><text x="38.00" y="1166.50"></text></g><g><title>0x7f612b20ce66 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="35" y="1172" width="3" height="15" fill="rgb(217,15,39)"/><text x="38.00" y="1182.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py) (3 samples, 0.66%)</title><rect x="33" y="724" width="7" height="15" fill="rgb(208,225,32)"/><text x="36.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="740" width="7" height="15" fill="rgb(230,86,17)"/><text x="36.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="756" width="7" height="15" fill="rgb(236,226,25)"/><text x="36.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="772" width="7" height="15" fill="rgb(206,4,29)"/><text x="36.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="33" y="788" width="7" height="15" fill="rgb(206,93,45)"/><text x="36.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="804" width="7" height="15" fill="rgb(253,71,27)"/><text x="36.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py) (3 samples, 0.66%)</title><rect x="33" y="820" width="7" height="15" fill="rgb(213,16,51)"/><text x="36.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="836" width="7" height="15" fill="rgb(243,204,26)"/><text x="36.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="852" width="7" height="15" fill="rgb(246,59,0)"/><text x="36.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="868" width="7" height="15" fill="rgb(245,157,50)"/><text x="36.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="33" y="884" width="7" height="15" fill="rgb(239,165,21)"/><text x="36.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="33" y="900" width="7" height="15" fill="rgb(247,136,22)"/><text x="36.00" y="910.50"></text></g><g><title>0x7f610237d818 (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="38" y="916" width="2" height="15" fill="rgb(244,35,7)"/><text x="41.00" y="926.50"></text></g><g><title>0x7f610237afca (pandas/_libs/tslibs/conversion.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.22%)</title><rect x="38" y="932" width="2" height="15" fill="rgb(213,203,23)"/><text x="41.00" y="942.50"></text></g><g><title>0x7f612b20ce66 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="38" y="948" width="2" height="15" fill="rgb(210,225,7)"/><text x="41.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1540" width="3" height="15" fill="rgb(239,223,52)"/><text x="43.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1556" width="3" height="15" fill="rgb(205,141,43)"/><text x="43.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1572" width="3" height="15" fill="rgb(248,27,44)"/><text x="43.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1588" width="3" height="15" fill="rgb(250,220,18)"/><text x="43.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1604" width="3" height="15" fill="rgb(223,155,17)"/><text x="43.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1620" width="3" height="15" fill="rgb(221,24,48)"/><text x="43.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py) (1 samples, 0.22%)</title><rect x="40" y="1636" width="3" height="15" fill="rgb(213,139,34)"/><text x="43.00" y="1646.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1652" width="3" height="15" fill="rgb(206,101,25)"/><text x="43.00" y="1662.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1668" width="3" height="15" fill="rgb(205,119,20)"/><text x="43.00" y="1678.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="40" y="1684" width="3" height="15" fill="rgb(252,121,2)"/><text x="43.00" y="1694.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1700" width="3" height="15" fill="rgb(253,58,54)"/><text x="43.00" y="1710.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1716" width="3" height="15" fill="rgb(206,10,47)"/><text x="43.00" y="1726.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1732" width="3" height="15" fill="rgb(249,36,19)"/><text x="43.00" y="1742.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="40" y="1748" width="3" height="15" fill="rgb(253,110,22)"/><text x="43.00" y="1758.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="40" y="1764" width="3" height="15" fill="rgb(229,186,34)"/><text x="43.00" y="1774.50"></text></g><g><title>0x7f612b21714f (libc-2.29.so) (1 samples, 0.22%)</title><rect x="40" y="1780" width="3" height="15" fill="rgb(234,111,23)"/><text x="43.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1028" width="8" height="15" fill="rgb(210,108,10)"/><text x="43.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1044" width="8" height="15" fill="rgb(215,34,32)"/><text x="43.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1060" width="8" height="15" fill="rgb(253,124,25)"/><text x="43.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="40" y="1076" width="8" height="15" fill="rgb(240,181,19)"/><text x="43.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1092" width="8" height="15" fill="rgb(214,222,54)"/><text x="43.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py) (3 samples, 0.66%)</title><rect x="40" y="1108" width="8" height="15" fill="rgb(235,81,22)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1124" width="8" height="15" fill="rgb(253,106,31)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1140" width="8" height="15" fill="rgb(238,210,27)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1156" width="8" height="15" fill="rgb(216,32,48)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="40" y="1172" width="8" height="15" fill="rgb(237,123,21)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1188" width="8" height="15" fill="rgb(207,11,0)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py) (3 samples, 0.66%)</title><rect x="40" y="1204" width="8" height="15" fill="rgb(230,201,2)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1220" width="8" height="15" fill="rgb(241,161,4)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1236" width="8" height="15" fill="rgb(206,160,33)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1252" width="8" height="15" fill="rgb(248,86,12)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="40" y="1268" width="8" height="15" fill="rgb(220,224,8)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1284" width="8" height="15" fill="rgb(243,150,5)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py) (3 samples, 0.66%)</title><rect x="40" y="1300" width="8" height="15" fill="rgb(232,171,32)"/><text x="43.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1316" width="8" height="15" fill="rgb(214,176,36)"/><text x="43.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1332" width="8" height="15" fill="rgb(250,214,39)"/><text x="43.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1348" width="8" height="15" fill="rgb(249,29,1)"/><text x="43.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="40" y="1364" width="8" height="15" fill="rgb(243,211,7)"/><text x="43.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1380" width="8" height="15" fill="rgb(227,165,5)"/><text x="43.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py) (3 samples, 0.66%)</title><rect x="40" y="1396" width="8" height="15" fill="rgb(208,133,1)"/><text x="43.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1412" width="8" height="15" fill="rgb(213,106,7)"/><text x="43.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1428" width="8" height="15" fill="rgb(209,50,4)"/><text x="43.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1444" width="8" height="15" fill="rgb(226,101,37)"/><text x="43.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.66%)</title><rect x="40" y="1460" width="8" height="15" fill="rgb(211,21,21)"/><text x="43.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1476" width="8" height="15" fill="rgb(224,30,19)"/><text x="43.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py) (3 samples, 0.66%)</title><rect x="40" y="1492" width="8" height="15" fill="rgb(247,157,26)"/><text x="43.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1508" width="8" height="15" fill="rgb(212,56,26)"/><text x="43.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="40" y="1524" width="8" height="15" fill="rgb(224,44,18)"/><text x="43.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1540" width="5" height="15" fill="rgb(236,54,50)"/><text x="46.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="43" y="1556" width="5" height="15" fill="rgb(225,170,33)"/><text x="46.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1572" width="5" height="15" fill="rgb(234,101,35)"/><text x="46.00" y="1582.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/core.py) (2 samples, 0.44%)</title><rect x="43" y="1588" width="5" height="15" fill="rgb(227,132,30)"/><text x="46.00" y="1598.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1604" width="5" height="15" fill="rgb(250,192,19)"/><text x="46.00" y="1614.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1620" width="5" height="15" fill="rgb(241,229,45)"/><text x="46.00" y="1630.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1636" width="5" height="15" fill="rgb(241,7,30)"/><text x="46.00" y="1646.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="43" y="1652" width="5" height="15" fill="rgb(246,225,8)"/><text x="46.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1668" width="5" height="15" fill="rgb(251,19,5)"/><text x="46.00" y="1678.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/tools.py) (2 samples, 0.44%)</title><rect x="43" y="1684" width="5" height="15" fill="rgb(205,136,40)"/><text x="46.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1700" width="5" height="15" fill="rgb(214,205,43)"/><text x="46.00" y="1710.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1716" width="5" height="15" fill="rgb(205,173,53)"/><text x="46.00" y="1726.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1732" width="5" height="15" fill="rgb(253,130,33)"/><text x="46.00" y="1742.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="43" y="1748" width="5" height="15" fill="rgb(232,81,31)"/><text x="46.00" y="1758.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1764" width="5" height="15" fill="rgb(213,33,37)"/><text x="46.00" y="1774.50"></text></g><g><title>&lt;module&gt; (matplotlib/table.py) (2 samples, 0.44%)</title><rect x="43" y="1780" width="5" height="15" fill="rgb(241,174,32)"/><text x="46.00" y="1790.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1796" width="5" height="15" fill="rgb(215,151,43)"/><text x="46.00" y="1806.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1812" width="5" height="15" fill="rgb(239,97,25)"/><text x="46.00" y="1822.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1828" width="5" height="15" fill="rgb(205,59,25)"/><text x="46.00" y="1838.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="43" y="1844" width="5" height="15" fill="rgb(228,85,29)"/><text x="46.00" y="1854.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1860" width="5" height="15" fill="rgb(220,133,45)"/><text x="46.00" y="1870.50"></text></g><g><title>&lt;module&gt; (matplotlib/text.py) (2 samples, 0.44%)</title><rect x="43" y="1876" width="5" height="15" fill="rgb(230,0,44)"/><text x="46.00" y="1886.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1892" width="5" height="15" fill="rgb(220,183,22)"/><text x="46.00" y="1902.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1908" width="5" height="15" fill="rgb(224,168,22)"/><text x="46.00" y="1918.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1924" width="5" height="15" fill="rgb(234,174,51)"/><text x="46.00" y="1934.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="43" y="1940" width="5" height="15" fill="rgb(213,225,19)"/><text x="46.00" y="1950.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="43" y="1956" width="5" height="15" fill="rgb(253,147,52)"/><text x="46.00" y="1966.50"></text></g><g><title>&lt;module&gt; (matplotlib/font_manager.py) (2 samples, 0.44%)</title><rect x="43" y="1972" width="5" height="15" fill="rgb(213,70,22)"/><text x="46.00" y="1982.50"></text></g><g><title>json_load (matplotlib/font_manager.py) (2 samples, 0.44%)</title><rect x="43" y="1988" width="5" height="15" fill="rgb(205,35,51)"/><text x="46.00" y="1998.50"></text></g><g><title>load (json/__init__.py) (2 samples, 0.44%)</title><rect x="43" y="2004" width="5" height="15" fill="rgb(242,177,16)"/><text x="46.00" y="2014.50"></text></g><g><title>loads (json/__init__.py) (2 samples, 0.44%)</title><rect x="43" y="2020" width="5" height="15" fill="rgb(211,193,48)"/><text x="46.00" y="2030.50"></text></g><g><title>decode (json/decoder.py) (2 samples, 0.44%)</title><rect x="43" y="2036" width="5" height="15" fill="rgb(246,141,49)"/><text x="46.00" y="2046.50"></text></g><g><title>raw_decode (json/decoder.py) (2 samples, 0.44%)</title><rect x="43" y="2052" width="5" height="15" fill="rgb(216,3,24)"/><text x="46.00" y="2062.50"></text></g><g><title>scanner_call (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2068" width="5" height="15" fill="rgb(244,161,43)"/><text x="46.00" y="2078.50"></text></g><g><title>scan_once_unicode (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2084" width="5" height="15" fill="rgb(212,85,31)"/><text x="46.00" y="2094.50"></text></g><g><title>_parse_object_unicode (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2100" width="5" height="15" fill="rgb(219,200,37)"/><text x="46.00" y="2110.50"></text></g><g><title>scan_once_unicode (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2116" width="5" height="15" fill="rgb(246,201,4)"/><text x="46.00" y="2126.50"></text></g><g><title>_parse_array_unicode (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2132" width="5" height="15" fill="rgb(249,26,31)"/><text x="46.00" y="2142.50"></text></g><g><title>scan_once_unicode (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2148" width="5" height="15" fill="rgb(246,221,1)"/><text x="46.00" y="2158.50"></text></g><g><title>_parse_object_unicode (_json.c) (2 samples, 0.44%)</title><rect x="43" y="2164" width="5" height="15" fill="rgb(227,175,27)"/><text x="46.00" y="2174.50"></text></g><g><title>_json_decode (matplotlib/font_manager.py) (1 samples, 0.22%)</title><rect x="46" y="2180" width="2" height="15" fill="rgb(246,213,33)"/><text x="49.00" y="2190.50"></text></g><g><title>join (posixpath.py) (1 samples, 0.22%)</title><rect x="46" y="2196" width="2" height="15" fill="rgb(244,164,10)"/><text x="49.00" y="2206.50"></text></g><g><title>_get_sep (posixpath.py) (1 samples, 0.22%)</title><rect x="46" y="2212" width="2" height="15" fill="rgb(232,180,16)"/><text x="49.00" y="2222.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.53%)</title><rect x="33" y="644" width="18" height="15" fill="rgb(213,17,52)"/><text x="36.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.53%)</title><rect x="33" y="660" width="18" height="15" fill="rgb(238,69,36)"/><text x="36.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.53%)</title><rect x="33" y="676" width="18" height="15" fill="rgb(229,72,46)"/><text x="36.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.53%)</title><rect x="33" y="692" width="18" height="15" fill="rgb(206,125,26)"/><text x="36.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.53%)</title><rect x="33" y="708" width="18" height="15" fill="rgb(233,126,18)"/><text x="36.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (4 samples, 0.87%)</title><rect x="40" y="724" width="11" height="15" fill="rgb(241,42,38)"/><text x="43.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="740" width="11" height="15" fill="rgb(210,152,40)"/><text x="43.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="756" width="11" height="15" fill="rgb(238,215,25)"/><text x="43.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="772" width="11" height="15" fill="rgb(209,44,9)"/><text x="43.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="40" y="788" width="11" height="15" fill="rgb(221,91,7)"/><text x="43.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="804" width="11" height="15" fill="rgb(220,165,35)"/><text x="43.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (4 samples, 0.87%)</title><rect x="40" y="820" width="11" height="15" fill="rgb(250,197,2)"/><text x="43.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="836" width="11" height="15" fill="rgb(222,155,37)"/><text x="43.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="852" width="11" height="15" fill="rgb(209,6,17)"/><text x="43.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="868" width="11" height="15" fill="rgb(227,4,45)"/><text x="43.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="40" y="884" width="11" height="15" fill="rgb(221,226,44)"/><text x="43.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="900" width="11" height="15" fill="rgb(205,190,15)"/><text x="43.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (4 samples, 0.87%)</title><rect x="40" y="916" width="11" height="15" fill="rgb(253,74,43)"/><text x="43.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="932" width="11" height="15" fill="rgb(210,94,40)"/><text x="43.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="948" width="11" height="15" fill="rgb(251,168,40)"/><text x="43.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="964" width="11" height="15" fill="rgb(221,80,23)"/><text x="43.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 0.87%)</title><rect x="40" y="980" width="11" height="15" fill="rgb(224,190,43)"/><text x="43.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 0.87%)</title><rect x="40" y="996" width="11" height="15" fill="rgb(230,171,53)"/><text x="43.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (4 samples, 0.87%)</title><rect x="40" y="1012" width="11" height="15" fill="rgb(209,126,35)"/><text x="43.00" y="1022.50"></text></g><g><title>add_special_arithmetic_methods (pandas/core/ops/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="1028" width="3" height="15" fill="rgb(248,68,7)"/><text x="51.00" y="1038.50"></text></g><g><title>_create_methods (pandas/core/ops/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="1044" width="3" height="15" fill="rgb(228,97,37)"/><text x="51.00" y="1054.50"></text></g><g><title>_arith_method_FRAME (pandas/core/ops/__init__.py) (1 samples, 0.22%)</title><rect x="48" y="1060" width="3" height="15" fill="rgb(246,29,6)"/><text x="51.00" y="1070.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.22%)</title><rect x="48" y="1076" width="3" height="15" fill="rgb(226,114,22)"/><text x="51.00" y="1086.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.22%)</title><rect x="48" y="1092" width="3" height="15" fill="rgb(242,63,19)"/><text x="51.00" y="1102.50"></text></g><g><title>_sre_SRE_Pattern_findall (python3.7) (1 samples, 0.22%)</title><rect x="48" y="1108" width="3" height="15" fill="rgb(246,25,41)"/><text x="51.00" y="1118.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.22%)</title><rect x="48" y="1124" width="3" height="15" fill="rgb(215,21,1)"/><text x="51.00" y="1134.50"></text></g><g><title>sre_ucs1_charset.isra.9 (python3.7) (1 samples, 0.22%)</title><rect x="48" y="1140" width="3" height="15" fill="rgb(223,62,18)"/><text x="51.00" y="1150.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (12 samples, 2.62%)</title><rect x="22" y="340" width="31" height="15" fill="rgb(210,127,28)"/><text x="25.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.62%)</title><rect x="22" y="356" width="31" height="15" fill="rgb(242,191,39)"/><text x="25.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.62%)</title><rect x="22" y="372" width="31" height="15" fill="rgb(221,17,13)"/><text x="25.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.62%)</title><rect x="22" y="388" width="31" height="15" fill="rgb(250,130,37)"/><text x="25.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (12 samples, 2.62%)</title><rect x="22" y="404" width="31" height="15" fill="rgb(232,168,34)"/><text x="25.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.62%)</title><rect x="22" y="420" width="31" height="15" fill="rgb(206,219,52)"/><text x="25.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (12 samples, 2.62%)</title><rect x="22" y="436" width="31" height="15" fill="rgb(227,100,7)"/><text x="25.00" y="446.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.62%)</title><rect x="22" y="452" width="31" height="15" fill="rgb(209,59,44)"/><text x="25.00" y="462.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (12 samples, 2.62%)</title><rect x="22" y="468" width="31" height="15" fill="rgb(234,54,26)"/><text x="25.00" y="478.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.75%)</title><rect x="33" y="484" width="20" height="15" fill="rgb(241,132,27)"/><text x="36.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.75%)</title><rect x="33" y="500" width="20" height="15" fill="rgb(206,125,18)"/><text x="36.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.75%)</title><rect x="33" y="516" width="20" height="15" fill="rgb(226,33,51)"/><text x="36.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (8 samples, 1.75%)</title><rect x="33" y="532" width="20" height="15" fill="rgb(228,77,53)"/><text x="36.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.75%)</title><rect x="33" y="548" width="20" height="15" fill="rgb(241,146,19)"/><text x="36.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.75%)</title><rect x="33" y="564" width="20" height="15" fill="rgb(224,110,40)"/><text x="36.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.75%)</title><rect x="33" y="580" width="20" height="15" fill="rgb(249,106,3)"/><text x="36.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 1.75%)</title><rect x="33" y="596" width="20" height="15" fill="rgb(210,180,20)"/><text x="36.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 1.75%)</title><rect x="33" y="612" width="20" height="15" fill="rgb(251,204,41)"/><text x="36.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (8 samples, 1.75%)</title><rect x="33" y="628" width="20" height="15" fill="rgb(210,197,6)"/><text x="36.00" y="638.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="644" width="2" height="15" fill="rgb(227,118,47)"/><text x="54.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="660" width="2" height="15" fill="rgb(249,147,5)"/><text x="54.00" y="670.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="676" width="2" height="15" fill="rgb(248,66,39)"/><text x="54.00" y="686.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="692" width="2" height="15" fill="rgb(208,55,39)"/><text x="54.00" y="702.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="708" width="2" height="15" fill="rgb(252,202,47)"/><text x="54.00" y="718.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="724" width="2" height="15" fill="rgb(230,128,9)"/><text x="54.00" y="734.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="740" width="2" height="15" fill="rgb(242,118,36)"/><text x="54.00" y="750.50"></text></g><g><title>0x7f60ff9102ff (?) (1 samples, 0.22%)</title><rect x="51" y="756" width="2" height="15" fill="rgb(252,4,6)"/><text x="54.00" y="766.50"></text></g><g><title>0x7f60ff91652a (?) (1 samples, 0.22%)</title><rect x="51" y="772" width="2" height="15" fill="rgb(206,3,39)"/><text x="54.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="788" width="2" height="15" fill="rgb(239,185,47)"/><text x="54.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="804" width="2" height="15" fill="rgb(214,40,9)"/><text x="54.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="820" width="2" height="15" fill="rgb(216,160,4)"/><text x="54.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="51" y="836" width="2" height="15" fill="rgb(213,95,49)"/><text x="54.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="51" y="852" width="2" height="15" fill="rgb(242,177,50)"/><text x="54.00" y="862.50"></text></g><g><title>&lt;module&gt; (fractions.py) (1 samples, 0.22%)</title><rect x="51" y="868" width="2" height="15" fill="rgb(238,55,21)"/><text x="54.00" y="878.50"></text></g><g><title>compile (re.py) (1 samples, 0.22%)</title><rect x="51" y="884" width="2" height="15" fill="rgb(205,193,2)"/><text x="54.00" y="894.50"></text></g><g><title>_compile (re.py) (1 samples, 0.22%)</title><rect x="51" y="900" width="2" height="15" fill="rgb(243,58,24)"/><text x="54.00" y="910.50"></text></g><g><title>compile (sre_compile.py) (1 samples, 0.22%)</title><rect x="51" y="916" width="2" height="15" fill="rgb(212,58,32)"/><text x="54.00" y="926.50"></text></g><g><title>parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="932" width="2" height="15" fill="rgb(248,88,40)"/><text x="54.00" y="942.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="948" width="2" height="15" fill="rgb(248,89,47)"/><text x="54.00" y="958.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="964" width="2" height="15" fill="rgb(242,151,44)"/><text x="54.00" y="974.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="980" width="2" height="15" fill="rgb(219,70,19)"/><text x="54.00" y="990.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="996" width="2" height="15" fill="rgb(222,176,8)"/><text x="54.00" y="1006.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="1012" width="2" height="15" fill="rgb(225,160,21)"/><text x="54.00" y="1022.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="1028" width="2" height="15" fill="rgb(234,213,10)"/><text x="54.00" y="1038.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.22%)</title><rect x="51" y="1044" width="2" height="15" fill="rgb(251,94,5)"/><text x="54.00" y="1054.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="53" y="436" width="3" height="15" fill="rgb(240,94,11)"/><text x="56.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="53" y="452" width="3" height="15" fill="rgb(231,205,16)"/><text x="56.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="53" y="468" width="3" height="15" fill="rgb(233,126,53)"/><text x="56.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="53" y="484" width="3" height="15" fill="rgb(227,3,2)"/><text x="56.00" y="494.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="53" y="500" width="3" height="15" fill="rgb(252,176,41)"/><text x="56.00" y="510.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="53" y="516" width="3" height="15" fill="rgb(246,161,46)"/><text x="56.00" y="526.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="53" y="532" width="3" height="15" fill="rgb(238,100,5)"/><text x="56.00" y="542.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.22%)</title><rect x="53" y="548" width="3" height="15" fill="rgb(211,50,51)"/><text x="56.00" y="558.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.22%)</title><rect x="53" y="564" width="3" height="15" fill="rgb(221,222,7)"/><text x="56.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/__init__.py) (1 samples, 0.22%)</title><rect x="56" y="484" width="2" height="15" fill="rgb(234,138,13)"/><text x="59.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="500" width="2" height="15" fill="rgb(222,40,28)"/><text x="59.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="516" width="2" height="15" fill="rgb(206,229,1)"/><text x="59.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="532" width="2" height="15" fill="rgb(207,219,34)"/><text x="59.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="56" y="548" width="2" height="15" fill="rgb(250,176,45)"/><text x="59.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="564" width="2" height="15" fill="rgb(244,124,0)"/><text x="59.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/testing/model_verification.py) (1 samples, 0.22%)</title><rect x="56" y="580" width="2" height="15" fill="rgb(224,67,8)"/><text x="59.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="596" width="2" height="15" fill="rgb(243,28,17)"/><text x="59.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="612" width="2" height="15" fill="rgb(213,104,18)"/><text x="59.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="628" width="2" height="15" fill="rgb(216,51,16)"/><text x="59.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="56" y="644" width="2" height="15" fill="rgb(238,6,2)"/><text x="59.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="660" width="2" height="15" fill="rgb(245,162,23)"/><text x="59.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/cc/__init__.py) (1 samples, 0.22%)</title><rect x="56" y="676" width="2" height="15" fill="rgb(216,204,8)"/><text x="59.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="692" width="2" height="15" fill="rgb(241,75,54)"/><text x="59.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="708" width="2" height="15" fill="rgb(229,160,10)"/><text x="59.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="56" y="724" width="2" height="15" fill="rgb(229,189,14)"/><text x="59.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="56" y="740" width="2" height="15" fill="rgb(236,15,10)"/><text x="59.00" y="750.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="56" y="756" width="2" height="15" fill="rgb(234,189,38)"/><text x="59.00" y="766.50"></text></g><g><title>get_data (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="56" y="772" width="2" height="15" fill="rgb(208,125,36)"/><text x="59.00" y="782.50"></text></g><g><title>read (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="56" y="788" width="2" height="15" fill="rgb(246,9,27)"/><text x="59.00" y="798.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (15 samples, 3.28%)</title><rect x="22" y="244" width="39" height="15" fill="rgb(225,229,40)"/><text x="25.00" y="254.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.28%)</title><rect x="22" y="260" width="39" height="15" fill="rgb(213,161,44)"/><text x="25.00" y="270.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.28%)</title><rect x="22" y="276" width="39" height="15" fill="rgb(246,135,31)"/><text x="25.00" y="286.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.28%)</title><rect x="22" y="292" width="39" height="15" fill="rgb(233,184,43)"/><text x="25.00" y="302.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (15 samples, 3.28%)</title><rect x="22" y="308" width="39" height="15" fill="rgb(226,92,5)"/><text x="25.00" y="318.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (15 samples, 3.28%)</title><rect x="22" y="324" width="39" height="15" fill="rgb(226,7,43)"/><text x="25.00" y="334.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.66%)</title><rect x="53" y="340" width="8" height="15" fill="rgb(230,33,46)"/><text x="56.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="53" y="356" width="8" height="15" fill="rgb(218,201,53)"/><text x="56.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="53" y="372" width="8" height="15" fill="rgb(221,126,50)"/><text x="56.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="53" y="388" width="8" height="15" fill="rgb(230,136,43)"/><text x="56.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="53" y="404" width="8" height="15" fill="rgb(252,132,34)"/><text x="56.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.66%)</title><rect x="53" y="420" width="8" height="15" fill="rgb(242,163,10)"/><text x="56.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="56" y="436" width="5" height="15" fill="rgb(248,44,17)"/><text x="59.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="56" y="452" width="5" height="15" fill="rgb(241,121,8)"/><text x="59.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="56" y="468" width="5" height="15" fill="rgb(226,215,36)"/><text x="59.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (1 samples, 0.22%)</title><rect x="58" y="484" width="3" height="15" fill="rgb(236,64,45)"/><text x="61.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="500" width="3" height="15" fill="rgb(252,185,26)"/><text x="61.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="516" width="3" height="15" fill="rgb(249,152,19)"/><text x="61.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="532" width="3" height="15" fill="rgb(205,40,25)"/><text x="61.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="548" width="3" height="15" fill="rgb(234,205,18)"/><text x="61.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="564" width="3" height="15" fill="rgb(225,113,4)"/><text x="61.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.22%)</title><rect x="58" y="580" width="3" height="15" fill="rgb(220,135,42)"/><text x="61.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="596" width="3" height="15" fill="rgb(213,61,42)"/><text x="61.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="612" width="3" height="15" fill="rgb(251,227,9)"/><text x="61.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="628" width="3" height="15" fill="rgb(223,191,23)"/><text x="61.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="644" width="3" height="15" fill="rgb(223,115,42)"/><text x="61.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="660" width="3" height="15" fill="rgb(240,215,47)"/><text x="61.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="676" width="3" height="15" fill="rgb(217,19,46)"/><text x="61.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="692" width="3" height="15" fill="rgb(236,125,36)"/><text x="61.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="708" width="3" height="15" fill="rgb(250,104,9)"/><text x="61.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py) (1 samples, 0.22%)</title><rect x="58" y="724" width="3" height="15" fill="rgb(247,156,43)"/><text x="61.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="740" width="3" height="15" fill="rgb(249,87,31)"/><text x="61.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="756" width="3" height="15" fill="rgb(210,119,17)"/><text x="61.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="772" width="3" height="15" fill="rgb(219,227,51)"/><text x="61.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="788" width="3" height="15" fill="rgb(205,51,15)"/><text x="61.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="804" width="3" height="15" fill="rgb(252,113,0)"/><text x="61.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py) (1 samples, 0.22%)</title><rect x="58" y="820" width="3" height="15" fill="rgb(205,119,44)"/><text x="61.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="836" width="3" height="15" fill="rgb(252,62,45)"/><text x="61.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="852" width="3" height="15" fill="rgb(213,171,1)"/><text x="61.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="868" width="3" height="15" fill="rgb(230,202,18)"/><text x="61.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="884" width="3" height="15" fill="rgb(210,151,42)"/><text x="61.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="900" width="3" height="15" fill="rgb(246,157,18)"/><text x="61.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py) (1 samples, 0.22%)</title><rect x="58" y="916" width="3" height="15" fill="rgb(242,222,25)"/><text x="61.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="932" width="3" height="15" fill="rgb(236,222,49)"/><text x="61.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="948" width="3" height="15" fill="rgb(224,143,23)"/><text x="61.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="964" width="3" height="15" fill="rgb(229,223,2)"/><text x="61.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="980" width="3" height="15" fill="rgb(234,5,6)"/><text x="61.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="996" width="3" height="15" fill="rgb(249,204,7)"/><text x="61.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1012" width="3" height="15" fill="rgb(237,132,23)"/><text x="61.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="1028" width="3" height="15" fill="rgb(232,45,14)"/><text x="61.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1044" width="3" height="15" fill="rgb(206,214,30)"/><text x="61.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py) (1 samples, 0.22%)</title><rect x="58" y="1060" width="3" height="15" fill="rgb(231,91,43)"/><text x="61.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1076" width="3" height="15" fill="rgb(211,1,14)"/><text x="61.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1092" width="3" height="15" fill="rgb(242,146,6)"/><text x="61.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1108" width="3" height="15" fill="rgb(227,109,2)"/><text x="61.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="1124" width="3" height="15" fill="rgb(205,116,53)"/><text x="61.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1140" width="3" height="15" fill="rgb(243,210,26)"/><text x="61.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pypi_helper.py) (1 samples, 0.22%)</title><rect x="58" y="1156" width="3" height="15" fill="rgb(218,41,22)"/><text x="61.00" y="1166.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1172" width="3" height="15" fill="rgb(231,36,45)"/><text x="61.00" y="1182.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1188" width="3" height="15" fill="rgb(205,89,39)"/><text x="61.00" y="1198.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1204" width="3" height="15" fill="rgb(241,135,48)"/><text x="61.00" y="1214.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="58" y="1220" width="3" height="15" fill="rgb(233,61,44)"/><text x="61.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="58" y="1236" width="3" height="15" fill="rgb(253,88,18)"/><text x="61.00" y="1246.50"></text></g><g><title>&lt;module&gt; (xmlrpc/client.py) (1 samples, 0.22%)</title><rect x="58" y="1252" width="3" height="15" fill="rgb(254,135,12)"/><text x="61.00" y="1262.50"></text></g><g><title>__new__ (abc.py) (1 samples, 0.22%)</title><rect x="58" y="1268" width="3" height="15" fill="rgb(231,59,14)"/><text x="61.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.59%)</title><rect x="10" y="68" width="54" height="15" fill="rgb(236,203,35)"/><text x="13.00" y="78.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.59%)</title><rect x="10" y="84" width="54" height="15" fill="rgb(251,175,16)"/><text x="13.00" y="94.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.59%)</title><rect x="10" y="100" width="54" height="15" fill="rgb(211,98,10)"/><text x="13.00" y="110.50">_load..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (21 samples, 4.59%)</title><rect x="10" y="116" width="54" height="15" fill="rgb(236,200,39)"/><text x="13.00" y="126.50">exec_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.59%)</title><rect x="10" y="132" width="54" height="15" fill="rgb(245,213,33)"/><text x="13.00" y="142.50">_call..</text></g><g><title>&lt;module&gt; (profiles/benches/linear_model/LinearRegression/bench_LinearRegression_default_b_reg.py) (21 samples, 4.59%)</title><rect x="10" y="148" width="54" height="15" fill="rgb(213,24,0)"/><text x="13.00" y="158.50">&lt;modu..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.59%)</title><rect x="10" y="164" width="54" height="15" fill="rgb(233,66,33)"/><text x="13.00" y="174.50">_find..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (21 samples, 4.59%)</title><rect x="10" y="180" width="54" height="15" fill="rgb(233,75,53)"/><text x="13.00" y="190.50">_find..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.49%)</title><rect x="22" y="196" width="42" height="15" fill="rgb(214,225,42)"/><text x="25.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (16 samples, 3.49%)</title><rect x="22" y="212" width="42" height="15" fill="rgb(205,195,37)"/><text x="25.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (16 samples, 3.49%)</title><rect x="22" y="228" width="42" height="15" fill="rgb(209,125,9)"/><text x="25.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.22%)</title><rect x="61" y="244" width="3" height="15" fill="rgb(215,29,1)"/><text x="64.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="260" width="3" height="15" fill="rgb(211,157,35)"/><text x="64.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="276" width="3" height="15" fill="rgb(248,106,1)"/><text x="64.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="292" width="3" height="15" fill="rgb(240,149,10)"/><text x="64.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="308" width="3" height="15" fill="rgb(209,28,50)"/><text x="64.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="324" width="3" height="15" fill="rgb(237,105,43)"/><text x="64.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py) (1 samples, 0.22%)</title><rect x="61" y="340" width="3" height="15" fill="rgb(215,15,18)"/><text x="64.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="356" width="3" height="15" fill="rgb(241,68,12)"/><text x="64.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="372" width="3" height="15" fill="rgb(248,77,28)"/><text x="64.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="388" width="3" height="15" fill="rgb(228,45,32)"/><text x="64.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="404" width="3" height="15" fill="rgb(248,201,5)"/><text x="64.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="420" width="3" height="15" fill="rgb(250,189,43)"/><text x="64.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py) (1 samples, 0.22%)</title><rect x="61" y="436" width="3" height="15" fill="rgb(235,219,19)"/><text x="64.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="452" width="3" height="15" fill="rgb(208,56,29)"/><text x="64.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="468" width="3" height="15" fill="rgb(210,141,22)"/><text x="64.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="484" width="3" height="15" fill="rgb(239,23,14)"/><text x="64.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="500" width="3" height="15" fill="rgb(247,118,38)"/><text x="64.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="516" width="3" height="15" fill="rgb(222,45,21)"/><text x="64.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/case.py) (1 samples, 0.22%)</title><rect x="61" y="532" width="3" height="15" fill="rgb(254,105,36)"/><text x="64.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="548" width="3" height="15" fill="rgb(225,52,41)"/><text x="64.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="564" width="3" height="15" fill="rgb(211,225,11)"/><text x="64.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="61" y="580" width="3" height="15" fill="rgb(244,194,51)"/><text x="64.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="596" width="3" height="15" fill="rgb(213,29,7)"/><text x="64.00" y="606.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="612" width="3" height="15" fill="rgb(213,219,52)"/><text x="64.00" y="622.50"></text></g><g><title>cache_from_source (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="628" width="3" height="15" fill="rgb(236,37,49)"/><text x="64.00" y="638.50"></text></g><g><title>_path_split (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="61" y="644" width="3" height="15" fill="rgb(223,51,6)"/><text x="64.00" y="654.50"></text></g><g><title>0x7f60e9226ff9 (?) (1 samples, 0.22%)</title><rect x="107" y="212" width="3" height="15" fill="rgb(232,225,35)"/><text x="110.00" y="222.50"></text></g><g><title>0x7f60e9221ef6 (?) (1 samples, 0.22%)</title><rect x="107" y="228" width="3" height="15" fill="rgb(231,22,45)"/><text x="110.00" y="238.50"></text></g><g><title>0x7f60e9216962 (?) (1 samples, 0.22%)</title><rect x="107" y="244" width="3" height="15" fill="rgb(243,68,25)"/><text x="110.00" y="254.50"></text></g><g><title>0x7f60e924a7a7 (?) (1 samples, 0.22%)</title><rect x="107" y="260" width="3" height="15" fill="rgb(213,153,43)"/><text x="110.00" y="270.50"></text></g><g><title>0x7f60e924a379 (?) (1 samples, 0.22%)</title><rect x="107" y="276" width="3" height="15" fill="rgb(214,9,44)"/><text x="110.00" y="286.50"></text></g><g><title>0x7f60e96a88b8 (?) (1 samples, 0.22%)</title><rect x="107" y="292" width="3" height="15" fill="rgb(206,217,33)"/><text x="110.00" y="302.50"></text></g><g><title>0x7f60e96a6c7f (?) (1 samples, 0.22%)</title><rect x="107" y="308" width="3" height="15" fill="rgb(249,5,51)"/><text x="110.00" y="318.50"></text></g><g><title>0x7f60e96b999c (?) (1 samples, 0.22%)</title><rect x="107" y="324" width="3" height="15" fill="rgb(229,95,8)"/><text x="110.00" y="334.50"></text></g><g><title>0x7f60e93a0dd0 (?) (1 samples, 0.22%)</title><rect x="107" y="340" width="3" height="15" fill="rgb(224,90,8)"/><text x="110.00" y="350.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="107" y="356" width="3" height="15" fill="rgb(245,92,24)"/><text x="110.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="120" y="260" width="3" height="15" fill="rgb(245,19,49)"/><text x="123.00" y="270.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="120" y="244" width="5" height="15" fill="rgb(215,87,38)"/><text x="123.00" y="254.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="123" y="260" width="2" height="15" fill="rgb(222,113,34)"/><text x="126.00" y="270.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="125" y="260" width="3" height="15" fill="rgb(252,65,42)"/><text x="128.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="125" y="276" width="3" height="15" fill="rgb(231,77,48)"/><text x="128.00" y="286.50"></text></g><g><title>pybind11::detail::instance::get_value_and_holder (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="125" y="292" width="3" height="15" fill="rgb(232,4,36)"/><text x="128.00" y="302.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="128" y="260" width="3" height="15" fill="rgb(254,14,40)"/><text x="131.00" y="270.50"></text></g><g><title>0x7f612b20ce54 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="131" y="292" width="2" height="15" fill="rgb(218,100,11)"/><text x="134.00" y="302.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (10 samples, 2.18%)</title><rect x="110" y="212" width="26" height="15" fill="rgb(212,84,32)"/><text x="113.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 1.97%)</title><rect x="113" y="228" width="23" height="15" fill="rgb(205,159,32)"/><text x="116.00" y="238.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.87%)</title><rect x="125" y="244" width="11" height="15" fill="rgb(206,95,53)"/><text x="128.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="131" y="260" width="5" height="15" fill="rgb(219,13,7)"/><text x="134.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="131" y="276" width="5" height="15" fill="rgb(235,84,44)"/><text x="134.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="133" y="292" width="3" height="15" fill="rgb(239,122,30)"/><text x="136.00" y="302.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="136" y="260" width="2" height="15" fill="rgb(214,40,27)"/><text x="139.00" y="270.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="138" y="260" width="3" height="15" fill="rgb(221,170,7)"/><text x="141.00" y="270.50"></text></g><g><title>0x7f611acc37a0 (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="143" y="292" width="3" height="15" fill="rgb(235,181,15)"/><text x="146.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="146" y="292" width="3" height="15" fill="rgb(239,196,13)"/><text x="149.00" y="302.50"></text></g><g><title>0x7f612b1f6ce5 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="146" y="308" width="3" height="15" fill="rgb(207,159,46)"/><text x="149.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="149" y="308" width="2" height="15" fill="rgb(251,6,7)"/><text x="152.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="149" y="324" width="2" height="15" fill="rgb(216,25,6)"/><text x="152.00" y="334.50"></text></g><g><title>0x7f612b1f7b12 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="149" y="340" width="2" height="15" fill="rgb(223,136,53)"/><text x="152.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="149" y="292" width="5" height="15" fill="rgb(240,78,39)"/><text x="152.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="151" y="308" width="3" height="15" fill="rgb(241,212,20)"/><text x="154.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="151" y="324" width="3" height="15" fill="rgb(242,103,25)"/><text x="154.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="151" y="340" width="3" height="15" fill="rgb(220,128,31)"/><text x="154.00" y="350.50"></text></g><g><title>0x7f612b1f855a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="151" y="356" width="3" height="15" fill="rgb(225,221,17)"/><text x="154.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="154" y="292" width="2" height="15" fill="rgb(216,139,20)"/><text x="157.00" y="302.50"></text></g><g><title>0x7f612b1f6906 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="154" y="308" width="2" height="15" fill="rgb(246,162,40)"/><text x="157.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::CreateLoggerForRun (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="156" y="292" width="3" height="15" fill="rgb(246,145,42)"/><text x="159.00" y="302.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="156" y="308" width="3" height="15" fill="rgb(210,31,32)"/><text x="159.00" y="318.50"></text></g><g><title>0x7f612b1f694f (libc-2.29.so) (1 samples, 0.22%)</title><rect x="162" y="324" width="2" height="15" fill="rgb(223,152,8)"/><text x="165.00" y="334.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="167" y="340" width="2" height="15" fill="rgb(205,144,34)"/><text x="170.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="167" y="356" width="2" height="15" fill="rgb(211,208,27)"/><text x="170.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="167" y="372" width="2" height="15" fill="rgb(234,1,46)"/><text x="170.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="167" y="388" width="2" height="15" fill="rgb(217,121,33)"/><text x="170.00" y="398.50"></text></g><g><title>onnxruntime::OpKernelContext::OpKernelContext (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="169" y="340" width="3" height="15" fill="rgb(221,172,8)"/><text x="172.00" y="350.50"></text></g><g><title>onnxruntime::Node::Index (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="169" y="356" width="3" height="15" fill="rgb(238,127,33)"/><text x="172.00" y="366.50"></text></g><g><title>0x7f611acc37a0 (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="272" y="356" width="3" height="15" fill="rgb(205,163,20)"/><text x="275.00" y="366.50"></text></g><g><title>0x7f612b1f6906 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="275" y="356" width="5" height="15" fill="rgb(219,143,32)"/><text x="278.00" y="366.50"></text></g><g><title>0x7f612b1f6917 (libc-2.29.so) (5 samples, 1.09%)</title><rect x="280" y="356" width="13" height="15" fill="rgb(220,127,13)"/><text x="283.00" y="366.50"></text></g><g><title>0x7f612b1f693b (libc-2.29.so) (4 samples, 0.87%)</title><rect x="293" y="356" width="10" height="15" fill="rgb(221,58,20)"/><text x="296.00" y="366.50"></text></g><g><title>0x7f612b1f695e (libc-2.29.so) (1 samples, 0.22%)</title><rect x="303" y="356" width="3" height="15" fill="rgb(213,202,22)"/><text x="306.00" y="366.50"></text></g><g><title>0x7f612b1f696e (libc-2.29.so) (1 samples, 0.22%)</title><rect x="306" y="356" width="2" height="15" fill="rgb(216,127,8)"/><text x="309.00" y="366.50"></text></g><g><title>0x7f612b1f697e (libc-2.29.so) (1 samples, 0.22%)</title><rect x="308" y="356" width="3" height="15" fill="rgb(248,176,30)"/><text x="311.00" y="366.50"></text></g><g><title>0x7f612b1f6998 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="311" y="356" width="3" height="15" fill="rgb(208,119,43)"/><text x="314.00" y="366.50"></text></g><g><title>0x7f612b1f6a38 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="314" y="356" width="2" height="15" fill="rgb(248,199,42)"/><text x="317.00" y="366.50"></text></g><g><title>0x7f612b1f6a41 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="316" y="356" width="5" height="15" fill="rgb(242,97,45)"/><text x="319.00" y="366.50"></text></g><g><title>0x7f612b1f6a47 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="321" y="356" width="3" height="15" fill="rgb(244,37,52)"/><text x="324.00" y="366.50"></text></g><g><title>0x7f612b1f6bc0 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="324" y="356" width="2" height="15" fill="rgb(218,214,48)"/><text x="327.00" y="366.50"></text></g><g><title>0x7f612b1f6be4 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="326" y="356" width="3" height="15" fill="rgb(208,145,28)"/><text x="329.00" y="366.50"></text></g><g><title>0x7f612b1f6be8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="329" y="356" width="3" height="15" fill="rgb(216,182,54)"/><text x="332.00" y="366.50"></text></g><g><title>0x7f612b216d50 (libc-2.29.so) (2 samples, 0.44%)</title><rect x="332" y="356" width="5" height="15" fill="rgb(234,18,43)"/><text x="335.00" y="366.50"></text></g><g><title>0x7f612b216d97 (libc-2.29.so) (3 samples, 0.66%)</title><rect x="337" y="356" width="7" height="15" fill="rgb(232,219,0)"/><text x="340.00" y="366.50"></text></g><g><title>0x7f612b216dbf (libc-2.29.so) (1 samples, 0.22%)</title><rect x="344" y="356" width="3" height="15" fill="rgb(233,194,48)"/><text x="347.00" y="366.50"></text></g><g><title>free (libc-2.29.so) (7 samples, 1.53%)</title><rect x="347" y="356" width="18" height="15" fill="rgb(244,114,44)"/><text x="350.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="370" y="468" width="5" height="15" fill="rgb(239,149,48)"/><text x="373.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="370" y="484" width="5" height="15" fill="rgb(205,1,26)"/><text x="373.00" y="494.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="370" y="500" width="5" height="15" fill="rgb(240,84,4)"/><text x="373.00" y="510.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="373" y="516" width="2" height="15" fill="rgb(227,82,46)"/><text x="376.00" y="526.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="373" y="532" width="2" height="15" fill="rgb(247,174,47)"/><text x="376.00" y="542.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.87%)</title><rect x="368" y="452" width="10" height="15" fill="rgb(235,165,2)"/><text x="371.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="375" y="468" width="3" height="15" fill="rgb(218,75,9)"/><text x="378.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="375" y="484" width="3" height="15" fill="rgb(238,228,14)"/><text x="378.00" y="494.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="375" y="500" width="3" height="15" fill="rgb(224,113,15)"/><text x="378.00" y="510.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="375" y="516" width="3" height="15" fill="rgb(211,41,6)"/><text x="378.00" y="526.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.31%)</title><rect x="365" y="356" width="16" height="15" fill="rgb(211,136,54)"/><text x="368.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.31%)</title><rect x="365" y="372" width="16" height="15" fill="rgb(243,115,5)"/><text x="368.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.31%)</title><rect x="365" y="388" width="16" height="15" fill="rgb(244,225,53)"/><text x="368.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.09%)</title><rect x="368" y="404" width="13" height="15" fill="rgb(217,179,4)"/><text x="371.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.09%)</title><rect x="368" y="420" width="13" height="15" fill="rgb(240,32,33)"/><text x="371.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.09%)</title><rect x="368" y="436" width="13" height="15" fill="rgb(219,188,42)"/><text x="371.00" y="446.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="378" y="452" width="3" height="15" fill="rgb(207,130,30)"/><text x="381.00" y="462.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="378" y="468" width="3" height="15" fill="rgb(208,146,12)"/><text x="381.00" y="478.50"></text></g><g><title>0x7f612b1f7b39 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="378" y="484" width="3" height="15" fill="rgb(221,188,40)"/><text x="381.00" y="494.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (2 samples, 0.44%)</title><rect x="381" y="356" width="5" height="15" fill="rgb(222,29,44)"/><text x="384.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="386" y="356" width="2" height="15" fill="rgb(234,130,38)"/><text x="389.00" y="366.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="386" y="372" width="2" height="15" fill="rgb(208,48,13)"/><text x="389.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 28.17%)</title><rect x="141" y="260" width="332" height="15" fill="rgb(247,47,11)"/><text x="144.00" y="270.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (129 samples, 28.17%)</title><rect x="141" y="276" width="332" height="15" fill="rgb(226,29,37)"/><text x="144.00" y="286.50">onnxruntime::InferenceSession::Run (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (122 samples, 26.64%)</title><rect x="159" y="292" width="314" height="15" fill="rgb(221,112,13)"/><text x="162.00" y="302.50">onnxruntime::utils::ExecuteGraph (onnxrunt..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (121 samples, 26.42%)</title><rect x="162" y="308" width="311" height="15" fill="rgb(224,51,2)"/><text x="165.00" y="318.50">onnxruntime::utils::ExecuteGraphImpl (onn..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (120 samples, 26.20%)</title><rect x="164" y="324" width="309" height="15" fill="rgb(206,29,33)"/><text x="167.00" y="334.50">onnxruntime::SequentialExecutor::Execute ..</text></g><g><title>onnxruntime::ml::LinearRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (117 samples, 25.55%)</title><rect x="172" y="340" width="301" height="15" fill="rgb(217,97,31)"/><text x="175.00" y="350.50">onnxruntime::ml::LinearRegressor&lt;float&gt;:..</text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (33 samples, 7.21%)</title><rect x="388" y="356" width="85" height="15" fill="rgb(205,134,45)"/><text x="391.00" y="366.50">std::vecto..</text></g><g><title>operator new (libstdc++.so.6.0.28) (17 samples, 3.71%)</title><rect x="429" y="372" width="44" height="15" fill="rgb(205,138,19)"/><text x="432.00" y="382.50">oper..</text></g><g><title>malloc (libc-2.29.so) (14 samples, 3.06%)</title><rect x="437" y="388" width="36" height="15" fill="rgb(251,64,24)"/><text x="440.00" y="398.50">mal..</text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="473" y="260" width="5" height="15" fill="rgb(230,124,9)"/><text x="476.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="476" y="276" width="2" height="15" fill="rgb(206,135,39)"/><text x="479.00" y="286.50"></text></g><g><title>0x7f612b1f6be8 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="478" y="276" width="3" height="15" fill="rgb(210,199,23)"/><text x="481.00" y="286.50"></text></g><g><title>0x7f612b216d94 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="481" y="276" width="3" height="15" fill="rgb(233,130,50)"/><text x="484.00" y="286.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.22%)</title><rect x="486" y="324" width="3" height="15" fill="rgb(232,30,53)"/><text x="489.00" y="334.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.22%)</title><rect x="486" y="340" width="3" height="15" fill="rgb(223,84,33)"/><text x="489.00" y="350.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.09%)</title><rect x="478" y="260" width="13" height="15" fill="rgb(238,193,24)"/><text x="481.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (3 samples, 0.66%)</title><rect x="484" y="276" width="7" height="15" fill="rgb(216,193,51)"/><text x="487.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.66%)</title><rect x="484" y="292" width="7" height="15" fill="rgb(207,181,23)"/><text x="487.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (3 samples, 0.66%)</title><rect x="484" y="308" width="7" height="15" fill="rgb(210,119,35)"/><text x="487.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.22%)</title><rect x="489" y="324" width="2" height="15" fill="rgb(211,216,52)"/><text x="492.00" y="334.50"></text></g><g><title>std::_Rb_tree_increment (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="491" y="260" width="3" height="15" fill="rgb(248,69,54)"/><text x="494.00" y="270.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="496" y="356" width="3" height="15" fill="rgb(229,151,32)"/><text x="499.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_insert_unique&lt;unsigned long const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="496" y="372" width="3" height="15" fill="rgb(233,190,41)"/><text x="499.00" y="382.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="496" y="388" width="3" height="15" fill="rgb(220,19,16)"/><text x="499.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::ChunkFromHandle (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="499" y="372" width="3" height="15" fill="rgb(230,109,48)"/><text x="502.00" y="382.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (143 samples, 31.22%)</title><rect x="136" y="244" width="368" height="15" fill="rgb(232,159,34)"/><text x="139.00" y="254.50">onnxruntime::python::addObjectMethods(pybind11::m..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.87%)</title><rect x="494" y="260" width="10" height="15" fill="rgb(220,181,0)"/><text x="497.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.87%)</title><rect x="494" y="276" width="10" height="15" fill="rgb(252,50,29)"/><text x="497.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.87%)</title><rect x="494" y="292" width="10" height="15" fill="rgb(238,205,30)"/><text x="497.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 0.87%)</title><rect x="494" y="308" width="10" height="15" fill="rgb(211,73,46)"/><text x="497.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.66%)</title><rect x="496" y="324" width="8" height="15" fill="rgb(234,53,52)"/><text x="499.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 0.66%)</title><rect x="496" y="340" width="8" height="15" fill="rgb(222,109,49)"/><text x="499.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.44%)</title><rect x="499" y="356" width="5" height="15" fill="rgb(245,168,49)"/><text x="502.00" y="366.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="502" y="372" width="2" height="15" fill="rgb(238,157,51)"/><text x="505.00" y="382.50"></text></g><g><title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, onnxruntime::BFCArena::Bin::ChunkComparator, std::allocator&lt;unsigned long&gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="502" y="388" width="2" height="15" fill="rgb(227,225,35)"/><text x="505.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.22%)</title><rect x="504" y="244" width="3" height="15" fill="rgb(211,200,47)"/><text x="507.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="504" y="260" width="3" height="15" fill="rgb(241,85,25)"/><text x="507.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="507" y="244" width="2" height="15" fill="rgb(215,192,28)"/><text x="510.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="507" y="260" width="2" height="15" fill="rgb(248,139,2)"/><text x="510.00" y="270.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="509" y="244" width="3" height="15" fill="rgb(213,185,44)"/><text x="512.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (171 samples, 37.34%)</title><rect x="74" y="132" width="440" height="15" fill="rgb(222,211,44)"/><text x="77.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (170 samples, 37.12%)</title><rect x="76" y="148" width="438" height="15" fill="rgb(232,43,3)"/><text x="79.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (168 samples, 36.68%)</title><rect x="82" y="164" width="432" height="15" fill="rgb(221,77,17)"/><text x="85.00" y="174.50">_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (164 samples, 35.81%)</title><rect x="92" y="180" width="422" height="15" fill="rgb(245,104,52)"/><text x="95.00" y="190.50">run (mlprodict/onnxrt/ops_whole/session.py)</text></g><g><title>run (onnxruntime/capi/session.py) (164 samples, 35.81%)</title><rect x="92" y="196" width="422" height="15" fill="rgb(229,19,32)"/><text x="95.00" y="206.50">run (onnxruntime/capi/session.py)</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (147 samples, 32.10%)</title><rect x="136" y="212" width="378" height="15" fill="rgb(210,24,13)"/><text x="139.00" y="222.50">pybind11::cpp_function::dispatcher (onnxruntime/cap..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (147 samples, 32.10%)</title><rect x="136" y="228" width="378" height="15" fill="rgb(221,5,43)"/><text x="139.00" y="238.50">void pybind11::cpp_function::initialize&lt;onnxruntime..</text></g><g><title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt;, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;::_M_erase (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.22%)</title><rect x="512" y="244" width="2" height="15" fill="rgb(240,174,39)"/><text x="515.00" y="254.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (177 samples, 38.65%)</title><rect x="64" y="100" width="456" height="15" fill="rgb(234,90,48)"/><text x="67.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1000_4_12_float_..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (176 samples, 38.43%)</title><rect x="66" y="116" width="454" height="15" fill="rgb(252,205,14)"/><text x="69.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (2 samples, 0.44%)</title><rect x="514" y="132" width="6" height="15" fill="rgb(238,119,22)"/><text x="517.00" y="142.50"></text></g><g><title>profile_ort (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (178 samples, 38.86%)</title><rect x="64" y="68" width="458" height="15" fill="rgb(239,126,49)"/><text x="67.00" y="78.50">profile_ort (bench_LinearRegression_default_b_reg_1000_4_12_fl..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (178 samples, 38.86%)</title><rect x="64" y="84" width="458" height="15" fill="rgb(253,106,2)"/><text x="67.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1000_4_12_..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="520" y="100" width="2" height="15" fill="rgb(243,46,21)"/><text x="523.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="520" y="116" width="2" height="15" fill="rgb(213,139,21)"/><text x="523.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.22%)</title><rect x="520" y="132" width="2" height="15" fill="rgb(218,212,47)"/><text x="523.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="520" y="148" width="2" height="15" fill="rgb(216,200,15)"/><text x="523.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.22%)</title><rect x="520" y="164" width="2" height="15" fill="rgb(253,81,31)"/><text x="523.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="180" width="2" height="15" fill="rgb(247,213,1)"/><text x="523.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="196" width="2" height="15" fill="rgb(228,37,25)"/><text x="523.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="212" width="2" height="15" fill="rgb(213,97,17)"/><text x="523.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="520" y="228" width="2" height="15" fill="rgb(235,93,19)"/><text x="523.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="244" width="2" height="15" fill="rgb(240,22,44)"/><text x="523.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py) (1 samples, 0.22%)</title><rect x="520" y="260" width="2" height="15" fill="rgb(251,226,6)"/><text x="523.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="276" width="2" height="15" fill="rgb(230,57,2)"/><text x="523.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="292" width="2" height="15" fill="rgb(211,186,8)"/><text x="523.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="308" width="2" height="15" fill="rgb(206,167,43)"/><text x="523.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="520" y="324" width="2" height="15" fill="rgb(226,77,8)"/><text x="523.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="520" y="340" width="2" height="15" fill="rgb(210,197,37)"/><text x="523.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py) (1 samples, 0.22%)</title><rect x="520" y="356" width="2" height="15" fill="rgb(215,50,44)"/><text x="523.00" y="366.50"></text></g><g><title>check_distro_info (onnxruntime/capi/onnxruntime_validation.py) (1 samples, 0.22%)</title><rect x="520" y="372" width="2" height="15" fill="rgb(220,33,15)"/><text x="523.00" y="382.50"></text></g><g><title>architecture (platform.py) (1 samples, 0.22%)</title><rect x="520" y="388" width="2" height="15" fill="rgb(213,84,3)"/><text x="523.00" y="398.50"></text></g><g><title>_syscmd_file (platform.py) (1 samples, 0.22%)</title><rect x="520" y="404" width="2" height="15" fill="rgb(224,161,41)"/><text x="523.00" y="414.50"></text></g><g><title>__init__ (subprocess.py) (1 samples, 0.22%)</title><rect x="520" y="420" width="2" height="15" fill="rgb(252,206,21)"/><text x="523.00" y="430.50"></text></g><g><title>_execute_child (subprocess.py) (1 samples, 0.22%)</title><rect x="520" y="436" width="2" height="15" fill="rgb(236,42,1)"/><text x="523.00" y="446.50"></text></g><g><title>subprocess_fork_exec (_posixsubprocess.c) (1 samples, 0.22%)</title><rect x="520" y="452" width="2" height="15" fill="rgb(225,64,15)"/><text x="523.00" y="462.50"></text></g><g><title>__fork (libc-2.29.so) (1 samples, 0.22%)</title><rect x="520" y="468" width="2" height="15" fill="rgb(250,165,43)"/><text x="523.00" y="478.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="558" y="180" width="5" height="15" fill="rgb(230,87,11)"/><text x="561.00" y="190.50"></text></g><g><title>0x7f612b2171d6 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="584" y="196" width="3" height="15" fill="rgb(214,4,29)"/><text x="587.00" y="206.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (1 samples, 0.22%)</title><rect x="587" y="196" width="2" height="15" fill="rgb(252,108,0)"/><text x="590.00" y="206.50"></text></g><g><title>0x7f612b20c730 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="615" y="308" width="3" height="15" fill="rgb(220,183,6)"/><text x="618.00" y="318.50"></text></g><g><title>PyArray_Return (scalarapi.c) (1 samples, 0.22%)</title><rect x="618" y="340" width="2" height="15" fill="rgb(233,62,46)"/><text x="621.00" y="350.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="620" y="340" width="3" height="15" fill="rgb(228,43,49)"/><text x="623.00" y="350.50"></text></g><g><title>add_y (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="625" y="388" width="3" height="15" fill="rgb(227,76,52)"/><text x="628.00" y="398.50"></text></g><g><title>gemv (cblasfuncs.c) (14 samples, 3.06%)</title><rect x="623" y="340" width="36" height="15" fill="rgb(241,129,51)"/><text x="626.00" y="350.50">gem..</text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (14 samples, 3.06%)</title><rect x="623" y="356" width="36" height="15" fill="rgb(209,205,24)"/><text x="626.00" y="366.50">cbl..</text></g><g><title>sgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (13 samples, 2.84%)</title><rect x="625" y="372" width="34" height="15" fill="rgb(213,75,9)"/><text x="628.00" y="382.50">sg..</text></g><g><title>sgemv_kernel_4x4 (libopenblasp-r0-34a18dc3.3.7.so) (12 samples, 2.62%)</title><rect x="628" y="388" width="31" height="15" fill="rgb(220,116,48)"/><text x="631.00" y="398.50">sg..</text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="659" y="388" width="2" height="15" fill="rgb(223,78,19)"/><text x="662.00" y="398.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (19 samples, 4.15%)</title><rect x="615" y="276" width="49" height="15" fill="rgb(244,140,43)"/><text x="618.00" y="286.50">arra..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (19 samples, 4.15%)</title><rect x="615" y="292" width="49" height="15" fill="rgb(253,53,35)"/><text x="618.00" y="302.50">arra..</text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (18 samples, 3.93%)</title><rect x="618" y="308" width="46" height="15" fill="rgb(210,167,35)"/><text x="621.00" y="318.50">PyAr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (18 samples, 3.93%)</title><rect x="618" y="324" width="46" height="15" fill="rgb(224,101,26)"/><text x="621.00" y="334.50">cbla..</text></g><g><title>new_array_for_sum (common.c) (2 samples, 0.44%)</title><rect x="659" y="340" width="5" height="15" fill="rgb(229,77,34)"/><text x="662.00" y="350.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.44%)</title><rect x="659" y="356" width="5" height="15" fill="rgb(233,68,41)"/><text x="662.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.44%)</title><rect x="659" y="372" width="5" height="15" fill="rgb(220,44,8)"/><text x="662.00" y="382.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="661" y="388" width="3" height="15" fill="rgb(227,208,7)"/><text x="664.00" y="398.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="661" y="404" width="3" height="15" fill="rgb(217,142,26)"/><text x="664.00" y="414.50"></text></g><g><title>PyDataMem_NEW (alloc.c) (1 samples, 0.22%)</title><rect x="661" y="420" width="3" height="15" fill="rgb(249,173,19)"/><text x="664.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.22%)</title><rect x="661" y="436" width="3" height="15" fill="rgb(212,190,26)"/><text x="664.00" y="446.50"></text></g><g><title>0x7f612b1f821f (libc-2.29.so) (1 samples, 0.22%)</title><rect x="661" y="452" width="3" height="15" fill="rgb(245,193,8)"/><text x="664.00" y="462.50"></text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (22 samples, 4.80%)</title><rect x="610" y="244" width="56" height="15" fill="rgb(236,130,51)"/><text x="613.00" y="254.50">numpy..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (21 samples, 4.59%)</title><rect x="612" y="260" width="54" height="15" fill="rgb(232,141,12)"/><text x="615.00" y="270.50">dot (..</text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="664" y="276" width="2" height="15" fill="rgb(241,59,31)"/><text x="667.00" y="286.50"></text></g><g><title>gemv (cblasfuncs.c) (1 samples, 0.22%)</title><rect x="664" y="292" width="2" height="15" fill="rgb(218,6,10)"/><text x="667.00" y="302.50"></text></g><g><title>sscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="664" y="308" width="2" height="15" fill="rgb(231,227,30)"/><text x="667.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.44%)</title><rect x="666" y="260" width="6" height="15" fill="rgb(240,28,39)"/><text x="669.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.44%)</title><rect x="666" y="276" width="6" height="15" fill="rgb(253,207,18)"/><text x="669.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.44%)</title><rect x="666" y="292" width="6" height="15" fill="rgb(232,96,10)"/><text x="669.00" y="302.50"></text></g><g><title>0x7f612b217120 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="672" y="276" width="2" height="15" fill="rgb(240,11,11)"/><text x="675.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.22%)</title><rect x="674" y="292" width="3" height="15" fill="rgb(210,57,10)"/><text x="677.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.22%)</title><rect x="674" y="308" width="3" height="15" fill="rgb(246,97,36)"/><text x="677.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (2 samples, 0.44%)</title><rect x="674" y="276" width="5" height="15" fill="rgb(212,207,52)"/><text x="677.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="677" y="292" width="2" height="15" fill="rgb(225,167,3)"/><text x="680.00" y="302.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="677" y="308" width="2" height="15" fill="rgb(207,85,3)"/><text x="680.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="679" y="276" width="3" height="15" fill="rgb(216,192,39)"/><text x="682.00" y="286.50"></text></g><g><title>_get_output_array_method (ufunc_object.c) (1 samples, 0.22%)</title><rect x="679" y="292" width="3" height="15" fill="rgb(226,168,17)"/><text x="682.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.44%)</title><rect x="687" y="308" width="5" height="15" fill="rgb(210,34,16)"/><text x="690.00" y="318.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="692" y="308" width="3" height="15" fill="rgb(220,35,50)"/><text x="695.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="692" y="324" width="3" height="15" fill="rgb(226,149,7)"/><text x="695.00" y="334.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (2 samples, 0.44%)</title><rect x="695" y="308" width="5" height="15" fill="rgb(237,37,9)"/><text x="698.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.22%)</title><rect x="697" y="324" width="3" height="15" fill="rgb(249,191,54)"/><text x="700.00" y="334.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (8 samples, 1.75%)</title><rect x="682" y="276" width="21" height="15" fill="rgb(234,122,14)"/><text x="685.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c) (8 samples, 1.75%)</title><rect x="682" y="292" width="21" height="15" fill="rgb(252,85,19)"/><text x="685.00" y="302.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.22%)</title><rect x="700" y="308" width="3" height="15" fill="rgb(231,100,33)"/><text x="703.00" y="318.50"></text></g><g><title>profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (71 samples, 15.50%)</title><rect x="522" y="100" width="183" height="15" fill="rgb(246,172,38)"/><text x="525.00" y="110.50">profile (bench_LinearRe..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (70 samples, 15.28%)</title><rect x="525" y="116" width="180" height="15" fill="rgb(237,119,2)"/><text x="528.00" y="126.50">time_predict (mlprodict..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (67 samples, 14.63%)</title><rect x="533" y="132" width="172" height="15" fill="rgb(222,16,29)"/><text x="536.00" y="142.50">&lt;lambda&gt; (mlprodict/as..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (66 samples, 14.41%)</title><rect x="535" y="148" width="170" height="15" fill="rgb(244,212,9)"/><text x="538.00" y="158.50">run (mlprodict/onnxrt/..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (62 samples, 13.54%)</title><rect x="545" y="164" width="160" height="15" fill="rgb(239,36,34)"/><text x="548.00" y="174.50">_run_sequence_runtim..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (55 samples, 12.01%)</title><rect x="563" y="180" width="142" height="15" fill="rgb(216,27,0)"/><text x="566.00" y="190.50">run (mlprodict/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (45 samples, 9.83%)</title><rect x="589" y="196" width="116" height="15" fill="rgb(241,33,30)"/><text x="592.00" y="206.50">run (mlprodict..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (40 samples, 8.73%)</title><rect x="602" y="212" width="103" height="15" fill="rgb(211,145,27)"/><text x="605.00" y="222.50">run (mlprodi..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_linear_regressor.py) (40 samples, 8.73%)</title><rect x="602" y="228" width="103" height="15" fill="rgb(237,18,17)"/><text x="605.00" y="238.50">_run (mlprod..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (15 samples, 3.28%)</title><rect x="666" y="244" width="39" height="15" fill="rgb(222,47,18)"/><text x="669.00" y="254.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (13 samples, 2.84%)</title><rect x="672" y="260" width="33" height="15" fill="rgb(212,14,25)"/><text x="675.00" y="270.50">Py..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="703" y="276" width="2" height="15" fill="rgb(243,175,27)"/><text x="706.00" y="286.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="705" y="436" width="3" height="15" fill="rgb(205,120,46)"/><text x="708.00" y="446.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="705" y="452" width="3" height="15" fill="rgb(224,221,54)"/><text x="708.00" y="462.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="705" y="468" width="3" height="15" fill="rgb(229,32,38)"/><text x="708.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="705" y="484" width="3" height="15" fill="rgb(249,133,14)"/><text x="708.00" y="494.50"></text></g><g><title>_path_join (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="705" y="500" width="3" height="15" fill="rgb(254,95,43)"/><text x="708.00" y="510.50"></text></g><g><title>&lt;listcomp&gt; (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.22%)</title><rect x="705" y="516" width="3" height="15" fill="rgb(221,17,35)"/><text x="708.00" y="526.50"></text></g><g><title>profile_pyrt (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (73 samples, 15.94%)</title><rect x="522" y="68" width="188" height="15" fill="rgb(227,36,12)"/><text x="525.00" y="78.50">profile_pyrt (bench_Line..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (73 samples, 15.94%)</title><rect x="522" y="84" width="188" height="15" fill="rgb(233,78,35)"/><text x="525.00" y="94.50">setup_profile (bench_Lin..</text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.44%)</title><rect x="705" y="100" width="5" height="15" fill="rgb(206,137,49)"/><text x="708.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.44%)</title><rect x="705" y="116" width="5" height="15" fill="rgb(251,130,6)"/><text x="708.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py) (2 samples, 0.44%)</title><rect x="705" y="132" width="5" height="15" fill="rgb(205,131,3)"/><text x="708.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="705" y="148" width="5" height="15" fill="rgb(249,199,12)"/><text x="708.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py) (2 samples, 0.44%)</title><rect x="705" y="164" width="5" height="15" fill="rgb(219,96,19)"/><text x="708.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.44%)</title><rect x="705" y="180" width="5" height="15" fill="rgb(207,39,9)"/><text x="708.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py) (2 samples, 0.44%)</title><rect x="705" y="196" width="5" height="15" fill="rgb(221,25,33)"/><text x="708.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="212" width="5" height="15" fill="rgb(217,155,31)"/><text x="708.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="228" width="5" height="15" fill="rgb(234,119,25)"/><text x="708.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="244" width="5" height="15" fill="rgb(206,114,41)"/><text x="708.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="705" y="260" width="5" height="15" fill="rgb(241,119,14)"/><text x="708.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="276" width="5" height="15" fill="rgb(225,99,43)"/><text x="708.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py) (2 samples, 0.44%)</title><rect x="705" y="292" width="5" height="15" fill="rgb(233,46,30)"/><text x="708.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="308" width="5" height="15" fill="rgb(237,116,5)"/><text x="708.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="324" width="5" height="15" fill="rgb(252,204,46)"/><text x="708.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="340" width="5" height="15" fill="rgb(230,221,5)"/><text x="708.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.44%)</title><rect x="705" y="356" width="5" height="15" fill="rgb(244,207,26)"/><text x="708.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="372" width="5" height="15" fill="rgb(218,117,6)"/><text x="708.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py) (2 samples, 0.44%)</title><rect x="705" y="388" width="5" height="15" fill="rgb(221,174,39)"/><text x="708.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="404" width="5" height="15" fill="rgb(234,127,12)"/><text x="708.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="705" y="420" width="5" height="15" fill="rgb(210,1,13)"/><text x="708.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.22%)</title><rect x="708" y="436" width="2" height="15" fill="rgb(250,37,5)"/><text x="711.00" y="446.50"></text></g><g><title>PyArray_Transpose (shape.c) (1 samples, 0.22%)</title><rect x="739" y="180" width="2" height="15" fill="rgb(224,39,42)"/><text x="742.00" y="190.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.44%)</title><rect x="741" y="212" width="5" height="15" fill="rgb(234,107,16)"/><text x="744.00" y="222.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.44%)</title><rect x="741" y="228" width="5" height="15" fill="rgb(247,60,22)"/><text x="744.00" y="238.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.44%)</title><rect x="741" y="244" width="5" height="15" fill="rgb(229,124,41)"/><text x="744.00" y="254.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.44%)</title><rect x="741" y="260" width="5" height="15" fill="rgb(250,2,1)"/><text x="744.00" y="270.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.44%)</title><rect x="741" y="276" width="5" height="15" fill="rgb(222,172,21)"/><text x="744.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.22%)</title><rect x="744" y="292" width="2" height="15" fill="rgb(221,118,24)"/><text x="747.00" y="302.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (2 samples, 0.44%)</title><rect x="749" y="260" width="5" height="15" fill="rgb(226,178,43)"/><text x="752.00" y="270.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (2 samples, 0.44%)</title><rect x="749" y="276" width="5" height="15" fill="rgb(237,122,1)"/><text x="752.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (4 samples, 0.87%)</title><rect x="746" y="244" width="11" height="15" fill="rgb(221,84,23)"/><text x="749.00" y="254.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.22%)</title><rect x="754" y="260" width="3" height="15" fill="rgb(213,141,14)"/><text x="757.00" y="270.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c) (1 samples, 0.22%)</title><rect x="754" y="276" width="3" height="15" fill="rgb(217,133,9)"/><text x="757.00" y="286.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (5 samples, 1.09%)</title><rect x="746" y="228" width="13" height="15" fill="rgb(245,129,32)"/><text x="749.00" y="238.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="757" y="244" width="2" height="15" fill="rgb(245,51,16)"/><text x="760.00" y="254.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.22%)</title><rect x="759" y="228" width="3" height="15" fill="rgb(223,19,26)"/><text x="762.00" y="238.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (3 samples, 0.66%)</title><rect x="762" y="228" width="8" height="15" fill="rgb(228,122,28)"/><text x="765.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (3 samples, 0.66%)</title><rect x="762" y="244" width="8" height="15" fill="rgb(214,52,0)"/><text x="765.00" y="254.50"></text></g><g><title>DOUBLE_add (loops.c.src) (2 samples, 0.44%)</title><rect x="764" y="260" width="6" height="15" fill="rgb(220,15,32)"/><text x="767.00" y="270.50"></text></g><g><title>run_binary_simd_add_DOUBLE (simd.inc.src) (2 samples, 0.44%)</title><rect x="764" y="276" width="6" height="15" fill="rgb(232,43,32)"/><text x="767.00" y="286.50"></text></g><g><title>sse2_binary_scalar2_add_DOUBLE (simd.inc.src) (2 samples, 0.44%)</title><rect x="764" y="292" width="6" height="15" fill="rgb(222,120,53)"/><text x="767.00" y="302.50"></text></g><g><title>_mm_add_pd (emmintrin.h) (1 samples, 0.22%)</title><rect x="767" y="308" width="3" height="15" fill="rgb(215,60,16)"/><text x="770.00" y="318.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.22%)</title><rect x="770" y="276" width="2" height="15" fill="rgb(208,39,46)"/><text x="773.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.22%)</title><rect x="770" y="292" width="2" height="15" fill="rgb(241,175,21)"/><text x="773.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.22%)</title><rect x="770" y="308" width="2" height="15" fill="rgb(206,144,49)"/><text x="773.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.22%)</title><rect x="770" y="324" width="2" height="15" fill="rgb(227,190,21)"/><text x="773.00" y="334.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="772" y="276" width="3" height="15" fill="rgb(207,16,2)"/><text x="775.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="772" y="292" width="3" height="15" fill="rgb(211,31,54)"/><text x="775.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="772" y="308" width="3" height="15" fill="rgb(233,110,48)"/><text x="775.00" y="318.50"></text></g><g><title>PyArray_FromScalar (scalarapi.c) (3 samples, 0.66%)</title><rect x="770" y="260" width="7" height="15" fill="rgb(250,114,1)"/><text x="773.00" y="270.50"></text></g><g><title>scalar_value (scalarapi.c) (1 samples, 0.22%)</title><rect x="775" y="276" width="2" height="15" fill="rgb(223,121,41)"/><text x="778.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 0.87%)</title><rect x="770" y="244" width="10" height="15" fill="rgb(241,102,45)"/><text x="773.00" y="254.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.22%)</title><rect x="777" y="260" width="3" height="15" fill="rgb(244,223,33)"/><text x="780.00" y="270.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.22%)</title><rect x="777" y="276" width="3" height="15" fill="rgb(212,151,24)"/><text x="780.00" y="286.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.22%)</title><rect x="777" y="292" width="3" height="15" fill="rgb(236,170,54)"/><text x="780.00" y="302.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src) (1 samples, 0.22%)</title><rect x="777" y="308" width="3" height="15" fill="rgb(210,132,3)"/><text x="780.00" y="318.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src) (1 samples, 0.22%)</title><rect x="777" y="324" width="3" height="15" fill="rgb(229,16,32)"/><text x="780.00" y="334.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (5 samples, 1.09%)</title><rect x="770" y="228" width="12" height="15" fill="rgb(220,21,17)"/><text x="773.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c) (1 samples, 0.22%)</title><rect x="780" y="244" width="2" height="15" fill="rgb(224,158,28)"/><text x="783.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (15 samples, 3.28%)</title><rect x="746" y="212" width="39" height="15" fill="rgb(219,216,35)"/><text x="749.00" y="222.50">PyU..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.22%)</title><rect x="782" y="228" width="3" height="15" fill="rgb(245,139,32)"/><text x="785.00" y="238.50"></text></g><g><title>array_add (number.c) (18 samples, 3.93%)</title><rect x="741" y="180" width="47" height="15" fill="rgb(239,78,53)"/><text x="744.00" y="190.50">arra..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (18 samples, 3.93%)</title><rect x="741" y="196" width="47" height="15" fill="rgb(218,31,50)"/><text x="744.00" y="206.50">ufun..</text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="785" y="212" width="3" height="15" fill="rgb(241,141,28)"/><text x="788.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.44%)</title><rect x="788" y="180" width="5" height="15" fill="rgb(208,175,48)"/><text x="791.00" y="190.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.22%)</title><rect x="790" y="196" width="3" height="15" fill="rgb(210,222,11)"/><text x="793.00" y="206.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.22%)</title><rect x="790" y="212" width="3" height="15" fill="rgb(245,158,30)"/><text x="793.00" y="222.50"></text></g><g><title>__enter__ (warnings.py) (5 samples, 1.09%)</title><rect x="847" y="196" width="13" height="15" fill="rgb(208,32,4)"/><text x="850.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (3 samples, 0.66%)</title><rect x="860" y="196" width="7" height="15" fill="rgb(247,35,54)"/><text x="863.00" y="206.50"></text></g><g><title>__init__ (warnings.py) (3 samples, 0.66%)</title><rect x="867" y="196" width="8" height="15" fill="rgb(241,161,9)"/><text x="870.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (6 samples, 1.31%)</title><rect x="906" y="212" width="16" height="15" fill="rgb(233,104,5)"/><text x="909.00" y="222.50"></text></g><g><title>0x7f612b20ce8a (libc-2.29.so) (1 samples, 0.22%)</title><rect x="919" y="228" width="3" height="15" fill="rgb(249,163,16)"/><text x="922.00" y="238.50"></text></g><g><title>get_config (sklearn/_config.py) (2 samples, 0.44%)</title><rect x="922" y="212" width="5" height="15" fill="rgb(217,41,17)"/><text x="925.00" y="222.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (22 samples, 4.80%)</title><rect x="875" y="196" width="57" height="15" fill="rgb(234,98,43)"/><text x="878.00" y="206.50">_asser..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.44%)</title><rect x="927" y="212" width="5" height="15" fill="rgb(217,157,54)"/><text x="930.00" y="222.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py) (3 samples, 0.66%)</title><rect x="932" y="196" width="8" height="15" fill="rgb(245,140,37)"/><text x="935.00" y="206.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (13 samples, 2.84%)</title><rect x="940" y="196" width="33" height="15" fill="rgb(230,9,49)"/><text x="943.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py) (7 samples, 1.53%)</title><rect x="955" y="212" width="18" height="15" fill="rgb(221,74,36)"/><text x="958.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py) (3 samples, 0.66%)</title><rect x="965" y="228" width="8" height="15" fill="rgb(229,83,22)"/><text x="968.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.22%)</title><rect x="973" y="196" width="3" height="15" fill="rgb(239,16,49)"/><text x="976.00" y="206.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.22%)</title><rect x="983" y="212" width="3" height="15" fill="rgb(226,109,41)"/><text x="986.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (10 samples, 2.18%)</title><rect x="976" y="196" width="25" height="15" fill="rgb(226,163,10)"/><text x="979.00" y="206.50">i..</text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (6 samples, 1.31%)</title><rect x="986" y="212" width="15" height="15" fill="rgb(244,112,54)"/><text x="989.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py) (89 samples, 19.43%)</title><rect x="793" y="180" width="229" height="15" fill="rgb(250,102,9)"/><text x="796.00" y="190.50">check_array (sklearn/utils/val..</text></g><g><title>simplefilter (warnings.py) (8 samples, 1.75%)</title><rect x="1001" y="196" width="21" height="15" fill="rgb(251,31,11)"/><text x="1004.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (7 samples, 1.53%)</title><rect x="1004" y="212" width="18" height="15" fill="rgb(206,105,49)"/><text x="1007.00" y="222.50"></text></g><g><title>0x7f612b217124 (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1035" y="196" width="2" height="15" fill="rgb(219,108,45)"/><text x="1038.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 0.87%)</title><rect x="1050" y="212" width="11" height="15" fill="rgb(253,50,35)"/><text x="1053.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (10 samples, 2.18%)</title><rect x="1037" y="196" width="26" height="15" fill="rgb(234,127,7)"/><text x="1040.00" y="206.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.22%)</title><rect x="1061" y="212" width="2" height="15" fill="rgb(250,179,29)"/><text x="1064.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (18 samples, 3.93%)</title><rect x="1022" y="180" width="46" height="15" fill="rgb(253,48,46)"/><text x="1025.00" y="190.50">chec..</text></g><g><title>isclass (inspect.py) (2 samples, 0.44%)</title><rect x="1063" y="196" width="5" height="15" fill="rgb(216,168,1)"/><text x="1066.00" y="206.50"></text></g><g><title>array_matrix_multiply (number.c) (1 samples, 0.22%)</title><rect x="1074" y="196" width="2" height="15" fill="rgb(228,67,33)"/><text x="1077.00" y="206.50"></text></g><g><title>dgemv_t_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (6 samples, 1.31%)</title><rect x="1076" y="196" width="16" height="15" fill="rgb(222,215,23)"/><text x="1079.00" y="206.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (3 samples, 0.66%)</title><rect x="1092" y="196" width="7" height="15" fill="rgb(209,109,19)"/><text x="1095.00" y="206.50"></text></g><g><title>DOUBLE_matmul (matmul.c.src) (2 samples, 0.44%)</title><rect x="1107" y="244" width="5" height="15" fill="rgb(232,175,30)"/><text x="1110.00" y="254.50"></text></g><g><title>DOUBLE_gemv (matmul.c.src) (2 samples, 0.44%)</title><rect x="1107" y="260" width="5" height="15" fill="rgb(217,125,21)"/><text x="1110.00" y="270.50"></text></g><g><title>cblas_dgemv (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.44%)</title><rect x="1107" y="276" width="5" height="15" fill="rgb(239,88,54)"/><text x="1110.00" y="286.50"></text></g><g><title>dscal_k_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1110" y="292" width="2" height="15" fill="rgb(244,226,16)"/><text x="1113.00" y="302.50"></text></g><g><title>dscal_kernel_8_zero (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.22%)</title><rect x="1110" y="308" width="2" height="15" fill="rgb(222,135,47)"/><text x="1113.00" y="318.50"></text></g><g><title>arrays_overlap (array_assign.c) (1 samples, 0.22%)</title><rect x="1120" y="292" width="3" height="15" fill="rgb(215,65,11)"/><text x="1123.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.22%)</title><rect x="1120" y="308" width="3" height="15" fill="rgb(219,189,29)"/><text x="1123.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="1130" y="308" width="3" height="15" fill="rgb(205,110,24)"/><text x="1133.00" y="318.50"></text></g><g><title>_aligned_contig_cast_float_to_double (lowlevel_strided_loops.c.src) (6 samples, 1.31%)</title><rect x="1133" y="308" width="15" height="15" fill="rgb(224,27,18)"/><text x="1136.00" y="318.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (12 samples, 2.62%)</title><rect x="1120" y="276" width="31" height="15" fill="rgb(215,68,0)"/><text x="1123.00" y="286.50">Py..</text></g><g><title>raw_array_assign_array (array_assign_array.c) (11 samples, 2.40%)</title><rect x="1123" y="292" width="28" height="15" fill="rgb(206,186,46)"/><text x="1126.00" y="302.50">r..</text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c) (1 samples, 0.22%)</title><rect x="1148" y="308" width="3" height="15" fill="rgb(239,56,49)"/><text x="1151.00" y="318.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src) (1 samples, 0.22%)</title><rect x="1148" y="324" width="3" height="15" fill="rgb(229,27,11)"/><text x="1151.00" y="334.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (14 samples, 3.06%)</title><rect x="1117" y="260" width="36" height="15" fill="rgb(254,185,40)"/><text x="1120.00" y="270.50">npy..</text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1151" y="276" width="2" height="15" fill="rgb(210,188,51)"/><text x="1154.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.22%)</title><rect x="1151" y="292" width="2" height="15" fill="rgb(229,162,29)"/><text x="1154.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.22%)</title><rect x="1151" y="308" width="2" height="15" fill="rgb(206,17,5)"/><text x="1154.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1151" y="324" width="2" height="15" fill="rgb(249,147,4)"/><text x="1154.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1151" y="340" width="2" height="15" fill="rgb(215,197,22)"/><text x="1154.00" y="350.50"></text></g><g><title>npyiter_check_op_axes (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1153" y="260" width="3" height="15" fill="rgb(245,72,44)"/><text x="1156.00" y="270.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (18 samples, 3.93%)</title><rect x="1112" y="244" width="47" height="15" fill="rgb(232,30,40)"/><text x="1115.00" y="254.50">NpyI..</text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1156" y="260" width="3" height="15" fill="rgb(235,152,9)"/><text x="1159.00" y="270.50"></text></g><g><title>NpyIter_Deallocate (nditer_constr.c) (1 samples, 0.22%)</title><rect x="1159" y="244" width="2" height="15" fill="rgb(250,12,16)"/><text x="1162.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.22%)</title><rect x="1159" y="260" width="2" height="15" fill="rgb(220,96,8)"/><text x="1162.00" y="270.50"></text></g><g><title>npy_free_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1159" y="276" width="2" height="15" fill="rgb(207,36,49)"/><text x="1162.00" y="286.50"></text></g><g><title>_npy_free_cache (alloc.c) (1 samples, 0.22%)</title><rect x="1159" y="292" width="2" height="15" fill="rgb(240,206,22)"/><text x="1162.00" y="302.50"></text></g><g><title>PyDataMem_FREE (alloc.c) (1 samples, 0.22%)</title><rect x="1159" y="308" width="2" height="15" fill="rgb(254,113,9)"/><text x="1162.00" y="318.50"></text></g><g><title>0x7f612b1f6d2d (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1159" y="324" width="2" height="15" fill="rgb(246,124,15)"/><text x="1162.00" y="334.50"></text></g><g><title>NpyIter_GetOperandArray (nditer_api.c) (1 samples, 0.22%)</title><rect x="1161" y="244" width="3" height="15" fill="rgb(216,168,7)"/><text x="1164.00" y="254.50"></text></g><g><title>NpyIter_RemoveMultiIndex (nditer_api.c) (1 samples, 0.22%)</title><rect x="1164" y="244" width="2" height="15" fill="rgb(253,73,51)"/><text x="1167.00" y="254.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c) (1 samples, 0.22%)</title><rect x="1164" y="260" width="2" height="15" fill="rgb(221,115,18)"/><text x="1167.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1166" y="244" width="3" height="15" fill="rgb(229,218,21)"/><text x="1169.00" y="254.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.22%)</title><rect x="1166" y="260" width="3" height="15" fill="rgb(228,67,4)"/><text x="1169.00" y="270.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1166" y="276" width="3" height="15" fill="rgb(245,38,16)"/><text x="1169.00" y="286.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.22%)</title><rect x="1166" y="292" width="3" height="15" fill="rgb(224,117,47)"/><text x="1169.00" y="302.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c) (1 samples, 0.22%)</title><rect x="1166" y="308" width="3" height="15" fill="rgb(247,160,46)"/><text x="1169.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.22%)</title><rect x="1166" y="324" width="3" height="15" fill="rgb(254,204,37)"/><text x="1169.00" y="334.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1169" y="244" width="2" height="15" fill="rgb(229,218,3)"/><text x="1172.00" y="254.50"></text></g><g><title>_find_array_method (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1169" y="260" width="2" height="15" fill="rgb(231,58,17)"/><text x="1172.00" y="270.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.22%)</title><rect x="1171" y="244" width="3" height="15" fill="rgb(249,122,30)"/><text x="1174.00" y="254.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.22%)</title><rect x="1174" y="244" width="3" height="15" fill="rgb(206,185,38)"/><text x="1177.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.44%)</title><rect x="1177" y="244" width="5" height="15" fill="rgb(248,166,0)"/><text x="1180.00" y="254.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1182" y="244" width="2" height="15" fill="rgb(228,88,37)"/><text x="1185.00" y="254.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.22%)</title><rect x="1182" y="260" width="2" height="15" fill="rgb(222,179,29)"/><text x="1185.00" y="270.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (180 samples, 39.30%)</title><rect x="723" y="132" width="464" height="15" fill="rgb(239,110,22)"/><text x="726.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/linear_model/_base.py) (180 samples, 39.30%)</title><rect x="723" y="148" width="464" height="15" fill="rgb(213,68,14)"/><text x="726.00" y="158.50">predict (sklearn/linear_model/_base.py)</text></g><g><title>_decision_function (sklearn/linear_model/_base.py) (180 samples, 39.30%)</title><rect x="723" y="164" width="464" height="15" fill="rgb(242,200,8)"/><text x="726.00" y="174.50">_decision_function (sklearn/linear_model/_base.py)</text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (46 samples, 10.04%)</title><rect x="1068" y="180" width="119" height="15" fill="rgb(254,137,53)"/><text x="1071.00" y="190.50">safe_sparse_do..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (34 samples, 7.42%)</title><rect x="1099" y="196" width="88" height="15" fill="rgb(250,83,47)"/><text x="1102.00" y="206.50">ufunc_gene..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (34 samples, 7.42%)</title><rect x="1099" y="212" width="88" height="15" fill="rgb(252,154,30)"/><text x="1102.00" y="222.50">PyUFunc_Ge..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (34 samples, 7.42%)</title><rect x="1099" y="228" width="88" height="15" fill="rgb(249,200,9)"/><text x="1102.00" y="238.50">PyUFunc_Ge..</text></g><g><title>npyiter_iternext_sizeone (nditer_templ.c.src) (1 samples, 0.22%)</title><rect x="1184" y="244" width="3" height="15" fill="rgb(208,44,27)"/><text x="1187.00" y="254.50"></text></g><g><title>all (458 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(235,45,20)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (458 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(227,132,9)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_LinearRegression_default_b_reg_1000_4_12_float_.py)</text></g><g><title>profile_skl (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (186 samples, 40.61%)</title><rect x="710" y="68" width="480" height="15" fill="rgb(209,97,26)"/><text x="713.00" y="78.50">profile_skl (bench_LinearRegression_default_b_reg_1000_4_12_float..</text></g><g><title>setup_profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (186 samples, 40.61%)</title><rect x="710" y="84" width="480" height="15" fill="rgb(242,33,22)"/><text x="713.00" y="94.50">setup_profile (bench_LinearRegression_default_b_reg_1000_4_12_flo..</text></g><g><title>profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py) (186 samples, 40.61%)</title><rect x="710" y="100" width="480" height="15" fill="rgb(209,82,10)"/><text x="713.00" y="110.50">profile (bench_LinearRegression_default_b_reg_1000_4_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (183 samples, 39.96%)</title><rect x="718" y="116" width="472" height="15" fill="rgb(242,99,10)"/><text x="721.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.22%)</title><rect x="1187" y="132" width="3" height="15" fill="rgb(217,186,9)"/><text x="1190.00" y="142.50"></text></g></g></svg>