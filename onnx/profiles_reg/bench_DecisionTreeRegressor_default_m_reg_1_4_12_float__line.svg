<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1878" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1861.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1861.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.41%)</title><rect x="10" y="244" width="4" height="15" fill="rgb(247,50,9)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="10" y="260" width="4" height="15" fill="rgb(217,74,50)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="276" width="4" height="15" fill="rgb(226,124,30)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="292" width="4" height="15" fill="rgb(241,186,27)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="308" width="4" height="15" fill="rgb(246,87,3)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="324" width="4" height="15" fill="rgb(235,160,46)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="340" width="4" height="15" fill="rgb(236,75,10)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="356" width="4" height="15" fill="rgb(226,50,8)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:97) (1 samples, 0.41%)</title><rect x="10" y="372" width="4" height="15" fill="rgb(233,157,29)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="10" y="388" width="4" height="15" fill="rgb(207,33,43)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="404" width="4" height="15" fill="rgb(245,32,46)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="10" y="420" width="4" height="15" fill="rgb(221,84,32)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="10" y="436" width="4" height="15" fill="rgb(239,221,17)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="10" y="452" width="4" height="15" fill="rgb(229,70,32)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="10" y="468" width="4" height="15" fill="rgb(225,190,28)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="10" y="484" width="4" height="15" fill="rgb(211,150,33)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/_add_newdocs.py:6839) (1 samples, 0.41%)</title><rect x="10" y="500" width="4" height="15" fill="rgb(253,117,42)"/><text x="13.00" y="510.50"></text></g><g><title>add_newdoc (numpy/core/function_base.py:463) (1 samples, 0.41%)</title><rect x="10" y="516" width="4" height="15" fill="rgb(243,122,19)"/><text x="13.00" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (1 samples, 0.41%)</title><rect x="10" y="532" width="4" height="15" fill="rgb(230,124,52)"/><text x="13.00" y="542.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:1) (2 samples, 0.82%)</title><rect x="10" y="148" width="9" height="15" fill="rgb(250,98,43)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="10" y="164" width="9" height="15" fill="rgb(224,138,42)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="10" y="180" width="9" height="15" fill="rgb(238,139,30)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="10" y="196" width="9" height="15" fill="rgb(213,169,54)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="10" y="212" width="9" height="15" fill="rgb(206,32,43)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="10" y="228" width="9" height="15" fill="rgb(248,38,22)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (1 samples, 0.41%)</title><rect x="14" y="244" width="5" height="15" fill="rgb(243,188,24)"/><text x="17.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="14" y="260" width="5" height="15" fill="rgb(236,125,44)"/><text x="17.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="14" y="276" width="5" height="15" fill="rgb(249,74,13)"/><text x="17.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="14" y="292" width="5" height="15" fill="rgb(240,116,22)"/><text x="17.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="14" y="308" width="5" height="15" fill="rgb(207,58,28)"/><text x="17.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="14" y="324" width="5" height="15" fill="rgb(225,90,23)"/><text x="17.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="14" y="340" width="5" height="15" fill="rgb(205,105,46)"/><text x="17.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="14" y="356" width="5" height="15" fill="rgb(238,24,51)"/><text x="17.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:25) (1 samples, 0.41%)</title><rect x="14" y="372" width="5" height="15" fill="rgb(232,148,2)"/><text x="17.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="14" y="388" width="5" height="15" fill="rgb(209,83,1)"/><text x="17.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="14" y="404" width="5" height="15" fill="rgb(207,120,32)"/><text x="17.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="14" y="420" width="5" height="15" fill="rgb(254,101,14)"/><text x="17.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="14" y="436" width="5" height="15" fill="rgb(215,214,31)"/><text x="17.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="14" y="452" width="5" height="15" fill="rgb(225,174,26)"/><text x="17.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/financial.py:15) (1 samples, 0.41%)</title><rect x="14" y="468" width="5" height="15" fill="rgb(237,26,42)"/><text x="17.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="14" y="484" width="5" height="15" fill="rgb(251,197,17)"/><text x="17.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="14" y="500" width="5" height="15" fill="rgb(212,209,45)"/><text x="17.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="14" y="516" width="5" height="15" fill="rgb(222,113,54)"/><text x="17.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="14" y="532" width="5" height="15" fill="rgb(225,13,11)"/><text x="17.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="14" y="548" width="5" height="15" fill="rgb(233,143,48)"/><text x="17.00" y="558.50"></text></g><g><title>&lt;module&gt; (decimal.py:3) (1 samples, 0.41%)</title><rect x="14" y="564" width="5" height="15" fill="rgb(242,214,0)"/><text x="17.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="14" y="580" width="5" height="15" fill="rgb(251,135,35)"/><text x="17.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="14" y="596" width="5" height="15" fill="rgb(223,20,51)"/><text x="17.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.41%)</title><rect x="14" y="612" width="5" height="15" fill="rgb(205,49,27)"/><text x="17.00" y="622.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.41%)</title><rect x="14" y="628" width="5" height="15" fill="rgb(237,175,35)"/><text x="17.00" y="638.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.41%)</title><rect x="14" y="644" width="5" height="15" fill="rgb(214,71,31)"/><text x="17.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="14" y="660" width="5" height="15" fill="rgb(220,135,21)"/><text x="17.00" y="670.50"></text></g><g><title>0x7f21f2f6d764 (?) (1 samples, 0.41%)</title><rect x="14" y="676" width="5" height="15" fill="rgb(239,159,25)"/><text x="17.00" y="686.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.41%)</title><rect x="14" y="692" width="5" height="15" fill="rgb(220,131,16)"/><text x="17.00" y="702.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.41%)</title><rect x="19" y="868" width="5" height="15" fill="rgb(214,51,2)"/><text x="22.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.41%)</title><rect x="19" y="884" width="5" height="15" fill="rgb(207,77,28)"/><text x="22.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.41%)</title><rect x="19" y="900" width="5" height="15" fill="rgb(211,223,48)"/><text x="22.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="19" y="916" width="5" height="15" fill="rgb(238,104,34)"/><text x="22.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.41%)</title><rect x="19" y="932" width="5" height="15" fill="rgb(226,58,2)"/><text x="22.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.41%)</title><rect x="19" y="948" width="5" height="15" fill="rgb(252,97,31)"/><text x="22.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:209) (1 samples, 0.41%)</title><rect x="19" y="964" width="5" height="15" fill="rgb(212,123,27)"/><text x="22.00" y="974.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (2 samples, 0.82%)</title><rect x="19" y="148" width="10" height="15" fill="rgb(207,58,14)"/><text x="22.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="164" width="10" height="15" fill="rgb(213,217,23)"/><text x="22.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="19" y="180" width="10" height="15" fill="rgb(218,98,47)"/><text x="22.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="196" width="10" height="15" fill="rgb(214,222,6)"/><text x="22.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="212" width="10" height="15" fill="rgb(207,11,25)"/><text x="22.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="19" y="228" width="10" height="15" fill="rgb(251,170,2)"/><text x="22.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="19" y="244" width="10" height="15" fill="rgb(242,227,16)"/><text x="22.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="19" y="260" width="10" height="15" fill="rgb(214,102,34)"/><text x="22.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="276" width="10" height="15" fill="rgb(205,118,54)"/><text x="22.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (2 samples, 0.82%)</title><rect x="19" y="292" width="10" height="15" fill="rgb(226,10,14)"/><text x="22.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="308" width="10" height="15" fill="rgb(212,94,26)"/><text x="22.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="19" y="324" width="10" height="15" fill="rgb(233,35,41)"/><text x="22.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="19" y="340" width="10" height="15" fill="rgb(228,224,47)"/><text x="22.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="19" y="356" width="10" height="15" fill="rgb(238,112,15)"/><text x="22.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="372" width="10" height="15" fill="rgb(246,222,12)"/><text x="22.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (2 samples, 0.82%)</title><rect x="19" y="388" width="10" height="15" fill="rgb(227,52,10)"/><text x="22.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="404" width="10" height="15" fill="rgb(233,88,47)"/><text x="22.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="19" y="420" width="10" height="15" fill="rgb(233,133,29)"/><text x="22.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="19" y="436" width="10" height="15" fill="rgb(219,193,42)"/><text x="22.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="19" y="452" width="10" height="15" fill="rgb(233,131,9)"/><text x="22.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="468" width="10" height="15" fill="rgb(230,132,28)"/><text x="22.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (2 samples, 0.82%)</title><rect x="19" y="484" width="10" height="15" fill="rgb(240,100,14)"/><text x="22.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="500" width="10" height="15" fill="rgb(249,187,32)"/><text x="22.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="19" y="516" width="10" height="15" fill="rgb(208,174,5)"/><text x="22.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="19" y="532" width="10" height="15" fill="rgb(237,49,6)"/><text x="22.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="19" y="548" width="10" height="15" fill="rgb(208,111,31)"/><text x="22.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="564" width="10" height="15" fill="rgb(241,8,31)"/><text x="22.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (2 samples, 0.82%)</title><rect x="19" y="580" width="10" height="15" fill="rgb(229,107,34)"/><text x="22.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="596" width="10" height="15" fill="rgb(236,149,38)"/><text x="22.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.82%)</title><rect x="19" y="612" width="10" height="15" fill="rgb(210,127,8)"/><text x="22.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="628" width="10" height="15" fill="rgb(253,26,51)"/><text x="22.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="644" width="10" height="15" fill="rgb(225,35,41)"/><text x="22.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="19" y="660" width="10" height="15" fill="rgb(231,89,25)"/><text x="22.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="19" y="676" width="10" height="15" fill="rgb(221,153,13)"/><text x="22.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="19" y="692" width="10" height="15" fill="rgb(238,199,52)"/><text x="22.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="708" width="10" height="15" fill="rgb(206,82,46)"/><text x="22.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (2 samples, 0.82%)</title><rect x="19" y="724" width="10" height="15" fill="rgb(237,126,52)"/><text x="22.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="19" y="740" width="10" height="15" fill="rgb(232,64,34)"/><text x="22.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="19" y="756" width="10" height="15" fill="rgb(236,1,7)"/><text x="22.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="19" y="772" width="10" height="15" fill="rgb(236,153,4)"/><text x="22.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="19" y="788" width="10" height="15" fill="rgb(235,112,46)"/><text x="22.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="19" y="804" width="10" height="15" fill="rgb(213,91,38)"/><text x="22.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.82%)</title><rect x="19" y="820" width="10" height="15" fill="rgb(243,142,21)"/><text x="22.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.82%)</title><rect x="19" y="836" width="10" height="15" fill="rgb(233,82,50)"/><text x="22.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (2 samples, 0.82%)</title><rect x="19" y="852" width="10" height="15" fill="rgb(221,21,17)"/><text x="22.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:624) (1 samples, 0.41%)</title><rect x="24" y="868" width="5" height="15" fill="rgb(236,55,41)"/><text x="27.00" y="878.50"></text></g><g><title>add (pkg_resources/__init__.py:704) (1 samples, 0.41%)</title><rect x="24" y="884" width="5" height="15" fill="rgb(248,107,22)"/><text x="27.00" y="894.50"></text></g><g><title>key (pkg_resources/__init__.py:2640) (1 samples, 0.41%)</title><rect x="24" y="900" width="5" height="15" fill="rgb(217,140,2)"/><text x="27.00" y="910.50"></text></g><g><title>__getattr__ (pkg_resources/__init__.py:2814) (1 samples, 0.41%)</title><rect x="24" y="916" width="5" height="15" fill="rgb(225,144,13)"/><text x="27.00" y="926.50"></text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.41%)</title><rect x="24" y="932" width="5" height="15" fill="rgb(230,96,44)"/><text x="27.00" y="942.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:4) (1 samples, 0.41%)</title><rect x="29" y="148" width="5" height="15" fill="rgb(243,144,47)"/><text x="32.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="164" width="5" height="15" fill="rgb(241,225,54)"/><text x="32.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="180" width="5" height="15" fill="rgb(251,40,25)"/><text x="32.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="196" width="5" height="15" fill="rgb(227,16,48)"/><text x="32.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="212" width="5" height="15" fill="rgb(213,25,16)"/><text x="32.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="228" width="5" height="15" fill="rgb(230,53,30)"/><text x="32.00" y="238.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/__init__.py:6) (1 samples, 0.41%)</title><rect x="29" y="244" width="5" height="15" fill="rgb(254,181,24)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="260" width="5" height="15" fill="rgb(232,195,14)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="276" width="5" height="15" fill="rgb(218,219,52)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="292" width="5" height="15" fill="rgb(250,18,30)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="308" width="5" height="15" fill="rgb(214,140,5)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="324" width="5" height="15" fill="rgb(238,16,34)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (sklearn/tree/_classes.py:40) (1 samples, 0.41%)</title><rect x="29" y="340" width="5" height="15" fill="rgb(232,171,34)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="356" width="5" height="15" fill="rgb(219,187,39)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="372" width="5" height="15" fill="rgb(216,190,16)"/><text x="32.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="388" width="5" height="15" fill="rgb(227,108,24)"/><text x="32.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.41%)</title><rect x="29" y="404" width="5" height="15" fill="rgb(243,33,12)"/><text x="32.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="420" width="5" height="15" fill="rgb(224,148,2)"/><text x="32.00" y="430.50"></text></g><g><title>0x7f21dac24373 (?) (1 samples, 0.41%)</title><rect x="29" y="436" width="5" height="15" fill="rgb(226,4,39)"/><text x="32.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="452" width="5" height="15" fill="rgb(223,76,1)"/><text x="32.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="468" width="5" height="15" fill="rgb(241,152,23)"/><text x="32.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="484" width="5" height="15" fill="rgb(249,84,45)"/><text x="32.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.41%)</title><rect x="29" y="500" width="5" height="15" fill="rgb(226,118,20)"/><text x="32.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="516" width="5" height="15" fill="rgb(228,37,36)"/><text x="32.00" y="526.50"></text></g><g><title>0x7f21da9e7eea (?) (1 samples, 0.41%)</title><rect x="29" y="532" width="5" height="15" fill="rgb(226,64,6)"/><text x="32.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="548" width="5" height="15" fill="rgb(222,11,48)"/><text x="32.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="564" width="5" height="15" fill="rgb(226,213,11)"/><text x="32.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="580" width="5" height="15" fill="rgb(247,228,7)"/><text x="32.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1050) (1 samples, 0.41%)</title><rect x="29" y="596" width="5" height="15" fill="rgb(242,90,53)"/><text x="32.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="612" width="5" height="15" fill="rgb(216,57,8)"/><text x="32.00" y="622.50"></text></g><g><title>0x7f21da780887 (?) (1 samples, 0.41%)</title><rect x="29" y="628" width="5" height="15" fill="rgb(245,221,13)"/><text x="32.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="644" width="5" height="15" fill="rgb(253,128,48)"/><text x="32.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.41%)</title><rect x="29" y="660" width="5" height="15" fill="rgb(215,107,13)"/><text x="32.00" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="676" width="5" height="15" fill="rgb(225,9,40)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="692" width="5" height="15" fill="rgb(221,194,9)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="708" width="5" height="15" fill="rgb(248,179,22)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="724" width="5" height="15" fill="rgb(242,158,48)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="740" width="5" height="15" fill="rgb(219,183,38)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="756" width="5" height="15" fill="rgb(222,192,4)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/__init__.py:9) (1 samples, 0.41%)</title><rect x="29" y="772" width="5" height="15" fill="rgb(222,179,43)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="788" width="5" height="15" fill="rgb(207,113,22)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="804" width="5" height="15" fill="rgb(233,62,40)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="820" width="5" height="15" fill="rgb(250,71,53)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="836" width="5" height="15" fill="rgb(216,87,29)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="852" width="5" height="15" fill="rgb(244,89,48)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_graph.py:7) (1 samples, 0.41%)</title><rect x="29" y="868" width="5" height="15" fill="rgb(237,208,41)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="884" width="5" height="15" fill="rgb(211,140,19)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="900" width="5" height="15" fill="rgb(243,177,31)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="916" width="5" height="15" fill="rgb(242,226,44)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="932" width="5" height="15" fill="rgb(244,6,38)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="948" width="5" height="15" fill="rgb(240,167,47)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (sklearn/neighbors/_base.py:24) (1 samples, 0.41%)</title><rect x="29" y="964" width="5" height="15" fill="rgb(252,143,46)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="980" width="5" height="15" fill="rgb(224,76,12)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="996" width="5" height="15" fill="rgb(224,59,40)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="1012" width="5" height="15" fill="rgb(215,47,22)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="1028" width="5" height="15" fill="rgb(231,91,32)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1044" width="5" height="15" fill="rgb(216,45,19)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/__init__.py:38) (1 samples, 0.41%)</title><rect x="29" y="1060" width="5" height="15" fill="rgb(225,195,34)"/><text x="32.00" y="1070.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="29" y="1076" width="5" height="15" fill="rgb(221,107,16)"/><text x="32.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1092" width="5" height="15" fill="rgb(212,67,21)"/><text x="32.00" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="1108" width="5" height="15" fill="rgb(233,53,45)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="1124" width="5" height="15" fill="rgb(221,148,2)"/><text x="32.00" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="1140" width="5" height="15" fill="rgb(205,6,3)"/><text x="32.00" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="1156" width="5" height="15" fill="rgb(210,37,40)"/><text x="32.00" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1172" width="5" height="15" fill="rgb(219,159,21)"/><text x="32.00" y="1182.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/__init__.py:8) (1 samples, 0.41%)</title><rect x="29" y="1188" width="5" height="15" fill="rgb(241,111,14)"/><text x="32.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="1204" width="5" height="15" fill="rgb(210,55,29)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="1220" width="5" height="15" fill="rgb(207,55,47)"/><text x="32.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="29" y="1236" width="5" height="15" fill="rgb(243,28,4)"/><text x="32.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="29" y="1252" width="5" height="15" fill="rgb(213,210,53)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1268" width="5" height="15" fill="rgb(239,110,4)"/><text x="32.00" y="1278.50"></text></g><g><title>&lt;module&gt; (sklearn/metrics/cluster/_supervised.py:23) (1 samples, 0.41%)</title><rect x="29" y="1284" width="5" height="15" fill="rgb(207,110,2)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="29" y="1300" width="5" height="15" fill="rgb(247,202,1)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="29" y="1316" width="5" height="15" fill="rgb(240,123,38)"/><text x="32.00" y="1326.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.41%)</title><rect x="29" y="1332" width="5" height="15" fill="rgb(227,87,18)"/><text x="32.00" y="1342.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.41%)</title><rect x="29" y="1348" width="5" height="15" fill="rgb(250,179,44)"/><text x="32.00" y="1358.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.41%)</title><rect x="29" y="1364" width="5" height="15" fill="rgb(229,66,19)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="29" y="1380" width="5" height="15" fill="rgb(248,76,10)"/><text x="32.00" y="1390.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1396" width="5" height="15" fill="rgb(232,73,42)"/><text x="32.00" y="1406.50"></text></g><g><title>0x7f22003bd995 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1412" width="5" height="15" fill="rgb(214,100,45)"/><text x="32.00" y="1422.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1428" width="5" height="15" fill="rgb(246,198,24)"/><text x="32.00" y="1438.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1444" width="5" height="15" fill="rgb(244,61,37)"/><text x="32.00" y="1454.50"></text></g><g><title>0x7f22003bd258 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1460" width="5" height="15" fill="rgb(230,21,40)"/><text x="32.00" y="1470.50"></text></g><g><title>0x7f220040ad7a (ld-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1476" width="5" height="15" fill="rgb(208,77,17)"/><text x="32.00" y="1486.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1492" width="5" height="15" fill="rgb(228,13,22)"/><text x="32.00" y="1502.50"></text></g><g><title>0x7f220040b18b (ld-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1508" width="5" height="15" fill="rgb(214,109,34)"/><text x="32.00" y="1518.50"></text></g><g><title>0x7f2200400ad9 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1524" width="5" height="15" fill="rgb(218,164,48)"/><text x="32.00" y="1534.50"></text></g><g><title>0x7f22004084c5 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1540" width="5" height="15" fill="rgb(236,39,0)"/><text x="32.00" y="1550.50"></text></g><g><title>0x7f2200413a04 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="29" y="1556" width="5" height="15" fill="rgb(226,101,8)"/><text x="32.00" y="1566.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.41%)</title><rect x="34" y="916" width="5" height="15" fill="rgb(223,209,38)"/><text x="37.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="932" width="5" height="15" fill="rgb(249,24,16)"/><text x="37.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="948" width="5" height="15" fill="rgb(234,132,4)"/><text x="37.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="964" width="5" height="15" fill="rgb(214,37,26)"/><text x="37.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="980" width="5" height="15" fill="rgb(244,95,19)"/><text x="37.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="996" width="5" height="15" fill="rgb(244,228,51)"/><text x="37.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.41%)</title><rect x="34" y="1012" width="5" height="15" fill="rgb(253,85,49)"/><text x="37.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1028" width="5" height="15" fill="rgb(213,97,46)"/><text x="37.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1044" width="5" height="15" fill="rgb(215,20,26)"/><text x="37.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1060" width="5" height="15" fill="rgb(212,134,27)"/><text x="37.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1076" width="5" height="15" fill="rgb(249,66,30)"/><text x="37.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1092" width="5" height="15" fill="rgb(254,154,42)"/><text x="37.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.41%)</title><rect x="34" y="1108" width="5" height="15" fill="rgb(235,50,0)"/><text x="37.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1124" width="5" height="15" fill="rgb(205,118,54)"/><text x="37.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1140" width="5" height="15" fill="rgb(239,228,29)"/><text x="37.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1156" width="5" height="15" fill="rgb(205,214,7)"/><text x="37.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1172" width="5" height="15" fill="rgb(230,77,36)"/><text x="37.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1188" width="5" height="15" fill="rgb(249,32,21)"/><text x="37.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.41%)</title><rect x="34" y="1204" width="5" height="15" fill="rgb(251,211,35)"/><text x="37.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1220" width="5" height="15" fill="rgb(223,56,11)"/><text x="37.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1236" width="5" height="15" fill="rgb(229,102,40)"/><text x="37.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1252" width="5" height="15" fill="rgb(254,115,14)"/><text x="37.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1268" width="5" height="15" fill="rgb(244,58,13)"/><text x="37.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1284" width="5" height="15" fill="rgb(205,22,17)"/><text x="37.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.41%)</title><rect x="34" y="1300" width="5" height="15" fill="rgb(251,186,36)"/><text x="37.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1316" width="5" height="15" fill="rgb(254,77,20)"/><text x="37.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1332" width="5" height="15" fill="rgb(242,171,41)"/><text x="37.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1348" width="5" height="15" fill="rgb(226,102,29)"/><text x="37.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1364" width="5" height="15" fill="rgb(233,193,37)"/><text x="37.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1380" width="5" height="15" fill="rgb(237,33,21)"/><text x="37.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.41%)</title><rect x="34" y="1396" width="5" height="15" fill="rgb(245,179,48)"/><text x="37.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1412" width="5" height="15" fill="rgb(250,12,46)"/><text x="37.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1428" width="5" height="15" fill="rgb(230,223,1)"/><text x="37.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1444" width="5" height="15" fill="rgb(249,110,32)"/><text x="37.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1460" width="5" height="15" fill="rgb(209,40,48)"/><text x="37.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1476" width="5" height="15" fill="rgb(244,43,25)"/><text x="37.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:13) (1 samples, 0.41%)</title><rect x="34" y="1492" width="5" height="15" fill="rgb(246,62,27)"/><text x="37.00" y="1502.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.41%)</title><rect x="34" y="1508" width="5" height="15" fill="rgb(231,117,50)"/><text x="37.00" y="1518.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1524" width="5" height="15" fill="rgb(253,20,20)"/><text x="37.00" y="1534.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1540" width="5" height="15" fill="rgb(250,27,39)"/><text x="37.00" y="1550.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1556" width="5" height="15" fill="rgb(252,141,1)"/><text x="37.00" y="1566.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1572" width="5" height="15" fill="rgb(223,72,22)"/><text x="37.00" y="1582.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1588" width="5" height="15" fill="rgb(242,134,7)"/><text x="37.00" y="1598.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1604" width="5" height="15" fill="rgb(248,29,50)"/><text x="37.00" y="1614.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/converter.py:6) (1 samples, 0.41%)</title><rect x="34" y="1620" width="5" height="15" fill="rgb(212,131,26)"/><text x="37.00" y="1630.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1636" width="5" height="15" fill="rgb(239,121,36)"/><text x="37.00" y="1646.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1652" width="5" height="15" fill="rgb(226,55,26)"/><text x="37.00" y="1662.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1668" width="5" height="15" fill="rgb(219,1,27)"/><text x="37.00" y="1678.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="34" y="1684" width="5" height="15" fill="rgb(248,105,54)"/><text x="37.00" y="1694.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="34" y="1700" width="5" height="15" fill="rgb(248,29,29)"/><text x="37.00" y="1710.50"></text></g><g><title>&lt;module&gt; (matplotlib/dates.py:147) (1 samples, 0.41%)</title><rect x="34" y="1716" width="5" height="15" fill="rgb(235,129,43)"/><text x="37.00" y="1726.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="34" y="1732" width="5" height="15" fill="rgb(248,23,35)"/><text x="37.00" y="1742.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="34" y="1748" width="5" height="15" fill="rgb(253,104,27)"/><text x="37.00" y="1758.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="34" y="1764" width="5" height="15" fill="rgb(208,179,7)"/><text x="37.00" y="1774.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="34" y="1780" width="5" height="15" fill="rgb(240,53,38)"/><text x="37.00" y="1790.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="34" y="1796" width="5" height="15" fill="rgb(250,23,51)"/><text x="37.00" y="1806.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="34" y="1812" width="5" height="15" fill="rgb(234,206,32)"/><text x="37.00" y="1822.50"></text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.41%)</title><rect x="34" y="1828" width="5" height="15" fill="rgb(212,173,11)"/><text x="37.00" y="1838.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 0.82%)</title><rect x="34" y="436" width="9" height="15" fill="rgb(236,138,21)"/><text x="37.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="34" y="452" width="9" height="15" fill="rgb(254,43,45)"/><text x="37.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="34" y="468" width="9" height="15" fill="rgb(216,80,40)"/><text x="37.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="34" y="484" width="9" height="15" fill="rgb(227,148,33)"/><text x="37.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="34" y="500" width="9" height="15" fill="rgb(226,181,30)"/><text x="37.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="34" y="516" width="9" height="15" fill="rgb(236,100,51)"/><text x="37.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 0.82%)</title><rect x="34" y="532" width="9" height="15" fill="rgb(208,63,18)"/><text x="37.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="34" y="548" width="9" height="15" fill="rgb(241,56,47)"/><text x="37.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="34" y="564" width="9" height="15" fill="rgb(221,69,6)"/><text x="37.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="34" y="580" width="9" height="15" fill="rgb(240,154,30)"/><text x="37.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="34" y="596" width="9" height="15" fill="rgb(239,205,33)"/><text x="37.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="34" y="612" width="9" height="15" fill="rgb(248,183,37)"/><text x="37.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (2 samples, 0.82%)</title><rect x="34" y="628" width="9" height="15" fill="rgb(245,17,36)"/><text x="37.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="34" y="644" width="9" height="15" fill="rgb(234,197,20)"/><text x="37.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="34" y="660" width="9" height="15" fill="rgb(220,14,54)"/><text x="37.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="34" y="676" width="9" height="15" fill="rgb(229,66,16)"/><text x="37.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="34" y="692" width="9" height="15" fill="rgb(237,100,17)"/><text x="37.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="34" y="708" width="9" height="15" fill="rgb(227,121,6)"/><text x="37.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (2 samples, 0.82%)</title><rect x="34" y="724" width="9" height="15" fill="rgb(247,17,17)"/><text x="37.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="34" y="740" width="9" height="15" fill="rgb(206,1,19)"/><text x="37.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="34" y="756" width="9" height="15" fill="rgb(213,74,17)"/><text x="37.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="34" y="772" width="9" height="15" fill="rgb(229,176,36)"/><text x="37.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="34" y="788" width="9" height="15" fill="rgb(253,0,40)"/><text x="37.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="34" y="804" width="9" height="15" fill="rgb(234,108,16)"/><text x="37.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (2 samples, 0.82%)</title><rect x="34" y="820" width="9" height="15" fill="rgb(249,143,45)"/><text x="37.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="34" y="836" width="9" height="15" fill="rgb(230,155,9)"/><text x="37.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="34" y="852" width="9" height="15" fill="rgb(223,58,34)"/><text x="37.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="34" y="868" width="9" height="15" fill="rgb(209,37,11)"/><text x="37.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="34" y="884" width="9" height="15" fill="rgb(241,210,20)"/><text x="37.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="34" y="900" width="9" height="15" fill="rgb(254,130,47)"/><text x="37.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:47) (1 samples, 0.41%)</title><rect x="39" y="916" width="4" height="15" fill="rgb(240,62,34)"/><text x="42.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="39" y="932" width="4" height="15" fill="rgb(205,83,23)"/><text x="42.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="39" y="948" width="4" height="15" fill="rgb(221,153,38)"/><text x="42.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="39" y="964" width="4" height="15" fill="rgb(232,76,53)"/><text x="42.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.41%)</title><rect x="39" y="980" width="4" height="15" fill="rgb(226,226,18)"/><text x="42.00" y="990.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.41%)</title><rect x="39" y="996" width="4" height="15" fill="rgb(248,217,20)"/><text x="42.00" y="1006.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.41%)</title><rect x="39" y="1012" width="4" height="15" fill="rgb(251,148,27)"/><text x="42.00" y="1022.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (1 samples, 0.41%)</title><rect x="43" y="1108" width="5" height="15" fill="rgb(251,88,0)"/><text x="46.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="43" y="1124" width="5" height="15" fill="rgb(254,36,4)"/><text x="46.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="43" y="1140" width="5" height="15" fill="rgb(241,108,34)"/><text x="46.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="43" y="1156" width="5" height="15" fill="rgb(254,133,26)"/><text x="46.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="43" y="1172" width="5" height="15" fill="rgb(229,121,5)"/><text x="46.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="43" y="1188" width="5" height="15" fill="rgb(236,144,29)"/><text x="46.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (1 samples, 0.41%)</title><rect x="43" y="1204" width="5" height="15" fill="rgb(247,194,35)"/><text x="46.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="43" y="1220" width="5" height="15" fill="rgb(227,36,17)"/><text x="46.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="43" y="1236" width="5" height="15" fill="rgb(245,62,7)"/><text x="46.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="43" y="1252" width="5" height="15" fill="rgb(242,172,7)"/><text x="46.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="43" y="1268" width="5" height="15" fill="rgb(249,207,38)"/><text x="46.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="43" y="1284" width="5" height="15" fill="rgb(207,36,36)"/><text x="46.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (1 samples, 0.41%)</title><rect x="43" y="1300" width="5" height="15" fill="rgb(245,180,47)"/><text x="46.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (1 samples, 0.41%)</title><rect x="43" y="1316" width="5" height="15" fill="rgb(232,137,34)"/><text x="46.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (1 samples, 0.41%)</title><rect x="43" y="1332" width="5" height="15" fill="rgb(224,53,12)"/><text x="46.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (1 samples, 0.41%)</title><rect x="43" y="1348" width="5" height="15" fill="rgb(237,210,44)"/><text x="46.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (1 samples, 0.41%)</title><rect x="43" y="1364" width="5" height="15" fill="rgb(254,175,43)"/><text x="46.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.41%)</title><rect x="43" y="1380" width="5" height="15" fill="rgb(252,55,25)"/><text x="46.00" y="1390.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.41%)</title><rect x="43" y="1396" width="5" height="15" fill="rgb(239,20,27)"/><text x="46.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.41%)</title><rect x="43" y="1412" width="5" height="15" fill="rgb(239,81,48)"/><text x="46.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.41%)</title><rect x="43" y="1428" width="5" height="15" fill="rgb(206,185,44)"/><text x="46.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.41%)</title><rect x="43" y="1444" width="5" height="15" fill="rgb(227,89,12)"/><text x="46.00" y="1454.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.41%)</title><rect x="43" y="1460" width="5" height="15" fill="rgb(222,141,34)"/><text x="46.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.41%)</title><rect x="43" y="1476" width="5" height="15" fill="rgb(213,76,1)"/><text x="46.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.41%)</title><rect x="43" y="1492" width="5" height="15" fill="rgb(217,123,11)"/><text x="46.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.41%)</title><rect x="43" y="1508" width="5" height="15" fill="rgb(228,6,37)"/><text x="46.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.41%)</title><rect x="43" y="1524" width="5" height="15" fill="rgb(240,12,25)"/><text x="46.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.41%)</title><rect x="43" y="1540" width="5" height="15" fill="rgb(206,107,1)"/><text x="46.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.41%)</title><rect x="43" y="1556" width="5" height="15" fill="rgb(232,33,53)"/><text x="46.00" y="1566.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.41%)</title><rect x="43" y="1572" width="5" height="15" fill="rgb(225,22,25)"/><text x="46.00" y="1582.50"></text></g><g><title>_compile (sre_compile.py:120) (1 samples, 0.41%)</title><rect x="43" y="1588" width="5" height="15" fill="rgb(232,145,47)"/><text x="46.00" y="1598.50"></text></g><g><title>_optimize_charset (sre_compile.py:347) (1 samples, 0.41%)</title><rect x="43" y="1604" width="5" height="15" fill="rgb(252,179,7)"/><text x="46.00" y="1614.50"></text></g><g><title>root (&lt;template&gt;:61) (1 samples, 0.41%)</title><rect x="48" y="1572" width="5" height="15" fill="rgb(206,219,5)"/><text x="51.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.41%)</title><rect x="48" y="1588" width="5" height="15" fill="rgb(254,6,41)"/><text x="51.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="48" y="1604" width="5" height="15" fill="rgb(240,164,0)"/><text x="51.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="48" y="1620" width="5" height="15" fill="rgb(209,218,11)"/><text x="51.00" y="1630.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute&gt;::cast&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="48" y="1636" width="5" height="15" fill="rgb(231,115,27)"/><text x="51.00" y="1646.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:4) (10 samples, 4.12%)</title><rect x="10" y="52" width="48" height="15" fill="rgb(239,184,30)"/><text x="13.00" y="62.50">&lt;mod..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 4.12%)</title><rect x="10" y="68" width="48" height="15" fill="rgb(246,82,5)"/><text x="13.00" y="78.50">_fin..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 4.12%)</title><rect x="10" y="84" width="48" height="15" fill="rgb(245,84,27)"/><text x="13.00" y="94.50">_fin..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 4.12%)</title><rect x="10" y="100" width="48" height="15" fill="rgb(218,205,4)"/><text x="13.00" y="110.50">_loa..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 4.12%)</title><rect x="10" y="116" width="48" height="15" fill="rgb(205,215,10)"/><text x="13.00" y="126.50">exec..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 4.12%)</title><rect x="10" y="132" width="48" height="15" fill="rgb(232,183,34)"/><text x="13.00" y="142.50">_cal..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (5 samples, 2.06%)</title><rect x="34" y="148" width="24" height="15" fill="rgb(208,20,13)"/><text x="37.00" y="158.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.06%)</title><rect x="34" y="164" width="24" height="15" fill="rgb(252,93,2)"/><text x="37.00" y="174.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.06%)</title><rect x="34" y="180" width="24" height="15" fill="rgb(230,16,31)"/><text x="37.00" y="190.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.06%)</title><rect x="34" y="196" width="24" height="15" fill="rgb(220,24,26)"/><text x="37.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.06%)</title><rect x="34" y="212" width="24" height="15" fill="rgb(247,211,0)"/><text x="37.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.06%)</title><rect x="34" y="228" width="24" height="15" fill="rgb(220,218,6)"/><text x="37.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (5 samples, 2.06%)</title><rect x="34" y="244" width="24" height="15" fill="rgb(233,208,41)"/><text x="37.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.06%)</title><rect x="34" y="260" width="24" height="15" fill="rgb(246,189,22)"/><text x="37.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.06%)</title><rect x="34" y="276" width="24" height="15" fill="rgb(230,101,15)"/><text x="37.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.06%)</title><rect x="34" y="292" width="24" height="15" fill="rgb(238,151,44)"/><text x="37.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.06%)</title><rect x="34" y="308" width="24" height="15" fill="rgb(235,66,53)"/><text x="37.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.06%)</title><rect x="34" y="324" width="24" height="15" fill="rgb(250,220,26)"/><text x="37.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (5 samples, 2.06%)</title><rect x="34" y="340" width="24" height="15" fill="rgb(218,36,38)"/><text x="37.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.06%)</title><rect x="34" y="356" width="24" height="15" fill="rgb(230,229,1)"/><text x="37.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.06%)</title><rect x="34" y="372" width="24" height="15" fill="rgb(208,151,52)"/><text x="37.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.06%)</title><rect x="34" y="388" width="24" height="15" fill="rgb(211,71,38)"/><text x="37.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.06%)</title><rect x="34" y="404" width="24" height="15" fill="rgb(244,189,29)"/><text x="37.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.06%)</title><rect x="34" y="420" width="24" height="15" fill="rgb(236,213,31)"/><text x="37.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (3 samples, 1.23%)</title><rect x="43" y="436" width="15" height="15" fill="rgb(247,154,34)"/><text x="46.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="452" width="15" height="15" fill="rgb(220,5,41)"/><text x="46.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.23%)</title><rect x="43" y="468" width="15" height="15" fill="rgb(223,184,30)"/><text x="46.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="484" width="15" height="15" fill="rgb(211,208,37)"/><text x="46.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="500" width="15" height="15" fill="rgb(237,59,18)"/><text x="46.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="43" y="516" width="15" height="15" fill="rgb(232,193,16)"/><text x="46.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="43" y="532" width="15" height="15" fill="rgb(242,65,3)"/><text x="46.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="43" y="548" width="15" height="15" fill="rgb(254,87,37)"/><text x="46.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="564" width="15" height="15" fill="rgb(254,216,24)"/><text x="46.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (3 samples, 1.23%)</title><rect x="43" y="580" width="15" height="15" fill="rgb(247,47,36)"/><text x="46.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="596" width="15" height="15" fill="rgb(208,97,52)"/><text x="46.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="43" y="612" width="15" height="15" fill="rgb(239,103,40)"/><text x="46.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="43" y="628" width="15" height="15" fill="rgb(226,107,44)"/><text x="46.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="43" y="644" width="15" height="15" fill="rgb(247,98,48)"/><text x="46.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="660" width="15" height="15" fill="rgb(237,170,8)"/><text x="46.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (3 samples, 1.23%)</title><rect x="43" y="676" width="15" height="15" fill="rgb(228,103,42)"/><text x="46.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="692" width="15" height="15" fill="rgb(205,29,23)"/><text x="46.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="43" y="708" width="15" height="15" fill="rgb(240,77,51)"/><text x="46.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="43" y="724" width="15" height="15" fill="rgb(251,180,19)"/><text x="46.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="43" y="740" width="15" height="15" fill="rgb(233,60,38)"/><text x="46.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="756" width="15" height="15" fill="rgb(246,74,13)"/><text x="46.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (3 samples, 1.23%)</title><rect x="43" y="772" width="15" height="15" fill="rgb(239,210,0)"/><text x="46.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="788" width="15" height="15" fill="rgb(251,8,39)"/><text x="46.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="43" y="804" width="15" height="15" fill="rgb(247,79,40)"/><text x="46.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="43" y="820" width="15" height="15" fill="rgb(227,223,48)"/><text x="46.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="43" y="836" width="15" height="15" fill="rgb(235,164,19)"/><text x="46.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="852" width="15" height="15" fill="rgb(234,194,33)"/><text x="46.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (3 samples, 1.23%)</title><rect x="43" y="868" width="15" height="15" fill="rgb(240,2,4)"/><text x="46.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="884" width="15" height="15" fill="rgb(244,181,28)"/><text x="46.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.23%)</title><rect x="43" y="900" width="15" height="15" fill="rgb(215,202,51)"/><text x="46.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="916" width="15" height="15" fill="rgb(214,177,49)"/><text x="46.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="932" width="15" height="15" fill="rgb(209,206,49)"/><text x="46.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="43" y="948" width="15" height="15" fill="rgb(250,209,22)"/><text x="46.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="43" y="964" width="15" height="15" fill="rgb(220,109,3)"/><text x="46.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="43" y="980" width="15" height="15" fill="rgb(207,36,50)"/><text x="46.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="996" width="15" height="15" fill="rgb(219,53,11)"/><text x="46.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (3 samples, 1.23%)</title><rect x="43" y="1012" width="15" height="15" fill="rgb(215,170,52)"/><text x="46.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.23%)</title><rect x="43" y="1028" width="15" height="15" fill="rgb(220,90,29)"/><text x="46.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.23%)</title><rect x="43" y="1044" width="15" height="15" fill="rgb(224,190,24)"/><text x="46.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.23%)</title><rect x="43" y="1060" width="15" height="15" fill="rgb(224,194,23)"/><text x="46.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.23%)</title><rect x="43" y="1076" width="15" height="15" fill="rgb(252,222,26)"/><text x="46.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.23%)</title><rect x="43" y="1092" width="15" height="15" fill="rgb(225,38,9)"/><text x="46.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (2 samples, 0.82%)</title><rect x="48" y="1108" width="10" height="15" fill="rgb(234,125,11)"/><text x="51.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.82%)</title><rect x="48" y="1124" width="10" height="15" fill="rgb(219,23,7)"/><text x="51.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="48" y="1140" width="10" height="15" fill="rgb(207,19,44)"/><text x="51.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="48" y="1156" width="10" height="15" fill="rgb(243,19,36)"/><text x="51.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="48" y="1172" width="10" height="15" fill="rgb(223,92,33)"/><text x="51.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="48" y="1188" width="10" height="15" fill="rgb(217,209,19)"/><text x="51.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="48" y="1204" width="10" height="15" fill="rgb(218,80,17)"/><text x="51.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="48" y="1220" width="10" height="15" fill="rgb(241,189,28)"/><text x="51.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (2 samples, 0.82%)</title><rect x="48" y="1236" width="10" height="15" fill="rgb(254,126,2)"/><text x="51.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.82%)</title><rect x="48" y="1252" width="10" height="15" fill="rgb(220,167,10)"/><text x="51.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="48" y="1268" width="10" height="15" fill="rgb(241,212,36)"/><text x="51.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="48" y="1284" width="10" height="15" fill="rgb(249,51,13)"/><text x="51.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="48" y="1300" width="10" height="15" fill="rgb(239,137,27)"/><text x="51.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="48" y="1316" width="10" height="15" fill="rgb(226,170,33)"/><text x="51.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="48" y="1332" width="10" height="15" fill="rgb(235,14,37)"/><text x="51.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="48" y="1348" width="10" height="15" fill="rgb(236,167,29)"/><text x="51.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (2 samples, 0.82%)</title><rect x="48" y="1364" width="10" height="15" fill="rgb(252,139,6)"/><text x="51.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.82%)</title><rect x="48" y="1380" width="10" height="15" fill="rgb(239,71,14)"/><text x="51.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.82%)</title><rect x="48" y="1396" width="10" height="15" fill="rgb(234,108,5)"/><text x="51.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.82%)</title><rect x="48" y="1412" width="10" height="15" fill="rgb(224,210,18)"/><text x="51.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.82%)</title><rect x="48" y="1428" width="10" height="15" fill="rgb(248,120,48)"/><text x="51.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.82%)</title><rect x="48" y="1444" width="10" height="15" fill="rgb(250,3,38)"/><text x="51.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (2 samples, 0.82%)</title><rect x="48" y="1460" width="10" height="15" fill="rgb(241,32,20)"/><text x="51.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (2 samples, 0.82%)</title><rect x="48" y="1476" width="10" height="15" fill="rgb(207,43,0)"/><text x="51.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (2 samples, 0.82%)</title><rect x="48" y="1492" width="10" height="15" fill="rgb(242,154,50)"/><text x="51.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (2 samples, 0.82%)</title><rect x="48" y="1508" width="10" height="15" fill="rgb(216,39,18)"/><text x="51.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (2 samples, 0.82%)</title><rect x="48" y="1524" width="10" height="15" fill="rgb(248,8,54)"/><text x="51.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (2 samples, 0.82%)</title><rect x="48" y="1540" width="10" height="15" fill="rgb(247,157,34)"/><text x="51.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (2 samples, 0.82%)</title><rect x="48" y="1556" width="10" height="15" fill="rgb(219,159,20)"/><text x="51.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:75) (1 samples, 0.41%)</title><rect x="53" y="1572" width="5" height="15" fill="rgb(242,135,40)"/><text x="56.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.41%)</title><rect x="53" y="1588" width="5" height="15" fill="rgb(208,15,54)"/><text x="56.00" y="1598.50"></text></g><g><title>_Attribute_default_value (onnx/defs/__init__.py:39) (1 samples, 0.41%)</title><rect x="53" y="1604" width="5" height="15" fill="rgb(251,125,21)"/><text x="56.00" y="1614.50"></text></g><g><title>google::protobuf::python::cmessage::InitAttributes (protobuf/pyext/_message.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="53" y="1620" width="5" height="15" fill="rgb(223,62,47)"/><text x="56.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:47) (1 samples, 0.41%)</title><rect x="58" y="52" width="5" height="15" fill="rgb(228,125,0)"/><text x="61.00" y="62.50"></text></g><g><title>profile0_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:46) (1 samples, 0.41%)</title><rect x="58" y="68" width="5" height="15" fill="rgb(249,217,23)"/><text x="61.00" y="78.50"></text></g><g><title>setup_profile0 (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:25) (1 samples, 0.41%)</title><rect x="58" y="84" width="5" height="15" fill="rgb(232,82,42)"/><text x="61.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:164) (1 samples, 0.41%)</title><rect x="58" y="100" width="5" height="15" fill="rgb(242,210,41)"/><text x="61.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py:189) (1 samples, 0.41%)</title><rect x="58" y="116" width="5" height="15" fill="rgb(205,55,3)"/><text x="61.00" y="126.50"></text></g><g><title>_register_converters_xgboost (mlprodict/onnx_conv/register.py:138) (1 samples, 0.41%)</title><rect x="58" y="132" width="5" height="15" fill="rgb(249,219,23)"/><text x="61.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="148" width="5" height="15" fill="rgb(246,36,30)"/><text x="61.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="164" width="5" height="15" fill="rgb(206,4,16)"/><text x="61.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="180" width="5" height="15" fill="rgb(240,89,31)"/><text x="61.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="196" width="5" height="15" fill="rgb(211,7,0)"/><text x="61.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="212" width="5" height="15" fill="rgb(213,224,19)"/><text x="61.00" y="222.50"></text></g><g><title>&lt;module&gt; (xgboost/__init__.py:11) (1 samples, 0.41%)</title><rect x="58" y="228" width="5" height="15" fill="rgb(249,25,35)"/><text x="61.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="58" y="244" width="5" height="15" fill="rgb(245,88,14)"/><text x="61.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="58" y="260" width="5" height="15" fill="rgb(224,196,34)"/><text x="61.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="58" y="276" width="5" height="15" fill="rgb(227,30,39)"/><text x="61.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="58" y="292" width="5" height="15" fill="rgb(215,228,15)"/><text x="61.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="58" y="308" width="5" height="15" fill="rgb(210,168,8)"/><text x="61.00" y="318.50"></text></g><g><title>&lt;module&gt; (xgboost/core.py:161) (1 samples, 0.41%)</title><rect x="58" y="324" width="5" height="15" fill="rgb(228,191,26)"/><text x="61.00" y="334.50"></text></g><g><title>_load_lib (xgboost/core.py:136) (1 samples, 0.41%)</title><rect x="58" y="340" width="5" height="15" fill="rgb(212,44,27)"/><text x="61.00" y="350.50"></text></g><g><title>LoadLibrary (ctypes/__init__.py:434) (1 samples, 0.41%)</title><rect x="58" y="356" width="5" height="15" fill="rgb(209,200,28)"/><text x="61.00" y="366.50"></text></g><g><title>__init__ (ctypes/__init__.py:356) (1 samples, 0.41%)</title><rect x="58" y="372" width="5" height="15" fill="rgb(220,216,19)"/><text x="61.00" y="382.50"></text></g><g><title>py_dl_open (callproc.c:1366) (1 samples, 0.41%)</title><rect x="58" y="388" width="5" height="15" fill="rgb(234,147,15)"/><text x="61.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="404" width="5" height="15" fill="rgb(246,195,27)"/><text x="61.00" y="414.50"></text></g><g><title>0x7f22003bd995 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="420" width="5" height="15" fill="rgb(207,210,10)"/><text x="61.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="436" width="5" height="15" fill="rgb(216,87,7)"/><text x="61.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="452" width="5" height="15" fill="rgb(239,161,51)"/><text x="61.00" y="462.50"></text></g><g><title>0x7f22003bd258 (libdl-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="468" width="5" height="15" fill="rgb(233,93,49)"/><text x="61.00" y="478.50"></text></g><g><title>0x7f220040ad7a (ld-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="484" width="5" height="15" fill="rgb(215,184,40)"/><text x="61.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="500" width="5" height="15" fill="rgb(205,59,42)"/><text x="61.00" y="510.50"></text></g><g><title>0x7f220040b345 (ld-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="516" width="5" height="15" fill="rgb(228,96,16)"/><text x="61.00" y="526.50"></text></g><g><title>0x7f2200403fec (ld-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="532" width="5" height="15" fill="rgb(244,20,21)"/><text x="61.00" y="542.50"></text></g><g><title>0x7f220040256b (ld-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="548" width="5" height="15" fill="rgb(249,221,51)"/><text x="61.00" y="558.50"></text></g><g><title>0x7f2200401bba (ld-2.29.so) (1 samples, 0.41%)</title><rect x="58" y="564" width="5" height="15" fill="rgb(223,76,25)"/><text x="61.00" y="574.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.41%)</title><rect x="63" y="116" width="5" height="15" fill="rgb(208,7,45)"/><text x="66.00" y="126.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.41%)</title><rect x="63" y="132" width="5" height="15" fill="rgb(250,128,38)"/><text x="66.00" y="142.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.41%)</title><rect x="63" y="148" width="5" height="15" fill="rgb(207,142,29)"/><text x="66.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (2 samples, 0.82%)</title><rect x="82" y="164" width="10" height="15" fill="rgb(247,171,41)"/><text x="85.00" y="174.50"></text></g><g><title>isclass (inspect.py:78) (2 samples, 0.82%)</title><rect x="82" y="180" width="10" height="15" fill="rgb(221,3,6)"/><text x="85.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:940) (1 samples, 0.41%)</title><rect x="92" y="164" width="5" height="15" fill="rgb(238,168,40)"/><text x="95.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (4 samples, 1.65%)</title><rect x="102" y="180" width="19" height="15" fill="rgb(240,106,40)"/><text x="105.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.65%)</title><rect x="136" y="196" width="19" height="15" fill="rgb(227,87,23)"/><text x="139.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (10 samples, 4.12%)</title><rect x="121" y="180" width="49" height="15" fill="rgb(213,128,40)"/><text x="124.00" y="190.50">&lt;lis..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.23%)</title><rect x="155" y="196" width="15" height="15" fill="rgb(226,55,48)"/><text x="158.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (20 samples, 8.23%)</title><rect x="77" y="148" width="98" height="15" fill="rgb(250,27,8)"/><text x="80.00" y="158.50">predict (sk..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (16 samples, 6.58%)</title><rect x="97" y="164" width="78" height="15" fill="rgb(218,90,6)"/><text x="100.00" y="174.50">check_is_..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (1 samples, 0.41%)</title><rect x="170" y="180" width="5" height="15" fill="rgb(219,25,54)"/><text x="173.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.41%)</title><rect x="184" y="180" width="5" height="15" fill="rgb(230,118,34)"/><text x="187.00" y="190.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.41%)</title><rect x="184" y="196" width="5" height="15" fill="rgb(228,121,15)"/><text x="187.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (2 samples, 0.82%)</title><rect x="189" y="180" width="10" height="15" fill="rgb(224,167,47)"/><text x="192.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:456) (1 samples, 0.41%)</title><rect x="199" y="180" width="5" height="15" fill="rgb(238,127,33)"/><text x="202.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.41%)</title><rect x="204" y="180" width="5" height="15" fill="rgb(250,30,26)"/><text x="207.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.41%)</title><rect x="209" y="180" width="4" height="15" fill="rgb(235,214,48)"/><text x="212.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:487) (1 samples, 0.41%)</title><rect x="213" y="180" width="5" height="15" fill="rgb(234,192,34)"/><text x="216.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.41%)</title><rect x="218" y="180" width="5" height="15" fill="rgb(232,20,28)"/><text x="221.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.41%)</title><rect x="218" y="196" width="5" height="15" fill="rgb(252,2,23)"/><text x="221.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.82%)</title><rect x="233" y="196" width="10" height="15" fill="rgb(252,227,14)"/><text x="236.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.41%)</title><rect x="243" y="196" width="4" height="15" fill="rgb(243,20,28)"/><text x="246.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:482) (1 samples, 0.41%)</title><rect x="247" y="196" width="5" height="15" fill="rgb(236,213,24)"/><text x="250.00" y="206.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.41%)</title><rect x="252" y="196" width="5" height="15" fill="rgb(225,127,4)"/><text x="255.00" y="206.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.41%)</title><rect x="257" y="196" width="5" height="15" fill="rgb(248,157,3)"/><text x="260.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (9 samples, 3.70%)</title><rect x="223" y="180" width="44" height="15" fill="rgb(217,17,48)"/><text x="226.00" y="190.50">chec..</text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.41%)</title><rect x="262" y="196" width="5" height="15" fill="rgb(227,76,12)"/><text x="265.00" y="206.50"></text></g><g><title>simplefilter (warnings.py:177) (1 samples, 0.41%)</title><rect x="267" y="196" width="5" height="15" fill="rgb(252,116,2)"/><text x="270.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.65%)</title><rect x="281" y="212" width="20" height="15" fill="rgb(252,219,35)"/><text x="284.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 3.29%)</title><rect x="267" y="180" width="39" height="15" fill="rgb(236,4,26)"/><text x="270.00" y="190.50">che..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 2.88%)</title><rect x="272" y="196" width="34" height="15" fill="rgb(244,171,25)"/><text x="275.00" y="206.50">si..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.41%)</title><rect x="301" y="212" width="5" height="15" fill="rgb(220,62,37)"/><text x="304.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (6 samples, 2.47%)</title><rect x="306" y="180" width="29" height="15" fill="rgb(206,60,10)"/><text x="309.00" y="190.50">ch..</text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.41%)</title><rect x="330" y="196" width="5" height="15" fill="rgb(245,222,37)"/><text x="333.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 1.65%)</title><rect x="335" y="180" width="19" height="15" fill="rgb(219,212,4)"/><text x="338.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 0.82%)</title><rect x="345" y="196" width="9" height="15" fill="rgb(217,25,14)"/><text x="348.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.41%)</title><rect x="349" y="212" width="5" height="15" fill="rgb(213,25,39)"/><text x="352.00" y="222.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.41%)</title><rect x="359" y="196" width="5" height="15" fill="rgb(246,35,4)"/><text x="362.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 1.23%)</title><rect x="354" y="180" width="15" height="15" fill="rgb(211,114,47)"/><text x="357.00" y="190.50"></text></g><g><title>__exit__ (warnings.py:499) (1 samples, 0.41%)</title><rect x="364" y="196" width="5" height="15" fill="rgb(249,136,30)"/><text x="367.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (1 samples, 0.41%)</title><rect x="369" y="180" width="5" height="15" fill="rgb(218,177,12)"/><text x="372.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:332) (1 samples, 0.41%)</title><rect x="369" y="196" width="5" height="15" fill="rgb(212,108,15)"/><text x="372.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:528) (2 samples, 0.82%)</title><rect x="374" y="180" width="9" height="15" fill="rgb(225,93,8)"/><text x="377.00" y="190.50"></text></g><g><title>0x7f220014be7a (libc-2.29.so) (1 samples, 0.41%)</title><rect x="413" y="212" width="4" height="15" fill="rgb(226,203,49)"/><text x="416.00" y="222.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.82%)</title><rect x="417" y="212" width="10" height="15" fill="rgb(247,171,26)"/><text x="420.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (10 samples, 4.12%)</title><rect x="383" y="180" width="49" height="15" fill="rgb(228,89,40)"/><text x="386.00" y="190.50">chec..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 3.29%)</title><rect x="393" y="196" width="39" height="15" fill="rgb(233,125,31)"/><text x="396.00" y="206.50">_as..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:419) (1 samples, 0.41%)</title><rect x="427" y="212" width="5" height="15" fill="rgb(229,75,38)"/><text x="430.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (8 samples, 3.29%)</title><rect x="432" y="196" width="39" height="15" fill="rgb(244,110,9)"/><text x="435.00" y="206.50">_nu..</text></g><g><title>0x7f220014bb60 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="466" y="212" width="5" height="15" fill="rgb(253,71,48)"/><text x="469.00" y="222.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (71 samples, 29.22%)</title><rect x="175" y="164" width="344" height="15" fill="rgb(254,57,5)"/><text x="178.00" y="174.50">_validate_X_predict (sklearn/tree/_classes.py:..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (18 samples, 7.41%)</title><rect x="432" y="180" width="87" height="15" fill="rgb(223,107,33)"/><text x="435.00" y="190.50">check_arra..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (10 samples, 4.12%)</title><rect x="471" y="196" width="48" height="15" fill="rgb(226,115,19)"/><text x="474.00" y="206.50">_num..</text></g><g><title>__instancecheck__ (abc.py:139) (8 samples, 3.29%)</title><rect x="481" y="212" width="38" height="15" fill="rgb(221,156,34)"/><text x="484.00" y="222.50">__i..</text></g><g><title>__subclasscheck__ (abc.py:143) (5 samples, 2.06%)</title><rect x="495" y="228" width="24" height="15" fill="rgb(207,76,4)"/><text x="498.00" y="238.50">_..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:386) (2 samples, 0.82%)</title><rect x="519" y="164" width="10" height="15" fill="rgb(241,200,10)"/><text x="522.00" y="174.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (2 samples, 0.82%)</title><rect x="519" y="180" width="10" height="15" fill="rgb(210,184,19)"/><text x="522.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (74 samples, 30.45%)</title><rect x="175" y="148" width="359" height="15" fill="rgb(205,184,25)"/><text x="178.00" y="158.50">predict (sklearn/tree/_classes.py:419)</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:387) (1 samples, 0.41%)</title><rect x="529" y="164" width="5" height="15" fill="rgb(218,42,48)"/><text x="532.00" y="174.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.41%)</title><rect x="544" y="244" width="5" height="15" fill="rgb(212,61,44)"/><text x="547.00" y="254.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:169) (1 samples, 0.41%)</title><rect x="544" y="260" width="5" height="15" fill="rgb(217,31,42)"/><text x="547.00" y="270.50"></text></g><g><title>0x7f21da790d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="544" y="196" width="9" height="15" fill="rgb(221,32,9)"/><text x="547.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.82%)</title><rect x="544" y="212" width="9" height="15" fill="rgb(218,114,7)"/><text x="547.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (2 samples, 0.82%)</title><rect x="544" y="228" width="9" height="15" fill="rgb(235,53,37)"/><text x="547.00" y="238.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:69) (1 samples, 0.41%)</title><rect x="549" y="244" width="4" height="15" fill="rgb(237,0,9)"/><text x="552.00" y="254.50"></text></g><g><title>IsAligned (array_assign.c:140) (1 samples, 0.41%)</title><rect x="549" y="260" width="4" height="15" fill="rgb(229,210,26)"/><text x="552.00" y="270.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h:1504) (1 samples, 0.41%)</title><rect x="549" y="276" width="4" height="15" fill="rgb(244,197,46)"/><text x="552.00" y="286.50"></text></g><g><title>0x7f21da7a0f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="544" y="180" width="14" height="15" fill="rgb(223,60,37)"/><text x="547.00" y="190.50"></text></g><g><title>0x7f21da790d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="553" y="196" width="5" height="15" fill="rgb(222,188,45)"/><text x="556.00" y="206.50"></text></g><g><title>0x7f21da77db8c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="553" y="212" width="5" height="15" fill="rgb(241,175,47)"/><text x="556.00" y="222.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.41%)</title><rect x="563" y="292" width="5" height="15" fill="rgb(240,137,22)"/><text x="566.00" y="302.50"></text></g><g><title>0x7f21da7af2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="558" y="212" width="15" height="15" fill="rgb(206,148,20)"/><text x="561.00" y="222.50"></text></g><g><title>0x7f21da793d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="558" y="228" width="15" height="15" fill="rgb(212,192,41)"/><text x="561.00" y="238.50"></text></g><g><title>0x7f21da793666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="558" y="244" width="15" height="15" fill="rgb(243,119,19)"/><text x="561.00" y="254.50"></text></g><g><title>0x7f21da7892fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="558" y="260" width="15" height="15" fill="rgb(247,204,26)"/><text x="561.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.82%)</title><rect x="563" y="276" width="10" height="15" fill="rgb(244,102,44)"/><text x="566.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:672) (1 samples, 0.41%)</title><rect x="568" y="292" width="5" height="15" fill="rgb(225,201,42)"/><text x="571.00" y="302.50"></text></g><g><title>_buffer_info_free (buffer.c:632) (1 samples, 0.41%)</title><rect x="568" y="308" width="5" height="15" fill="rgb(219,65,21)"/><text x="571.00" y="318.50"></text></g><g><title>0x7f2200135902 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="568" y="324" width="5" height="15" fill="rgb(219,29,9)"/><text x="571.00" y="334.50"></text></g><g><title>0x7f21da7af521 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="573" y="212" width="5" height="15" fill="rgb(217,6,5)"/><text x="576.00" y="222.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.41%)</title><rect x="587" y="244" width="5" height="15" fill="rgb(228,178,54)"/><text x="590.00" y="254.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.41%)</title><rect x="587" y="260" width="5" height="15" fill="rgb(245,182,29)"/><text x="590.00" y="270.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4583) (1 samples, 0.41%)</title><rect x="587" y="276" width="5" height="15" fill="rgb(251,182,16)"/><text x="590.00" y="286.50"></text></g><g><title>get_typeobj_idx (scalartypes.c.src:4560) (1 samples, 0.41%)</title><rect x="587" y="292" width="5" height="15" fill="rgb(247,84,45)"/><text x="590.00" y="302.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.41%)</title><rect x="592" y="244" width="5" height="15" fill="rgb(233,7,33)"/><text x="595.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:132) (1 samples, 0.41%)</title><rect x="597" y="244" width="5" height="15" fill="rgb(225,133,45)"/><text x="600.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c:974) (1 samples, 0.41%)</title><rect x="597" y="260" width="5" height="15" fill="rgb(246,191,11)"/><text x="600.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (6 samples, 2.47%)</title><rect x="578" y="228" width="29" height="15" fill="rgb(221,160,53)"/><text x="581.00" y="238.50">ar..</text></g><g><title>PyArray_IntpConverter (conversion_utils.c:96) (1 samples, 0.41%)</title><rect x="602" y="244" width="5" height="15" fill="rgb(209,205,48)"/><text x="605.00" y="254.50"></text></g><g><title>0x7f21da7af592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (7 samples, 2.88%)</title><rect x="578" y="212" width="34" height="15" fill="rgb(206,9,50)"/><text x="581.00" y="222.50">0x..</text></g><g><title>array_zeros (multiarraymodule.c:1996) (1 samples, 0.41%)</title><rect x="607" y="228" width="5" height="15" fill="rgb(235,82,47)"/><text x="610.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.41%)</title><rect x="607" y="244" width="5" height="15" fill="rgb(250,85,10)"/><text x="610.00" y="254.50"></text></g><g><title>PyArray_Zeros (ctors.c:3071) (1 samples, 0.41%)</title><rect x="607" y="260" width="5" height="15" fill="rgb(238,188,23)"/><text x="610.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1085) (1 samples, 0.41%)</title><rect x="607" y="276" width="5" height="15" fill="rgb(230,159,30)"/><text x="610.00" y="286.50"></text></g><g><title>npy_alloc_cache_zero (alloc.c:128) (1 samples, 0.41%)</title><rect x="607" y="292" width="5" height="15" fill="rgb(207,84,51)"/><text x="610.00" y="302.50"></text></g><g><title>0x7f21da7af8c3 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="612" y="212" width="4" height="15" fill="rgb(208,77,17)"/><text x="615.00" y="222.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.41%)</title><rect x="616" y="260" width="5" height="15" fill="rgb(212,173,22)"/><text x="619.00" y="270.50"></text></g><g><title>_buffer_info_new (buffer.c:517) (1 samples, 0.41%)</title><rect x="616" y="276" width="5" height="15" fill="rgb(245,16,30)"/><text x="619.00" y="286.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.41%)</title><rect x="616" y="292" width="5" height="15" fill="rgb(212,134,39)"/><text x="619.00" y="302.50"></text></g><g><title>0x7f21da7b0405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (14 samples, 5.76%)</title><rect x="558" y="196" width="68" height="15" fill="rgb(205,35,16)"/><text x="561.00" y="206.50">0x7f21d..</text></g><g><title>0x7f21da7afc27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="616" y="212" width="10" height="15" fill="rgb(236,34,19)"/><text x="619.00" y="222.50"></text></g><g><title>0x7f21da787529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="616" y="228" width="10" height="15" fill="rgb(225,162,10)"/><text x="619.00" y="238.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.82%)</title><rect x="616" y="244" width="10" height="15" fill="rgb(244,218,25)"/><text x="619.00" y="254.50"></text></g><g><title>_buffer_get_info (buffer.c:690) (1 samples, 0.41%)</title><rect x="621" y="260" width="5" height="15" fill="rgb(222,61,47)"/><text x="624.00" y="270.50"></text></g><g><title>0x7f21da7851e8 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="631" y="212" width="5" height="15" fill="rgb(207,134,17)"/><text x="634.00" y="222.50"></text></g><g><title>0x7f21da7a0fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (17 samples, 7.00%)</title><rect x="558" y="180" width="83" height="15" fill="rgb(250,153,47)"/><text x="561.00" y="190.50">0x7f21da7..</text></g><g><title>0x7f21da7b0540 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="626" y="196" width="15" height="15" fill="rgb(239,153,26)"/><text x="629.00" y="206.50"></text></g><g><title>0x7f21da7852f0 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="636" y="212" width="5" height="15" fill="rgb(235,165,24)"/><text x="639.00" y="222.50"></text></g><g><title>0x7f21da784530 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="636" y="228" width="5" height="15" fill="rgb(231,172,48)"/><text x="639.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.41%)</title><rect x="636" y="244" width="5" height="15" fill="rgb(218,103,48)"/><text x="639.00" y="254.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.41%)</title><rect x="641" y="212" width="5" height="15" fill="rgb(208,175,36)"/><text x="644.00" y="222.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.41%)</title><rect x="641" y="228" width="5" height="15" fill="rgb(214,81,48)"/><text x="644.00" y="238.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.41%)</title><rect x="641" y="244" width="5" height="15" fill="rgb(209,192,41)"/><text x="644.00" y="254.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 0.82%)</title><rect x="641" y="196" width="9" height="15" fill="rgb(220,38,30)"/><text x="644.00" y="206.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:650) (1 samples, 0.41%)</title><rect x="646" y="212" width="4" height="15" fill="rgb(219,50,47)"/><text x="649.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3896) (1 samples, 0.41%)</title><rect x="650" y="228" width="5" height="15" fill="rgb(229,193,19)"/><text x="653.00" y="238.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (2 samples, 0.82%)</title><rect x="650" y="212" width="10" height="15" fill="rgb(212,133,45)"/><text x="653.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.41%)</title><rect x="655" y="228" width="5" height="15" fill="rgb(207,41,21)"/><text x="658.00" y="238.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.41%)</title><rect x="655" y="244" width="5" height="15" fill="rgb(213,184,40)"/><text x="658.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:241) (1 samples, 0.41%)</title><rect x="660" y="212" width="5" height="15" fill="rgb(217,64,37)"/><text x="663.00" y="222.50"></text></g><g><title>0x7f21da7a105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.47%)</title><rect x="641" y="180" width="29" height="15" fill="rgb(229,28,7)"/><text x="644.00" y="190.50">0x..</text></g><g><title>array_take (methods.c:145) (4 samples, 1.65%)</title><rect x="650" y="196" width="20" height="15" fill="rgb(212,108,51)"/><text x="653.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:86) (1 samples, 0.41%)</title><rect x="665" y="212" width="5" height="15" fill="rgb(247,53,20)"/><text x="668.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.41%)</title><rect x="665" y="228" width="5" height="15" fill="rgb(217,131,31)"/><text x="668.00" y="238.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.41%)</title><rect x="665" y="244" width="5" height="15" fill="rgb(219,9,54)"/><text x="668.00" y="254.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.41%)</title><rect x="665" y="260" width="5" height="15" fill="rgb(227,86,36)"/><text x="668.00" y="270.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:136) (1 samples, 0.41%)</title><rect x="665" y="276" width="5" height="15" fill="rgb(244,17,34)"/><text x="668.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:728) (1 samples, 0.41%)</title><rect x="670" y="228" width="5" height="15" fill="rgb(232,106,35)"/><text x="673.00" y="238.50"></text></g><g><title>_buffer_info_free (buffer.c:629) (1 samples, 0.41%)</title><rect x="670" y="244" width="5" height="15" fill="rgb(227,196,7)"/><text x="673.00" y="254.50"></text></g><g><title>0x7f21da7a114f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.23%)</title><rect x="670" y="180" width="14" height="15" fill="rgb(252,102,0)"/><text x="673.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (3 samples, 1.23%)</title><rect x="670" y="196" width="14" height="15" fill="rgb(244,184,23)"/><text x="673.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (3 samples, 1.23%)</title><rect x="670" y="212" width="14" height="15" fill="rgb(244,226,43)"/><text x="673.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (2 samples, 0.82%)</title><rect x="675" y="228" width="9" height="15" fill="rgb(251,105,3)"/><text x="678.00" y="238.50"></text></g><g><title>0x7f21da7a118f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.82%)</title><rect x="684" y="180" width="10" height="15" fill="rgb(210,11,18)"/><text x="687.00" y="190.50"></text></g><g><title>0x7f21da7a119f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="694" y="180" width="5" height="15" fill="rgb(208,192,21)"/><text x="697.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (35 samples, 14.40%)</title><rect x="534" y="148" width="170" height="15" fill="rgb(220,67,20)"/><text x="537.00" y="158.50">predict (sklearn/tree/..</text></g><g><title>0x7f21da7a1d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (33 samples, 13.58%)</title><rect x="544" y="164" width="160" height="15" fill="rgb(247,116,29)"/><text x="547.00" y="174.50">0x7f21da7a1d2e (skle..</text></g><g><title>0x7f21da7a1554 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.41%)</title><rect x="699" y="180" width="5" height="15" fill="rgb(246,111,22)"/><text x="702.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (2 samples, 0.82%)</title><rect x="704" y="148" width="10" height="15" fill="rgb(250,124,40)"/><text x="707.00" y="158.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.41%)</title><rect x="709" y="164" width="5" height="15" fill="rgb(223,122,1)"/><text x="712.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:54) (136 samples, 55.97%)</title><rect x="63" y="52" width="660" height="15" fill="rgb(217,214,25)"/><text x="66.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:53) (136 samples, 55.97%)</title><rect x="63" y="68" width="660" height="15" fill="rgb(228,0,52)"/><text x="66.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37) (136 samples, 55.97%)</title><rect x="63" y="84" width="660" height="15" fill="rgb(225,156,10)"/><text x="66.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31) (136 samples, 55.97%)</title><rect x="63" y="100" width="660" height="15" fill="rgb(230,173,18)"/><text x="66.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (135 samples, 55.56%)</title><rect x="68" y="116" width="655" height="15" fill="rgb(212,114,15)"/><text x="71.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (134 samples, 55.14%)</title><rect x="73" y="132" width="650" height="15" fill="rgb(214,60,31)"/><text x="76.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 0.82%)</title><rect x="714" y="148" width="9" height="15" fill="rgb(207,30,1)"/><text x="717.00" y="158.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:36) (1 samples, 0.41%)</title><rect x="723" y="84" width="5" height="15" fill="rgb(254,25,38)"/><text x="726.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.41%)</title><rect x="723" y="100" width="5" height="15" fill="rgb(211,130,0)"/><text x="726.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.41%)</title><rect x="723" y="116" width="5" height="15" fill="rgb(254,109,13)"/><text x="726.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.41%)</title><rect x="723" y="132" width="5" height="15" fill="rgb(241,168,49)"/><text x="726.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.41%)</title><rect x="723" y="148" width="5" height="15" fill="rgb(231,141,19)"/><text x="726.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.41%)</title><rect x="723" y="164" width="5" height="15" fill="rgb(251,167,42)"/><text x="726.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.41%)</title><rect x="723" y="180" width="5" height="15" fill="rgb(208,209,27)"/><text x="726.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.41%)</title><rect x="723" y="196" width="5" height="15" fill="rgb(252,214,0)"/><text x="726.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="723" y="212" width="5" height="15" fill="rgb(206,99,46)"/><text x="726.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="723" y="228" width="5" height="15" fill="rgb(205,117,11)"/><text x="726.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="723" y="244" width="5" height="15" fill="rgb(224,99,6)"/><text x="726.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="723" y="260" width="5" height="15" fill="rgb(251,160,40)"/><text x="726.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="723" y="276" width="5" height="15" fill="rgb(213,211,30)"/><text x="726.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.41%)</title><rect x="723" y="292" width="5" height="15" fill="rgb(244,62,39)"/><text x="726.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="723" y="308" width="5" height="15" fill="rgb(247,95,8)"/><text x="726.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="723" y="324" width="5" height="15" fill="rgb(219,150,4)"/><text x="726.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="723" y="340" width="5" height="15" fill="rgb(246,183,38)"/><text x="726.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="723" y="356" width="5" height="15" fill="rgb(250,222,53)"/><text x="726.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="723" y="372" width="5" height="15" fill="rgb(252,183,22)"/><text x="726.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:83) (1 samples, 0.41%)</title><rect x="723" y="388" width="5" height="15" fill="rgb(208,219,29)"/><text x="726.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.41%)</title><rect x="723" y="404" width="5" height="15" fill="rgb(218,22,42)"/><text x="726.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.41%)</title><rect x="723" y="420" width="5" height="15" fill="rgb(226,30,39)"/><text x="726.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.41%)</title><rect x="723" y="436" width="5" height="15" fill="rgb(227,165,4)"/><text x="726.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.41%)</title><rect x="723" y="452" width="5" height="15" fill="rgb(242,226,28)"/><text x="726.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.41%)</title><rect x="723" y="468" width="5" height="15" fill="rgb(218,107,28)"/><text x="726.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/doc/doc_helper.py:117) (1 samples, 0.41%)</title><rect x="723" y="484" width="5" height="15" fill="rgb(228,59,16)"/><text x="726.00" y="494.50"></text></g><g><title>_get_doc_template (mlprodict/onnxrt/doc/doc_helper.py:114) (1 samples, 0.41%)</title><rect x="723" y="500" width="5" height="15" fill="rgb(231,224,47)"/><text x="726.00" y="510.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.41%)</title><rect x="723" y="516" width="5" height="15" fill="rgb(227,184,20)"/><text x="726.00" y="526.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.41%)</title><rect x="723" y="532" width="5" height="15" fill="rgb(205,29,44)"/><text x="726.00" y="542.50"></text></g><g><title>compile (jinja2/environment.py:581) (1 samples, 0.41%)</title><rect x="723" y="548" width="5" height="15" fill="rgb(209,33,38)"/><text x="726.00" y="558.50"></text></g><g><title>_generate (jinja2/environment.py:543) (1 samples, 0.41%)</title><rect x="723" y="564" width="5" height="15" fill="rgb(213,21,11)"/><text x="726.00" y="574.50"></text></g><g><title>generate (jinja2/compiler.py:82) (1 samples, 0.41%)</title><rect x="723" y="580" width="5" height="15" fill="rgb(236,80,35)"/><text x="726.00" y="590.50"></text></g><g><title>visit (jinja2/visitor.py:38) (1 samples, 0.41%)</title><rect x="723" y="596" width="5" height="15" fill="rgb(235,170,44)"/><text x="726.00" y="606.50"></text></g><g><title>visit_Template (jinja2/compiler.py:744) (1 samples, 0.41%)</title><rect x="723" y="612" width="5" height="15" fill="rgb(227,225,41)"/><text x="726.00" y="622.50"></text></g><g><title>find_undeclared (jinja2/compiler.py:115) (1 samples, 0.41%)</title><rect x="723" y="628" width="5" height="15" fill="rgb(241,25,5)"/><text x="726.00" y="638.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.41%)</title><rect x="723" y="644" width="5" height="15" fill="rgb(226,91,5)"/><text x="726.00" y="654.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.41%)</title><rect x="723" y="660" width="5" height="15" fill="rgb(226,3,37)"/><text x="726.00" y="670.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.41%)</title><rect x="723" y="676" width="5" height="15" fill="rgb(206,11,3)"/><text x="726.00" y="686.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.41%)</title><rect x="723" y="692" width="5" height="15" fill="rgb(240,209,45)"/><text x="726.00" y="702.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.41%)</title><rect x="723" y="708" width="5" height="15" fill="rgb(228,216,32)"/><text x="726.00" y="718.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.41%)</title><rect x="723" y="724" width="5" height="15" fill="rgb(250,192,54)"/><text x="726.00" y="734.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.41%)</title><rect x="723" y="740" width="5" height="15" fill="rgb(254,187,34)"/><text x="726.00" y="750.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.41%)</title><rect x="723" y="756" width="5" height="15" fill="rgb(207,15,47)"/><text x="726.00" y="766.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.41%)</title><rect x="723" y="772" width="5" height="15" fill="rgb(254,25,4)"/><text x="726.00" y="782.50"></text></g><g><title>generic_visit (jinja2/visitor.py:44) (1 samples, 0.41%)</title><rect x="723" y="788" width="5" height="15" fill="rgb(242,219,9)"/><text x="726.00" y="798.50"></text></g><g><title>visit (jinja2/visitor.py:39) (1 samples, 0.41%)</title><rect x="723" y="804" width="5" height="15" fill="rgb(224,57,2)"/><text x="726.00" y="814.50"></text></g><g><title>generic_visit (jinja2/visitor.py:43) (1 samples, 0.41%)</title><rect x="723" y="820" width="5" height="15" fill="rgb(253,87,10)"/><text x="726.00" y="830.50"></text></g><g><title>iter_child_nodes (jinja2/nodes.py:170) (1 samples, 0.41%)</title><rect x="723" y="836" width="5" height="15" fill="rgb(216,173,38)"/><text x="726.00" y="846.50"></text></g><g><title>0x7f21c0c0e54f (?) (1 samples, 0.41%)</title><rect x="728" y="244" width="5" height="15" fill="rgb(214,139,40)"/><text x="731.00" y="254.50"></text></g><g><title>0x7f21c0c1465e (?) (1 samples, 0.41%)</title><rect x="728" y="260" width="5" height="15" fill="rgb(235,215,18)"/><text x="731.00" y="270.50"></text></g><g><title>0x7f21c0c1450f (?) (1 samples, 0.41%)</title><rect x="728" y="276" width="5" height="15" fill="rgb(211,26,27)"/><text x="731.00" y="286.50"></text></g><g><title>0x7f21c0c1ad6c (?) (1 samples, 0.41%)</title><rect x="728" y="292" width="5" height="15" fill="rgb(211,137,5)"/><text x="731.00" y="302.50"></text></g><g><title>0x7f21ca13bab9 (?) (1 samples, 0.41%)</title><rect x="728" y="308" width="5" height="15" fill="rgb(240,39,1)"/><text x="731.00" y="318.50"></text></g><g><title>0x7f21ca13ceab (?) (1 samples, 0.41%)</title><rect x="728" y="324" width="5" height="15" fill="rgb(234,224,53)"/><text x="731.00" y="334.50"></text></g><g><title>0x7f21ca13cea0 (libgomp.so.1.0.0) (5 samples, 2.06%)</title><rect x="733" y="484" width="24" height="15" fill="rgb(207,149,2)"/><text x="736.00" y="494.50">0..</text></g><g><title>0x7f21ca13cea9 (libgomp.so.1.0.0) (12 samples, 4.94%)</title><rect x="757" y="484" width="59" height="15" fill="rgb(234,131,9)"/><text x="760.00" y="494.50">0x7f21..</text></g><g><title>0x7f21ca13ceab (libgomp.so.1.0.0) (7 samples, 2.88%)</title><rect x="816" y="484" width="34" height="15" fill="rgb(205,60,28)"/><text x="819.00" y="494.50">0x..</text></g><g><title>0x7f21ca13bab9 (libgomp.so.1.0.0) (38 samples, 15.64%)</title><rect x="733" y="468" width="185" height="15" fill="rgb(235,128,40)"/><text x="736.00" y="478.50">0x7f21ca13bab9 (libgomp...</text></g><g><title>0x7f21ca13cead (libgomp.so.1.0.0) (14 samples, 5.76%)</title><rect x="850" y="484" width="68" height="15" fill="rgb(210,170,3)"/><text x="853.00" y="494.50">0x7f21c..</text></g><g><title>0x7f21ca13ccf9 (libgomp.so.1.0.0) (1 samples, 0.41%)</title><rect x="918" y="500" width="4" height="15" fill="rgb(209,204,32)"/><text x="921.00" y="510.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:61) (44 samples, 18.11%)</title><rect x="723" y="52" width="214" height="15" fill="rgb(252,227,39)"/><text x="726.00" y="62.50">&lt;module&gt; (bench_DecisionTree..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:60) (44 samples, 18.11%)</title><rect x="723" y="68" width="214" height="15" fill="rgb(214,167,29)"/><text x="726.00" y="78.50">profile_pyrt (bench_Decision..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37) (43 samples, 17.70%)</title><rect x="728" y="84" width="209" height="15" fill="rgb(212,220,22)"/><text x="731.00" y="94.50">setup_profile (bench_Decisi..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31) (43 samples, 17.70%)</title><rect x="728" y="100" width="209" height="15" fill="rgb(240,105,6)"/><text x="731.00" y="110.50">profile (bench_DecisionTree..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (43 samples, 17.70%)</title><rect x="728" y="116" width="209" height="15" fill="rgb(253,166,17)"/><text x="731.00" y="126.50">time_predict (mlprodict/asv..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (43 samples, 17.70%)</title><rect x="728" y="132" width="209" height="15" fill="rgb(212,206,7)"/><text x="731.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_ben..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (43 samples, 17.70%)</title><rect x="728" y="148" width="209" height="15" fill="rgb(244,168,45)"/><text x="731.00" y="158.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (43 samples, 17.70%)</title><rect x="728" y="164" width="209" height="15" fill="rgb(244,193,13)"/><text x="731.00" y="174.50">_run_sequence_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (43 samples, 17.70%)</title><rect x="728" y="180" width="209" height="15" fill="rgb(205,136,37)"/><text x="731.00" y="190.50">run (mlprodict/onnxrt/onnx_..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (43 samples, 17.70%)</title><rect x="728" y="196" width="209" height="15" fill="rgb(251,185,43)"/><text x="731.00" y="206.50">run (mlprodict/onnxrt/ops_c..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (43 samples, 17.70%)</title><rect x="728" y="212" width="209" height="15" fill="rgb(215,78,15)"/><text x="731.00" y="222.50">run (mlprodict/onnxrt/ops_c..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (43 samples, 17.70%)</title><rect x="728" y="228" width="209" height="15" fill="rgb(239,174,18)"/><text x="731.00" y="238.50">_run (mlprodict/onnxrt/ops_..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (42 samples, 17.28%)</title><rect x="733" y="244" width="204" height="15" fill="rgb(231,167,6)"/><text x="736.00" y="254.50">pybind11::cpp_function::di..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (42 samples, 17.28%)</title><rect x="733" y="260" width="204" height="15" fill="rgb(239,115,21)"/><text x="736.00" y="270.50">void pybind11::cpp_functio..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (42 samples, 17.28%)</title><rect x="733" y="276" width="204" height="15" fill="rgb(238,55,31)"/><text x="736.00" y="286.50">void pybind11::cpp_functio..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (42 samples, 17.28%)</title><rect x="733" y="292" width="204" height="15" fill="rgb(226,125,47)"/><text x="736.00" y="302.50">pybind11::detail::argument..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (42 samples, 17.28%)</title><rect x="733" y="308" width="204" height="15" fill="rgb(231,164,10)"/><text x="736.00" y="318.50">pybind11::detail::argument..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (42 samples, 17.28%)</title><rect x="733" y="324" width="204" height="15" fill="rgb(228,155,47)"/><text x="736.00" y="334.50">pybind11::cpp_function::cp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (42 samples, 17.28%)</title><rect x="733" y="340" width="204" height="15" fill="rgb(212,90,46)"/><text x="736.00" y="350.50">pybind11::array_t&lt;float, 1..</text></g><g><title>pybind11::array::~array (numpy.h:538) (42 samples, 17.28%)</title><rect x="733" y="356" width="204" height="15" fill="rgb(206,179,17)"/><text x="736.00" y="366.50">pybind11::array::~array (n..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (42 samples, 17.28%)</title><rect x="733" y="372" width="204" height="15" fill="rgb(216,28,27)"/><text x="736.00" y="382.50">pybind11::buffer::~buffer ..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (42 samples, 17.28%)</title><rect x="733" y="388" width="204" height="15" fill="rgb(218,193,24)"/><text x="736.00" y="398.50">pybind11::object::~object ..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (42 samples, 17.28%)</title><rect x="733" y="404" width="204" height="15" fill="rgb(238,17,13)"/><text x="736.00" y="414.50">pybind11::handle::dec_ref ..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (42 samples, 17.28%)</title><rect x="733" y="420" width="204" height="15" fill="rgb(224,28,3)"/><text x="736.00" y="430.50">RuntimeTreeEnsembleRegress..</text></g><g><title>pybind11::array::size (numpy.h:619) (42 samples, 17.28%)</title><rect x="733" y="436" width="204" height="15" fill="rgb(234,66,12)"/><text x="736.00" y="446.50">pybind11::array::size (num..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (42 samples, 17.28%)</title><rect x="733" y="452" width="204" height="15" fill="rgb(230,99,32)"/><text x="736.00" y="462.50">std::accumulate&lt;long const..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (4 samples, 1.65%)</title><rect x="918" y="468" width="19" height="15" fill="rgb(205,182,25)"/><text x="921.00" y="478.50"></text></g><g><title>0x7f21ca13adaa (libgomp.so.1.0.0) (4 samples, 1.65%)</title><rect x="918" y="484" width="19" height="15" fill="rgb(219,142,34)"/><text x="921.00" y="494.50"></text></g><g><title>0x7f21ca13ccfd (libgomp.so.1.0.0) (3 samples, 1.23%)</title><rect x="922" y="500" width="15" height="15" fill="rgb(215,88,48)"/><text x="925.00" y="510.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:36) (1 samples, 0.41%)</title><rect x="937" y="84" width="5" height="15" fill="rgb(234,227,21)"/><text x="940.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.41%)</title><rect x="937" y="100" width="5" height="15" fill="rgb(234,145,35)"/><text x="940.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.41%)</title><rect x="937" y="116" width="5" height="15" fill="rgb(219,211,9)"/><text x="940.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.41%)</title><rect x="937" y="132" width="5" height="15" fill="rgb(222,46,48)"/><text x="940.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.41%)</title><rect x="937" y="148" width="5" height="15" fill="rgb(223,57,8)"/><text x="940.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.41%)</title><rect x="937" y="164" width="5" height="15" fill="rgb(223,105,21)"/><text x="940.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.41%)</title><rect x="937" y="180" width="5" height="15" fill="rgb(245,184,48)"/><text x="940.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.41%)</title><rect x="937" y="196" width="5" height="15" fill="rgb(207,0,1)"/><text x="940.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:29) (1 samples, 0.41%)</title><rect x="937" y="212" width="5" height="15" fill="rgb(242,108,42)"/><text x="940.00" y="222.50"></text></g><g><title>0x7f21c01f3ff9 (?) (1 samples, 0.41%)</title><rect x="937" y="228" width="5" height="15" fill="rgb(218,180,22)"/><text x="940.00" y="238.50"></text></g><g><title>0x7f21c01ed46f (?) (1 samples, 0.41%)</title><rect x="937" y="244" width="5" height="15" fill="rgb(218,146,32)"/><text x="940.00" y="254.50"></text></g><g><title>0x7f21c0214942 (?) (1 samples, 0.41%)</title><rect x="937" y="260" width="5" height="15" fill="rgb(210,163,47)"/><text x="940.00" y="270.50"></text></g><g><title>0x7f21c0607d75 (?) (1 samples, 0.41%)</title><rect x="937" y="276" width="5" height="15" fill="rgb(223,15,30)"/><text x="940.00" y="286.50"></text></g><g><title>std::thread::hardware_concurrency (libstdc++.so.6.0.28) (1 samples, 0.41%)</title><rect x="937" y="292" width="5" height="15" fill="rgb(215,202,18)"/><text x="940.00" y="302.50"></text></g><g><title>get_nprocs (libc-2.29.so) (1 samples, 0.41%)</title><rect x="937" y="308" width="5" height="15" fill="rgb(249,98,39)"/><text x="940.00" y="318.50"></text></g><g><title>0x7f22001a97cf (libc-2.29.so) (1 samples, 0.41%)</title><rect x="937" y="324" width="5" height="15" fill="rgb(227,168,41)"/><text x="940.00" y="334.50"></text></g><g><title>__read_nocancel (libc-2.29.so) (1 samples, 0.41%)</title><rect x="937" y="340" width="5" height="15" fill="rgb(242,57,33)"/><text x="940.00" y="350.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (2 samples, 0.82%)</title><rect x="956" y="148" width="10" height="15" fill="rgb(244,139,26)"/><text x="959.00" y="158.50"></text></g><g><title>run (onnxruntime/capi/session.py:131) (1 samples, 0.41%)</title><rect x="986" y="196" width="4" height="15" fill="rgb(240,68,11)"/><text x="989.00" y="206.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1005" y="260" width="5" height="15" fill="rgb(237,23,23)"/><text x="1008.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1005" y="276" width="5" height="15" fill="rgb(216,78,3)"/><text x="1008.00" y="286.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 2.06%)</title><rect x="990" y="196" width="25" height="15" fill="rgb(245,162,11)"/><text x="993.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (5 samples, 2.06%)</title><rect x="990" y="212" width="25" height="15" fill="rgb(243,139,21)"/><text x="993.00" y="222.50">&lt;..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.65%)</title><rect x="995" y="228" width="20" height="15" fill="rgb(237,209,31)"/><text x="998.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1000" y="244" width="15" height="15" fill="rgb(224,186,20)"/><text x="1003.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1010" y="260" width="5" height="15" fill="rgb(232,86,49)"/><text x="1013.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1010" y="276" width="5" height="15" fill="rgb(217,62,34)"/><text x="1013.00" y="286.50"></text></g><g><title>onnxruntime::InferenceSession::GetModelInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1039" y="260" width="5" height="15" fill="rgb(245,122,44)"/><text x="1042.00" y="270.50"></text></g><g><title>onnxruntime::Model::MainGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1039" y="276" width="5" height="15" fill="rgb(254,151,12)"/><text x="1042.00" y="286.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1049" y="292" width="5" height="15" fill="rgb(218,195,35)"/><text x="1052.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1049" y="308" width="5" height="15" fill="rgb(242,92,48)"/><text x="1052.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1049" y="324" width="5" height="15" fill="rgb(239,166,4)"/><text x="1052.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1054" y="292" width="4" height="15" fill="rgb(226,211,39)"/><text x="1057.00" y="302.50"></text></g><g><title>0x7f21c01ba930 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1058" y="324" width="5" height="15" fill="rgb(207,133,20)"/><text x="1061.00" y="334.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 2.06%)</title><rect x="1063" y="340" width="25" height="15" fill="rgb(210,108,51)"/><text x="1066.00" y="350.50">o..</text></g><g><title>std::_Rb_tree&lt;OrtMemoryInfo, std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt;, std::_Select1st&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt;, std::less&lt;OrtMemoryInfo&gt;, std::allocator&lt;std::pair&lt;OrtMemoryInfo const, std::unique_ptr&lt;void, onnxruntime::BufferDeleter&gt; &gt; &gt; &gt;::_M_get_insert_hint_unique_pos (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="1078" y="356" width="10" height="15" fill="rgb(251,164,39)"/><text x="1081.00" y="366.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="1092" y="420" width="10" height="15" fill="rgb(239,43,12)"/><text x="1095.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="1092" y="436" width="10" height="15" fill="rgb(219,197,27)"/><text x="1095.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1097" y="452" width="5" height="15" fill="rgb(217,100,17)"/><text x="1100.00" y="462.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1097" y="468" width="5" height="15" fill="rgb(228,4,49)"/><text x="1100.00" y="478.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1097" y="484" width="5" height="15" fill="rgb(244,160,46)"/><text x="1100.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.35%)</title><rect x="1044" y="260" width="63" height="15" fill="rgb(230,211,34)"/><text x="1047.00" y="270.50">onnxru..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.35%)</title><rect x="1044" y="276" width="63" height="15" fill="rgb(248,70,51)"/><text x="1047.00" y="286.50">onnxru..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.12%)</title><rect x="1058" y="292" width="49" height="15" fill="rgb(235,43,27)"/><text x="1061.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (10 samples, 4.12%)</title><rect x="1058" y="308" width="49" height="15" fill="rgb(210,125,2)"/><text x="1061.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (9 samples, 3.70%)</title><rect x="1063" y="324" width="44" height="15" fill="rgb(228,74,49)"/><text x="1066.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.65%)</title><rect x="1088" y="340" width="19" height="15" fill="rgb(225,1,36)"/><text x="1091.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1092" y="356" width="15" height="15" fill="rgb(223,127,12)"/><text x="1095.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1092" y="372" width="15" height="15" fill="rgb(218,76,32)"/><text x="1095.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1092" y="388" width="15" height="15" fill="rgb(247,10,16)"/><text x="1095.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1092" y="404" width="15" height="15" fill="rgb(228,57,47)"/><text x="1095.00" y="414.50"></text></g><g><title>onnxruntime::TensorType&lt;float&gt;::GetElementType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1102" y="420" width="5" height="15" fill="rgb(213,133,23)"/><text x="1105.00" y="430.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1107" y="260" width="15" height="15" fill="rgb(245,120,50)"/><text x="1110.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1117" y="276" width="5" height="15" fill="rgb(232,33,1)"/><text x="1120.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1117" y="292" width="5" height="15" fill="rgb(207,13,50)"/><text x="1120.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1122" y="260" width="4" height="15" fill="rgb(220,60,50)"/><text x="1125.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.41%)</title><rect x="1122" y="276" width="4" height="15" fill="rgb(246,75,2)"/><text x="1125.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1051) (1 samples, 0.41%)</title><rect x="1122" y="292" width="4" height="15" fill="rgb(253,11,5)"/><text x="1125.00" y="302.50"></text></g><g><title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1126" y="260" width="5" height="15" fill="rgb(241,27,1)"/><text x="1129.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1126" y="276" width="5" height="15" fill="rgb(215,78,42)"/><text x="1129.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1126" y="292" width="5" height="15" fill="rgb(223,184,40)"/><text x="1129.00" y="302.50"></text></g><g><title>0x7f2200135d07 (libc-2.29.so) (1 samples, 0.41%)</title><rect x="1126" y="308" width="5" height="15" fill="rgb(248,120,44)"/><text x="1129.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 9.88%)</title><rect x="1029" y="244" width="117" height="15" fill="rgb(218,213,45)"/><text x="1032.00" y="254.50">onnxruntime::p..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1131" y="260" width="15" height="15" fill="rgb(243,11,17)"/><text x="1134.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1131" y="276" width="15" height="15" fill="rgb(217,8,27)"/><text x="1134.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1131" y="292" width="15" height="15" fill="rgb(237,100,3)"/><text x="1134.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.23%)</title><rect x="1131" y="308" width="15" height="15" fill="rgb(220,120,13)"/><text x="1134.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="1136" y="324" width="10" height="15" fill="rgb(233,24,20)"/><text x="1139.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.82%)</title><rect x="1136" y="340" width="10" height="15" fill="rgb(206,118,49)"/><text x="1139.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::Merge (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1141" y="356" width="5" height="15" fill="rgb(231,72,13)"/><text x="1144.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::DeleteChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1141" y="372" width="5" height="15" fill="rgb(213,156,23)"/><text x="1144.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::RegionManager::RegionFor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1141" y="388" width="5" height="15" fill="rgb(231,196,44)"/><text x="1144.00" y="398.50"></text></g><g><title>pybind11::list::list [clone .lto_priv.504] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1146" y="244" width="5" height="15" fill="rgb(208,129,44)"/><text x="1149.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (39 samples, 16.05%)</title><rect x="966" y="164" width="190" height="15" fill="rgb(226,58,43)"/><text x="969.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (39 samples, 16.05%)</title><rect x="966" y="180" width="190" height="15" fill="rgb(233,107,21)"/><text x="969.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py:136) (29 samples, 11.93%)</title><rect x="1015" y="196" width="141" height="15" fill="rgb(232,14,47)"/><text x="1018.00" y="206.50">run (onnxruntime/..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 11.11%)</title><rect x="1024" y="212" width="132" height="15" fill="rgb(235,170,13)"/><text x="1027.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 11.11%)</title><rect x="1024" y="228" width="132" height="15" fill="rgb(241,178,27)"/><text x="1027.00" y="238.50">void pybind11::c..</text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector [clone .localalias.77] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.41%)</title><rect x="1151" y="244" width="5" height="15" fill="rgb(237,180,23)"/><text x="1154.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (48 samples, 19.75%)</title><rect x="952" y="132" width="233" height="15" fill="rgb(212,135,44)"/><text x="955.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchm..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (45 samples, 18.52%)</title><rect x="966" y="148" width="219" height="15" fill="rgb(206,105,23)"/><text x="969.00" y="158.50">run (mlprodict/onnxrt/onnx_i..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (6 samples, 2.47%)</title><rect x="1156" y="164" width="29" height="15" fill="rgb(212,43,28)"/><text x="1159.00" y="174.50">_r..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.41%)</title><rect x="1180" y="180" width="5" height="15" fill="rgb(216,12,21)"/><text x="1183.00" y="190.50"></text></g><g><title>all (243 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(222,131,43)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:68) (52 samples, 21.40%)</title><rect x="937" y="52" width="253" height="15" fill="rgb(252,138,31)"/><text x="940.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegre..</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:67) (52 samples, 21.40%)</title><rect x="937" y="68" width="253" height="15" fill="rgb(228,42,8)"/><text x="940.00" y="78.50">profile_ort (bench_DecisionTreeRe..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37) (51 samples, 20.99%)</title><rect x="942" y="84" width="248" height="15" fill="rgb(218,103,30)"/><text x="945.00" y="94.50">setup_profile (bench_DecisionTree..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31) (51 samples, 20.99%)</title><rect x="942" y="100" width="248" height="15" fill="rgb(249,199,3)"/><text x="945.00" y="110.50">profile (bench_DecisionTreeRegres..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (50 samples, 20.58%)</title><rect x="947" y="116" width="243" height="15" fill="rgb(212,191,11)"/><text x="950.00" y="126.50">time_predict (mlprodict/asv_benc..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.41%)</title><rect x="1185" y="132" width="5" height="15" fill="rgb(226,27,21)"/><text x="1188.00" y="142.50"></text></g></g></svg>