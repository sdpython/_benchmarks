<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1862" onload="init(evt)" viewBox="0 0 1200 1862" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1862" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1845.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1845.00"> </text><g id="frames"><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.45%)</title><rect x="10" y="852" width="5" height="15" fill="rgb(207,188,11)"/><text x="13.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.45%)</title><rect x="10" y="868" width="5" height="15" fill="rgb(232,7,4)"/><text x="13.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.45%)</title><rect x="10" y="884" width="5" height="15" fill="rgb(218,90,43)"/><text x="13.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.45%)</title><rect x="10" y="900" width="5" height="15" fill="rgb(213,137,48)"/><text x="13.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.45%)</title><rect x="10" y="916" width="5" height="15" fill="rgb(207,193,28)"/><text x="13.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.45%)</title><rect x="10" y="932" width="5" height="15" fill="rgb(229,21,16)"/><text x="13.00" y="942.50"></text></g><g><title>__eq__ (pkg_resources/_vendor/packaging/version.py:54) (1 samples, 0.45%)</title><rect x="10" y="948" width="5" height="15" fill="rgb(214,107,18)"/><text x="13.00" y="958.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.90%)</title><rect x="10" y="820" width="10" height="15" fill="rgb(226,55,32)"/><text x="13.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.90%)</title><rect x="10" y="836" width="10" height="15" fill="rgb(209,9,25)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (1 samples, 0.45%)</title><rect x="15" y="852" width="5" height="15" fill="rgb(240,32,25)"/><text x="18.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.45%)</title><rect x="15" y="868" width="5" height="15" fill="rgb(216,137,50)"/><text x="18.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2049) (1 samples, 0.45%)</title><rect x="15" y="884" width="5" height="15" fill="rgb(223,103,19)"/><text x="18.00" y="894.50"></text></g><g><title>safe_listdir (pkg_resources/__init__.py:2108) (1 samples, 0.45%)</title><rect x="15" y="900" width="5" height="15" fill="rgb(252,78,8)"/><text x="18.00" y="910.50"></text></g><g><title>os_listdir (python3.7) (1 samples, 0.45%)</title><rect x="15" y="916" width="5" height="15" fill="rgb(244,90,48)"/><text x="18.00" y="926.50"></text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:2) (3 samples, 1.36%)</title><rect x="10" y="148" width="16" height="15" fill="rgb(236,50,15)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="164" width="16" height="15" fill="rgb(228,187,24)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.36%)</title><rect x="10" y="180" width="16" height="15" fill="rgb(242,72,4)"/><text x="13.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="196" width="16" height="15" fill="rgb(210,53,33)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="212" width="16" height="15" fill="rgb(206,17,26)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="10" y="228" width="16" height="15" fill="rgb(208,43,31)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="10" y="244" width="16" height="15" fill="rgb(217,89,30)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="10" y="260" width="16" height="15" fill="rgb(207,131,4)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="276" width="16" height="15" fill="rgb(244,152,30)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 1.36%)</title><rect x="10" y="292" width="16" height="15" fill="rgb(232,121,22)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="308" width="16" height="15" fill="rgb(225,228,9)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="10" y="324" width="16" height="15" fill="rgb(216,170,15)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="10" y="340" width="16" height="15" fill="rgb(244,45,7)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="10" y="356" width="16" height="15" fill="rgb(206,61,4)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="372" width="16" height="15" fill="rgb(235,152,52)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 1.36%)</title><rect x="10" y="388" width="16" height="15" fill="rgb(248,1,5)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="404" width="16" height="15" fill="rgb(213,168,2)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="10" y="420" width="16" height="15" fill="rgb(254,186,21)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="10" y="436" width="16" height="15" fill="rgb(238,40,31)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="10" y="452" width="16" height="15" fill="rgb(238,194,21)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="468" width="16" height="15" fill="rgb(215,4,28)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 1.36%)</title><rect x="10" y="484" width="16" height="15" fill="rgb(242,166,19)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="500" width="16" height="15" fill="rgb(237,0,35)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="10" y="516" width="16" height="15" fill="rgb(221,179,18)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="10" y="532" width="16" height="15" fill="rgb(221,67,20)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="10" y="548" width="16" height="15" fill="rgb(246,210,36)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="564" width="16" height="15" fill="rgb(234,21,5)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 1.36%)</title><rect x="10" y="580" width="16" height="15" fill="rgb(216,213,26)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="596" width="16" height="15" fill="rgb(250,58,26)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 1.36%)</title><rect x="10" y="612" width="16" height="15" fill="rgb(244,133,30)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="628" width="16" height="15" fill="rgb(254,67,19)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="644" width="16" height="15" fill="rgb(251,70,21)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="10" y="660" width="16" height="15" fill="rgb(213,226,18)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="10" y="676" width="16" height="15" fill="rgb(251,29,47)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="10" y="692" width="16" height="15" fill="rgb(208,153,34)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="708" width="16" height="15" fill="rgb(224,114,21)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 1.36%)</title><rect x="10" y="724" width="16" height="15" fill="rgb(241,34,54)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="10" y="740" width="16" height="15" fill="rgb(232,32,51)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="10" y="756" width="16" height="15" fill="rgb(230,201,47)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="10" y="772" width="16" height="15" fill="rgb(220,78,23)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="10" y="788" width="16" height="15" fill="rgb(252,148,4)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="10" y="804" width="16" height="15" fill="rgb(234,218,46)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:80) (1 samples, 0.45%)</title><rect x="20" y="820" width="6" height="15" fill="rgb(207,113,1)"/><text x="23.00" y="830.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="20" y="836" width="6" height="15" fill="rgb(242,93,26)"/><text x="23.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="20" y="852" width="6" height="15" fill="rgb(215,27,29)"/><text x="23.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="20" y="868" width="6" height="15" fill="rgb(229,158,29)"/><text x="23.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="20" y="884" width="6" height="15" fill="rgb(219,194,7)"/><text x="23.00" y="894.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.45%)</title><rect x="20" y="900" width="6" height="15" fill="rgb(216,196,40)"/><text x="23.00" y="910.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.45%)</title><rect x="20" y="916" width="6" height="15" fill="rgb(232,188,2)"/><text x="23.00" y="926.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.45%)</title><rect x="20" y="932" width="6" height="15" fill="rgb(242,176,22)"/><text x="23.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="20" y="948" width="6" height="15" fill="rgb(234,175,12)"/><text x="23.00" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="20" y="964" width="6" height="15" fill="rgb(211,128,25)"/><text x="23.00" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="20" y="980" width="6" height="15" fill="rgb(244,123,33)"/><text x="23.00" y="990.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:327) (1 samples, 0.45%)</title><rect x="20" y="996" width="6" height="15" fill="rgb(244,145,54)"/><text x="23.00" y="1006.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (1 samples, 0.45%)</title><rect x="26" y="244" width="5" height="15" fill="rgb(229,122,11)"/><text x="29.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="260" width="5" height="15" fill="rgb(246,90,40)"/><text x="29.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="276" width="5" height="15" fill="rgb(209,21,16)"/><text x="29.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="292" width="5" height="15" fill="rgb(227,156,24)"/><text x="29.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="308" width="5" height="15" fill="rgb(250,43,17)"/><text x="29.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="324" width="5" height="15" fill="rgb(234,116,32)"/><text x="29.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (1 samples, 0.45%)</title><rect x="26" y="340" width="5" height="15" fill="rgb(244,183,28)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="356" width="5" height="15" fill="rgb(205,28,15)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="26" y="372" width="5" height="15" fill="rgb(233,51,7)"/><text x="29.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="388" width="5" height="15" fill="rgb(213,82,2)"/><text x="29.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="404" width="5" height="15" fill="rgb(206,97,51)"/><text x="29.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="420" width="5" height="15" fill="rgb(234,132,14)"/><text x="29.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="436" width="5" height="15" fill="rgb(238,119,36)"/><text x="29.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="452" width="5" height="15" fill="rgb(229,34,33)"/><text x="29.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="468" width="5" height="15" fill="rgb(249,34,22)"/><text x="29.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.45%)</title><rect x="26" y="484" width="5" height="15" fill="rgb(224,30,23)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="500" width="5" height="15" fill="rgb(205,7,33)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="516" width="5" height="15" fill="rgb(245,112,41)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="532" width="5" height="15" fill="rgb(233,8,47)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="548" width="5" height="15" fill="rgb(222,93,43)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="564" width="5" height="15" fill="rgb(208,101,20)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:8) (1 samples, 0.45%)</title><rect x="26" y="580" width="5" height="15" fill="rgb(251,70,31)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="596" width="5" height="15" fill="rgb(215,21,6)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="26" y="612" width="5" height="15" fill="rgb(251,218,10)"/><text x="29.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="628" width="5" height="15" fill="rgb(244,132,4)"/><text x="29.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="644" width="5" height="15" fill="rgb(245,81,42)"/><text x="29.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="660" width="5" height="15" fill="rgb(233,8,33)"/><text x="29.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="676" width="5" height="15" fill="rgb(230,72,52)"/><text x="29.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="692" width="5" height="15" fill="rgb(246,14,19)"/><text x="29.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="708" width="5" height="15" fill="rgb(225,84,4)"/><text x="29.00" y="718.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/__init__.py:6) (1 samples, 0.45%)</title><rect x="26" y="724" width="5" height="15" fill="rgb(213,110,0)"/><text x="29.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="740" width="5" height="15" fill="rgb(227,126,37)"/><text x="29.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="756" width="5" height="15" fill="rgb(251,152,27)"/><text x="29.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="772" width="5" height="15" fill="rgb(215,102,38)"/><text x="29.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="788" width="5" height="15" fill="rgb(221,194,9)"/><text x="29.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="804" width="5" height="15" fill="rgb(213,118,12)"/><text x="29.00" y="814.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/anyfhelper.py:9) (1 samples, 0.45%)</title><rect x="26" y="820" width="5" height="15" fill="rgb(247,38,6)"/><text x="29.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="836" width="5" height="15" fill="rgb(221,148,43)"/><text x="29.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="852" width="5" height="15" fill="rgb(230,46,51)"/><text x="29.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="868" width="5" height="15" fill="rgb(253,109,25)"/><text x="29.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="884" width="5" height="15" fill="rgb(225,72,20)"/><text x="29.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="900" width="5" height="15" fill="rgb(225,180,21)"/><text x="29.00" y="910.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/filehelper/synchelper.py:10) (1 samples, 0.45%)</title><rect x="26" y="916" width="5" height="15" fill="rgb(251,133,21)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="932" width="5" height="15" fill="rgb(246,104,13)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="26" y="948" width="5" height="15" fill="rgb(220,88,19)"/><text x="29.00" y="958.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="964" width="5" height="15" fill="rgb(231,9,13)"/><text x="29.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="980" width="5" height="15" fill="rgb(250,23,22)"/><text x="29.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="996" width="5" height="15" fill="rgb(234,217,12)"/><text x="29.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="1012" width="5" height="15" fill="rgb(244,142,21)"/><text x="29.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="1028" width="5" height="15" fill="rgb(225,5,7)"/><text x="29.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="1044" width="5" height="15" fill="rgb(245,96,31)"/><text x="29.00" y="1054.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/__init__.py:12) (1 samples, 0.45%)</title><rect x="26" y="1060" width="5" height="15" fill="rgb(214,228,9)"/><text x="29.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="1076" width="5" height="15" fill="rgb(248,101,0)"/><text x="29.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="1092" width="5" height="15" fill="rgb(210,205,37)"/><text x="29.00" y="1102.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="1108" width="5" height="15" fill="rgb(212,131,24)"/><text x="29.00" y="1118.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="1124" width="5" height="15" fill="rgb(254,131,25)"/><text x="29.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="1140" width="5" height="15" fill="rgb(210,171,1)"/><text x="29.00" y="1150.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/pyrepo_helper.py:7) (1 samples, 0.45%)</title><rect x="26" y="1156" width="5" height="15" fill="rgb(208,151,14)"/><text x="29.00" y="1166.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="26" y="1172" width="5" height="15" fill="rgb(208,223,49)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="1188" width="5" height="15" fill="rgb(252,66,36)"/><text x="29.00" y="1198.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="26" y="1204" width="5" height="15" fill="rgb(244,168,46)"/><text x="29.00" y="1214.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="26" y="1220" width="5" height="15" fill="rgb(237,95,21)"/><text x="29.00" y="1230.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="26" y="1236" width="5" height="15" fill="rgb(237,73,12)"/><text x="29.00" y="1246.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="26" y="1252" width="5" height="15" fill="rgb(246,128,40)"/><text x="29.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="26" y="1268" width="5" height="15" fill="rgb(220,181,29)"/><text x="29.00" y="1278.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/repositories/pygit_helper.py:201) (1 samples, 0.45%)</title><rect x="26" y="1284" width="5" height="15" fill="rgb(251,225,20)"/><text x="29.00" y="1294.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.45%)</title><rect x="26" y="1300" width="5" height="15" fill="rgb(228,153,50)"/><text x="29.00" y="1310.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.45%)</title><rect x="26" y="1316" width="5" height="15" fill="rgb(230,117,39)"/><text x="29.00" y="1326.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.45%)</title><rect x="26" y="1332" width="5" height="15" fill="rgb(237,222,42)"/><text x="29.00" y="1342.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.45%)</title><rect x="26" y="1348" width="5" height="15" fill="rgb(215,21,8)"/><text x="29.00" y="1358.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.45%)</title><rect x="26" y="1364" width="5" height="15" fill="rgb(210,88,52)"/><text x="29.00" y="1374.50"></text></g><g><title>_parse (sre_parse.py:811) (1 samples, 0.45%)</title><rect x="26" y="1380" width="5" height="15" fill="rgb(242,209,25)"/><text x="29.00" y="1390.50"></text></g><g><title>opengroup (sre_parse.py:87) (1 samples, 0.45%)</title><rect x="26" y="1396" width="5" height="15" fill="rgb(249,76,49)"/><text x="29.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.45%)</title><rect x="31" y="436" width="5" height="15" fill="rgb(248,148,18)"/><text x="34.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="452" width="5" height="15" fill="rgb(236,48,41)"/><text x="34.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="468" width="5" height="15" fill="rgb(250,148,18)"/><text x="34.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="484" width="5" height="15" fill="rgb(218,34,54)"/><text x="34.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="500" width="5" height="15" fill="rgb(225,94,14)"/><text x="34.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="516" width="5" height="15" fill="rgb(207,110,29)"/><text x="34.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.45%)</title><rect x="31" y="532" width="5" height="15" fill="rgb(228,58,33)"/><text x="34.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="548" width="5" height="15" fill="rgb(208,37,45)"/><text x="34.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="564" width="5" height="15" fill="rgb(247,163,14)"/><text x="34.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="580" width="5" height="15" fill="rgb(247,109,29)"/><text x="34.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="596" width="5" height="15" fill="rgb(224,77,15)"/><text x="34.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="612" width="5" height="15" fill="rgb(234,63,45)"/><text x="34.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.45%)</title><rect x="31" y="628" width="5" height="15" fill="rgb(221,169,47)"/><text x="34.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="644" width="5" height="15" fill="rgb(251,144,39)"/><text x="34.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="660" width="5" height="15" fill="rgb(224,0,53)"/><text x="34.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="676" width="5" height="15" fill="rgb(233,223,6)"/><text x="34.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="692" width="5" height="15" fill="rgb(231,30,19)"/><text x="34.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="708" width="5" height="15" fill="rgb(249,60,14)"/><text x="34.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.45%)</title><rect x="31" y="724" width="5" height="15" fill="rgb(224,136,19)"/><text x="34.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="740" width="5" height="15" fill="rgb(205,196,3)"/><text x="34.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="756" width="5" height="15" fill="rgb(254,3,26)"/><text x="34.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="772" width="5" height="15" fill="rgb(214,97,4)"/><text x="34.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="788" width="5" height="15" fill="rgb(250,100,0)"/><text x="34.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="804" width="5" height="15" fill="rgb(230,30,42)"/><text x="34.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.45%)</title><rect x="31" y="820" width="5" height="15" fill="rgb(236,66,11)"/><text x="34.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="836" width="5" height="15" fill="rgb(206,10,49)"/><text x="34.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="852" width="5" height="15" fill="rgb(245,75,24)"/><text x="34.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="868" width="5" height="15" fill="rgb(245,159,2)"/><text x="34.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="884" width="5" height="15" fill="rgb(225,175,35)"/><text x="34.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="900" width="5" height="15" fill="rgb(235,18,51)"/><text x="34.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.45%)</title><rect x="31" y="916" width="5" height="15" fill="rgb(251,148,29)"/><text x="34.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="932" width="5" height="15" fill="rgb(235,226,16)"/><text x="34.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="948" width="5" height="15" fill="rgb(210,110,50)"/><text x="34.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="964" width="5" height="15" fill="rgb(235,118,7)"/><text x="34.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="980" width="5" height="15" fill="rgb(205,23,4)"/><text x="34.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="996" width="5" height="15" fill="rgb(227,127,25)"/><text x="34.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.45%)</title><rect x="31" y="1012" width="5" height="15" fill="rgb(209,199,6)"/><text x="34.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1028" width="5" height="15" fill="rgb(245,157,7)"/><text x="34.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1044" width="5" height="15" fill="rgb(244,197,21)"/><text x="34.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1060" width="5" height="15" fill="rgb(219,152,49)"/><text x="34.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1076" width="5" height="15" fill="rgb(225,75,24)"/><text x="34.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1092" width="5" height="15" fill="rgb(219,59,15)"/><text x="34.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.45%)</title><rect x="31" y="1108" width="5" height="15" fill="rgb(229,164,42)"/><text x="34.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1124" width="5" height="15" fill="rgb(222,41,40)"/><text x="34.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1140" width="5" height="15" fill="rgb(229,4,8)"/><text x="34.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1156" width="5" height="15" fill="rgb(243,43,19)"/><text x="34.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1172" width="5" height="15" fill="rgb(224,85,49)"/><text x="34.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1188" width="5" height="15" fill="rgb(253,100,29)"/><text x="34.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.45%)</title><rect x="31" y="1204" width="5" height="15" fill="rgb(228,153,11)"/><text x="34.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1220" width="5" height="15" fill="rgb(245,153,21)"/><text x="34.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1236" width="5" height="15" fill="rgb(235,32,36)"/><text x="34.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1252" width="5" height="15" fill="rgb(243,99,46)"/><text x="34.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1268" width="5" height="15" fill="rgb(246,164,43)"/><text x="34.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1284" width="5" height="15" fill="rgb(220,32,44)"/><text x="34.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.45%)</title><rect x="31" y="1300" width="5" height="15" fill="rgb(251,30,21)"/><text x="34.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1316" width="5" height="15" fill="rgb(221,40,51)"/><text x="34.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1332" width="5" height="15" fill="rgb(212,35,49)"/><text x="34.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1348" width="5" height="15" fill="rgb(210,29,50)"/><text x="34.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1364" width="5" height="15" fill="rgb(250,87,3)"/><text x="34.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1380" width="5" height="15" fill="rgb(249,9,13)"/><text x="34.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.45%)</title><rect x="31" y="1396" width="5" height="15" fill="rgb(207,54,19)"/><text x="34.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1412" width="5" height="15" fill="rgb(244,129,11)"/><text x="34.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1428" width="5" height="15" fill="rgb(251,54,38)"/><text x="34.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1444" width="5" height="15" fill="rgb(243,24,38)"/><text x="34.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1460" width="5" height="15" fill="rgb(231,82,10)"/><text x="34.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1476" width="5" height="15" fill="rgb(251,223,16)"/><text x="34.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.45%)</title><rect x="31" y="1492" width="5" height="15" fill="rgb(215,127,20)"/><text x="34.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="31" y="1508" width="5" height="15" fill="rgb(238,22,53)"/><text x="34.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="31" y="1524" width="5" height="15" fill="rgb(234,10,12)"/><text x="34.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="31" y="1540" width="5" height="15" fill="rgb(205,66,44)"/><text x="34.00" y="1550.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="31" y="1556" width="5" height="15" fill="rgb(252,49,50)"/><text x="34.00" y="1566.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="31" y="1572" width="5" height="15" fill="rgb(249,185,39)"/><text x="34.00" y="1582.50"></text></g><g><title>&lt;module&gt; (matplotlib/artist.py:1602) (1 samples, 0.45%)</title><rect x="31" y="1588" width="5" height="15" fill="rgb(248,221,45)"/><text x="34.00" y="1598.50"></text></g><g><title>kwdoc (matplotlib/artist.py:1600) (1 samples, 0.45%)</title><rect x="31" y="1604" width="5" height="15" fill="rgb(213,15,26)"/><text x="34.00" y="1614.50"></text></g><g><title>pprint_setters (matplotlib/artist.py:1366) (1 samples, 0.45%)</title><rect x="31" y="1620" width="5" height="15" fill="rgb(241,218,48)"/><text x="34.00" y="1630.50"></text></g><g><title>_get_setters_and_targets (matplotlib/artist.py:1289) (1 samples, 0.45%)</title><rect x="31" y="1636" width="5" height="15" fill="rgb(209,45,31)"/><text x="34.00" y="1646.50"></text></g><g><title>getfullargspec (inspect.py:1126) (1 samples, 0.45%)</title><rect x="31" y="1652" width="5" height="15" fill="rgb(240,95,30)"/><text x="34.00" y="1662.50"></text></g><g><title>_signature_from_callable (inspect.py:2251) (1 samples, 0.45%)</title><rect x="31" y="1668" width="5" height="15" fill="rgb(254,87,28)"/><text x="34.00" y="1678.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (1 samples, 0.45%)</title><rect x="36" y="772" width="6" height="15" fill="rgb(221,110,52)"/><text x="39.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="788" width="6" height="15" fill="rgb(241,136,18)"/><text x="39.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="804" width="6" height="15" fill="rgb(245,97,47)"/><text x="39.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="820" width="6" height="15" fill="rgb(237,208,19)"/><text x="39.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="836" width="6" height="15" fill="rgb(254,91,38)"/><text x="39.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="852" width="6" height="15" fill="rgb(227,19,11)"/><text x="39.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (1 samples, 0.45%)</title><rect x="36" y="868" width="6" height="15" fill="rgb(230,63,32)"/><text x="39.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="884" width="6" height="15" fill="rgb(234,20,3)"/><text x="39.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.45%)</title><rect x="36" y="900" width="6" height="15" fill="rgb(250,172,41)"/><text x="39.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="916" width="6" height="15" fill="rgb(221,191,0)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="932" width="6" height="15" fill="rgb(237,91,21)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="948" width="6" height="15" fill="rgb(219,48,2)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="964" width="6" height="15" fill="rgb(244,205,26)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="980" width="6" height="15" fill="rgb(222,39,8)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="996" width="6" height="15" fill="rgb(235,147,15)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (1 samples, 0.45%)</title><rect x="36" y="1012" width="6" height="15" fill="rgb(250,107,15)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1028" width="6" height="15" fill="rgb(251,139,27)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1044" width="6" height="15" fill="rgb(234,14,48)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1060" width="6" height="15" fill="rgb(220,201,48)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1076" width="6" height="15" fill="rgb(235,47,38)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1092" width="6" height="15" fill="rgb(212,184,38)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (1 samples, 0.45%)</title><rect x="36" y="1108" width="6" height="15" fill="rgb(232,56,53)"/><text x="39.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="36" y="1124" width="6" height="15" fill="rgb(229,181,52)"/><text x="39.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1140" width="6" height="15" fill="rgb(249,92,7)"/><text x="39.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1156" width="6" height="15" fill="rgb(246,49,40)"/><text x="39.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1172" width="6" height="15" fill="rgb(220,32,10)"/><text x="39.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1188" width="6" height="15" fill="rgb(217,96,27)"/><text x="39.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1204" width="6" height="15" fill="rgb(211,130,20)"/><text x="39.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1220" width="6" height="15" fill="rgb(228,97,32)"/><text x="39.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (1 samples, 0.45%)</title><rect x="36" y="1236" width="6" height="15" fill="rgb(231,144,40)"/><text x="39.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.45%)</title><rect x="36" y="1252" width="6" height="15" fill="rgb(216,30,7)"/><text x="39.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1268" width="6" height="15" fill="rgb(240,1,43)"/><text x="39.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1284" width="6" height="15" fill="rgb(242,69,54)"/><text x="39.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1300" width="6" height="15" fill="rgb(244,146,49)"/><text x="39.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1316" width="6" height="15" fill="rgb(244,145,43)"/><text x="39.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1332" width="6" height="15" fill="rgb(239,149,37)"/><text x="39.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1348" width="6" height="15" fill="rgb(206,209,42)"/><text x="39.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (1 samples, 0.45%)</title><rect x="36" y="1364" width="6" height="15" fill="rgb(237,83,32)"/><text x="39.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1380" width="6" height="15" fill="rgb(219,109,49)"/><text x="39.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1396" width="6" height="15" fill="rgb(228,112,47)"/><text x="39.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1412" width="6" height="15" fill="rgb(253,156,35)"/><text x="39.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1428" width="6" height="15" fill="rgb(249,83,36)"/><text x="39.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1444" width="6" height="15" fill="rgb(251,60,30)"/><text x="39.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.45%)</title><rect x="36" y="1460" width="6" height="15" fill="rgb(240,99,32)"/><text x="39.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="36" y="1476" width="6" height="15" fill="rgb(222,46,25)"/><text x="39.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="36" y="1492" width="6" height="15" fill="rgb(205,140,47)"/><text x="39.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="36" y="1508" width="6" height="15" fill="rgb(249,171,6)"/><text x="39.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="36" y="1524" width="6" height="15" fill="rgb(243,123,22)"/><text x="39.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="36" y="1540" width="6" height="15" fill="rgb(234,143,9)"/><text x="39.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.45%)</title><rect x="36" y="1556" width="6" height="15" fill="rgb(241,83,22)"/><text x="39.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.45%)</title><rect x="36" y="1572" width="6" height="15" fill="rgb(244,75,16)"/><text x="39.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.45%)</title><rect x="36" y="1588" width="6" height="15" fill="rgb(216,100,6)"/><text x="39.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.45%)</title><rect x="36" y="1604" width="6" height="15" fill="rgb(216,218,45)"/><text x="39.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.45%)</title><rect x="36" y="1620" width="6" height="15" fill="rgb(236,8,34)"/><text x="39.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.45%)</title><rect x="36" y="1636" width="6" height="15" fill="rgb(250,132,45)"/><text x="39.00" y="1646.50"></text></g><g><title>__init__ (jinja2/parser.py:40) (1 samples, 0.45%)</title><rect x="36" y="1652" width="6" height="15" fill="rgb(227,10,2)"/><text x="39.00" y="1662.50"></text></g><g><title>_tokenize (jinja2/environment.py:529) (1 samples, 0.45%)</title><rect x="36" y="1668" width="6" height="15" fill="rgb(236,184,5)"/><text x="39.00" y="1678.50"></text></g><g><title>get_lexer (jinja2/lexer.py:407) (1 samples, 0.45%)</title><rect x="36" y="1684" width="6" height="15" fill="rgb(247,135,54)"/><text x="39.00" y="1694.50"></text></g><g><title>__init__ (jinja2/lexer.py:543) (1 samples, 0.45%)</title><rect x="36" y="1700" width="6" height="15" fill="rgb(239,206,9)"/><text x="39.00" y="1710.50"></text></g><g><title>&lt;lambda&gt; (jinja2/lexer.py:422) (1 samples, 0.45%)</title><rect x="36" y="1716" width="6" height="15" fill="rgb(237,88,7)"/><text x="39.00" y="1726.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.45%)</title><rect x="36" y="1732" width="6" height="15" fill="rgb(232,77,20)"/><text x="39.00" y="1742.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.45%)</title><rect x="36" y="1748" width="6" height="15" fill="rgb(209,177,31)"/><text x="39.00" y="1758.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.45%)</title><rect x="36" y="1764" width="6" height="15" fill="rgb(212,109,39)"/><text x="39.00" y="1774.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.45%)</title><rect x="36" y="1780" width="6" height="15" fill="rgb(238,199,41)"/><text x="39.00" y="1790.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.45%)</title><rect x="36" y="1796" width="6" height="15" fill="rgb(239,62,51)"/><text x="39.00" y="1806.50"></text></g><g><title>_parse (sre_parse.py:668) (1 samples, 0.45%)</title><rect x="36" y="1812" width="6" height="15" fill="rgb(242,161,34)"/><text x="39.00" y="1822.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:4) (7 samples, 3.17%)</title><rect x="10" y="52" width="37" height="15" fill="rgb(211,87,10)"/><text x="13.00" y="62.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 3.17%)</title><rect x="10" y="68" width="37" height="15" fill="rgb(220,184,29)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 3.17%)</title><rect x="10" y="84" width="37" height="15" fill="rgb(237,166,19)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 3.17%)</title><rect x="10" y="100" width="37" height="15" fill="rgb(225,56,5)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 3.17%)</title><rect x="10" y="116" width="37" height="15" fill="rgb(254,72,40)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 3.17%)</title><rect x="10" y="132" width="37" height="15" fill="rgb(253,153,3)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/tree/DecisionTreeRegressor/bench_DecisionTreeRegressor_default_m_reg.py:7) (4 samples, 1.81%)</title><rect x="26" y="148" width="21" height="15" fill="rgb(213,56,35)"/><text x="29.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.81%)</title><rect x="26" y="164" width="21" height="15" fill="rgb(250,171,26)"/><text x="29.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.81%)</title><rect x="26" y="180" width="21" height="15" fill="rgb(209,161,23)"/><text x="29.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.81%)</title><rect x="26" y="196" width="21" height="15" fill="rgb(253,59,27)"/><text x="29.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.81%)</title><rect x="26" y="212" width="21" height="15" fill="rgb(225,98,3)"/><text x="29.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.81%)</title><rect x="26" y="228" width="21" height="15" fill="rgb(245,29,49)"/><text x="29.00" y="238.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (3 samples, 1.36%)</title><rect x="31" y="244" width="16" height="15" fill="rgb(212,110,52)"/><text x="34.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="31" y="260" width="16" height="15" fill="rgb(220,50,9)"/><text x="34.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="31" y="276" width="16" height="15" fill="rgb(231,179,37)"/><text x="34.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="31" y="292" width="16" height="15" fill="rgb(216,90,45)"/><text x="34.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="31" y="308" width="16" height="15" fill="rgb(239,142,41)"/><text x="34.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="31" y="324" width="16" height="15" fill="rgb(238,0,37)"/><text x="34.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (3 samples, 1.36%)</title><rect x="31" y="340" width="16" height="15" fill="rgb(206,203,15)"/><text x="34.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 1.36%)</title><rect x="31" y="356" width="16" height="15" fill="rgb(251,103,42)"/><text x="34.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 1.36%)</title><rect x="31" y="372" width="16" height="15" fill="rgb(217,58,21)"/><text x="34.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 1.36%)</title><rect x="31" y="388" width="16" height="15" fill="rgb(245,149,26)"/><text x="34.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 1.36%)</title><rect x="31" y="404" width="16" height="15" fill="rgb(218,165,2)"/><text x="34.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 1.36%)</title><rect x="31" y="420" width="16" height="15" fill="rgb(239,138,1)"/><text x="34.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 0.90%)</title><rect x="36" y="436" width="11" height="15" fill="rgb(206,49,14)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="452" width="11" height="15" fill="rgb(244,32,20)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.90%)</title><rect x="36" y="468" width="11" height="15" fill="rgb(237,186,45)"/><text x="39.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="484" width="11" height="15" fill="rgb(210,211,53)"/><text x="39.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="500" width="11" height="15" fill="rgb(209,45,6)"/><text x="39.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="36" y="516" width="11" height="15" fill="rgb(228,49,45)"/><text x="39.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="36" y="532" width="11" height="15" fill="rgb(233,75,19)"/><text x="39.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="36" y="548" width="11" height="15" fill="rgb(209,25,17)"/><text x="39.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="564" width="11" height="15" fill="rgb(219,41,47)"/><text x="39.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 0.90%)</title><rect x="36" y="580" width="11" height="15" fill="rgb(251,7,10)"/><text x="39.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="596" width="11" height="15" fill="rgb(220,15,52)"/><text x="39.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="36" y="612" width="11" height="15" fill="rgb(233,113,28)"/><text x="39.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="36" y="628" width="11" height="15" fill="rgb(228,91,48)"/><text x="39.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="36" y="644" width="11" height="15" fill="rgb(243,142,36)"/><text x="39.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="660" width="11" height="15" fill="rgb(246,114,46)"/><text x="39.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 0.90%)</title><rect x="36" y="676" width="11" height="15" fill="rgb(233,88,53)"/><text x="39.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="36" y="692" width="11" height="15" fill="rgb(217,122,8)"/><text x="39.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="36" y="708" width="11" height="15" fill="rgb(254,211,38)"/><text x="39.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="36" y="724" width="11" height="15" fill="rgb(224,150,15)"/><text x="39.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="36" y="740" width="11" height="15" fill="rgb(253,149,2)"/><text x="39.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="36" y="756" width="11" height="15" fill="rgb(227,99,47)"/><text x="39.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:9) (1 samples, 0.45%)</title><rect x="42" y="772" width="5" height="15" fill="rgb(210,190,34)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="788" width="5" height="15" fill="rgb(214,156,25)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="804" width="5" height="15" fill="rgb(249,167,26)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="820" width="5" height="15" fill="rgb(223,35,4)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="42" y="836" width="5" height="15" fill="rgb(228,148,42)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="42" y="852" width="5" height="15" fill="rgb(238,191,16)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/convert.py:16) (1 samples, 0.45%)</title><rect x="42" y="868" width="5" height="15" fill="rgb(235,92,27)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="42" y="884" width="5" height="15" fill="rgb(236,160,5)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="42" y="900" width="5" height="15" fill="rgb(251,41,42)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="42" y="916" width="5" height="15" fill="rgb(211,217,43)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:724) (1 samples, 0.45%)</title><rect x="42" y="932" width="5" height="15" fill="rgb(245,38,22)"/><text x="45.00" y="942.50"></text></g><g><title>get_code (&lt;frozen importlib._bootstrap_external&gt;:857) (1 samples, 0.45%)</title><rect x="42" y="948" width="5" height="15" fill="rgb(214,92,36)"/><text x="45.00" y="958.50"></text></g><g><title>_compile_bytecode (&lt;frozen importlib._bootstrap_external&gt;:525) (1 samples, 0.45%)</title><rect x="42" y="964" width="5" height="15" fill="rgb(213,53,40)"/><text x="45.00" y="974.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:30) (1 samples, 0.45%)</title><rect x="47" y="100" width="5" height="15" fill="rgb(250,15,12)"/><text x="50.00" y="110.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (2 samples, 0.90%)</title><rect x="63" y="148" width="11" height="15" fill="rgb(239,158,6)"/><text x="66.00" y="158.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (2 samples, 0.90%)</title><rect x="63" y="164" width="11" height="15" fill="rgb(248,206,53)"/><text x="66.00" y="174.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (2 samples, 0.90%)</title><rect x="63" y="180" width="11" height="15" fill="rgb(231,71,20)"/><text x="66.00" y="190.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.45%)</title><rect x="74" y="164" width="5" height="15" fill="rgb(248,124,31)"/><text x="77.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (2 samples, 0.90%)</title><rect x="90" y="180" width="10" height="15" fill="rgb(233,56,54)"/><text x="93.00" y="190.50"></text></g><g><title>unicode_endswith (python3.7) (8 samples, 3.62%)</title><rect x="148" y="196" width="43" height="15" fill="rgb(231,224,54)"/><text x="151.00" y="206.50">unic..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (20 samples, 9.05%)</title><rect x="100" y="180" width="107" height="15" fill="rgb(207,108,17)"/><text x="103.00" y="190.50">&lt;listcomp&gt; (s..</text></g><g><title>unicode_startswith (python3.7) (3 samples, 1.36%)</title><rect x="191" y="196" width="16" height="15" fill="rgb(217,91,21)"/><text x="194.00" y="206.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (27 samples, 12.22%)</title><rect x="74" y="148" width="144" height="15" fill="rgb(214,142,45)"/><text x="77.00" y="158.50">predict (sklearn/t..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (26 samples, 11.76%)</title><rect x="79" y="164" width="139" height="15" fill="rgb(252,52,18)"/><text x="82.00" y="174.50">check_is_fitted (..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.90%)</title><rect x="207" y="180" width="11" height="15" fill="rgb(250,211,40)"/><text x="210.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:443) (1 samples, 0.45%)</title><rect x="234" y="180" width="5" height="15" fill="rgb(223,187,18)"/><text x="237.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:446) (4 samples, 1.81%)</title><rect x="239" y="180" width="21" height="15" fill="rgb(218,66,30)"/><text x="242.00" y="190.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.45%)</title><rect x="266" y="196" width="5" height="15" fill="rgb(245,93,46)"/><text x="269.00" y="206.50"></text></g><g><title>__enter__ (warnings.py:479) (2 samples, 0.90%)</title><rect x="271" y="196" width="11" height="15" fill="rgb(238,211,49)"/><text x="274.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (6 samples, 2.71%)</title><rect x="260" y="180" width="32" height="15" fill="rgb(227,160,53)"/><text x="263.00" y="190.50">ch..</text></g><g><title>__init__ (warnings.py:461) (2 samples, 0.90%)</title><rect x="282" y="196" width="10" height="15" fill="rgb(208,200,9)"/><text x="285.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:186) (6 samples, 2.71%)</title><rect x="298" y="212" width="32" height="15" fill="rgb(207,217,13)"/><text x="301.00" y="222.50">_a..</text></g><g><title>check_array (sklearn/utils/validation.py:504) (8 samples, 3.62%)</title><rect x="292" y="180" width="43" height="15" fill="rgb(232,218,2)"/><text x="295.00" y="190.50">chec..</text></g><g><title>simplefilter (warnings.py:179) (7 samples, 3.17%)</title><rect x="298" y="196" width="37" height="15" fill="rgb(227,71,36)"/><text x="301.00" y="206.50">sim..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.45%)</title><rect x="330" y="212" width="5" height="15" fill="rgb(208,8,35)"/><text x="333.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (1 samples, 0.45%)</title><rect x="335" y="180" width="6" height="15" fill="rgb(237,66,7)"/><text x="338.00" y="190.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.45%)</title><rect x="335" y="196" width="6" height="15" fill="rgb(254,187,39)"/><text x="338.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 1.81%)</title><rect x="341" y="180" width="21" height="15" fill="rgb(244,50,38)"/><text x="344.00" y="190.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (4 samples, 1.81%)</title><rect x="341" y="196" width="21" height="15" fill="rgb(234,64,36)"/><text x="344.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (3 samples, 1.36%)</title><rect x="346" y="212" width="16" height="15" fill="rgb(240,3,48)"/><text x="349.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.45%)</title><rect x="362" y="180" width="5" height="15" fill="rgb(224,86,46)"/><text x="365.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.45%)</title><rect x="367" y="196" width="6" height="15" fill="rgb(238,195,3)"/><text x="370.00" y="206.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.45%)</title><rect x="367" y="212" width="6" height="15" fill="rgb(251,83,25)"/><text x="370.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.90%)</title><rect x="367" y="180" width="11" height="15" fill="rgb(229,227,7)"/><text x="370.00" y="190.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:334) (1 samples, 0.45%)</title><rect x="373" y="196" width="5" height="15" fill="rgb(210,49,46)"/><text x="376.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (4 samples, 1.81%)</title><rect x="431" y="212" width="22" height="15" fill="rgb(246,171,28)"/><text x="434.00" y="222.50">_..</text></g><g><title>0x7f52d50ace7a (libc-2.29.so) (1 samples, 0.45%)</title><rect x="447" y="228" width="6" height="15" fill="rgb(242,50,50)"/><text x="450.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (16 samples, 7.24%)</title><rect x="378" y="180" width="85" height="15" fill="rgb(244,14,17)"/><text x="381.00" y="190.50">check_arra..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (15 samples, 6.79%)</title><rect x="383" y="196" width="80" height="15" fill="rgb(226,2,11)"/><text x="386.00" y="206.50">_assert_a..</text></g><g><title>unicode_hash (python3.7) (2 samples, 0.90%)</title><rect x="453" y="212" width="10" height="15" fill="rgb(205,189,20)"/><text x="456.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.90%)</title><rect x="463" y="196" width="11" height="15" fill="rgb(213,10,48)"/><text x="466.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="469" y="212" width="5" height="15" fill="rgb(208,147,15)"/><text x="472.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.45%)</title><rect x="474" y="196" width="5" height="15" fill="rgb(223,163,18)"/><text x="477.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:565) (9 samples, 4.07%)</title><rect x="463" y="180" width="48" height="15" fill="rgb(243,94,48)"/><text x="466.00" y="190.50">chec..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (6 samples, 2.71%)</title><rect x="479" y="196" width="32" height="15" fill="rgb(214,109,31)"/><text x="482.00" y="206.50">_n..</text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 1.36%)</title><rect x="495" y="212" width="16" height="15" fill="rgb(222,33,17)"/><text x="498.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (2 samples, 0.90%)</title><rect x="501" y="228" width="10" height="15" fill="rgb(246,209,23)"/><text x="504.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:572) (1 samples, 0.45%)</title><rect x="511" y="180" width="6" height="15" fill="rgb(231,77,41)"/><text x="514.00" y="190.50"></text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (56 samples, 25.34%)</title><rect x="223" y="164" width="299" height="15" fill="rgb(239,131,54)"/><text x="226.00" y="174.50">_validate_X_predict (sklearn/tree/_class..</text></g><g><title>check_array (sklearn/utils/validation.py:588) (1 samples, 0.45%)</title><rect x="517" y="180" width="5" height="15" fill="rgb(236,96,37)"/><text x="520.00" y="190.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (58 samples, 26.24%)</title><rect x="218" y="148" width="309" height="15" fill="rgb(205,9,45)"/><text x="221.00" y="158.50">predict (sklearn/tree/_classes.py:419)</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:381) (1 samples, 0.45%)</title><rect x="522" y="164" width="5" height="15" fill="rgb(237,132,16)"/><text x="525.00" y="174.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (1 samples, 0.45%)</title><rect x="522" y="180" width="5" height="15" fill="rgb(240,28,30)"/><text x="525.00" y="190.50"></text></g><g><title>0x7f52af702d2e (?) (1 samples, 0.45%)</title><rect x="527" y="164" width="6" height="15" fill="rgb(215,143,54)"/><text x="530.00" y="174.50"></text></g><g><title>0x7f52af70205a (?) (1 samples, 0.45%)</title><rect x="527" y="180" width="6" height="15" fill="rgb(251,106,22)"/><text x="530.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.45%)</title><rect x="527" y="196" width="6" height="15" fill="rgb(238,201,30)"/><text x="530.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.45%)</title><rect x="527" y="212" width="6" height="15" fill="rgb(227,118,50)"/><text x="530.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.45%)</title><rect x="527" y="228" width="6" height="15" fill="rgb(214,47,24)"/><text x="530.00" y="238.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.45%)</title><rect x="527" y="244" width="6" height="15" fill="rgb(238,60,26)"/><text x="530.00" y="254.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:974) (1 samples, 0.45%)</title><rect x="527" y="260" width="6" height="15" fill="rgb(237,207,46)"/><text x="530.00" y="270.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c:858) (1 samples, 0.45%)</title><rect x="527" y="276" width="6" height="15" fill="rgb(238,190,7)"/><text x="530.00" y="286.50"></text></g><g><title>0x7f52af701f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="533" y="180" width="5" height="15" fill="rgb(217,68,48)"/><text x="536.00" y="190.50"></text></g><g><title>0x7f52af6f1d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="533" y="196" width="5" height="15" fill="rgb(253,2,51)"/><text x="536.00" y="206.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.45%)</title><rect x="533" y="212" width="5" height="15" fill="rgb(229,137,49)"/><text x="536.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.45%)</title><rect x="533" y="228" width="5" height="15" fill="rgb(250,4,45)"/><text x="536.00" y="238.50"></text></g><g><title>0x7f52af701f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="538" y="180" width="5" height="15" fill="rgb(208,56,51)"/><text x="541.00" y="190.50"></text></g><g><title>0x7f52af7101dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="543" y="212" width="6" height="15" fill="rgb(250,7,10)"/><text x="546.00" y="222.50"></text></g><g><title>array_getbuffer (buffer.c:770) (1 samples, 0.45%)</title><rect x="549" y="276" width="5" height="15" fill="rgb(214,13,9)"/><text x="552.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.45%)</title><rect x="554" y="292" width="5" height="15" fill="rgb(241,24,23)"/><text x="557.00" y="302.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.45%)</title><rect x="554" y="308" width="5" height="15" fill="rgb(234,116,41)"/><text x="557.00" y="318.50"></text></g><g><title>_buffer_format_string (buffer.c:372) (1 samples, 0.45%)</title><rect x="554" y="324" width="5" height="15" fill="rgb(226,24,45)"/><text x="557.00" y="334.50"></text></g><g><title>0x7f52af6f4666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.36%)</title><rect x="549" y="244" width="16" height="15" fill="rgb(246,99,31)"/><text x="552.00" y="254.50"></text></g><g><title>0x7f52af6ea2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.36%)</title><rect x="549" y="260" width="16" height="15" fill="rgb(227,125,50)"/><text x="552.00" y="270.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.90%)</title><rect x="554" y="276" width="11" height="15" fill="rgb(236,9,19)"/><text x="557.00" y="286.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.45%)</title><rect x="559" y="292" width="6" height="15" fill="rgb(249,215,15)"/><text x="562.00" y="302.50"></text></g><g><title>0x7f52af6f46cf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="565" y="244" width="5" height="15" fill="rgb(205,206,13)"/><text x="568.00" y="254.50"></text></g><g><title>0x7f52af6f4d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (5 samples, 2.26%)</title><rect x="549" y="228" width="26" height="15" fill="rgb(206,4,13)"/><text x="552.00" y="238.50">0..</text></g><g><title>0x7f52af6f46fa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="570" y="244" width="5" height="15" fill="rgb(234,211,13)"/><text x="573.00" y="254.50"></text></g><g><title>0x7f52af7102df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (6 samples, 2.71%)</title><rect x="549" y="212" width="32" height="15" fill="rgb(207,174,52)"/><text x="552.00" y="222.50">0x..</text></g><g><title>0x7f52af6f4dc1 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="575" y="228" width="6" height="15" fill="rgb(222,128,6)"/><text x="578.00" y="238.50"></text></g><g><title>0x7f52af7104b9 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="581" y="212" width="5" height="15" fill="rgb(223,214,38)"/><text x="584.00" y="222.50"></text></g><g><title>0x7f52af710511 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="586" y="212" width="5" height="15" fill="rgb(236,44,28)"/><text x="589.00" y="222.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.45%)</title><rect x="597" y="244" width="5" height="15" fill="rgb(209,137,9)"/><text x="600.00" y="254.50"></text></g><g><title>0x7f52af710592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.36%)</title><rect x="591" y="212" width="17" height="15" fill="rgb(209,30,13)"/><text x="594.00" y="222.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (3 samples, 1.36%)</title><rect x="591" y="228" width="17" height="15" fill="rgb(221,87,1)"/><text x="594.00" y="238.50"></text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="602" y="244" width="6" height="15" fill="rgb(217,56,13)"/><text x="605.00" y="254.50"></text></g><g><title>0x7f52d517414d (libc-2.29.so) (1 samples, 0.45%)</title><rect x="602" y="260" width="6" height="15" fill="rgb(207,68,38)"/><text x="605.00" y="270.50"></text></g><g><title>0x7f52af710644 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="608" y="212" width="10" height="15" fill="rgb(241,95,6)"/><text x="611.00" y="222.50"></text></g><g><title>__pthread_cond_signal (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="613" y="228" width="5" height="15" fill="rgb(227,175,6)"/><text x="616.00" y="238.50"></text></g><g><title>0x7f52af701fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 6.79%)</title><rect x="543" y="180" width="81" height="15" fill="rgb(248,85,23)"/><text x="546.00" y="190.50">0x7f52af7..</text></g><g><title>0x7f52af711405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 6.79%)</title><rect x="543" y="196" width="81" height="15" fill="rgb(208,62,1)"/><text x="546.00" y="206.50">0x7f52af7..</text></g><g><title>0x7f52af7108aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="618" y="212" width="6" height="15" fill="rgb(216,49,1)"/><text x="621.00" y="222.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.45%)</title><rect x="624" y="196" width="5" height="15" fill="rgb(225,162,51)"/><text x="627.00" y="206.50"></text></g><g><title>0x7f52af70205a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.90%)</title><rect x="624" y="180" width="10" height="15" fill="rgb(250,14,28)"/><text x="627.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.45%)</title><rect x="629" y="196" width="5" height="15" fill="rgb(246,228,6)"/><text x="632.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:72) (1 samples, 0.45%)</title><rect x="629" y="212" width="5" height="15" fill="rgb(245,67,53)"/><text x="632.00" y="222.50"></text></g><g><title>0x7f52af70213a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="634" y="180" width="6" height="15" fill="rgb(208,53,15)"/><text x="637.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.45%)</title><rect x="634" y="196" width="6" height="15" fill="rgb(219,158,44)"/><text x="637.00" y="206.50"></text></g><g><title>0x7f52af70214f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="640" y="180" width="5" height="15" fill="rgb(245,149,40)"/><text x="643.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.45%)</title><rect x="640" y="196" width="5" height="15" fill="rgb(211,134,17)"/><text x="643.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.45%)</title><rect x="640" y="212" width="5" height="15" fill="rgb(205,50,13)"/><text x="643.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.45%)</title><rect x="640" y="228" width="5" height="15" fill="rgb(222,130,44)"/><text x="643.00" y="238.50"></text></g><g><title>0x7f52af7021bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="645" y="180" width="5" height="15" fill="rgb(244,107,6)"/><text x="648.00" y="190.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.45%)</title><rect x="645" y="196" width="5" height="15" fill="rgb(231,183,23)"/><text x="648.00" y="206.50"></text></g><g><title>0x7f52d50b7120 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="645" y="212" width="5" height="15" fill="rgb(253,167,48)"/><text x="648.00" y="222.50"></text></g><g><title>array_reshape (methods.c:186) (2 samples, 0.90%)</title><rect x="650" y="196" width="11" height="15" fill="rgb(246,15,41)"/><text x="653.00" y="206.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (1 samples, 0.45%)</title><rect x="656" y="212" width="5" height="15" fill="rgb(205,5,13)"/><text x="659.00" y="222.50"></text></g><g><title>0x7f52d50ac734 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="656" y="228" width="5" height="15" fill="rgb(219,162,44)"/><text x="659.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (26 samples, 11.76%)</title><rect x="527" y="148" width="139" height="15" fill="rgb(225,19,17)"/><text x="530.00" y="158.50">predict (sklearn/..</text></g><g><title>0x7f52af702d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (25 samples, 11.31%)</title><rect x="533" y="164" width="133" height="15" fill="rgb(225,218,20)"/><text x="536.00" y="174.50">0x7f52af702d2e (..</text></g><g><title>0x7f52af702328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 1.36%)</title><rect x="650" y="180" width="16" height="15" fill="rgb(207,116,28)"/><text x="653.00" y="190.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.45%)</title><rect x="661" y="196" width="5" height="15" fill="rgb(226,128,19)"/><text x="664.00" y="206.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.45%)</title><rect x="661" y="212" width="5" height="15" fill="rgb(236,89,26)"/><text x="664.00" y="222.50"></text></g><g><title>PyArray_Newshape (shape.c:194) (1 samples, 0.45%)</title><rect x="661" y="228" width="5" height="15" fill="rgb(237,40,19)"/><text x="664.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.45%)</title><rect x="666" y="148" width="6" height="15" fill="rgb(241,94,4)"/><text x="669.00" y="158.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (119 samples, 53.85%)</title><rect x="58" y="132" width="635" height="15" fill="rgb(250,134,1)"/><text x="61.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/tree/_classes.py:442) (4 samples, 1.81%)</title><rect x="672" y="148" width="21" height="15" fill="rgb(244,15,1)"/><text x="675.00" y="158.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.45%)</title><rect x="688" y="164" width="5" height="15" fill="rgb(236,170,22)"/><text x="691.00" y="174.50"></text></g><g><title>get_view_from_index (mapping.c:958) (1 samples, 0.45%)</title><rect x="688" y="180" width="5" height="15" fill="rgb(214,66,37)"/><text x="691.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:54) (122 samples, 55.20%)</title><rect x="47" y="52" width="651" height="15" fill="rgb(254,44,54)"/><text x="50.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:54)</text></g><g><title>profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:53) (122 samples, 55.20%)</title><rect x="47" y="68" width="651" height="15" fill="rgb(249,129,12)"/><text x="50.00" y="78.50">profile_skl (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:53)</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37) (122 samples, 55.20%)</title><rect x="47" y="84" width="651" height="15" fill="rgb(220,73,54)"/><text x="50.00" y="94.50">setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37)</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31) (121 samples, 54.75%)</title><rect x="52" y="100" width="646" height="15" fill="rgb(237,26,25)"/><text x="55.00" y="110.50">profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (120 samples, 54.30%)</title><rect x="58" y="116" width="640" height="15" fill="rgb(231,175,5)"/><text x="61.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="693" y="132" width="5" height="15" fill="rgb(237,179,10)"/><text x="696.00" y="142.50"></text></g><g><title>0x7f52d5174140 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="693" y="148" width="5" height="15" fill="rgb(225,88,23)"/><text x="696.00" y="158.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:36) (1 samples, 0.45%)</title><rect x="698" y="84" width="6" height="15" fill="rgb(213,110,44)"/><text x="701.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.45%)</title><rect x="698" y="100" width="6" height="15" fill="rgb(253,0,12)"/><text x="701.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.45%)</title><rect x="698" y="116" width="6" height="15" fill="rgb(215,177,48)"/><text x="701.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.45%)</title><rect x="698" y="132" width="6" height="15" fill="rgb(209,80,5)"/><text x="701.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.45%)</title><rect x="698" y="148" width="6" height="15" fill="rgb(240,47,45)"/><text x="701.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:115) (1 samples, 0.45%)</title><rect x="698" y="164" width="6" height="15" fill="rgb(209,13,51)"/><text x="701.00" y="174.50"></text></g><g><title>setup_runtime (mlprodict/onnxrt/onnx_inference_node.py:101) (1 samples, 0.45%)</title><rect x="698" y="180" width="6" height="15" fill="rgb(205,181,23)"/><text x="701.00" y="190.50"></text></g><g><title>load_op (mlprodict/onnxrt/ops.py:28) (1 samples, 0.45%)</title><rect x="698" y="196" width="6" height="15" fill="rgb(223,160,23)"/><text x="701.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="698" y="212" width="6" height="15" fill="rgb(239,122,25)"/><text x="701.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="698" y="228" width="6" height="15" fill="rgb(244,31,47)"/><text x="701.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="698" y="244" width="6" height="15" fill="rgb(245,162,14)"/><text x="701.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="698" y="260" width="6" height="15" fill="rgb(236,220,3)"/><text x="701.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="698" y="276" width="6" height="15" fill="rgb(221,7,16)"/><text x="701.00" y="286.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/__init__.py:7) (1 samples, 0.45%)</title><rect x="698" y="292" width="6" height="15" fill="rgb(252,5,52)"/><text x="701.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="698" y="308" width="6" height="15" fill="rgb(216,41,7)"/><text x="701.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="698" y="324" width="6" height="15" fill="rgb(222,0,52)"/><text x="701.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="698" y="340" width="6" height="15" fill="rgb(235,19,5)"/><text x="701.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="698" y="356" width="6" height="15" fill="rgb(223,198,43)"/><text x="701.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="698" y="372" width="6" height="15" fill="rgb(254,181,37)"/><text x="701.00" y="382.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op_list.py:8) (1 samples, 0.45%)</title><rect x="698" y="388" width="6" height="15" fill="rgb(219,95,12)"/><text x="701.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.45%)</title><rect x="698" y="404" width="6" height="15" fill="rgb(223,172,40)"/><text x="701.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.45%)</title><rect x="698" y="420" width="6" height="15" fill="rgb(211,35,40)"/><text x="701.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.45%)</title><rect x="698" y="436" width="6" height="15" fill="rgb(236,218,46)"/><text x="701.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.45%)</title><rect x="698" y="452" width="6" height="15" fill="rgb(212,127,4)"/><text x="701.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.45%)</title><rect x="698" y="468" width="6" height="15" fill="rgb(209,86,50)"/><text x="701.00" y="478.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_cpu/_op.py:25) (1 samples, 0.45%)</title><rect x="698" y="484" width="6" height="15" fill="rgb(225,222,10)"/><text x="701.00" y="494.50"></text></g><g><title>_build_schemas (mlprodict/onnxrt/ops_cpu/_op.py:13) (1 samples, 0.45%)</title><rect x="698" y="500" width="6" height="15" fill="rgb(231,90,39)"/><text x="701.00" y="510.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="698" y="516" width="6" height="15" fill="rgb(240,35,5)"/><text x="701.00" y="526.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="698" y="532" width="6" height="15" fill="rgb(239,95,21)"/><text x="701.00" y="542.50"></text></g><g><title>std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt;::_M_emplace_back_aux&lt;onnx::OpSchema&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="698" y="548" width="6" height="15" fill="rgb(211,165,12)"/><text x="701.00" y="558.50"></text></g><g><title>onnx::OpSchema::OpSchema (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="698" y="564" width="6" height="15" fill="rgb(216,188,40)"/><text x="701.00" y="574.50"></text></g><g><title>std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_M_assign&lt;std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt;::_Hashtable(std::_Hashtable&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Identity, std::equal_to&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, true, true&gt; &gt; const&amp;)::{lambda(std::__detail::_Hash_node&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, false&gt; const*)#1}&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.45%)</title><rect x="698" y="580" width="6" height="15" fill="rgb(240,80,49)"/><text x="701.00" y="590.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="698" y="596" width="6" height="15" fill="rgb(206,226,41)"/><text x="701.00" y="606.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="698" y="612" width="6" height="15" fill="rgb(219,149,23)"/><text x="701.00" y="622.50"></text></g><g><title>0x7f52d50988a4 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="698" y="628" width="6" height="15" fill="rgb(230,119,25)"/><text x="701.00" y="638.50"></text></g><g><title>0x7f5295baf54f (?) (1 samples, 0.45%)</title><rect x="704" y="244" width="5" height="15" fill="rgb(224,52,17)"/><text x="707.00" y="254.50"></text></g><g><title>0x7f5295bb565e (?) (1 samples, 0.45%)</title><rect x="704" y="260" width="5" height="15" fill="rgb(230,222,49)"/><text x="707.00" y="270.50"></text></g><g><title>0x7f5295bb550f (?) (1 samples, 0.45%)</title><rect x="704" y="276" width="5" height="15" fill="rgb(227,208,48)"/><text x="707.00" y="286.50"></text></g><g><title>0x7f5295bbbd6c (?) (1 samples, 0.45%)</title><rect x="704" y="292" width="5" height="15" fill="rgb(206,41,8)"/><text x="707.00" y="302.50"></text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="704" y="308" width="5" height="15" fill="rgb(218,55,14)"/><text x="707.00" y="318.50"></text></g><g><title>0x7f529f09bdaa (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="704" y="324" width="5" height="15" fill="rgb(216,128,2)"/><text x="707.00" y="334.50"></text></g><g><title>0x7f529f09dcfb (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="704" y="340" width="5" height="15" fill="rgb(240,195,53)"/><text x="707.00" y="350.50"></text></g><g><title>0x7f529f09dea0 (libgomp.so.1.0.0) (3 samples, 1.36%)</title><rect x="709" y="484" width="16" height="15" fill="rgb(227,153,27)"/><text x="712.00" y="494.50"></text></g><g><title>0x7f529f09dea9 (libgomp.so.1.0.0) (7 samples, 3.17%)</title><rect x="725" y="484" width="37" height="15" fill="rgb(239,26,15)"/><text x="728.00" y="494.50">0x7..</text></g><g><title>0x7f529f09deab (libgomp.so.1.0.0) (14 samples, 6.33%)</title><rect x="762" y="484" width="75" height="15" fill="rgb(239,213,45)"/><text x="765.00" y="494.50">0x7f529f..</text></g><g><title>0x7f529f09cab9 (libgomp.so.1.0.0) (35 samples, 15.84%)</title><rect x="709" y="468" width="187" height="15" fill="rgb(224,99,8)"/><text x="712.00" y="478.50">0x7f529f09cab9 (libgomp...</text></g><g><title>0x7f529f09dead (libgomp.so.1.0.0) (11 samples, 4.98%)</title><rect x="837" y="484" width="59" height="15" fill="rgb(228,64,31)"/><text x="840.00" y="494.50">0x7f52..</text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:61) (38 samples, 17.19%)</title><rect x="698" y="52" width="203" height="15" fill="rgb(217,38,14)"/><text x="701.00" y="62.50">&lt;module&gt; (bench_DecisionTr..</text></g><g><title>profile_pyrt (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:60) (38 samples, 17.19%)</title><rect x="698" y="68" width="203" height="15" fill="rgb(213,92,36)"/><text x="701.00" y="78.50">profile_pyrt (bench_Decisi..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37) (37 samples, 16.74%)</title><rect x="704" y="84" width="197" height="15" fill="rgb(244,194,21)"/><text x="707.00" y="94.50">setup_profile (bench_Deci..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31) (37 samples, 16.74%)</title><rect x="704" y="100" width="197" height="15" fill="rgb(219,138,1)"/><text x="707.00" y="110.50">profile (bench_DecisionTr..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (37 samples, 16.74%)</title><rect x="704" y="116" width="197" height="15" fill="rgb(214,206,39)"/><text x="707.00" y="126.50">time_predict (mlprodict/a..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (37 samples, 16.74%)</title><rect x="704" y="132" width="197" height="15" fill="rgb(210,89,26)"/><text x="707.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_b..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (37 samples, 16.74%)</title><rect x="704" y="148" width="197" height="15" fill="rgb(213,70,17)"/><text x="707.00" y="158.50">run (mlprodict/onnxrt/onn..</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (37 samples, 16.74%)</title><rect x="704" y="164" width="197" height="15" fill="rgb(220,110,21)"/><text x="707.00" y="174.50">_run_sequence_runtime (ml..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (37 samples, 16.74%)</title><rect x="704" y="180" width="197" height="15" fill="rgb(232,110,52)"/><text x="707.00" y="190.50">run (mlprodict/onnxrt/onn..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (37 samples, 16.74%)</title><rect x="704" y="196" width="197" height="15" fill="rgb(237,109,37)"/><text x="707.00" y="206.50">run (mlprodict/onnxrt/ops..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (37 samples, 16.74%)</title><rect x="704" y="212" width="197" height="15" fill="rgb(212,204,19)"/><text x="707.00" y="222.50">run (mlprodict/onnxrt/ops..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (37 samples, 16.74%)</title><rect x="704" y="228" width="197" height="15" fill="rgb(231,132,21)"/><text x="707.00" y="238.50">_run (mlprodict/onnxrt/op..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (36 samples, 16.29%)</title><rect x="709" y="244" width="192" height="15" fill="rgb(238,95,16)"/><text x="712.00" y="254.50">pybind11::cpp_function::d..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (36 samples, 16.29%)</title><rect x="709" y="260" width="192" height="15" fill="rgb(237,225,31)"/><text x="712.00" y="270.50">void pybind11::cpp_functi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (36 samples, 16.29%)</title><rect x="709" y="276" width="192" height="15" fill="rgb(216,104,54)"/><text x="712.00" y="286.50">void pybind11::cpp_functi..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (36 samples, 16.29%)</title><rect x="709" y="292" width="192" height="15" fill="rgb(226,54,21)"/><text x="712.00" y="302.50">pybind11::detail::argumen..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (36 samples, 16.29%)</title><rect x="709" y="308" width="192" height="15" fill="rgb(228,111,54)"/><text x="712.00" y="318.50">pybind11::detail::argumen..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (36 samples, 16.29%)</title><rect x="709" y="324" width="192" height="15" fill="rgb(230,224,40)"/><text x="712.00" y="334.50">pybind11::cpp_function::c..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (36 samples, 16.29%)</title><rect x="709" y="340" width="192" height="15" fill="rgb(232,105,22)"/><text x="712.00" y="350.50">pybind11::array_t&lt;float, ..</text></g><g><title>pybind11::array::~array (numpy.h:538) (36 samples, 16.29%)</title><rect x="709" y="356" width="192" height="15" fill="rgb(231,120,26)"/><text x="712.00" y="366.50">pybind11::array::~array (..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (36 samples, 16.29%)</title><rect x="709" y="372" width="192" height="15" fill="rgb(217,217,16)"/><text x="712.00" y="382.50">pybind11::buffer::~buffer..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (36 samples, 16.29%)</title><rect x="709" y="388" width="192" height="15" fill="rgb(230,183,26)"/><text x="712.00" y="398.50">pybind11::object::~object..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (36 samples, 16.29%)</title><rect x="709" y="404" width="192" height="15" fill="rgb(248,177,29)"/><text x="712.00" y="414.50">pybind11::handle::dec_ref..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (36 samples, 16.29%)</title><rect x="709" y="420" width="192" height="15" fill="rgb(229,88,29)"/><text x="712.00" y="430.50">RuntimeTreeEnsembleRegres..</text></g><g><title>pybind11::array::size (numpy.h:619) (36 samples, 16.29%)</title><rect x="709" y="436" width="192" height="15" fill="rgb(229,229,54)"/><text x="712.00" y="446.50">pybind11::array::size (nu..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (36 samples, 16.29%)</title><rect x="709" y="452" width="192" height="15" fill="rgb(230,185,23)"/><text x="712.00" y="462.50">std::accumulate&lt;long cons..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="896" y="468" width="5" height="15" fill="rgb(207,26,34)"/><text x="899.00" y="478.50"></text></g><g><title>0x7f529f09bdaa (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="896" y="484" width="5" height="15" fill="rgb(254,50,18)"/><text x="899.00" y="494.50"></text></g><g><title>0x7f529f09dcfb (libgomp.so.1.0.0) (1 samples, 0.45%)</title><rect x="896" y="500" width="5" height="15" fill="rgb(241,145,52)"/><text x="899.00" y="510.50"></text></g><g><title>0x7f529515caf0 (?) (1 samples, 0.45%)</title><rect x="901" y="564" width="6" height="15" fill="rgb(248,34,9)"/><text x="904.00" y="574.50"></text></g><g><title>0x7f529516f1d2 (?) (1 samples, 0.45%)</title><rect x="901" y="580" width="6" height="15" fill="rgb(246,183,38)"/><text x="904.00" y="590.50"></text></g><g><title>0x7f529516e7b8 (?) (1 samples, 0.45%)</title><rect x="901" y="596" width="6" height="15" fill="rgb(231,100,21)"/><text x="904.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="901" y="612" width="6" height="15" fill="rgb(223,205,25)"/><text x="904.00" y="622.50"></text></g><g><title>0x7f529516c6f8 (?) (1 samples, 0.45%)</title><rect x="901" y="628" width="6" height="15" fill="rgb(240,157,46)"/><text x="904.00" y="638.50"></text></g><g><title>0x7f52955f7f25 (?) (1 samples, 0.45%)</title><rect x="901" y="644" width="6" height="15" fill="rgb(245,206,33)"/><text x="904.00" y="654.50"></text></g><g><title>0x7f529516d59c (?) (1 samples, 0.45%)</title><rect x="901" y="660" width="6" height="15" fill="rgb(243,34,10)"/><text x="904.00" y="670.50"></text></g><g><title>0x7f529571239e (?) (1 samples, 0.45%)</title><rect x="901" y="676" width="6" height="15" fill="rgb(211,82,23)"/><text x="904.00" y="686.50"></text></g><g><title>0x7f5295711f46 (?) (1 samples, 0.45%)</title><rect x="901" y="692" width="6" height="15" fill="rgb(245,145,6)"/><text x="904.00" y="702.50"></text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:36) (2 samples, 0.90%)</title><rect x="901" y="84" width="11" height="15" fill="rgb(253,215,52)"/><text x="904.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (2 samples, 0.90%)</title><rect x="901" y="100" width="11" height="15" fill="rgb(210,203,49)"/><text x="904.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (2 samples, 0.90%)</title><rect x="901" y="116" width="11" height="15" fill="rgb(225,118,32)"/><text x="904.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (2 samples, 0.90%)</title><rect x="901" y="132" width="11" height="15" fill="rgb(219,118,20)"/><text x="904.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (2 samples, 0.90%)</title><rect x="901" y="148" width="11" height="15" fill="rgb(216,223,30)"/><text x="904.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:98) (2 samples, 0.90%)</title><rect x="901" y="164" width="11" height="15" fill="rgb(220,127,2)"/><text x="904.00" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="901" y="180" width="11" height="15" fill="rgb(248,182,7)"/><text x="904.00" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="901" y="196" width="11" height="15" fill="rgb(215,22,12)"/><text x="904.00" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="901" y="212" width="11" height="15" fill="rgb(251,79,6)"/><text x="904.00" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="901" y="228" width="11" height="15" fill="rgb(248,49,7)"/><text x="904.00" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="901" y="244" width="11" height="15" fill="rgb(249,86,51)"/><text x="904.00" y="254.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/ops_whole/session.py:6) (2 samples, 0.90%)</title><rect x="901" y="260" width="11" height="15" fill="rgb(247,54,9)"/><text x="904.00" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="901" y="276" width="11" height="15" fill="rgb(207,159,9)"/><text x="904.00" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="901" y="292" width="11" height="15" fill="rgb(221,223,45)"/><text x="904.00" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="901" y="308" width="11" height="15" fill="rgb(207,130,26)"/><text x="904.00" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="901" y="324" width="11" height="15" fill="rgb(241,184,32)"/><text x="904.00" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="901" y="340" width="11" height="15" fill="rgb(207,39,29)"/><text x="904.00" y="350.50"></text></g><g><title>&lt;module&gt; (onnxruntime/__init__.py:12) (2 samples, 0.90%)</title><rect x="901" y="356" width="11" height="15" fill="rgb(236,27,19)"/><text x="904.00" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="901" y="372" width="11" height="15" fill="rgb(209,109,46)"/><text x="904.00" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="901" y="388" width="11" height="15" fill="rgb(234,93,41)"/><text x="904.00" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.90%)</title><rect x="901" y="404" width="11" height="15" fill="rgb(252,15,27)"/><text x="904.00" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.90%)</title><rect x="901" y="420" width="11" height="15" fill="rgb(250,204,49)"/><text x="904.00" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="901" y="436" width="11" height="15" fill="rgb(227,54,21)"/><text x="904.00" y="446.50"></text></g><g><title>&lt;module&gt; (onnxruntime/capi/_pybind_state.py:11) (2 samples, 0.90%)</title><rect x="901" y="452" width="11" height="15" fill="rgb(252,35,0)"/><text x="904.00" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.90%)</title><rect x="901" y="468" width="11" height="15" fill="rgb(235,9,8)"/><text x="904.00" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.90%)</title><rect x="901" y="484" width="11" height="15" fill="rgb(225,148,45)"/><text x="904.00" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (2 samples, 0.90%)</title><rect x="901" y="500" width="11" height="15" fill="rgb(231,81,43)"/><text x="904.00" y="510.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (2 samples, 0.90%)</title><rect x="901" y="516" width="11" height="15" fill="rgb(234,112,15)"/><text x="904.00" y="526.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (2 samples, 0.90%)</title><rect x="901" y="532" width="11" height="15" fill="rgb(227,39,23)"/><text x="904.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.90%)</title><rect x="901" y="548" width="11" height="15" fill="rgb(219,101,25)"/><text x="904.00" y="558.50"></text></g><g><title>PyInit_onnxruntime_pybind11_state (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="907" y="564" width="5" height="15" fill="rgb(241,87,9)"/><text x="910.00" y="574.50"></text></g><g><title>onnxruntime::Environment::Create (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="907" y="580" width="5" height="15" fill="rgb(220,13,4)"/><text x="910.00" y="590.50"></text></g><g><title>onnxruntime::Environment::Initialize (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="907" y="596" width="5" height="15" fill="rgb(206,142,25)"/><text x="910.00" y="606.50"></text></g><g><title>__pthread_once_slow (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="907" y="612" width="5" height="15" fill="rgb(250,160,22)"/><text x="910.00" y="622.50"></text></g><g><title>void std::call_once&lt;onnxruntime::Environment::Initialize()::{lambda()#1}, &gt;(std::once_flag&amp;, onnxruntime::Environment::Initialize()::{lambda()#1}&amp;&amp;, &amp;&amp;)::{lambda()#2}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="907" y="628" width="5" height="15" fill="rgb(250,65,42)"/><text x="910.00" y="638.50"></text></g><g><title>onnx::OpSet_Onnx_ver1::ForEachSchema (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="907" y="644" width="5" height="15" fill="rgb(215,159,13)"/><text x="910.00" y="654.50"></text></g><g><title>onnx::GetOpSchema&lt;onnx::Constant_Onnx_ver1&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="907" y="660" width="5" height="15" fill="rgb(250,93,45)"/><text x="910.00" y="670.50"></text></g><g><title>operator delete (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="907" y="676" width="5" height="15" fill="rgb(240,160,9)"/><text x="910.00" y="686.50"></text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:30) (1 samples, 0.45%)</title><rect x="912" y="100" width="5" height="15" fill="rgb(238,163,19)"/><text x="915.00" y="110.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.45%)</title><rect x="939" y="148" width="5" height="15" fill="rgb(235,169,34)"/><text x="942.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.45%)</title><rect x="944" y="148" width="5" height="15" fill="rgb(216,224,15)"/><text x="947.00" y="158.50"></text></g><g><title>pybind11::detail::argument_loader&lt;onnxruntime::SessionOptions const&amp;&gt;::load_impl_sequence&lt;(unsigned long)0&gt; [clone .isra.1217] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="976" y="260" width="5" height="15" fill="rgb(241,166,34)"/><text x="979.00" y="270.50"></text></g><g><title>pybind11::detail::type_caster_generic::load_impl&lt;pybind11::detail::type_caster_generic&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="976" y="276" width="5" height="15" fill="rgb(213,83,12)"/><text x="979.00" y="286.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="981" y="260" width="6" height="15" fill="rgb(247,1,26)"/><text x="984.00" y="270.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (5 samples, 2.26%)</title><rect x="971" y="196" width="26" height="15" fill="rgb(217,153,51)"/><text x="974.00" y="206.50">r..</text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (4 samples, 1.81%)</title><rect x="976" y="212" width="21" height="15" fill="rgb(222,100,27)"/><text x="979.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.81%)</title><rect x="976" y="228" width="21" height="15" fill="rgb(244,150,42)"/><text x="979.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.81%)</title><rect x="976" y="244" width="21" height="15" fill="rgb(231,179,43)"/><text x="979.00" y="254.50"></text></g><g><title>pybind11::detail::type_caster_generic::type_caster_generic [clone .lto_priv.471] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="987" y="260" width="10" height="15" fill="rgb(227,158,27)"/><text x="990.00" y="270.50"></text></g><g><title>pybind11::detail::get_type_info [clone .constprop.384] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="987" y="276" width="10" height="15" fill="rgb(205,125,0)"/><text x="990.00" y="286.50"></text></g><g><title>std::_Hashtable&lt;std::type_index, std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt;, std::allocator&lt;std::pair&lt;std::type_index const, pybind11::detail::type_info*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::type_index&gt;, std::hash&lt;std::type_index&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node [clone .isra.1152] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="992" y="292" width="5" height="15" fill="rgb(218,39,12)"/><text x="995.00" y="302.50"></text></g><g><title>pybind11::detail::loader_life_support::~loader_life_support [clone .constprop.289] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1008" y="228" width="5" height="15" fill="rgb(210,66,3)"/><text x="1011.00" y="238.50"></text></g><g><title>__GI___pthread_mutex_lock (libpthread-2.29.so) (1 samples, 0.45%)</title><rect x="1019" y="260" width="5" height="15" fill="rgb(222,187,34)"/><text x="1022.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1040" y="292" width="5" height="15" fill="rgb(207,96,53)"/><text x="1043.00" y="302.50"></text></g><g><title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1040" y="308" width="5" height="15" fill="rgb(247,225,54)"/><text x="1043.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1040" y="324" width="5" height="15" fill="rgb(220,58,23)"/><text x="1043.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1040" y="340" width="5" height="15" fill="rgb(242,92,21)"/><text x="1043.00" y="350.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::~FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1045" y="292" width="6" height="15" fill="rgb(225,95,2)"/><text x="1048.00" y="302.50"></text></g><g><title>0x7f52d5096a55 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1045" y="308" width="6" height="15" fill="rgb(217,66,54)"/><text x="1048.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="1051" y="292" width="10" height="15" fill="rgb(249,119,19)"/><text x="1054.00" y="302.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (2 samples, 0.90%)</title><rect x="1051" y="308" width="10" height="15" fill="rgb(214,59,13)"/><text x="1054.00" y="318.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 0.90%)</title><rect x="1051" y="324" width="10" height="15" fill="rgb(219,197,23)"/><text x="1054.00" y="334.50"></text></g><g><title>0x7f52d5097b68 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1056" y="340" width="5" height="15" fill="rgb(247,187,40)"/><text x="1059.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionProvider::OnRunStart (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1061" y="292" width="6" height="15" fill="rgb(223,4,43)"/><text x="1064.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::AsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1067" y="308" width="5" height="15" fill="rgb(222,51,13)"/><text x="1070.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="1067" y="292" width="10" height="15" fill="rgb(248,189,25)"/><text x="1070.00" y="302.50"></text></g><g><title>onnxruntime::TensorTypeBase::IsTensorType (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1072" y="308" width="5" height="15" fill="rgb(207,113,2)"/><text x="1075.00" y="318.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="356" width="5" height="15" fill="rgb(239,72,44)"/><text x="1086.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="372" width="5" height="15" fill="rgb(231,169,45)"/><text x="1086.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="388" width="5" height="15" fill="rgb(229,126,8)"/><text x="1086.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="404" width="5" height="15" fill="rgb(252,164,16)"/><text x="1086.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="420" width="5" height="15" fill="rgb(244,226,34)"/><text x="1086.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="436" width="5" height="15" fill="rgb(230,34,27)"/><text x="1086.00" y="446.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="452" width="5" height="15" fill="rgb(245,56,49)"/><text x="1086.00" y="462.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="468" width="5" height="15" fill="rgb(232,151,52)"/><text x="1086.00" y="478.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::operator= (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1083" y="484" width="5" height="15" fill="rgb(219,83,29)"/><text x="1086.00" y="494.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (3 samples, 1.36%)</title><rect x="1077" y="308" width="16" height="15" fill="rgb(240,186,12)"/><text x="1080.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="1083" y="324" width="10" height="15" fill="rgb(233,125,53)"/><text x="1086.00" y="334.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="1083" y="340" width="10" height="15" fill="rgb(227,71,10)"/><text x="1086.00" y="350.50"></text></g><g><title>std::vector&lt;float, std::allocator&lt;float&gt; &gt;::_M_emplace_back_aux&lt;float const&amp;&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1088" y="356" width="5" height="15" fill="rgb(249,47,31)"/><text x="1091.00" y="366.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (13 samples, 5.88%)</title><rect x="1029" y="276" width="70" height="15" fill="rgb(220,122,7)"/><text x="1032.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.81%)</title><rect x="1077" y="292" width="22" height="15" fill="rgb(251,77,33)"/><text x="1080.00" y="302.50">o..</text></g><g><title>onnxruntime::utils::InitializeFeedFetchCopyInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1093" y="308" width="6" height="15" fill="rgb(214,127,38)"/><text x="1096.00" y="318.50"></text></g><g><title>onnxruntime::utils::ProviderIsCpuBased (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1093" y="324" width="6" height="15" fill="rgb(241,35,18)"/><text x="1096.00" y="334.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (15 samples, 6.79%)</title><rect x="1024" y="260" width="80" height="15" fill="rgb(215,175,43)"/><text x="1027.00" y="270.50">onnxrunti..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; [clone .isra.484] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1099" y="276" width="5" height="15" fill="rgb(237,205,5)"/><text x="1102.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1104" y="276" width="5" height="15" fill="rgb(218,196,20)"/><text x="1107.00" y="286.50"></text></g><g><title>0x7f52d50b7120 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1104" y="292" width="5" height="15" fill="rgb(226,150,35)"/><text x="1107.00" y="302.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.90%)</title><rect x="1104" y="260" width="11" height="15" fill="rgb(214,52,37)"/><text x="1107.00" y="270.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.45%)</title><rect x="1109" y="276" width="6" height="15" fill="rgb(229,214,29)"/><text x="1112.00" y="286.50"></text></g><g><title>pybind11::detail::get_internals (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1115" y="260" width="5" height="15" fill="rgb(240,19,2)"/><text x="1118.00" y="270.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 9.50%)</title><rect x="1013" y="244" width="112" height="15" fill="rgb(232,46,43)"/><text x="1016.00" y="254.50">onnxruntime::..</text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::~vector (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="260" width="5" height="15" fill="rgb(220,130,19)"/><text x="1123.00" y="270.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="276" width="5" height="15" fill="rgb(222,165,27)"/><text x="1123.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::~Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="292" width="5" height="15" fill="rgb(252,170,36)"/><text x="1123.00" y="302.50"></text></g><g><title>onnxruntime::BFCArena::Free (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="308" width="5" height="15" fill="rgb(211,135,43)"/><text x="1123.00" y="318.50"></text></g><g><title>onnxruntime::BFCArena::DeallocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="324" width="5" height="15" fill="rgb(215,211,29)"/><text x="1123.00" y="334.50"></text></g><g><title>onnxruntime::BFCArena::FreeAndMaybeCoalesce (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="340" width="5" height="15" fill="rgb(247,102,43)"/><text x="1123.00" y="350.50"></text></g><g><title>onnxruntime::BFCArena::RemoveFreeChunkFromBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1120" y="356" width="5" height="15" fill="rgb(251,112,34)"/><text x="1123.00" y="366.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.45%)</title><rect x="1125" y="244" width="6" height="15" fill="rgb(219,210,28)"/><text x="1128.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1125" y="260" width="6" height="15" fill="rgb(239,73,48)"/><text x="1128.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1131" y="244" width="5" height="15" fill="rgb(214,7,43)"/><text x="1134.00" y="254.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (35 samples, 15.84%)</title><rect x="955" y="164" width="186" height="15" fill="rgb(211,105,49)"/><text x="958.00" y="174.50">_run_whole_runtime (mlpr..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (35 samples, 15.84%)</title><rect x="955" y="180" width="186" height="15" fill="rgb(246,70,28)"/><text x="958.00" y="190.50">run (mlprodict/onnxrt/op..</text></g><g><title>run (onnxruntime/capi/session.py:136) (27 samples, 12.22%)</title><rect x="997" y="196" width="144" height="15" fill="rgb(218,7,44)"/><text x="1000.00" y="206.50">run (onnxruntime/c..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (25 samples, 11.31%)</title><rect x="1008" y="212" width="133" height="15" fill="rgb(243,214,4)"/><text x="1011.00" y="222.50">pybind11::cpp_fu..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (24 samples, 10.86%)</title><rect x="1013" y="228" width="128" height="15" fill="rgb(228,104,34)"/><text x="1016.00" y="238.50">void pybind11::c..</text></g><g><title>std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;::~vector [clone .lto_priv.576] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.45%)</title><rect x="1136" y="244" width="5" height="15" fill="rgb(213,182,54)"/><text x="1139.00" y="254.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (46 samples, 20.81%)</title><rect x="939" y="132" width="245" height="15" fill="rgb(215,51,21)"/><text x="942.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmar..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (44 samples, 19.91%)</title><rect x="949" y="148" width="235" height="15" fill="rgb(234,131,12)"/><text x="952.00" y="158.50">run (mlprodict/onnxrt/onnx_infe..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (8 samples, 3.62%)</title><rect x="1141" y="164" width="43" height="15" fill="rgb(230,26,51)"/><text x="1144.00" y="174.50">_run..</text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.45%)</title><rect x="1179" y="180" width="5" height="15" fill="rgb(208,12,14)"/><text x="1182.00" y="190.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(240,73,46)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:68) (54 samples, 24.43%)</title><rect x="901" y="52" width="289" height="15" fill="rgb(229,193,32)"/><text x="904.00" y="62.50">&lt;module&gt; (bench_DecisionTreeRegressor_..</text></g><g><title>profile_ort (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:67) (54 samples, 24.43%)</title><rect x="901" y="68" width="289" height="15" fill="rgb(235,30,21)"/><text x="904.00" y="78.50">profile_ort (bench_DecisionTreeRegress..</text></g><g><title>setup_profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:37) (52 samples, 23.53%)</title><rect x="912" y="84" width="278" height="15" fill="rgb(242,85,9)"/><text x="915.00" y="94.50">setup_profile (bench_DecisionTreeRegr..</text></g><g><title>profile (bench_DecisionTreeRegressor_default_m_reg_1_4_12_float_.py:31) (51 samples, 23.08%)</title><rect x="917" y="100" width="273" height="15" fill="rgb(218,200,25)"/><text x="920.00" y="110.50">profile (bench_DecisionTreeRegressor..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (48 samples, 21.72%)</title><rect x="933" y="116" width="257" height="15" fill="rgb(254,96,22)"/><text x="936.00" y="126.50">time_predict (mlprodict/asv_benchm..</text></g><g><title>unicode_eq (python3.7) (1 samples, 0.45%)</title><rect x="1184" y="132" width="6" height="15" fill="rgb(251,210,0)"/><text x="1187.00" y="142.50"></text></g><g><title>0x7f52d5174e76 (libc-2.29.so) (1 samples, 0.45%)</title><rect x="1184" y="148" width="6" height="15" fill="rgb(213,91,41)"/><text x="1187.00" y="158.50"></text></g></g></svg>