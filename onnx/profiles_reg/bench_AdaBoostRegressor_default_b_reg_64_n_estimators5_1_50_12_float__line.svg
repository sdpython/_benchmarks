<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1494" onload="init(evt)" viewBox="0 0 1200 1494" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1494" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1477.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1477.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/__init__.py:142) (1 samples, 0.53%)</title><rect x="10" y="244" width="6" height="15" fill="rgb(232,124,17)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.53%)</title><rect x="10" y="260" width="6" height="15" fill="rgb(225,78,9)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="276" width="6" height="15" fill="rgb(219,54,9)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="10" y="292" width="6" height="15" fill="rgb(240,110,20)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="10" y="308" width="6" height="15" fill="rgb(239,99,52)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="10" y="324" width="6" height="15" fill="rgb(221,214,16)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="10" y="340" width="6" height="15" fill="rgb(244,77,21)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="356" width="6" height="15" fill="rgb(254,148,11)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/core/__init__.py:17) (1 samples, 0.53%)</title><rect x="10" y="372" width="6" height="15" fill="rgb(250,149,15)"/><text x="13.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.53%)</title><rect x="10" y="388" width="6" height="15" fill="rgb(231,0,1)"/><text x="13.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="404" width="6" height="15" fill="rgb(221,186,14)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="10" y="420" width="6" height="15" fill="rgb(212,81,12)"/><text x="13.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="10" y="436" width="6" height="15" fill="rgb(226,133,53)"/><text x="13.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="10" y="452" width="6" height="15" fill="rgb(239,5,49)"/><text x="13.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="10" y="468" width="6" height="15" fill="rgb(254,187,23)"/><text x="13.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="484" width="6" height="15" fill="rgb(252,33,4)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/core/multiarray.py:14) (1 samples, 0.53%)</title><rect x="10" y="500" width="6" height="15" fill="rgb(240,133,23)"/><text x="13.00" y="510.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.53%)</title><rect x="10" y="516" width="6" height="15" fill="rgb(225,54,9)"/><text x="13.00" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="532" width="6" height="15" fill="rgb(228,37,18)"/><text x="13.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="10" y="548" width="6" height="15" fill="rgb(210,156,41)"/><text x="13.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="10" y="564" width="6" height="15" fill="rgb(212,55,10)"/><text x="13.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="10" y="580" width="6" height="15" fill="rgb(250,82,34)"/><text x="13.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="10" y="596" width="6" height="15" fill="rgb(244,169,22)"/><text x="13.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="612" width="6" height="15" fill="rgb(222,79,36)"/><text x="13.00" y="622.50"></text></g><g><title>&lt;module&gt; (numpy/core/overrides.py:7) (1 samples, 0.53%)</title><rect x="10" y="628" width="6" height="15" fill="rgb(229,81,28)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="10" y="644" width="6" height="15" fill="rgb(216,43,7)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="10" y="660" width="6" height="15" fill="rgb(220,148,33)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.53%)</title><rect x="10" y="676" width="6" height="15" fill="rgb(205,104,14)"/><text x="13.00" y="686.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.53%)</title><rect x="10" y="692" width="6" height="15" fill="rgb(219,97,13)"/><text x="13.00" y="702.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.53%)</title><rect x="10" y="708" width="6" height="15" fill="rgb(217,27,44)"/><text x="13.00" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="724" width="6" height="15" fill="rgb(240,95,8)"/><text x="13.00" y="734.50"></text></g><g><title>PyInit__multiarray_umath (multiarraymodule.c:4595) (1 samples, 0.53%)</title><rect x="10" y="740" width="6" height="15" fill="rgb(217,150,43)"/><text x="13.00" y="750.50"></text></g><g><title>numpy_pydatetime_import (datetime.c:36) (1 samples, 0.53%)</title><rect x="10" y="756" width="6" height="15" fill="rgb(239,96,15)"/><text x="13.00" y="766.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="10" y="772" width="6" height="15" fill="rgb(223,0,10)"/><text x="13.00" y="782.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="10" y="788" width="6" height="15" fill="rgb(252,192,34)"/><text x="13.00" y="798.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="10" y="804" width="6" height="15" fill="rgb(206,223,1)"/><text x="13.00" y="814.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="10" y="820" width="6" height="15" fill="rgb(233,13,29)"/><text x="13.00" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="10" y="836" width="6" height="15" fill="rgb(215,169,40)"/><text x="13.00" y="846.50"></text></g><g><title>&lt;module&gt; (datetime.py:8) (1 samples, 0.53%)</title><rect x="10" y="852" width="6" height="15" fill="rgb(243,128,20)"/><text x="13.00" y="862.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(222,35,4)"/><text x="13.00" y="878.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:963) (1 samples, 0.53%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(243,180,9)"/><text x="13.00" y="894.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;:897) (1 samples, 0.53%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(229,84,27)"/><text x="13.00" y="910.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:1) (2 samples, 1.07%)</title><rect x="10" y="148" width="12" height="15" fill="rgb(215,6,15)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="10" y="164" width="12" height="15" fill="rgb(245,44,11)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="10" y="180" width="12" height="15" fill="rgb(243,18,26)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="10" y="196" width="12" height="15" fill="rgb(253,9,45)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="10" y="212" width="12" height="15" fill="rgb(223,11,28)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="10" y="228" width="12" height="15" fill="rgb(236,97,20)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:187) (1 samples, 0.53%)</title><rect x="16" y="244" width="6" height="15" fill="rgb(254,89,41)"/><text x="19.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="16" y="260" width="6" height="15" fill="rgb(222,190,26)"/><text x="19.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="16" y="276" width="6" height="15" fill="rgb(232,81,17)"/><text x="19.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="16" y="292" width="6" height="15" fill="rgb(239,100,27)"/><text x="19.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="16" y="308" width="6" height="15" fill="rgb(227,18,38)"/><text x="19.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="16" y="324" width="6" height="15" fill="rgb(207,0,43)"/><text x="19.00" y="334.50"></text></g><g><title>&lt;module&gt; (numpy/testing/__init__.py:10) (1 samples, 0.53%)</title><rect x="16" y="340" width="6" height="15" fill="rgb(207,102,49)"/><text x="19.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="16" y="356" width="6" height="15" fill="rgb(220,202,7)"/><text x="19.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="16" y="372" width="6" height="15" fill="rgb(217,131,42)"/><text x="19.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="16" y="388" width="6" height="15" fill="rgb(243,145,11)"/><text x="19.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="16" y="404" width="6" height="15" fill="rgb(219,28,16)"/><text x="19.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="16" y="420" width="6" height="15" fill="rgb(247,7,8)"/><text x="19.00" y="430.50"></text></g><g><title>&lt;module&gt; (unittest/__init__.py:58) (1 samples, 0.53%)</title><rect x="16" y="436" width="6" height="15" fill="rgb(208,135,14)"/><text x="19.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="16" y="452" width="6" height="15" fill="rgb(243,82,32)"/><text x="19.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="16" y="468" width="6" height="15" fill="rgb(206,15,43)"/><text x="19.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="16" y="484" width="6" height="15" fill="rgb(251,70,3)"/><text x="19.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="16" y="500" width="6" height="15" fill="rgb(224,77,4)"/><text x="19.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="16" y="516" width="6" height="15" fill="rgb(227,61,18)"/><text x="19.00" y="526.50"></text></g><g><title>&lt;module&gt; (unittest/result.py:7) (1 samples, 0.53%)</title><rect x="16" y="532" width="6" height="15" fill="rgb(239,122,48)"/><text x="19.00" y="542.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.53%)</title><rect x="16" y="548" width="6" height="15" fill="rgb(223,152,39)"/><text x="19.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="16" y="564" width="6" height="15" fill="rgb(205,124,9)"/><text x="19.00" y="574.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="16" y="580" width="6" height="15" fill="rgb(227,36,42)"/><text x="19.00" y="590.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="16" y="596" width="6" height="15" fill="rgb(221,169,20)"/><text x="19.00" y="606.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="16" y="612" width="6" height="15" fill="rgb(229,117,1)"/><text x="19.00" y="622.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="16" y="628" width="6" height="15" fill="rgb(247,165,7)"/><text x="19.00" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="16" y="644" width="6" height="15" fill="rgb(246,179,34)"/><text x="19.00" y="654.50"></text></g><g><title>&lt;module&gt; (unittest/util.py:119) (1 samples, 0.53%)</title><rect x="16" y="660" width="6" height="15" fill="rgb(218,108,6)"/><text x="19.00" y="670.50"></text></g><g><title>namedtuple (collections/__init__.py:397) (1 samples, 0.53%)</title><rect x="16" y="676" width="6" height="15" fill="rgb(234,218,53)"/><text x="19.00" y="686.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:8) (1 samples, 0.53%)</title><rect x="22" y="292" width="6" height="15" fill="rgb(246,50,44)"/><text x="25.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="22" y="308" width="6" height="15" fill="rgb(244,117,50)"/><text x="25.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="22" y="324" width="6" height="15" fill="rgb(239,161,23)"/><text x="25.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.53%)</title><rect x="22" y="340" width="6" height="15" fill="rgb(221,118,30)"/><text x="25.00" y="350.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:583) (1 samples, 0.53%)</title><rect x="22" y="356" width="6" height="15" fill="rgb(253,59,20)"/><text x="25.00" y="366.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1043) (1 samples, 0.53%)</title><rect x="22" y="372" width="6" height="15" fill="rgb(236,147,34)"/><text x="25.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="22" y="388" width="6" height="15" fill="rgb(229,204,27)"/><text x="25.00" y="398.50"></text></g><g><title>dlopen (libdl-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="404" width="6" height="15" fill="rgb(242,127,18)"/><text x="25.00" y="414.50"></text></g><g><title>0x7fefbdb85995 (libdl-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="420" width="6" height="15" fill="rgb(222,63,6)"/><text x="25.00" y="430.50"></text></g><g><title>_dl_catch_error (libc-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="436" width="6" height="15" fill="rgb(233,70,39)"/><text x="25.00" y="446.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="452" width="6" height="15" fill="rgb(244,198,7)"/><text x="25.00" y="462.50"></text></g><g><title>0x7fefbdb85258 (libdl-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="468" width="6" height="15" fill="rgb(239,215,11)"/><text x="25.00" y="478.50"></text></g><g><title>0x7fefbdbd2d7a (ld-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="484" width="6" height="15" fill="rgb(244,95,28)"/><text x="25.00" y="494.50"></text></g><g><title>_dl_catch_exception (libc-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="500" width="6" height="15" fill="rgb(209,26,2)"/><text x="25.00" y="510.50"></text></g><g><title>0x7fefbdbd3345 (ld-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="516" width="6" height="15" fill="rgb(208,181,3)"/><text x="25.00" y="526.50"></text></g><g><title>0x7fefbdbcbfec (ld-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="532" width="6" height="15" fill="rgb(217,214,33)"/><text x="25.00" y="542.50"></text></g><g><title>0x7fefbdbca56b (ld-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="548" width="6" height="15" fill="rgb(238,33,40)"/><text x="25.00" y="558.50"></text></g><g><title>0x7fefbdbc9bba (ld-2.29.so) (1 samples, 0.53%)</title><rect x="22" y="564" width="6" height="15" fill="rgb(222,53,3)"/><text x="25.00" y="574.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2294) (1 samples, 0.53%)</title><rect x="28" y="900" width="7" height="15" fill="rgb(230,114,22)"/><text x="31.00" y="910.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (2 samples, 1.07%)</title><rect x="28" y="852" width="13" height="15" fill="rgb(208,90,42)"/><text x="31.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (2 samples, 1.07%)</title><rect x="28" y="868" width="13" height="15" fill="rgb(216,188,36)"/><text x="31.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (2 samples, 1.07%)</title><rect x="28" y="884" width="13" height="15" fill="rgb(224,69,7)"/><text x="31.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.53%)</title><rect x="35" y="900" width="6" height="15" fill="rgb(206,9,1)"/><text x="38.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.53%)</title><rect x="35" y="916" width="6" height="15" fill="rgb(243,119,54)"/><text x="38.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.53%)</title><rect x="35" y="932" width="6" height="15" fill="rgb(251,181,53)"/><text x="38.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.53%)</title><rect x="35" y="948" width="6" height="15" fill="rgb(254,44,49)"/><text x="38.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1383) (1 samples, 0.53%)</title><rect x="35" y="964" width="6" height="15" fill="rgb(210,157,39)"/><text x="38.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;:95) (1 samples, 0.53%)</title><rect x="35" y="980" width="6" height="15" fill="rgb(212,101,36)"/><text x="38.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;:87) (1 samples, 0.53%)</title><rect x="35" y="996" width="6" height="15" fill="rgb(208,116,14)"/><text x="38.00" y="1006.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.53%)</title><rect x="35" y="1012" width="6" height="15" fill="rgb(236,229,39)"/><text x="38.00" y="1022.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.53%)</title><rect x="35" y="1028" width="6" height="15" fill="rgb(214,108,37)"/><text x="38.00" y="1038.50"></text></g><g><title>unicode_decode_locale (python3.7) (1 samples, 0.53%)</title><rect x="35" y="1044" width="6" height="15" fill="rgb(228,12,14)"/><text x="38.00" y="1054.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:31) (1 samples, 0.53%)</title><rect x="41" y="948" width="6" height="15" fill="rgb(252,207,48)"/><text x="44.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:230) (1 samples, 0.53%)</title><rect x="41" y="964" width="6" height="15" fill="rgb(245,155,51)"/><text x="44.00" y="974.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (2 samples, 1.07%)</title><rect x="41" y="884" width="13" height="15" fill="rgb(250,91,24)"/><text x="44.00" y="894.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (2 samples, 1.07%)</title><rect x="41" y="900" width="13" height="15" fill="rgb(215,52,33)"/><text x="44.00" y="910.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (2 samples, 1.07%)</title><rect x="41" y="916" width="13" height="15" fill="rgb(248,86,49)"/><text x="44.00" y="926.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (2 samples, 1.07%)</title><rect x="41" y="932" width="13" height="15" fill="rgb(237,31,32)"/><text x="44.00" y="942.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.53%)</title><rect x="47" y="948" width="7" height="15" fill="rgb(228,115,17)"/><text x="50.00" y="958.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.53%)</title><rect x="47" y="964" width="7" height="15" fill="rgb(225,32,22)"/><text x="50.00" y="974.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:141) (1 samples, 0.53%)</title><rect x="47" y="980" width="7" height="15" fill="rgb(243,66,39)"/><text x="50.00" y="990.50"></text></g><g><title>_parse_version_parts (pkg_resources/_vendor/packaging/version.py:118) (1 samples, 0.53%)</title><rect x="47" y="996" width="7" height="15" fill="rgb(232,109,41)"/><text x="50.00" y="1006.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (6 samples, 3.21%)</title><rect x="22" y="148" width="38" height="15" fill="rgb(225,174,11)"/><text x="25.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.21%)</title><rect x="22" y="164" width="38" height="15" fill="rgb(246,204,23)"/><text x="25.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (6 samples, 3.21%)</title><rect x="22" y="180" width="38" height="15" fill="rgb(242,204,21)"/><text x="25.00" y="190.50">_fi..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.21%)</title><rect x="22" y="196" width="38" height="15" fill="rgb(245,109,4)"/><text x="25.00" y="206.50">_ca..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.21%)</title><rect x="22" y="212" width="38" height="15" fill="rgb(252,63,24)"/><text x="25.00" y="222.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.21%)</title><rect x="22" y="228" width="38" height="15" fill="rgb(250,112,15)"/><text x="25.00" y="238.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.21%)</title><rect x="22" y="244" width="38" height="15" fill="rgb(230,223,20)"/><text x="25.00" y="254.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.21%)</title><rect x="22" y="260" width="38" height="15" fill="rgb(243,209,23)"/><text x="25.00" y="270.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.21%)</title><rect x="22" y="276" width="38" height="15" fill="rgb(206,197,48)"/><text x="25.00" y="286.50">_ca..</text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (5 samples, 2.67%)</title><rect x="28" y="292" width="32" height="15" fill="rgb(220,186,54)"/><text x="31.00" y="302.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.67%)</title><rect x="28" y="308" width="32" height="15" fill="rgb(222,46,50)"/><text x="31.00" y="318.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.67%)</title><rect x="28" y="324" width="32" height="15" fill="rgb(252,179,40)"/><text x="31.00" y="334.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.67%)</title><rect x="28" y="340" width="32" height="15" fill="rgb(209,208,2)"/><text x="31.00" y="350.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.67%)</title><rect x="28" y="356" width="32" height="15" fill="rgb(239,182,13)"/><text x="31.00" y="366.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.67%)</title><rect x="28" y="372" width="32" height="15" fill="rgb(232,131,23)"/><text x="31.00" y="382.50">_c..</text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (5 samples, 2.67%)</title><rect x="28" y="388" width="32" height="15" fill="rgb(229,63,21)"/><text x="31.00" y="398.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.67%)</title><rect x="28" y="404" width="32" height="15" fill="rgb(239,52,29)"/><text x="31.00" y="414.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.67%)</title><rect x="28" y="420" width="32" height="15" fill="rgb(244,80,31)"/><text x="31.00" y="430.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.67%)</title><rect x="28" y="436" width="32" height="15" fill="rgb(209,144,29)"/><text x="31.00" y="446.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.67%)</title><rect x="28" y="452" width="32" height="15" fill="rgb(213,229,30)"/><text x="31.00" y="462.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.67%)</title><rect x="28" y="468" width="32" height="15" fill="rgb(235,205,31)"/><text x="31.00" y="478.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (5 samples, 2.67%)</title><rect x="28" y="484" width="32" height="15" fill="rgb(244,209,37)"/><text x="31.00" y="494.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.67%)</title><rect x="28" y="500" width="32" height="15" fill="rgb(239,40,46)"/><text x="31.00" y="510.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.67%)</title><rect x="28" y="516" width="32" height="15" fill="rgb(224,49,35)"/><text x="31.00" y="526.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.67%)</title><rect x="28" y="532" width="32" height="15" fill="rgb(213,44,25)"/><text x="31.00" y="542.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.67%)</title><rect x="28" y="548" width="32" height="15" fill="rgb(214,227,54)"/><text x="31.00" y="558.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.67%)</title><rect x="28" y="564" width="32" height="15" fill="rgb(227,132,20)"/><text x="31.00" y="574.50">_c..</text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (5 samples, 2.67%)</title><rect x="28" y="580" width="32" height="15" fill="rgb(240,222,33)"/><text x="31.00" y="590.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.67%)</title><rect x="28" y="596" width="32" height="15" fill="rgb(224,72,48)"/><text x="31.00" y="606.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (5 samples, 2.67%)</title><rect x="28" y="612" width="32" height="15" fill="rgb(228,78,40)"/><text x="31.00" y="622.50">_f..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.67%)</title><rect x="28" y="628" width="32" height="15" fill="rgb(209,88,49)"/><text x="31.00" y="638.50">_c..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.67%)</title><rect x="28" y="644" width="32" height="15" fill="rgb(244,91,9)"/><text x="31.00" y="654.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.67%)</title><rect x="28" y="660" width="32" height="15" fill="rgb(207,133,4)"/><text x="31.00" y="670.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.67%)</title><rect x="28" y="676" width="32" height="15" fill="rgb(244,106,6)"/><text x="31.00" y="686.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.67%)</title><rect x="28" y="692" width="32" height="15" fill="rgb(221,32,43)"/><text x="31.00" y="702.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.67%)</title><rect x="28" y="708" width="32" height="15" fill="rgb(240,100,5)"/><text x="31.00" y="718.50">_c..</text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (5 samples, 2.67%)</title><rect x="28" y="724" width="32" height="15" fill="rgb(206,122,15)"/><text x="31.00" y="734.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (5 samples, 2.67%)</title><rect x="28" y="740" width="32" height="15" fill="rgb(235,201,52)"/><text x="31.00" y="750.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (5 samples, 2.67%)</title><rect x="28" y="756" width="32" height="15" fill="rgb(215,117,39)"/><text x="31.00" y="766.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (5 samples, 2.67%)</title><rect x="28" y="772" width="32" height="15" fill="rgb(225,37,8)"/><text x="31.00" y="782.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (5 samples, 2.67%)</title><rect x="28" y="788" width="32" height="15" fill="rgb(244,30,35)"/><text x="31.00" y="798.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (5 samples, 2.67%)</title><rect x="28" y="804" width="32" height="15" fill="rgb(251,19,1)"/><text x="31.00" y="814.50">_c..</text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (5 samples, 2.67%)</title><rect x="28" y="820" width="32" height="15" fill="rgb(209,168,53)"/><text x="31.00" y="830.50">&lt;m..</text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (5 samples, 2.67%)</title><rect x="28" y="836" width="32" height="15" fill="rgb(253,95,34)"/><text x="31.00" y="846.50">_c..</text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3287) (3 samples, 1.60%)</title><rect x="41" y="852" width="19" height="15" fill="rgb(238,38,2)"/><text x="44.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (3 samples, 1.60%)</title><rect x="41" y="868" width="19" height="15" fill="rgb(212,186,37)"/><text x="44.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2065) (1 samples, 0.53%)</title><rect x="54" y="884" width="6" height="15" fill="rgb(241,193,18)"/><text x="57.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py:2135) (1 samples, 0.53%)</title><rect x="54" y="900" width="6" height="15" fill="rgb(219,133,11)"/><text x="57.00" y="910.50"></text></g><g><title>from_location (pkg_resources/__init__.py:2592) (1 samples, 0.53%)</title><rect x="54" y="916" width="6" height="15" fill="rgb(238,221,46)"/><text x="57.00" y="926.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:2569) (1 samples, 0.53%)</title><rect x="54" y="932" width="6" height="15" fill="rgb(226,151,41)"/><text x="57.00" y="942.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:12) (1 samples, 0.53%)</title><rect x="60" y="1172" width="6" height="15" fill="rgb(243,140,5)"/><text x="63.00" y="1182.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (1 samples, 0.53%)</title><rect x="60" y="1188" width="6" height="15" fill="rgb(207,53,23)"/><text x="63.00" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="60" y="1204" width="6" height="15" fill="rgb(238,36,40)"/><text x="63.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="60" y="1220" width="6" height="15" fill="rgb(245,41,30)"/><text x="63.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="60" y="1236" width="6" height="15" fill="rgb(231,140,27)"/><text x="63.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="60" y="1252" width="6" height="15" fill="rgb(224,126,5)"/><text x="63.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="60" y="1268" width="6" height="15" fill="rgb(234,181,54)"/><text x="63.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="60" y="1284" width="6" height="15" fill="rgb(223,146,30)"/><text x="63.00" y="1294.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/__init__.py:8) (1 samples, 0.53%)</title><rect x="60" y="1300" width="6" height="15" fill="rgb(230,42,26)"/><text x="63.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="60" y="1316" width="6" height="15" fill="rgb(253,201,19)"/><text x="63.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="60" y="1332" width="6" height="15" fill="rgb(227,107,23)"/><text x="63.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="60" y="1348" width="6" height="15" fill="rgb(212,162,19)"/><text x="63.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="60" y="1364" width="6" height="15" fill="rgb(250,226,16)"/><text x="63.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="60" y="1380" width="6" height="15" fill="rgb(210,149,32)"/><text x="63.00" y="1390.50"></text></g><g><title>&lt;module&gt; (cryptography/x509/base.py:433) (1 samples, 0.53%)</title><rect x="60" y="1396" width="6" height="15" fill="rgb(211,23,25)"/><text x="63.00" y="1406.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 1.07%)</title><rect x="60" y="244" width="13" height="15" fill="rgb(221,225,4)"/><text x="63.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="260" width="13" height="15" fill="rgb(249,67,29)"/><text x="63.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="276" width="13" height="15" fill="rgb(213,163,33)"/><text x="63.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="292" width="13" height="15" fill="rgb(209,159,44)"/><text x="63.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="308" width="13" height="15" fill="rgb(208,117,45)"/><text x="63.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="324" width="13" height="15" fill="rgb(217,137,13)"/><text x="63.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 1.07%)</title><rect x="60" y="340" width="13" height="15" fill="rgb(240,184,47)"/><text x="63.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="356" width="13" height="15" fill="rgb(242,166,1)"/><text x="63.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.07%)</title><rect x="60" y="372" width="13" height="15" fill="rgb(245,203,12)"/><text x="63.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="388" width="13" height="15" fill="rgb(213,83,9)"/><text x="63.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="404" width="13" height="15" fill="rgb(205,150,3)"/><text x="63.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="420" width="13" height="15" fill="rgb(205,109,24)"/><text x="63.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="436" width="13" height="15" fill="rgb(241,53,25)"/><text x="63.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="452" width="13" height="15" fill="rgb(249,174,43)"/><text x="63.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="468" width="13" height="15" fill="rgb(222,55,34)"/><text x="63.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (2 samples, 1.07%)</title><rect x="60" y="484" width="13" height="15" fill="rgb(254,192,2)"/><text x="63.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="500" width="13" height="15" fill="rgb(225,34,3)"/><text x="63.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="516" width="13" height="15" fill="rgb(232,179,45)"/><text x="63.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="532" width="13" height="15" fill="rgb(251,213,1)"/><text x="63.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="548" width="13" height="15" fill="rgb(222,196,43)"/><text x="63.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="564" width="13" height="15" fill="rgb(241,148,30)"/><text x="63.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (2 samples, 1.07%)</title><rect x="60" y="580" width="13" height="15" fill="rgb(215,62,28)"/><text x="63.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="596" width="13" height="15" fill="rgb(248,134,11)"/><text x="63.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="612" width="13" height="15" fill="rgb(246,218,22)"/><text x="63.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="628" width="13" height="15" fill="rgb(247,45,15)"/><text x="63.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="644" width="13" height="15" fill="rgb(243,148,53)"/><text x="63.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="660" width="13" height="15" fill="rgb(237,79,27)"/><text x="63.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (2 samples, 1.07%)</title><rect x="60" y="676" width="13" height="15" fill="rgb(239,17,46)"/><text x="63.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="692" width="13" height="15" fill="rgb(240,40,2)"/><text x="63.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="708" width="13" height="15" fill="rgb(246,199,43)"/><text x="63.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="724" width="13" height="15" fill="rgb(237,97,44)"/><text x="63.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="740" width="13" height="15" fill="rgb(209,194,14)"/><text x="63.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="756" width="13" height="15" fill="rgb(244,169,3)"/><text x="63.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:95) (2 samples, 1.07%)</title><rect x="60" y="772" width="13" height="15" fill="rgb(222,116,21)"/><text x="63.00" y="782.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.07%)</title><rect x="60" y="788" width="13" height="15" fill="rgb(206,118,41)"/><text x="63.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="804" width="13" height="15" fill="rgb(224,221,8)"/><text x="63.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="820" width="13" height="15" fill="rgb(248,49,48)"/><text x="63.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="836" width="13" height="15" fill="rgb(241,214,19)"/><text x="63.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="852" width="13" height="15" fill="rgb(208,192,6)"/><text x="63.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="868" width="13" height="15" fill="rgb(254,189,46)"/><text x="63.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="884" width="13" height="15" fill="rgb(244,201,1)"/><text x="63.00" y="894.50"></text></g><g><title>&lt;module&gt; (urllib3/contrib/pyopenssl.py:46) (2 samples, 1.07%)</title><rect x="60" y="900" width="13" height="15" fill="rgb(248,72,27)"/><text x="63.00" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="916" width="13" height="15" fill="rgb(212,101,18)"/><text x="63.00" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.07%)</title><rect x="60" y="932" width="13" height="15" fill="rgb(233,147,43)"/><text x="63.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="948" width="13" height="15" fill="rgb(213,159,32)"/><text x="63.00" y="958.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="964" width="13" height="15" fill="rgb(214,184,33)"/><text x="63.00" y="974.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="980" width="13" height="15" fill="rgb(237,163,48)"/><text x="63.00" y="990.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="996" width="13" height="15" fill="rgb(244,173,41)"/><text x="63.00" y="1006.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="1012" width="13" height="15" fill="rgb(205,210,52)"/><text x="63.00" y="1022.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="1028" width="13" height="15" fill="rgb(240,100,19)"/><text x="63.00" y="1038.50"></text></g><g><title>&lt;module&gt; (OpenSSL/__init__.py:8) (2 samples, 1.07%)</title><rect x="60" y="1044" width="13" height="15" fill="rgb(249,172,34)"/><text x="63.00" y="1054.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 1.07%)</title><rect x="60" y="1060" width="13" height="15" fill="rgb(231,135,30)"/><text x="63.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="1076" width="13" height="15" fill="rgb(216,222,0)"/><text x="63.00" y="1086.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="60" y="1092" width="13" height="15" fill="rgb(218,122,15)"/><text x="63.00" y="1102.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="60" y="1108" width="13" height="15" fill="rgb(238,104,28)"/><text x="63.00" y="1118.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="60" y="1124" width="13" height="15" fill="rgb(239,112,30)"/><text x="63.00" y="1134.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="60" y="1140" width="13" height="15" fill="rgb(207,125,21)"/><text x="63.00" y="1150.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="60" y="1156" width="13" height="15" fill="rgb(229,58,2)"/><text x="63.00" y="1166.50"></text></g><g><title>&lt;module&gt; (OpenSSL/crypto.py:2080) (1 samples, 0.53%)</title><rect x="66" y="1172" width="7" height="15" fill="rgb(217,125,45)"/><text x="69.00" y="1182.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:147) (1 samples, 0.53%)</title><rect x="73" y="628" width="6" height="15" fill="rgb(235,90,30)"/><text x="76.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="73" y="644" width="6" height="15" fill="rgb(214,210,8)"/><text x="76.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="73" y="660" width="6" height="15" fill="rgb(205,198,44)"/><text x="76.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="73" y="676" width="6" height="15" fill="rgb(224,55,0)"/><text x="76.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="73" y="692" width="6" height="15" fill="rgb(249,117,28)"/><text x="76.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="73" y="708" width="6" height="15" fill="rgb(210,224,38)"/><text x="76.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/io/api.py:12) (1 samples, 0.53%)</title><rect x="73" y="724" width="6" height="15" fill="rgb(209,95,35)"/><text x="76.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="73" y="740" width="6" height="15" fill="rgb(222,43,21)"/><text x="76.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="73" y="756" width="6" height="15" fill="rgb(248,123,33)"/><text x="76.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="73" y="772" width="6" height="15" fill="rgb(235,58,21)"/><text x="76.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="73" y="788" width="6" height="15" fill="rgb(223,207,34)"/><text x="76.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="73" y="804" width="6" height="15" fill="rgb(227,209,42)"/><text x="76.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/__init__.py:1) (1 samples, 0.53%)</title><rect x="73" y="820" width="6" height="15" fill="rgb(207,114,42)"/><text x="76.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="73" y="836" width="6" height="15" fill="rgb(246,127,32)"/><text x="76.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="73" y="852" width="6" height="15" fill="rgb(238,119,41)"/><text x="76.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="73" y="868" width="6" height="15" fill="rgb(208,116,51)"/><text x="76.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="73" y="884" width="6" height="15" fill="rgb(213,221,27)"/><text x="76.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="73" y="900" width="6" height="15" fill="rgb(252,222,26)"/><text x="76.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/io/json/_json.py:192) (1 samples, 0.53%)</title><rect x="73" y="916" width="6" height="15" fill="rgb(216,117,34)"/><text x="76.00" y="926.50"></text></g><g><title>FrameWriter (pandas/io/json/_json.py:214) (1 samples, 0.53%)</title><rect x="73" y="932" width="6" height="15" fill="rgb(245,134,35)"/><text x="76.00" y="942.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (2 samples, 1.07%)</title><rect x="73" y="436" width="12" height="15" fill="rgb(241,17,40)"/><text x="76.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="73" y="452" width="12" height="15" fill="rgb(241,17,29)"/><text x="76.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="73" y="468" width="12" height="15" fill="rgb(251,156,6)"/><text x="76.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="73" y="484" width="12" height="15" fill="rgb(253,51,20)"/><text x="76.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="73" y="500" width="12" height="15" fill="rgb(218,131,24)"/><text x="76.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="73" y="516" width="12" height="15" fill="rgb(236,216,11)"/><text x="76.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (2 samples, 1.07%)</title><rect x="73" y="532" width="12" height="15" fill="rgb(247,27,38)"/><text x="76.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="73" y="548" width="12" height="15" fill="rgb(224,170,12)"/><text x="76.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="73" y="564" width="12" height="15" fill="rgb(212,123,21)"/><text x="76.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="73" y="580" width="12" height="15" fill="rgb(214,149,23)"/><text x="76.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="73" y="596" width="12" height="15" fill="rgb(216,137,23)"/><text x="76.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="73" y="612" width="12" height="15" fill="rgb(211,142,38)"/><text x="76.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.53%)</title><rect x="79" y="628" width="6" height="15" fill="rgb(222,226,48)"/><text x="82.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="79" y="644" width="6" height="15" fill="rgb(205,181,6)"/><text x="82.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="79" y="660" width="6" height="15" fill="rgb(208,123,50)"/><text x="82.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="79" y="676" width="6" height="15" fill="rgb(250,69,48)"/><text x="82.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="79" y="692" width="6" height="15" fill="rgb(222,75,41)"/><text x="82.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="79" y="708" width="6" height="15" fill="rgb(229,23,10)"/><text x="82.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:5) (1 samples, 0.53%)</title><rect x="79" y="724" width="6" height="15" fill="rgb(223,77,51)"/><text x="82.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="79" y="740" width="6" height="15" fill="rgb(248,148,26)"/><text x="82.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.53%)</title><rect x="79" y="756" width="6" height="15" fill="rgb(245,138,29)"/><text x="82.00" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="79" y="772" width="6" height="15" fill="rgb(248,137,41)"/><text x="82.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="79" y="788" width="6" height="15" fill="rgb(229,36,5)"/><text x="82.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="79" y="804" width="6" height="15" fill="rgb(209,196,2)"/><text x="82.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="79" y="820" width="6" height="15" fill="rgb(216,175,37)"/><text x="82.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="79" y="836" width="6" height="15" fill="rgb(238,61,44)"/><text x="82.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="79" y="852" width="6" height="15" fill="rgb(225,33,17)"/><text x="82.00" y="862.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:11) (1 samples, 0.53%)</title><rect x="79" y="868" width="6" height="15" fill="rgb(207,43,46)"/><text x="82.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.53%)</title><rect x="79" y="884" width="6" height="15" fill="rgb(254,214,25)"/><text x="82.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.53%)</title><rect x="79" y="900" width="6" height="15" fill="rgb(232,150,7)"/><text x="82.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.53%)</title><rect x="79" y="916" width="6" height="15" fill="rgb(222,103,23)"/><text x="82.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.53%)</title><rect x="79" y="932" width="6" height="15" fill="rgb(218,20,40)"/><text x="82.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.53%)</title><rect x="79" y="948" width="6" height="15" fill="rgb(212,40,2)"/><text x="82.00" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/numpy_.py:23) (1 samples, 0.53%)</title><rect x="79" y="964" width="6" height="15" fill="rgb(205,121,3)"/><text x="82.00" y="974.50"></text></g><g><title>_compile (tokenize.py:148) (1 samples, 0.53%)</title><rect x="85" y="1396" width="7" height="15" fill="rgb(253,24,14)"/><text x="88.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.53%)</title><rect x="85" y="1412" width="7" height="15" fill="rgb(222,107,14)"/><text x="88.00" y="1422.50"></text></g><g><title>_compile (re.py:274) (1 samples, 0.53%)</title><rect x="85" y="1428" width="7" height="15" fill="rgb(222,130,3)"/><text x="88.00" y="1438.50"></text></g><g><title>__get__ (types.py:171) (1 samples, 0.53%)</title><rect x="85" y="1444" width="7" height="15" fill="rgb(223,161,38)"/><text x="88.00" y="1454.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:4) (14 samples, 7.49%)</title><rect x="10" y="52" width="88" height="15" fill="rgb(242,78,35)"/><text x="13.00" y="62.50">&lt;module&gt; (..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (14 samples, 7.49%)</title><rect x="10" y="68" width="88" height="15" fill="rgb(211,83,20)"/><text x="13.00" y="78.50">_find_and_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (14 samples, 7.49%)</title><rect x="10" y="84" width="88" height="15" fill="rgb(220,220,3)"/><text x="13.00" y="94.50">_find_and_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (14 samples, 7.49%)</title><rect x="10" y="100" width="88" height="15" fill="rgb(207,108,8)"/><text x="13.00" y="110.50">_load_unlo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (14 samples, 7.49%)</title><rect x="10" y="116" width="88" height="15" fill="rgb(222,57,53)"/><text x="13.00" y="126.50">exec_modul..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (14 samples, 7.49%)</title><rect x="10" y="132" width="88" height="15" fill="rgb(211,84,39)"/><text x="13.00" y="142.50">_call_with..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (6 samples, 3.21%)</title><rect x="60" y="148" width="38" height="15" fill="rgb(247,68,51)"/><text x="63.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (6 samples, 3.21%)</title><rect x="60" y="164" width="38" height="15" fill="rgb(245,119,24)"/><text x="63.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (6 samples, 3.21%)</title><rect x="60" y="180" width="38" height="15" fill="rgb(208,164,46)"/><text x="63.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (6 samples, 3.21%)</title><rect x="60" y="196" width="38" height="15" fill="rgb(249,117,54)"/><text x="63.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (6 samples, 3.21%)</title><rect x="60" y="212" width="38" height="15" fill="rgb(223,71,25)"/><text x="63.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (6 samples, 3.21%)</title><rect x="60" y="228" width="38" height="15" fill="rgb(212,140,28)"/><text x="63.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (4 samples, 2.14%)</title><rect x="73" y="244" width="25" height="15" fill="rgb(206,208,3)"/><text x="76.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.14%)</title><rect x="73" y="260" width="25" height="15" fill="rgb(227,100,7)"/><text x="76.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.14%)</title><rect x="73" y="276" width="25" height="15" fill="rgb(218,121,18)"/><text x="76.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.14%)</title><rect x="73" y="292" width="25" height="15" fill="rgb(206,33,31)"/><text x="76.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.14%)</title><rect x="73" y="308" width="25" height="15" fill="rgb(236,182,54)"/><text x="76.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.14%)</title><rect x="73" y="324" width="25" height="15" fill="rgb(230,181,44)"/><text x="76.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (4 samples, 2.14%)</title><rect x="73" y="340" width="25" height="15" fill="rgb(222,15,5)"/><text x="76.00" y="350.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 2.14%)</title><rect x="73" y="356" width="25" height="15" fill="rgb(236,54,38)"/><text x="76.00" y="366.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 2.14%)</title><rect x="73" y="372" width="25" height="15" fill="rgb(207,174,52)"/><text x="76.00" y="382.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 2.14%)</title><rect x="73" y="388" width="25" height="15" fill="rgb(243,8,2)"/><text x="76.00" y="398.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 2.14%)</title><rect x="73" y="404" width="25" height="15" fill="rgb(223,91,30)"/><text x="76.00" y="414.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 2.14%)</title><rect x="73" y="420" width="25" height="15" fill="rgb(224,55,18)"/><text x="76.00" y="430.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (2 samples, 1.07%)</title><rect x="85" y="436" width="13" height="15" fill="rgb(234,13,31)"/><text x="88.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="452" width="13" height="15" fill="rgb(213,104,20)"/><text x="88.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.07%)</title><rect x="85" y="468" width="13" height="15" fill="rgb(239,54,31)"/><text x="88.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="484" width="13" height="15" fill="rgb(233,202,7)"/><text x="88.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="500" width="13" height="15" fill="rgb(241,225,51)"/><text x="88.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="516" width="13" height="15" fill="rgb(208,70,36)"/><text x="88.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="532" width="13" height="15" fill="rgb(215,172,31)"/><text x="88.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="548" width="13" height="15" fill="rgb(230,4,20)"/><text x="88.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="564" width="13" height="15" fill="rgb(243,94,35)"/><text x="88.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (2 samples, 1.07%)</title><rect x="85" y="580" width="13" height="15" fill="rgb(213,217,44)"/><text x="88.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="596" width="13" height="15" fill="rgb(231,34,0)"/><text x="88.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="612" width="13" height="15" fill="rgb(219,122,44)"/><text x="88.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="628" width="13" height="15" fill="rgb(223,69,11)"/><text x="88.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="644" width="13" height="15" fill="rgb(216,221,32)"/><text x="88.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="660" width="13" height="15" fill="rgb(237,201,54)"/><text x="88.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (2 samples, 1.07%)</title><rect x="85" y="676" width="13" height="15" fill="rgb(254,92,40)"/><text x="88.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="692" width="13" height="15" fill="rgb(217,200,43)"/><text x="88.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="708" width="13" height="15" fill="rgb(251,166,18)"/><text x="88.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="724" width="13" height="15" fill="rgb(205,121,15)"/><text x="88.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="740" width="13" height="15" fill="rgb(224,15,28)"/><text x="88.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="756" width="13" height="15" fill="rgb(241,174,50)"/><text x="88.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (2 samples, 1.07%)</title><rect x="85" y="772" width="13" height="15" fill="rgb(227,42,54)"/><text x="88.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="788" width="13" height="15" fill="rgb(243,24,31)"/><text x="88.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="804" width="13" height="15" fill="rgb(239,146,30)"/><text x="88.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="820" width="13" height="15" fill="rgb(231,89,46)"/><text x="88.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="836" width="13" height="15" fill="rgb(222,161,22)"/><text x="88.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="852" width="13" height="15" fill="rgb(217,139,7)"/><text x="88.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (2 samples, 1.07%)</title><rect x="85" y="868" width="13" height="15" fill="rgb(215,69,48)"/><text x="88.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="884" width="13" height="15" fill="rgb(218,113,12)"/><text x="88.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 1.07%)</title><rect x="85" y="900" width="13" height="15" fill="rgb(232,128,27)"/><text x="88.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="916" width="13" height="15" fill="rgb(245,49,19)"/><text x="88.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="932" width="13" height="15" fill="rgb(238,57,31)"/><text x="88.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="948" width="13" height="15" fill="rgb(233,69,17)"/><text x="88.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="964" width="13" height="15" fill="rgb(218,72,0)"/><text x="88.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="980" width="13" height="15" fill="rgb(214,152,33)"/><text x="88.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="996" width="13" height="15" fill="rgb(242,105,1)"/><text x="88.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (2 samples, 1.07%)</title><rect x="85" y="1012" width="13" height="15" fill="rgb(224,164,10)"/><text x="88.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="1028" width="13" height="15" fill="rgb(222,65,38)"/><text x="88.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="1044" width="13" height="15" fill="rgb(232,181,36)"/><text x="88.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="1060" width="13" height="15" fill="rgb(205,214,27)"/><text x="88.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="1076" width="13" height="15" fill="rgb(252,1,29)"/><text x="88.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="1092" width="13" height="15" fill="rgb(249,103,42)"/><text x="88.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 1.07%)</title><rect x="85" y="1108" width="13" height="15" fill="rgb(240,137,31)"/><text x="88.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="1124" width="13" height="15" fill="rgb(226,11,31)"/><text x="88.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="1140" width="13" height="15" fill="rgb(254,123,3)"/><text x="88.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="1156" width="13" height="15" fill="rgb(217,154,43)"/><text x="88.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="1172" width="13" height="15" fill="rgb(226,206,42)"/><text x="88.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="1188" width="13" height="15" fill="rgb(249,65,33)"/><text x="88.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 1.07%)</title><rect x="85" y="1204" width="13" height="15" fill="rgb(253,46,0)"/><text x="88.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 1.07%)</title><rect x="85" y="1220" width="13" height="15" fill="rgb(226,139,24)"/><text x="88.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 1.07%)</title><rect x="85" y="1236" width="13" height="15" fill="rgb(236,56,50)"/><text x="88.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 1.07%)</title><rect x="85" y="1252" width="13" height="15" fill="rgb(213,109,19)"/><text x="88.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 1.07%)</title><rect x="85" y="1268" width="13" height="15" fill="rgb(213,121,37)"/><text x="88.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 1.07%)</title><rect x="85" y="1284" width="13" height="15" fill="rgb(221,217,54)"/><text x="88.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 1.07%)</title><rect x="85" y="1300" width="13" height="15" fill="rgb(253,81,38)"/><text x="88.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 1.07%)</title><rect x="85" y="1316" width="13" height="15" fill="rgb(215,228,10)"/><text x="88.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 1.07%)</title><rect x="85" y="1332" width="13" height="15" fill="rgb(226,115,10)"/><text x="88.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 1.07%)</title><rect x="85" y="1348" width="13" height="15" fill="rgb(253,92,21)"/><text x="88.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 1.07%)</title><rect x="85" y="1364" width="13" height="15" fill="rgb(221,109,4)"/><text x="88.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:583) (2 samples, 1.07%)</title><rect x="85" y="1380" width="13" height="15" fill="rgb(206,228,14)"/><text x="88.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.53%)</title><rect x="92" y="1396" width="6" height="15" fill="rgb(214,47,32)"/><text x="95.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.53%)</title><rect x="92" y="1412" width="6" height="15" fill="rgb(249,121,35)"/><text x="95.00" y="1422.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:40) (2 samples, 1.07%)</title><rect x="98" y="52" width="12" height="15" fill="rgb(222,30,34)"/><text x="101.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:11) (2 samples, 1.07%)</title><rect x="98" y="68" width="12" height="15" fill="rgb(229,193,7)"/><text x="101.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:39) (2 samples, 1.07%)</title><rect x="98" y="84" width="12" height="15" fill="rgb(210,119,17)"/><text x="101.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (2 samples, 1.07%)</title><rect x="98" y="100" width="12" height="15" fill="rgb(231,110,2)"/><text x="101.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:83) (2 samples, 1.07%)</title><rect x="98" y="116" width="12" height="15" fill="rgb(232,224,47)"/><text x="101.00" y="126.50"></text></g><g><title>load_iris (sklearn/datasets/_base.py:384) (2 samples, 1.07%)</title><rect x="98" y="132" width="12" height="15" fill="rgb(222,201,39)"/><text x="101.00" y="142.50"></text></g><g><title>load_data (sklearn/datasets/_base.py:243) (2 samples, 1.07%)</title><rect x="98" y="148" width="12" height="15" fill="rgb(209,183,21)"/><text x="101.00" y="158.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.53%)</title><rect x="104" y="164" width="6" height="15" fill="rgb(209,223,14)"/><text x="107.00" y="174.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1734) (1 samples, 0.53%)</title><rect x="104" y="180" width="6" height="15" fill="rgb(245,55,4)"/><text x="107.00" y="190.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (1 samples, 0.53%)</title><rect x="104" y="196" width="6" height="15" fill="rgb(205,121,18)"/><text x="107.00" y="206.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.53%)</title><rect x="104" y="212" width="6" height="15" fill="rgb(248,122,36)"/><text x="107.00" y="222.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1723) (1 samples, 0.53%)</title><rect x="104" y="228" width="6" height="15" fill="rgb(224,180,45)"/><text x="107.00" y="238.50"></text></g><g><title>PyArray_DTypeFromObject (common.c:118) (1 samples, 0.53%)</title><rect x="104" y="244" width="6" height="15" fill="rgb(216,71,41)"/><text x="107.00" y="254.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:480) (1 samples, 0.53%)</title><rect x="104" y="260" width="6" height="15" fill="rgb(246,216,42)"/><text x="107.00" y="270.50"></text></g><g><title>PyArray_DTypeFromObjectHelper (common.c:154) (1 samples, 0.53%)</title><rect x="104" y="276" width="6" height="15" fill="rgb(246,53,33)"/><text x="107.00" y="286.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:47) (1 samples, 0.53%)</title><rect x="110" y="52" width="7" height="15" fill="rgb(236,66,7)"/><text x="113.00" y="62.50"></text></g><g><title>profile0_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:46) (1 samples, 0.53%)</title><rect x="110" y="68" width="7" height="15" fill="rgb(253,45,17)"/><text x="113.00" y="78.50"></text></g><g><title>setup_profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:26) (1 samples, 0.53%)</title><rect x="110" y="84" width="7" height="15" fill="rgb(250,222,7)"/><text x="113.00" y="94.50"></text></g><g><title>profile0 (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:18) (1 samples, 0.53%)</title><rect x="110" y="100" width="7" height="15" fill="rgb(245,73,54)"/><text x="113.00" y="110.50"></text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (1 samples, 0.53%)</title><rect x="110" y="116" width="7" height="15" fill="rgb(208,21,37)"/><text x="113.00" y="126.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (1 samples, 0.53%)</title><rect x="110" y="132" width="7" height="15" fill="rgb(238,196,4)"/><text x="113.00" y="142.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (1 samples, 0.53%)</title><rect x="110" y="148" width="7" height="15" fill="rgb(209,74,12)"/><text x="113.00" y="158.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (1 samples, 0.53%)</title><rect x="110" y="164" width="7" height="15" fill="rgb(209,203,17)"/><text x="113.00" y="174.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (1 samples, 0.53%)</title><rect x="110" y="180" width="7" height="15" fill="rgb(205,125,51)"/><text x="113.00" y="190.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="110" y="196" width="7" height="15" fill="rgb(248,218,12)"/><text x="113.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.53%)</title><rect x="110" y="212" width="7" height="15" fill="rgb(221,76,21)"/><text x="113.00" y="222.50"></text></g><g><title>isclose (numpy/core/numeric.py:2272) (1 samples, 0.53%)</title><rect x="110" y="228" width="7" height="15" fill="rgb(242,155,25)"/><text x="113.00" y="238.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2258) (1 samples, 0.53%)</title><rect x="110" y="244" width="7" height="15" fill="rgb(205,153,43)"/><text x="113.00" y="254.50"></text></g><g><title>array_multiply (number.c:354) (1 samples, 0.53%)</title><rect x="110" y="260" width="7" height="15" fill="rgb(252,40,13)"/><text x="113.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4758) (1 samples, 0.53%)</title><rect x="110" y="276" width="7" height="15" fill="rgb(254,124,54)"/><text x="113.00" y="286.50"></text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:30) (1 samples, 0.53%)</title><rect x="117" y="100" width="6" height="15" fill="rgb(214,94,20)"/><text x="120.00" y="110.50"></text></g><g><title>__init__ (warnings.py:462) (1 samples, 0.53%)</title><rect x="129" y="196" width="7" height="15" fill="rgb(239,168,5)"/><text x="132.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (3 samples, 1.60%)</title><rect x="123" y="180" width="19" height="15" fill="rgb(254,38,3)"/><text x="126.00" y="190.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.53%)</title><rect x="136" y="196" width="6" height="15" fill="rgb(245,92,25)"/><text x="139.00" y="206.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (1 samples, 0.53%)</title><rect x="142" y="180" width="6" height="15" fill="rgb(222,76,26)"/><text x="145.00" y="190.50"></text></g><g><title>simplefilter (warnings.py:179) (1 samples, 0.53%)</title><rect x="142" y="196" width="6" height="15" fill="rgb(226,165,6)"/><text x="145.00" y="206.50"></text></g><g><title>_add_filter (warnings.py:193) (1 samples, 0.53%)</title><rect x="142" y="212" width="6" height="15" fill="rgb(251,173,19)"/><text x="145.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (1 samples, 0.53%)</title><rect x="148" y="180" width="7" height="15" fill="rgb(221,100,47)"/><text x="151.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (1 samples, 0.53%)</title><rect x="155" y="180" width="6" height="15" fill="rgb(235,1,52)"/><text x="158.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (1 samples, 0.53%)</title><rect x="155" y="196" width="6" height="15" fill="rgb(230,21,43)"/><text x="158.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (8 samples, 4.28%)</title><rect x="123" y="148" width="51" height="15" fill="rgb(205,50,18)"/><text x="126.00" y="158.50">predi..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (8 samples, 4.28%)</title><rect x="123" y="164" width="51" height="15" fill="rgb(249,156,34)"/><text x="126.00" y="174.50">_vali..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 1.07%)</title><rect x="161" y="180" width="13" height="15" fill="rgb(221,221,38)"/><text x="164.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (2 samples, 1.07%)</title><rect x="161" y="196" width="13" height="15" fill="rgb(206,218,41)"/><text x="164.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.53%)</title><rect x="167" y="212" width="7" height="15" fill="rgb(243,135,16)"/><text x="170.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:944) (2 samples, 1.07%)</title><rect x="174" y="212" width="12" height="15" fill="rgb(214,71,24)"/><text x="177.00" y="222.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.53%)</title><rect x="192" y="228" width="7" height="15" fill="rgb(230,15,43)"/><text x="195.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (1 samples, 0.53%)</title><rect x="211" y="244" width="7" height="15" fill="rgb(230,8,41)"/><text x="214.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (8 samples, 4.28%)</title><rect x="174" y="196" width="50" height="15" fill="rgb(248,9,51)"/><text x="177.00" y="206.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (6 samples, 3.21%)</title><rect x="186" y="212" width="38" height="15" fill="rgb(212,129,36)"/><text x="189.00" y="222.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (4 samples, 2.14%)</title><rect x="199" y="228" width="25" height="15" fill="rgb(247,24,40)"/><text x="202.00" y="238.50">&lt;..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.53%)</title><rect x="218" y="244" width="6" height="15" fill="rgb(231,156,38)"/><text x="221.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:449) (1 samples, 0.53%)</title><rect x="230" y="228" width="7" height="15" fill="rgb(254,174,8)"/><text x="233.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (1 samples, 0.53%)</title><rect x="237" y="228" width="6" height="15" fill="rgb(243,118,43)"/><text x="240.00" y="238.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.53%)</title><rect x="256" y="244" width="6" height="15" fill="rgb(250,145,40)"/><text x="259.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (4 samples, 2.14%)</title><rect x="243" y="228" width="25" height="15" fill="rgb(215,152,16)"/><text x="246.00" y="238.50">c..</text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.53%)</title><rect x="262" y="244" width="6" height="15" fill="rgb(242,199,22)"/><text x="265.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (1 samples, 0.53%)</title><rect x="275" y="260" width="6" height="15" fill="rgb(240,210,31)"/><text x="278.00" y="270.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.53%)</title><rect x="281" y="260" width="6" height="15" fill="rgb(224,219,36)"/><text x="284.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (4 samples, 2.14%)</title><rect x="268" y="228" width="25" height="15" fill="rgb(219,138,34)"/><text x="271.00" y="238.50">c..</text></g><g><title>simplefilter (warnings.py:179) (4 samples, 2.14%)</title><rect x="268" y="244" width="25" height="15" fill="rgb(249,179,24)"/><text x="271.00" y="254.50">s..</text></g><g><title>_add_filter (warnings.py:189) (1 samples, 0.53%)</title><rect x="287" y="260" width="6" height="15" fill="rgb(243,1,18)"/><text x="290.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (2 samples, 1.07%)</title><rect x="293" y="228" width="13" height="15" fill="rgb(247,63,53)"/><text x="296.00" y="238.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.53%)</title><rect x="300" y="244" width="6" height="15" fill="rgb(211,19,10)"/><text x="303.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1406) (1 samples, 0.53%)</title><rect x="319" y="292" width="6" height="15" fill="rgb(218,176,11)"/><text x="322.00" y="302.50"></text></g><g><title>0x7fefbcb200a0 (numpy/core/_multiarray_umath.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="319" y="308" width="6" height="15" fill="rgb(217,188,25)"/><text x="322.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (4 samples, 2.14%)</title><rect x="306" y="228" width="25" height="15" fill="rgb(249,189,40)"/><text x="309.00" y="238.50">c..</text></g><g><title>asarray (numpy/core/_asarray.py:85) (2 samples, 1.07%)</title><rect x="319" y="244" width="12" height="15" fill="rgb(231,94,25)"/><text x="322.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (2 samples, 1.07%)</title><rect x="319" y="260" width="12" height="15" fill="rgb(239,89,3)"/><text x="322.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (2 samples, 1.07%)</title><rect x="319" y="276" width="12" height="15" fill="rgb(210,25,16)"/><text x="322.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1407) (1 samples, 0.53%)</title><rect x="325" y="292" width="6" height="15" fill="rgb(243,195,26)"/><text x="328.00" y="302.50"></text></g><g><title>__exit__ (warnings.py:496) (1 samples, 0.53%)</title><rect x="338" y="244" width="6" height="15" fill="rgb(206,47,23)"/><text x="341.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:518) (3 samples, 1.60%)</title><rect x="331" y="228" width="19" height="15" fill="rgb(252,226,54)"/><text x="334.00" y="238.50"></text></g><g><title>__exit__ (warnings.py:497) (1 samples, 0.53%)</title><rect x="344" y="244" width="6" height="15" fill="rgb(205,44,51)"/><text x="347.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 2.14%)</title><rect x="350" y="228" width="25" height="15" fill="rgb(214,132,28)"/><text x="353.00" y="238.50">c..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 2.14%)</title><rect x="350" y="244" width="25" height="15" fill="rgb(216,194,3)"/><text x="353.00" y="254.50">_..</text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 1.07%)</title><rect x="363" y="260" width="12" height="15" fill="rgb(216,209,23)"/><text x="366.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 1.07%)</title><rect x="375" y="244" width="13" height="15" fill="rgb(238,9,41)"/><text x="378.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (28 samples, 14.97%)</title><rect x="224" y="196" width="177" height="15" fill="rgb(222,148,28)"/><text x="227.00" y="206.50">predict (sklearn/tree/_..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (28 samples, 14.97%)</title><rect x="224" y="212" width="177" height="15" fill="rgb(250,207,38)"/><text x="227.00" y="222.50">_validate_X_predict (sk..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (4 samples, 2.14%)</title><rect x="375" y="228" width="26" height="15" fill="rgb(220,76,34)"/><text x="378.00" y="238.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:150) (2 samples, 1.07%)</title><rect x="388" y="244" width="13" height="15" fill="rgb(214,18,39)"/><text x="391.00" y="254.50"></text></g><g><title>0x7fef97341d2e (?) (1 samples, 0.53%)</title><rect x="407" y="212" width="6" height="15" fill="rgb(238,53,14)"/><text x="410.00" y="222.50"></text></g><g><title>0x7fef97340f81 (?) (1 samples, 0.53%)</title><rect x="407" y="228" width="6" height="15" fill="rgb(236,193,20)"/><text x="410.00" y="238.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (2 samples, 1.07%)</title><rect x="413" y="340" width="13" height="15" fill="rgb(240,123,27)"/><text x="416.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (2 samples, 1.07%)</title><rect x="413" y="356" width="13" height="15" fill="rgb(221,162,33)"/><text x="416.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (2 samples, 1.07%)</title><rect x="413" y="372" width="13" height="15" fill="rgb(208,165,53)"/><text x="416.00" y="382.50"></text></g><g><title>_append_char (buffer.c:121) (2 samples, 1.07%)</title><rect x="413" y="388" width="13" height="15" fill="rgb(233,16,27)"/><text x="416.00" y="398.50"></text></g><g><title>malloc (libc-2.29.so) (2 samples, 1.07%)</title><rect x="413" y="404" width="13" height="15" fill="rgb(240,68,31)"/><text x="416.00" y="414.50"></text></g><g><title>array_getbuffer (buffer.c:782) (3 samples, 1.60%)</title><rect x="413" y="324" width="19" height="15" fill="rgb(239,166,7)"/><text x="416.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:665) (1 samples, 0.53%)</title><rect x="426" y="340" width="6" height="15" fill="rgb(253,174,29)"/><text x="429.00" y="350.50"></text></g><g><title>0x7fef97340fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="413" y="228" width="26" height="15" fill="rgb(244,77,22)"/><text x="416.00" y="238.50">0..</text></g><g><title>0x7fef97350405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="413" y="244" width="26" height="15" fill="rgb(223,117,2)"/><text x="416.00" y="254.50">0..</text></g><g><title>0x7fef9734f2df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="413" y="260" width="26" height="15" fill="rgb(252,184,31)"/><text x="416.00" y="270.50">0..</text></g><g><title>0x7fef97333d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="413" y="276" width="26" height="15" fill="rgb(223,217,22)"/><text x="416.00" y="286.50">0..</text></g><g><title>0x7fef97333666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="413" y="292" width="26" height="15" fill="rgb(243,196,15)"/><text x="416.00" y="302.50">0..</text></g><g><title>0x7fef973292fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="413" y="308" width="26" height="15" fill="rgb(224,229,47)"/><text x="416.00" y="318.50">0..</text></g><g><title>array_getbuffer (buffer.c:801) (1 samples, 0.53%)</title><rect x="432" y="324" width="7" height="15" fill="rgb(230,221,25)"/><text x="435.00" y="334.50"></text></g><g><title>array_take (methods.c:138) (2 samples, 1.07%)</title><rect x="439" y="244" width="12" height="15" fill="rgb(205,182,3)"/><text x="442.00" y="254.50"></text></g><g><title>PyArray_ClipmodeConverter (conversion_utils.c:655) (1 samples, 0.53%)</title><rect x="445" y="260" width="6" height="15" fill="rgb(213,119,15)"/><text x="448.00" y="270.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (1 samples, 0.53%)</title><rect x="451" y="260" width="7" height="15" fill="rgb(252,4,11)"/><text x="454.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3033) (1 samples, 0.53%)</title><rect x="451" y="276" width="7" height="15" fill="rgb(230,117,54)"/><text x="454.00" y="286.50"></text></g><g><title>0x7fef9734105a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 2.14%)</title><rect x="439" y="228" width="25" height="15" fill="rgb(252,162,12)"/><text x="442.00" y="238.50">0..</text></g><g><title>array_take (methods.c:145) (2 samples, 1.07%)</title><rect x="451" y="244" width="13" height="15" fill="rgb(249,150,6)"/><text x="454.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.53%)</title><rect x="458" y="260" width="6" height="15" fill="rgb(250,13,18)"/><text x="461.00" y="270.50"></text></g><g><title>PyArray_FromAny (ctors.c:1867) (1 samples, 0.53%)</title><rect x="458" y="276" width="6" height="15" fill="rgb(208,90,5)"/><text x="461.00" y="286.50"></text></g><g><title>PyArray_AdaptFlexibleDType (convert_datatype.c:148) (1 samples, 0.53%)</title><rect x="458" y="292" width="6" height="15" fill="rgb(239,228,54)"/><text x="461.00" y="302.50"></text></g><g><title>0x7fef9734114f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.53%)</title><rect x="464" y="228" width="6" height="15" fill="rgb(217,170,37)"/><text x="467.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.53%)</title><rect x="464" y="244" width="6" height="15" fill="rgb(249,56,24)"/><text x="467.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.53%)</title><rect x="464" y="260" width="6" height="15" fill="rgb(248,78,42)"/><text x="467.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.53%)</title><rect x="464" y="276" width="6" height="15" fill="rgb(229,52,28)"/><text x="467.00" y="286.50"></text></g><g><title>array_reshape (methods.c:201) (1 samples, 0.53%)</title><rect x="470" y="244" width="6" height="15" fill="rgb(211,60,50)"/><text x="473.00" y="254.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c:102) (1 samples, 0.53%)</title><rect x="470" y="260" width="6" height="15" fill="rgb(229,39,8)"/><text x="473.00" y="270.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (13 samples, 6.95%)</title><rect x="401" y="196" width="82" height="15" fill="rgb(228,178,16)"/><text x="404.00" y="206.50">predict (..</text></g><g><title>0x7fef97341d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (11 samples, 5.88%)</title><rect x="413" y="212" width="70" height="15" fill="rgb(236,184,1)"/><text x="416.00" y="222.50">0x7fef9..</text></g><g><title>0x7fef97341328 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 1.07%)</title><rect x="470" y="228" width="13" height="15" fill="rgb(247,178,43)"/><text x="473.00" y="238.50"></text></g><g><title>array_reshape (methods.c:210) (1 samples, 0.53%)</title><rect x="476" y="244" width="7" height="15" fill="rgb(242,173,27)"/><text x="479.00" y="254.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h:27) (1 samples, 0.53%)</title><rect x="476" y="260" width="7" height="15" fill="rgb(213,134,15)"/><text x="479.00" y="270.50"></text></g><g><title>PyArray_Newshape (shape.c:282) (1 samples, 0.53%)</title><rect x="476" y="276" width="7" height="15" fill="rgb(218,30,33)"/><text x="479.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1052) (1 samples, 0.53%)</title><rect x="476" y="292" width="7" height="15" fill="rgb(211,205,31)"/><text x="479.00" y="302.50"></text></g><g><title>predict (sklearn/tree/_classes.py:424) (1 samples, 0.53%)</title><rect x="483" y="196" width="6" height="15" fill="rgb(249,106,27)"/><text x="486.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (52 samples, 27.81%)</title><rect x="174" y="164" width="328" height="15" fill="rgb(227,162,33)"/><text x="177.00" y="174.50">_get_median_predict (sklearn/ensemble/_weigh..</text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (52 samples, 27.81%)</title><rect x="174" y="180" width="328" height="15" fill="rgb(206,166,3)"/><text x="177.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boostin..</text></g><g><title>predict (sklearn/tree/_classes.py:442) (2 samples, 1.07%)</title><rect x="489" y="196" width="13" height="15" fill="rgb(253,8,29)"/><text x="492.00" y="206.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.53%)</title><rect x="495" y="212" width="7" height="15" fill="rgb(212,120,30)"/><text x="498.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:834) (1 samples, 0.53%)</title><rect x="495" y="228" width="7" height="15" fill="rgb(235,3,42)"/><text x="498.00" y="238.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (2 samples, 1.07%)</title><rect x="502" y="164" width="12" height="15" fill="rgb(207,84,34)"/><text x="505.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="508" y="180" width="6" height="15" fill="rgb(253,225,33)"/><text x="511.00" y="190.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.53%)</title><rect x="514" y="260" width="7" height="15" fill="rgb(251,162,37)"/><text x="517.00" y="270.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (2 samples, 1.07%)</title><rect x="514" y="180" width="13" height="15" fill="rgb(246,136,35)"/><text x="517.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (2 samples, 1.07%)</title><rect x="514" y="196" width="13" height="15" fill="rgb(229,114,13)"/><text x="517.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 1.07%)</title><rect x="514" y="212" width="13" height="15" fill="rgb(216,190,40)"/><text x="517.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (2 samples, 1.07%)</title><rect x="514" y="228" width="13" height="15" fill="rgb(208,5,10)"/><text x="517.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 1.07%)</title><rect x="514" y="244" width="13" height="15" fill="rgb(240,148,34)"/><text x="517.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (1 samples, 0.53%)</title><rect x="521" y="260" width="6" height="15" fill="rgb(249,75,24)"/><text x="524.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (1 samples, 0.53%)</title><rect x="521" y="276" width="6" height="15" fill="rgb(208,184,49)"/><text x="524.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (1 samples, 0.53%)</title><rect x="521" y="292" width="6" height="15" fill="rgb(230,192,46)"/><text x="524.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.53%)</title><rect x="521" y="308" width="6" height="15" fill="rgb(240,140,26)"/><text x="524.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4681) (1 samples, 0.53%)</title><rect x="521" y="324" width="6" height="15" fill="rgb(231,64,52)"/><text x="524.00" y="334.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.53%)</title><rect x="527" y="244" width="6" height="15" fill="rgb(231,156,26)"/><text x="530.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.53%)</title><rect x="533" y="260" width="7" height="15" fill="rgb(229,162,28)"/><text x="536.00" y="270.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.53%)</title><rect x="533" y="276" width="7" height="15" fill="rgb(227,213,3)"/><text x="536.00" y="286.50"></text></g><g><title>get_array_ufunc_overrides (override.c:72) (1 samples, 0.53%)</title><rect x="533" y="292" width="7" height="15" fill="rgb(218,65,43)"/><text x="536.00" y="302.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c:37) (1 samples, 0.53%)</title><rect x="533" y="308" width="7" height="15" fill="rgb(206,153,11)"/><text x="536.00" y="318.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h:106) (1 samples, 0.53%)</title><rect x="533" y="324" width="7" height="15" fill="rgb(208,36,9)"/><text x="536.00" y="334.50"></text></g><g><title>maybe_get_attr (get_attr_string.h:80) (1 samples, 0.53%)</title><rect x="533" y="340" width="7" height="15" fill="rgb(239,185,6)"/><text x="536.00" y="350.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (3 samples, 1.60%)</title><rect x="527" y="180" width="19" height="15" fill="rgb(226,214,42)"/><text x="530.00" y="190.50"></text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (3 samples, 1.60%)</title><rect x="527" y="196" width="19" height="15" fill="rgb(233,101,10)"/><text x="530.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 1.60%)</title><rect x="527" y="212" width="19" height="15" fill="rgb(254,214,29)"/><text x="530.00" y="222.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (3 samples, 1.60%)</title><rect x="527" y="228" width="19" height="15" fill="rgb(215,120,7)"/><text x="530.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 1.07%)</title><rect x="533" y="244" width="13" height="15" fill="rgb(227,190,12)"/><text x="536.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.53%)</title><rect x="540" y="260" width="6" height="15" fill="rgb(228,27,36)"/><text x="543.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.53%)</title><rect x="540" y="276" width="6" height="15" fill="rgb(226,90,33)"/><text x="543.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.53%)</title><rect x="540" y="292" width="6" height="15" fill="rgb(213,152,6)"/><text x="543.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.53%)</title><rect x="540" y="308" width="6" height="15" fill="rgb(225,51,42)"/><text x="543.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.53%)</title><rect x="540" y="324" width="6" height="15" fill="rgb(251,207,37)"/><text x="543.00" y="334.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (1 samples, 0.53%)</title><rect x="546" y="180" width="6" height="15" fill="rgb(214,95,11)"/><text x="549.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.53%)</title><rect x="546" y="196" width="6" height="15" fill="rgb(218,165,28)"/><text x="549.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.53%)</title><rect x="546" y="212" width="6" height="15" fill="rgb(250,16,16)"/><text x="549.00" y="222.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3972) (1 samples, 0.53%)</title><rect x="546" y="228" width="6" height="15" fill="rgb(209,178,42)"/><text x="549.00" y="238.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.53%)</title><rect x="546" y="244" width="6" height="15" fill="rgb(222,148,14)"/><text x="549.00" y="254.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (2 samples, 1.07%)</title><rect x="552" y="196" width="13" height="15" fill="rgb(209,202,42)"/><text x="555.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 1.07%)</title><rect x="552" y="212" width="13" height="15" fill="rgb(252,141,5)"/><text x="555.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (2 samples, 1.07%)</title><rect x="552" y="228" width="13" height="15" fill="rgb(231,23,53)"/><text x="555.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (2 samples, 1.07%)</title><rect x="552" y="244" width="13" height="15" fill="rgb(227,216,41)"/><text x="555.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (1 samples, 0.53%)</title><rect x="558" y="260" width="7" height="15" fill="rgb(229,217,7)"/><text x="561.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (1 samples, 0.53%)</title><rect x="558" y="276" width="7" height="15" fill="rgb(246,180,3)"/><text x="561.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.53%)</title><rect x="558" y="292" width="7" height="15" fill="rgb(254,124,33)"/><text x="561.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.53%)</title><rect x="558" y="308" width="7" height="15" fill="rgb(210,49,38)"/><text x="561.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:190) (1 samples, 0.53%)</title><rect x="558" y="324" width="7" height="15" fill="rgb(234,149,16)"/><text x="561.00" y="334.50"></text></g><g><title>npyiter_calculate_ndim (nditer_constr.c:871) (1 samples, 0.53%)</title><rect x="558" y="340" width="7" height="15" fill="rgb(222,34,26)"/><text x="561.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.53%)</title><rect x="565" y="228" width="6" height="15" fill="rgb(241,56,24)"/><text x="568.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:939) (1 samples, 0.53%)</title><rect x="565" y="244" width="6" height="15" fill="rgb(217,109,11)"/><text x="568.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.53%)</title><rect x="584" y="292" width="6" height="15" fill="rgb(216,64,32)"/><text x="587.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.53%)</title><rect x="590" y="356" width="6" height="15" fill="rgb(209,18,38)"/><text x="593.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.53%)</title><rect x="590" y="372" width="6" height="15" fill="rgb(227,9,24)"/><text x="593.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.53%)</title><rect x="590" y="388" width="6" height="15" fill="rgb(248,112,5)"/><text x="593.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.53%)</title><rect x="590" y="404" width="6" height="15" fill="rgb(239,224,12)"/><text x="593.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:927) (1 samples, 0.53%)</title><rect x="590" y="420" width="6" height="15" fill="rgb(251,156,39)"/><text x="593.00" y="430.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 1.07%)</title><rect x="590" y="324" width="13" height="15" fill="rgb(248,169,40)"/><text x="593.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 1.07%)</title><rect x="590" y="340" width="13" height="15" fill="rgb(225,96,16)"/><text x="593.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (1 samples, 0.53%)</title><rect x="596" y="356" width="7" height="15" fill="rgb(218,11,19)"/><text x="599.00" y="366.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (1 samples, 0.53%)</title><rect x="596" y="372" width="7" height="15" fill="rgb(248,3,22)"/><text x="599.00" y="382.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (1 samples, 0.53%)</title><rect x="596" y="388" width="7" height="15" fill="rgb(247,101,49)"/><text x="599.00" y="398.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:49) (1 samples, 0.53%)</title><rect x="596" y="404" width="7" height="15" fill="rgb(225,138,12)"/><text x="599.00" y="414.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (6 samples, 3.21%)</title><rect x="571" y="228" width="38" height="15" fill="rgb(217,50,1)"/><text x="574.00" y="238.50">isc..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (6 samples, 3.21%)</title><rect x="571" y="244" width="38" height="15" fill="rgb(216,40,43)"/><text x="574.00" y="254.50">all..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 2.67%)</title><rect x="577" y="260" width="32" height="15" fill="rgb(234,201,0)"/><text x="580.00" y="270.50">ar..</text></g><g><title>all (numpy/core/fromnumeric.py:2351) (5 samples, 2.67%)</title><rect x="577" y="276" width="32" height="15" fill="rgb(241,139,46)"/><text x="580.00" y="286.50">al..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 1.60%)</title><rect x="590" y="292" width="19" height="15" fill="rgb(239,60,4)"/><text x="593.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 1.60%)</title><rect x="590" y="308" width="19" height="15" fill="rgb(249,45,4)"/><text x="593.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4694) (1 samples, 0.53%)</title><rect x="603" y="324" width="6" height="15" fill="rgb(207,209,9)"/><text x="606.00" y="334.50"></text></g><g><title>PyArray_Return (scalarapi.c:864) (1 samples, 0.53%)</title><rect x="603" y="340" width="6" height="15" fill="rgb(229,47,9)"/><text x="606.00" y="350.50"></text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.53%)</title><rect x="603" y="356" width="6" height="15" fill="rgb(211,34,31)"/><text x="606.00" y="366.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (2 samples, 1.07%)</title><rect x="609" y="244" width="13" height="15" fill="rgb(238,3,31)"/><text x="612.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 1.07%)</title><rect x="609" y="260" width="13" height="15" fill="rgb(231,72,49)"/><text x="612.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:131) (1 samples, 0.53%)</title><rect x="615" y="276" width="7" height="15" fill="rgb(244,156,28)"/><text x="618.00" y="286.50"></text></g><g><title>array_subtract (number.c:342) (1 samples, 0.53%)</title><rect x="628" y="260" width="6" height="15" fill="rgb(227,127,20)"/><text x="631.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.53%)</title><rect x="628" y="276" width="6" height="15" fill="rgb(226,181,34)"/><text x="631.00" y="286.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.53%)</title><rect x="628" y="292" width="6" height="15" fill="rgb(224,163,35)"/><text x="631.00" y="302.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.53%)</title><rect x="628" y="308" width="6" height="15" fill="rgb(225,168,17)"/><text x="631.00" y="318.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1368) (1 samples, 0.53%)</title><rect x="628" y="324" width="6" height="15" fill="rgb(209,31,44)"/><text x="631.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (20 samples, 10.70%)</title><rect x="514" y="164" width="127" height="15" fill="rgb(240,37,28)"/><text x="517.00" y="174.50">_get_median_pre..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (14 samples, 7.49%)</title><rect x="552" y="180" width="89" height="15" fill="rgb(248,182,44)"/><text x="555.00" y="190.50">stable_cum..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (12 samples, 6.42%)</title><rect x="565" y="196" width="76" height="15" fill="rgb(254,188,35)"/><text x="568.00" y="206.50">isclose ..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (12 samples, 6.42%)</title><rect x="565" y="212" width="76" height="15" fill="rgb(213,227,27)"/><text x="568.00" y="222.50">array_im..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (5 samples, 2.67%)</title><rect x="609" y="228" width="32" height="15" fill="rgb(238,158,49)"/><text x="612.00" y="238.50">is..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (3 samples, 1.60%)</title><rect x="622" y="244" width="19" height="15" fill="rgb(245,95,3)"/><text x="625.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.53%)</title><rect x="634" y="260" width="7" height="15" fill="rgb(235,85,11)"/><text x="637.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.53%)</title><rect x="634" y="276" width="7" height="15" fill="rgb(233,192,51)"/><text x="637.00" y="286.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1056) (1 samples, 0.53%)</title><rect x="634" y="292" width="7" height="15" fill="rgb(221,77,16)"/><text x="637.00" y="302.50"></text></g><g><title>0x7fefbd91e120 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="634" y="308" width="7" height="15" fill="rgb(218,165,42)"/><text x="637.00" y="318.50"></text></g><g><title>array_richcompare (arrayobject.c:1509) (1 samples, 0.53%)</title><rect x="641" y="180" width="6" height="15" fill="rgb(224,156,1)"/><text x="644.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.53%)</title><rect x="641" y="196" width="6" height="15" fill="rgb(251,12,48)"/><text x="644.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.53%)</title><rect x="641" y="212" width="6" height="15" fill="rgb(254,125,47)"/><text x="644.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.53%)</title><rect x="641" y="228" width="6" height="15" fill="rgb(254,160,11)"/><text x="644.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.53%)</title><rect x="641" y="244" width="6" height="15" fill="rgb(252,199,43)"/><text x="644.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.53%)</title><rect x="641" y="260" width="6" height="15" fill="rgb(229,216,54)"/><text x="644.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.53%)</title><rect x="641" y="276" width="6" height="15" fill="rgb(212,100,36)"/><text x="644.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.53%)</title><rect x="641" y="292" width="6" height="15" fill="rgb(248,147,36)"/><text x="644.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.53%)</title><rect x="641" y="308" width="6" height="15" fill="rgb(222,187,6)"/><text x="644.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1016) (1 samples, 0.53%)</title><rect x="641" y="324" width="6" height="15" fill="rgb(246,209,49)"/><text x="644.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c:1768) (1 samples, 0.53%)</title><rect x="641" y="340" width="6" height="15" fill="rgb(237,191,39)"/><text x="644.00" y="350.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (2 samples, 1.07%)</title><rect x="641" y="164" width="12" height="15" fill="rgb(223,74,13)"/><text x="644.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1584) (1 samples, 0.53%)</title><rect x="647" y="180" width="6" height="15" fill="rgb(227,83,2)"/><text x="650.00" y="190.50"></text></g><g><title>get_view_from_index (mapping.c:920) (1 samples, 0.53%)</title><rect x="647" y="196" width="6" height="15" fill="rgb(220,219,0)"/><text x="650.00" y="206.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (1 samples, 0.53%)</title><rect x="653" y="164" width="6" height="15" fill="rgb(249,61,53)"/><text x="656.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.53%)</title><rect x="653" y="180" width="6" height="15" fill="rgb(214,36,43)"/><text x="656.00" y="190.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.53%)</title><rect x="653" y="196" width="6" height="15" fill="rgb(219,50,6)"/><text x="656.00" y="206.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:54) (87 samples, 46.52%)</title><rect x="117" y="52" width="549" height="15" fill="rgb(235,85,41)"/><text x="120.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_fl..</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:53) (87 samples, 46.52%)</title><rect x="117" y="68" width="549" height="15" fill="rgb(229,148,20)"/><text x="120.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37) (87 samples, 46.52%)</title><rect x="117" y="84" width="549" height="15" fill="rgb(225,229,24)"/><text x="120.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31) (86 samples, 45.99%)</title><rect x="123" y="100" width="543" height="15" fill="rgb(237,20,5)"/><text x="126.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_fl..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (86 samples, 45.99%)</title><rect x="123" y="116" width="543" height="15" fill="rgb(223,226,31)"/><text x="126.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (86 samples, 45.99%)</title><rect x="123" y="132" width="543" height="15" fill="rgb(214,133,24)"/><text x="126.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (78 samples, 41.71%)</title><rect x="174" y="148" width="492" height="15" fill="rgb(228,8,20)"/><text x="177.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (1 samples, 0.53%)</title><rect x="659" y="164" width="7" height="15" fill="rgb(250,29,44)"/><text x="662.00" y="174.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.53%)</title><rect x="659" y="180" width="7" height="15" fill="rgb(222,31,21)"/><text x="662.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.53%)</title><rect x="659" y="196" width="7" height="15" fill="rgb(225,112,10)"/><text x="662.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.53%)</title><rect x="659" y="212" width="7" height="15" fill="rgb(249,147,26)"/><text x="662.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (5 samples, 2.67%)</title><rect x="666" y="180" width="31" height="15" fill="rgb(227,160,17)"/><text x="669.00" y="190.50">ru..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 1.07%)</title><rect x="685" y="196" width="12" height="15" fill="rgb(239,149,19)"/><text x="688.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (1 samples, 0.53%)</title><rect x="710" y="212" width="6" height="15" fill="rgb(214,15,7)"/><text x="713.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1180) (1 samples, 0.53%)</title><rect x="710" y="228" width="6" height="15" fill="rgb(231,9,30)"/><text x="713.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.53%)</title><rect x="716" y="212" width="7" height="15" fill="rgb(248,176,38)"/><text x="719.00" y="222.50"></text></g><g><title>PyArray_ToList (convert.c:120) (1 samples, 0.53%)</title><rect x="716" y="228" width="7" height="15" fill="rgb(250,151,21)"/><text x="719.00" y="238.50"></text></g><g><title>recursive_tolist (convert.c:102) (1 samples, 0.53%)</title><rect x="716" y="244" width="7" height="15" fill="rgb(231,204,21)"/><text x="719.00" y="254.50"></text></g><g><title>LONG_getitem (arraytypes.c.src:204) (1 samples, 0.53%)</title><rect x="716" y="260" width="7" height="15" fill="rgb(229,127,14)"/><text x="719.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:43) (1 samples, 0.53%)</title><rect x="723" y="212" width="6" height="15" fill="rgb(252,37,36)"/><text x="726.00" y="222.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.53%)</title><rect x="729" y="244" width="6" height="15" fill="rgb(239,171,39)"/><text x="732.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1855) (1 samples, 0.53%)</title><rect x="729" y="260" width="6" height="15" fill="rgb(209,185,29)"/><text x="732.00" y="270.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c:1755) (1 samples, 0.53%)</title><rect x="729" y="276" width="6" height="15" fill="rgb(216,116,31)"/><text x="732.00" y="286.50"></text></g><g><title>discover_dimensions (ctors.c:699) (1 samples, 0.53%)</title><rect x="729" y="292" width="6" height="15" fill="rgb(216,22,35)"/><text x="732.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 1.07%)</title><rect x="729" y="228" width="12" height="15" fill="rgb(246,5,48)"/><text x="732.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:716) (1 samples, 0.53%)</title><rect x="735" y="244" width="6" height="15" fill="rgb(227,198,23)"/><text x="738.00" y="254.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2634) (1 samples, 0.53%)</title><rect x="741" y="244" width="7" height="15" fill="rgb(236,65,5)"/><text x="744.00" y="254.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.53%)</title><rect x="741" y="260" width="7" height="15" fill="rgb(242,167,12)"/><text x="744.00" y="270.50"></text></g><g><title>0x7fefbd8ff700 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="741" y="276" width="7" height="15" fill="rgb(230,4,39)"/><text x="744.00" y="286.50"></text></g><g><title>0x7fefbd8fcaa4 (libc-2.29.so) (1 samples, 0.53%)</title><rect x="741" y="292" width="7" height="15" fill="rgb(220,23,16)"/><text x="744.00" y="302.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2869) (1 samples, 0.53%)</title><rect x="748" y="244" width="6" height="15" fill="rgb(208,138,10)"/><text x="751.00" y="254.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.53%)</title><rect x="748" y="260" width="6" height="15" fill="rgb(230,82,47)"/><text x="751.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1088) (1 samples, 0.53%)</title><rect x="748" y="276" width="6" height="15" fill="rgb(238,33,46)"/><text x="751.00" y="286.50"></text></g><g><title>npy_alloc_cache (alloc.c:122) (1 samples, 0.53%)</title><rect x="748" y="292" width="6" height="15" fill="rgb(219,206,47)"/><text x="751.00" y="302.50"></text></g><g><title>_npy_alloc_cache (alloc.c:76) (1 samples, 0.53%)</title><rect x="748" y="308" width="6" height="15" fill="rgb(209,87,53)"/><text x="751.00" y="318.50"></text></g><g><title>PyDataMem_NEW (alloc.c:231) (1 samples, 0.53%)</title><rect x="748" y="324" width="6" height="15" fill="rgb(220,114,32)"/><text x="751.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.53%)</title><rect x="748" y="340" width="6" height="15" fill="rgb(244,158,40)"/><text x="751.00" y="350.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 1.60%)</title><rect x="741" y="228" width="19" height="15" fill="rgb(240,169,32)"/><text x="744.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (1 samples, 0.53%)</title><rect x="754" y="244" width="6" height="15" fill="rgb(236,12,20)"/><text x="757.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.53%)</title><rect x="754" y="260" width="6" height="15" fill="rgb(234,188,28)"/><text x="757.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1555) (1 samples, 0.53%)</title><rect x="754" y="276" width="6" height="15" fill="rgb(220,168,19)"/><text x="757.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (6 samples, 3.21%)</title><rect x="729" y="212" width="38" height="15" fill="rgb(249,154,15)"/><text x="732.00" y="222.50">_ru..</text></g><g><title>array_subscript (mapping.c:1676) (1 samples, 0.53%)</title><rect x="760" y="228" width="7" height="15" fill="rgb(224,45,41)"/><text x="763.00" y="238.50"></text></g><g><title>mapiter_get (lowlevel_strided_loops.c.src:1572) (1 samples, 0.53%)</title><rect x="760" y="244" width="7" height="15" fill="rgb(213,18,45)"/><text x="763.00" y="254.50"></text></g><g><title>check_and_adjust_index (common.h:110) (1 samples, 0.53%)</title><rect x="760" y="260" width="7" height="15" fill="rgb(217,228,14)"/><text x="763.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_concat.py:30) (1 samples, 0.53%)</title><rect x="767" y="212" width="6" height="15" fill="rgb(225,86,38)"/><text x="770.00" y="222.50"></text></g><g><title>concatenate (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="767" y="228" width="6" height="15" fill="rgb(239,84,33)"/><text x="770.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.53%)</title><rect x="767" y="244" width="6" height="15" fill="rgb(240,201,9)"/><text x="770.00" y="254.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:22) (1 samples, 0.53%)</title><rect x="773" y="212" width="6" height="15" fill="rgb(212,194,28)"/><text x="776.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (1 samples, 0.53%)</title><rect x="779" y="212" width="7" height="15" fill="rgb(215,199,29)"/><text x="782.00" y="222.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="779" y="228" width="7" height="15" fill="rgb(243,117,44)"/><text x="782.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.53%)</title><rect x="779" y="244" width="7" height="15" fill="rgb(206,132,14)"/><text x="782.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.53%)</title><rect x="779" y="260" width="7" height="15" fill="rgb(254,117,40)"/><text x="782.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.53%)</title><rect x="779" y="276" width="7" height="15" fill="rgb(230,112,14)"/><text x="782.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (1 samples, 0.53%)</title><rect x="779" y="292" width="7" height="15" fill="rgb(221,82,38)"/><text x="782.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (1 samples, 0.53%)</title><rect x="779" y="308" width="7" height="15" fill="rgb(233,72,15)"/><text x="782.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:251) (1 samples, 0.53%)</title><rect x="779" y="324" width="7" height="15" fill="rgb(227,179,13)"/><text x="782.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (1 samples, 0.53%)</title><rect x="786" y="212" width="6" height="15" fill="rgb(214,206,24)"/><text x="789.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="786" y="228" width="6" height="15" fill="rgb(232,220,10)"/><text x="789.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.53%)</title><rect x="786" y="244" width="6" height="15" fill="rgb(207,104,17)"/><text x="789.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.53%)</title><rect x="792" y="228" width="6" height="15" fill="rgb(244,28,54)"/><text x="795.00" y="238.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="792" y="244" width="6" height="15" fill="rgb(205,11,44)"/><text x="795.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:234) (1 samples, 0.53%)</title><rect x="798" y="244" width="7" height="15" fill="rgb(221,40,5)"/><text x="801.00" y="254.50"></text></g><g><title>array_choose (methods.c:1218) (3 samples, 1.60%)</title><rect x="805" y="292" width="19" height="15" fill="rgb(238,100,15)"/><text x="808.00" y="302.50"></text></g><g><title>NpyArg_ParseKeywords (methods.c:53) (3 samples, 1.60%)</title><rect x="805" y="308" width="19" height="15" fill="rgb(249,175,10)"/><text x="808.00" y="318.50"></text></g><g><title>unicode_hash (python3.7) (2 samples, 1.07%)</title><rect x="811" y="324" width="13" height="15" fill="rgb(220,101,14)"/><text x="814.00" y="334.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 2.14%)</title><rect x="805" y="244" width="25" height="15" fill="rgb(224,224,46)"/><text x="808.00" y="254.50">a..</text></g><g><title>choose (numpy/core/fromnumeric.py:432) (4 samples, 2.14%)</title><rect x="805" y="260" width="25" height="15" fill="rgb(219,108,35)"/><text x="808.00" y="270.50">c..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 2.14%)</title><rect x="805" y="276" width="25" height="15" fill="rgb(252,115,11)"/><text x="808.00" y="286.50">_..</text></g><g><title>array_choose (methods.c:1224) (1 samples, 0.53%)</title><rect x="824" y="292" width="6" height="15" fill="rgb(213,116,44)"/><text x="827.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:794) (1 samples, 0.53%)</title><rect x="824" y="308" width="6" height="15" fill="rgb(214,216,27)"/><text x="827.00" y="318.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.53%)</title><rect x="824" y="324" width="6" height="15" fill="rgb(221,86,24)"/><text x="827.00" y="334.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.53%)</title><rect x="824" y="340" width="6" height="15" fill="rgb(249,12,25)"/><text x="827.00" y="350.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.53%)</title><rect x="824" y="356" width="6" height="15" fill="rgb(237,190,10)"/><text x="827.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (7 samples, 3.74%)</title><rect x="792" y="212" width="44" height="15" fill="rgb(247,225,34)"/><text x="795.00" y="222.50">_run..</text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (6 samples, 3.21%)</title><rect x="798" y="228" width="38" height="15" fill="rgb(248,217,30)"/><text x="801.00" y="238.50">cho..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.53%)</title><rect x="830" y="244" width="6" height="15" fill="rgb(224,52,43)"/><text x="833.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.53%)</title><rect x="830" y="260" width="6" height="15" fill="rgb(216,201,13)"/><text x="833.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.53%)</title><rect x="830" y="276" width="6" height="15" fill="rgb(254,162,47)"/><text x="833.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.53%)</title><rect x="830" y="292" width="6" height="15" fill="rgb(232,77,43)"/><text x="833.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:241) (1 samples, 0.53%)</title><rect x="842" y="244" width="7" height="15" fill="rgb(245,179,33)"/><text x="845.00" y="254.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c:89) (1 samples, 0.53%)</title><rect x="842" y="260" width="7" height="15" fill="rgb(205,126,17)"/><text x="845.00" y="270.50"></text></g><g><title>get_array_function (arrayfunction_override.c:36) (1 samples, 0.53%)</title><rect x="842" y="276" width="7" height="15" fill="rgb(230,157,22)"/><text x="845.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (3 samples, 1.60%)</title><rect x="836" y="212" width="19" height="15" fill="rgb(211,75,18)"/><text x="839.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (3 samples, 1.60%)</title><rect x="836" y="228" width="19" height="15" fill="rgb(223,223,11)"/><text x="839.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.53%)</title><rect x="849" y="244" width="6" height="15" fill="rgb(232,167,21)"/><text x="852.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.53%)</title><rect x="849" y="260" width="6" height="15" fill="rgb(214,65,12)"/><text x="852.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.53%)</title><rect x="855" y="244" width="6" height="15" fill="rgb(206,54,6)"/><text x="858.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.53%)</title><rect x="855" y="260" width="6" height="15" fill="rgb(233,106,3)"/><text x="858.00" y="270.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.53%)</title><rect x="861" y="260" width="7" height="15" fill="rgb(230,47,4)"/><text x="864.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.53%)</title><rect x="861" y="276" width="7" height="15" fill="rgb(227,139,4)"/><text x="864.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.53%)</title><rect x="861" y="292" width="7" height="15" fill="rgb(214,200,9)"/><text x="864.00" y="302.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.53%)</title><rect x="868" y="260" width="6" height="15" fill="rgb(252,101,22)"/><text x="871.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.53%)</title><rect x="868" y="276" width="6" height="15" fill="rgb(254,193,40)"/><text x="871.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.53%)</title><rect x="868" y="292" width="6" height="15" fill="rgb(212,94,11)"/><text x="871.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:421) (1 samples, 0.53%)</title><rect x="868" y="308" width="6" height="15" fill="rgb(224,151,42)"/><text x="871.00" y="318.50"></text></g><g><title>npyiter_coalesce_axes (nditer_api.c:1629) (1 samples, 0.53%)</title><rect x="868" y="324" width="6" height="15" fill="rgb(215,211,23)"/><text x="871.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (4 samples, 2.14%)</title><rect x="855" y="212" width="25" height="15" fill="rgb(252,172,45)"/><text x="858.00" y="222.50">_..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (4 samples, 2.14%)</title><rect x="855" y="228" width="25" height="15" fill="rgb(213,70,36)"/><text x="858.00" y="238.50">_..</text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (3 samples, 1.60%)</title><rect x="861" y="244" width="19" height="15" fill="rgb(231,81,35)"/><text x="864.00" y="254.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.53%)</title><rect x="874" y="260" width="6" height="15" fill="rgb(217,182,13)"/><text x="877.00" y="270.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.53%)</title><rect x="874" y="276" width="6" height="15" fill="rgb(250,129,2)"/><text x="877.00" y="286.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1962) (1 samples, 0.53%)</title><rect x="874" y="292" width="6" height="15" fill="rgb(226,150,44)"/><text x="877.00" y="302.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (29 samples, 15.51%)</title><rect x="704" y="196" width="183" height="15" fill="rgb(205,128,20)"/><text x="707.00" y="206.50">run (mlprodict/onnxrt/o..</text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.53%)</title><rect x="880" y="212" width="7" height="15" fill="rgb(238,169,52)"/><text x="883.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.53%)</title><rect x="880" y="228" width="7" height="15" fill="rgb(251,166,30)"/><text x="883.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.53%)</title><rect x="880" y="244" width="7" height="15" fill="rgb(213,6,10)"/><text x="883.00" y="254.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (2 samples, 1.07%)</title><rect x="887" y="196" width="12" height="15" fill="rgb(212,108,23)"/><text x="890.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (1 samples, 0.53%)</title><rect x="893" y="212" width="6" height="15" fill="rgb(218,91,29)"/><text x="896.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (1 samples, 0.53%)</title><rect x="893" y="228" width="6" height="15" fill="rgb(246,13,39)"/><text x="896.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (1 samples, 0.53%)</title><rect x="893" y="244" width="6" height="15" fill="rgb(253,78,31)"/><text x="896.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (1 samples, 0.53%)</title><rect x="893" y="260" width="6" height="15" fill="rgb(253,68,28)"/><text x="896.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (1 samples, 0.53%)</title><rect x="893" y="276" width="6" height="15" fill="rgb(220,125,47)"/><text x="896.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.53%)</title><rect x="893" y="292" width="6" height="15" fill="rgb(214,167,18)"/><text x="896.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (1 samples, 0.53%)</title><rect x="893" y="308" width="6" height="15" fill="rgb(242,10,25)"/><text x="896.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.53%)</title><rect x="893" y="324" width="6" height="15" fill="rgb(230,163,0)"/><text x="896.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:317) (1 samples, 0.53%)</title><rect x="899" y="196" width="7" height="15" fill="rgb(251,223,21)"/><text x="902.00" y="206.50"></text></g><g><title>0x7fef7e39654f (?) (1 samples, 0.53%)</title><rect x="912" y="244" width="6" height="15" fill="rgb(221,225,4)"/><text x="915.00" y="254.50"></text></g><g><title>0x7fef7e39c65e (?) (1 samples, 0.53%)</title><rect x="912" y="260" width="6" height="15" fill="rgb(225,144,12)"/><text x="915.00" y="270.50"></text></g><g><title>0x7fef7e39c50f (?) (1 samples, 0.53%)</title><rect x="912" y="276" width="6" height="15" fill="rgb(216,9,50)"/><text x="915.00" y="286.50"></text></g><g><title>0x7fef7e3a2d6c (?) (1 samples, 0.53%)</title><rect x="912" y="292" width="6" height="15" fill="rgb(246,112,13)"/><text x="915.00" y="302.50"></text></g><g><title>0x7fef87903ab9 (libgomp.so.1.0.0) (1 samples, 0.53%)</title><rect x="912" y="308" width="6" height="15" fill="rgb(223,87,8)"/><text x="915.00" y="318.50"></text></g><g><title>0x7fef87904eab (libgomp.so.1.0.0) (1 samples, 0.53%)</title><rect x="912" y="324" width="6" height="15" fill="rgb(234,43,16)"/><text x="915.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.53%)</title><rect x="918" y="276" width="6" height="15" fill="rgb(222,141,13)"/><text x="921.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.53%)</title><rect x="918" y="292" width="6" height="15" fill="rgb(231,225,15)"/><text x="921.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.53%)</title><rect x="918" y="308" width="6" height="15" fill="rgb(243,85,37)"/><text x="921.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.53%)</title><rect x="918" y="324" width="6" height="15" fill="rgb(206,146,1)"/><text x="921.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::operator= (numpy.h:831) (1 samples, 0.53%)</title><rect x="918" y="340" width="6" height="15" fill="rgb(205,43,32)"/><text x="921.00" y="350.50"></text></g><g><title>pybind11::array::operator= (numpy.h:538) (1 samples, 0.53%)</title><rect x="918" y="356" width="6" height="15" fill="rgb(208,161,23)"/><text x="921.00" y="366.50"></text></g><g><title>pybind11::buffer::operator= (pytypes.h:1311) (1 samples, 0.53%)</title><rect x="918" y="372" width="6" height="15" fill="rgb(217,30,41)"/><text x="921.00" y="382.50"></text></g><g><title>pybind11::object::operator= (pytypes.h:265) (1 samples, 0.53%)</title><rect x="918" y="388" width="6" height="15" fill="rgb(236,167,2)"/><text x="921.00" y="398.50"></text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (1 samples, 0.53%)</title><rect x="918" y="404" width="6" height="15" fill="rgb(245,154,50)"/><text x="921.00" y="414.50"></text></g><g><title>array_dealloc (arrayobject.c:471) (1 samples, 0.53%)</title><rect x="918" y="420" width="6" height="15" fill="rgb(226,144,36)"/><text x="921.00" y="430.50"></text></g><g><title>0x7fef87904ea0 (libgomp.so.1.0.0) (2 samples, 1.07%)</title><rect x="924" y="484" width="13" height="15" fill="rgb(250,141,12)"/><text x="927.00" y="494.50"></text></g><g><title>0x7fef87904ea9 (libgomp.so.1.0.0) (4 samples, 2.14%)</title><rect x="937" y="484" width="25" height="15" fill="rgb(218,224,20)"/><text x="940.00" y="494.50">0..</text></g><g><title>0x7fef87904eab (libgomp.so.1.0.0) (4 samples, 2.14%)</title><rect x="962" y="484" width="26" height="15" fill="rgb(218,63,43)"/><text x="965.00" y="494.50">0..</text></g><g><title>0x7fef87903ab9 (libgomp.so.1.0.0) (21 samples, 11.23%)</title><rect x="924" y="468" width="133" height="15" fill="rgb(236,147,37)"/><text x="927.00" y="478.50">0x7fef87903ab9 (..</text></g><g><title>0x7fef87904ead (libgomp.so.1.0.0) (11 samples, 5.88%)</title><rect x="988" y="484" width="69" height="15" fill="rgb(249,107,52)"/><text x="991.00" y="494.50">0x7fef8..</text></g><g><title>0x7fef87904cf0 (libgomp.so.1.0.0) (1 samples, 0.53%)</title><rect x="1057" y="500" width="6" height="15" fill="rgb(206,57,3)"/><text x="1060.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (26 samples, 13.90%)</title><rect x="906" y="196" width="164" height="15" fill="rgb(236,2,54)"/><text x="909.00" y="206.50">run (mlprodict/onnxrt..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (25 samples, 13.37%)</title><rect x="912" y="212" width="158" height="15" fill="rgb(235,174,18)"/><text x="915.00" y="222.50">run (mlprodict/onnxr..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (25 samples, 13.37%)</title><rect x="912" y="228" width="158" height="15" fill="rgb(222,131,44)"/><text x="915.00" y="238.50">_run (mlprodict/onnx..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (24 samples, 12.83%)</title><rect x="918" y="244" width="152" height="15" fill="rgb(254,87,26)"/><text x="921.00" y="254.50">pybind11::cpp_funct..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (24 samples, 12.83%)</title><rect x="918" y="260" width="152" height="15" fill="rgb(216,81,19)"/><text x="921.00" y="270.50">void pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (23 samples, 12.30%)</title><rect x="924" y="276" width="146" height="15" fill="rgb(217,89,41)"/><text x="927.00" y="286.50">void pybind11::cpp..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (23 samples, 12.30%)</title><rect x="924" y="292" width="146" height="15" fill="rgb(207,227,19)"/><text x="927.00" y="302.50">pybind11::detail::..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (23 samples, 12.30%)</title><rect x="924" y="308" width="146" height="15" fill="rgb(217,197,46)"/><text x="927.00" y="318.50">pybind11::detail::..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (23 samples, 12.30%)</title><rect x="924" y="324" width="146" height="15" fill="rgb(232,0,34)"/><text x="927.00" y="334.50">pybind11::cpp_func..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (23 samples, 12.30%)</title><rect x="924" y="340" width="146" height="15" fill="rgb(233,131,37)"/><text x="927.00" y="350.50">pybind11::array_t&lt;..</text></g><g><title>pybind11::array::~array (numpy.h:538) (23 samples, 12.30%)</title><rect x="924" y="356" width="146" height="15" fill="rgb(251,229,30)"/><text x="927.00" y="366.50">pybind11::array::~..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (23 samples, 12.30%)</title><rect x="924" y="372" width="146" height="15" fill="rgb(224,79,13)"/><text x="927.00" y="382.50">pybind11::buffer::..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (23 samples, 12.30%)</title><rect x="924" y="388" width="146" height="15" fill="rgb(229,157,42)"/><text x="927.00" y="398.50">pybind11::object::..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (23 samples, 12.30%)</title><rect x="924" y="404" width="146" height="15" fill="rgb(209,67,20)"/><text x="927.00" y="414.50">pybind11::handle::..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (23 samples, 12.30%)</title><rect x="924" y="420" width="146" height="15" fill="rgb(239,206,11)"/><text x="927.00" y="430.50">RuntimeTreeEnsembl..</text></g><g><title>pybind11::array::size (numpy.h:619) (23 samples, 12.30%)</title><rect x="924" y="436" width="146" height="15" fill="rgb(213,119,16)"/><text x="927.00" y="446.50">pybind11::array::s..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (23 samples, 12.30%)</title><rect x="924" y="452" width="146" height="15" fill="rgb(208,189,28)"/><text x="927.00" y="462.50">std::accumulate&lt;lo..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (2 samples, 1.07%)</title><rect x="1057" y="468" width="13" height="15" fill="rgb(215,21,24)"/><text x="1060.00" y="478.50"></text></g><g><title>0x7fef87902daa (libgomp.so.1.0.0) (2 samples, 1.07%)</title><rect x="1057" y="484" width="13" height="15" fill="rgb(246,98,39)"/><text x="1060.00" y="494.50"></text></g><g><title>0x7fef87904d6d (libgomp.so.1.0.0) (1 samples, 0.53%)</title><rect x="1063" y="500" width="7" height="15" fill="rgb(232,182,20)"/><text x="1066.00" y="510.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.53%)</title><rect x="1070" y="196" width="6" height="15" fill="rgb(238,101,23)"/><text x="1073.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.53%)</title><rect x="1076" y="196" width="6" height="15" fill="rgb(220,98,49)"/><text x="1079.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (1 samples, 0.53%)</title><rect x="1076" y="212" width="6" height="15" fill="rgb(227,45,4)"/><text x="1079.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.53%)</title><rect x="1076" y="228" width="6" height="15" fill="rgb(221,229,36)"/><text x="1079.00" y="238.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.53%)</title><rect x="1076" y="244" width="6" height="15" fill="rgb(229,148,41)"/><text x="1079.00" y="254.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.53%)</title><rect x="1076" y="260" width="6" height="15" fill="rgb(249,63,46)"/><text x="1079.00" y="270.50"></text></g><g><title>iterator_loop (ufunc_object.c:1561) (1 samples, 0.53%)</title><rect x="1076" y="276" width="6" height="15" fill="rgb(229,79,0)"/><text x="1079.00" y="286.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c:329) (1 samples, 0.53%)</title><rect x="1076" y="292" width="6" height="15" fill="rgb(230,201,27)"/><text x="1079.00" y="302.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2457) (1 samples, 0.53%)</title><rect x="1076" y="308" width="6" height="15" fill="rgb(232,77,36)"/><text x="1079.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.53%)</title><rect x="1082" y="212" width="7" height="15" fill="rgb(250,57,14)"/><text x="1085.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (63 samples, 33.69%)</title><rect x="697" y="180" width="398" height="15" fill="rgb(237,211,47)"/><text x="700.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py:138)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (2 samples, 1.07%)</title><rect x="1082" y="196" width="13" height="15" fill="rgb(210,177,48)"/><text x="1085.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (1 samples, 0.53%)</title><rect x="1089" y="212" width="6" height="15" fill="rgb(250,43,8)"/><text x="1092.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (1 samples, 0.53%)</title><rect x="1089" y="228" width="6" height="15" fill="rgb(213,176,31)"/><text x="1092.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (1 samples, 0.53%)</title><rect x="1089" y="244" width="6" height="15" fill="rgb(235,40,3)"/><text x="1092.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3215) (1 samples, 0.53%)</title><rect x="1089" y="260" width="6" height="15" fill="rgb(212,33,31)"/><text x="1092.00" y="270.50"></text></g><g><title>make_full_arg_tuple (ufunc_object.c:1969) (1 samples, 0.53%)</title><rect x="1089" y="276" width="6" height="15" fill="rgb(223,86,42)"/><text x="1092.00" y="286.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:140) (2 samples, 1.07%)</title><rect x="1095" y="180" width="12" height="15" fill="rgb(252,196,7)"/><text x="1098.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:149) (1 samples, 0.53%)</title><rect x="1107" y="180" width="7" height="15" fill="rgb(210,109,51)"/><text x="1110.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (73 samples, 39.04%)</title><rect x="666" y="164" width="460" height="15" fill="rgb(244,213,18)"/><text x="669.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 1.07%)</title><rect x="1114" y="180" width="12" height="15" fill="rgb(231,187,19)"/><text x="1117.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:61) (74 samples, 39.57%)</title><rect x="666" y="52" width="467" height="15" fill="rgb(224,83,49)"/><text x="669.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:60) (74 samples, 39.57%)</title><rect x="666" y="68" width="467" height="15" fill="rgb(218,21,25)"/><text x="669.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estima..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37) (74 samples, 39.57%)</title><rect x="666" y="84" width="467" height="15" fill="rgb(237,46,41)"/><text x="669.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estim..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31) (74 samples, 39.57%)</title><rect x="666" y="100" width="467" height="15" fill="rgb(251,163,14)"/><text x="669.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (74 samples, 39.57%)</title><rect x="666" y="116" width="467" height="15" fill="rgb(224,57,41)"/><text x="669.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (74 samples, 39.57%)</title><rect x="666" y="132" width="467" height="15" fill="rgb(227,150,21)"/><text x="669.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (74 samples, 39.57%)</title><rect x="666" y="148" width="467" height="15" fill="rgb(213,215,35)"/><text x="669.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:538) (1 samples, 0.53%)</title><rect x="1126" y="164" width="7" height="15" fill="rgb(238,93,50)"/><text x="1129.00" y="174.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.53%)</title><rect x="1126" y="180" width="7" height="15" fill="rgb(206,107,21)"/><text x="1129.00" y="190.50"></text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:36) (1 samples, 0.53%)</title><rect x="1133" y="84" width="6" height="15" fill="rgb(209,164,42)"/><text x="1136.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py:173) (1 samples, 0.53%)</title><rect x="1133" y="100" width="6" height="15" fill="rgb(216,202,32)"/><text x="1136.00" y="110.50"></text></g><g><title>_create_onnx_and_runtime (mlprodict/asv_benchmark/common_asv_skl.py:377) (1 samples, 0.53%)</title><rect x="1133" y="116" width="6" height="15" fill="rgb(221,214,28)"/><text x="1136.00" y="126.50"></text></g><g><title>_create_onnx_inference (mlprodict/asv_benchmark/common_asv_skl.py:114) (1 samples, 0.53%)</title><rect x="1133" y="132" width="6" height="15" fill="rgb(233,226,13)"/><text x="1136.00" y="142.50"></text></g><g><title>__init__ (mlprodict/onnxrt/onnx_inference.py:62) (1 samples, 0.53%)</title><rect x="1133" y="148" width="6" height="15" fill="rgb(242,131,39)"/><text x="1136.00" y="158.50"></text></g><g><title>_init (mlprodict/onnxrt/onnx_inference.py:99) (1 samples, 0.53%)</title><rect x="1133" y="164" width="6" height="15" fill="rgb(212,72,36)"/><text x="1136.00" y="174.50"></text></g><g><title>__init__ (mlprodict/onnxrt/ops_whole/session.py:52) (1 samples, 0.53%)</title><rect x="1133" y="180" width="6" height="15" fill="rgb(226,161,4)"/><text x="1136.00" y="190.50"></text></g><g><title>__init__ (onnxruntime/capi/session.py:23) (1 samples, 0.53%)</title><rect x="1133" y="196" width="6" height="15" fill="rgb(219,110,28)"/><text x="1136.00" y="206.50"></text></g><g><title>_load_model (onnxruntime/capi/session.py:37) (1 samples, 0.53%)</title><rect x="1133" y="212" width="6" height="15" fill="rgb(230,19,9)"/><text x="1136.00" y="222.50"></text></g><g><title>0x7fef7d93bff9 (?) (1 samples, 0.53%)</title><rect x="1133" y="228" width="6" height="15" fill="rgb(235,186,1)"/><text x="1136.00" y="238.50"></text></g><g><title>0x7fef7d93653d (?) (1 samples, 0.53%)</title><rect x="1133" y="244" width="6" height="15" fill="rgb(209,10,53)"/><text x="1136.00" y="254.50"></text></g><g><title>0x7fef7d9624ec (?) (1 samples, 0.53%)</title><rect x="1133" y="260" width="6" height="15" fill="rgb(250,219,25)"/><text x="1136.00" y="270.50"></text></g><g><title>0x7fef7d961c3a (?) (1 samples, 0.53%)</title><rect x="1133" y="276" width="6" height="15" fill="rgb(208,145,25)"/><text x="1136.00" y="286.50"></text></g><g><title>0x7fef7d964a0c (?) (1 samples, 0.53%)</title><rect x="1133" y="292" width="6" height="15" fill="rgb(219,220,21)"/><text x="1136.00" y="302.50"></text></g><g><title>0x7fef7de0b178 (?) (1 samples, 0.53%)</title><rect x="1133" y="308" width="6" height="15" fill="rgb(209,165,29)"/><text x="1136.00" y="318.50"></text></g><g><title>0x7fef7de00910 (?) (1 samples, 0.53%)</title><rect x="1133" y="324" width="6" height="15" fill="rgb(254,61,25)"/><text x="1136.00" y="334.50"></text></g><g><title>0x7fef7ddffb2b (?) (1 samples, 0.53%)</title><rect x="1133" y="340" width="6" height="15" fill="rgb(212,211,13)"/><text x="1136.00" y="350.50"></text></g><g><title>0x7fef7ddff219 (?) (1 samples, 0.53%)</title><rect x="1133" y="356" width="6" height="15" fill="rgb(227,138,53)"/><text x="1136.00" y="366.50"></text></g><g><title>0x7fef7de6cda6 (?) (1 samples, 0.53%)</title><rect x="1133" y="372" width="6" height="15" fill="rgb(247,173,25)"/><text x="1136.00" y="382.50"></text></g><g><title>0x7fef7de71c5e (?) (1 samples, 0.53%)</title><rect x="1133" y="388" width="6" height="15" fill="rgb(254,111,34)"/><text x="1136.00" y="398.50"></text></g><g><title>0x7fef7db85230 (?) (1 samples, 0.53%)</title><rect x="1133" y="404" width="6" height="15" fill="rgb(211,211,32)"/><text x="1136.00" y="414.50"></text></g><g><title>onnxruntime::Concat::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="340" width="6" height="15" fill="rgb(226,131,4)"/><text x="1155.00" y="350.50"></text></g><g><title>onnxruntime::ConcatBase::PrepareForCompute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="356" width="6" height="15" fill="rgb(205,76,30)"/><text x="1155.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="372" width="6" height="15" fill="rgb(216,61,27)"/><text x="1155.00" y="382.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="388" width="6" height="15" fill="rgb(218,140,23)"/><text x="1155.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="404" width="6" height="15" fill="rgb(215,137,9)"/><text x="1155.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="420" width="6" height="15" fill="rgb(250,212,0)"/><text x="1155.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="436" width="6" height="15" fill="rgb(236,45,29)"/><text x="1155.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="452" width="6" height="15" fill="rgb(244,147,35)"/><text x="1155.00" y="462.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1152" y="468" width="6" height="15" fill="rgb(225,176,17)"/><text x="1155.00" y="478.50"></text></g><g><title>onnxruntime::GatherElements::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1158" y="340" width="6" height="15" fill="rgb(208,204,34)"/><text x="1161.00" y="350.50"></text></g><g><title>onnxruntime::GatherElements::ValidateInputShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1158" y="356" width="6" height="15" fill="rgb(226,133,24)"/><text x="1161.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1164" y="340" width="7" height="15" fill="rgb(237,37,45)"/><text x="1167.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1164" y="356" width="7" height="15" fill="rgb(211,159,50)"/><text x="1167.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1164" y="372" width="7" height="15" fill="rgb(218,56,17)"/><text x="1167.00" y="382.50"></text></g><g><title>std::__adjust_heap&lt;__gnu_cxx::__normal_iterator&lt;std::pair&lt;float, long&gt;*, std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt; &gt;, long, std::pair&lt;float, long&gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;onnxruntime::GreaterValueCmp&lt;float&gt; &gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1171" y="388" width="6" height="15" fill="rgb(225,141,27)"/><text x="1174.00" y="398.50"></text></g><g><title>onnxruntime::TopK&lt;11, float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.07%)</title><rect x="1171" y="340" width="12" height="15" fill="rgb(224,36,51)"/><text x="1174.00" y="350.50"></text></g><g><title>onnxruntime::TopKImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.07%)</title><rect x="1171" y="356" width="12" height="15" fill="rgb(205,46,14)"/><text x="1174.00" y="366.50"></text></g><g><title>onnxruntime::extract_top_k_elements&lt;true, true, onnxruntime::GreaterValueCmp&lt;float&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 1.07%)</title><rect x="1171" y="372" width="12" height="15" fill="rgb(230,150,45)"/><text x="1174.00" y="382.50"></text></g><g><title>std::vector&lt;std::pair&lt;float, long&gt;, std::allocator&lt;std::pair&lt;float, long&gt; &gt; &gt;::_M_emplace_back_aux&lt;std::pair&lt;float, long&gt; &gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1177" y="388" width="6" height="15" fill="rgb(220,95,48)"/><text x="1180.00" y="398.50"></text></g><g><title>all (187 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(213,71,11)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:68) (9 samples, 4.81%)</title><rect x="1133" y="52" width="57" height="15" fill="rgb(224,170,15)"/><text x="1136.00" y="62.50">&lt;modul..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:67) (9 samples, 4.81%)</title><rect x="1133" y="68" width="57" height="15" fill="rgb(210,23,11)"/><text x="1136.00" y="78.50">profil..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37) (8 samples, 4.28%)</title><rect x="1139" y="84" width="51" height="15" fill="rgb(242,113,19)"/><text x="1142.00" y="94.50">setup..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31) (8 samples, 4.28%)</title><rect x="1139" y="100" width="51" height="15" fill="rgb(248,14,10)"/><text x="1142.00" y="110.50">profi..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (8 samples, 4.28%)</title><rect x="1139" y="116" width="51" height="15" fill="rgb(226,0,49)"/><text x="1142.00" y="126.50">time_..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (8 samples, 4.28%)</title><rect x="1139" y="132" width="51" height="15" fill="rgb(241,46,31)"/><text x="1142.00" y="142.50">&lt;lamb..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (8 samples, 4.28%)</title><rect x="1139" y="148" width="51" height="15" fill="rgb(224,42,31)"/><text x="1142.00" y="158.50">run (..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (7 samples, 3.74%)</title><rect x="1145" y="164" width="45" height="15" fill="rgb(233,110,37)"/><text x="1148.00" y="174.50">_run..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (7 samples, 3.74%)</title><rect x="1145" y="180" width="45" height="15" fill="rgb(212,89,31)"/><text x="1148.00" y="190.50">run ..</text></g><g><title>run (onnxruntime/capi/session.py:136) (7 samples, 3.74%)</title><rect x="1145" y="196" width="45" height="15" fill="rgb(218,223,50)"/><text x="1148.00" y="206.50">run ..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="212" width="45" height="15" fill="rgb(214,121,54)"/><text x="1148.00" y="222.50">pybi..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="228" width="45" height="15" fill="rgb(254,19,50)"/><text x="1148.00" y="238.50">void..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="244" width="45" height="15" fill="rgb(234,100,45)"/><text x="1148.00" y="254.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="260" width="45" height="15" fill="rgb(236,135,27)"/><text x="1148.00" y="270.50">onnx..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="276" width="45" height="15" fill="rgb(251,141,27)"/><text x="1148.00" y="286.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="292" width="45" height="15" fill="rgb(207,159,22)"/><text x="1148.00" y="302.50">onnx..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="308" width="45" height="15" fill="rgb(235,56,54)"/><text x="1148.00" y="318.50">onnx..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 3.74%)</title><rect x="1145" y="324" width="45" height="15" fill="rgb(247,143,32)"/><text x="1148.00" y="334.50">onnx..</text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1183" y="340" width="7" height="15" fill="rgb(241,136,51)"/><text x="1186.00" y="350.50"></text></g><g><title>onnxruntime::ml::TreeEnsembleRegressor&lt;float&gt;::ProcessTreeNode (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.53%)</title><rect x="1183" y="356" width="7" height="15" fill="rgb(237,42,19)"/><text x="1186.00" y="366.50"></text></g></g></svg>