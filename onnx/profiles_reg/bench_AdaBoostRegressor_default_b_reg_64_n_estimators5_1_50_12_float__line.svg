<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2134" onload="init(evt)" viewBox="0 0 1200 2134" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="2134" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="2117.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="2117.00"> </text><g id="frames"><g><title>&lt;module&gt; (numpy/lib/__init__.py:8) (1 samples, 0.32%)</title><rect x="10" y="372" width="3" height="15" fill="rgb(212,125,39)"/><text x="13.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="10" y="388" width="3" height="15" fill="rgb(209,137,18)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="10" y="404" width="3" height="15" fill="rgb(209,90,13)"/><text x="13.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="10" y="420" width="3" height="15" fill="rgb(242,222,54)"/><text x="13.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="10" y="436" width="3" height="15" fill="rgb(239,177,33)"/><text x="13.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="10" y="452" width="3" height="15" fill="rgb(234,128,50)"/><text x="13.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/type_check.py:124) (1 samples, 0.32%)</title><rect x="10" y="468" width="3" height="15" fill="rgb(226,115,49)"/><text x="13.00" y="478.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.32%)</title><rect x="10" y="484" width="3" height="15" fill="rgb(222,166,45)"/><text x="13.00" y="494.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:1) (2 samples, 0.65%)</title><rect x="10" y="148" width="7" height="15" fill="rgb(230,181,32)"/><text x="13.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="10" y="164" width="7" height="15" fill="rgb(246,60,10)"/><text x="13.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.65%)</title><rect x="10" y="180" width="7" height="15" fill="rgb(214,146,54)"/><text x="13.00" y="190.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.65%)</title><rect x="10" y="196" width="7" height="15" fill="rgb(240,175,45)"/><text x="13.00" y="206.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.65%)</title><rect x="10" y="212" width="7" height="15" fill="rgb(239,24,3)"/><text x="13.00" y="222.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="10" y="228" width="7" height="15" fill="rgb(238,88,4)"/><text x="13.00" y="238.50"></text></g><g><title>&lt;module&gt; (numpy/__init__.py:145) (2 samples, 0.65%)</title><rect x="10" y="244" width="7" height="15" fill="rgb(229,39,51)"/><text x="13.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (2 samples, 0.65%)</title><rect x="10" y="260" width="7" height="15" fill="rgb(229,72,51)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="10" y="276" width="7" height="15" fill="rgb(205,14,3)"/><text x="13.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="10" y="292" width="7" height="15" fill="rgb(232,139,10)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.65%)</title><rect x="10" y="308" width="7" height="15" fill="rgb(214,218,24)"/><text x="13.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.65%)</title><rect x="10" y="324" width="7" height="15" fill="rgb(234,190,40)"/><text x="13.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.65%)</title><rect x="10" y="340" width="7" height="15" fill="rgb(224,55,3)"/><text x="13.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="10" y="356" width="7" height="15" fill="rgb(247,26,10)"/><text x="13.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/lib/__init__.py:9) (1 samples, 0.32%)</title><rect x="13" y="372" width="4" height="15" fill="rgb(233,19,5)"/><text x="16.00" y="382.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="388" width="4" height="15" fill="rgb(224,13,30)"/><text x="16.00" y="398.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="404" width="4" height="15" fill="rgb(207,165,32)"/><text x="16.00" y="414.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="420" width="4" height="15" fill="rgb(254,10,6)"/><text x="16.00" y="430.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="436" width="4" height="15" fill="rgb(231,208,18)"/><text x="16.00" y="446.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="452" width="4" height="15" fill="rgb(242,26,48)"/><text x="16.00" y="462.50"></text></g><g><title>&lt;module&gt; (numpy/lib/index_tricks.py:14) (1 samples, 0.32%)</title><rect x="13" y="468" width="4" height="15" fill="rgb(235,146,45)"/><text x="16.00" y="478.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="13" y="484" width="4" height="15" fill="rgb(251,187,48)"/><text x="16.00" y="494.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="13" y="500" width="4" height="15" fill="rgb(214,4,14)"/><text x="16.00" y="510.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="13" y="516" width="4" height="15" fill="rgb(246,21,33)"/><text x="16.00" y="526.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="13" y="532" width="4" height="15" fill="rgb(227,92,37)"/><text x="16.00" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="13" y="548" width="4" height="15" fill="rgb(217,28,53)"/><text x="16.00" y="558.50"></text></g><g><title>&lt;module&gt; (numpy/lib/function_base.py:3047) (1 samples, 0.32%)</title><rect x="13" y="564" width="4" height="15" fill="rgb(211,228,18)"/><text x="16.00" y="574.50"></text></g><g><title>decorator (numpy/core/overrides.py:175) (1 samples, 0.32%)</title><rect x="13" y="580" width="4" height="15" fill="rgb(245,21,53)"/><text x="16.00" y="590.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3264) (1 samples, 0.32%)</title><rect x="17" y="852" width="4" height="15" fill="rgb(205,5,33)"/><text x="20.00" y="862.50"></text></g><g><title>_build_master (pkg_resources/__init__.py:574) (1 samples, 0.32%)</title><rect x="17" y="868" width="4" height="15" fill="rgb(217,55,28)"/><text x="20.00" y="878.50"></text></g><g><title>__init__ (pkg_resources/__init__.py:567) (1 samples, 0.32%)</title><rect x="17" y="884" width="4" height="15" fill="rgb(254,128,3)"/><text x="20.00" y="894.50"></text></g><g><title>add_entry (pkg_resources/__init__.py:623) (1 samples, 0.32%)</title><rect x="17" y="900" width="4" height="15" fill="rgb(233,148,7)"/><text x="20.00" y="910.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py:2061) (1 samples, 0.32%)</title><rect x="17" y="916" width="4" height="15" fill="rgb(231,133,4)"/><text x="20.00" y="926.50"></text></g><g><title>_by_version_descending (pkg_resources/__init__.py:2034) (1 samples, 0.32%)</title><rect x="17" y="932" width="4" height="15" fill="rgb(236,24,49)"/><text x="20.00" y="942.50"></text></g><g><title>_by_version (pkg_resources/__init__.py:2032) (1 samples, 0.32%)</title><rect x="17" y="948" width="4" height="15" fill="rgb(219,50,37)"/><text x="20.00" y="958.50"></text></g><g><title>&lt;listcomp&gt; (pkg_resources/__init__.py:2032) (1 samples, 0.32%)</title><rect x="17" y="964" width="4" height="15" fill="rgb(238,175,15)"/><text x="20.00" y="974.50"></text></g><g><title>parse (pkg_resources/_vendor/packaging/version.py:33) (1 samples, 0.32%)</title><rect x="17" y="980" width="4" height="15" fill="rgb(238,72,24)"/><text x="20.00" y="990.50"></text></g><g><title>__init__ (pkg_resources/_vendor/packaging/version.py:76) (1 samples, 0.32%)</title><rect x="17" y="996" width="4" height="15" fill="rgb(218,40,18)"/><text x="20.00" y="1006.50"></text></g><g><title>_legacy_cmpkey (pkg_resources/_vendor/packaging/version.py:142) (1 samples, 0.32%)</title><rect x="17" y="1012" width="4" height="15" fill="rgb(210,85,45)"/><text x="20.00" y="1022.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:3251) (2 samples, 0.65%)</title><rect x="17" y="820" width="8" height="15" fill="rgb(224,220,31)"/><text x="20.00" y="830.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py:3235) (2 samples, 0.65%)</title><rect x="17" y="836" width="8" height="15" fill="rgb(242,202,52)"/><text x="20.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py:3279) (1 samples, 0.32%)</title><rect x="21" y="852" width="4" height="15" fill="rgb(209,192,45)"/><text x="24.00" y="862.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py:3279) (1 samples, 0.32%)</title><rect x="21" y="868" width="4" height="15" fill="rgb(211,162,15)"/><text x="24.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py:2782) (1 samples, 0.32%)</title><rect x="21" y="884" width="4" height="15" fill="rgb(219,32,51)"/><text x="24.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py:2295) (1 samples, 0.32%)</title><rect x="21" y="900" width="4" height="15" fill="rgb(216,63,3)"/><text x="24.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py:2201) (1 samples, 0.32%)</title><rect x="21" y="916" width="4" height="15" fill="rgb(238,145,30)"/><text x="24.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;:431) (1 samples, 0.32%)</title><rect x="21" y="932" width="4" height="15" fill="rgb(230,164,32)"/><text x="24.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;:1346) (1 samples, 0.32%)</title><rect x="21" y="948" width="4" height="15" fill="rgb(237,180,30)"/><text x="24.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;:1364) (1 samples, 0.32%)</title><rect x="21" y="964" width="4" height="15" fill="rgb(220,31,41)"/><text x="24.00" y="974.50"></text></g><g><title>_path_stat (&lt;frozen importlib._bootstrap_external&gt;:81) (1 samples, 0.32%)</title><rect x="21" y="980" width="4" height="15" fill="rgb(221,202,47)"/><text x="24.00" y="990.50"></text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:2) (3 samples, 0.97%)</title><rect x="17" y="148" width="12" height="15" fill="rgb(239,184,50)"/><text x="20.00" y="158.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="164" width="12" height="15" fill="rgb(243,224,27)"/><text x="20.00" y="174.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.97%)</title><rect x="17" y="180" width="12" height="15" fill="rgb(216,104,47)"/><text x="20.00" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="196" width="12" height="15" fill="rgb(252,101,40)"/><text x="20.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="212" width="12" height="15" fill="rgb(245,164,22)"/><text x="20.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.97%)</title><rect x="17" y="228" width="12" height="15" fill="rgb(243,143,40)"/><text x="20.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.97%)</title><rect x="17" y="244" width="12" height="15" fill="rgb(229,140,29)"/><text x="20.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.97%)</title><rect x="17" y="260" width="12" height="15" fill="rgb(244,40,51)"/><text x="20.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="276" width="12" height="15" fill="rgb(250,124,41)"/><text x="20.00" y="286.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py:9) (3 samples, 0.97%)</title><rect x="17" y="292" width="12" height="15" fill="rgb(227,217,17)"/><text x="20.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="308" width="12" height="15" fill="rgb(220,102,24)"/><text x="20.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.97%)</title><rect x="17" y="324" width="12" height="15" fill="rgb(224,206,39)"/><text x="20.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.97%)</title><rect x="17" y="340" width="12" height="15" fill="rgb(251,110,28)"/><text x="20.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.97%)</title><rect x="17" y="356" width="12" height="15" fill="rgb(227,60,26)"/><text x="20.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="372" width="12" height="15" fill="rgb(252,26,39)"/><text x="20.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py:10) (3 samples, 0.97%)</title><rect x="17" y="388" width="12" height="15" fill="rgb(236,61,7)"/><text x="20.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="404" width="12" height="15" fill="rgb(247,207,20)"/><text x="20.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.97%)</title><rect x="17" y="420" width="12" height="15" fill="rgb(205,206,31)"/><text x="20.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.97%)</title><rect x="17" y="436" width="12" height="15" fill="rgb(231,137,21)"/><text x="20.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.97%)</title><rect x="17" y="452" width="12" height="15" fill="rgb(254,30,2)"/><text x="20.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="468" width="12" height="15" fill="rgb(208,115,50)"/><text x="20.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py:8) (3 samples, 0.97%)</title><rect x="17" y="484" width="12" height="15" fill="rgb(248,78,8)"/><text x="20.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="500" width="12" height="15" fill="rgb(231,29,10)"/><text x="20.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.97%)</title><rect x="17" y="516" width="12" height="15" fill="rgb(217,71,33)"/><text x="20.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.97%)</title><rect x="17" y="532" width="12" height="15" fill="rgb(210,160,16)"/><text x="20.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.97%)</title><rect x="17" y="548" width="12" height="15" fill="rgb(234,127,39)"/><text x="20.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="564" width="12" height="15" fill="rgb(231,142,26)"/><text x="20.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py:6) (3 samples, 0.97%)</title><rect x="17" y="580" width="12" height="15" fill="rgb(222,213,33)"/><text x="20.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="596" width="12" height="15" fill="rgb(220,34,44)"/><text x="20.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (3 samples, 0.97%)</title><rect x="17" y="612" width="12" height="15" fill="rgb(225,163,41)"/><text x="20.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="628" width="12" height="15" fill="rgb(226,121,6)"/><text x="20.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="644" width="12" height="15" fill="rgb(232,65,51)"/><text x="20.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.97%)</title><rect x="17" y="660" width="12" height="15" fill="rgb(206,108,30)"/><text x="20.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.97%)</title><rect x="17" y="676" width="12" height="15" fill="rgb(207,10,54)"/><text x="20.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.97%)</title><rect x="17" y="692" width="12" height="15" fill="rgb(226,38,22)"/><text x="20.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="708" width="12" height="15" fill="rgb(209,21,46)"/><text x="20.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py:37) (3 samples, 0.97%)</title><rect x="17" y="724" width="12" height="15" fill="rgb(226,137,1)"/><text x="20.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (3 samples, 0.97%)</title><rect x="17" y="740" width="12" height="15" fill="rgb(234,69,50)"/><text x="20.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (3 samples, 0.97%)</title><rect x="17" y="756" width="12" height="15" fill="rgb(225,21,48)"/><text x="20.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (3 samples, 0.97%)</title><rect x="17" y="772" width="12" height="15" fill="rgb(243,108,18)"/><text x="20.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (3 samples, 0.97%)</title><rect x="17" y="788" width="12" height="15" fill="rgb(244,151,37)"/><text x="20.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (3 samples, 0.97%)</title><rect x="17" y="804" width="12" height="15" fill="rgb(210,162,16)"/><text x="20.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py:84) (1 samples, 0.32%)</title><rect x="25" y="820" width="4" height="15" fill="rgb(223,0,30)"/><text x="28.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="25" y="836" width="4" height="15" fill="rgb(208,96,16)"/><text x="28.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="25" y="852" width="4" height="15" fill="rgb(219,151,37)"/><text x="28.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="25" y="868" width="4" height="15" fill="rgb(241,16,23)"/><text x="28.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="25" y="884" width="4" height="15" fill="rgb(223,192,53)"/><text x="28.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="25" y="900" width="4" height="15" fill="rgb(250,73,15)"/><text x="28.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/requirements.py:9) (1 samples, 0.32%)</title><rect x="25" y="916" width="4" height="15" fill="rgb(242,128,3)"/><text x="28.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="25" y="932" width="4" height="15" fill="rgb(207,82,2)"/><text x="28.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="25" y="948" width="4" height="15" fill="rgb(248,140,51)"/><text x="28.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:668) (1 samples, 0.32%)</title><rect x="25" y="964" width="4" height="15" fill="rgb(207,61,25)"/><text x="28.00" y="974.50"></text></g><g><title>_load_backward_compatible (&lt;frozen importlib._bootstrap&gt;:638) (1 samples, 0.32%)</title><rect x="25" y="980" width="4" height="15" fill="rgb(226,123,36)"/><text x="28.00" y="990.50"></text></g><g><title>load_module (pkg_resources/extern/__init__.py:43) (1 samples, 0.32%)</title><rect x="25" y="996" width="4" height="15" fill="rgb(230,149,35)"/><text x="28.00" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="25" y="1012" width="4" height="15" fill="rgb(236,162,17)"/><text x="28.00" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="25" y="1028" width="4" height="15" fill="rgb(249,74,17)"/><text x="28.00" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="25" y="1044" width="4" height="15" fill="rgb(216,23,27)"/><text x="28.00" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="25" y="1060" width="4" height="15" fill="rgb(225,160,33)"/><text x="28.00" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="25" y="1076" width="4" height="15" fill="rgb(207,144,28)"/><text x="28.00" y="1086.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/pyparsing.py:4758) (1 samples, 0.32%)</title><rect x="25" y="1092" width="4" height="15" fill="rgb(214,106,47)"/><text x="28.00" y="1102.50"></text></g><g><title>setParseAction (pkg_resources/_vendor/pyparsing.py:1284) (1 samples, 0.32%)</title><rect x="25" y="1108" width="4" height="15" fill="rgb(228,15,41)"/><text x="28.00" y="1118.50"></text></g><g><title>_trim_arity (pkg_resources/_vendor/pyparsing.py:1066) (1 samples, 0.32%)</title><rect x="25" y="1124" width="4" height="15" fill="rgb(241,11,49)"/><text x="28.00" y="1134.50"></text></g><g><title>extract_stack (pkg_resources/_vendor/pyparsing.py:1050) (1 samples, 0.32%)</title><rect x="25" y="1140" width="4" height="15" fill="rgb(214,42,33)"/><text x="28.00" y="1150.50"></text></g><g><title>extract_stack (traceback.py:211) (1 samples, 0.32%)</title><rect x="25" y="1156" width="4" height="15" fill="rgb(211,212,54)"/><text x="28.00" y="1166.50"></text></g><g><title>extract (traceback.py:357) (1 samples, 0.32%)</title><rect x="25" y="1172" width="4" height="15" fill="rgb(249,90,15)"/><text x="28.00" y="1182.50"></text></g><g><title>__init__ (traceback.py:255) (1 samples, 0.32%)</title><rect x="25" y="1188" width="4" height="15" fill="rgb(238,162,51)"/><text x="28.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:12) (1 samples, 0.32%)</title><rect x="29" y="484" width="3" height="15" fill="rgb(209,55,37)"/><text x="32.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="500" width="3" height="15" fill="rgb(241,30,21)"/><text x="32.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="516" width="3" height="15" fill="rgb(233,215,21)"/><text x="32.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="532" width="3" height="15" fill="rgb(240,226,50)"/><text x="32.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="548" width="3" height="15" fill="rgb(214,215,34)"/><text x="32.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="564" width="3" height="15" fill="rgb(208,184,9)"/><text x="32.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py:23) (1 samples, 0.32%)</title><rect x="29" y="580" width="3" height="15" fill="rgb(222,105,16)"/><text x="32.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="596" width="3" height="15" fill="rgb(208,169,15)"/><text x="32.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="612" width="3" height="15" fill="rgb(220,56,1)"/><text x="32.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="628" width="3" height="15" fill="rgb(241,97,50)"/><text x="32.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="644" width="3" height="15" fill="rgb(206,67,23)"/><text x="32.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="660" width="3" height="15" fill="rgb(236,120,49)"/><text x="32.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py:10) (1 samples, 0.32%)</title><rect x="29" y="676" width="3" height="15" fill="rgb(236,90,54)"/><text x="32.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="692" width="3" height="15" fill="rgb(245,54,34)"/><text x="32.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="708" width="3" height="15" fill="rgb(206,14,35)"/><text x="32.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="724" width="3" height="15" fill="rgb(211,16,52)"/><text x="32.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="740" width="3" height="15" fill="rgb(205,1,54)"/><text x="32.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="756" width="3" height="15" fill="rgb(209,132,5)"/><text x="32.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py:43) (1 samples, 0.32%)</title><rect x="29" y="772" width="3" height="15" fill="rgb(210,46,10)"/><text x="32.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="788" width="3" height="15" fill="rgb(224,191,38)"/><text x="32.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="804" width="3" height="15" fill="rgb(205,40,11)"/><text x="32.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="820" width="3" height="15" fill="rgb(220,118,42)"/><text x="32.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="836" width="3" height="15" fill="rgb(210,0,51)"/><text x="32.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="852" width="3" height="15" fill="rgb(231,120,19)"/><text x="32.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py:7) (1 samples, 0.32%)</title><rect x="29" y="868" width="3" height="15" fill="rgb(249,173,40)"/><text x="32.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="884" width="3" height="15" fill="rgb(218,120,22)"/><text x="32.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="900" width="3" height="15" fill="rgb(237,204,32)"/><text x="32.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="916" width="3" height="15" fill="rgb(231,54,22)"/><text x="32.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="932" width="3" height="15" fill="rgb(220,228,8)"/><text x="32.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="948" width="3" height="15" fill="rgb(236,69,12)"/><text x="32.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py:29) (1 samples, 0.32%)</title><rect x="29" y="964" width="3" height="15" fill="rgb(210,123,21)"/><text x="32.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="980" width="3" height="15" fill="rgb(207,132,27)"/><text x="32.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="996" width="3" height="15" fill="rgb(208,61,44)"/><text x="32.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="1012" width="3" height="15" fill="rgb(229,12,49)"/><text x="32.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="1028" width="3" height="15" fill="rgb(254,144,49)"/><text x="32.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="1044" width="3" height="15" fill="rgb(214,209,1)"/><text x="32.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py:40) (1 samples, 0.32%)</title><rect x="29" y="1060" width="3" height="15" fill="rgb(231,227,29)"/><text x="32.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="1076" width="3" height="15" fill="rgb(252,76,22)"/><text x="32.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="29" y="1092" width="3" height="15" fill="rgb(223,127,8)"/><text x="32.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="1108" width="3" height="15" fill="rgb(233,55,23)"/><text x="32.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="1124" width="3" height="15" fill="rgb(238,126,3)"/><text x="32.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="1140" width="3" height="15" fill="rgb(252,188,39)"/><text x="32.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="1156" width="3" height="15" fill="rgb(241,75,29)"/><text x="32.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="1172" width="3" height="15" fill="rgb(236,63,5)"/><text x="32.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="1188" width="3" height="15" fill="rgb(205,53,13)"/><text x="32.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py:7) (1 samples, 0.32%)</title><rect x="29" y="1204" width="3" height="15" fill="rgb(228,207,7)"/><text x="32.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="1220" width="3" height="15" fill="rgb(219,161,37)"/><text x="32.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="1236" width="3" height="15" fill="rgb(224,55,14)"/><text x="32.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="1252" width="3" height="15" fill="rgb(212,114,47)"/><text x="32.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="1268" width="3" height="15" fill="rgb(211,212,25)"/><text x="32.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="1284" width="3" height="15" fill="rgb(239,27,38)"/><text x="32.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py:10) (1 samples, 0.32%)</title><rect x="29" y="1300" width="3" height="15" fill="rgb(249,43,12)"/><text x="32.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="29" y="1316" width="3" height="15" fill="rgb(207,66,54)"/><text x="32.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="29" y="1332" width="3" height="15" fill="rgb(254,206,50)"/><text x="32.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="29" y="1348" width="3" height="15" fill="rgb(241,196,52)"/><text x="32.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="29" y="1364" width="3" height="15" fill="rgb(223,84,39)"/><text x="32.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="29" y="1380" width="3" height="15" fill="rgb(252,26,9)"/><text x="32.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py:71) (1 samples, 0.32%)</title><rect x="29" y="1396" width="3" height="15" fill="rgb(252,219,47)"/><text x="32.00" y="1406.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.32%)</title><rect x="29" y="1412" width="3" height="15" fill="rgb(238,78,7)"/><text x="32.00" y="1422.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.32%)</title><rect x="29" y="1428" width="3" height="15" fill="rgb(220,134,51)"/><text x="32.00" y="1438.50"></text></g><g><title>compile (sre_compile.py:768) (1 samples, 0.32%)</title><rect x="29" y="1444" width="3" height="15" fill="rgb(253,67,37)"/><text x="32.00" y="1454.50"></text></g><g><title>_code (sre_compile.py:607) (1 samples, 0.32%)</title><rect x="29" y="1460" width="3" height="15" fill="rgb(249,165,47)"/><text x="32.00" y="1470.50"></text></g><g><title>_compile (sre_compile.py:168) (1 samples, 0.32%)</title><rect x="29" y="1476" width="3" height="15" fill="rgb(210,145,15)"/><text x="32.00" y="1486.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.32%)</title><rect x="29" y="1492" width="3" height="15" fill="rgb(251,140,23)"/><text x="32.00" y="1502.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.32%)</title><rect x="29" y="1508" width="3" height="15" fill="rgb(253,114,48)"/><text x="32.00" y="1518.50"></text></g><g><title>_compile (sre_compile.py:209) (1 samples, 0.32%)</title><rect x="29" y="1524" width="3" height="15" fill="rgb(243,174,54)"/><text x="32.00" y="1534.50"></text></g><g><title>_compile (sre_compile.py:148) (1 samples, 0.32%)</title><rect x="29" y="1540" width="3" height="15" fill="rgb(217,155,35)"/><text x="32.00" y="1550.50"></text></g><g><title>_compile (sre_compile.py:90) (1 samples, 0.32%)</title><rect x="29" y="1556" width="3" height="15" fill="rgb(237,115,47)"/><text x="32.00" y="1566.50"></text></g><g><title>__getitem__ (sre_parse.py:167) (1 samples, 0.32%)</title><rect x="29" y="1572" width="3" height="15" fill="rgb(212,13,38)"/><text x="32.00" y="1582.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:18) (2 samples, 0.65%)</title><rect x="29" y="244" width="7" height="15" fill="rgb(227,28,48)"/><text x="32.00" y="254.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="29" y="260" width="7" height="15" fill="rgb(213,19,47)"/><text x="32.00" y="270.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.65%)</title><rect x="29" y="276" width="7" height="15" fill="rgb(253,208,31)"/><text x="32.00" y="286.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.65%)</title><rect x="29" y="292" width="7" height="15" fill="rgb(246,184,32)"/><text x="32.00" y="302.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.65%)</title><rect x="29" y="308" width="7" height="15" fill="rgb(208,75,11)"/><text x="32.00" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="29" y="324" width="7" height="15" fill="rgb(228,158,41)"/><text x="32.00" y="334.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py:13) (2 samples, 0.65%)</title><rect x="29" y="340" width="7" height="15" fill="rgb(207,84,44)"/><text x="32.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="29" y="356" width="7" height="15" fill="rgb(218,224,23)"/><text x="32.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (2 samples, 0.65%)</title><rect x="29" y="372" width="7" height="15" fill="rgb(212,85,47)"/><text x="32.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="29" y="388" width="7" height="15" fill="rgb(221,215,21)"/><text x="32.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="29" y="404" width="7" height="15" fill="rgb(220,137,8)"/><text x="32.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.65%)</title><rect x="29" y="420" width="7" height="15" fill="rgb(219,145,5)"/><text x="32.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.65%)</title><rect x="29" y="436" width="7" height="15" fill="rgb(225,143,19)"/><text x="32.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.65%)</title><rect x="29" y="452" width="7" height="15" fill="rgb(222,85,50)"/><text x="32.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="29" y="468" width="7" height="15" fill="rgb(243,201,41)"/><text x="32.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py:7) (1 samples, 0.32%)</title><rect x="32" y="484" width="4" height="15" fill="rgb(254,88,22)"/><text x="35.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="500" width="4" height="15" fill="rgb(241,67,48)"/><text x="35.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="516" width="4" height="15" fill="rgb(246,141,6)"/><text x="35.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="532" width="4" height="15" fill="rgb(233,186,43)"/><text x="35.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="548" width="4" height="15" fill="rgb(211,209,28)"/><text x="35.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="564" width="4" height="15" fill="rgb(244,153,0)"/><text x="35.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py:7) (1 samples, 0.32%)</title><rect x="32" y="580" width="4" height="15" fill="rgb(240,212,38)"/><text x="35.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="596" width="4" height="15" fill="rgb(234,66,17)"/><text x="35.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="612" width="4" height="15" fill="rgb(207,29,0)"/><text x="35.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="628" width="4" height="15" fill="rgb(223,104,37)"/><text x="35.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="644" width="4" height="15" fill="rgb(254,110,37)"/><text x="35.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="660" width="4" height="15" fill="rgb(242,79,51)"/><text x="35.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py:62) (1 samples, 0.32%)</title><rect x="32" y="676" width="4" height="15" fill="rgb(254,34,43)"/><text x="35.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="32" y="692" width="4" height="15" fill="rgb(241,81,3)"/><text x="35.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="32" y="708" width="4" height="15" fill="rgb(224,185,47)"/><text x="35.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="32" y="724" width="4" height="15" fill="rgb(232,96,45)"/><text x="35.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="32" y="740" width="4" height="15" fill="rgb(242,100,37)"/><text x="35.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="32" y="756" width="4" height="15" fill="rgb(252,164,45)"/><text x="35.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py:143) (1 samples, 0.32%)</title><rect x="32" y="772" width="4" height="15" fill="rgb(247,47,15)"/><text x="35.00" y="782.50"></text></g><g><title>compile (re.py:234) (1 samples, 0.32%)</title><rect x="32" y="788" width="4" height="15" fill="rgb(218,147,44)"/><text x="35.00" y="798.50"></text></g><g><title>_compile (re.py:286) (1 samples, 0.32%)</title><rect x="32" y="804" width="4" height="15" fill="rgb(248,175,14)"/><text x="35.00" y="814.50"></text></g><g><title>compile (sre_compile.py:764) (1 samples, 0.32%)</title><rect x="32" y="820" width="4" height="15" fill="rgb(233,195,48)"/><text x="35.00" y="830.50"></text></g><g><title>parse (sre_parse.py:930) (1 samples, 0.32%)</title><rect x="32" y="836" width="4" height="15" fill="rgb(240,85,13)"/><text x="35.00" y="846.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="32" y="852" width="4" height="15" fill="rgb(233,130,22)"/><text x="35.00" y="862.50"></text></g><g><title>_parse (sre_parse.py:816) (1 samples, 0.32%)</title><rect x="32" y="868" width="4" height="15" fill="rgb(208,218,47)"/><text x="35.00" y="878.50"></text></g><g><title>_parse_sub (sre_parse.py:426) (1 samples, 0.32%)</title><rect x="32" y="884" width="4" height="15" fill="rgb(244,170,6)"/><text x="35.00" y="894.50"></text></g><g><title>_parse (sre_parse.py:511) (1 samples, 0.32%)</title><rect x="32" y="900" width="4" height="15" fill="rgb(244,193,22)"/><text x="35.00" y="910.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:6) (1 samples, 0.32%)</title><rect x="36" y="436" width="4" height="15" fill="rgb(236,37,51)"/><text x="39.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="452" width="4" height="15" fill="rgb(237,134,13)"/><text x="39.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="468" width="4" height="15" fill="rgb(207,158,42)"/><text x="39.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="484" width="4" height="15" fill="rgb(221,160,28)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="500" width="4" height="15" fill="rgb(247,129,46)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="516" width="4" height="15" fill="rgb(208,126,46)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py:12) (1 samples, 0.32%)</title><rect x="36" y="532" width="4" height="15" fill="rgb(253,225,23)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="548" width="4" height="15" fill="rgb(231,166,41)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="564" width="4" height="15" fill="rgb(244,88,36)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="580" width="4" height="15" fill="rgb(245,169,23)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="596" width="4" height="15" fill="rgb(227,71,27)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="612" width="4" height="15" fill="rgb(236,6,38)"/><text x="39.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:55) (1 samples, 0.32%)</title><rect x="36" y="628" width="4" height="15" fill="rgb(228,135,51)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="644" width="4" height="15" fill="rgb(225,201,14)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="660" width="4" height="15" fill="rgb(248,211,31)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="676" width="4" height="15" fill="rgb(222,109,31)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="692" width="4" height="15" fill="rgb(244,26,6)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="708" width="4" height="15" fill="rgb(207,184,34)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:24) (1 samples, 0.32%)</title><rect x="36" y="724" width="4" height="15" fill="rgb(221,149,12)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="740" width="4" height="15" fill="rgb(235,216,6)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="756" width="4" height="15" fill="rgb(241,55,1)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="772" width="4" height="15" fill="rgb(211,51,46)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="788" width="4" height="15" fill="rgb(225,156,18)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="804" width="4" height="15" fill="rgb(238,179,8)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (1 samples, 0.32%)</title><rect x="36" y="820" width="4" height="15" fill="rgb(225,229,45)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="836" width="4" height="15" fill="rgb(219,50,13)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="852" width="4" height="15" fill="rgb(238,198,21)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="868" width="4" height="15" fill="rgb(223,88,9)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="884" width="4" height="15" fill="rgb(235,81,46)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="900" width="4" height="15" fill="rgb(206,83,27)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:44) (1 samples, 0.32%)</title><rect x="36" y="916" width="4" height="15" fill="rgb(245,9,25)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="932" width="4" height="15" fill="rgb(249,68,8)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="948" width="4" height="15" fill="rgb(243,120,34)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="964" width="4" height="15" fill="rgb(245,218,10)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="980" width="4" height="15" fill="rgb(211,81,54)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="996" width="4" height="15" fill="rgb(252,25,34)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:115) (1 samples, 0.32%)</title><rect x="36" y="1012" width="4" height="15" fill="rgb(211,7,5)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1028" width="4" height="15" fill="rgb(220,146,12)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1044" width="4" height="15" fill="rgb(251,17,2)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1060" width="4" height="15" fill="rgb(223,88,27)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1076" width="4" height="15" fill="rgb(238,170,54)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1092" width="4" height="15" fill="rgb(226,15,1)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/series.py:84) (1 samples, 0.32%)</title><rect x="36" y="1108" width="4" height="15" fill="rgb(247,149,16)"/><text x="39.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1124" width="4" height="15" fill="rgb(249,132,8)"/><text x="39.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1140" width="4" height="15" fill="rgb(209,67,52)"/><text x="39.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1156" width="4" height="15" fill="rgb(233,7,6)"/><text x="39.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1172" width="4" height="15" fill="rgb(249,105,19)"/><text x="39.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1188" width="4" height="15" fill="rgb(237,24,19)"/><text x="39.00" y="1198.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/__init__.py:59) (1 samples, 0.32%)</title><rect x="36" y="1204" width="4" height="15" fill="rgb(221,109,35)"/><text x="39.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1220" width="4" height="15" fill="rgb(237,30,51)"/><text x="39.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1236" width="4" height="15" fill="rgb(252,173,14)"/><text x="39.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1252" width="4" height="15" fill="rgb(243,190,33)"/><text x="39.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1268" width="4" height="15" fill="rgb(222,154,44)"/><text x="39.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1284" width="4" height="15" fill="rgb(220,85,2)"/><text x="39.00" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_core.py:17) (1 samples, 0.32%)</title><rect x="36" y="1300" width="4" height="15" fill="rgb(223,118,35)"/><text x="39.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1316" width="4" height="15" fill="rgb(220,25,10)"/><text x="39.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1332" width="4" height="15" fill="rgb(215,45,27)"/><text x="39.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1348" width="4" height="15" fill="rgb(240,50,2)"/><text x="39.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1364" width="4" height="15" fill="rgb(238,17,37)"/><text x="39.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1380" width="4" height="15" fill="rgb(208,191,37)"/><text x="39.00" y="1390.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/__init__.py:3) (1 samples, 0.32%)</title><rect x="36" y="1396" width="4" height="15" fill="rgb(237,120,1)"/><text x="39.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1412" width="4" height="15" fill="rgb(240,47,47)"/><text x="39.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1428" width="4" height="15" fill="rgb(221,196,31)"/><text x="39.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1444" width="4" height="15" fill="rgb(242,32,9)"/><text x="39.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1460" width="4" height="15" fill="rgb(250,18,18)"/><text x="39.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1476" width="4" height="15" fill="rgb(219,112,19)"/><text x="39.00" y="1486.50"></text></g><g><title>&lt;module&gt; (pandas/plotting/_matplotlib/boxplot.py:4) (1 samples, 0.32%)</title><rect x="36" y="1492" width="4" height="15" fill="rgb(247,98,14)"/><text x="39.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1508" width="4" height="15" fill="rgb(227,148,17)"/><text x="39.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (1 samples, 0.32%)</title><rect x="36" y="1524" width="4" height="15" fill="rgb(247,165,44)"/><text x="39.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1540" width="4" height="15" fill="rgb(243,155,5)"/><text x="39.00" y="1550.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1556" width="4" height="15" fill="rgb(246,58,30)"/><text x="39.00" y="1566.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="36" y="1572" width="4" height="15" fill="rgb(211,91,36)"/><text x="39.00" y="1582.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="36" y="1588" width="4" height="15" fill="rgb(223,42,26)"/><text x="39.00" y="1598.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="36" y="1604" width="4" height="15" fill="rgb(226,96,15)"/><text x="39.00" y="1614.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="36" y="1620" width="4" height="15" fill="rgb(231,159,28)"/><text x="39.00" y="1630.50"></text></g><g><title>&lt;module&gt; (matplotlib/__init__.py:205) (1 samples, 0.32%)</title><rect x="36" y="1636" width="4" height="15" fill="rgb(215,141,16)"/><text x="39.00" y="1646.50"></text></g><g><title>_check_versions (matplotlib/__init__.py:199) (1 samples, 0.32%)</title><rect x="36" y="1652" width="4" height="15" fill="rgb(232,90,5)"/><text x="39.00" y="1662.50"></text></g><g><title>import_module (importlib/__init__.py:127) (1 samples, 0.32%)</title><rect x="36" y="1668" width="4" height="15" fill="rgb(253,32,23)"/><text x="39.00" y="1678.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1006) (1 samples, 0.32%)</title><rect x="36" y="1684" width="4" height="15" fill="rgb(207,76,30)"/><text x="39.00" y="1694.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="36" y="1700" width="4" height="15" fill="rgb(243,34,52)"/><text x="39.00" y="1710.50"></text></g><g><title>__exit__ (&lt;frozen importlib._bootstrap&gt;:152) (1 samples, 0.32%)</title><rect x="36" y="1716" width="4" height="15" fill="rgb(227,138,1)"/><text x="39.00" y="1726.50"></text></g><g><title>release (&lt;frozen importlib._bootstrap&gt;:109) (1 samples, 0.32%)</title><rect x="36" y="1732" width="4" height="15" fill="rgb(227,119,10)"/><text x="39.00" y="1742.50"></text></g><g><title>_tokenize (tokenize.py:583) (1 samples, 0.32%)</title><rect x="40" y="1380" width="4" height="15" fill="rgb(238,205,21)"/><text x="43.00" y="1390.50"></text></g><g><title>_sre_SRE_Pattern_match (python3.7) (1 samples, 0.32%)</title><rect x="40" y="1396" width="4" height="15" fill="rgb(211,173,4)"/><text x="43.00" y="1406.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.32%)</title><rect x="40" y="1412" width="4" height="15" fill="rgb(239,214,48)"/><text x="43.00" y="1422.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="40" y="1428" width="4" height="15" fill="rgb(249,132,27)"/><text x="43.00" y="1438.50"></text></g><g><title>0x7fe5413d22b6 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="40" y="1444" width="4" height="15" fill="rgb(252,162,30)"/><text x="43.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:10) (2 samples, 0.65%)</title><rect x="40" y="1108" width="8" height="15" fill="rgb(230,214,8)"/><text x="43.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="40" y="1124" width="8" height="15" fill="rgb(237,61,46)"/><text x="43.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.65%)</title><rect x="40" y="1140" width="8" height="15" fill="rgb(220,4,0)"/><text x="43.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.65%)</title><rect x="40" y="1156" width="8" height="15" fill="rgb(247,136,21)"/><text x="43.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.65%)</title><rect x="40" y="1172" width="8" height="15" fill="rgb(251,188,27)"/><text x="43.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="40" y="1188" width="8" height="15" fill="rgb(250,128,35)"/><text x="43.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_topology.py:27) (2 samples, 0.65%)</title><rect x="40" y="1204" width="8" height="15" fill="rgb(211,123,3)"/><text x="43.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (2 samples, 0.65%)</title><rect x="40" y="1220" width="8" height="15" fill="rgb(243,68,49)"/><text x="43.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (2 samples, 0.65%)</title><rect x="40" y="1236" width="8" height="15" fill="rgb(211,27,39)"/><text x="43.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (2 samples, 0.65%)</title><rect x="40" y="1252" width="8" height="15" fill="rgb(231,145,4)"/><text x="43.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (2 samples, 0.65%)</title><rect x="40" y="1268" width="8" height="15" fill="rgb(227,90,38)"/><text x="43.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (2 samples, 0.65%)</title><rect x="40" y="1284" width="8" height="15" fill="rgb(228,41,4)"/><text x="43.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/common/_container.py:70) (2 samples, 0.65%)</title><rect x="40" y="1300" width="8" height="15" fill="rgb(228,168,41)"/><text x="43.00" y="1310.50"></text></g><g><title>_get_operation_list (skl2onnx/common/_container.py:49) (2 samples, 0.65%)</title><rect x="40" y="1316" width="8" height="15" fill="rgb(229,10,9)"/><text x="43.00" y="1326.50"></text></g><g><title>getsource (inspect.py:973) (2 samples, 0.65%)</title><rect x="40" y="1332" width="8" height="15" fill="rgb(228,208,21)"/><text x="43.00" y="1342.50"></text></g><g><title>getsourcelines (inspect.py:965) (2 samples, 0.65%)</title><rect x="40" y="1348" width="8" height="15" fill="rgb(250,113,37)"/><text x="43.00" y="1358.50"></text></g><g><title>getblock (inspect.py:940) (2 samples, 0.65%)</title><rect x="40" y="1364" width="8" height="15" fill="rgb(252,154,51)"/><text x="43.00" y="1374.50"></text></g><g><title>_tokenize (tokenize.py:627) (1 samples, 0.32%)</title><rect x="44" y="1380" width="4" height="15" fill="rgb(213,200,45)"/><text x="47.00" y="1390.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:11) (1 samples, 0.32%)</title><rect x="48" y="1108" width="4" height="15" fill="rgb(211,154,36)"/><text x="51.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="48" y="1124" width="4" height="15" fill="rgb(223,151,21)"/><text x="51.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="48" y="1140" width="4" height="15" fill="rgb(234,163,1)"/><text x="51.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="48" y="1156" width="4" height="15" fill="rgb(226,110,20)"/><text x="51.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="48" y="1172" width="4" height="15" fill="rgb(229,71,25)"/><text x="51.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="48" y="1188" width="4" height="15" fill="rgb(237,201,23)"/><text x="51.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py:33) (1 samples, 0.32%)</title><rect x="48" y="1204" width="4" height="15" fill="rgb(211,103,48)"/><text x="51.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="48" y="1220" width="4" height="15" fill="rgb(237,219,23)"/><text x="51.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="48" y="1236" width="4" height="15" fill="rgb(227,161,21)"/><text x="51.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="48" y="1252" width="4" height="15" fill="rgb(243,133,27)"/><text x="51.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="48" y="1268" width="4" height="15" fill="rgb(216,83,47)"/><text x="51.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="48" y="1284" width="4" height="15" fill="rgb(218,130,44)"/><text x="51.00" y="1294.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_supported_operators.py:98) (1 samples, 0.32%)</title><rect x="48" y="1300" width="4" height="15" fill="rgb(231,129,31)"/><text x="51.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="48" y="1316" width="4" height="15" fill="rgb(218,169,24)"/><text x="51.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="48" y="1332" width="4" height="15" fill="rgb(248,114,39)"/><text x="51.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="48" y="1348" width="4" height="15" fill="rgb(248,76,40)"/><text x="51.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="48" y="1364" width="4" height="15" fill="rgb(238,152,51)"/><text x="51.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="48" y="1380" width="4" height="15" fill="rgb(235,90,43)"/><text x="51.00" y="1390.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/__init__.py:10) (1 samples, 0.32%)</title><rect x="48" y="1396" width="4" height="15" fill="rgb(205,90,53)"/><text x="51.00" y="1406.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="48" y="1412" width="4" height="15" fill="rgb(250,95,47)"/><text x="51.00" y="1422.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="48" y="1428" width="4" height="15" fill="rgb(210,8,40)"/><text x="51.00" y="1438.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="48" y="1444" width="4" height="15" fill="rgb(231,225,15)"/><text x="51.00" y="1454.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="48" y="1460" width="4" height="15" fill="rgb(252,58,12)"/><text x="51.00" y="1470.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="48" y="1476" width="4" height="15" fill="rgb(240,29,21)"/><text x="51.00" y="1486.50"></text></g><g><title>&lt;module&gt; (sklearn/neural_network/_multilayer_perceptron.py:18) (1 samples, 0.32%)</title><rect x="48" y="1492" width="4" height="15" fill="rgb(218,170,52)"/><text x="51.00" y="1502.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="48" y="1508" width="4" height="15" fill="rgb(238,9,12)"/><text x="51.00" y="1518.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="48" y="1524" width="4" height="15" fill="rgb(221,180,6)"/><text x="51.00" y="1534.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:670) (1 samples, 0.32%)</title><rect x="48" y="1540" width="4" height="15" fill="rgb(225,229,30)"/><text x="51.00" y="1550.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:589) (1 samples, 0.32%)</title><rect x="48" y="1556" width="4" height="15" fill="rgb(236,144,0)"/><text x="51.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:47) (1 samples, 0.32%)</title><rect x="52" y="1572" width="3" height="15" fill="rgb(251,20,10)"/><text x="55.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:436) (1 samples, 0.32%)</title><rect x="52" y="1588" width="3" height="15" fill="rgb(229,8,32)"/><text x="55.00" y="1598.50"></text></g><g><title>__init__ (jinja2/runtime.py:605) (1 samples, 0.32%)</title><rect x="52" y="1604" width="3" height="15" fill="rgb(220,106,15)"/><text x="55.00" y="1614.50"></text></g><g><title>call (jinja2/runtime.py:262) (1 samples, 0.32%)</title><rect x="55" y="1588" width="4" height="15" fill="rgb(221,209,29)"/><text x="58.00" y="1598.50"></text></g><g><title>process_documentation (skl2onnx/algebra/automation.py:182) (1 samples, 0.32%)</title><rect x="55" y="1604" width="4" height="15" fill="rgb(227,96,49)"/><text x="58.00" y="1614.50"></text></g><g><title>dedent (textwrap.py:430) (1 samples, 0.32%)</title><rect x="55" y="1620" width="4" height="15" fill="rgb(212,72,12)"/><text x="58.00" y="1630.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.32%)</title><rect x="55" y="1636" width="4" height="15" fill="rgb(226,203,33)"/><text x="58.00" y="1646.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.32%)</title><rect x="55" y="1652" width="4" height="15" fill="rgb(216,137,42)"/><text x="58.00" y="1662.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.32%)</title><rect x="55" y="1668" width="4" height="15" fill="rgb(210,80,28)"/><text x="58.00" y="1678.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:159) (3 samples, 0.97%)</title><rect x="52" y="1460" width="11" height="15" fill="rgb(218,9,27)"/><text x="55.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py:153) (3 samples, 0.97%)</title><rect x="52" y="1476" width="11" height="15" fill="rgb(243,58,36)"/><text x="55.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py:118) (3 samples, 0.97%)</title><rect x="52" y="1492" width="11" height="15" fill="rgb(205,119,4)"/><text x="55.00" y="1502.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py:235) (3 samples, 0.97%)</title><rect x="52" y="1508" width="11" height="15" fill="rgb(224,164,21)"/><text x="55.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py:76) (3 samples, 0.97%)</title><rect x="52" y="1524" width="11" height="15" fill="rgb(219,141,31)"/><text x="55.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py:1005) (3 samples, 0.97%)</title><rect x="52" y="1540" width="11" height="15" fill="rgb(235,175,36)"/><text x="55.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (3 samples, 0.97%)</title><rect x="52" y="1556" width="11" height="15" fill="rgb(254,71,4)"/><text x="55.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;:59) (2 samples, 0.65%)</title><rect x="55" y="1572" width="8" height="15" fill="rgb(212,143,18)"/><text x="58.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py:430) (1 samples, 0.32%)</title><rect x="59" y="1588" width="4" height="15" fill="rgb(236,136,1)"/><text x="62.00" y="1598.50"></text></g><g><title>0x7fe53148cfe6 (?) (1 samples, 0.32%)</title><rect x="59" y="1604" width="4" height="15" fill="rgb(253,210,17)"/><text x="62.00" y="1614.50"></text></g><g><title>0x7fe531477081 (?) (1 samples, 0.32%)</title><rect x="59" y="1620" width="4" height="15" fill="rgb(211,200,32)"/><text x="62.00" y="1630.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:4) (15 samples, 4.85%)</title><rect x="10" y="52" width="57" height="15" fill="rgb(214,11,12)"/><text x="13.00" y="62.50">&lt;modul..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (15 samples, 4.85%)</title><rect x="10" y="68" width="57" height="15" fill="rgb(249,194,41)"/><text x="13.00" y="78.50">_find_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (15 samples, 4.85%)</title><rect x="10" y="84" width="57" height="15" fill="rgb(209,127,48)"/><text x="13.00" y="94.50">_find_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (15 samples, 4.85%)</title><rect x="10" y="100" width="57" height="15" fill="rgb(210,196,41)"/><text x="13.00" y="110.50">_load_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (15 samples, 4.85%)</title><rect x="10" y="116" width="57" height="15" fill="rgb(218,142,47)"/><text x="13.00" y="126.50">exec_m..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (15 samples, 4.85%)</title><rect x="10" y="132" width="57" height="15" fill="rgb(242,9,38)"/><text x="13.00" y="142.50">_call_..</text></g><g><title>&lt;module&gt; (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:7) (10 samples, 3.24%)</title><rect x="29" y="148" width="38" height="15" fill="rgb(234,190,33)"/><text x="32.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (10 samples, 3.24%)</title><rect x="29" y="164" width="38" height="15" fill="rgb(227,36,42)"/><text x="32.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (10 samples, 3.24%)</title><rect x="29" y="180" width="38" height="15" fill="rgb(219,156,15)"/><text x="32.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (10 samples, 3.24%)</title><rect x="29" y="196" width="38" height="15" fill="rgb(250,204,35)"/><text x="32.00" y="206.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (10 samples, 3.24%)</title><rect x="29" y="212" width="38" height="15" fill="rgb(240,58,7)"/><text x="32.00" y="222.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (10 samples, 3.24%)</title><rect x="29" y="228" width="38" height="15" fill="rgb(228,48,24)"/><text x="32.00" y="238.50">_ca..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py:7) (8 samples, 2.59%)</title><rect x="36" y="244" width="31" height="15" fill="rgb(235,163,34)"/><text x="39.00" y="254.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.59%)</title><rect x="36" y="260" width="31" height="15" fill="rgb(222,12,14)"/><text x="39.00" y="270.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.59%)</title><rect x="36" y="276" width="31" height="15" fill="rgb(234,29,2)"/><text x="39.00" y="286.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.59%)</title><rect x="36" y="292" width="31" height="15" fill="rgb(237,160,21)"/><text x="39.00" y="302.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.59%)</title><rect x="36" y="308" width="31" height="15" fill="rgb(232,162,14)"/><text x="39.00" y="318.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.59%)</title><rect x="36" y="324" width="31" height="15" fill="rgb(239,203,11)"/><text x="39.00" y="334.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py:28) (8 samples, 2.59%)</title><rect x="36" y="340" width="31" height="15" fill="rgb(245,194,17)"/><text x="39.00" y="350.50">&lt;m..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (8 samples, 2.59%)</title><rect x="36" y="356" width="31" height="15" fill="rgb(209,121,49)"/><text x="39.00" y="366.50">_f..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (8 samples, 2.59%)</title><rect x="36" y="372" width="31" height="15" fill="rgb(227,149,34)"/><text x="39.00" y="382.50">_f..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (8 samples, 2.59%)</title><rect x="36" y="388" width="31" height="15" fill="rgb(208,87,45)"/><text x="39.00" y="398.50">_l..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (8 samples, 2.59%)</title><rect x="36" y="404" width="31" height="15" fill="rgb(240,137,14)"/><text x="39.00" y="414.50">ex..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (8 samples, 2.59%)</title><rect x="36" y="420" width="31" height="15" fill="rgb(219,182,11)"/><text x="39.00" y="430.50">_c..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py:7) (7 samples, 2.27%)</title><rect x="40" y="436" width="27" height="15" fill="rgb(242,217,26)"/><text x="43.00" y="446.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="452" width="27" height="15" fill="rgb(216,10,15)"/><text x="43.00" y="462.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.27%)</title><rect x="40" y="468" width="27" height="15" fill="rgb(247,30,31)"/><text x="43.00" y="478.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="484" width="27" height="15" fill="rgb(246,123,49)"/><text x="43.00" y="494.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="500" width="27" height="15" fill="rgb(211,215,7)"/><text x="43.00" y="510.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.27%)</title><rect x="40" y="516" width="27" height="15" fill="rgb(209,195,5)"/><text x="43.00" y="526.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.27%)</title><rect x="40" y="532" width="27" height="15" fill="rgb(245,115,34)"/><text x="43.00" y="542.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.27%)</title><rect x="40" y="548" width="27" height="15" fill="rgb(238,77,54)"/><text x="43.00" y="558.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="564" width="27" height="15" fill="rgb(233,3,36)"/><text x="43.00" y="574.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py:6) (7 samples, 2.27%)</title><rect x="40" y="580" width="27" height="15" fill="rgb(214,178,19)"/><text x="43.00" y="590.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="596" width="27" height="15" fill="rgb(219,103,15)"/><text x="43.00" y="606.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.27%)</title><rect x="40" y="612" width="27" height="15" fill="rgb(234,85,47)"/><text x="43.00" y="622.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.27%)</title><rect x="40" y="628" width="27" height="15" fill="rgb(211,20,47)"/><text x="43.00" y="638.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.27%)</title><rect x="40" y="644" width="27" height="15" fill="rgb(206,3,22)"/><text x="43.00" y="654.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="660" width="27" height="15" fill="rgb(213,211,23)"/><text x="43.00" y="670.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py:15) (7 samples, 2.27%)</title><rect x="40" y="676" width="27" height="15" fill="rgb(221,224,32)"/><text x="43.00" y="686.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="692" width="27" height="15" fill="rgb(227,116,32)"/><text x="43.00" y="702.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.27%)</title><rect x="40" y="708" width="27" height="15" fill="rgb(211,35,1)"/><text x="43.00" y="718.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.27%)</title><rect x="40" y="724" width="27" height="15" fill="rgb(239,99,44)"/><text x="43.00" y="734.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.27%)</title><rect x="40" y="740" width="27" height="15" fill="rgb(219,118,6)"/><text x="43.00" y="750.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="756" width="27" height="15" fill="rgb(219,10,31)"/><text x="43.00" y="766.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py:7) (7 samples, 2.27%)</title><rect x="40" y="772" width="27" height="15" fill="rgb(207,145,3)"/><text x="43.00" y="782.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="788" width="27" height="15" fill="rgb(251,60,27)"/><text x="43.00" y="798.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.27%)</title><rect x="40" y="804" width="27" height="15" fill="rgb(228,64,6)"/><text x="43.00" y="814.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.27%)</title><rect x="40" y="820" width="27" height="15" fill="rgb(247,9,7)"/><text x="43.00" y="830.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.27%)</title><rect x="40" y="836" width="27" height="15" fill="rgb(209,167,49)"/><text x="43.00" y="846.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="852" width="27" height="15" fill="rgb(212,99,35)"/><text x="43.00" y="862.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py:9) (7 samples, 2.27%)</title><rect x="40" y="868" width="27" height="15" fill="rgb(228,221,38)"/><text x="43.00" y="878.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="884" width="27" height="15" fill="rgb(228,134,20)"/><text x="43.00" y="894.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:953) (7 samples, 2.27%)</title><rect x="40" y="900" width="27" height="15" fill="rgb(234,154,52)"/><text x="43.00" y="910.50">_..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="916" width="27" height="15" fill="rgb(215,21,10)"/><text x="43.00" y="926.50">_..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="932" width="27" height="15" fill="rgb(243,66,24)"/><text x="43.00" y="942.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.27%)</title><rect x="40" y="948" width="27" height="15" fill="rgb(213,114,23)"/><text x="43.00" y="958.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.27%)</title><rect x="40" y="964" width="27" height="15" fill="rgb(239,204,18)"/><text x="43.00" y="974.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.27%)</title><rect x="40" y="980" width="27" height="15" fill="rgb(247,101,6)"/><text x="43.00" y="990.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="996" width="27" height="15" fill="rgb(220,42,54)"/><text x="43.00" y="1006.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py:18) (7 samples, 2.27%)</title><rect x="40" y="1012" width="27" height="15" fill="rgb(249,96,8)"/><text x="43.00" y="1022.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (7 samples, 2.27%)</title><rect x="40" y="1028" width="27" height="15" fill="rgb(235,226,44)"/><text x="43.00" y="1038.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (7 samples, 2.27%)</title><rect x="40" y="1044" width="27" height="15" fill="rgb(216,220,41)"/><text x="43.00" y="1054.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (7 samples, 2.27%)</title><rect x="40" y="1060" width="27" height="15" fill="rgb(222,218,35)"/><text x="43.00" y="1070.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (7 samples, 2.27%)</title><rect x="40" y="1076" width="27" height="15" fill="rgb(252,187,49)"/><text x="43.00" y="1086.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (7 samples, 2.27%)</title><rect x="40" y="1092" width="27" height="15" fill="rgb(243,77,10)"/><text x="43.00" y="1102.50">_..</text></g><g><title>&lt;module&gt; (skl2onnx/convert.py:15) (4 samples, 1.29%)</title><rect x="52" y="1108" width="15" height="15" fill="rgb(223,133,17)"/><text x="55.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.29%)</title><rect x="52" y="1124" width="15" height="15" fill="rgb(248,58,20)"/><text x="55.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.29%)</title><rect x="52" y="1140" width="15" height="15" fill="rgb(246,164,10)"/><text x="55.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.29%)</title><rect x="52" y="1156" width="15" height="15" fill="rgb(220,176,6)"/><text x="55.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.29%)</title><rect x="52" y="1172" width="15" height="15" fill="rgb(245,3,47)"/><text x="55.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.29%)</title><rect x="52" y="1188" width="15" height="15" fill="rgb(246,103,21)"/><text x="55.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.29%)</title><rect x="52" y="1204" width="15" height="15" fill="rgb(251,137,12)"/><text x="55.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.29%)</title><rect x="52" y="1220" width="15" height="15" fill="rgb(229,111,19)"/><text x="55.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py:15) (4 samples, 1.29%)</title><rect x="52" y="1236" width="15" height="15" fill="rgb(250,79,31)"/><text x="55.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1035) (4 samples, 1.29%)</title><rect x="52" y="1252" width="15" height="15" fill="rgb(219,122,22)"/><text x="55.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.29%)</title><rect x="52" y="1268" width="15" height="15" fill="rgb(253,219,16)"/><text x="55.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.29%)</title><rect x="52" y="1284" width="15" height="15" fill="rgb(253,211,2)"/><text x="55.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.29%)</title><rect x="52" y="1300" width="15" height="15" fill="rgb(235,57,37)"/><text x="55.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.29%)</title><rect x="52" y="1316" width="15" height="15" fill="rgb(224,181,1)"/><text x="55.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.29%)</title><rect x="52" y="1332" width="15" height="15" fill="rgb(229,214,52)"/><text x="55.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.29%)</title><rect x="52" y="1348" width="15" height="15" fill="rgb(238,2,9)"/><text x="55.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py:9) (4 samples, 1.29%)</title><rect x="52" y="1364" width="15" height="15" fill="rgb(235,219,43)"/><text x="55.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (4 samples, 1.29%)</title><rect x="52" y="1380" width="15" height="15" fill="rgb(235,75,13)"/><text x="55.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (4 samples, 1.29%)</title><rect x="52" y="1396" width="15" height="15" fill="rgb(252,21,39)"/><text x="55.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (4 samples, 1.29%)</title><rect x="52" y="1412" width="15" height="15" fill="rgb(205,227,47)"/><text x="55.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (4 samples, 1.29%)</title><rect x="52" y="1428" width="15" height="15" fill="rgb(229,61,3)"/><text x="55.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (4 samples, 1.29%)</title><rect x="52" y="1444" width="15" height="15" fill="rgb(248,158,38)"/><text x="55.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py:6) (1 samples, 0.32%)</title><rect x="63" y="1460" width="4" height="15" fill="rgb(240,106,45)"/><text x="66.00" y="1470.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:983) (1 samples, 0.32%)</title><rect x="63" y="1476" width="4" height="15" fill="rgb(251,0,29)"/><text x="66.00" y="1486.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:967) (1 samples, 0.32%)</title><rect x="63" y="1492" width="4" height="15" fill="rgb(236,186,28)"/><text x="66.00" y="1502.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:677) (1 samples, 0.32%)</title><rect x="63" y="1508" width="4" height="15" fill="rgb(222,0,29)"/><text x="66.00" y="1518.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:728) (1 samples, 0.32%)</title><rect x="63" y="1524" width="4" height="15" fill="rgb(253,208,20)"/><text x="66.00" y="1534.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:219) (1 samples, 0.32%)</title><rect x="63" y="1540" width="4" height="15" fill="rgb(229,62,43)"/><text x="66.00" y="1550.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/automation.py:104) (1 samples, 0.32%)</title><rect x="63" y="1556" width="4" height="15" fill="rgb(244,121,35)"/><text x="66.00" y="1566.50"></text></g><g><title>_get_doc_template (skl2onnx/algebra/automation.py:101) (1 samples, 0.32%)</title><rect x="63" y="1572" width="4" height="15" fill="rgb(243,95,20)"/><text x="66.00" y="1582.50"></text></g><g><title>__new__ (jinja2/environment.py:945) (1 samples, 0.32%)</title><rect x="63" y="1588" width="4" height="15" fill="rgb(238,155,48)"/><text x="66.00" y="1598.50"></text></g><g><title>from_string (jinja2/environment.py:880) (1 samples, 0.32%)</title><rect x="63" y="1604" width="4" height="15" fill="rgb(207,91,18)"/><text x="66.00" y="1614.50"></text></g><g><title>compile (jinja2/environment.py:579) (1 samples, 0.32%)</title><rect x="63" y="1620" width="4" height="15" fill="rgb(225,1,30)"/><text x="66.00" y="1630.50"></text></g><g><title>_parse (jinja2/environment.py:497) (1 samples, 0.32%)</title><rect x="63" y="1636" width="4" height="15" fill="rgb(238,144,29)"/><text x="66.00" y="1646.50"></text></g><g><title>parse (jinja2/parser.py:901) (1 samples, 0.32%)</title><rect x="63" y="1652" width="4" height="15" fill="rgb(219,194,27)"/><text x="66.00" y="1662.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="63" y="1668" width="4" height="15" fill="rgb(232,112,28)"/><text x="66.00" y="1678.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="63" y="1684" width="4" height="15" fill="rgb(216,36,19)"/><text x="66.00" y="1694.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.32%)</title><rect x="63" y="1700" width="4" height="15" fill="rgb(246,222,41)"/><text x="66.00" y="1710.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.32%)</title><rect x="63" y="1716" width="4" height="15" fill="rgb(234,71,5)"/><text x="66.00" y="1726.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="63" y="1732" width="4" height="15" fill="rgb(243,125,44)"/><text x="66.00" y="1742.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="63" y="1748" width="4" height="15" fill="rgb(241,182,54)"/><text x="66.00" y="1758.50"></text></g><g><title>parse_if (jinja2/parser.py:212) (1 samples, 0.32%)</title><rect x="63" y="1764" width="4" height="15" fill="rgb(241,187,51)"/><text x="66.00" y="1774.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.32%)</title><rect x="63" y="1780" width="4" height="15" fill="rgb(210,65,12)"/><text x="66.00" y="1790.50"></text></g><g><title>subparse (jinja2/parser.py:883) (1 samples, 0.32%)</title><rect x="63" y="1796" width="4" height="15" fill="rgb(211,14,19)"/><text x="66.00" y="1806.50"></text></g><g><title>parse_statement (jinja2/parser.py:130) (1 samples, 0.32%)</title><rect x="63" y="1812" width="4" height="15" fill="rgb(219,6,20)"/><text x="66.00" y="1822.50"></text></g><g><title>parse_for (jinja2/parser.py:199) (1 samples, 0.32%)</title><rect x="63" y="1828" width="4" height="15" fill="rgb(216,153,47)"/><text x="66.00" y="1838.50"></text></g><g><title>parse_statements (jinja2/parser.py:165) (1 samples, 0.32%)</title><rect x="63" y="1844" width="4" height="15" fill="rgb(252,14,38)"/><text x="66.00" y="1854.50"></text></g><g><title>subparse (jinja2/parser.py:875) (1 samples, 0.32%)</title><rect x="63" y="1860" width="4" height="15" fill="rgb(242,86,10)"/><text x="66.00" y="1870.50"></text></g><g><title>parse_tuple (jinja2/parser.py:620) (1 samples, 0.32%)</title><rect x="63" y="1876" width="4" height="15" fill="rgb(247,69,44)"/><text x="66.00" y="1886.50"></text></g><g><title>parse_expression (jinja2/parser.py:432) (1 samples, 0.32%)</title><rect x="63" y="1892" width="4" height="15" fill="rgb(235,219,43)"/><text x="66.00" y="1902.50"></text></g><g><title>parse_condexpr (jinja2/parser.py:437) (1 samples, 0.32%)</title><rect x="63" y="1908" width="4" height="15" fill="rgb(228,123,46)"/><text x="66.00" y="1918.50"></text></g><g><title>parse_or (jinja2/parser.py:450) (1 samples, 0.32%)</title><rect x="63" y="1924" width="4" height="15" fill="rgb(244,98,47)"/><text x="66.00" y="1934.50"></text></g><g><title>parse_and (jinja2/parser.py:459) (1 samples, 0.32%)</title><rect x="63" y="1940" width="4" height="15" fill="rgb(207,113,15)"/><text x="66.00" y="1950.50"></text></g><g><title>parse_not (jinja2/parser.py:470) (1 samples, 0.32%)</title><rect x="63" y="1956" width="4" height="15" fill="rgb(229,108,54)"/><text x="66.00" y="1966.50"></text></g><g><title>parse_compare (jinja2/parser.py:474) (1 samples, 0.32%)</title><rect x="63" y="1972" width="4" height="15" fill="rgb(241,196,16)"/><text x="66.00" y="1982.50"></text></g><g><title>parse_math1 (jinja2/parser.py:496) (1 samples, 0.32%)</title><rect x="63" y="1988" width="4" height="15" fill="rgb(242,9,21)"/><text x="66.00" y="1998.50"></text></g><g><title>parse_concat (jinja2/parser.py:507) (1 samples, 0.32%)</title><rect x="63" y="2004" width="4" height="15" fill="rgb(213,82,36)"/><text x="66.00" y="2014.50"></text></g><g><title>parse_math2 (jinja2/parser.py:517) (1 samples, 0.32%)</title><rect x="63" y="2020" width="4" height="15" fill="rgb(230,216,47)"/><text x="66.00" y="2030.50"></text></g><g><title>parse_pow (jinja2/parser.py:528) (1 samples, 0.32%)</title><rect x="63" y="2036" width="4" height="15" fill="rgb(208,98,8)"/><text x="66.00" y="2046.50"></text></g><g><title>parse_unary (jinja2/parser.py:546) (1 samples, 0.32%)</title><rect x="63" y="2052" width="4" height="15" fill="rgb(247,30,22)"/><text x="66.00" y="2062.50"></text></g><g><title>parse_primary (jinja2/parser.py:561) (1 samples, 0.32%)</title><rect x="63" y="2068" width="4" height="15" fill="rgb(227,126,36)"/><text x="66.00" y="2078.50"></text></g><g><title>__init__ (jinja2/nodes.py:131) (1 samples, 0.32%)</title><rect x="63" y="2084" width="4" height="15" fill="rgb(231,109,18)"/><text x="66.00" y="2094.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:40) (1 samples, 0.32%)</title><rect x="67" y="52" width="4" height="15" fill="rgb(233,111,39)"/><text x="70.00" y="62.50"></text></g><g><title>start (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:11) (1 samples, 0.32%)</title><rect x="67" y="68" width="4" height="15" fill="rgb(250,98,23)"/><text x="70.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/ensemble/AdaBoostRegressor/bench_AdaBoostRegressor_default_b_reg_64_n_estimators5.py:39) (1 samples, 0.32%)</title><rect x="67" y="84" width="4" height="15" fill="rgb(244,106,51)"/><text x="70.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py:148) (1 samples, 0.32%)</title><rect x="67" y="100" width="4" height="15" fill="rgb(221,78,20)"/><text x="70.00" y="110.50"></text></g><g><title>_get_dataset (mlprodict/asv_benchmark/common_asv_skl.py:88) (1 samples, 0.32%)</title><rect x="67" y="116" width="4" height="15" fill="rgb(226,40,10)"/><text x="70.00" y="126.50"></text></g><g><title>_modify_dimension (mlprodict/onnxrt/validate/validate_problems.py:89) (1 samples, 0.32%)</title><rect x="67" y="132" width="4" height="15" fill="rgb(215,144,18)"/><text x="70.00" y="142.50"></text></g><g><title>var (&lt;__array_function__ internals&gt;:6) (1 samples, 0.32%)</title><rect x="67" y="148" width="4" height="15" fill="rgb(224,142,12)"/><text x="70.00" y="158.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="67" y="164" width="4" height="15" fill="rgb(218,191,50)"/><text x="70.00" y="174.50"></text></g><g><title>var (numpy/core/fromnumeric.py:3506) (1 samples, 0.32%)</title><rect x="67" y="180" width="4" height="15" fill="rgb(220,167,37)"/><text x="70.00" y="190.50"></text></g><g><title>_var (numpy/core/_methods.py:170) (1 samples, 0.32%)</title><rect x="67" y="196" width="4" height="15" fill="rgb(251,151,28)"/><text x="70.00" y="206.50"></text></g><g><title>_count_reduce_items (numpy/core/_methods.py:52) (1 samples, 0.32%)</title><rect x="67" y="212" width="4" height="15" fill="rgb(215,52,30)"/><text x="70.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.32%)</title><rect x="82" y="164" width="4" height="15" fill="rgb(251,161,36)"/><text x="85.00" y="174.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1128) (2 samples, 0.65%)</title><rect x="82" y="148" width="8" height="15" fill="rgb(214,137,2)"/><text x="85.00" y="158.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (1 samples, 0.32%)</title><rect x="86" y="164" width="4" height="15" fill="rgb(221,16,31)"/><text x="89.00" y="174.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (1 samples, 0.32%)</title><rect x="86" y="180" width="4" height="15" fill="rgb(244,212,45)"/><text x="89.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.32%)</title><rect x="90" y="180" width="4" height="15" fill="rgb(212,173,20)"/><text x="93.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (1 samples, 0.32%)</title><rect x="94" y="180" width="3" height="15" fill="rgb(247,165,41)"/><text x="97.00" y="190.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (4 samples, 1.29%)</title><rect x="97" y="180" width="16" height="15" fill="rgb(239,77,42)"/><text x="100.00" y="190.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (4 samples, 1.29%)</title><rect x="97" y="196" width="16" height="15" fill="rgb(208,183,46)"/><text x="100.00" y="206.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (2 samples, 0.65%)</title><rect x="105" y="212" width="8" height="15" fill="rgb(238,93,51)"/><text x="108.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (1 samples, 0.32%)</title><rect x="113" y="196" width="3" height="15" fill="rgb(218,28,34)"/><text x="116.00" y="206.50"></text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1129) (8 samples, 2.59%)</title><rect x="90" y="148" width="30" height="15" fill="rgb(234,153,44)"/><text x="93.00" y="158.50">pr..</text></g><g><title>_validate_data (sklearn/ensemble/_weight_boosting.py:84) (8 samples, 2.59%)</title><rect x="90" y="164" width="30" height="15" fill="rgb(235,136,10)"/><text x="93.00" y="174.50">_v..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (2 samples, 0.65%)</title><rect x="113" y="180" width="7" height="15" fill="rgb(217,158,45)"/><text x="116.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.32%)</title><rect x="116" y="196" width="4" height="15" fill="rgb(215,105,34)"/><text x="119.00" y="206.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.32%)</title><rect x="116" y="212" width="4" height="15" fill="rgb(213,215,47)"/><text x="119.00" y="222.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.32%)</title><rect x="116" y="228" width="4" height="15" fill="rgb(247,12,20)"/><text x="119.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="132" y="196" width="4" height="15" fill="rgb(233,98,9)"/><text x="135.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="132" y="212" width="4" height="15" fill="rgb(230,14,26)"/><text x="135.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.32%)</title><rect x="132" y="228" width="4" height="15" fill="rgb(217,131,16)"/><text x="135.00" y="238.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:930) (1 samples, 0.32%)</title><rect x="136" y="212" width="3" height="15" fill="rgb(207,226,28)"/><text x="139.00" y="222.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:938) (1 samples, 0.32%)</title><rect x="139" y="212" width="4" height="15" fill="rgb(231,19,4)"/><text x="142.00" y="222.50"></text></g><g><title>isclass (inspect.py:78) (1 samples, 0.32%)</title><rect x="139" y="228" width="4" height="15" fill="rgb(225,175,2)"/><text x="142.00" y="238.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:947) (1 samples, 0.32%)</title><rect x="143" y="228" width="4" height="15" fill="rgb(221,11,43)"/><text x="146.00" y="238.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.29%)</title><rect x="155" y="244" width="15" height="15" fill="rgb(236,32,11)"/><text x="158.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:948) (8 samples, 2.59%)</title><rect x="147" y="228" width="31" height="15" fill="rgb(239,106,0)"/><text x="150.00" y="238.50">&lt;l..</text></g><g><title>unicode_startswith (python3.7) (2 samples, 0.65%)</title><rect x="170" y="244" width="8" height="15" fill="rgb(219,7,46)"/><text x="173.00" y="254.50"></text></g><g><title>check_is_fitted (sklearn/utils/validation.py:947) (11 samples, 3.56%)</title><rect x="143" y="212" width="42" height="15" fill="rgb(210,149,39)"/><text x="146.00" y="222.50">che..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py:949) (2 samples, 0.65%)</title><rect x="178" y="228" width="7" height="15" fill="rgb(229,170,11)"/><text x="181.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:418) (14 samples, 4.53%)</title><rect x="136" y="196" width="53" height="15" fill="rgb(245,63,23)"/><text x="139.00" y="206.50">predi..</text></g><g><title>check_is_fitted (sklearn/utils/validation.py:951) (1 samples, 0.32%)</title><rect x="185" y="212" width="4" height="15" fill="rgb(245,107,5)"/><text x="188.00" y="222.50"></text></g><g><title>check_array (sklearn/utils/validation.py:448) (1 samples, 0.32%)</title><rect x="197" y="228" width="3" height="15" fill="rgb(218,79,13)"/><text x="200.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:468) (1 samples, 0.32%)</title><rect x="200" y="228" width="4" height="15" fill="rgb(229,31,21)"/><text x="203.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:477) (1 samples, 0.32%)</title><rect x="204" y="228" width="4" height="15" fill="rgb(217,133,28)"/><text x="207.00" y="238.50"></text></g><g><title>check_array (sklearn/utils/validation.py:490) (2 samples, 0.65%)</title><rect x="208" y="228" width="8" height="15" fill="rgb(247,77,20)"/><text x="211.00" y="238.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py:1216) (2 samples, 0.65%)</title><rect x="208" y="244" width="8" height="15" fill="rgb(237,224,3)"/><text x="211.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:478) (1 samples, 0.32%)</title><rect x="216" y="244" width="4" height="15" fill="rgb(246,178,27)"/><text x="219.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:479) (1 samples, 0.32%)</title><rect x="220" y="244" width="3" height="15" fill="rgb(222,202,44)"/><text x="223.00" y="254.50"></text></g><g><title>__enter__ (warnings.py:480) (1 samples, 0.32%)</title><rect x="223" y="244" width="4" height="15" fill="rgb(243,220,49)"/><text x="226.00" y="254.50"></text></g><g><title>__init__ (warnings.py:461) (1 samples, 0.32%)</title><rect x="227" y="244" width="4" height="15" fill="rgb(231,44,13)"/><text x="230.00" y="254.50"></text></g><g><title>0x7fe5413f118b (libc-2.29.so) (1 samples, 0.32%)</title><rect x="227" y="260" width="4" height="15" fill="rgb(241,216,27)"/><text x="230.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:502) (5 samples, 1.62%)</title><rect x="216" y="228" width="19" height="15" fill="rgb(221,71,32)"/><text x="219.00" y="238.50"></text></g><g><title>__init__ (warnings.py:463) (1 samples, 0.32%)</title><rect x="231" y="244" width="4" height="15" fill="rgb(229,39,26)"/><text x="234.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:186) (4 samples, 1.29%)</title><rect x="235" y="260" width="15" height="15" fill="rgb(216,138,1)"/><text x="238.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:504) (5 samples, 1.62%)</title><rect x="235" y="228" width="19" height="15" fill="rgb(212,218,44)"/><text x="238.00" y="238.50"></text></g><g><title>simplefilter (warnings.py:179) (5 samples, 1.62%)</title><rect x="235" y="244" width="19" height="15" fill="rgb(217,163,42)"/><text x="238.00" y="254.50"></text></g><g><title>_add_filter (warnings.py:188) (1 samples, 0.32%)</title><rect x="250" y="260" width="4" height="15" fill="rgb(208,129,42)"/><text x="253.00" y="270.50"></text></g><g><title>arraydescr_new (descriptor.c:2270) (1 samples, 0.32%)</title><rect x="269" y="244" width="4" height="15" fill="rgb(205,175,33)"/><text x="272.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:505) (6 samples, 1.94%)</title><rect x="254" y="228" width="23" height="15" fill="rgb(232,15,30)"/><text x="257.00" y="238.50">c..</text></g><g><title>arraydescr_new (descriptor.c:2283) (1 samples, 0.32%)</title><rect x="273" y="244" width="4" height="15" fill="rgb(252,144,3)"/><text x="276.00" y="254.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.32%)</title><rect x="273" y="260" width="4" height="15" fill="rgb(247,31,23)"/><text x="276.00" y="270.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.32%)</title><rect x="273" y="276" width="4" height="15" fill="rgb(245,53,16)"/><text x="276.00" y="286.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.32%)</title><rect x="273" y="292" width="4" height="15" fill="rgb(232,163,40)"/><text x="276.00" y="302.50"></text></g><g><title>check_array (sklearn/utils/validation.py:515) (3 samples, 0.97%)</title><rect x="277" y="228" width="11" height="15" fill="rgb(253,216,46)"/><text x="280.00" y="238.50"></text></g><g><title>asarray (numpy/core/_asarray.py:85) (1 samples, 0.32%)</title><rect x="284" y="244" width="4" height="15" fill="rgb(253,78,7)"/><text x="287.00" y="254.50"></text></g><g><title>_array_fromobject (multiarraymodule.c:1664) (1 samples, 0.32%)</title><rect x="284" y="260" width="4" height="15" fill="rgb(236,223,51)"/><text x="287.00" y="270.50"></text></g><g><title>PyArray_DescrConverter2 (descriptor.c:1364) (1 samples, 0.32%)</title><rect x="284" y="276" width="4" height="15" fill="rgb(224,7,24)"/><text x="287.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.32%)</title><rect x="284" y="292" width="4" height="15" fill="rgb(253,166,50)"/><text x="287.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:427) (1 samples, 0.32%)</title><rect x="284" y="308" width="4" height="15" fill="rgb(230,46,8)"/><text x="287.00" y="318.50"></text></g><g><title>check_array (sklearn/utils/validation.py:524) (2 samples, 0.65%)</title><rect x="288" y="228" width="8" height="15" fill="rgb(251,131,27)"/><text x="291.00" y="238.50"></text></g><g><title>_ensure_no_complex_data (sklearn/utils/validation.py:333) (1 samples, 0.32%)</title><rect x="292" y="244" width="4" height="15" fill="rgb(239,211,36)"/><text x="295.00" y="254.50"></text></g><g><title>check_array (sklearn/utils/validation.py:535) (1 samples, 0.32%)</title><rect x="296" y="228" width="4" height="15" fill="rgb(239,186,28)"/><text x="299.00" y="238.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1019) (3 samples, 0.97%)</title><rect x="315" y="260" width="11" height="15" fill="rgb(205,8,10)"/><text x="318.00" y="270.50"></text></g><g><title>check_array (sklearn/utils/validation.py:562) (8 samples, 2.59%)</title><rect x="300" y="228" width="30" height="15" fill="rgb(241,229,50)"/><text x="303.00" y="238.50">ch..</text></g><g><title>_assert_all_finite (sklearn/utils/validation.py:40) (8 samples, 2.59%)</title><rect x="300" y="244" width="30" height="15" fill="rgb(243,84,21)"/><text x="303.00" y="254.50">_a..</text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;:420) (1 samples, 0.32%)</title><rect x="326" y="260" width="4" height="15" fill="rgb(213,134,21)"/><text x="329.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.65%)</title><rect x="330" y="244" width="8" height="15" fill="rgb(232,84,54)"/><text x="333.00" y="254.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:143) (1 samples, 0.32%)</title><rect x="338" y="244" width="4" height="15" fill="rgb(229,226,13)"/><text x="341.00" y="254.50"></text></g><g><title>predict (sklearn/tree/_classes.py:419) (44 samples, 14.24%)</title><rect x="189" y="196" width="168" height="15" fill="rgb(216,129,26)"/><text x="192.00" y="206.50">predict (sklearn/tree..</text></g><g><title>_validate_X_predict (sklearn/tree/_classes.py:380) (42 samples, 13.59%)</title><rect x="197" y="212" width="160" height="15" fill="rgb(225,38,44)"/><text x="200.00" y="222.50">_validate_X_predict ..</text></g><g><title>check_array (sklearn/utils/validation.py:565) (7 samples, 2.27%)</title><rect x="330" y="228" width="27" height="15" fill="rgb(216,171,20)"/><text x="333.00" y="238.50">c..</text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (4 samples, 1.29%)</title><rect x="342" y="244" width="15" height="15" fill="rgb(221,214,52)"/><text x="345.00" y="254.50"></text></g><g><title>__instancecheck__ (abc.py:139) (3 samples, 0.97%)</title><rect x="346" y="260" width="11" height="15" fill="rgb(213,229,51)"/><text x="349.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.32%)</title><rect x="361" y="276" width="4" height="15" fill="rgb(206,53,42)"/><text x="364.00" y="286.50"></text></g><g><title>0x7fe51ae03d33 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="361" y="244" width="7" height="15" fill="rgb(214,62,49)"/><text x="364.00" y="254.50"></text></g><g><title>PyArray_New (ctors.c:1378) (2 samples, 0.65%)</title><rect x="361" y="260" width="7" height="15" fill="rgb(235,164,10)"/><text x="364.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:961) (1 samples, 0.32%)</title><rect x="365" y="276" width="3" height="15" fill="rgb(251,73,21)"/><text x="368.00" y="286.50"></text></g><g><title>0x7fe51ae13f55 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.97%)</title><rect x="361" y="228" width="11" height="15" fill="rgb(211,183,8)"/><text x="364.00" y="238.50"></text></g><g><title>0x7fe51ae03d7b (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="368" y="244" width="4" height="15" fill="rgb(214,76,41)"/><text x="371.00" y="254.50"></text></g><g><title>0x7fe51adf0bbb (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="368" y="260" width="4" height="15" fill="rgb(217,214,1)"/><text x="371.00" y="270.50"></text></g><g><title>0x7fe51adf7d60 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="368" y="276" width="4" height="15" fill="rgb(232,61,12)"/><text x="371.00" y="286.50"></text></g><g><title>0x7fe51ae13f81 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="372" y="228" width="4" height="15" fill="rgb(246,86,42)"/><text x="375.00" y="238.50"></text></g><g><title>0x7fe51ae221dd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="376" y="260" width="4" height="15" fill="rgb(221,118,29)"/><text x="379.00" y="270.50"></text></g><g><title>array_descr_get (getset.c:208) (1 samples, 0.32%)</title><rect x="376" y="276" width="4" height="15" fill="rgb(240,200,10)"/><text x="379.00" y="286.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3214) (1 samples, 0.32%)</title><rect x="380" y="276" width="4" height="15" fill="rgb(240,226,22)"/><text x="383.00" y="286.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c:1408) (1 samples, 0.32%)</title><rect x="380" y="292" width="4" height="15" fill="rgb(208,55,7)"/><text x="383.00" y="302.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c:433) (1 samples, 0.32%)</title><rect x="380" y="308" width="4" height="15" fill="rgb(231,175,21)"/><text x="383.00" y="318.50"></text></g><g><title>_typenum_fromtypeobj (scalartypes.c.src:4593) (1 samples, 0.32%)</title><rect x="380" y="324" width="4" height="15" fill="rgb(212,189,41)"/><text x="383.00" y="334.50"></text></g><g><title>0x7fe51ae22225 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="380" y="260" width="8" height="15" fill="rgb(206,227,21)"/><text x="383.00" y="270.50"></text></g><g><title>arraydescr_richcompare (descriptor.c:3222) (1 samples, 0.32%)</title><rect x="384" y="276" width="4" height="15" fill="rgb(242,74,10)"/><text x="387.00" y="286.50"></text></g><g><title>0x7fe51ae22289 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="388" y="260" width="3" height="15" fill="rgb(211,169,20)"/><text x="391.00" y="270.50"></text></g><g><title>0x7fe51adfc10c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="391" y="308" width="4" height="15" fill="rgb(247,123,7)"/><text x="394.00" y="318.50"></text></g><g><title>_buffer_get_info (buffer.c:653) (1 samples, 0.32%)</title><rect x="395" y="340" width="4" height="15" fill="rgb(212,130,38)"/><text x="398.00" y="350.50"></text></g><g><title>_buffer_info_new (buffer.c:584) (1 samples, 0.32%)</title><rect x="395" y="356" width="4" height="15" fill="rgb(252,33,49)"/><text x="398.00" y="366.50"></text></g><g><title>_buffer_format_string (buffer.c:433) (1 samples, 0.32%)</title><rect x="395" y="372" width="4" height="15" fill="rgb(228,59,38)"/><text x="398.00" y="382.50"></text></g><g><title>_append_char (buffer.c:121) (1 samples, 0.32%)</title><rect x="395" y="388" width="4" height="15" fill="rgb(248,214,45)"/><text x="398.00" y="398.50"></text></g><g><title>realloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="395" y="404" width="4" height="15" fill="rgb(237,145,22)"/><text x="398.00" y="414.50"></text></g><g><title>0x7fe51ae06d04 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.97%)</title><rect x="391" y="276" width="12" height="15" fill="rgb(251,10,40)"/><text x="394.00" y="286.50"></text></g><g><title>0x7fe51ae06666 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (3 samples, 0.97%)</title><rect x="391" y="292" width="12" height="15" fill="rgb(242,91,1)"/><text x="394.00" y="302.50"></text></g><g><title>0x7fe51adfc2fd (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="395" y="308" width="8" height="15" fill="rgb(235,15,42)"/><text x="398.00" y="318.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.65%)</title><rect x="395" y="324" width="8" height="15" fill="rgb(206,195,20)"/><text x="398.00" y="334.50"></text></g><g><title>_buffer_get_info (buffer.c:669) (1 samples, 0.32%)</title><rect x="399" y="340" width="4" height="15" fill="rgb(230,61,43)"/><text x="402.00" y="350.50"></text></g><g><title>0x7fe51ae222df (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.29%)</title><rect x="391" y="260" width="16" height="15" fill="rgb(212,168,24)"/><text x="394.00" y="270.50"></text></g><g><title>0x7fe51ae06e72 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="403" y="276" width="4" height="15" fill="rgb(211,229,1)"/><text x="406.00" y="286.50"></text></g><g><title>0x7fe51adfa022 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="403" y="292" width="4" height="15" fill="rgb(211,78,31)"/><text x="406.00" y="302.50"></text></g><g><title>0x7fe51ae2253e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="407" y="260" width="3" height="15" fill="rgb(228,71,20)"/><text x="410.00" y="270.50"></text></g><g><title>0x7fe51ae22592 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="410" y="260" width="8" height="15" fill="rgb(233,109,53)"/><text x="413.00" y="270.50"></text></g><g><title>array_zeros (multiarraymodule.c:1973) (2 samples, 0.65%)</title><rect x="410" y="276" width="8" height="15" fill="rgb(236,170,47)"/><text x="413.00" y="286.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.32%)</title><rect x="414" y="292" width="4" height="15" fill="rgb(229,184,17)"/><text x="417.00" y="302.50"></text></g><g><title>0x7fe51ae2259c (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="418" y="260" width="4" height="15" fill="rgb(250,114,11)"/><text x="421.00" y="270.50"></text></g><g><title>0x7fe51ae226aa (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="422" y="260" width="4" height="15" fill="rgb(211,32,14)"/><text x="425.00" y="270.50"></text></g><g><title>_buffer_get_info (buffer.c:682) (1 samples, 0.32%)</title><rect x="426" y="308" width="4" height="15" fill="rgb(244,94,8)"/><text x="429.00" y="318.50"></text></g><g><title>0x7fe51ae13fa6 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.85%)</title><rect x="376" y="228" width="57" height="15" fill="rgb(230,31,12)"/><text x="379.00" y="238.50">0x7fe5..</text></g><g><title>0x7fe51ae23405 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (15 samples, 4.85%)</title><rect x="376" y="244" width="57" height="15" fill="rgb(245,25,25)"/><text x="379.00" y="254.50">0x7fe5..</text></g><g><title>0x7fe51ae22c27 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="426" y="260" width="7" height="15" fill="rgb(217,143,50)"/><text x="429.00" y="270.50"></text></g><g><title>0x7fe51adfa529 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="426" y="276" width="7" height="15" fill="rgb(221,194,32)"/><text x="429.00" y="286.50"></text></g><g><title>array_getbuffer (buffer.c:782) (2 samples, 0.65%)</title><rect x="426" y="292" width="7" height="15" fill="rgb(250,83,11)"/><text x="429.00" y="302.50"></text></g><g><title>_buffer_get_info (buffer.c:694) (1 samples, 0.32%)</title><rect x="430" y="308" width="3" height="15" fill="rgb(223,171,23)"/><text x="433.00" y="318.50"></text></g><g><title>array_take (methods.c:138) (1 samples, 0.32%)</title><rect x="433" y="244" width="4" height="15" fill="rgb(206,16,33)"/><text x="436.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:234) (1 samples, 0.32%)</title><rect x="437" y="260" width="4" height="15" fill="rgb(217,203,2)"/><text x="440.00" y="270.50"></text></g><g><title>DOUBLE_fasttake (arraytypes.c.src:3948) (1 samples, 0.32%)</title><rect x="437" y="276" width="4" height="15" fill="rgb(250,198,23)"/><text x="440.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c:1844) (1 samples, 0.32%)</title><rect x="441" y="308" width="4" height="15" fill="rgb(249,130,41)"/><text x="444.00" y="318.50"></text></g><g><title>0x7fe51ae1405a (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (4 samples, 1.29%)</title><rect x="433" y="228" width="16" height="15" fill="rgb(216,201,22)"/><text x="436.00" y="238.50"></text></g><g><title>array_take (methods.c:145) (3 samples, 0.97%)</title><rect x="437" y="244" width="12" height="15" fill="rgb(241,16,51)"/><text x="440.00" y="254.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:49) (2 samples, 0.65%)</title><rect x="441" y="260" width="8" height="15" fill="rgb(208,98,38)"/><text x="444.00" y="270.50"></text></g><g><title>PyArray_CheckAxis (ctors.c:3031) (2 samples, 0.65%)</title><rect x="441" y="276" width="8" height="15" fill="rgb(214,13,46)"/><text x="444.00" y="286.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c:2041) (2 samples, 0.65%)</title><rect x="441" y="292" width="8" height="15" fill="rgb(235,199,15)"/><text x="444.00" y="302.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.32%)</title><rect x="445" y="308" width="4" height="15" fill="rgb(245,120,11)"/><text x="448.00" y="318.50"></text></g><g><title>PyArray_FromArray (ctors.c:2073) (1 samples, 0.32%)</title><rect x="445" y="324" width="4" height="15" fill="rgb(230,28,40)"/><text x="448.00" y="334.50"></text></g><g><title>0x7fe51ae1414f (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="449" y="228" width="3" height="15" fill="rgb(235,138,10)"/><text x="452.00" y="238.50"></text></g><g><title>0x7fe51ae14163 (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (2 samples, 0.65%)</title><rect x="452" y="228" width="8" height="15" fill="rgb(254,38,14)"/><text x="455.00" y="238.50"></text></g><g><title>predict (sklearn/tree/_classes.py:420) (28 samples, 9.06%)</title><rect x="357" y="196" width="107" height="15" fill="rgb(237,194,15)"/><text x="360.00" y="206.50">predict (skle..</text></g><g><title>0x7fe51ae14d2e (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (27 samples, 8.74%)</title><rect x="361" y="212" width="103" height="15" fill="rgb(220,39,22)"/><text x="364.00" y="222.50">0x7fe51ae14d..</text></g><g><title>0x7fe51ae141bf (sklearn/tree/_tree.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.32%)</title><rect x="460" y="228" width="4" height="15" fill="rgb(210,43,43)"/><text x="463.00" y="238.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.32%)</title><rect x="460" y="244" width="4" height="15" fill="rgb(227,88,34)"/><text x="463.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.py:1096) (92 samples, 29.77%)</title><rect x="124" y="180" width="351" height="15" fill="rgb(221,108,32)"/><text x="127.00" y="190.50">&lt;listcomp&gt; (sklearn/ensemble/_weight_boosting.p..</text></g><g><title>predict (sklearn/tree/_classes.py:424) (3 samples, 0.97%)</title><rect x="464" y="196" width="11" height="15" fill="rgb(209,15,2)"/><text x="467.00" y="206.50"></text></g><g><title>is_classifier (sklearn/base.py:652) (1 samples, 0.32%)</title><rect x="472" y="212" width="3" height="15" fill="rgb(251,182,35)"/><text x="475.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1096) (93 samples, 30.10%)</title><rect x="124" y="164" width="355" height="15" fill="rgb(223,144,29)"/><text x="127.00" y="174.50">_get_median_predict (sklearn/ensemble/_weight_bo..</text></g><g><title>array_dealloc (arrayobject.c:520) (1 samples, 0.32%)</title><rect x="475" y="180" width="4" height="15" fill="rgb(251,91,23)"/><text x="478.00" y="190.50"></text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.32%)</title><rect x="475" y="196" width="4" height="15" fill="rgb(249,171,51)"/><text x="478.00" y="206.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.32%)</title><rect x="475" y="212" width="4" height="15" fill="rgb(253,79,33)"/><text x="478.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1099) (4 samples, 1.29%)</title><rect x="479" y="164" width="15" height="15" fill="rgb(212,203,36)"/><text x="482.00" y="174.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (3 samples, 0.97%)</title><rect x="483" y="180" width="11" height="15" fill="rgb(246,72,44)"/><text x="486.00" y="190.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.97%)</title><rect x="483" y="196" width="11" height="15" fill="rgb(248,199,25)"/><text x="486.00" y="206.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (2 samples, 0.65%)</title><rect x="487" y="212" width="7" height="15" fill="rgb(214,175,15)"/><text x="490.00" y="222.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (2 samples, 0.65%)</title><rect x="487" y="228" width="7" height="15" fill="rgb(239,221,21)"/><text x="490.00" y="238.50"></text></g><g><title>array_argsort (methods.c:1360) (2 samples, 0.65%)</title><rect x="487" y="244" width="7" height="15" fill="rgb(234,9,39)"/><text x="490.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.32%)</title><rect x="494" y="180" width="4" height="15" fill="rgb(253,20,7)"/><text x="497.00" y="190.50"></text></g><g><title>prepare_index (mapping.c:791) (1 samples, 0.32%)</title><rect x="494" y="196" width="4" height="15" fill="rgb(233,48,34)"/><text x="497.00" y="206.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:259) (2 samples, 0.65%)</title><rect x="498" y="292" width="8" height="15" fill="rgb(235,225,45)"/><text x="501.00" y="302.50"></text></g><g><title>_get_keywords (number.c:208) (2 samples, 0.65%)</title><rect x="498" y="308" width="8" height="15" fill="rgb(219,169,22)"/><text x="501.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (1 samples, 0.32%)</title><rect x="506" y="292" width="4" height="15" fill="rgb(246,97,40)"/><text x="509.00" y="302.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (1 samples, 0.32%)</title><rect x="506" y="308" width="4" height="15" fill="rgb(236,105,44)"/><text x="509.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (1 samples, 0.32%)</title><rect x="506" y="324" width="4" height="15" fill="rgb(205,112,35)"/><text x="509.00" y="334.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (1 samples, 0.32%)</title><rect x="506" y="340" width="4" height="15" fill="rgb(234,89,20)"/><text x="509.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="506" y="356" width="4" height="15" fill="rgb(212,90,19)"/><text x="509.00" y="366.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2995) (1 samples, 0.32%)</title><rect x="506" y="372" width="4" height="15" fill="rgb(233,76,42)"/><text x="509.00" y="382.50"></text></g><g><title>IsUintAligned (array_assign.c:148) (1 samples, 0.32%)</title><rect x="506" y="388" width="4" height="15" fill="rgb(206,161,52)"/><text x="509.00" y="398.50"></text></g><g><title>raw_array_is_aligned (array_assign.c:113) (1 samples, 0.32%)</title><rect x="506" y="404" width="4" height="15" fill="rgb(248,62,17)"/><text x="509.00" y="414.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:825) (4 samples, 1.29%)</title><rect x="498" y="180" width="16" height="15" fill="rgb(243,218,31)"/><text x="501.00" y="190.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (4 samples, 1.29%)</title><rect x="498" y="196" width="16" height="15" fill="rgb(229,87,1)"/><text x="501.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (4 samples, 1.29%)</title><rect x="498" y="212" width="16" height="15" fill="rgb(234,40,36)"/><text x="501.00" y="222.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (4 samples, 1.29%)</title><rect x="498" y="228" width="16" height="15" fill="rgb(251,134,6)"/><text x="501.00" y="238.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (4 samples, 1.29%)</title><rect x="498" y="244" width="16" height="15" fill="rgb(249,192,6)"/><text x="501.00" y="254.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 1.29%)</title><rect x="498" y="260" width="16" height="15" fill="rgb(217,211,13)"/><text x="501.00" y="270.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 1.29%)</title><rect x="498" y="276" width="16" height="15" fill="rgb(213,88,18)"/><text x="501.00" y="286.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:266) (1 samples, 0.32%)</title><rect x="510" y="292" width="4" height="15" fill="rgb(250,187,16)"/><text x="513.00" y="302.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:74) (1 samples, 0.32%)</title><rect x="517" y="244" width="4" height="15" fill="rgb(209,61,32)"/><text x="520.00" y="254.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:74) (1 samples, 0.32%)</title><rect x="517" y="260" width="4" height="15" fill="rgb(235,184,27)"/><text x="520.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.32%)</title><rect x="521" y="276" width="4" height="15" fill="rgb(219,35,54)"/><text x="524.00" y="286.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.32%)</title><rect x="521" y="292" width="4" height="15" fill="rgb(252,65,45)"/><text x="524.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (1 samples, 0.32%)</title><rect x="525" y="308" width="4" height="15" fill="rgb(226,4,10)"/><text x="528.00" y="318.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (1 samples, 0.32%)</title><rect x="525" y="324" width="4" height="15" fill="rgb(244,44,45)"/><text x="528.00" y="334.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.32%)</title><rect x="525" y="340" width="4" height="15" fill="rgb(248,160,28)"/><text x="528.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="525" y="356" width="4" height="15" fill="rgb(209,190,6)"/><text x="528.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1151) (1 samples, 0.32%)</title><rect x="525" y="372" width="4" height="15" fill="rgb(254,13,34)"/><text x="528.00" y="382.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:368) (1 samples, 0.32%)</title><rect x="529" y="324" width="4" height="15" fill="rgb(224,19,32)"/><text x="532.00" y="334.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:36) (1 samples, 0.32%)</title><rect x="533" y="356" width="3" height="15" fill="rgb(208,77,24)"/><text x="536.00" y="366.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c:3506) (1 samples, 0.32%)</title><rect x="536" y="372" width="4" height="15" fill="rgb(222,217,26)"/><text x="539.00" y="382.50"></text></g><g><title>PyArray_EquivTypenums (multiarraymodule.c:1521) (1 samples, 0.32%)</title><rect x="536" y="388" width="4" height="15" fill="rgb(243,17,52)"/><text x="539.00" y="398.50"></text></g><g><title>PyArray_EquivTypes (multiarraymodule.c:1476) (1 samples, 0.32%)</title><rect x="536" y="404" width="4" height="15" fill="rgb(217,96,3)"/><text x="539.00" y="414.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4482) (1 samples, 0.32%)</title><rect x="536" y="420" width="4" height="15" fill="rgb(238,150,21)"/><text x="539.00" y="430.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:491) (4 samples, 1.29%)</title><rect x="529" y="308" width="15" height="15" fill="rgb(221,106,3)"/><text x="532.00" y="318.50"></text></g><g><title>PyArray_FillWithScalar (convert.c:511) (3 samples, 0.97%)</title><rect x="533" y="324" width="11" height="15" fill="rgb(219,78,38)"/><text x="536.00" y="334.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c:269) (3 samples, 0.97%)</title><rect x="533" y="340" width="11" height="15" fill="rgb(241,147,20)"/><text x="536.00" y="350.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c:66) (2 samples, 0.65%)</title><rect x="536" y="356" width="8" height="15" fill="rgb(228,88,25)"/><text x="539.00" y="366.50"></text></g><g><title>get_nbo_cast_numeric_transfer_function (dtype_transfer.c:741) (1 samples, 0.32%)</title><rect x="540" y="372" width="4" height="15" fill="rgb(249,53,11)"/><text x="543.00" y="382.50"></text></g><g><title>PyArray_GetStridedNumericCastFn (lowlevel_strided_loops.c.src:955) (1 samples, 0.32%)</title><rect x="540" y="388" width="4" height="15" fill="rgb(239,196,46)"/><text x="543.00" y="398.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:826) (9 samples, 2.91%)</title><rect x="514" y="180" width="34" height="15" fill="rgb(206,51,35)"/><text x="517.00" y="190.50">st..</text></g><g><title>sum (&lt;__array_function__ internals&gt;:6) (9 samples, 2.91%)</title><rect x="514" y="196" width="34" height="15" fill="rgb(206,71,20)"/><text x="517.00" y="206.50">su..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (9 samples, 2.91%)</title><rect x="514" y="212" width="34" height="15" fill="rgb(210,64,2)"/><text x="517.00" y="222.50">ar..</text></g><g><title>sum (numpy/core/fromnumeric.py:2182) (9 samples, 2.91%)</title><rect x="514" y="228" width="34" height="15" fill="rgb(218,228,51)"/><text x="517.00" y="238.50">su..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (7 samples, 2.27%)</title><rect x="521" y="244" width="27" height="15" fill="rgb(231,214,31)"/><text x="524.00" y="254.50">_..</text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (7 samples, 2.27%)</title><rect x="521" y="260" width="27" height="15" fill="rgb(227,123,41)"/><text x="524.00" y="270.50">u..</text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (6 samples, 1.94%)</title><rect x="525" y="276" width="23" height="15" fill="rgb(216,105,51)"/><text x="528.00" y="286.50">P..</text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (6 samples, 1.94%)</title><rect x="525" y="292" width="23" height="15" fill="rgb(206,22,25)"/><text x="528.00" y="302.50">P..</text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:543) (1 samples, 0.32%)</title><rect x="544" y="308" width="4" height="15" fill="rgb(254,180,51)"/><text x="547.00" y="318.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="544" y="324" width="4" height="15" fill="rgb(220,201,21)"/><text x="547.00" y="334.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.32%)</title><rect x="544" y="340" width="4" height="15" fill="rgb(233,81,49)"/><text x="547.00" y="350.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1082) (1 samples, 0.32%)</title><rect x="544" y="356" width="4" height="15" fill="rgb(219,91,52)"/><text x="547.00" y="366.50"></text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:827) (1 samples, 0.32%)</title><rect x="548" y="180" width="4" height="15" fill="rgb(241,151,53)"/><text x="551.00" y="190.50"></text></g><g><title>array_take (methods.c:145) (1 samples, 0.32%)</title><rect x="548" y="196" width="4" height="15" fill="rgb(220,156,47)"/><text x="551.00" y="206.50"></text></g><g><title>PyArray_TakeFrom (item_selection.c:55) (1 samples, 0.32%)</title><rect x="548" y="212" width="4" height="15" fill="rgb(235,171,50)"/><text x="551.00" y="222.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.32%)</title><rect x="548" y="228" width="4" height="15" fill="rgb(251,172,50)"/><text x="551.00" y="238.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.32%)</title><rect x="548" y="244" width="4" height="15" fill="rgb(230,8,8)"/><text x="551.00" y="254.50"></text></g><g><title>LONG_setitem (arraytypes.c.src:216) (1 samples, 0.32%)</title><rect x="548" y="260" width="4" height="15" fill="rgb(241,126,25)"/><text x="551.00" y="270.50"></text></g><g><title>MyPyLong_AsLong (arraytypes.c.src:123) (1 samples, 0.32%)</title><rect x="548" y="276" width="4" height="15" fill="rgb(222,185,16)"/><text x="551.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.32%)</title><rect x="556" y="292" width="3" height="15" fill="rgb(227,214,17)"/><text x="559.00" y="302.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3428) (1 samples, 0.32%)</title><rect x="556" y="308" width="3" height="15" fill="rgb(249,177,40)"/><text x="559.00" y="318.50"></text></g><g><title>PyUFunc_SimpleBinaryComparisonTypeResolver (ufunc_type_resolution.c:421) (1 samples, 0.32%)</title><rect x="556" y="324" width="3" height="15" fill="rgb(211,141,13)"/><text x="559.00" y="334.50"></text></g><g><title>type_tuple_type_resolver (ufunc_type_resolution.c:2215) (1 samples, 0.32%)</title><rect x="556" y="340" width="3" height="15" fill="rgb(222,16,12)"/><text x="559.00" y="350.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c:1631) (1 samples, 0.32%)</title><rect x="556" y="356" width="3" height="15" fill="rgb(229,97,9)"/><text x="559.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (2 samples, 0.65%)</title><rect x="556" y="276" width="7" height="15" fill="rgb(242,97,44)"/><text x="559.00" y="286.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (1 samples, 0.32%)</title><rect x="559" y="292" width="4" height="15" fill="rgb(247,126,17)"/><text x="562.00" y="302.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:550) (1 samples, 0.32%)</title><rect x="559" y="308" width="4" height="15" fill="rgb(208,190,47)"/><text x="562.00" y="318.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src:813) (1 samples, 0.32%)</title><rect x="559" y="324" width="4" height="15" fill="rgb(215,225,21)"/><text x="562.00" y="334.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src:803) (1 samples, 0.32%)</title><rect x="559" y="340" width="4" height="15" fill="rgb(234,139,51)"/><text x="562.00" y="350.50"></text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (3 samples, 0.97%)</title><rect x="556" y="196" width="11" height="15" fill="rgb(206,118,28)"/><text x="559.00" y="206.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.97%)</title><rect x="556" y="212" width="11" height="15" fill="rgb(222,184,16)"/><text x="559.00" y="222.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2351) (3 samples, 0.97%)</title><rect x="556" y="228" width="11" height="15" fill="rgb(211,115,52)"/><text x="559.00" y="238.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (3 samples, 0.97%)</title><rect x="556" y="244" width="11" height="15" fill="rgb(205,198,0)"/><text x="559.00" y="254.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (3 samples, 0.97%)</title><rect x="556" y="260" width="11" height="15" fill="rgb(221,127,28)"/><text x="559.00" y="270.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4664) (1 samples, 0.32%)</title><rect x="563" y="276" width="4" height="15" fill="rgb(231,140,2)"/><text x="566.00" y="286.50"></text></g><g><title>isclose (&lt;__array_function__ internals&gt;:4) (1 samples, 0.32%)</title><rect x="567" y="196" width="4" height="15" fill="rgb(211,106,49)"/><text x="570.00" y="206.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;:4) (1 samples, 0.32%)</title><rect x="571" y="244" width="4" height="15" fill="rgb(243,41,3)"/><text x="574.00" y="254.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1905) (1 samples, 0.32%)</title><rect x="575" y="292" width="3" height="15" fill="rgb(235,86,44)"/><text x="578.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c:1043) (1 samples, 0.32%)</title><rect x="575" y="308" width="3" height="15" fill="rgb(224,215,10)"/><text x="578.00" y="318.50"></text></g><g><title>PyArray_PromoteTypes (convert_datatype.c:1070) (1 samples, 0.32%)</title><rect x="575" y="324" width="3" height="15" fill="rgb(214,8,45)"/><text x="578.00" y="334.50"></text></g><g><title>isclose (numpy/core/numeric.py:2266) (3 samples, 0.97%)</title><rect x="571" y="228" width="11" height="15" fill="rgb(254,117,0)"/><text x="574.00" y="238.50"></text></g><g><title>result_type (&lt;__array_function__ internals&gt;:6) (2 samples, 0.65%)</title><rect x="575" y="244" width="7" height="15" fill="rgb(227,7,35)"/><text x="578.00" y="254.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (2 samples, 0.65%)</title><rect x="575" y="260" width="7" height="15" fill="rgb(209,2,12)"/><text x="578.00" y="270.50"></text></g><g><title>array_result_type (multiarraymodule.c:3259) (2 samples, 0.65%)</title><rect x="575" y="276" width="7" height="15" fill="rgb(212,222,0)"/><text x="578.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1919) (1 samples, 0.32%)</title><rect x="578" y="292" width="4" height="15" fill="rgb(214,74,22)"/><text x="581.00" y="302.50"></text></g><g><title>isclose (numpy/core/numeric.py:2267) (1 samples, 0.32%)</title><rect x="582" y="228" width="4" height="15" fill="rgb(228,211,2)"/><text x="585.00" y="238.50"></text></g><g><title>0x7fe5413f1120 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="594" y="244" width="4" height="15" fill="rgb(212,37,46)"/><text x="597.00" y="254.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:77) (1 samples, 0.32%)</title><rect x="601" y="292" width="4" height="15" fill="rgb(246,44,29)"/><text x="604.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5515) (1 samples, 0.32%)</title><rect x="605" y="308" width="4" height="15" fill="rgb(221,122,23)"/><text x="608.00" y="318.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.32%)</title><rect x="605" y="324" width="4" height="15" fill="rgb(218,30,33)"/><text x="608.00" y="334.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.32%)</title><rect x="605" y="340" width="4" height="15" fill="rgb(211,73,32)"/><text x="608.00" y="350.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.32%)</title><rect x="605" y="356" width="4" height="15" fill="rgb(220,98,46)"/><text x="608.00" y="366.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4501) (1 samples, 0.32%)</title><rect x="609" y="324" width="4" height="15" fill="rgb(212,60,42)"/><text x="612.00" y="334.50"></text></g><g><title>PyArray_OutputConverter (conversion_utils.c:64) (1 samples, 0.32%)</title><rect x="609" y="340" width="4" height="15" fill="rgb(215,49,44)"/><text x="612.00" y="350.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3658) (1 samples, 0.32%)</title><rect x="613" y="340" width="4" height="15" fill="rgb(208,199,53)"/><text x="616.00" y="350.50"></text></g><g><title>reduce_type_resolver (ufunc_object.c:3445) (1 samples, 0.32%)</title><rect x="613" y="356" width="4" height="15" fill="rgb(215,50,54)"/><text x="616.00" y="366.50"></text></g><g><title>allocate_reduce_result (reduction.c:57) (1 samples, 0.32%)</title><rect x="617" y="388" width="4" height="15" fill="rgb(230,146,22)"/><text x="620.00" y="398.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.32%)</title><rect x="617" y="404" width="4" height="15" fill="rgb(247,189,15)"/><text x="620.00" y="414.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.32%)</title><rect x="617" y="420" width="4" height="15" fill="rgb(242,11,17)"/><text x="620.00" y="430.50"></text></g><g><title>isclose (numpy/core/numeric.py:2271) (10 samples, 3.24%)</title><rect x="586" y="228" width="38" height="15" fill="rgb(245,127,48)"/><text x="589.00" y="238.50">isc..</text></g><g><title>all (&lt;__array_function__ internals&gt;:6) (7 samples, 2.27%)</title><rect x="598" y="244" width="26" height="15" fill="rgb(219,15,47)"/><text x="601.00" y="254.50">a..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (6 samples, 1.94%)</title><rect x="601" y="260" width="23" height="15" fill="rgb(240,35,42)"/><text x="604.00" y="270.50">a..</text></g><g><title>all (numpy/core/fromnumeric.py:2351) (6 samples, 1.94%)</title><rect x="601" y="276" width="23" height="15" fill="rgb(206,24,16)"/><text x="604.00" y="286.50">a..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:90) (5 samples, 1.62%)</title><rect x="605" y="292" width="19" height="15" fill="rgb(249,223,12)"/><text x="608.00" y="302.50"></text></g><g><title>ufunc_reduce (ufunc_object.c:5521) (4 samples, 1.29%)</title><rect x="609" y="308" width="15" height="15" fill="rgb(231,7,43)"/><text x="612.00" y="318.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4632) (3 samples, 0.97%)</title><rect x="613" y="324" width="11" height="15" fill="rgb(232,85,54)"/><text x="616.00" y="334.50"></text></g><g><title>PyUFunc_Reduce (ufunc_object.c:3671) (2 samples, 0.65%)</title><rect x="617" y="340" width="7" height="15" fill="rgb(236,194,13)"/><text x="620.00" y="350.50"></text></g><g><title>PyUFunc_ReduceWrapper (reduction.c:479) (2 samples, 0.65%)</title><rect x="617" y="356" width="7" height="15" fill="rgb(208,106,21)"/><text x="620.00" y="366.50"></text></g><g><title>PyArray_CreateReduceResult (reduction.c:232) (2 samples, 0.65%)</title><rect x="617" y="372" width="7" height="15" fill="rgb(237,54,11)"/><text x="620.00" y="382.50"></text></g><g><title>allocate_reduce_result (reduction.c:77) (1 samples, 0.32%)</title><rect x="621" y="388" width="3" height="15" fill="rgb(210,196,48)"/><text x="624.00" y="398.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="621" y="404" width="3" height="15" fill="rgb(239,207,20)"/><text x="624.00" y="414.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1084) (1 samples, 0.32%)</title><rect x="621" y="420" width="3" height="15" fill="rgb(227,184,44)"/><text x="624.00" y="430.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.32%)</title><rect x="628" y="276" width="4" height="15" fill="rgb(209,30,37)"/><text x="631.00" y="286.50"></text></g><g><title>ufunc_geterr (ufunc_object.c:4814) (1 samples, 0.32%)</title><rect x="628" y="292" width="4" height="15" fill="rgb(223,50,50)"/><text x="631.00" y="302.50"></text></g><g><title>within_tol (numpy/core/numeric.py:2257) (2 samples, 0.65%)</title><rect x="628" y="244" width="8" height="15" fill="rgb(251,48,52)"/><text x="631.00" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:442) (2 samples, 0.65%)</title><rect x="628" y="260" width="8" height="15" fill="rgb(210,77,48)"/><text x="631.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:118) (1 samples, 0.32%)</title><rect x="632" y="276" width="4" height="15" fill="rgb(236,18,14)"/><text x="635.00" y="286.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:179) (1 samples, 0.32%)</title><rect x="632" y="292" width="4" height="15" fill="rgb(227,92,42)"/><text x="635.00" y="302.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:447) (2 samples, 0.65%)</title><rect x="643" y="260" width="8" height="15" fill="rgb(228,47,13)"/><text x="646.00" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:117) (1 samples, 0.32%)</title><rect x="647" y="276" width="4" height="15" fill="rgb(216,115,18)"/><text x="650.00" y="286.50"></text></g><g><title>array_add (number.c:330) (1 samples, 0.32%)</title><rect x="651" y="260" width="4" height="15" fill="rgb(210,190,7)"/><text x="654.00" y="270.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4731) (1 samples, 0.32%)</title><rect x="651" y="276" width="4" height="15" fill="rgb(205,147,37)"/><text x="654.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="651" y="292" width="4" height="15" fill="rgb(227,49,31)"/><text x="654.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="651" y="308" width="4" height="15" fill="rgb(208,98,19)"/><text x="654.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.32%)</title><rect x="651" y="324" width="4" height="15" fill="rgb(206,62,10)"/><text x="654.00" y="334.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1102) (43 samples, 13.92%)</title><rect x="494" y="164" width="165" height="15" fill="rgb(237,70,48)"/><text x="497.00" y="174.50">_get_median_predict (..</text></g><g><title>stable_cumsum (sklearn/utils/extmath.py:828) (28 samples, 9.06%)</title><rect x="552" y="180" width="107" height="15" fill="rgb(250,20,6)"/><text x="555.00" y="190.50">stable_cumsum..</text></g><g><title>isclose (&lt;__array_function__ internals&gt;:6) (23 samples, 7.44%)</title><rect x="571" y="196" width="88" height="15" fill="rgb(231,206,4)"/><text x="574.00" y="206.50">isclose (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (23 samples, 7.44%)</title><rect x="571" y="212" width="88" height="15" fill="rgb(222,186,35)"/><text x="574.00" y="222.50">array_impl..</text></g><g><title>isclose (numpy/core/numeric.py:2272) (9 samples, 2.91%)</title><rect x="624" y="228" width="35" height="15" fill="rgb(225,31,33)"/><text x="627.00" y="238.50">is..</text></g><g><title>within_tol (numpy/core/numeric.py:2258) (6 samples, 1.94%)</title><rect x="636" y="244" width="23" height="15" fill="rgb(225,182,40)"/><text x="639.00" y="254.50">w..</text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.32%)</title><rect x="655" y="260" width="4" height="15" fill="rgb(223,154,20)"/><text x="658.00" y="270.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.32%)</title><rect x="655" y="276" width="4" height="15" fill="rgb(254,67,54)"/><text x="658.00" y="286.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4707) (1 samples, 0.32%)</title><rect x="659" y="196" width="4" height="15" fill="rgb(246,227,36)"/><text x="662.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3165) (1 samples, 0.32%)</title><rect x="663" y="212" width="3" height="15" fill="rgb(210,85,36)"/><text x="666.00" y="222.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c:1097) (1 samples, 0.32%)</title><rect x="663" y="228" width="3" height="15" fill="rgb(205,201,43)"/><text x="666.00" y="238.50"></text></g><g><title>PyArray_FromAny (ctors.c:1944) (1 samples, 0.32%)</title><rect x="663" y="244" width="3" height="15" fill="rgb(227,35,52)"/><text x="666.00" y="254.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h:1565) (1 samples, 0.32%)</title><rect x="663" y="260" width="3" height="15" fill="rgb(233,207,47)"/><text x="666.00" y="270.50"></text></g><g><title>DOUBLE_setitem (arraytypes.c.src:212) (1 samples, 0.32%)</title><rect x="663" y="276" width="3" height="15" fill="rgb(224,152,54)"/><text x="666.00" y="286.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1103) (3 samples, 0.97%)</title><rect x="659" y="164" width="11" height="15" fill="rgb(248,148,17)"/><text x="662.00" y="174.50"></text></g><g><title>array_multiply (number.c:354) (3 samples, 0.97%)</title><rect x="659" y="180" width="11" height="15" fill="rgb(231,8,3)"/><text x="662.00" y="190.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.65%)</title><rect x="663" y="196" width="7" height="15" fill="rgb(252,151,52)"/><text x="666.00" y="206.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="666" y="212" width="4" height="15" fill="rgb(246,25,40)"/><text x="669.00" y="222.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1731) (1 samples, 0.32%)</title><rect x="666" y="228" width="4" height="15" fill="rgb(233,142,54)"/><text x="669.00" y="238.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c:1386) (1 samples, 0.32%)</title><rect x="666" y="244" width="4" height="15" fill="rgb(238,6,7)"/><text x="669.00" y="254.50"></text></g><g><title>DOUBLE_multiply (loops.c.src:1742) (1 samples, 0.32%)</title><rect x="666" y="260" width="4" height="15" fill="rgb(250,148,19)"/><text x="669.00" y="270.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:138) (2 samples, 0.65%)</title><rect x="674" y="180" width="8" height="15" fill="rgb(253,180,35)"/><text x="677.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:139) (1 samples, 0.32%)</title><rect x="682" y="180" width="3" height="15" fill="rgb(238,60,12)"/><text x="685.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:149) (1 samples, 0.32%)</title><rect x="685" y="180" width="4" height="15" fill="rgb(214,166,24)"/><text x="688.00" y="190.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.32%)</title><rect x="689" y="180" width="4" height="15" fill="rgb(234,95,7)"/><text x="692.00" y="190.50"></text></g><g><title>__instancecheck__ (abc.py:139) (1 samples, 0.32%)</title><rect x="689" y="196" width="4" height="15" fill="rgb(253,186,30)"/><text x="692.00" y="206.50"></text></g><g><title>__subclasscheck__ (abc.py:143) (1 samples, 0.32%)</title><rect x="689" y="212" width="4" height="15" fill="rgb(239,196,15)"/><text x="692.00" y="222.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3378) (1 samples, 0.32%)</title><rect x="693" y="196" width="4" height="15" fill="rgb(235,222,38)"/><text x="696.00" y="206.50"></text></g><g><title>PyArray_DescrFromObject (ctors.c:2666) (1 samples, 0.32%)</title><rect x="693" y="212" width="4" height="15" fill="rgb(216,37,36)"/><text x="696.00" y="222.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4473) (1 samples, 0.32%)</title><rect x="693" y="228" width="4" height="15" fill="rgb(225,218,44)"/><text x="696.00" y="238.50"></text></g><g><title>array_arange (multiarraymodule.c:2763) (3 samples, 0.97%)</title><rect x="693" y="180" width="12" height="15" fill="rgb(217,65,27)"/><text x="696.00" y="190.50"></text></g><g><title>PyArray_ArangeObj (ctors.c:3419) (2 samples, 0.65%)</title><rect x="697" y="196" width="8" height="15" fill="rgb(207,91,37)"/><text x="700.00" y="206.50"></text></g><g><title>_calc_length (ctors.c:3340) (2 samples, 0.65%)</title><rect x="697" y="212" width="8" height="15" fill="rgb(250,142,6)"/><text x="700.00" y="222.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2502) (1 samples, 0.32%)</title><rect x="705" y="196" width="3" height="15" fill="rgb(241,66,2)"/><text x="708.00" y="206.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h:1540) (1 samples, 0.32%)</title><rect x="705" y="212" width="3" height="15" fill="rgb(207,133,53)"/><text x="708.00" y="222.50"></text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1106) (11 samples, 3.56%)</title><rect x="670" y="164" width="42" height="15" fill="rgb(251,175,35)"/><text x="673.00" y="174.50">_ge..</text></g><g><title>array_subscript (mapping.c:1666) (2 samples, 0.65%)</title><rect x="705" y="180" width="7" height="15" fill="rgb(206,63,42)"/><text x="708.00" y="190.50"></text></g><g><title>PyArray_MapIterCheckIndices (mapping.c:2513) (1 samples, 0.32%)</title><rect x="708" y="196" width="4" height="15" fill="rgb(234,197,54)"/><text x="711.00" y="206.50"></text></g><g><title>PyArray_STRIDE (ndarraytypes.h:1516) (1 samples, 0.32%)</title><rect x="708" y="212" width="4" height="15" fill="rgb(227,29,12)"/><text x="711.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py:155) (1 samples, 0.32%)</title><rect x="712" y="180" width="4" height="15" fill="rgb(205,194,11)"/><text x="715.00" y="190.50"></text></g><g><title>array_arange (multiarraymodule.c:2754) (1 samples, 0.32%)</title><rect x="716" y="180" width="4" height="15" fill="rgb(232,227,29)"/><text x="719.00" y="190.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:54) (171 samples, 55.34%)</title><rect x="71" y="52" width="653" height="15" fill="rgb(221,152,34)"/><text x="74.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:54)</text></g><g><title>profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:53) (171 samples, 55.34%)</title><rect x="71" y="68" width="653" height="15" fill="rgb(212,159,52)"/><text x="74.00" y="78.50">profile_skl (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:53)</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37) (171 samples, 55.34%)</title><rect x="71" y="84" width="653" height="15" fill="rgb(238,185,49)"/><text x="74.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37)</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31) (171 samples, 55.34%)</title><rect x="71" y="100" width="653" height="15" fill="rgb(235,88,15)"/><text x="74.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (170 samples, 55.02%)</title><rect x="74" y="116" width="650" height="15" fill="rgb(210,108,25)"/><text x="77.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374) (168 samples, 54.37%)</title><rect x="82" y="132" width="642" height="15" fill="rgb(251,152,46)"/><text x="85.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:374)</text></g><g><title>predict (sklearn/ensemble/_weight_boosting.py:1131) (158 samples, 51.13%)</title><rect x="120" y="148" width="604" height="15" fill="rgb(249,133,28)"/><text x="123.00" y="158.50">predict (sklearn/ensemble/_weight_boosting.py:1131)</text></g><g><title>_get_median_predict (sklearn/ensemble/_weight_boosting.py:1109) (3 samples, 0.97%)</title><rect x="712" y="164" width="12" height="15" fill="rgb(211,223,41)"/><text x="715.00" y="174.50"></text></g><g><title>array_subscript (mapping.c:1711) (1 samples, 0.32%)</title><rect x="720" y="180" width="4" height="15" fill="rgb(252,14,15)"/><text x="723.00" y="190.50"></text></g><g><title>0x7fe5413d0f71 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="720" y="196" width="4" height="15" fill="rgb(240,173,7)"/><text x="723.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:392) (1 samples, 0.32%)</title><rect x="727" y="148" width="4" height="15" fill="rgb(253,52,19)"/><text x="730.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:397) (1 samples, 0.32%)</title><rect x="731" y="148" width="4" height="15" fill="rgb(235,192,15)"/><text x="734.00" y="158.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:124) (1 samples, 0.32%)</title><rect x="743" y="180" width="4" height="15" fill="rgb(254,111,32)"/><text x="746.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:133) (2 samples, 0.65%)</title><rect x="747" y="180" width="7" height="15" fill="rgb(217,52,41)"/><text x="750.00" y="190.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:136) (11 samples, 3.56%)</title><rect x="754" y="180" width="42" height="15" fill="rgb(244,156,45)"/><text x="757.00" y="190.50">run..</text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py:136) (2 samples, 0.65%)</title><rect x="789" y="196" width="7" height="15" fill="rgb(238,106,48)"/><text x="792.00" y="206.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1175) (1 samples, 0.32%)</title><rect x="808" y="228" width="3" height="15" fill="rgb(235,150,32)"/><text x="811.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:29) (2 samples, 0.65%)</title><rect x="808" y="212" width="7" height="15" fill="rgb(205,102,52)"/><text x="811.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c:1184) (1 samples, 0.32%)</title><rect x="811" y="228" width="4" height="15" fill="rgb(229,228,44)"/><text x="814.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:30) (1 samples, 0.32%)</title><rect x="815" y="212" width="4" height="15" fill="rgb(241,199,7)"/><text x="818.00" y="222.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="815" y="228" width="4" height="15" fill="rgb(250,38,11)"/><text x="818.00" y="238.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="815" y="244" width="4" height="15" fill="rgb(249,150,30)"/><text x="818.00" y="254.50"></text></g><g><title>_buffer_clear_info (buffer.c:733) (1 samples, 0.32%)</title><rect x="815" y="260" width="4" height="15" fill="rgb(207,186,51)"/><text x="818.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:491) (1 samples, 0.32%)</title><rect x="823" y="244" width="4" height="15" fill="rgb(248,124,47)"/><text x="826.00" y="254.50"></text></g><g><title>PyArray_PyIntAsIntp (conversion_utils.c:909) (1 samples, 0.32%)</title><rect x="823" y="260" width="4" height="15" fill="rgb(247,84,53)"/><text x="826.00" y="270.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:864) (1 samples, 0.32%)</title><rect x="823" y="276" width="4" height="15" fill="rgb(233,202,46)"/><text x="826.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1539) (2 samples, 0.65%)</title><rect x="823" y="228" width="8" height="15" fill="rgb(238,39,19)"/><text x="826.00" y="238.50"></text></g><g><title>prepare_index (mapping.c:516) (1 samples, 0.32%)</title><rect x="827" y="244" width="4" height="15" fill="rgb(234,8,44)"/><text x="830.00" y="254.50"></text></g><g><title>PyArray_FromAny (ctors.c:1938) (1 samples, 0.32%)</title><rect x="827" y="260" width="4" height="15" fill="rgb(248,98,2)"/><text x="830.00" y="270.50"></text></g><g><title>PyArray_AssignFromSequence (ctors.c:581) (1 samples, 0.32%)</title><rect x="827" y="276" width="4" height="15" fill="rgb(245,38,35)"/><text x="830.00" y="286.50"></text></g><g><title>setArrayFromSequence (ctors.c:489) (1 samples, 0.32%)</title><rect x="827" y="292" width="4" height="15" fill="rgb(249,17,48)"/><text x="830.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="831" y="260" width="3" height="15" fill="rgb(218,169,12)"/><text x="834.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1207) (1 samples, 0.32%)</title><rect x="831" y="276" width="3" height="15" fill="rgb(253,207,42)"/><text x="834.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c:1104) (1 samples, 0.32%)</title><rect x="831" y="292" width="3" height="15" fill="rgb(219,220,24)"/><text x="834.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1547) (1 samples, 0.32%)</title><rect x="834" y="276" width="4" height="15" fill="rgb(219,23,38)"/><text x="837.00" y="286.50"></text></g><g><title>array_subscript (mapping.c:1656) (3 samples, 0.97%)</title><rect x="831" y="228" width="11" height="15" fill="rgb(212,212,20)"/><text x="834.00" y="238.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2937) (3 samples, 0.97%)</title><rect x="831" y="244" width="11" height="15" fill="rgb(218,205,47)"/><text x="834.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (2 samples, 0.65%)</title><rect x="834" y="260" width="8" height="15" fill="rgb(228,147,17)"/><text x="837.00" y="270.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1560) (1 samples, 0.32%)</title><rect x="838" y="276" width="4" height="15" fill="rgb(210,225,46)"/><text x="841.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:44) (7 samples, 2.27%)</title><rect x="819" y="212" width="27" height="15" fill="rgb(246,88,36)"/><text x="822.00" y="222.50">_..</text></g><g><title>array_subscript (mapping.c:1715) (1 samples, 0.32%)</title><rect x="842" y="228" width="4" height="15" fill="rgb(236,91,23)"/><text x="845.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="842" y="244" width="4" height="15" fill="rgb(249,37,34)"/><text x="845.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="842" y="260" width="4" height="15" fill="rgb(249,69,37)"/><text x="845.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="842" y="276" width="4" height="15" fill="rgb(242,33,42)"/><text x="845.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_array_feature_extractor.py:45) (1 samples, 0.32%)</title><rect x="846" y="212" width="4" height="15" fill="rgb(233,95,17)"/><text x="849.00" y="222.50"></text></g><g><title>array_reshape (methods.c:195) (1 samples, 0.32%)</title><rect x="846" y="228" width="4" height="15" fill="rgb(229,64,44)"/><text x="849.00" y="238.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:78) (1 samples, 0.32%)</title><rect x="850" y="276" width="3" height="15" fill="rgb(216,27,37)"/><text x="853.00" y="286.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py:37) (2 samples, 0.65%)</title><rect x="850" y="212" width="7" height="15" fill="rgb(233,33,49)"/><text x="853.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py:34) (2 samples, 0.65%)</title><rect x="850" y="228" width="7" height="15" fill="rgb(222,43,0)"/><text x="853.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (2 samples, 0.65%)</title><rect x="850" y="244" width="7" height="15" fill="rgb(236,50,46)"/><text x="853.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (2 samples, 0.65%)</title><rect x="850" y="260" width="7" height="15" fill="rgb(240,87,14)"/><text x="853.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.32%)</title><rect x="853" y="276" width="4" height="15" fill="rgb(232,225,40)"/><text x="856.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3962) (1 samples, 0.32%)</title><rect x="853" y="292" width="4" height="15" fill="rgb(247,150,1)"/><text x="856.00" y="302.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="857" y="228" width="4" height="15" fill="rgb(208,66,19)"/><text x="860.00" y="238.50"></text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (1 samples, 0.32%)</title><rect x="857" y="244" width="4" height="15" fill="rgb(220,149,42)"/><text x="860.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (1 samples, 0.32%)</title><rect x="857" y="260" width="4" height="15" fill="rgb(248,121,10)"/><text x="860.00" y="270.50"></text></g><g><title>array_cumsum (methods.c:2228) (1 samples, 0.32%)</title><rect x="865" y="292" width="4" height="15" fill="rgb(219,203,13)"/><text x="868.00" y="302.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:224) (1 samples, 0.32%)</title><rect x="865" y="308" width="4" height="15" fill="rgb(229,203,31)"/><text x="868.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:260) (1 samples, 0.32%)</title><rect x="869" y="324" width="4" height="15" fill="rgb(243,111,42)"/><text x="872.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5531) (1 samples, 0.32%)</title><rect x="873" y="340" width="3" height="15" fill="rgb(217,1,18)"/><text x="876.00" y="350.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:431) (1 samples, 0.32%)</title><rect x="873" y="356" width="3" height="15" fill="rgb(241,155,47)"/><text x="876.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3818) (1 samples, 0.32%)</title><rect x="876" y="372" width="4" height="15" fill="rgb(240,147,0)"/><text x="879.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:241) (1 samples, 0.32%)</title><rect x="876" y="388" width="4" height="15" fill="rgb(235,72,53)"/><text x="879.00" y="398.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c:1432) (1 samples, 0.32%)</title><rect x="876" y="404" width="4" height="15" fill="rgb(244,103,40)"/><text x="879.00" y="414.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cum_sum.py:39) (7 samples, 2.27%)</title><rect x="857" y="212" width="27" height="15" fill="rgb(240,94,52)"/><text x="860.00" y="222.50">_..</text></g><g><title>cumsum (&lt;__array_function__ internals&gt;:6) (6 samples, 1.94%)</title><rect x="861" y="228" width="23" height="15" fill="rgb(254,12,26)"/><text x="864.00" y="238.50">c..</text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (5 samples, 1.62%)</title><rect x="865" y="244" width="19" height="15" fill="rgb(232,221,40)"/><text x="868.00" y="254.50"></text></g><g><title>cumsum (numpy/core/fromnumeric.py:2423) (5 samples, 1.62%)</title><rect x="865" y="260" width="19" height="15" fill="rgb(224,4,3)"/><text x="868.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (5 samples, 1.62%)</title><rect x="865" y="276" width="19" height="15" fill="rgb(231,210,39)"/><text x="868.00" y="286.50"></text></g><g><title>array_cumsum (methods.c:2239) (4 samples, 1.29%)</title><rect x="869" y="292" width="15" height="15" fill="rgb(248,209,1)"/><text x="872.00" y="302.50"></text></g><g><title>PyArray_CumSum (calculation.c:568) (4 samples, 1.29%)</title><rect x="869" y="308" width="15" height="15" fill="rgb(236,27,21)"/><text x="872.00" y="318.50"></text></g><g><title>PyArray_GenericAccumulateFunction (number.c:262) (3 samples, 0.97%)</title><rect x="873" y="324" width="11" height="15" fill="rgb(231,133,14)"/><text x="876.00" y="334.50"></text></g><g><title>ufunc_accumulate (ufunc_object.c:5537) (2 samples, 0.65%)</title><rect x="876" y="340" width="8" height="15" fill="rgb(249,94,0)"/><text x="879.00" y="350.50"></text></g><g><title>PyUFunc_GenericReduction (ufunc_object.c:4646) (2 samples, 0.65%)</title><rect x="876" y="356" width="8" height="15" fill="rgb(242,213,43)"/><text x="879.00" y="366.50"></text></g><g><title>PyUFunc_Accumulate (ufunc_object.c:3823) (1 samples, 0.32%)</title><rect x="880" y="372" width="4" height="15" fill="rgb(241,200,40)"/><text x="883.00" y="382.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.32%)</title><rect x="892" y="228" width="3" height="15" fill="rgb(218,79,19)"/><text x="895.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:21) (4 samples, 1.29%)</title><rect x="884" y="212" width="15" height="15" fill="rgb(250,83,32)"/><text x="887.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (1 samples, 0.32%)</title><rect x="895" y="228" width="4" height="15" fill="rgb(250,156,38)"/><text x="898.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="895" y="244" width="4" height="15" fill="rgb(221,182,1)"/><text x="898.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.32%)</title><rect x="895" y="260" width="4" height="15" fill="rgb(214,186,43)"/><text x="898.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:22) (2 samples, 0.65%)</title><rect x="899" y="212" width="8" height="15" fill="rgb(219,51,26)"/><text x="902.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:6) (2 samples, 0.65%)</title><rect x="899" y="228" width="8" height="15" fill="rgb(247,6,14)"/><text x="902.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="903" y="244" width="4" height="15" fill="rgb(233,62,28)"/><text x="906.00" y="254.50"></text></g><g><title>swapaxes (numpy/core/fromnumeric.py:596) (1 samples, 0.32%)</title><rect x="903" y="260" width="4" height="15" fill="rgb(253,32,28)"/><text x="906.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.32%)</title><rect x="903" y="276" width="4" height="15" fill="rgb(207,196,54)"/><text x="906.00" y="286.50"></text></g><g><title>array_swapaxes (methods.c:348) (1 samples, 0.32%)</title><rect x="903" y="292" width="4" height="15" fill="rgb(245,26,6)"/><text x="906.00" y="302.50"></text></g><g><title>PyArray_SwapAxes (shape.c:657) (1 samples, 0.32%)</title><rect x="903" y="308" width="4" height="15" fill="rgb(245,47,12)"/><text x="906.00" y="318.50"></text></g><g><title>PyArray_Transpose (shape.c:711) (1 samples, 0.32%)</title><rect x="903" y="324" width="4" height="15" fill="rgb(211,161,34)"/><text x="906.00" y="334.50"></text></g><g><title>array_choose (methods.c:1210) (1 samples, 0.32%)</title><rect x="911" y="292" width="4" height="15" fill="rgb(250,190,53)"/><text x="914.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:687) (1 samples, 0.32%)</title><rect x="915" y="308" width="3" height="15" fill="rgb(231,45,17)"/><text x="918.00" y="318.50"></text></g><g><title>PyArray_ConvertToCommonType (convert_datatype.c:2144) (1 samples, 0.32%)</title><rect x="915" y="324" width="3" height="15" fill="rgb(235,110,11)"/><text x="918.00" y="334.50"></text></g><g><title>array_item_asarray (mapping.c:1350) (1 samples, 0.32%)</title><rect x="915" y="340" width="3" height="15" fill="rgb(232,163,43)"/><text x="918.00" y="350.50"></text></g><g><title>get_view_from_index (mapping.c:988) (1 samples, 0.32%)</title><rect x="915" y="356" width="3" height="15" fill="rgb(218,135,9)"/><text x="918.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1223) (1 samples, 0.32%)</title><rect x="915" y="372" width="3" height="15" fill="rgb(206,148,50)"/><text x="918.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1042) (1 samples, 0.32%)</title><rect x="915" y="388" width="3" height="15" fill="rgb(243,163,41)"/><text x="918.00" y="398.50"></text></g><g><title>npy_alloc_cache_dim (alloc.c:164) (1 samples, 0.32%)</title><rect x="915" y="404" width="3" height="15" fill="rgb(241,174,6)"/><text x="918.00" y="414.50"></text></g><g><title>_npy_alloc_cache (alloc.c:77) (1 samples, 0.32%)</title><rect x="915" y="420" width="3" height="15" fill="rgb(238,149,14)"/><text x="918.00" y="430.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.32%)</title><rect x="915" y="436" width="3" height="15" fill="rgb(237,78,13)"/><text x="918.00" y="446.50"></text></g><g><title>0x7fe5413d2700 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="915" y="452" width="3" height="15" fill="rgb(217,197,38)"/><text x="918.00" y="462.50"></text></g><g><title>0x7fe5413cfaa4 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="915" y="468" width="3" height="15" fill="rgb(209,31,53)"/><text x="918.00" y="478.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (3 samples, 0.97%)</title><rect x="911" y="244" width="11" height="15" fill="rgb(208,104,34)"/><text x="914.00" y="254.50"></text></g><g><title>choose (numpy/core/fromnumeric.py:432) (3 samples, 0.97%)</title><rect x="911" y="260" width="11" height="15" fill="rgb(249,139,6)"/><text x="914.00" y="270.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (3 samples, 0.97%)</title><rect x="911" y="276" width="11" height="15" fill="rgb(239,176,29)"/><text x="914.00" y="286.50"></text></g><g><title>array_choose (methods.c:1224) (2 samples, 0.65%)</title><rect x="915" y="292" width="7" height="15" fill="rgb(230,91,25)"/><text x="918.00" y="302.50"></text></g><g><title>PyArray_Choose (item_selection.c:702) (1 samples, 0.32%)</title><rect x="918" y="308" width="4" height="15" fill="rgb(225,37,9)"/><text x="921.00" y="318.50"></text></g><g><title>PyArray_MultiIterFromObjects (iterators.c:1357) (1 samples, 0.32%)</title><rect x="918" y="324" width="4" height="15" fill="rgb(233,46,15)"/><text x="921.00" y="334.50"></text></g><g><title>multiiter_new_impl (iterators.c:1315) (1 samples, 0.32%)</title><rect x="918" y="340" width="4" height="15" fill="rgb(227,138,23)"/><text x="921.00" y="350.50"></text></g><g><title>PyArray_BYTES (ndarraytypes.h:1492) (1 samples, 0.32%)</title><rect x="918" y="356" width="4" height="15" fill="rgb(245,184,2)"/><text x="921.00" y="366.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:23) (5 samples, 1.62%)</title><rect x="907" y="212" width="19" height="15" fill="rgb(233,76,42)"/><text x="910.00" y="222.50"></text></g><g><title>choose (&lt;__array_function__ internals&gt;:6) (5 samples, 1.62%)</title><rect x="907" y="228" width="19" height="15" fill="rgb(232,120,25)"/><text x="910.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:321) (1 samples, 0.32%)</title><rect x="922" y="244" width="4" height="15" fill="rgb(207,202,7)"/><text x="925.00" y="254.50"></text></g><g><title>array_dealloc (arrayobject.c:476) (1 samples, 0.32%)</title><rect x="922" y="260" width="4" height="15" fill="rgb(249,55,54)"/><text x="925.00" y="270.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="922" y="276" width="4" height="15" fill="rgb(237,164,1)"/><text x="925.00" y="286.50"></text></g><g><title>_buffer_clear_info (buffer.c:724) (1 samples, 0.32%)</title><rect x="922" y="292" width="4" height="15" fill="rgb(242,124,52)"/><text x="925.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_gather_elements.py:24) (2 samples, 0.65%)</title><rect x="926" y="212" width="8" height="15" fill="rgb(227,113,42)"/><text x="929.00" y="222.50"></text></g><g><title>swapaxes (&lt;__array_function__ internals&gt;:4) (1 samples, 0.32%)</title><rect x="930" y="228" width="4" height="15" fill="rgb(240,199,10)"/><text x="933.00" y="238.50"></text></g><g><title>argsort (&lt;__array_function__ internals&gt;:6) (1 samples, 0.32%)</title><rect x="934" y="260" width="3" height="15" fill="rgb(249,150,50)"/><text x="937.00" y="270.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="934" y="276" width="3" height="15" fill="rgb(218,67,20)"/><text x="937.00" y="286.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1084) (1 samples, 0.32%)</title><rect x="934" y="292" width="3" height="15" fill="rgb(249,54,20)"/><text x="937.00" y="302.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.32%)</title><rect x="934" y="308" width="3" height="15" fill="rgb(226,207,15)"/><text x="937.00" y="318.50"></text></g><g><title>array_argsort (methods.c:1360) (1 samples, 0.32%)</title><rect x="934" y="324" width="3" height="15" fill="rgb(241,76,41)"/><text x="937.00" y="334.50"></text></g><g><title>PyArray_AxisConverter (conversion_utils.c:229) (1 samples, 0.32%)</title><rect x="934" y="340" width="3" height="15" fill="rgb(223,228,26)"/><text x="937.00" y="350.50"></text></g><g><title>PyArray_PyIntAsInt_ErrMsg (conversion_utils.c:795) (1 samples, 0.32%)</title><rect x="934" y="356" width="3" height="15" fill="rgb(234,104,3)"/><text x="937.00" y="366.50"></text></g><g><title>PyArray_PyIntAsIntp_ErrMsg (conversion_utils.c:828) (1 samples, 0.32%)</title><rect x="934" y="372" width="3" height="15" fill="rgb(208,28,35)"/><text x="937.00" y="382.50"></text></g><g><title>array_subscript (mapping.c:1539) (1 samples, 0.32%)</title><rect x="937" y="260" width="4" height="15" fill="rgb(235,72,43)"/><text x="940.00" y="270.50"></text></g><g><title>prepare_index (mapping.c:679) (1 samples, 0.32%)</title><rect x="937" y="276" width="4" height="15" fill="rgb(235,107,44)"/><text x="940.00" y="286.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:38) (3 samples, 0.97%)</title><rect x="934" y="244" width="11" height="15" fill="rgb(235,218,24)"/><text x="937.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.32%)</title><rect x="941" y="260" width="4" height="15" fill="rgb(212,91,21)"/><text x="944.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2942) (1 samples, 0.32%)</title><rect x="941" y="276" width="4" height="15" fill="rgb(247,125,0)"/><text x="944.00" y="286.50"></text></g><g><title>NpyIter_MultiNew (nditer_constr.c:517) (1 samples, 0.32%)</title><rect x="941" y="292" width="4" height="15" fill="rgb(222,80,41)"/><text x="944.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:403) (1 samples, 0.32%)</title><rect x="941" y="308" width="4" height="15" fill="rgb(214,132,3)"/><text x="944.00" y="318.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c:2841) (1 samples, 0.32%)</title><rect x="941" y="324" width="4" height="15" fill="rgb(216,188,32)"/><text x="944.00" y="334.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c:2686) (1 samples, 0.32%)</title><rect x="941" y="340" width="4" height="15" fill="rgb(238,145,15)"/><text x="944.00" y="350.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1205) (1 samples, 0.32%)</title><rect x="941" y="356" width="4" height="15" fill="rgb(242,8,22)"/><text x="944.00" y="366.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c:1220) (1 samples, 0.32%)</title><rect x="941" y="372" width="4" height="15" fill="rgb(217,15,46)"/><text x="944.00" y="382.50"></text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:75) (4 samples, 1.29%)</title><rect x="934" y="228" width="15" height="15" fill="rgb(208,130,49)"/><text x="937.00" y="238.50"></text></g><g><title>topk_sorted_implementation (mlprodict/onnxrt/ops_cpu/op_topk.py:39) (1 samples, 0.32%)</title><rect x="945" y="244" width="4" height="15" fill="rgb(220,165,28)"/><text x="948.00" y="254.50"></text></g><g><title>array_subscript (mapping.c:1656) (1 samples, 0.32%)</title><rect x="945" y="260" width="4" height="15" fill="rgb(252,166,43)"/><text x="948.00" y="270.50"></text></g><g><title>PyArray_MapIterNew (mapping.c:2964) (1 samples, 0.32%)</title><rect x="945" y="276" width="4" height="15" fill="rgb(254,51,38)"/><text x="948.00" y="286.50"></text></g><g><title>NpyIter_EnableExternalLoop (nditer_api.c:229) (1 samples, 0.32%)</title><rect x="945" y="292" width="4" height="15" fill="rgb(236,106,39)"/><text x="948.00" y="302.50"></text></g><g><title>NpyIter_Reset (nditer_api.c:281) (1 samples, 0.32%)</title><rect x="945" y="308" width="4" height="15" fill="rgb(230,43,29)"/><text x="948.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c:2129) (1 samples, 0.32%)</title><rect x="945" y="324" width="4" height="15" fill="rgb(224,141,3)"/><text x="948.00" y="334.50"></text></g><g><title>array_astype (methods.c:799) (1 samples, 0.32%)</title><rect x="949" y="244" width="4" height="15" fill="rgb(221,2,50)"/><text x="952.00" y="254.50"></text></g><g><title>0x7fe5413e6730 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="949" y="260" width="4" height="15" fill="rgb(217,186,6)"/><text x="952.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_topk.py:137) (6 samples, 1.94%)</title><rect x="934" y="212" width="23" height="15" fill="rgb(249,196,2)"/><text x="937.00" y="222.50">_..</text></g><g><title>_common_run (mlprodict/onnxrt/ops_cpu/op_topk.py:76) (2 samples, 0.65%)</title><rect x="949" y="228" width="8" height="15" fill="rgb(227,157,35)"/><text x="952.00" y="238.50"></text></g><g><title>array_astype (methods.c:845) (1 samples, 0.32%)</title><rect x="953" y="244" width="4" height="15" fill="rgb(229,92,28)"/><text x="956.00" y="254.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c:404) (1 samples, 0.32%)</title><rect x="953" y="260" width="4" height="15" fill="rgb(235,106,54)"/><text x="956.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c:97) (1 samples, 0.32%)</title><rect x="953" y="276" width="4" height="15" fill="rgb(205,136,14)"/><text x="956.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c:3999) (1 samples, 0.32%)</title><rect x="953" y="292" width="4" height="15" fill="rgb(222,10,29)"/><text x="956.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.32%)</title><rect x="953" y="308" width="4" height="15" fill="rgb(238,208,53)"/><text x="956.00" y="318.50"></text></g><g><title>0x7fe541388785 (libc-2.29.so) (1 samples, 0.32%)</title><rect x="953" y="324" width="4" height="15" fill="rgb(254,156,54)"/><text x="956.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:118) (42 samples, 13.59%)</title><rect x="800" y="196" width="160" height="15" fill="rgb(217,186,6)"/><text x="803.00" y="206.50">run (mlprodict/onnxr..</text></g><g><title>gentype_dealloc (scalartypes.c.src:143) (1 samples, 0.32%)</title><rect x="957" y="212" width="3" height="15" fill="rgb(243,122,16)"/><text x="960.00" y="222.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c:944) (1 samples, 0.32%)</title><rect x="957" y="228" width="3" height="15" fill="rgb(245,137,42)"/><text x="960.00" y="238.50"></text></g><g><title>_buffer_clear_info (buffer.c:723) (1 samples, 0.32%)</title><rect x="957" y="244" width="3" height="15" fill="rgb(253,28,16)"/><text x="960.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:13) (2 samples, 0.65%)</title><rect x="960" y="260" width="8" height="15" fill="rgb(239,107,19)"/><text x="963.00" y="270.50"></text></g><g><title>argmin (&lt;__array_function__ internals&gt;:6) (2 samples, 0.65%)</title><rect x="960" y="276" width="8" height="15" fill="rgb(242,226,39)"/><text x="963.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="964" y="292" width="4" height="15" fill="rgb(245,176,49)"/><text x="967.00" y="302.50"></text></g><g><title>argmin (numpy/core/fromnumeric.py:1222) (1 samples, 0.32%)</title><rect x="964" y="308" width="4" height="15" fill="rgb(241,15,22)"/><text x="967.00" y="318.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py:61) (1 samples, 0.32%)</title><rect x="964" y="324" width="4" height="15" fill="rgb(254,115,25)"/><text x="967.00" y="334.50"></text></g><g><title>array_argmin (methods.c:317) (1 samples, 0.32%)</title><rect x="964" y="340" width="4" height="15" fill="rgb(208,66,31)"/><text x="967.00" y="350.50"></text></g><g><title>PyArray_ArgMin (calculation.c:224) (1 samples, 0.32%)</title><rect x="964" y="356" width="4" height="15" fill="rgb(207,221,25)"/><text x="967.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c:1209) (1 samples, 0.32%)</title><rect x="964" y="372" width="4" height="15" fill="rgb(244,169,14)"/><text x="967.00" y="382.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1190) (1 samples, 0.32%)</title><rect x="964" y="388" width="4" height="15" fill="rgb(206,219,5)"/><text x="967.00" y="398.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:15) (1 samples, 0.32%)</title><rect x="968" y="260" width="4" height="15" fill="rgb(238,82,41)"/><text x="971.00" y="270.50"></text></g><g><title>expand_dims (&lt;__array_function__ internals&gt;:6) (1 samples, 0.32%)</title><rect x="968" y="276" width="4" height="15" fill="rgb(251,198,24)"/><text x="971.00" y="286.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c:259) (1 samples, 0.32%)</title><rect x="968" y="292" width="4" height="15" fill="rgb(235,167,11)"/><text x="971.00" y="302.50"></text></g><g><title>expand_dims (numpy/lib/shape_base.py:587) (1 samples, 0.32%)</title><rect x="968" y="308" width="4" height="15" fill="rgb(210,149,42)"/><text x="971.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:312) (4 samples, 1.29%)</title><rect x="960" y="196" width="16" height="15" fill="rgb(238,174,51)"/><text x="963.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (4 samples, 1.29%)</title><rect x="960" y="212" width="16" height="15" fill="rgb(248,113,11)"/><text x="963.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:66) (4 samples, 1.29%)</title><rect x="960" y="228" width="16" height="15" fill="rgb(216,84,37)"/><text x="963.00" y="238.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_argmin.py:38) (4 samples, 1.29%)</title><rect x="960" y="244" width="16" height="15" fill="rgb(224,24,11)"/><text x="963.00" y="254.50"></text></g><g><title>_argmin (mlprodict/onnxrt/ops_cpu/op_argmin.py:16) (1 samples, 0.32%)</title><rect x="972" y="260" width="4" height="15" fill="rgb(217,85,45)"/><text x="975.00" y="270.50"></text></g><g><title>0x7fe501e6954f (?) (1 samples, 0.32%)</title><rect x="979" y="244" width="4" height="15" fill="rgb(207,124,44)"/><text x="982.00" y="254.50"></text></g><g><title>0x7fe501e6f65e (?) (1 samples, 0.32%)</title><rect x="979" y="260" width="4" height="15" fill="rgb(219,187,20)"/><text x="982.00" y="270.50"></text></g><g><title>0x7fe501e6f50f (?) (1 samples, 0.32%)</title><rect x="979" y="276" width="4" height="15" fill="rgb(236,6,37)"/><text x="982.00" y="286.50"></text></g><g><title>0x7fe501e75d6c (?) (1 samples, 0.32%)</title><rect x="979" y="292" width="4" height="15" fill="rgb(217,160,53)"/><text x="982.00" y="302.50"></text></g><g><title>0x7fe50b3d6ab9 (?) (1 samples, 0.32%)</title><rect x="979" y="308" width="4" height="15" fill="rgb(250,110,46)"/><text x="982.00" y="318.50"></text></g><g><title>0x7fe50b3d7eab (?) (1 samples, 0.32%)</title><rect x="979" y="324" width="4" height="15" fill="rgb(231,125,33)"/><text x="982.00" y="334.50"></text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:486) (1 samples, 0.32%)</title><rect x="983" y="244" width="4" height="15" fill="rgb(230,208,16)"/><text x="986.00" y="254.50"></text></g><g><title>pybind11::detail::loader_life_support::loader_life_support (cast.h:44) (1 samples, 0.32%)</title><rect x="987" y="260" width="4" height="15" fill="rgb(252,117,22)"/><text x="990.00" y="270.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::push_back (stl_vector.h:933) (1 samples, 0.32%)</title><rect x="987" y="276" width="4" height="15" fill="rgb(242,135,50)"/><text x="990.00" y="286.50"></text></g><g><title>std::vector&lt;_object*, std::allocator&lt;_object*&gt; &gt;::emplace_back&lt;_object*&gt; (vector.tcc:96) (1 samples, 0.32%)</title><rect x="987" y="292" width="4" height="15" fill="rgb(254,13,18)"/><text x="990.00" y="302.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;_object*&gt; &gt;::construct&lt;_object*, _object*&gt; (alloc_traits.h:475) (1 samples, 0.32%)</title><rect x="987" y="308" width="4" height="15" fill="rgb(225,140,1)"/><text x="990.00" y="318.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;_object*&gt;::construct&lt;_object*, _object*&gt; (new_allocator.h:120) (1 samples, 0.32%)</title><rect x="987" y="324" width="4" height="15" fill="rgb(207,122,42)"/><text x="990.00" y="334.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:141) (1 samples, 0.32%)</title><rect x="991" y="276" width="4" height="15" fill="rgb(214,47,47)"/><text x="994.00" y="286.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_args (cast.h:1907) (1 samples, 0.32%)</title><rect x="991" y="292" width="4" height="15" fill="rgb(219,15,14)"/><text x="994.00" y="302.50"></text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::load_impl_sequence&lt;(unsigned long)0, (unsigned long)1&gt; (cast.h:1928) (1 samples, 0.32%)</title><rect x="991" y="308" width="4" height="15" fill="rgb(211,116,11)"/><text x="994.00" y="318.50"></text></g><g><title>pybind11::detail::pyobject_caster&lt;pybind11::array_t&lt;float, 16&gt; &gt;::load (numpy.h:987) (1 samples, 0.32%)</title><rect x="991" y="324" width="4" height="15" fill="rgb(244,186,53)"/><text x="994.00" y="334.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::ensure (numpy.h:924) (1 samples, 0.32%)</title><rect x="991" y="340" width="4" height="15" fill="rgb(209,54,51)"/><text x="994.00" y="350.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::raw_array_t (numpy.h:945) (1 samples, 0.32%)</title><rect x="991" y="356" width="4" height="15" fill="rgb(254,25,0)"/><text x="994.00" y="366.50"></text></g><g><title>PyArray_FromAny (ctors.c:1966) (1 samples, 0.32%)</title><rect x="991" y="372" width="4" height="15" fill="rgb(247,44,24)"/><text x="994.00" y="382.50"></text></g><g><title>PyArray_FromArray (ctors.c:2094) (1 samples, 0.32%)</title><rect x="991" y="388" width="4" height="15" fill="rgb(243,163,39)"/><text x="994.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c:965) (1 samples, 0.32%)</title><rect x="991" y="404" width="4" height="15" fill="rgb(222,31,4)"/><text x="994.00" y="414.50"></text></g><g><title>0x7fe50b3d7ea0 (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="995" y="484" width="4" height="15" fill="rgb(244,214,7)"/><text x="998.00" y="494.50"></text></g><g><title>0x7fe50b3d7ea9 (libgomp.so.1.0.0) (7 samples, 2.27%)</title><rect x="999" y="484" width="26" height="15" fill="rgb(231,153,10)"/><text x="1002.00" y="494.50">0..</text></g><g><title>0x7fe50b3d7eab (libgomp.so.1.0.0) (6 samples, 1.94%)</title><rect x="1025" y="484" width="23" height="15" fill="rgb(220,102,28)"/><text x="1028.00" y="494.50">0..</text></g><g><title>0x7fe50b3d6ab9 (libgomp.so.1.0.0) (24 samples, 7.77%)</title><rect x="995" y="468" width="91" height="15" fill="rgb(232,17,53)"/><text x="998.00" y="478.50">0x7fe50b3d..</text></g><g><title>0x7fe50b3d7ead (libgomp.so.1.0.0) (10 samples, 3.24%)</title><rect x="1048" y="484" width="38" height="15" fill="rgb(206,194,29)"/><text x="1051.00" y="494.50">0x7..</text></g><g><title>0x7fe50b3d7cfb (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="1086" y="500" width="4" height="15" fill="rgb(208,36,38)"/><text x="1089.00" y="510.50"></text></g><g><title>0x7fe50b3d5daa (libgomp.so.1.0.0) (2 samples, 0.65%)</title><rect x="1086" y="484" width="8" height="15" fill="rgb(218,211,0)"/><text x="1089.00" y="494.50"></text></g><g><title>0x7fe50b3d7cfd (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="1090" y="500" width="4" height="15" fill="rgb(209,225,36)"/><text x="1093.00" y="510.50"></text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:321) (27 samples, 8.74%)</title><rect x="995" y="420" width="103" height="15" fill="rgb(254,68,53)"/><text x="998.00" y="430.50">RuntimeTreeE..</text></g><g><title>pybind11::array::size (numpy.h:619) (27 samples, 8.74%)</title><rect x="995" y="436" width="103" height="15" fill="rgb(224,51,47)"/><text x="998.00" y="446.50">pybind11::ar..</text></g><g><title>std::accumulate&lt;long const*, long, std::multiplies&lt;long&gt; &gt; (stl_numeric.h:153) (27 samples, 8.74%)</title><rect x="995" y="452" width="103" height="15" fill="rgb(212,5,35)"/><text x="998.00" y="462.50">std::accumul..</text></g><g><title>GOMP_parallel (libgomp.so.1.0.0) (3 samples, 0.97%)</title><rect x="1086" y="468" width="12" height="15" fill="rgb(229,223,4)"/><text x="1089.00" y="478.50"></text></g><g><title>0x7fe50b3d5edf (libgomp.so.1.0.0) (1 samples, 0.32%)</title><rect x="1094" y="484" width="4" height="15" fill="rgb(240,176,37)"/><text x="1097.00" y="494.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:348) (33 samples, 10.68%)</title><rect x="976" y="196" width="126" height="15" fill="rgb(243,148,1)"/><text x="979.00" y="206.50">run (mlprodict/..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:269) (33 samples, 10.68%)</title><rect x="976" y="212" width="126" height="15" fill="rgb(243,50,15)"/><text x="979.00" y="222.50">run (mlprodict/..</text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor.py:61) (33 samples, 10.68%)</title><rect x="976" y="228" width="126" height="15" fill="rgb(253,19,54)"/><text x="979.00" y="238.50">_run (mlprodict..</text></g><g><title>pybind11::cpp_function::dispatcher (pybind11.h:623) (30 samples, 9.71%)</title><rect x="987" y="244" width="115" height="15" fill="rgb(210,216,7)"/><text x="990.00" y="254.50">pybind11::cpp_..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (pybind11.h:137) (29 samples, 9.39%)</title><rect x="991" y="260" width="111" height="15" fill="rgb(254,185,37)"/><text x="994.00" y="270.50">void pybind11..</text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}, pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;&amp;)#1}, pybind11::array_t&lt;float, 16&gt; (*)(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(pybind11::detail::function_call&amp;)#3}::operator() const (pybind11.h:159) (28 samples, 9.06%)</title><rect x="995" y="276" width="107" height="15" fill="rgb(211,93,2)"/><text x="998.00" y="286.50">void pybind11..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::detail::void_type, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}&gt; &amp;&amp; (cast.h:1912) (28 samples, 9.06%)</title><rect x="995" y="292" width="107" height="15" fill="rgb(242,72,29)"/><text x="998.00" y="302.50">pybind11::det..</text></g><g><title>pybind11::detail::argument_loader&lt;RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt; &gt;::call_impl&lt;pybind11::array_t&lt;float, 16&gt;, pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;&amp;)#1}, (unsigned long)0, (unsigned long)1, pybind11::detail::void_type&gt; (cast.h:1935) (28 samples, 9.06%)</title><rect x="995" y="308" width="107" height="15" fill="rgb(222,229,20)"/><text x="998.00" y="318.50">pybind11::det..</text></g><g><title>pybind11::cpp_function::cpp_function&lt;pybind11::array_t&lt;float, 16&gt;, RuntimeTreeEnsembleRegressorFloat, pybind11::array_t&lt;float, 16&gt;, pybind11::name, pybind11::is_method, pybind11::sibling, char [48]&gt;(pybind11::name const, pybind11::is_method&amp;, pybind11::sibling, char [48])::{lambda(RuntimeTreeEnsembleRegressorFloat const*, pybind11::array_t&lt;float, 16&gt;)#1}::operator() const (pybind11.h:85) (28 samples, 9.06%)</title><rect x="995" y="324" width="107" height="15" fill="rgb(253,149,40)"/><text x="998.00" y="334.50">pybind11::cpp..</text></g><g><title>pybind11::array_t&lt;float, 16&gt;::~array_t (numpy.h:831) (28 samples, 9.06%)</title><rect x="995" y="340" width="107" height="15" fill="rgb(226,200,20)"/><text x="998.00" y="350.50">pybind11::arr..</text></g><g><title>pybind11::array::~array (numpy.h:538) (28 samples, 9.06%)</title><rect x="995" y="356" width="107" height="15" fill="rgb(225,214,8)"/><text x="998.00" y="366.50">pybind11::arr..</text></g><g><title>pybind11::buffer::~buffer (pytypes.h:1311) (28 samples, 9.06%)</title><rect x="995" y="372" width="107" height="15" fill="rgb(250,213,17)"/><text x="998.00" y="382.50">pybind11::buf..</text></g><g><title>pybind11::object::~object (pytypes.h:240) (28 samples, 9.06%)</title><rect x="995" y="388" width="107" height="15" fill="rgb(210,85,46)"/><text x="998.00" y="398.50">pybind11::obj..</text></g><g><title>pybind11::handle::dec_ref &amp; (pytypes.h:197) (28 samples, 9.06%)</title><rect x="995" y="404" width="107" height="15" fill="rgb(212,99,46)"/><text x="998.00" y="414.50">pybind11::han..</text></g><g><title>RuntimeTreeEnsembleRegressor&lt;float&gt;::compute (mlprodict/onnxrt/ops_cpu/op_tree_ensemble_regressor_.cpp:331) (1 samples, 0.32%)</title><rect x="1098" y="420" width="4" height="15" fill="rgb(237,130,24)"/><text x="1101.00" y="430.50"></text></g><g><title>pybind11::array_t&lt;float, 16&gt;::array_t (numpy.h:867) (1 samples, 0.32%)</title><rect x="1098" y="436" width="4" height="15" fill="rgb(241,101,48)"/><text x="1101.00" y="446.50"></text></g><g><title>pybind11::detail::any_container&lt;long&gt;::~any_container (common.h:771) (1 samples, 0.32%)</title><rect x="1098" y="452" width="4" height="15" fill="rgb(211,112,48)"/><text x="1101.00" y="462.50"></text></g><g><title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::~vector (stl_vector.h:426) (1 samples, 0.32%)</title><rect x="1098" y="468" width="4" height="15" fill="rgb(244,122,20)"/><text x="1101.00" y="478.50"></text></g><g><title>pybind11::array::array&lt;float&gt; (numpy.h:600) (1 samples, 0.32%)</title><rect x="1098" y="484" width="4" height="15" fill="rgb(240,214,24)"/><text x="1101.00" y="494.50"></text></g><g><title>pybind11::dtype::of&lt;float&gt; (numpy.h:479) (1 samples, 0.32%)</title><rect x="1098" y="500" width="4" height="15" fill="rgb(214,214,28)"/><text x="1101.00" y="510.50"></text></g><g><title>pybind11::detail::npy_format_descriptor&lt;float, void&gt;::dtype (numpy.h:1046) (1 samples, 0.32%)</title><rect x="1098" y="516" width="4" height="15" fill="rgb(240,11,10)"/><text x="1101.00" y="526.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src:4414) (1 samples, 0.32%)</title><rect x="1098" y="532" width="4" height="15" fill="rgb(223,165,13)"/><text x="1101.00" y="542.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (2 samples, 0.65%)</title><rect x="1102" y="196" width="7" height="15" fill="rgb(214,163,14)"/><text x="1105.00" y="206.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_less.py:17) (1 samples, 0.32%)</title><rect x="1105" y="212" width="4" height="15" fill="rgb(249,166,34)"/><text x="1108.00" y="222.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:426) (1 samples, 0.32%)</title><rect x="1109" y="212" width="4" height="15" fill="rgb(251,43,41)"/><text x="1112.00" y="222.50"></text></g><g><title>array_descr_get (getset.c:207) (1 samples, 0.32%)</title><rect x="1109" y="228" width="4" height="15" fill="rgb(242,124,22)"/><text x="1112.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4717) (1 samples, 0.32%)</title><rect x="1113" y="244" width="4" height="15" fill="rgb(212,116,30)"/><text x="1116.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c:452) (1 samples, 0.32%)</title><rect x="1113" y="260" width="4" height="15" fill="rgb(244,170,31)"/><text x="1116.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c:41) (1 samples, 0.32%)</title><rect x="1113" y="276" width="4" height="15" fill="rgb(217,198,1)"/><text x="1116.00" y="286.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c:95) (1 samples, 0.32%)</title><rect x="1113" y="292" width="4" height="15" fill="rgb(254,33,54)"/><text x="1116.00" y="302.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3180) (1 samples, 0.32%)</title><rect x="1117" y="260" width="4" height="15" fill="rgb(227,48,31)"/><text x="1120.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c:520) (1 samples, 0.32%)</title><rect x="1117" y="276" width="4" height="15" fill="rgb(237,105,45)"/><text x="1120.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c:1867) (1 samples, 0.32%)</title><rect x="1117" y="292" width="4" height="15" fill="rgb(243,96,9)"/><text x="1120.00" y="302.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c:1786) (1 samples, 0.32%)</title><rect x="1117" y="308" width="4" height="15" fill="rgb(218,91,33)"/><text x="1120.00" y="318.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:138) (86 samples, 27.83%)</title><rect x="796" y="180" width="329" height="15" fill="rgb(253,180,12)"/><text x="799.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:489) (4 samples, 1.29%)</title><rect x="1109" y="196" width="16" height="15" fill="rgb(247,23,53)"/><text x="1112.00" y="206.50"></text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py:432) (3 samples, 0.97%)</title><rect x="1113" y="212" width="12" height="15" fill="rgb(220,150,32)"/><text x="1116.00" y="222.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py:523) (3 samples, 0.97%)</title><rect x="1113" y="228" width="12" height="15" fill="rgb(216,24,28)"/><text x="1116.00" y="238.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c:4725) (2 samples, 0.65%)</title><rect x="1117" y="244" width="8" height="15" fill="rgb(233,179,52)"/><text x="1120.00" y="254.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c:3262) (1 samples, 0.32%)</title><rect x="1121" y="260" width="4" height="15" fill="rgb(225,195,0)"/><text x="1124.00" y="270.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c:1742) (1 samples, 0.32%)</title><rect x="1121" y="276" width="4" height="15" fill="rgb(223,160,48)"/><text x="1124.00" y="286.50"></text></g><g><title>iterator_loop (ufunc_object.c:1520) (1 samples, 0.32%)</title><rect x="1121" y="292" width="4" height="15" fill="rgb(244,30,54)"/><text x="1124.00" y="302.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c:214) (1 samples, 0.32%)</title><rect x="1121" y="308" width="4" height="15" fill="rgb(214,0,27)"/><text x="1124.00" y="318.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c:1240) (1 samples, 0.32%)</title><rect x="1121" y="324" width="4" height="15" fill="rgb(228,75,48)"/><text x="1124.00" y="334.50"></text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:142) (1 samples, 0.32%)</title><rect x="1125" y="180" width="3" height="15" fill="rgb(213,188,18)"/><text x="1128.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:458) (105 samples, 33.98%)</title><rect x="735" y="164" width="401" height="15" fill="rgb(239,220,10)"/><text x="738.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py:153) (2 samples, 0.65%)</title><rect x="1128" y="180" width="8" height="15" fill="rgb(251,185,12)"/><text x="1131.00" y="190.50"></text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py:541) (1 samples, 0.32%)</title><rect x="1136" y="164" width="4" height="15" fill="rgb(244,174,11)"/><text x="1139.00" y="174.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:61) (110 samples, 35.60%)</title><rect x="724" y="52" width="420" height="15" fill="rgb(245,67,50)"/><text x="727.00" y="62.50">&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_esti..</text></g><g><title>profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:60) (110 samples, 35.60%)</title><rect x="724" y="68" width="420" height="15" fill="rgb(216,81,38)"/><text x="727.00" y="78.50">profile_pyrt (bench_AdaBoostRegressor_default_b_reg_64_n_..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37) (110 samples, 35.60%)</title><rect x="724" y="84" width="420" height="15" fill="rgb(230,35,13)"/><text x="727.00" y="94.50">setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31) (110 samples, 35.60%)</title><rect x="724" y="100" width="420" height="15" fill="rgb(251,48,43)"/><text x="727.00" y="110.50">profile (bench_AdaBoostRegressor_default_b_reg_64_n_estim..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (110 samples, 35.60%)</title><rect x="724" y="116" width="420" height="15" fill="rgb(223,199,24)"/><text x="727.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py:1..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (110 samples, 35.60%)</title><rect x="724" y="132" width="420" height="15" fill="rgb(216,129,50)"/><text x="727.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (107 samples, 34.63%)</title><rect x="735" y="148" width="409" height="15" fill="rgb(253,183,44)"/><text x="738.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py:402)</text></g><g><title>array_dealloc (arrayobject.c:533) (1 samples, 0.32%)</title><rect x="1140" y="164" width="4" height="15" fill="rgb(212,174,11)"/><text x="1143.00" y="174.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c:152) (1 samples, 0.32%)</title><rect x="1140" y="180" width="4" height="15" fill="rgb(247,211,25)"/><text x="1143.00" y="190.50"></text></g><g><title>run (onnxruntime/capi/session.py:134) (2 samples, 0.65%)</title><rect x="1147" y="196" width="8" height="15" fill="rgb(252,161,28)"/><text x="1150.00" y="206.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py:134) (2 samples, 0.65%)</title><rect x="1147" y="212" width="8" height="15" fill="rgb(230,208,0)"/><text x="1150.00" y="222.50"></text></g><g><title>0x7fe50140eff9 (?) (1 samples, 0.32%)</title><rect x="1159" y="212" width="4" height="15" fill="rgb(241,127,39)"/><text x="1162.00" y="222.50"></text></g><g><title>0x7fe501409ef6 (?) (1 samples, 0.32%)</title><rect x="1159" y="228" width="4" height="15" fill="rgb(207,226,45)"/><text x="1162.00" y="238.50"></text></g><g><title>0x7fe5013fe962 (?) (1 samples, 0.32%)</title><rect x="1159" y="244" width="4" height="15" fill="rgb(239,20,34)"/><text x="1162.00" y="254.50"></text></g><g><title>0x7fe5014327a7 (?) (1 samples, 0.32%)</title><rect x="1159" y="260" width="4" height="15" fill="rgb(232,92,11)"/><text x="1162.00" y="270.50"></text></g><g><title>0x7fe501432379 (?) (1 samples, 0.32%)</title><rect x="1159" y="276" width="4" height="15" fill="rgb(224,71,26)"/><text x="1162.00" y="286.50"></text></g><g><title>0x7fe5018908b8 (?) (1 samples, 0.32%)</title><rect x="1159" y="292" width="4" height="15" fill="rgb(208,35,26)"/><text x="1162.00" y="302.50"></text></g><g><title>0x7fe50188ec7f (?) (1 samples, 0.32%)</title><rect x="1159" y="308" width="4" height="15" fill="rgb(223,72,13)"/><text x="1162.00" y="318.50"></text></g><g><title>0x7fe5018a199c (?) (1 samples, 0.32%)</title><rect x="1159" y="324" width="4" height="15" fill="rgb(239,160,20)"/><text x="1162.00" y="334.50"></text></g><g><title>0x7fe5015c9235 (?) (1 samples, 0.32%)</title><rect x="1159" y="340" width="4" height="15" fill="rgb(240,107,22)"/><text x="1162.00" y="350.50"></text></g><g><title>0x7fe5015c8af0 (?) (1 samples, 0.32%)</title><rect x="1159" y="356" width="4" height="15" fill="rgb(242,197,38)"/><text x="1162.00" y="366.50"></text></g><g><title>onnxruntime::ArgMin&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1167" y="340" width="3" height="15" fill="rgb(246,217,7)"/><text x="1170.00" y="350.50"></text></g><g><title>onnxruntime::PrepareForReduce&lt;float&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1167" y="356" width="3" height="15" fill="rgb(233,157,2)"/><text x="1170.00" y="366.50"></text></g><g><title>onnxruntime::CumSum&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="340" width="4" height="15" fill="rgb(249,197,35)"/><text x="1173.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="356" width="4" height="15" fill="rgb(232,30,13)"/><text x="1173.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="372" width="4" height="15" fill="rgb(210,212,2)"/><text x="1173.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="388" width="4" height="15" fill="rgb(207,35,40)"/><text x="1173.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="404" width="4" height="15" fill="rgb(233,0,44)"/><text x="1173.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="420" width="4" height="15" fill="rgb(227,151,54)"/><text x="1173.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="436" width="4" height="15" fill="rgb(242,160,48)"/><text x="1173.00" y="446.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="452" width="4" height="15" fill="rgb(225,39,13)"/><text x="1173.00" y="462.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="468" width="4" height="15" fill="rgb(233,5,10)"/><text x="1173.00" y="478.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1170" y="484" width="4" height="15" fill="rgb(226,9,19)"/><text x="1173.00" y="494.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1174" y="340" width="4" height="15" fill="rgb(239,215,26)"/><text x="1177.00" y="350.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1174" y="356" width="4" height="15" fill="rgb(219,195,26)"/><text x="1177.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1174" y="372" width="4" height="15" fill="rgb(222,115,49)"/><text x="1177.00" y="382.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.62%)</title><rect x="1163" y="260" width="19" height="15" fill="rgb(246,108,53)"/><text x="1166.00" y="270.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.62%)</title><rect x="1163" y="276" width="19" height="15" fill="rgb(206,146,18)"/><text x="1166.00" y="286.50"></text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.62%)</title><rect x="1163" y="292" width="19" height="15" fill="rgb(254,105,15)"/><text x="1166.00" y="302.50"></text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.62%)</title><rect x="1163" y="308" width="19" height="15" fill="rgb(240,126,53)"/><text x="1166.00" y="318.50"></text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.62%)</title><rect x="1163" y="324" width="19" height="15" fill="rgb(222,199,18)"/><text x="1166.00" y="334.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="340" width="4" height="15" fill="rgb(220,33,21)"/><text x="1181.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="356" width="4" height="15" fill="rgb(238,188,18)"/><text x="1181.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="372" width="4" height="15" fill="rgb(238,4,24)"/><text x="1181.00" y="382.50"></text></g><g><title>onnxruntime::Delete&lt;onnxruntime::Tensor&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1178" y="388" width="4" height="15" fill="rgb(218,219,0)"/><text x="1181.00" y="398.50"></text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:610) (10 samples, 3.24%)</title><rect x="1147" y="164" width="39" height="15" fill="rgb(244,149,13)"/><text x="1150.00" y="174.50">_ru..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py:64) (10 samples, 3.24%)</title><rect x="1147" y="180" width="39" height="15" fill="rgb(250,25,45)"/><text x="1150.00" y="190.50">run..</text></g><g><title>run (onnxruntime/capi/session.py:136) (8 samples, 2.59%)</title><rect x="1155" y="196" width="31" height="15" fill="rgb(219,77,22)"/><text x="1158.00" y="206.50">ru..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.94%)</title><rect x="1163" y="212" width="23" height="15" fill="rgb(232,80,50)"/><text x="1166.00" y="222.50">p..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.94%)</title><rect x="1163" y="228" width="23" height="15" fill="rgb(221,179,47)"/><text x="1166.00" y="238.50">v..</text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (6 samples, 1.94%)</title><rect x="1163" y="244" width="23" height="15" fill="rgb(217,217,14)"/><text x="1166.00" y="254.50">o..</text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.32%)</title><rect x="1182" y="260" width="4" height="15" fill="rgb(252,55,17)"/><text x="1185.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c:1378) (1 samples, 0.32%)</title><rect x="1182" y="276" width="4" height="15" fill="rgb(206,214,11)"/><text x="1185.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c:1139) (1 samples, 0.32%)</title><rect x="1182" y="292" width="4" height="15" fill="rgb(221,78,2)"/><text x="1185.00" y="302.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c:66) (1 samples, 0.32%)</title><rect x="1182" y="308" width="4" height="15" fill="rgb(246,103,35)"/><text x="1185.00" y="318.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c:132) (1 samples, 0.32%)</title><rect x="1182" y="324" width="4" height="15" fill="rgb(210,198,52)"/><text x="1185.00" y="334.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h:1480) (1 samples, 0.32%)</title><rect x="1182" y="340" width="4" height="15" fill="rgb(248,182,52)"/><text x="1185.00" y="350.50"></text></g><g><title>all (309 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(253,51,49)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:68) (12 samples, 3.88%)</title><rect x="1144" y="52" width="46" height="15" fill="rgb(243,41,7)"/><text x="1147.00" y="62.50">&lt;mod..</text></g><g><title>profile_ort (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:67) (12 samples, 3.88%)</title><rect x="1144" y="68" width="46" height="15" fill="rgb(223,61,5)"/><text x="1147.00" y="78.50">prof..</text></g><g><title>setup_profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:37) (12 samples, 3.88%)</title><rect x="1144" y="84" width="46" height="15" fill="rgb(212,210,37)"/><text x="1147.00" y="94.50">setu..</text></g><g><title>profile (bench_AdaBoostRegressor_default_b_reg_64_n_estimators5_1_50_12_float_.py:31) (12 samples, 3.88%)</title><rect x="1144" y="100" width="46" height="15" fill="rgb(205,216,53)"/><text x="1147.00" y="110.50">prof..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py:181) (12 samples, 3.88%)</title><rect x="1144" y="116" width="46" height="15" fill="rgb(241,141,12)"/><text x="1147.00" y="126.50">time..</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py:378) (12 samples, 3.88%)</title><rect x="1144" y="132" width="46" height="15" fill="rgb(227,119,8)"/><text x="1147.00" y="142.50">&lt;lam..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py:402) (11 samples, 3.56%)</title><rect x="1147" y="148" width="43" height="15" fill="rgb(232,23,6)"/><text x="1150.00" y="158.50">run ..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.32%)</title><rect x="1186" y="164" width="4" height="15" fill="rgb(230,56,39)"/><text x="1189.00" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (mlprodict/onnxrt/onnx_inference.py:611) (1 samples, 0.32%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(216,143,0)"/><text x="1189.00" y="190.50"></text></g></g></svg>