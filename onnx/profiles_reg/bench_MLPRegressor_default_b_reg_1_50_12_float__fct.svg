<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1702" onload="init(evt)" viewBox="0 0 1200 1702" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = true;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}

window.addEventListener("click", function(e) {
	var target = find_group(e.target);
	if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);
    }
    else if (e.target.id == "unzoom") unzoom();
    else if (e.target.id == "search") search_prompt();
}, false)

// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
	var target = find_group(e.target);
	if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function find_child(node, selector) {
	var children = node.querySelectorAll(selector);
	if (children.length) return children[0];
	return;
}
function find_group(node) {
	var parent = node.parentElement;
	if (!parent) return;
	if (parent.id == "frames") return node;
	return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text")
                e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x - xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = xpad;
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr.y.value);
    var ratio = (svg.width.baseVal.value - 2 * xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    unzoombtn.classList.remove("hide");
    var el = document.getElementById("frames").children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = document.getElementById("frames").children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementById("frames").children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
]]></script><rect x="0" y="0" width="1200" height="1702" fill="url(#background)"/><text id="title" x="600.00" y="24.00">py-spy</text><text id="details" x="10.00" y="1685.00"> </text><text id="unzoom" class="hide" x="10.00" y="24.00">Reset Zoom</text><text id="search" x="1090.00" y="24.00">Search</text><text id="matched" x="1090.00" y="1685.00"> </text><g id="frames"><g><title>__enter__ (warnings.py) (1 samples, 0.28%)</title><rect x="10" y="932" width="3" height="15" fill="rgb(233,146,21)"/><text x="13.00" y="942.50"></text></g><g><title>&lt;genexpr&gt; (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="868" width="6" height="15" fill="rgb(205,222,25)"/><text x="13.00" y="878.50"></text></g><g><title>activate (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="884" width="6" height="15" fill="rgb(253,169,38)"/><text x="13.00" y="894.50"></text></g><g><title>fixup_namespace_packages (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="900" width="6" height="15" fill="rgb(209,179,11)"/><text x="13.00" y="910.50"></text></g><g><title>_handle_ns (pkg_resources/__init__.py) (2 samples, 0.56%)</title><rect x="10" y="916" width="6" height="15" fill="rgb(239,41,7)"/><text x="13.00" y="926.50"></text></g><g><title>_find_module_shim (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="932" width="3" height="15" fill="rgb(207,225,39)"/><text x="16.00" y="942.50"></text></g><g><title>find_loader (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="948" width="3" height="15" fill="rgb(227,155,29)"/><text x="16.00" y="958.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="964" width="3" height="15" fill="rgb(249,147,39)"/><text x="16.00" y="974.50"></text></g><g><title>_path_isfile (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="980" width="3" height="15" fill="rgb(246,93,33)"/><text x="16.00" y="990.50"></text></g><g><title>_path_is_mode_type (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="13" y="996" width="3" height="15" fill="rgb(222,112,17)"/><text x="16.00" y="1006.50"></text></g><g><title>_call_aside (pkg_resources/__init__.py) (3 samples, 0.83%)</title><rect x="10" y="836" width="9" height="15" fill="rgb(216,177,1)"/><text x="13.00" y="846.50"></text></g><g><title>_initialize_master_working_set (pkg_resources/__init__.py) (3 samples, 0.83%)</title><rect x="10" y="852" width="9" height="15" fill="rgb(211,0,1)"/><text x="13.00" y="862.50"></text></g><g><title>add_entry (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="868" width="3" height="15" fill="rgb(206,172,7)"/><text x="19.00" y="878.50"></text></g><g><title>find_on_path (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="884" width="3" height="15" fill="rgb(213,30,14)"/><text x="19.00" y="894.50"></text></g><g><title>distributions_from_metadata (pkg_resources/__init__.py) (1 samples, 0.28%)</title><rect x="16" y="900" width="3" height="15" fill="rgb(214,168,31)"/><text x="19.00" y="910.50"></text></g><g><title>isdir (genericpath.py) (1 samples, 0.28%)</title><rect x="16" y="916" width="3" height="15" fill="rgb(233,122,7)"/><text x="19.00" y="926.50"></text></g><g><title>os_stat (python3.7) (1 samples, 0.28%)</title><rect x="16" y="932" width="3" height="15" fill="rgb(227,67,50)"/><text x="19.00" y="942.50"></text></g><g><title>__xstat (libc-2.29.so) (1 samples, 0.28%)</title><rect x="16" y="948" width="3" height="15" fill="rgb(222,98,50)"/><text x="19.00" y="958.50"></text></g><g><title>&lt;module&gt; (onnx/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="292" width="13" height="15" fill="rgb(252,27,7)"/><text x="13.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="308" width="13" height="15" fill="rgb(237,188,36)"/><text x="13.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="324" width="13" height="15" fill="rgb(228,218,8)"/><text x="13.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="340" width="13" height="15" fill="rgb(239,1,44)"/><text x="13.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="356" width="13" height="15" fill="rgb(210,206,10)"/><text x="13.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="372" width="13" height="15" fill="rgb(235,91,5)"/><text x="13.00" y="382.50"></text></g><g><title>&lt;module&gt; (onnx/external_data_helper.py) (4 samples, 1.11%)</title><rect x="10" y="388" width="13" height="15" fill="rgb(226,154,4)"/><text x="13.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="404" width="13" height="15" fill="rgb(210,137,31)"/><text x="13.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="420" width="13" height="15" fill="rgb(227,71,43)"/><text x="13.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="436" width="13" height="15" fill="rgb(223,179,36)"/><text x="13.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="452" width="13" height="15" fill="rgb(212,105,31)"/><text x="13.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="468" width="13" height="15" fill="rgb(229,218,31)"/><text x="13.00" y="478.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_pb.py) (4 samples, 1.11%)</title><rect x="10" y="484" width="13" height="15" fill="rgb(235,95,19)"/><text x="13.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="500" width="13" height="15" fill="rgb(222,65,45)"/><text x="13.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="516" width="13" height="15" fill="rgb(239,165,49)"/><text x="13.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="532" width="13" height="15" fill="rgb(217,144,29)"/><text x="13.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="548" width="13" height="15" fill="rgb(241,153,8)"/><text x="13.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="564" width="13" height="15" fill="rgb(206,63,20)"/><text x="13.00" y="574.50"></text></g><g><title>&lt;module&gt; (onnx/onnx_ml_pb2.py) (4 samples, 1.11%)</title><rect x="10" y="580" width="13" height="15" fill="rgb(230,88,46)"/><text x="13.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="596" width="13" height="15" fill="rgb(219,143,32)"/><text x="13.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="612" width="13" height="15" fill="rgb(221,119,18)"/><text x="13.00" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="628" width="13" height="15" fill="rgb(252,26,45)"/><text x="13.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="644" width="13" height="15" fill="rgb(229,80,48)"/><text x="13.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="660" width="13" height="15" fill="rgb(254,45,28)"/><text x="13.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="676" width="13" height="15" fill="rgb(216,149,16)"/><text x="13.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="692" width="13" height="15" fill="rgb(210,7,54)"/><text x="13.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="708" width="13" height="15" fill="rgb(213,200,25)"/><text x="13.00" y="718.50"></text></g><g><title>&lt;module&gt; (protobuf/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="724" width="13" height="15" fill="rgb(247,129,42)"/><text x="13.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="740" width="13" height="15" fill="rgb(211,142,52)"/><text x="13.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="756" width="13" height="15" fill="rgb(241,159,16)"/><text x="13.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="772" width="13" height="15" fill="rgb(219,224,38)"/><text x="13.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="10" y="788" width="13" height="15" fill="rgb(225,97,9)"/><text x="13.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="10" y="804" width="13" height="15" fill="rgb(249,85,6)"/><text x="13.00" y="814.50"></text></g><g><title>&lt;module&gt; (pkg_resources/__init__.py) (4 samples, 1.11%)</title><rect x="10" y="820" width="13" height="15" fill="rgb(216,160,32)"/><text x="13.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="836" width="4" height="15" fill="rgb(222,207,31)"/><text x="22.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="852" width="4" height="15" fill="rgb(233,34,3)"/><text x="22.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="868" width="4" height="15" fill="rgb(245,67,44)"/><text x="22.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="19" y="884" width="4" height="15" fill="rgb(245,101,30)"/><text x="22.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="19" y="900" width="4" height="15" fill="rgb(214,157,7)"/><text x="22.00" y="910.50"></text></g><g><title>&lt;module&gt; (pkg_resources/_vendor/packaging/specifiers.py) (1 samples, 0.28%)</title><rect x="19" y="916" width="4" height="15" fill="rgb(226,173,32)"/><text x="22.00" y="926.50"></text></g><g><title>with_metaclass (pkg_resources/_vendor/packaging/_compat.py) (1 samples, 0.28%)</title><rect x="19" y="932" width="4" height="15" fill="rgb(239,85,52)"/><text x="22.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.39%)</title><rect x="10" y="196" width="16" height="15" fill="rgb(229,61,17)"/><text x="13.00" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.39%)</title><rect x="10" y="212" width="16" height="15" fill="rgb(212,214,16)"/><text x="13.00" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.39%)</title><rect x="10" y="228" width="16" height="15" fill="rgb(227,61,33)"/><text x="13.00" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.39%)</title><rect x="10" y="244" width="16" height="15" fill="rgb(219,150,16)"/><text x="13.00" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (5 samples, 1.39%)</title><rect x="10" y="260" width="16" height="15" fill="rgb(221,123,43)"/><text x="13.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (5 samples, 1.39%)</title><rect x="10" y="276" width="16" height="15" fill="rgb(229,8,18)"/><text x="13.00" y="286.50"></text></g><g><title>&lt;module&gt; (sklearn/__init__.py) (1 samples, 0.28%)</title><rect x="23" y="292" width="3" height="15" fill="rgb(217,95,48)"/><text x="26.00" y="302.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="308" width="3" height="15" fill="rgb(217,114,3)"/><text x="26.00" y="318.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="324" width="3" height="15" fill="rgb(220,27,14)"/><text x="26.00" y="334.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="340" width="3" height="15" fill="rgb(217,81,54)"/><text x="26.00" y="350.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="356" width="3" height="15" fill="rgb(210,148,28)"/><text x="26.00" y="366.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="372" width="3" height="15" fill="rgb(205,202,54)"/><text x="26.00" y="382.50"></text></g><g><title>&lt;module&gt; (sklearn/base.py) (1 samples, 0.28%)</title><rect x="23" y="388" width="3" height="15" fill="rgb(225,81,48)"/><text x="26.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="404" width="3" height="15" fill="rgb(220,62,52)"/><text x="26.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="420" width="3" height="15" fill="rgb(236,96,37)"/><text x="26.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="436" width="3" height="15" fill="rgb(218,37,41)"/><text x="26.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="452" width="3" height="15" fill="rgb(226,118,11)"/><text x="26.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="468" width="3" height="15" fill="rgb(239,76,22)"/><text x="26.00" y="478.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/__init__.py) (1 samples, 0.28%)</title><rect x="23" y="484" width="3" height="15" fill="rgb(252,90,8)"/><text x="26.00" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="500" width="3" height="15" fill="rgb(228,39,15)"/><text x="26.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="516" width="3" height="15" fill="rgb(226,186,5)"/><text x="26.00" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="532" width="3" height="15" fill="rgb(233,113,50)"/><text x="26.00" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="548" width="3" height="15" fill="rgb(214,227,45)"/><text x="26.00" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="564" width="3" height="15" fill="rgb(216,158,15)"/><text x="26.00" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="580" width="3" height="15" fill="rgb(207,63,27)"/><text x="26.00" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="596" width="3" height="15" fill="rgb(231,39,2)"/><text x="26.00" y="606.50"></text></g><g><title>&lt;module&gt; (sklearn/utils/_joblib.py) (1 samples, 0.28%)</title><rect x="23" y="612" width="3" height="15" fill="rgb(219,147,53)"/><text x="26.00" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="628" width="3" height="15" fill="rgb(242,84,47)"/><text x="26.00" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="644" width="3" height="15" fill="rgb(248,101,47)"/><text x="26.00" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="660" width="3" height="15" fill="rgb(241,179,44)"/><text x="26.00" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="676" width="3" height="15" fill="rgb(207,33,25)"/><text x="26.00" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="692" width="3" height="15" fill="rgb(209,104,49)"/><text x="26.00" y="702.50"></text></g><g><title>&lt;module&gt; (joblib/__init__.py) (1 samples, 0.28%)</title><rect x="23" y="708" width="3" height="15" fill="rgb(227,159,19)"/><text x="26.00" y="718.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="724" width="3" height="15" fill="rgb(234,215,14)"/><text x="26.00" y="734.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="740" width="3" height="15" fill="rgb(235,85,52)"/><text x="26.00" y="750.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="756" width="3" height="15" fill="rgb(230,88,17)"/><text x="26.00" y="766.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="772" width="3" height="15" fill="rgb(235,22,51)"/><text x="26.00" y="782.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="788" width="3" height="15" fill="rgb(232,105,14)"/><text x="26.00" y="798.50"></text></g><g><title>&lt;module&gt; (joblib/parallel.py) (1 samples, 0.28%)</title><rect x="23" y="804" width="3" height="15" fill="rgb(215,70,32)"/><text x="26.00" y="814.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="820" width="3" height="15" fill="rgb(207,186,13)"/><text x="26.00" y="830.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="836" width="3" height="15" fill="rgb(222,47,18)"/><text x="26.00" y="846.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="852" width="3" height="15" fill="rgb(205,22,27)"/><text x="26.00" y="862.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="23" y="868" width="3" height="15" fill="rgb(230,61,44)"/><text x="26.00" y="878.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="23" y="884" width="3" height="15" fill="rgb(235,21,44)"/><text x="26.00" y="894.50"></text></g><g><title>&lt;module&gt; (joblib/my_exceptions.py) (1 samples, 0.28%)</title><rect x="23" y="900" width="3" height="15" fill="rgb(250,130,14)"/><text x="26.00" y="910.50"></text></g><g><title>_mk_common_exceptions (joblib/my_exceptions.py) (1 samples, 0.28%)</title><rect x="23" y="916" width="3" height="15" fill="rgb(232,73,12)"/><text x="26.00" y="926.50"></text></g><g><title>_mk_exception (joblib/my_exceptions.py) (1 samples, 0.28%)</title><rect x="23" y="932" width="3" height="15" fill="rgb(234,59,41)"/><text x="26.00" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1124" width="3" height="15" fill="rgb(221,10,40)"/><text x="29.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1140" width="3" height="15" fill="rgb(253,46,7)"/><text x="29.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1156" width="3" height="15" fill="rgb(237,158,23)"/><text x="29.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="1172" width="3" height="15" fill="rgb(253,137,1)"/><text x="29.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1188" width="3" height="15" fill="rgb(230,136,27)"/><text x="29.00" y="1198.50"></text></g><g><title>&lt;module&gt; (skl2onnx/_parse.py) (1 samples, 0.28%)</title><rect x="26" y="1204" width="3" height="15" fill="rgb(250,176,6)"/><text x="29.00" y="1214.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1220" width="3" height="15" fill="rgb(232,107,23)"/><text x="29.00" y="1230.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1236" width="3" height="15" fill="rgb(229,185,18)"/><text x="29.00" y="1246.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1252" width="3" height="15" fill="rgb(225,147,16)"/><text x="29.00" y="1262.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1268" width="3" height="15" fill="rgb(208,28,7)"/><text x="29.00" y="1278.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1284" width="3" height="15" fill="rgb(245,106,8)"/><text x="29.00" y="1294.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="26" y="1300" width="3" height="15" fill="rgb(229,214,39)"/><text x="29.00" y="1310.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1316" width="3" height="15" fill="rgb(248,169,9)"/><text x="29.00" y="1326.50"></text></g><g><title>&lt;module&gt; (sklearn/pipeline.py) (1 samples, 0.28%)</title><rect x="26" y="1332" width="3" height="15" fill="rgb(238,60,51)"/><text x="29.00" y="1342.50"></text></g><g><title>parent (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="26" y="1348" width="3" height="15" fill="rgb(246,200,31)"/><text x="29.00" y="1358.50"></text></g><g><title>get_rst_doc (skl2onnx/algebra/automation.py) (1 samples, 0.28%)</title><rect x="29" y="1508" width="3" height="15" fill="rgb(231,208,53)"/><text x="32.00" y="1518.50"></text></g><g><title>render (jinja2/asyncsupport.py) (1 samples, 0.28%)</title><rect x="29" y="1524" width="3" height="15" fill="rgb(222,152,30)"/><text x="32.00" y="1534.50"></text></g><g><title>render (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="29" y="1540" width="3" height="15" fill="rgb(241,163,32)"/><text x="32.00" y="1550.50"></text></g><g><title>unicode_join (python3.7) (1 samples, 0.28%)</title><rect x="29" y="1556" width="3" height="15" fill="rgb(217,47,49)"/><text x="32.00" y="1566.50"></text></g><g><title>root (&lt;template&gt;) (1 samples, 0.28%)</title><rect x="29" y="1572" width="3" height="15" fill="rgb(229,122,15)"/><text x="32.00" y="1582.50"></text></g><g><title>getattr (jinja2/environment.py) (1 samples, 0.28%)</title><rect x="29" y="1588" width="3" height="15" fill="rgb(239,159,28)"/><text x="32.00" y="1598.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="1604" width="3" height="15" fill="rgb(239,203,14)"/><text x="32.00" y="1614.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;, onnx::OpSchema, , &gt;( const&amp;)::{lambda(onnx::OpSchema const*)#1}&amp;&amp;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp; (*)(onnx::OpSchema const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="1620" width="3" height="15" fill="rgb(231,37,21)"/><text x="32.00" y="1630.50"></text></g><g><title>pybind11::detail::map_caster&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute&gt;::cast&lt;std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, onnx::OpSchema::Attribute, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, onnx::OpSchema::Attribute&gt; &gt; &gt; const&amp;&gt; (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="1636" width="3" height="15" fill="rgb(254,70,45)"/><text x="32.00" y="1646.50"></text></g><g><title>pybind11::detail::type_caster_generic::cast (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="29" y="1652" width="3" height="15" fill="rgb(233,166,1)"/><text x="32.00" y="1662.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="484" width="10" height="15" fill="rgb(253,114,18)"/><text x="29.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="500" width="10" height="15" fill="rgb(223,26,19)"/><text x="29.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="516" width="10" height="15" fill="rgb(228,141,27)"/><text x="29.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="532" width="10" height="15" fill="rgb(238,103,53)"/><text x="29.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="26" y="548" width="10" height="15" fill="rgb(244,112,23)"/><text x="29.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="564" width="10" height="15" fill="rgb(207,219,24)"/><text x="29.00" y="574.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/__init__.py) (3 samples, 0.83%)</title><rect x="26" y="580" width="10" height="15" fill="rgb(220,185,34)"/><text x="29.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="596" width="10" height="15" fill="rgb(236,170,12)"/><text x="29.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="612" width="10" height="15" fill="rgb(210,102,53)"/><text x="29.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="628" width="10" height="15" fill="rgb(216,97,34)"/><text x="29.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="26" y="644" width="10" height="15" fill="rgb(242,75,47)"/><text x="29.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="660" width="10" height="15" fill="rgb(236,203,32)"/><text x="29.00" y="670.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/validate/validate.py) (3 samples, 0.83%)</title><rect x="26" y="676" width="10" height="15" fill="rgb(208,43,27)"/><text x="29.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="692" width="10" height="15" fill="rgb(217,92,28)"/><text x="29.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="708" width="10" height="15" fill="rgb(210,192,29)"/><text x="29.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="724" width="10" height="15" fill="rgb(217,102,48)"/><text x="29.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="26" y="740" width="10" height="15" fill="rgb(212,140,34)"/><text x="29.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="756" width="10" height="15" fill="rgb(252,132,15)"/><text x="29.00" y="766.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/__init__.py) (3 samples, 0.83%)</title><rect x="26" y="772" width="10" height="15" fill="rgb(245,6,30)"/><text x="29.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="788" width="10" height="15" fill="rgb(232,107,42)"/><text x="29.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="804" width="10" height="15" fill="rgb(252,18,23)"/><text x="29.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="820" width="10" height="15" fill="rgb(236,55,33)"/><text x="29.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="26" y="836" width="10" height="15" fill="rgb(246,84,22)"/><text x="29.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="852" width="10" height="15" fill="rgb(242,97,24)"/><text x="29.00" y="862.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnx_conv/register.py) (3 samples, 0.83%)</title><rect x="26" y="868" width="10" height="15" fill="rgb(209,150,6)"/><text x="29.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="884" width="10" height="15" fill="rgb(208,99,20)"/><text x="29.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="900" width="10" height="15" fill="rgb(224,169,38)"/><text x="29.00" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="916" width="10" height="15" fill="rgb(214,188,36)"/><text x="29.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="932" width="10" height="15" fill="rgb(227,229,42)"/><text x="29.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="948" width="10" height="15" fill="rgb(212,188,48)"/><text x="29.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="964" width="10" height="15" fill="rgb(217,21,18)"/><text x="29.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="26" y="980" width="10" height="15" fill="rgb(217,162,18)"/><text x="29.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="996" width="10" height="15" fill="rgb(240,59,3)"/><text x="29.00" y="1006.50"></text></g><g><title>&lt;module&gt; (skl2onnx/__init__.py) (3 samples, 0.83%)</title><rect x="26" y="1012" width="10" height="15" fill="rgb(226,26,43)"/><text x="29.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="1028" width="10" height="15" fill="rgb(249,206,43)"/><text x="29.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="1044" width="10" height="15" fill="rgb(254,93,40)"/><text x="29.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="1060" width="10" height="15" fill="rgb(234,163,33)"/><text x="29.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="26" y="1076" width="10" height="15" fill="rgb(238,79,7)"/><text x="29.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="26" y="1092" width="10" height="15" fill="rgb(220,196,33)"/><text x="29.00" y="1102.50"></text></g><g><title>&lt;module&gt; (skl2onnx/convert.py) (3 samples, 0.83%)</title><rect x="26" y="1108" width="10" height="15" fill="rgb(241,157,25)"/><text x="29.00" y="1118.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1124" width="7" height="15" fill="rgb(243,203,14)"/><text x="32.00" y="1134.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1140" width="7" height="15" fill="rgb(243,71,39)"/><text x="32.00" y="1150.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1156" width="7" height="15" fill="rgb(248,25,35)"/><text x="32.00" y="1166.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1172" width="7" height="15" fill="rgb(220,36,0)"/><text x="32.00" y="1182.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1188" width="7" height="15" fill="rgb(242,200,48)"/><text x="32.00" y="1198.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="29" y="1204" width="7" height="15" fill="rgb(212,208,46)"/><text x="32.00" y="1214.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1220" width="7" height="15" fill="rgb(220,141,8)"/><text x="32.00" y="1230.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/__init__.py) (2 samples, 0.56%)</title><rect x="29" y="1236" width="7" height="15" fill="rgb(239,227,42)"/><text x="32.00" y="1246.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1252" width="7" height="15" fill="rgb(234,48,17)"/><text x="32.00" y="1262.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1268" width="7" height="15" fill="rgb(250,166,44)"/><text x="32.00" y="1278.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1284" width="7" height="15" fill="rgb(227,83,10)"/><text x="32.00" y="1294.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1300" width="7" height="15" fill="rgb(206,126,33)"/><text x="32.00" y="1310.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1316" width="7" height="15" fill="rgb(241,122,23)"/><text x="32.00" y="1326.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="29" y="1332" width="7" height="15" fill="rgb(248,201,18)"/><text x="32.00" y="1342.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1348" width="7" height="15" fill="rgb(254,118,8)"/><text x="32.00" y="1358.50"></text></g><g><title>&lt;module&gt; (skl2onnx/operator_converters/cross_decomposition.py) (2 samples, 0.56%)</title><rect x="29" y="1364" width="7" height="15" fill="rgb(216,73,29)"/><text x="32.00" y="1374.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1380" width="7" height="15" fill="rgb(237,181,44)"/><text x="32.00" y="1390.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1396" width="7" height="15" fill="rgb(211,11,23)"/><text x="32.00" y="1406.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1412" width="7" height="15" fill="rgb(210,153,30)"/><text x="32.00" y="1422.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="29" y="1428" width="7" height="15" fill="rgb(252,96,18)"/><text x="32.00" y="1438.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="29" y="1444" width="7" height="15" fill="rgb(220,156,3)"/><text x="32.00" y="1454.50"></text></g><g><title>&lt;module&gt; (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.56%)</title><rect x="29" y="1460" width="7" height="15" fill="rgb(242,114,48)"/><text x="32.00" y="1470.50"></text></g><g><title>_update_module (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.56%)</title><rect x="29" y="1476" width="7" height="15" fill="rgb(250,165,17)"/><text x="32.00" y="1486.50"></text></g><g><title>dynamic_class_creation (skl2onnx/algebra/onnx_ops.py) (2 samples, 0.56%)</title><rect x="29" y="1492" width="7" height="15" fill="rgb(219,204,31)"/><text x="32.00" y="1502.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="32" y="1508" width="4" height="15" fill="rgb(237,103,23)"/><text x="35.00" y="1518.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const, , pybind11::name, pybind11::scope, pybind11::sibling&gt;(onnx::pybind11_init_onnx_cpp2py_export(pybind11::module&amp;)::{lambda()#9}&amp;&amp;, std::vector&lt;onnx::OpSchema, std::allocator&lt;onnx::OpSchema&gt; &gt; const (*)(), pybind11::name const, pybind11::scope&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnx/onnx_cpp2py_export.cpython-37m-x86_64-linux-gnu.so) (1 samples, 0.28%)</title><rect x="32" y="1524" width="4" height="15" fill="rgb(220,11,4)"/><text x="35.00" y="1534.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.11%)</title><rect x="26" y="340" width="13" height="15" fill="rgb(242,16,15)"/><text x="29.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="26" y="356" width="13" height="15" fill="rgb(216,145,52)"/><text x="29.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="26" y="372" width="13" height="15" fill="rgb(254,113,3)"/><text x="29.00" y="382.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="26" y="388" width="13" height="15" fill="rgb(230,175,4)"/><text x="29.00" y="398.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (4 samples, 1.11%)</title><rect x="26" y="404" width="13" height="15" fill="rgb(238,77,40)"/><text x="29.00" y="414.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="26" y="420" width="13" height="15" fill="rgb(236,177,37)"/><text x="29.00" y="430.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/__init__.py) (4 samples, 1.11%)</title><rect x="26" y="436" width="13" height="15" fill="rgb(222,115,11)"/><text x="29.00" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="26" y="452" width="13" height="15" fill="rgb(209,109,6)"/><text x="29.00" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (4 samples, 1.11%)</title><rect x="26" y="468" width="13" height="15" fill="rgb(217,170,45)"/><text x="29.00" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="484" width="3" height="15" fill="rgb(242,61,29)"/><text x="39.00" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="500" width="3" height="15" fill="rgb(221,86,5)"/><text x="39.00" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="516" width="3" height="15" fill="rgb(219,23,25)"/><text x="39.00" y="526.50"></text></g><g><title>&lt;module&gt; (mlprodict/onnxrt/onnx_inference.py) (1 samples, 0.28%)</title><rect x="36" y="532" width="3" height="15" fill="rgb(205,0,1)"/><text x="39.00" y="542.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="548" width="3" height="15" fill="rgb(251,17,43)"/><text x="39.00" y="558.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="564" width="3" height="15" fill="rgb(245,90,36)"/><text x="39.00" y="574.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="580" width="3" height="15" fill="rgb(245,191,28)"/><text x="39.00" y="590.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="596" width="3" height="15" fill="rgb(243,64,50)"/><text x="39.00" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="612" width="3" height="15" fill="rgb(216,180,30)"/><text x="39.00" y="622.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py) (1 samples, 0.28%)</title><rect x="36" y="628" width="3" height="15" fill="rgb(239,221,16)"/><text x="39.00" y="638.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="644" width="3" height="15" fill="rgb(243,98,19)"/><text x="39.00" y="654.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="660" width="3" height="15" fill="rgb(235,166,29)"/><text x="39.00" y="670.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="676" width="3" height="15" fill="rgb(214,129,21)"/><text x="39.00" y="686.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="692" width="3" height="15" fill="rgb(213,117,7)"/><text x="39.00" y="702.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="708" width="3" height="15" fill="rgb(254,60,16)"/><text x="39.00" y="718.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py) (1 samples, 0.28%)</title><rect x="36" y="724" width="3" height="15" fill="rgb(208,46,15)"/><text x="39.00" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="740" width="3" height="15" fill="rgb(205,168,44)"/><text x="39.00" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="756" width="3" height="15" fill="rgb(226,30,17)"/><text x="39.00" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="772" width="3" height="15" fill="rgb(232,47,40)"/><text x="39.00" y="782.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="788" width="3" height="15" fill="rgb(250,1,30)"/><text x="39.00" y="798.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="804" width="3" height="15" fill="rgb(226,144,5)"/><text x="39.00" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py) (1 samples, 0.28%)</title><rect x="36" y="820" width="3" height="15" fill="rgb(226,61,45)"/><text x="39.00" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="836" width="3" height="15" fill="rgb(238,175,25)"/><text x="39.00" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="852" width="3" height="15" fill="rgb(237,173,9)"/><text x="39.00" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="868" width="3" height="15" fill="rgb(223,204,45)"/><text x="39.00" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="884" width="3" height="15" fill="rgb(205,11,34)"/><text x="39.00" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="900" width="3" height="15" fill="rgb(210,24,48)"/><text x="39.00" y="910.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py) (1 samples, 0.28%)</title><rect x="36" y="916" width="3" height="15" fill="rgb(207,108,15)"/><text x="39.00" y="926.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="932" width="3" height="15" fill="rgb(207,170,0)"/><text x="39.00" y="942.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="948" width="3" height="15" fill="rgb(243,223,2)"/><text x="39.00" y="958.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="964" width="3" height="15" fill="rgb(210,146,20)"/><text x="39.00" y="974.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="980" width="3" height="15" fill="rgb(237,138,33)"/><text x="39.00" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="996" width="3" height="15" fill="rgb(205,215,43)"/><text x="39.00" y="1006.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py) (1 samples, 0.28%)</title><rect x="36" y="1012" width="3" height="15" fill="rgb(229,172,25)"/><text x="39.00" y="1022.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1028" width="3" height="15" fill="rgb(248,108,48)"/><text x="39.00" y="1038.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1044" width="3" height="15" fill="rgb(236,188,17)"/><text x="39.00" y="1054.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1060" width="3" height="15" fill="rgb(251,144,35)"/><text x="39.00" y="1070.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="36" y="1076" width="3" height="15" fill="rgb(226,117,39)"/><text x="39.00" y="1086.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="36" y="1092" width="3" height="15" fill="rgb(247,42,18)"/><text x="39.00" y="1102.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py) (1 samples, 0.28%)</title><rect x="36" y="1108" width="3" height="15" fill="rgb(206,13,29)"/><text x="39.00" y="1118.50"></text></g><g><title>NDFrame (pandas/core/generic.py) (1 samples, 0.28%)</title><rect x="36" y="1124" width="3" height="15" fill="rgb(244,50,11)"/><text x="39.00" y="1134.50"></text></g><g><title>__call__ (pandas/util/_decorators.py) (1 samples, 0.28%)</title><rect x="36" y="1140" width="3" height="15" fill="rgb(217,37,28)"/><text x="39.00" y="1150.50"></text></g><g><title>dedent (textwrap.py) (1 samples, 0.28%)</title><rect x="36" y="1156" width="3" height="15" fill="rgb(233,3,26)"/><text x="39.00" y="1166.50"></text></g><g><title>sub (re.py) (1 samples, 0.28%)</title><rect x="36" y="1172" width="3" height="15" fill="rgb(254,155,43)"/><text x="39.00" y="1182.50"></text></g><g><title>_sre_SRE_Pattern_sub (python3.7) (1 samples, 0.28%)</title><rect x="36" y="1188" width="3" height="15" fill="rgb(246,47,49)"/><text x="39.00" y="1198.50"></text></g><g><title>sre_search.cold.44 (python3.7) (1 samples, 0.28%)</title><rect x="36" y="1204" width="3" height="15" fill="rgb(224,137,30)"/><text x="39.00" y="1214.50"></text></g><g><title>sre_ucs1_match (python3.7) (1 samples, 0.28%)</title><rect x="36" y="1220" width="3" height="15" fill="rgb(207,176,9)"/><text x="39.00" y="1230.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/code_helper.py) (1 samples, 0.28%)</title><rect x="39" y="580" width="3" height="15" fill="rgb(226,171,53)"/><text x="42.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="596" width="3" height="15" fill="rgb(242,28,28)"/><text x="42.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="612" width="3" height="15" fill="rgb(226,109,17)"/><text x="42.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="628" width="3" height="15" fill="rgb(213,11,15)"/><text x="42.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="39" y="644" width="3" height="15" fill="rgb(232,114,2)"/><text x="42.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="660" width="3" height="15" fill="rgb(222,33,48)"/><text x="42.00" y="670.50"></text></g><g><title>&lt;module&gt; (autopep8.py) (1 samples, 0.28%)</title><rect x="39" y="676" width="3" height="15" fill="rgb(228,27,54)"/><text x="42.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="692" width="3" height="15" fill="rgb(244,73,43)"/><text x="42.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="708" width="3" height="15" fill="rgb(208,175,23)"/><text x="42.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="724" width="3" height="15" fill="rgb(224,106,1)"/><text x="42.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="39" y="740" width="3" height="15" fill="rgb(217,86,23)"/><text x="42.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="39" y="756" width="3" height="15" fill="rgb(231,12,22)"/><text x="42.00" y="766.50"></text></g><g><title>&lt;module&gt; (pycodestyle.py) (1 samples, 0.28%)</title><rect x="39" y="772" width="3" height="15" fill="rgb(235,182,0)"/><text x="42.00" y="782.50"></text></g><g><title>compile (re.py) (1 samples, 0.28%)</title><rect x="39" y="788" width="3" height="15" fill="rgb(219,141,49)"/><text x="42.00" y="798.50"></text></g><g><title>_compile (re.py) (1 samples, 0.28%)</title><rect x="39" y="804" width="3" height="15" fill="rgb(247,81,30)"/><text x="42.00" y="814.50"></text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/__init__.py) (7 samples, 1.94%)</title><rect x="26" y="244" width="23" height="15" fill="rgb(243,24,24)"/><text x="29.00" y="254.50">&lt;..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="26" y="260" width="23" height="15" fill="rgb(222,51,50)"/><text x="29.00" y="270.50">_..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="26" y="276" width="23" height="15" fill="rgb(214,184,45)"/><text x="29.00" y="286.50">_..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="26" y="292" width="23" height="15" fill="rgb(242,34,36)"/><text x="29.00" y="302.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (7 samples, 1.94%)</title><rect x="26" y="308" width="23" height="15" fill="rgb(208,48,41)"/><text x="29.00" y="318.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (7 samples, 1.94%)</title><rect x="26" y="324" width="23" height="15" fill="rgb(217,116,21)"/><text x="29.00" y="334.50">_..</text></g><g><title>&lt;module&gt; (mlprodict/asv_benchmark/create_asv.py) (3 samples, 0.83%)</title><rect x="39" y="340" width="10" height="15" fill="rgb(225,229,3)"/><text x="42.00" y="350.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="356" width="10" height="15" fill="rgb(240,116,43)"/><text x="42.00" y="366.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="372" width="10" height="15" fill="rgb(217,136,16)"/><text x="42.00" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="388" width="10" height="15" fill="rgb(211,23,6)"/><text x="42.00" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="404" width="10" height="15" fill="rgb(239,140,22)"/><text x="42.00" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="420" width="10" height="15" fill="rgb(215,24,48)"/><text x="42.00" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="436" width="10" height="15" fill="rgb(227,173,1)"/><text x="42.00" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="39" y="452" width="10" height="15" fill="rgb(212,9,35)"/><text x="42.00" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="468" width="10" height="15" fill="rgb(252,95,47)"/><text x="42.00" y="478.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/__init__.py) (3 samples, 0.83%)</title><rect x="39" y="484" width="10" height="15" fill="rgb(240,201,51)"/><text x="42.00" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="500" width="10" height="15" fill="rgb(209,180,20)"/><text x="42.00" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="516" width="10" height="15" fill="rgb(252,144,48)"/><text x="42.00" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="532" width="10" height="15" fill="rgb(241,185,12)"/><text x="42.00" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (3 samples, 0.83%)</title><rect x="39" y="548" width="10" height="15" fill="rgb(252,214,29)"/><text x="42.00" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (3 samples, 0.83%)</title><rect x="39" y="564" width="10" height="15" fill="rgb(245,201,11)"/><text x="42.00" y="574.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/pycode/setup_helper.py) (2 samples, 0.56%)</title><rect x="42" y="580" width="7" height="15" fill="rgb(217,98,12)"/><text x="45.00" y="590.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="596" width="7" height="15" fill="rgb(216,190,39)"/><text x="45.00" y="606.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="612" width="7" height="15" fill="rgb(226,148,5)"/><text x="45.00" y="622.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="628" width="7" height="15" fill="rgb(240,102,51)"/><text x="45.00" y="638.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="644" width="7" height="15" fill="rgb(211,196,43)"/><text x="45.00" y="654.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="660" width="7" height="15" fill="rgb(244,194,15)"/><text x="45.00" y="670.50"></text></g><g><title>&lt;module&gt; (pyquickhelper/loghelper/history_helper.py) (2 samples, 0.56%)</title><rect x="42" y="676" width="7" height="15" fill="rgb(242,184,9)"/><text x="45.00" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="692" width="7" height="15" fill="rgb(207,220,10)"/><text x="45.00" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="708" width="7" height="15" fill="rgb(243,63,36)"/><text x="45.00" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="724" width="7" height="15" fill="rgb(228,116,37)"/><text x="45.00" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="740" width="7" height="15" fill="rgb(206,44,48)"/><text x="45.00" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="756" width="7" height="15" fill="rgb(238,60,2)"/><text x="45.00" y="766.50"></text></g><g><title>&lt;module&gt; (requests/__init__.py) (2 samples, 0.56%)</title><rect x="42" y="772" width="7" height="15" fill="rgb(214,208,16)"/><text x="45.00" y="782.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="788" width="7" height="15" fill="rgb(248,73,27)"/><text x="45.00" y="798.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="804" width="7" height="15" fill="rgb(230,54,45)"/><text x="45.00" y="814.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="820" width="7" height="15" fill="rgb(235,146,39)"/><text x="45.00" y="830.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="836" width="7" height="15" fill="rgb(232,221,45)"/><text x="45.00" y="846.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="852" width="7" height="15" fill="rgb(219,69,21)"/><text x="45.00" y="862.50"></text></g><g><title>&lt;module&gt; (urllib3/__init__.py) (2 samples, 0.56%)</title><rect x="42" y="868" width="7" height="15" fill="rgb(250,103,11)"/><text x="45.00" y="878.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="884" width="7" height="15" fill="rgb(209,91,29)"/><text x="45.00" y="894.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="900" width="7" height="15" fill="rgb(209,134,48)"/><text x="45.00" y="910.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="916" width="7" height="15" fill="rgb(243,191,21)"/><text x="45.00" y="926.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="932" width="7" height="15" fill="rgb(214,149,21)"/><text x="45.00" y="942.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="948" width="7" height="15" fill="rgb(225,123,7)"/><text x="45.00" y="958.50"></text></g><g><title>&lt;module&gt; (urllib3/connectionpool.py) (2 samples, 0.56%)</title><rect x="42" y="964" width="7" height="15" fill="rgb(226,46,8)"/><text x="45.00" y="974.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="980" width="7" height="15" fill="rgb(253,45,40)"/><text x="45.00" y="990.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="996" width="7" height="15" fill="rgb(237,94,27)"/><text x="45.00" y="1006.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1012" width="7" height="15" fill="rgb(232,85,30)"/><text x="45.00" y="1022.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1028" width="7" height="15" fill="rgb(248,2,33)"/><text x="45.00" y="1038.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1044" width="7" height="15" fill="rgb(228,48,18)"/><text x="45.00" y="1054.50"></text></g><g><title>&lt;module&gt; (urllib3/connection.py) (2 samples, 0.56%)</title><rect x="42" y="1060" width="7" height="15" fill="rgb(212,208,35)"/><text x="45.00" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1076" width="7" height="15" fill="rgb(246,7,38)"/><text x="45.00" y="1086.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1092" width="7" height="15" fill="rgb(232,147,50)"/><text x="45.00" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1108" width="7" height="15" fill="rgb(217,74,46)"/><text x="45.00" y="1118.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1124" width="7" height="15" fill="rgb(208,186,44)"/><text x="45.00" y="1134.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1140" width="7" height="15" fill="rgb(250,124,10)"/><text x="45.00" y="1150.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1156" width="7" height="15" fill="rgb(246,90,9)"/><text x="45.00" y="1166.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1172" width="7" height="15" fill="rgb(218,72,51)"/><text x="45.00" y="1182.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1188" width="7" height="15" fill="rgb(222,151,26)"/><text x="45.00" y="1198.50"></text></g><g><title>&lt;module&gt; (urllib3/util/__init__.py) (2 samples, 0.56%)</title><rect x="42" y="1204" width="7" height="15" fill="rgb(217,198,32)"/><text x="45.00" y="1214.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1220" width="7" height="15" fill="rgb(208,108,31)"/><text x="45.00" y="1230.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1236" width="7" height="15" fill="rgb(218,195,37)"/><text x="45.00" y="1246.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1252" width="7" height="15" fill="rgb(250,40,21)"/><text x="45.00" y="1262.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1268" width="7" height="15" fill="rgb(216,125,5)"/><text x="45.00" y="1278.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1284" width="7" height="15" fill="rgb(253,191,30)"/><text x="45.00" y="1294.50"></text></g><g><title>&lt;module&gt; (urllib3/util/ssl_.py) (2 samples, 0.56%)</title><rect x="42" y="1300" width="7" height="15" fill="rgb(220,11,1)"/><text x="45.00" y="1310.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1316" width="7" height="15" fill="rgb(211,227,8)"/><text x="45.00" y="1326.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1332" width="7" height="15" fill="rgb(216,203,51)"/><text x="45.00" y="1342.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1348" width="7" height="15" fill="rgb(224,223,0)"/><text x="45.00" y="1358.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (2 samples, 0.56%)</title><rect x="42" y="1364" width="7" height="15" fill="rgb(206,26,11)"/><text x="45.00" y="1374.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (2 samples, 0.56%)</title><rect x="42" y="1380" width="7" height="15" fill="rgb(240,42,16)"/><text x="45.00" y="1390.50"></text></g><g><title>&lt;module&gt; (urllib3/util/url.py) (2 samples, 0.56%)</title><rect x="42" y="1396" width="7" height="15" fill="rgb(221,5,10)"/><text x="45.00" y="1406.50"></text></g><g><title>compile (re.py) (2 samples, 0.56%)</title><rect x="42" y="1412" width="7" height="15" fill="rgb(246,60,21)"/><text x="45.00" y="1422.50"></text></g><g><title>_compile (re.py) (2 samples, 0.56%)</title><rect x="42" y="1428" width="7" height="15" fill="rgb(242,153,6)"/><text x="45.00" y="1438.50"></text></g><g><title>compile (sre_compile.py) (2 samples, 0.56%)</title><rect x="42" y="1444" width="7" height="15" fill="rgb(235,86,7)"/><text x="45.00" y="1454.50"></text></g><g><title>parse (sre_parse.py) (2 samples, 0.56%)</title><rect x="42" y="1460" width="7" height="15" fill="rgb(227,206,49)"/><text x="45.00" y="1470.50"></text></g><g><title>_parse_sub (sre_parse.py) (2 samples, 0.56%)</title><rect x="42" y="1476" width="7" height="15" fill="rgb(236,69,34)"/><text x="45.00" y="1486.50"></text></g><g><title>_parse (sre_parse.py) (2 samples, 0.56%)</title><rect x="42" y="1492" width="7" height="15" fill="rgb(247,61,1)"/><text x="45.00" y="1502.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1508" width="3" height="15" fill="rgb(234,6,33)"/><text x="49.00" y="1518.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1524" width="3" height="15" fill="rgb(240,47,15)"/><text x="49.00" y="1534.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1540" width="3" height="15" fill="rgb(231,141,12)"/><text x="49.00" y="1550.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1556" width="3" height="15" fill="rgb(233,204,4)"/><text x="49.00" y="1566.50"></text></g><g><title>_parse_sub (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1572" width="3" height="15" fill="rgb(231,64,34)"/><text x="49.00" y="1582.50"></text></g><g><title>_parse (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1588" width="3" height="15" fill="rgb(244,105,7)"/><text x="49.00" y="1598.50"></text></g><g><title>append (sre_parse.py) (1 samples, 0.28%)</title><rect x="46" y="1604" width="3" height="15" fill="rgb(228,47,51)"/><text x="49.00" y="1614.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.61%)</title><rect x="10" y="68" width="42" height="15" fill="rgb(218,210,42)"/><text x="13.00" y="78.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.61%)</title><rect x="10" y="84" width="42" height="15" fill="rgb(253,16,19)"/><text x="13.00" y="94.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.61%)</title><rect x="10" y="100" width="42" height="15" fill="rgb(247,92,32)"/><text x="13.00" y="110.50">_lo..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (13 samples, 3.61%)</title><rect x="10" y="116" width="42" height="15" fill="rgb(215,102,34)"/><text x="13.00" y="126.50">exe..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.61%)</title><rect x="10" y="132" width="42" height="15" fill="rgb(208,211,4)"/><text x="13.00" y="142.50">_ca..</text></g><g><title>&lt;module&gt; (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py) (13 samples, 3.61%)</title><rect x="10" y="148" width="42" height="15" fill="rgb(245,220,6)"/><text x="13.00" y="158.50">&lt;mo..</text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.61%)</title><rect x="10" y="164" width="42" height="15" fill="rgb(243,29,43)"/><text x="13.00" y="174.50">_fi..</text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (13 samples, 3.61%)</title><rect x="10" y="180" width="42" height="15" fill="rgb(243,19,43)"/><text x="13.00" y="190.50">_fi..</text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.22%)</title><rect x="26" y="196" width="26" height="15" fill="rgb(237,117,28)"/><text x="29.00" y="206.50">_..</text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (8 samples, 2.22%)</title><rect x="26" y="212" width="26" height="15" fill="rgb(224,194,1)"/><text x="29.00" y="222.50">e..</text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (8 samples, 2.22%)</title><rect x="26" y="228" width="26" height="15" fill="rgb(233,55,18)"/><text x="29.00" y="238.50">_..</text></g><g><title>&lt;module&gt; (numpy/__init__.py) (1 samples, 0.28%)</title><rect x="49" y="244" width="3" height="15" fill="rgb(226,0,13)"/><text x="52.00" y="254.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="260" width="3" height="15" fill="rgb(239,100,50)"/><text x="52.00" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="276" width="3" height="15" fill="rgb(240,91,22)"/><text x="52.00" y="286.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="292" width="3" height="15" fill="rgb(230,9,42)"/><text x="52.00" y="302.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="308" width="3" height="15" fill="rgb(251,185,49)"/><text x="52.00" y="318.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="324" width="3" height="15" fill="rgb(238,117,50)"/><text x="52.00" y="334.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="340" width="3" height="15" fill="rgb(245,123,32)"/><text x="52.00" y="350.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="356" width="3" height="15" fill="rgb(246,13,50)"/><text x="52.00" y="366.50"></text></g><g><title>&lt;module&gt; (numpy/random/__init__.py) (1 samples, 0.28%)</title><rect x="49" y="372" width="3" height="15" fill="rgb(237,128,50)"/><text x="52.00" y="382.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="388" width="3" height="15" fill="rgb(231,101,9)"/><text x="52.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="404" width="3" height="15" fill="rgb(211,56,29)"/><text x="52.00" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="420" width="3" height="15" fill="rgb(221,42,50)"/><text x="52.00" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="436" width="3" height="15" fill="rgb(239,84,29)"/><text x="52.00" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="452" width="3" height="15" fill="rgb(216,219,48)"/><text x="52.00" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="468" width="3" height="15" fill="rgb(245,160,21)"/><text x="52.00" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="484" width="3" height="15" fill="rgb(223,9,31)"/><text x="52.00" y="494.50"></text></g><g><title>&lt;module&gt; (numpy/random/_pickle.py) (1 samples, 0.28%)</title><rect x="49" y="500" width="3" height="15" fill="rgb(232,137,40)"/><text x="52.00" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="516" width="3" height="15" fill="rgb(234,111,21)"/><text x="52.00" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="532" width="3" height="15" fill="rgb(205,36,45)"/><text x="52.00" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="548" width="3" height="15" fill="rgb(245,38,50)"/><text x="52.00" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="49" y="564" width="3" height="15" fill="rgb(214,50,29)"/><text x="52.00" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="49" y="580" width="3" height="15" fill="rgb(233,162,0)"/><text x="52.00" y="590.50"></text></g><g><title>0x7eff46fd6b89 (?) (1 samples, 0.28%)</title><rect x="49" y="596" width="3" height="15" fill="rgb(231,178,15)"/><text x="52.00" y="606.50"></text></g><g><title>0x7eff46fdc579 (?) (1 samples, 0.28%)</title><rect x="49" y="612" width="3" height="15" fill="rgb(206,75,6)"/><text x="52.00" y="622.50"></text></g><g><title>0x7eff46feaad6 (?) (1 samples, 0.28%)</title><rect x="49" y="628" width="3" height="15" fill="rgb(222,37,20)"/><text x="52.00" y="638.50"></text></g><g><title>0x7eff46fdc579 (?) (1 samples, 0.28%)</title><rect x="49" y="644" width="3" height="15" fill="rgb(249,36,54)"/><text x="52.00" y="654.50"></text></g><g><title>0x7eff4691d32a (?) (1 samples, 0.28%)</title><rect x="49" y="660" width="3" height="15" fill="rgb(213,71,48)"/><text x="52.00" y="670.50"></text></g><g><title>gentype_dealloc (scalartypes.c.src) (1 samples, 0.28%)</title><rect x="49" y="676" width="3" height="15" fill="rgb(206,56,7)"/><text x="52.00" y="686.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="49" y="692" width="3" height="15" fill="rgb(205,115,30)"/><text x="52.00" y="702.50"></text></g><g><title>profile0_skl (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.28%)</title><rect x="52" y="68" width="3" height="15" fill="rgb(241,98,0)"/><text x="55.00" y="78.50"></text></g><g><title>setup_profile0 (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (1 samples, 0.28%)</title><rect x="52" y="84" width="3" height="15" fill="rgb(216,178,27)"/><text x="55.00" y="94.50"></text></g><g><title>setup (mlprodict/asv_benchmark/common_asv_skl.py) (1 samples, 0.28%)</title><rect x="52" y="100" width="3" height="15" fill="rgb(208,176,38)"/><text x="55.00" y="110.50"></text></g><g><title>register_converters (mlprodict/onnx_conv/register.py) (1 samples, 0.28%)</title><rect x="52" y="116" width="3" height="15" fill="rgb(243,156,12)"/><text x="55.00" y="126.50"></text></g><g><title>_register_converters_lightgbm (mlprodict/onnx_conv/register.py) (1 samples, 0.28%)</title><rect x="52" y="132" width="3" height="15" fill="rgb(250,104,28)"/><text x="55.00" y="142.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="148" width="3" height="15" fill="rgb(242,55,40)"/><text x="55.00" y="158.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="164" width="3" height="15" fill="rgb(254,118,53)"/><text x="55.00" y="174.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="180" width="3" height="15" fill="rgb(207,151,37)"/><text x="55.00" y="190.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="196" width="3" height="15" fill="rgb(235,15,3)"/><text x="55.00" y="206.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="212" width="3" height="15" fill="rgb(212,165,9)"/><text x="55.00" y="222.50"></text></g><g><title>&lt;module&gt; (lightgbm/__init__.py) (1 samples, 0.28%)</title><rect x="52" y="228" width="3" height="15" fill="rgb(250,136,12)"/><text x="55.00" y="238.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="244" width="3" height="15" fill="rgb(219,121,31)"/><text x="55.00" y="254.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="260" width="3" height="15" fill="rgb(233,207,2)"/><text x="55.00" y="270.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="276" width="3" height="15" fill="rgb(223,52,10)"/><text x="55.00" y="286.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="292" width="3" height="15" fill="rgb(222,225,32)"/><text x="55.00" y="302.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="308" width="3" height="15" fill="rgb(243,183,21)"/><text x="55.00" y="318.50"></text></g><g><title>&lt;module&gt; (lightgbm/basic.py) (1 samples, 0.28%)</title><rect x="52" y="324" width="3" height="15" fill="rgb(251,59,8)"/><text x="55.00" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="340" width="3" height="15" fill="rgb(231,117,10)"/><text x="55.00" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="356" width="3" height="15" fill="rgb(246,190,31)"/><text x="55.00" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="372" width="3" height="15" fill="rgb(245,95,17)"/><text x="55.00" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="388" width="3" height="15" fill="rgb(240,76,35)"/><text x="55.00" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="404" width="3" height="15" fill="rgb(248,88,48)"/><text x="55.00" y="414.50"></text></g><g><title>&lt;module&gt; (lightgbm/compat.py) (1 samples, 0.28%)</title><rect x="52" y="420" width="3" height="15" fill="rgb(239,171,7)"/><text x="55.00" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="436" width="3" height="15" fill="rgb(244,6,42)"/><text x="55.00" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="452" width="3" height="15" fill="rgb(205,28,1)"/><text x="55.00" y="462.50"></text></g><g><title>_find_spec (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="52" y="468" width="3" height="15" fill="rgb(210,108,25)"/><text x="55.00" y="478.50"></text></g><g><title>find_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="484" width="3" height="15" fill="rgb(216,43,0)"/><text x="55.00" y="494.50"></text></g><g><title>_get_spec (&lt;frozen importlib._bootstrap_external&gt;) (1 samples, 0.28%)</title><rect x="52" y="500" width="3" height="15" fill="rgb(224,147,21)"/><text x="55.00" y="510.50"></text></g><g><title>0x7eff12752ff9 (?) (1 samples, 0.28%)</title><rect x="91" y="212" width="4" height="15" fill="rgb(232,141,38)"/><text x="94.00" y="222.50"></text></g><g><title>0x7eff1274def6 (?) (1 samples, 0.28%)</title><rect x="91" y="228" width="4" height="15" fill="rgb(208,49,19)"/><text x="94.00" y="238.50"></text></g><g><title>0x7eff12742962 (?) (1 samples, 0.28%)</title><rect x="91" y="244" width="4" height="15" fill="rgb(233,136,32)"/><text x="94.00" y="254.50"></text></g><g><title>0x7eff127767a7 (?) (1 samples, 0.28%)</title><rect x="91" y="260" width="4" height="15" fill="rgb(247,80,21)"/><text x="94.00" y="270.50"></text></g><g><title>0x7eff12776379 (?) (1 samples, 0.28%)</title><rect x="91" y="276" width="4" height="15" fill="rgb(230,180,3)"/><text x="94.00" y="286.50"></text></g><g><title>0x7eff12bd48b8 (?) (1 samples, 0.28%)</title><rect x="91" y="292" width="4" height="15" fill="rgb(217,15,33)"/><text x="94.00" y="302.50"></text></g><g><title>0x7eff12bd2c7f (?) (1 samples, 0.28%)</title><rect x="91" y="308" width="4" height="15" fill="rgb(247,113,48)"/><text x="94.00" y="318.50"></text></g><g><title>0x7eff12be5385 (?) (1 samples, 0.28%)</title><rect x="91" y="324" width="4" height="15" fill="rgb(226,206,4)"/><text x="94.00" y="334.50"></text></g><g><title>0x7eff12c1eab2 (?) (1 samples, 0.28%)</title><rect x="91" y="340" width="4" height="15" fill="rgb(245,67,17)"/><text x="94.00" y="350.50"></text></g><g><title>pybind11::detail::function_call::~function_call [clone .lto_priv.656] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="101" y="244" width="4" height="15" fill="rgb(235,99,12)"/><text x="104.00" y="254.50"></text></g><g><title>&lt;listcomp&gt; (onnxruntime/capi/session.py) (4 samples, 1.11%)</title><rect x="95" y="212" width="13" height="15" fill="rgb(229,38,31)"/><text x="98.00" y="222.50"></text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="95" y="228" width="13" height="15" fill="rgb(253,18,53)"/><text x="98.00" y="238.50"></text></g><g><title>void pybind11::cpp_function::initialize&lt;pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg const*, &gt;(pybind11::cpp_function::cpp_function&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, onnxruntime::NodeArg, , &gt;( const&amp;)::{lambda(onnxruntime::NodeArg const*)#1}&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp; (*)(onnxruntime::NodeArg const*), const&amp;)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="105" y="244" width="3" height="15" fill="rgb(241,218,4)"/><text x="108.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::cast [clone .isra.698] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="105" y="260" width="3" height="15" fill="rgb(209,214,35)"/><text x="108.00" y="270.50"></text></g><g><title>OrtValue::Get&lt;onnxruntime::Tensor&gt; [clone .localalias.13] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="111" y="260" width="3" height="15" fill="rgb(221,123,50)"/><text x="114.00" y="270.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::FeedsFetchesInfo (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="114" y="292" width="4" height="15" fill="rgb(252,167,38)"/><text x="117.00" y="302.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::SetMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="114" y="308" width="4" height="15" fill="rgb(205,225,23)"/><text x="117.00" y="318.50"></text></g><g><title>onnxruntime::FeedsFetchesInfo::MapNamesToMLValueIdxs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="114" y="324" width="4" height="15" fill="rgb(226,34,30)"/><text x="117.00" y="334.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="114" y="340" width="4" height="15" fill="rgb(214,119,52)"/><text x="117.00" y="350.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="114" y="356" width="4" height="15" fill="rgb(231,215,38)"/><text x="117.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="118" y="292" width="3" height="15" fill="rgb(233,164,19)"/><text x="121.00" y="302.50"></text></g><g><title>std::vector&lt;onnxruntime::MLValueCopyInfo, std::allocator&lt;onnxruntime::MLValueCopyInfo&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="118" y="308" width="3" height="15" fill="rgb(214,163,53)"/><text x="121.00" y="318.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="118" y="324" width="3" height="15" fill="rgb(245,42,40)"/><text x="121.00" y="334.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="118" y="340" width="3" height="15" fill="rgb(240,180,20)"/><text x="121.00" y="350.50"></text></g><g><title>0x7eff54710c38 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="118" y="356" width="3" height="15" fill="rgb(217,146,24)"/><text x="121.00" y="366.50"></text></g><g><title>onnxruntime::FeedsFetchesManager::~FeedsFetchesManager (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="121" y="292" width="3" height="15" fill="rgb(216,129,29)"/><text x="124.00" y="302.50"></text></g><g><title>0x7eff5470f9d3 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="121" y="308" width="3" height="15" fill="rgb(233,173,52)"/><text x="124.00" y="318.50"></text></g><g><title>onnxruntime::InferenceSession::ValidateInputs (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="124" y="292" width="4" height="15" fill="rgb(223,94,35)"/><text x="127.00" y="302.50"></text></g><g><title>onnxruntime::InferenceSession::CheckShapes (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="124" y="308" width="4" height="15" fill="rgb(208,198,16)"/><text x="127.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="128" y="324" width="3" height="15" fill="rgb(230,57,34)"/><text x="131.00" y="334.50"></text></g><g><title>onnxruntime::Cast&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="134" y="340" width="3" height="15" fill="rgb(240,161,45)"/><text x="137.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="134" y="356" width="3" height="15" fill="rgb(245,65,50)"/><text x="137.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::AllocateRawInternal (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="137" y="356" width="4" height="15" fill="rgb(227,153,17)"/><text x="140.00" y="366.50"></text></g><g><title>onnxruntime::BFCArena::FindChunkPtr (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="137" y="372" width="4" height="15" fill="rgb(240,78,6)"/><text x="140.00" y="382.50"></text></g><g><title>onnxruntime::BFCArena::SplitChunk (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="137" y="388" width="4" height="15" fill="rgb(206,154,21)"/><text x="140.00" y="398.50"></text></g><g><title>onnxruntime::BFCArena::InsertFreeChunkIntoBin (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="137" y="404" width="4" height="15" fill="rgb(233,91,3)"/><text x="140.00" y="414.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="141" y="356" width="3" height="15" fill="rgb(253,184,37)"/><text x="144.00" y="366.50"></text></g><g><title>onnxruntime::utils::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="141" y="372" width="3" height="15" fill="rgb(221,191,39)"/><text x="144.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionProvider::GetAllocator (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="141" y="388" width="3" height="15" fill="rgb(205,225,0)"/><text x="144.00" y="398.50"></text></g><g><title>onnxruntime::IExecutionFrame::IExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="144" y="356" width="3" height="15" fill="rgb(215,132,28)"/><text x="147.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="144" y="372" width="3" height="15" fill="rgb(217,106,14)"/><text x="147.00" y="382.50"></text></g><g><title>std::vector&lt;OrtValue, std::allocator&lt;OrtValue&gt; &gt;::_M_default_append (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="144" y="388" width="3" height="15" fill="rgb(248,90,33)"/><text x="147.00" y="398.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="144" y="404" width="3" height="15" fill="rgb(244,226,38)"/><text x="147.00" y="414.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="144" y="420" width="3" height="15" fill="rgb(253,126,7)"/><text x="147.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::ExecutionFrame (onnxruntime/capi/onnxruntime_pybind11_state.so) (4 samples, 1.11%)</title><rect x="137" y="340" width="13" height="15" fill="rgb(249,116,14)"/><text x="140.00" y="350.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="147" y="356" width="3" height="15" fill="rgb(254,225,1)"/><text x="150.00" y="366.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetNodeInputOrOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="154" y="356" width="3" height="15" fill="rgb(206,156,44)"/><text x="157.00" y="366.50"></text></g><g><title>onnxruntime::Gemm&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (7 samples, 1.94%)</title><rect x="150" y="340" width="23" height="15" fill="rgb(225,64,37)"/><text x="153.00" y="350.50">o..</text></g><g><title>onnxruntime::math::Gemm&lt;float, onnxruntime::concurrency::ThreadPool&gt; (onnxruntime/capi/onnxruntime_pybind11_state.so) (5 samples, 1.39%)</title><rect x="157" y="356" width="16" height="15" fill="rgb(225,174,45)"/><text x="160.00" y="366.50"></text></g><g><title>cblas_sgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.39%)</title><rect x="157" y="372" width="16" height="15" fill="rgb(213,9,22)"/><text x="160.00" y="382.50"></text></g><g><title>sgemm_ (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.39%)</title><rect x="157" y="388" width="16" height="15" fill="rgb(251,201,26)"/><text x="160.00" y="398.50"></text></g><g><title>mkl_blas_sgemm (onnxruntime/capi/libmklml_intel.so) (5 samples, 1.39%)</title><rect x="157" y="404" width="16" height="15" fill="rgb(217,63,34)"/><text x="160.00" y="414.50"></text></g><g><title>mkl_blas_sgemv (onnxruntime/capi/libmklml_intel.so) (3 samples, 0.83%)</title><rect x="164" y="420" width="9" height="15" fill="rgb(247,181,33)"/><text x="167.00" y="430.50"></text></g><g><title>mkl_blas_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.56%)</title><rect x="167" y="436" width="6" height="15" fill="rgb(254,193,12)"/><text x="170.00" y="446.50"></text></g><g><title>mkl_blas_avx_xsgemv (onnxruntime/capi/libmklml_intel.so) (2 samples, 0.56%)</title><rect x="167" y="452" width="6" height="15" fill="rgb(237,26,38)"/><text x="170.00" y="462.50"></text></g><g><title>onnxruntime::IExecutionFrame::ReleaseMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="173" y="340" width="4" height="15" fill="rgb(250,208,44)"/><text x="176.00" y="350.50"></text></g><g><title>onnxruntime::ExecutionFrame::ReleaseMLValueImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="173" y="356" width="4" height="15" fill="rgb(228,222,32)"/><text x="176.00" y="366.50"></text></g><g><title>onnxruntime::Relu&lt;float&gt;::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="340" width="3" height="15" fill="rgb(227,187,44)"/><text x="180.00" y="350.50"></text></g><g><title>onnxruntime::OpKernelContext::Output (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="356" width="3" height="15" fill="rgb(210,62,31)"/><text x="180.00" y="366.50"></text></g><g><title>onnxruntime::OpKernelContext::OutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="372" width="3" height="15" fill="rgb(216,160,3)"/><text x="180.00" y="382.50"></text></g><g><title>onnxruntime::IExecutionFrame::GetOrCreateNodeOutputMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="388" width="3" height="15" fill="rgb(219,152,25)"/><text x="180.00" y="398.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateAsPerAllocationPlan (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="404" width="3" height="15" fill="rgb(231,155,33)"/><text x="180.00" y="414.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBuffer (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="420" width="3" height="15" fill="rgb(232,23,45)"/><text x="180.00" y="430.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateMLValueTensorSelfOwnBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="436" width="3" height="15" fill="rgb(254,67,11)"/><text x="180.00" y="446.50"></text></g><g><title>onnxruntime::ExecutionFrame::AllocateTensorWithPreAllocateBufferHelper (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="177" y="452" width="3" height="15" fill="rgb(210,40,47)"/><text x="180.00" y="462.50"></text></g><g><title>operator new (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="177" y="468" width="3" height="15" fill="rgb(238,44,51)"/><text x="180.00" y="478.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="177" y="484" width="3" height="15" fill="rgb(207,37,7)"/><text x="180.00" y="494.50"></text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 5.83%)</title><rect x="114" y="260" width="69" height="15" fill="rgb(223,221,10)"/><text x="117.00" y="270.50">onnxrun..</text></g><g><title>onnxruntime::InferenceSession::Run (onnxruntime/capi/onnxruntime_pybind11_state.so) (21 samples, 5.83%)</title><rect x="114" y="276" width="69" height="15" fill="rgb(234,214,48)"/><text x="117.00" y="286.50">onnxrun..</text></g><g><title>onnxruntime::utils::ExecuteGraph (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.72%)</title><rect x="128" y="292" width="55" height="15" fill="rgb(215,174,20)"/><text x="131.00" y="302.50">onnxr..</text></g><g><title>onnxruntime::utils::ExecuteGraphImpl (onnxruntime/capi/onnxruntime_pybind11_state.so) (17 samples, 4.72%)</title><rect x="128" y="308" width="55" height="15" fill="rgb(251,84,27)"/><text x="131.00" y="318.50">onnxr..</text></g><g><title>onnxruntime::SequentialExecutor::Execute (onnxruntime/capi/onnxruntime_pybind11_state.so) (16 samples, 4.44%)</title><rect x="131" y="324" width="52" height="15" fill="rgb(220,102,37)"/><text x="134.00" y="334.50">onnxr..</text></g><g><title>onnxruntime::Reshape::Compute (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="180" y="340" width="3" height="15" fill="rgb(222,63,22)"/><text x="183.00" y="350.50"></text></g><g><title>0x7eff54725eaa (libc-2.29.so) (1 samples, 0.28%)</title><rect x="183" y="276" width="4" height="15" fill="rgb(239,102,14)"/><text x="186.00" y="286.50"></text></g><g><title>onnxruntime::python::CreateGenericMLValue (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="183" y="260" width="7" height="15" fill="rgb(222,31,29)"/><text x="186.00" y="270.50"></text></g><g><title>onnxruntime::python::CreateTensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="276" width="3" height="15" fill="rgb(224,107,12)"/><text x="190.00" y="286.50"></text></g><g><title>onnxruntime::Tensor::Tensor (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="292" width="3" height="15" fill="rgb(208,10,2)"/><text x="190.00" y="302.50"></text></g><g><title>onnxruntime::Tensor::Init (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="187" y="308" width="3" height="15" fill="rgb(232,91,49)"/><text x="190.00" y="318.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="190" y="292" width="3" height="15" fill="rgb(216,92,28)"/><text x="193.00" y="302.50"></text></g><g><title>onnxruntime::python::GetPyObjFromTensor [clone .constprop.374] (onnxruntime/capi/onnxruntime_pybind11_state.so) (2 samples, 0.56%)</title><rect x="190" y="260" width="6" height="15" fill="rgb(253,186,24)"/><text x="193.00" y="270.50"></text></g><g><title>PyArray_New (ctors.c) (2 samples, 0.56%)</title><rect x="190" y="276" width="6" height="15" fill="rgb(240,33,23)"/><text x="193.00" y="286.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="193" y="292" width="3" height="15" fill="rgb(215,113,3)"/><text x="196.00" y="302.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="193" y="308" width="3" height="15" fill="rgb(233,202,34)"/><text x="196.00" y="318.50"></text></g><g><title>onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}::operator() const [clone .isra.1137] (onnxruntime/capi/onnxruntime_pybind11_state.so) (27 samples, 7.50%)</title><rect x="111" y="244" width="89" height="15" fill="rgb(218,185,33)"/><text x="114.00" y="254.50">onnxruntim..</text></g><g><title>std::__detail::_Prime_rehash_policy::_M_need_rehash (libstdc++.so.6.0.28) (1 samples, 0.28%)</title><rect x="196" y="260" width="4" height="15" fill="rgb(238,142,50)"/><text x="199.00" y="270.50"></text></g><g><title>pybind11::detail::list_caster&lt;std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::load (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="244" width="3" height="15" fill="rgb(212,227,23)"/><text x="203.00" y="254.50"></text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="260" width="3" height="15" fill="rgb(232,77,48)"/><text x="203.00" y="270.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; [clone .isra.154] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="276" width="3" height="15" fill="rgb(253,210,54)"/><text x="203.00" y="286.50"></text></g><g><title>0x7eff12719850 (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="200" y="292" width="3" height="15" fill="rgb(238,168,18)"/><text x="203.00" y="302.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (43 samples, 11.94%)</title><rect x="65" y="132" width="141" height="15" fill="rgb(250,109,33)"/><text x="68.00" y="142.50">&lt;lambda&gt; (mlprodi..</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (42 samples, 11.67%)</title><rect x="69" y="148" width="137" height="15" fill="rgb(220,206,41)"/><text x="72.00" y="158.50">run (mlprodict/on..</text></g><g><title>_run_whole_runtime (mlprodict/onnxrt/onnx_inference.py) (41 samples, 11.39%)</title><rect x="72" y="164" width="134" height="15" fill="rgb(223,2,38)"/><text x="75.00" y="174.50">_run_whole_runti..</text></g><g><title>run (mlprodict/onnxrt/ops_whole/session.py) (39 samples, 10.83%)</title><rect x="78" y="180" width="128" height="15" fill="rgb(217,93,51)"/><text x="81.00" y="190.50">run (mlprodict/o..</text></g><g><title>run (onnxruntime/capi/session.py) (38 samples, 10.56%)</title><rect x="82" y="196" width="124" height="15" fill="rgb(215,175,52)"/><text x="85.00" y="206.50">run (onnxruntim..</text></g><g><title>pybind11::cpp_function::dispatcher (onnxruntime/capi/onnxruntime_pybind11_state.so) (30 samples, 8.33%)</title><rect x="108" y="212" width="98" height="15" fill="rgb(245,53,25)"/><text x="111.00" y="222.50">pybind11::c..</text></g><g><title>void pybind11::cpp_function::initialize&lt;onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt;, onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*, pybind11::name, pybind11::is_method, pybind11::sibling&gt;(onnxruntime::python::addObjectMethods(pybind11::module&amp;)::{lambda(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*)#8}&amp;&amp;, std::vector&lt;pybind11::object, std::allocator&lt;pybind11::object&gt; &gt; (*)(onnxruntime::InferenceSession*, std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, pybind11::object, std::less&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, pybind11::object&gt; &gt; &gt;, OrtRunOptions*), pybind11::name const, pybind11::is_method&amp;, pybind11::sibling)::{lambda(pybind11::detail::function_call&amp;)#3}::_FUN [clone .lto_priv.540] (onnxruntime/capi/onnxruntime_pybind11_state.so) (29 samples, 8.06%)</title><rect x="111" y="228" width="95" height="15" fill="rgb(206,137,51)"/><text x="114.00" y="238.50">void pybind..</text></g><g><title>pybind11::detail::string_caster&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, false&gt;::load [clone .constprop.387] (onnxruntime/capi/onnxruntime_pybind11_state.so) (1 samples, 0.28%)</title><rect x="203" y="244" width="3" height="15" fill="rgb(210,180,46)"/><text x="206.00" y="254.50"></text></g><g><title>profile_ort (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (47 samples, 13.06%)</title><rect x="55" y="68" width="154" height="15" fill="rgb(224,9,51)"/><text x="58.00" y="78.50">profile_ort (bench_..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (47 samples, 13.06%)</title><rect x="55" y="84" width="154" height="15" fill="rgb(253,8,36)"/><text x="58.00" y="94.50">setup_profile (benc..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (47 samples, 13.06%)</title><rect x="55" y="100" width="154" height="15" fill="rgb(214,137,24)"/><text x="58.00" y="110.50">profile (bench_MLPR..</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (47 samples, 13.06%)</title><rect x="55" y="116" width="154" height="15" fill="rgb(229,206,23)"/><text x="58.00" y="126.50">time_predict (mlpro..</text></g><g><title>unicode_concatenate (python3.7) (1 samples, 0.28%)</title><rect x="206" y="132" width="3" height="15" fill="rgb(236,122,39)"/><text x="209.00" y="142.50"></text></g><g><title>&lt;genexpr&gt; (mlprodict/onnxrt/onnx_inference_node.py) (2 samples, 0.56%)</title><rect x="373" y="196" width="7" height="15" fill="rgb(215,180,24)"/><text x="376.00" y="206.50"></text></g><g><title>PyArray_GetDTypeTransferFunction (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="409" y="292" width="4" height="15" fill="rgb(210,205,36)"/><text x="412.00" y="302.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.56%)</title><rect x="409" y="260" width="7" height="15" fill="rgb(223,96,49)"/><text x="412.00" y="270.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.56%)</title><rect x="409" y="276" width="7" height="15" fill="rgb(210,139,45)"/><text x="412.00" y="286.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="413" y="292" width="3" height="15" fill="rgb(205,174,38)"/><text x="416.00" y="302.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="413" y="308" width="3" height="15" fill="rgb(241,16,43)"/><text x="416.00" y="318.50"></text></g><g><title>free (libc-2.29.so) (1 samples, 0.28%)</title><rect x="413" y="324" width="3" height="15" fill="rgb(241,9,31)"/><text x="416.00" y="334.50"></text></g><g><title>PyArray_DescrConverter (descriptor.c) (1 samples, 0.28%)</title><rect x="416" y="260" width="3" height="15" fill="rgb(211,44,38)"/><text x="419.00" y="270.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_cast.py) (5 samples, 1.39%)</title><rect x="406" y="212" width="17" height="15" fill="rgb(243,190,8)"/><text x="409.00" y="222.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/onnxrt/ops_cpu/op_cast.py) (4 samples, 1.11%)</title><rect x="409" y="228" width="14" height="15" fill="rgb(226,44,54)"/><text x="412.00" y="238.50"></text></g><g><title>array_astype (methods.c) (4 samples, 1.11%)</title><rect x="409" y="244" width="14" height="15" fill="rgb(232,13,11)"/><text x="412.00" y="254.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.28%)</title><rect x="419" y="260" width="4" height="15" fill="rgb(207,135,11)"/><text x="422.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="419" y="276" width="4" height="15" fill="rgb(206,72,6)"/><text x="422.00" y="286.50"></text></g><g><title>PyArray_NewFromDescrAndBase (ctors.c) (1 samples, 0.28%)</title><rect x="419" y="292" width="4" height="15" fill="rgb(247,161,12)"/><text x="422.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="419" y="308" width="4" height="15" fill="rgb(246,36,20)"/><text x="422.00" y="318.50"></text></g><g><title>PyArray_IntpConverter (conversion_utils.c) (1 samples, 0.28%)</title><rect x="423" y="244" width="3" height="15" fill="rgb(248,6,15)"/><text x="426.00" y="254.50"></text></g><g><title>PyArray_IntpFromIndexSequence (conversion_utils.c) (1 samples, 0.28%)</title><rect x="423" y="260" width="3" height="15" fill="rgb(221,179,42)"/><text x="426.00" y="270.50"></text></g><g><title>array_item (mapping.c) (1 samples, 0.28%)</title><rect x="423" y="276" width="3" height="15" fill="rgb(217,15,50)"/><text x="426.00" y="286.50"></text></g><g><title>PyArray_Scalar (scalarapi.c) (1 samples, 0.28%)</title><rect x="423" y="292" width="3" height="15" fill="rgb(205,131,35)"/><text x="426.00" y="302.50"></text></g><g><title>LONG_copyswap (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="423" y="308" width="3" height="15" fill="rgb(234,178,42)"/><text x="426.00" y="318.50"></text></g><g><title>_basic_copy (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="423" y="324" width="3" height="15" fill="rgb(222,27,20)"/><text x="426.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_reshape.py) (3 samples, 0.83%)</title><rect x="423" y="212" width="9" height="15" fill="rgb(241,206,39)"/><text x="426.00" y="222.50"></text></g><g><title>array_reshape (methods.c) (3 samples, 0.83%)</title><rect x="423" y="228" width="9" height="15" fill="rgb(246,90,19)"/><text x="426.00" y="238.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (2 samples, 0.56%)</title><rect x="426" y="244" width="6" height="15" fill="rgb(251,175,27)"/><text x="429.00" y="254.50"></text></g><g><title>PyArray_Newshape (shape.c) (2 samples, 0.56%)</title><rect x="426" y="260" width="6" height="15" fill="rgb(218,114,30)"/><text x="429.00" y="270.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (2 samples, 0.56%)</title><rect x="426" y="276" width="6" height="15" fill="rgb(207,21,25)"/><text x="429.00" y="286.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="429" y="292" width="3" height="15" fill="rgb(208,155,26)"/><text x="432.00" y="302.50"></text></g><g><title>_UpdateContiguousFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="429" y="308" width="3" height="15" fill="rgb(241,229,49)"/><text x="432.00" y="318.50"></text></g><g><title>PyArray_ENABLEFLAGS (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="429" y="324" width="3" height="15" fill="rgb(209,31,41)"/><text x="432.00" y="334.50"></text></g><g><title>arraydescr_richcompare (descriptor.c) (1 samples, 0.28%)</title><rect x="432" y="212" width="4" height="15" fill="rgb(239,119,16)"/><text x="435.00" y="222.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="452" y="244" width="3" height="15" fill="rgb(254,222,44)"/><text x="455.00" y="254.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.28%)</title><rect x="455" y="260" width="4" height="15" fill="rgb(234,23,46)"/><text x="458.00" y="270.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.28%)</title><rect x="455" y="276" width="4" height="15" fill="rgb(245,157,53)"/><text x="458.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.56%)</title><rect x="459" y="292" width="6" height="15" fill="rgb(212,107,28)"/><text x="462.00" y="302.50"></text></g><g><title>promote_types (convert_datatype.c) (1 samples, 0.28%)</title><rect x="462" y="308" width="3" height="15" fill="rgb(246,54,46)"/><text x="465.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.83%)</title><rect x="459" y="276" width="9" height="15" fill="rgb(236,114,41)"/><text x="462.00" y="286.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="465" y="292" width="3" height="15" fill="rgb(212,117,21)"/><text x="468.00" y="302.50"></text></g><g><title>_check_ufunc_fperr (extobj.c) (1 samples, 0.28%)</title><rect x="468" y="276" width="4" height="15" fill="rgb(207,79,30)"/><text x="471.00" y="286.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.28%)</title><rect x="472" y="292" width="3" height="15" fill="rgb(217,197,16)"/><text x="475.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.28%)</title><rect x="472" y="308" width="3" height="15" fill="rgb(249,206,31)"/><text x="475.00" y="318.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.28%)</title><rect x="472" y="324" width="3" height="15" fill="rgb(252,205,46)"/><text x="475.00" y="334.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.28%)</title><rect x="472" y="340" width="3" height="15" fill="rgb(219,96,35)"/><text x="475.00" y="350.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="475" y="292" width="3" height="15" fill="rgb(236,174,15)"/><text x="478.00" y="302.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.28%)</title><rect x="482" y="324" width="3" height="15" fill="rgb(212,39,23)"/><text x="485.00" y="334.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.28%)</title><rect x="482" y="340" width="3" height="15" fill="rgb(233,27,30)"/><text x="485.00" y="350.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.28%)</title><rect x="482" y="356" width="3" height="15" fill="rgb(223,126,9)"/><text x="485.00" y="366.50"></text></g><g><title>offset_bounds_from_strides (mem_overlap.c) (1 samples, 0.28%)</title><rect x="482" y="372" width="3" height="15" fill="rgb(212,199,34)"/><text x="485.00" y="382.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.56%)</title><rect x="482" y="308" width="6" height="15" fill="rgb(212,194,8)"/><text x="485.00" y="318.50"></text></g><g><title>npyiter_check_global_flags (nditer_constr.c) (1 samples, 0.28%)</title><rect x="485" y="324" width="3" height="15" fill="rgb(212,63,32)"/><text x="488.00" y="334.50"></text></g><g><title>NpyIter_GetIterSize (nditer_api.c) (1 samples, 0.28%)</title><rect x="488" y="308" width="3" height="15" fill="rgb(219,127,45)"/><text x="491.00" y="318.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (7 samples, 1.94%)</title><rect x="472" y="276" width="23" height="15" fill="rgb(233,224,28)"/><text x="475.00" y="286.50">e..</text></g><g><title>iterator_loop (ufunc_object.c) (5 samples, 1.39%)</title><rect x="478" y="292" width="17" height="15" fill="rgb(205,106,26)"/><text x="481.00" y="302.50"></text></g><g><title>NpyIter_ResetBasePointers (nditer_api.c) (1 samples, 0.28%)</title><rect x="491" y="308" width="4" height="15" fill="rgb(247,37,44)"/><text x="494.00" y="318.50"></text></g><g><title>npyiter_copy_to_buffers (nditer_api.c) (1 samples, 0.28%)</title><rect x="491" y="324" width="4" height="15" fill="rgb(234,225,40)"/><text x="494.00" y="334.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (14 samples, 3.89%)</title><rect x="459" y="260" width="45" height="15" fill="rgb(249,153,41)"/><text x="462.00" y="270.50">PyUF..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.83%)</title><rect x="495" y="276" width="9" height="15" fill="rgb(242,64,3)"/><text x="498.00" y="286.50"></text></g><g><title>parse_ufunc_keywords (ufunc_object.c) (2 samples, 0.56%)</title><rect x="498" y="292" width="6" height="15" fill="rgb(249,19,37)"/><text x="501.00" y="302.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/_op.py) (19 samples, 5.28%)</title><rect x="445" y="228" width="63" height="15" fill="rgb(248,62,24)"/><text x="448.00" y="238.50">_run (..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (16 samples, 4.44%)</title><rect x="455" y="244" width="53" height="15" fill="rgb(246,172,28)"/><text x="458.00" y="254.50">ufunc..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.28%)</title><rect x="504" y="260" width="4" height="15" fill="rgb(234,142,54)"/><text x="507.00" y="270.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="531" y="260" width="3" height="15" fill="rgb(211,177,14)"/><text x="534.00" y="270.50"></text></g><g><title>PyArray_NewFlagsObject (flagsobject.c) (1 samples, 0.28%)</title><rect x="534" y="260" width="3" height="15" fill="rgb(234,198,34)"/><text x="537.00" y="270.50"></text></g><g><title>array_subscript (mapping.c) (1 samples, 0.28%)</title><rect x="537" y="260" width="4" height="15" fill="rgb(231,110,5)"/><text x="540.00" y="270.50"></text></g><g><title>arrayflags_dealloc (flagsobject.c) (1 samples, 0.28%)</title><rect x="541" y="260" width="3" height="15" fill="rgb(244,12,33)"/><text x="544.00" y="270.50"></text></g><g><title>arrayflags_getitem (flagsobject.c) (1 samples, 0.28%)</title><rect x="544" y="260" width="3" height="15" fill="rgb(225,33,45)"/><text x="547.00" y="270.50"></text></g><g><title>0x7eff5473017c (libc-2.29.so) (1 samples, 0.28%)</title><rect x="563" y="340" width="4" height="15" fill="rgb(215,226,27)"/><text x="566.00" y="350.50"></text></g><g><title>0x7eff54730186 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="567" y="340" width="3" height="15" fill="rgb(235,13,51)"/><text x="570.00" y="350.50"></text></g><g><title>_aligned_strided_to_strided_size4_srcstride0 (lowlevel_strided_loops.c.src) (1 samples, 0.28%)</title><rect x="570" y="404" width="3" height="15" fill="rgb(248,106,38)"/><text x="573.00" y="414.50"></text></g><g><title>PyArray_ResolveWritebackIfCopy (arrayobject.c) (2 samples, 0.56%)</title><rect x="570" y="340" width="7" height="15" fill="rgb(228,36,43)"/><text x="573.00" y="350.50"></text></g><g><title>PyArray_CopyAsFlat (ctors.c) (2 samples, 0.56%)</title><rect x="570" y="356" width="7" height="15" fill="rgb(236,82,29)"/><text x="573.00" y="366.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (2 samples, 0.56%)</title><rect x="570" y="372" width="7" height="15" fill="rgb(216,13,31)"/><text x="573.00" y="382.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.56%)</title><rect x="570" y="388" width="7" height="15" fill="rgb(238,74,48)"/><text x="573.00" y="398.50"></text></g><g><title>copycast_isaligned (array_assign_array.c) (1 samples, 0.28%)</title><rect x="573" y="404" width="4" height="15" fill="rgb(224,132,43)"/><text x="576.00" y="414.50"></text></g><g><title>npy_uint_alignment (common.h) (1 samples, 0.28%)</title><rect x="573" y="420" width="4" height="15" fill="rgb(231,226,8)"/><text x="576.00" y="430.50"></text></g><g><title>__errno_location (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="577" y="340" width="3" height="15" fill="rgb(219,55,16)"/><text x="580.00" y="350.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (libpthread-2.29.so) (1 samples, 0.28%)</title><rect x="580" y="340" width="3" height="15" fill="rgb(210,89,41)"/><text x="583.00" y="350.50"></text></g><g><title>gemv (cblasfuncs.c) (3 samples, 0.83%)</title><rect x="583" y="340" width="10" height="15" fill="rgb(231,13,26)"/><text x="586.00" y="350.50"></text></g><g><title>cblas_sgemv (libopenblasp-r0-34a18dc3.3.7.so) (3 samples, 0.83%)</title><rect x="583" y="356" width="10" height="15" fill="rgb(221,62,30)"/><text x="586.00" y="366.50"></text></g><g><title>sgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (1 samples, 0.28%)</title><rect x="590" y="372" width="3" height="15" fill="rgb(248,10,32)"/><text x="593.00" y="382.50"></text></g><g><title>PyArray_New (ctors.c) (1 samples, 0.28%)</title><rect x="596" y="356" width="4" height="15" fill="rgb(219,179,32)"/><text x="599.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="596" y="372" width="4" height="15" fill="rgb(230,45,46)"/><text x="599.00" y="382.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="596" y="388" width="4" height="15" fill="rgb(235,49,25)"/><text x="599.00" y="398.50"></text></g><g><title>PyArray_MatrixProduct2 (multiarraymodule.c) (13 samples, 3.61%)</title><rect x="560" y="308" width="43" height="15" fill="rgb(246,32,47)"/><text x="563.00" y="318.50">PyAr..</text></g><g><title>cblas_matrixproduct (cblasfuncs.c) (12 samples, 3.33%)</title><rect x="563" y="324" width="40" height="15" fill="rgb(205,163,1)"/><text x="566.00" y="334.50">cbl..</text></g><g><title>new_array_for_sum (common.c) (3 samples, 0.83%)</title><rect x="593" y="340" width="10" height="15" fill="rgb(227,16,21)"/><text x="596.00" y="350.50"></text></g><g><title>PyArray_NewLikeArrayWithShape (ctors.c) (1 samples, 0.28%)</title><rect x="600" y="356" width="3" height="15" fill="rgb(207,170,3)"/><text x="603.00" y="366.50"></text></g><g><title>PyArray_NDIM (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="600" y="372" width="3" height="15" fill="rgb(247,105,37)"/><text x="603.00" y="382.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_matmul.py) (30 samples, 8.33%)</title><rect x="508" y="228" width="98" height="15" fill="rgb(214,110,4)"/><text x="511.00" y="238.50">_run (mlpro..</text></g><g><title>numpy_dot_inplace (mlprodict/onnxrt/ops_cpu/_op_numpy_helper.py) (29 samples, 8.06%)</title><rect x="511" y="244" width="95" height="15" fill="rgb(243,9,52)"/><text x="514.00" y="254.50">numpy_dot_i..</text></g><g><title>dot (&lt;__array_function__ internals&gt;) (18 samples, 5.00%)</title><rect x="547" y="260" width="59" height="15" fill="rgb(252,20,31)"/><text x="550.00" y="270.50">dot (&lt;..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (16 samples, 4.44%)</title><rect x="554" y="276" width="52" height="15" fill="rgb(230,191,26)"/><text x="557.00" y="286.50">array..</text></g><g><title>array_matrixproduct (multiarraymodule.c) (16 samples, 4.44%)</title><rect x="554" y="292" width="52" height="15" fill="rgb(228,159,3)"/><text x="557.00" y="302.50">array..</text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="603" y="308" width="3" height="15" fill="rgb(250,123,34)"/><text x="606.00" y="318.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="609" y="276" width="4" height="15" fill="rgb(244,135,18)"/><text x="612.00" y="286.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (1 samples, 0.28%)</title><rect x="609" y="292" width="4" height="15" fill="rgb(243,56,35)"/><text x="612.00" y="302.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="609" y="308" width="4" height="15" fill="rgb(249,200,48)"/><text x="612.00" y="318.50"></text></g><g><title>_find_array_prepare (ufunc_object.c) (1 samples, 0.28%)</title><rect x="613" y="276" width="3" height="15" fill="rgb(250,13,24)"/><text x="616.00" y="286.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (2 samples, 0.56%)</title><rect x="616" y="276" width="6" height="15" fill="rgb(250,92,33)"/><text x="619.00" y="286.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.56%)</title><rect x="616" y="292" width="6" height="15" fill="rgb(251,175,3)"/><text x="619.00" y="302.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.56%)</title><rect x="616" y="308" width="6" height="15" fill="rgb(254,116,32)"/><text x="619.00" y="318.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="619" y="324" width="3" height="15" fill="rgb(218,196,42)"/><text x="622.00" y="334.50"></text></g><g><title>PyArray_EQUIVALENTLY_ITERABLE_OVERLAP_OK (lowlevel_strided_loops.h) (1 samples, 0.28%)</title><rect x="622" y="292" width="4" height="15" fill="rgb(236,197,45)"/><text x="625.00" y="302.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.28%)</title><rect x="622" y="308" width="4" height="15" fill="rgb(241,131,16)"/><text x="625.00" y="318.50"></text></g><g><title>solve_diophantine (mem_overlap.c) (1 samples, 0.28%)</title><rect x="622" y="324" width="4" height="15" fill="rgb(236,37,12)"/><text x="625.00" y="334.50"></text></g><g><title>diophantine_dfs (mem_overlap.c) (1 samples, 0.28%)</title><rect x="622" y="340" width="4" height="15" fill="rgb(242,100,1)"/><text x="625.00" y="350.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.56%)</title><rect x="622" y="276" width="7" height="15" fill="rgb(224,223,0)"/><text x="625.00" y="286.50"></text></g><g><title>trivial_three_operand_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="626" y="292" width="3" height="15" fill="rgb(226,19,4)"/><text x="629.00" y="302.50"></text></g><g><title>PyArray_MultiplyList (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="626" y="308" width="3" height="15" fill="rgb(231,174,6)"/><text x="629.00" y="318.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="632" y="324" width="4" height="15" fill="rgb(223,37,20)"/><text x="635.00" y="334.50"></text></g><g><title>IsAligned (array_assign.c) (1 samples, 0.28%)</title><rect x="632" y="340" width="4" height="15" fill="rgb(241,147,46)"/><text x="635.00" y="350.50"></text></g><g><title>PyArray_STRIDES (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="632" y="356" width="4" height="15" fill="rgb(219,12,5)"/><text x="635.00" y="366.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (3 samples, 0.83%)</title><rect x="629" y="308" width="10" height="15" fill="rgb(243,51,9)"/><text x="632.00" y="318.50"></text></g><g><title>npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="636" y="324" width="3" height="15" fill="rgb(222,200,42)"/><text x="639.00" y="334.50"></text></g><g><title>_npy_alloc_cache (alloc.c) (1 samples, 0.28%)</title><rect x="636" y="340" width="3" height="15" fill="rgb(250,69,13)"/><text x="639.00" y="350.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.78%)</title><rect x="609" y="260" width="33" height="15" fill="rgb(239,102,47)"/><text x="612.00" y="270.50">Py..</text></g><g><title>get_ufunc_arguments (ufunc_object.c) (4 samples, 1.11%)</title><rect x="629" y="276" width="13" height="15" fill="rgb(229,7,12)"/><text x="632.00" y="286.50"></text></g><g><title>PyArray_FromAny (ctors.c) (4 samples, 1.11%)</title><rect x="629" y="292" width="13" height="15" fill="rgb(206,29,39)"/><text x="632.00" y="302.50"></text></g><g><title>PyArray_SETITEM (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="639" y="308" width="3" height="15" fill="rgb(207,151,3)"/><text x="642.00" y="318.50"></text></g><g><title>LONG_setitem (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="639" y="324" width="3" height="15" fill="rgb(222,29,49)"/><text x="642.00" y="334.50"></text></g><g><title>_run (mlprodict/onnxrt/ops_cpu/op_relu.py) (12 samples, 3.33%)</title><rect x="606" y="228" width="39" height="15" fill="rgb(217,207,34)"/><text x="609.00" y="238.50">_ru..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (11 samples, 3.06%)</title><rect x="609" y="244" width="36" height="15" fill="rgb(239,143,46)"/><text x="612.00" y="254.50">ufu..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.28%)</title><rect x="642" y="260" width="3" height="15" fill="rgb(247,175,14)"/><text x="645.00" y="270.50"></text></g><g><title>profile_pyrt (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (134 samples, 37.22%)</title><rect x="209" y="68" width="440" height="15" fill="rgb(226,9,47)"/><text x="212.00" y="78.50">profile_pyrt (bench_MLPRegressor_default_b_reg_1_50_12_float..</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (134 samples, 37.22%)</title><rect x="209" y="84" width="440" height="15" fill="rgb(224,153,42)"/><text x="212.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_floa..</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (134 samples, 37.22%)</title><rect x="209" y="100" width="440" height="15" fill="rgb(241,31,14)"/><text x="212.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (134 samples, 37.22%)</title><rect x="209" y="116" width="440" height="15" fill="rgb(227,64,12)"/><text x="212.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (132 samples, 36.67%)</title><rect x="216" y="132" width="433" height="15" fill="rgb(211,33,19)"/><text x="219.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference.py) (131 samples, 36.39%)</title><rect x="219" y="148" width="430" height="15" fill="rgb(205,6,25)"/><text x="222.00" y="158.50">run (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py) (128 samples, 35.56%)</title><rect x="229" y="164" width="420" height="15" fill="rgb(224,227,18)"/><text x="232.00" y="174.50">_run_sequence_runtime (mlprodict/onnxrt/onnx_inference.py)</text></g><g><title>run (mlprodict/onnxrt/onnx_inference_node.py) (117 samples, 32.50%)</title><rect x="265" y="180" width="384" height="15" fill="rgb(224,182,38)"/><text x="268.00" y="190.50">run (mlprodict/onnxrt/onnx_inference_node.py)</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (82 samples, 22.78%)</title><rect x="380" y="196" width="269" height="15" fill="rgb(234,206,46)"/><text x="383.00" y="206.50">run (mlprodict/onnxrt/ops_cpu/_op.p..</text></g><g><title>run (mlprodict/onnxrt/ops_cpu/_op.py) (65 samples, 18.06%)</title><rect x="436" y="212" width="213" height="15" fill="rgb(252,218,40)"/><text x="439.00" y="222.50">run (mlprodict/onnxrt/ops_cp..</text></g><g><title>array_descr_get (getset.c) (1 samples, 0.28%)</title><rect x="645" y="228" width="4" height="15" fill="rgb(217,78,19)"/><text x="648.00" y="238.50"></text></g><g><title>PyArray_DESCR (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="645" y="244" width="4" height="15" fill="rgb(235,132,20)"/><text x="648.00" y="254.50"></text></g><g><title>PyArray_IntTupleFromIntp (conversion_utils.c) (1 samples, 0.28%)</title><rect x="665" y="164" width="3" height="15" fill="rgb(229,27,39)"/><text x="668.00" y="174.50"></text></g><g><title>array_dealloc (arrayobject.c) (2 samples, 0.56%)</title><rect x="714" y="196" width="7" height="15" fill="rgb(232,50,3)"/><text x="717.00" y="206.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (2 samples, 0.56%)</title><rect x="714" y="212" width="7" height="15" fill="rgb(229,170,43)"/><text x="717.00" y="222.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="718" y="228" width="3" height="15" fill="rgb(234,131,36)"/><text x="721.00" y="238.50"></text></g><g><title>__new__ (numpy/core/getlimits.py) (1 samples, 0.28%)</title><rect x="731" y="212" width="3" height="15" fill="rgb(207,143,44)"/><text x="734.00" y="222.50"></text></g><g><title>arraydescr_new (descriptor.c) (1 samples, 0.28%)</title><rect x="731" y="228" width="3" height="15" fill="rgb(240,173,8)"/><text x="734.00" y="238.50"></text></g><g><title>array_implement_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="734" y="212" width="3" height="15" fill="rgb(215,166,44)"/><text x="737.00" y="222.50"></text></g><g><title>clip (&lt;__array_function__ internals&gt;) (1 samples, 0.28%)</title><rect x="734" y="228" width="3" height="15" fill="rgb(220,111,19)"/><text x="737.00" y="238.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (1 samples, 0.28%)</title><rect x="734" y="244" width="3" height="15" fill="rgb(218,23,16)"/><text x="737.00" y="254.50"></text></g><g><title>array_clip (methods.c) (1 samples, 0.28%)</title><rect x="734" y="260" width="3" height="15" fill="rgb(220,25,24)"/><text x="737.00" y="270.50"></text></g><g><title>forward_ndarray_method (methods.c) (1 samples, 0.28%)</title><rect x="734" y="276" width="3" height="15" fill="rgb(208,68,17)"/><text x="737.00" y="286.50"></text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (1 samples, 0.28%)</title><rect x="734" y="292" width="3" height="15" fill="rgb(253,175,34)"/><text x="737.00" y="302.50"></text></g><g><title>_clip (numpy/core/_methods.py) (1 samples, 0.28%)</title><rect x="734" y="308" width="3" height="15" fill="rgb(208,141,54)"/><text x="737.00" y="318.50"></text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (1 samples, 0.28%)</title><rect x="734" y="324" width="3" height="15" fill="rgb(212,128,36)"/><text x="737.00" y="334.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (2 samples, 0.56%)</title><rect x="777" y="356" width="6" height="15" fill="rgb(214,107,13)"/><text x="780.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (2 samples, 0.56%)</title><rect x="777" y="372" width="6" height="15" fill="rgb(231,159,8)"/><text x="780.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (2 samples, 0.56%)</title><rect x="777" y="388" width="6" height="15" fill="rgb(232,165,47)"/><text x="780.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.56%)</title><rect x="777" y="404" width="6" height="15" fill="rgb(219,63,13)"/><text x="780.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.56%)</title><rect x="777" y="420" width="6" height="15" fill="rgb(205,191,53)"/><text x="780.00" y="430.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="783" y="404" width="3" height="15" fill="rgb(231,135,50)"/><text x="786.00" y="414.50"></text></g><g><title>PyArray_ResultType (convert_datatype.c) (2 samples, 0.56%)</title><rect x="783" y="388" width="7" height="15" fill="rgb(250,217,0)"/><text x="786.00" y="398.50"></text></g><g><title>PyArray_MinScalarType_internal (convert_datatype.c) (1 samples, 0.28%)</title><rect x="786" y="404" width="4" height="15" fill="rgb(239,162,37)"/><text x="789.00" y="414.50"></text></g><g><title>min_scalar_type_num (convert_datatype.c) (1 samples, 0.28%)</title><rect x="786" y="420" width="4" height="15" fill="rgb(214,121,41)"/><text x="789.00" y="430.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (3 samples, 0.83%)</title><rect x="783" y="372" width="10" height="15" fill="rgb(240,10,49)"/><text x="786.00" y="382.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="790" y="388" width="3" height="15" fill="rgb(211,17,27)"/><text x="793.00" y="398.50"></text></g><g><title>PyArray_CanCastArrayTo (convert_datatype.c) (1 samples, 0.28%)</title><rect x="790" y="404" width="3" height="15" fill="rgb(219,101,42)"/><text x="793.00" y="414.50"></text></g><g><title>can_cast_scalar_to (convert_datatype.c) (1 samples, 0.28%)</title><rect x="790" y="420" width="3" height="15" fill="rgb(250,202,45)"/><text x="793.00" y="430.50"></text></g><g><title>PyArray_CanCastTypeTo (convert_datatype.c) (1 samples, 0.28%)</title><rect x="790" y="436" width="3" height="15" fill="rgb(227,19,22)"/><text x="793.00" y="446.50"></text></g><g><title>check_for_trivial_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="793" y="372" width="3" height="15" fill="rgb(238,193,36)"/><text x="796.00" y="382.50"></text></g><g><title>PyArray_CastToType (convert_datatype.c) (1 samples, 0.28%)</title><rect x="793" y="388" width="3" height="15" fill="rgb(236,129,13)"/><text x="796.00" y="398.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (1 samples, 0.28%)</title><rect x="793" y="404" width="3" height="15" fill="rgb(245,220,47)"/><text x="796.00" y="414.50"></text></g><g><title>PyArray_AssignRawScalar (array_assign_scalar.c) (1 samples, 0.28%)</title><rect x="793" y="420" width="3" height="15" fill="rgb(208,33,11)"/><text x="796.00" y="430.50"></text></g><g><title>raw_array_assign_scalar (array_assign_scalar.c) (1 samples, 0.28%)</title><rect x="793" y="436" width="3" height="15" fill="rgb(209,102,35)"/><text x="796.00" y="446.50"></text></g><g><title>_aligned_cast_long_to_double (lowlevel_strided_loops.c.src) (1 samples, 0.28%)</title><rect x="793" y="452" width="3" height="15" fill="rgb(222,191,17)"/><text x="796.00" y="462.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.28%)</title><rect x="796" y="420" width="3" height="15" fill="rgb(234,102,15)"/><text x="799.00" y="430.50"></text></g><g><title>solve_may_share_memory (mem_overlap.c) (1 samples, 0.28%)</title><rect x="796" y="436" width="3" height="15" fill="rgb(213,130,11)"/><text x="799.00" y="446.50"></text></g><g><title>get_array_memory_extents (mem_overlap.c) (1 samples, 0.28%)</title><rect x="796" y="452" width="3" height="15" fill="rgb(247,199,42)"/><text x="799.00" y="462.50"></text></g><g><title>PyArray_ITEMSIZE (ndarraytypes.h) (1 samples, 0.28%)</title><rect x="796" y="468" width="3" height="15" fill="rgb(227,185,53)"/><text x="799.00" y="478.50"></text></g><g><title>_clip_dep_invoke_with_casting (numpy/core/_methods.py) (9 samples, 2.50%)</title><rect x="773" y="324" width="30" height="15" fill="rgb(214,214,39)"/><text x="776.00" y="334.50">_c..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (8 samples, 2.22%)</title><rect x="777" y="340" width="26" height="15" fill="rgb(245,183,25)"/><text x="780.00" y="350.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.67%)</title><rect x="783" y="356" width="20" height="15" fill="rgb(250,163,31)"/><text x="786.00" y="366.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (2 samples, 0.56%)</title><rect x="796" y="372" width="7" height="15" fill="rgb(247,89,24)"/><text x="799.00" y="382.50"></text></g><g><title>iterator_loop (ufunc_object.c) (2 samples, 0.56%)</title><rect x="796" y="388" width="7" height="15" fill="rgb(245,1,21)"/><text x="799.00" y="398.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (2 samples, 0.56%)</title><rect x="796" y="404" width="7" height="15" fill="rgb(237,149,53)"/><text x="799.00" y="414.50"></text></g><g><title>npyiter_find_best_axis_ordering (nditer_constr.c) (1 samples, 0.28%)</title><rect x="799" y="420" width="4" height="15" fill="rgb(216,32,50)"/><text x="802.00" y="430.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;) (1 samples, 0.28%)</title><rect x="836" y="340" width="3" height="15" fill="rgb(208,46,37)"/><text x="839.00" y="350.50"></text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="849" y="372" width="3" height="15" fill="rgb(249,74,6)"/><text x="852.00" y="382.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (1 samples, 0.28%)</title><rect x="849" y="388" width="3" height="15" fill="rgb(209,126,0)"/><text x="852.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (1 samples, 0.28%)</title><rect x="849" y="404" width="3" height="15" fill="rgb(238,48,39)"/><text x="852.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (1 samples, 0.28%)</title><rect x="849" y="420" width="3" height="15" fill="rgb(234,99,52)"/><text x="852.00" y="430.50"></text></g><g><title>0x7eff54725730 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="862" y="420" width="3" height="15" fill="rgb(230,73,31)"/><text x="865.00" y="430.50"></text></g><g><title>PyArray_CheckFromAny (ctors.c) (2 samples, 0.56%)</title><rect x="865" y="420" width="7" height="15" fill="rgb(244,22,19)"/><text x="868.00" y="430.50"></text></g><g><title>PyArray_FromAny (ctors.c) (2 samples, 0.56%)</title><rect x="865" y="436" width="7" height="15" fill="rgb(215,183,8)"/><text x="868.00" y="446.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="868" y="452" width="4" height="15" fill="rgb(250,156,20)"/><text x="871.00" y="462.50"></text></g><g><title>PyArray_UpdateFlags (flagsobject.c) (1 samples, 0.28%)</title><rect x="868" y="468" width="4" height="15" fill="rgb(223,92,14)"/><text x="871.00" y="478.50"></text></g><g><title>ndim (&lt;__array_function__ internals&gt;) (11 samples, 3.06%)</title><rect x="839" y="340" width="36" height="15" fill="rgb(219,123,10)"/><text x="842.00" y="350.50">ndi..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (9 samples, 2.50%)</title><rect x="845" y="356" width="30" height="15" fill="rgb(211,206,3)"/><text x="848.00" y="366.50">ar..</text></g><g><title>ndim (numpy/core/fromnumeric.py) (7 samples, 1.94%)</title><rect x="852" y="372" width="23" height="15" fill="rgb(213,29,31)"/><text x="855.00" y="382.50">n..</text></g><g><title>asarray (numpy/core/_asarray.py) (5 samples, 1.39%)</title><rect x="858" y="388" width="17" height="15" fill="rgb(220,11,51)"/><text x="861.00" y="398.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (5 samples, 1.39%)</title><rect x="858" y="404" width="17" height="15" fill="rgb(234,81,49)"/><text x="861.00" y="414.50"></text></g><g><title>PyArray_OrderConverter (conversion_utils.c) (1 samples, 0.28%)</title><rect x="872" y="420" width="3" height="15" fill="rgb(235,28,53)"/><text x="875.00" y="430.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (3 samples, 0.83%)</title><rect x="878" y="356" width="10" height="15" fill="rgb(222,215,15)"/><text x="881.00" y="366.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (3 samples, 0.83%)</title><rect x="878" y="372" width="10" height="15" fill="rgb(215,43,18)"/><text x="881.00" y="382.50"></text></g><g><title>PyUFuncOverride_GetNonDefaultArrayUfunc (ufunc_override.c) (3 samples, 0.83%)</title><rect x="878" y="388" width="10" height="15" fill="rgb(221,4,14)"/><text x="881.00" y="398.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (3 samples, 0.83%)</title><rect x="878" y="404" width="10" height="15" fill="rgb(234,43,50)"/><text x="881.00" y="414.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (3 samples, 0.83%)</title><rect x="878" y="420" width="10" height="15" fill="rgb(241,182,46)"/><text x="881.00" y="430.50"></text></g><g><title>0x7eff54725e7a (libc-2.29.so) (2 samples, 0.56%)</title><rect x="881" y="436" width="7" height="15" fill="rgb(222,85,22)"/><text x="884.00" y="446.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (3 samples, 0.83%)</title><rect x="888" y="372" width="10" height="15" fill="rgb(238,16,16)"/><text x="891.00" y="382.50"></text></g><g><title>PyArray_FromAny (ctors.c) (1 samples, 0.28%)</title><rect x="895" y="388" width="3" height="15" fill="rgb(219,130,42)"/><text x="898.00" y="398.50"></text></g><g><title>PyArray_GetArrayParamsFromObject (ctors.c) (1 samples, 0.28%)</title><rect x="895" y="404" width="3" height="15" fill="rgb(208,177,9)"/><text x="898.00" y="414.50"></text></g><g><title>PyArray_DescrFromScalar (scalarapi.c) (1 samples, 0.28%)</title><rect x="895" y="420" width="3" height="15" fill="rgb(252,200,48)"/><text x="898.00" y="430.50"></text></g><g><title>PyArray_DescrFromTypeObject (scalarapi.c) (1 samples, 0.28%)</title><rect x="895" y="436" width="3" height="15" fill="rgb(243,72,30)"/><text x="898.00" y="446.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="895" y="452" width="3" height="15" fill="rgb(244,166,51)"/><text x="898.00" y="462.50"></text></g><g><title>should_use_min_scalar (convert_datatype.c) (1 samples, 0.28%)</title><rect x="898" y="388" width="3" height="15" fill="rgb(224,6,37)"/><text x="901.00" y="398.50"></text></g><g><title>linear_search_type_resolver (ufunc_type_resolution.c) (2 samples, 0.56%)</title><rect x="898" y="372" width="6" height="15" fill="rgb(215,169,5)"/><text x="901.00" y="382.50"></text></g><g><title>ufunc_loop_matches (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="901" y="388" width="3" height="15" fill="rgb(207,8,2)"/><text x="904.00" y="398.50"></text></g><g><title>PyArray_DescrFromType (arraytypes.c.src) (1 samples, 0.28%)</title><rect x="901" y="404" width="3" height="15" fill="rgb(247,93,41)"/><text x="904.00" y="414.50"></text></g><g><title>clip (numpy/core/fromnumeric.py) (49 samples, 13.61%)</title><rect x="747" y="244" width="161" height="15" fill="rgb(223,43,0)"/><text x="750.00" y="254.50">clip (numpy/core/fro..</text></g><g><title>_wrapfunc (numpy/core/fromnumeric.py) (46 samples, 12.78%)</title><rect x="757" y="260" width="151" height="15" fill="rgb(205,28,9)"/><text x="760.00" y="270.50">_wrapfunc (numpy/co..</text></g><g><title>array_clip (methods.c) (44 samples, 12.22%)</title><rect x="763" y="276" width="145" height="15" fill="rgb(237,219,13)"/><text x="766.00" y="286.50">array_clip (method..</text></g><g><title>forward_ndarray_method (methods.c) (44 samples, 12.22%)</title><rect x="763" y="292" width="145" height="15" fill="rgb(243,143,18)"/><text x="766.00" y="302.50">forward_ndarray_me..</text></g><g><title>_clip (numpy/core/_methods.py) (44 samples, 12.22%)</title><rect x="763" y="308" width="145" height="15" fill="rgb(216,206,11)"/><text x="766.00" y="318.50">_clip (numpy/core/..</text></g><g><title>_clip_dep_is_scalar_nan (numpy/core/_methods.py) (32 samples, 8.89%)</title><rect x="803" y="324" width="105" height="15" fill="rgb(216,201,39)"/><text x="806.00" y="334.50">_clip_dep_is..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (10 samples, 2.78%)</title><rect x="875" y="340" width="33" height="15" fill="rgb(235,193,28)"/><text x="878.00" y="350.50">uf..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (6 samples, 1.67%)</title><rect x="888" y="356" width="20" height="15" fill="rgb(252,37,25)"/><text x="891.00" y="366.50"></text></g><g><title>npy_clear_floatstatus_barrier (ieee754.c.src) (1 samples, 0.28%)</title><rect x="904" y="372" width="4" height="15" fill="rgb(230,85,27)"/><text x="907.00" y="382.50"></text></g><g><title>npy_get_floatstatus_barrier (ieee754.c.src) (1 samples, 0.28%)</title><rect x="904" y="388" width="4" height="15" fill="rgb(241,10,43)"/><text x="907.00" y="398.50"></text></g><g><title>fetestexcept (libm-2.29.so) (1 samples, 0.28%)</title><rect x="904" y="404" width="4" height="15" fill="rgb(216,191,14)"/><text x="907.00" y="414.50"></text></g><g><title>relu (sklearn/neural_network/_base.py) (59 samples, 16.39%)</title><rect x="721" y="196" width="193" height="15" fill="rgb(233,21,37)"/><text x="724.00" y="206.50">relu (sklearn/neural_netw..</text></g><g><title>clip (&lt;__array_function__ internals&gt;) (54 samples, 15.00%)</title><rect x="737" y="212" width="177" height="15" fill="rgb(240,26,32)"/><text x="740.00" y="222.50">clip (&lt;__array_function..</text></g><g><title>array_implement_array_function (arrayfunction_override.c) (53 samples, 14.72%)</title><rect x="740" y="228" width="174" height="15" fill="rgb(230,46,26)"/><text x="743.00" y="238.50">array_implement_array_..</text></g><g><title>get_implementing_args_and_methods (arrayfunction_override.c) (2 samples, 0.56%)</title><rect x="908" y="244" width="6" height="15" fill="rgb(246,56,3)"/><text x="911.00" y="254.50"></text></g><g><title>get_array_function (arrayfunction_override.c) (2 samples, 0.56%)</title><rect x="908" y="260" width="6" height="15" fill="rgb(250,226,45)"/><text x="911.00" y="270.50"></text></g><g><title>PyArray_LookupSpecial (get_attr_string.h) (2 samples, 0.56%)</title><rect x="908" y="276" width="6" height="15" fill="rgb(232,2,20)"/><text x="911.00" y="286.50"></text></g><g><title>maybe_get_attr (get_attr_string.h) (2 samples, 0.56%)</title><rect x="908" y="292" width="6" height="15" fill="rgb(205,33,26)"/><text x="911.00" y="302.50"></text></g><g><title>0x7eff547ed134 (libc-2.29.so) (1 samples, 0.28%)</title><rect x="911" y="308" width="3" height="15" fill="rgb(240,20,24)"/><text x="914.00" y="318.50"></text></g><g><title>dgemv_n_SANDYBRIDGE (libopenblasp-r0-34a18dc3.3.7.so) (2 samples, 0.56%)</title><rect x="921" y="212" width="6" height="15" fill="rgb(219,2,39)"/><text x="924.00" y="222.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (2 samples, 0.56%)</title><rect x="927" y="212" width="7" height="15" fill="rgb(219,130,2)"/><text x="930.00" y="222.50"></text></g><g><title>PyUFunc_CheckOverride (override.c) (1 samples, 0.28%)</title><rect x="940" y="228" width="4" height="15" fill="rgb(211,17,47)"/><text x="943.00" y="238.50"></text></g><g><title>get_array_ufunc_overrides (override.c) (1 samples, 0.28%)</title><rect x="940" y="244" width="4" height="15" fill="rgb(222,32,1)"/><text x="943.00" y="254.50"></text></g><g><title>PyUFuncOverride_GetOutObjects (ufunc_override.c) (1 samples, 0.28%)</title><rect x="940" y="260" width="4" height="15" fill="rgb(209,103,5)"/><text x="943.00" y="270.50"></text></g><g><title>PyArray_AssignArray (array_assign_array.c) (3 samples, 0.83%)</title><rect x="947" y="292" width="10" height="15" fill="rgb(230,211,41)"/><text x="950.00" y="302.50"></text></g><g><title>raw_array_assign_array (array_assign_array.c) (2 samples, 0.56%)</title><rect x="950" y="308" width="7" height="15" fill="rgb(206,228,17)"/><text x="953.00" y="318.50"></text></g><g><title>PyArray_PrepareTwoRawArrayIter (dtype_transfer.c) (1 samples, 0.28%)</title><rect x="954" y="324" width="3" height="15" fill="rgb(215,128,1)"/><text x="957.00" y="334.50"></text></g><g><title>qsort_r (libc-2.29.so) (1 samples, 0.28%)</title><rect x="954" y="340" width="3" height="15" fill="rgb(241,76,33)"/><text x="957.00" y="350.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.11%)</title><rect x="947" y="260" width="13" height="15" fill="rgb(213,96,11)"/><text x="950.00" y="270.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (4 samples, 1.11%)</title><rect x="947" y="276" width="13" height="15" fill="rgb(209,138,6)"/><text x="950.00" y="286.50"></text></g><g><title>npyiter_new_temp_array (nditer_constr.c) (1 samples, 0.28%)</title><rect x="957" y="292" width="3" height="15" fill="rgb(227,46,23)"/><text x="960.00" y="302.50"></text></g><g><title>PyArray_NewFromDescr (ctors.c) (1 samples, 0.28%)</title><rect x="957" y="308" width="3" height="15" fill="rgb(216,92,2)"/><text x="960.00" y="318.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="957" y="324" width="3" height="15" fill="rgb(231,167,23)"/><text x="960.00" y="334.50"></text></g><g><title>array_alloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="957" y="340" width="3" height="15" fill="rgb(233,162,54)"/><text x="960.00" y="350.50"></text></g><g><title>NpyIter_RemoveAxis (nditer_api.c) (2 samples, 0.56%)</title><rect x="960" y="260" width="7" height="15" fill="rgb(234,190,24)"/><text x="963.00" y="270.50"></text></g><g><title>0x7eff5472fdad (libc-2.29.so) (1 samples, 0.28%)</title><rect x="963" y="276" width="4" height="15" fill="rgb(214,158,20)"/><text x="966.00" y="286.50"></text></g><g><title>PyUFunc_DefaultLegacyInnerLoopSelector (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="967" y="260" width="3" height="15" fill="rgb(253,106,39)"/><text x="970.00" y="270.50"></text></g><g><title>PyUFunc_SimpleUniformOperationTypeResolver (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="970" y="260" width="3" height="15" fill="rgb(216,213,5)"/><text x="973.00" y="270.50"></text></g><g><title>PyUFunc_ValidateCasting (ufunc_type_resolution.c) (1 samples, 0.28%)</title><rect x="970" y="276" width="3" height="15" fill="rgb(234,91,27)"/><text x="973.00" y="286.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (19 samples, 5.28%)</title><rect x="914" y="196" width="62" height="15" fill="rgb(241,9,14)"/><text x="917.00" y="206.50">safe_s..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (13 samples, 3.61%)</title><rect x="934" y="212" width="42" height="15" fill="rgb(205,154,21)"/><text x="937.00" y="222.50">ufu..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (10 samples, 2.78%)</title><rect x="944" y="228" width="32" height="15" fill="rgb(249,100,40)"/><text x="947.00" y="238.50">Py..</text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (10 samples, 2.78%)</title><rect x="944" y="244" width="32" height="15" fill="rgb(206,180,44)"/><text x="947.00" y="254.50">Py..</text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.28%)</title><rect x="973" y="260" width="3" height="15" fill="rgb(223,207,53)"/><text x="976.00" y="270.50"></text></g><g><title>malloc (libc-2.29.so) (1 samples, 0.28%)</title><rect x="980" y="276" width="3" height="15" fill="rgb(242,151,54)"/><text x="983.00" y="286.50"></text></g><g><title>npyiter_allocate_arrays (nditer_constr.c) (1 samples, 0.28%)</title><rect x="983" y="276" width="3" height="15" fill="rgb(230,65,37)"/><text x="986.00" y="286.50"></text></g><g><title>solve_may_have_internal_overlap (mem_overlap.c) (1 samples, 0.28%)</title><rect x="983" y="292" width="3" height="15" fill="rgb(225,175,48)"/><text x="986.00" y="302.50"></text></g><g><title>npyiter_fill_axisdata (nditer_constr.c) (1 samples, 0.28%)</title><rect x="986" y="276" width="4" height="15" fill="rgb(247,210,4)"/><text x="989.00" y="286.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (4 samples, 1.11%)</title><rect x="980" y="228" width="13" height="15" fill="rgb(216,85,4)"/><text x="983.00" y="238.50"></text></g><g><title>iterator_loop (ufunc_object.c) (4 samples, 1.11%)</title><rect x="980" y="244" width="13" height="15" fill="rgb(205,215,53)"/><text x="983.00" y="254.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (4 samples, 1.11%)</title><rect x="980" y="260" width="13" height="15" fill="rgb(209,226,23)"/><text x="983.00" y="270.50"></text></g><g><title>npyiter_prepare_operands (nditer_constr.c) (1 samples, 0.28%)</title><rect x="990" y="276" width="3" height="15" fill="rgb(253,209,46)"/><text x="993.00" y="286.50"></text></g><g><title>npyiter_prepare_one_operand (nditer_constr.c) (1 samples, 0.28%)</title><rect x="990" y="292" width="3" height="15" fill="rgb(235,174,51)"/><text x="993.00" y="302.50"></text></g><g><title>get_ufunc_arguments (ufunc_object.c) (1 samples, 0.28%)</title><rect x="993" y="228" width="3" height="15" fill="rgb(241,21,54)"/><text x="996.00" y="238.50"></text></g><g><title>_forward_pass (sklearn/neural_network/_multilayer_perceptron.py) (95 samples, 26.39%)</title><rect x="688" y="180" width="311" height="15" fill="rgb(230,134,43)"/><text x="691.00" y="190.50">_forward_pass (sklearn/neural_network/_mu..</text></g><g><title>ufunc_generic_call (ufunc_object.c) (7 samples, 1.94%)</title><rect x="976" y="196" width="23" height="15" fill="rgb(246,227,2)"/><text x="979.00" y="206.50">u..</text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (7 samples, 1.94%)</title><rect x="976" y="212" width="23" height="15" fill="rgb(244,38,12)"/><text x="979.00" y="222.50">P..</text></g><g><title>make_full_arg_tuple (ufunc_object.c) (1 samples, 0.28%)</title><rect x="996" y="228" width="3" height="15" fill="rgb(242,27,40)"/><text x="999.00" y="238.50"></text></g><g><title>array_empty (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="999" y="180" width="4" height="15" fill="rgb(216,160,39)"/><text x="1002.00" y="190.50"></text></g><g><title>npy_free_cache_dim_obj (alloc.h) (1 samples, 0.28%)</title><rect x="999" y="196" width="4" height="15" fill="rgb(251,118,24)"/><text x="1002.00" y="206.50"></text></g><g><title>PyArray_Empty (ctors.c) (1 samples, 0.28%)</title><rect x="999" y="212" width="4" height="15" fill="rgb(205,41,29)"/><text x="1002.00" y="222.50"></text></g><g><title>PyArray_NewFromDescr_int (ctors.c) (1 samples, 0.28%)</title><rect x="999" y="228" width="4" height="15" fill="rgb(208,82,42)"/><text x="1002.00" y="238.50"></text></g><g><title>__enter__ (warnings.py) (1 samples, 0.28%)</title><rect x="1045" y="196" width="4" height="15" fill="rgb(216,145,51)"/><text x="1048.00" y="206.50"></text></g><g><title>__exit__ (warnings.py) (1 samples, 0.28%)</title><rect x="1049" y="196" width="3" height="15" fill="rgb(233,35,28)"/><text x="1052.00" y="206.50"></text></g><g><title>_assert_all_finite (sklearn/utils/validation.py) (6 samples, 1.67%)</title><rect x="1052" y="196" width="20" height="15" fill="rgb(207,196,17)"/><text x="1055.00" y="206.50"></text></g><g><title>unicode_hash (python3.7) (1 samples, 0.28%)</title><rect x="1068" y="212" width="4" height="15" fill="rgb(210,104,44)"/><text x="1071.00" y="222.50"></text></g><g><title>_num_samples (sklearn/utils/validation.py) (6 samples, 1.67%)</title><rect x="1072" y="196" width="19" height="15" fill="rgb(242,177,43)"/><text x="1075.00" y="206.50"></text></g><g><title>asarray (numpy/core/_asarray.py) (1 samples, 0.28%)</title><rect x="1091" y="196" width="3" height="15" fill="rgb(221,146,5)"/><text x="1094.00" y="206.50"></text></g><g><title>_array_fromobject (multiarraymodule.c) (1 samples, 0.28%)</title><rect x="1091" y="212" width="3" height="15" fill="rgb(227,59,42)"/><text x="1094.00" y="222.50"></text></g><g><title>issubdtype (numpy/core/numerictypes.py) (3 samples, 0.83%)</title><rect x="1094" y="196" width="10" height="15" fill="rgb(209,187,15)"/><text x="1097.00" y="206.50"></text></g><g><title>issubclass_ (numpy/core/numerictypes.py) (3 samples, 0.83%)</title><rect x="1094" y="212" width="10" height="15" fill="rgb(229,214,47)"/><text x="1097.00" y="222.50"></text></g><g><title>_predict (sklearn/neural_network/_multilayer_perceptron.py) (138 samples, 38.33%)</title><rect x="668" y="164" width="453" height="15" fill="rgb(254,227,30)"/><text x="671.00" y="174.50">_predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_array (sklearn/utils/validation.py) (36 samples, 10.00%)</title><rect x="1003" y="180" width="118" height="15" fill="rgb(211,52,28)"/><text x="1006.00" y="190.50">check_array (s..</text></g><g><title>simplefilter (warnings.py) (5 samples, 1.39%)</title><rect x="1104" y="196" width="17" height="15" fill="rgb(209,20,0)"/><text x="1107.00" y="206.50"></text></g><g><title>_add_filter (warnings.py) (2 samples, 0.56%)</title><rect x="1114" y="212" width="7" height="15" fill="rgb(238,174,23)"/><text x="1117.00" y="222.50"></text></g><g><title>array_ravel (methods.c) (1 samples, 0.28%)</title><rect x="1121" y="164" width="3" height="15" fill="rgb(233,81,2)"/><text x="1124.00" y="174.50"></text></g><g><title>PyArray_Ravel (shape.c) (1 samples, 0.28%)</title><rect x="1121" y="180" width="3" height="15" fill="rgb(250,86,4)"/><text x="1124.00" y="190.50"></text></g><g><title>PyArray_Newshape (shape.c) (1 samples, 0.28%)</title><rect x="1121" y="196" width="3" height="15" fill="rgb(214,119,27)"/><text x="1124.00" y="206.50"></text></g><g><title>unicode_endswith (python3.7) (4 samples, 1.11%)</title><rect x="1157" y="196" width="13" height="15" fill="rgb(239,6,21)"/><text x="1160.00" y="206.50"></text></g><g><title>&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py) (157 samples, 43.61%)</title><rect x="659" y="132" width="514" height="15" fill="rgb(253,144,54)"/><text x="662.00" y="142.50">&lt;lambda&gt; (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>predict (sklearn/neural_network/_multilayer_perceptron.py) (157 samples, 43.61%)</title><rect x="659" y="148" width="514" height="15" fill="rgb(209,182,47)"/><text x="662.00" y="158.50">predict (sklearn/neural_network/_multilayer_perceptron.py)</text></g><g><title>check_is_fitted (sklearn/utils/validation.py) (15 samples, 4.17%)</title><rect x="1124" y="164" width="49" height="15" fill="rgb(254,24,28)"/><text x="1127.00" y="174.50">chec..</text></g><g><title>&lt;listcomp&gt; (sklearn/utils/validation.py) (13 samples, 3.61%)</title><rect x="1131" y="180" width="42" height="15" fill="rgb(245,117,30)"/><text x="1134.00" y="190.50">&lt;li..</text></g><g><title>unicode_startswith (python3.7) (1 samples, 0.28%)</title><rect x="1170" y="196" width="3" height="15" fill="rgb(234,6,10)"/><text x="1173.00" y="206.50"></text></g><g><title>profile_skl (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (161 samples, 44.72%)</title><rect x="649" y="68" width="527" height="15" fill="rgb(244,186,36)"/><text x="652.00" y="78.50">profile_skl (bench_MLPRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (161 samples, 44.72%)</title><rect x="649" y="84" width="527" height="15" fill="rgb(248,50,24)"/><text x="652.00" y="94.50">setup_profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (161 samples, 44.72%)</title><rect x="649" y="100" width="527" height="15" fill="rgb(244,16,29)"/><text x="652.00" y="110.50">profile (bench_MLPRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>time_predict (mlprodict/asv_benchmark/common_asv_skl.py) (160 samples, 44.44%)</title><rect x="652" y="116" width="524" height="15" fill="rgb(227,49,8)"/><text x="655.00" y="126.50">time_predict (mlprodict/asv_benchmark/common_asv_skl.py)</text></g><g><title>unicode_dealloc (python3.7) (1 samples, 0.28%)</title><rect x="1173" y="132" width="3" height="15" fill="rgb(210,92,24)"/><text x="1176.00" y="142.50"></text></g><g><title>_compute_loss_grad (sklearn/neural_network/_multilayer_perceptron.py) (1 samples, 0.28%)</title><rect x="1176" y="180" width="4" height="15" fill="rgb(243,181,8)"/><text x="1179.00" y="190.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.28%)</title><rect x="1176" y="196" width="4" height="15" fill="rgb(207,139,33)"/><text x="1179.00" y="206.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1176" y="212" width="4" height="15" fill="rgb(230,20,2)"/><text x="1179.00" y="222.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1176" y="228" width="4" height="15" fill="rgb(206,196,12)"/><text x="1179.00" y="238.50"></text></g><g><title>PyUFunc_GeneralizedFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1176" y="244" width="4" height="15" fill="rgb(234,148,50)"/><text x="1179.00" y="254.50"></text></g><g><title>_get_coredim_sizes (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1176" y="260" width="4" height="15" fill="rgb(205,103,18)"/><text x="1179.00" y="270.50"></text></g><g><title>_backprop (sklearn/neural_network/_multilayer_perceptron.py) (2 samples, 0.56%)</title><rect x="1176" y="164" width="7" height="15" fill="rgb(216,122,15)"/><text x="1179.00" y="174.50"></text></g><g><title>safe_sparse_dot (sklearn/utils/extmath.py) (1 samples, 0.28%)</title><rect x="1180" y="180" width="3" height="15" fill="rgb(242,119,54)"/><text x="1183.00" y="190.50"></text></g><g><title>isspmatrix (scipy/sparse/base.py) (1 samples, 0.28%)</title><rect x="1180" y="196" width="3" height="15" fill="rgb(205,173,11)"/><text x="1183.00" y="206.50"></text></g><g><title>_get_updates (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.28%)</title><rect x="1183" y="180" width="3" height="15" fill="rgb(212,165,30)"/><text x="1186.00" y="190.50"></text></g><g><title>&lt;listcomp&gt; (sklearn/neural_network/_stochastic_optimizers.py) (1 samples, 0.28%)</title><rect x="1183" y="196" width="3" height="15" fill="rgb(213,202,4)"/><text x="1186.00" y="206.50"></text></g><g><title>array_multiply (number.c) (1 samples, 0.28%)</title><rect x="1183" y="212" width="3" height="15" fill="rgb(217,195,21)"/><text x="1186.00" y="222.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1183" y="228" width="3" height="15" fill="rgb(223,75,3)"/><text x="1186.00" y="238.50"></text></g><g><title>array_dealloc (arrayobject.c) (1 samples, 0.28%)</title><rect x="1183" y="244" width="3" height="15" fill="rgb(220,209,36)"/><text x="1186.00" y="254.50"></text></g><g><title>_dealloc_cached_buffer_info (buffer.c) (1 samples, 0.28%)</title><rect x="1183" y="260" width="3" height="15" fill="rgb(206,147,9)"/><text x="1186.00" y="270.50"></text></g><g><title>_buffer_clear_info (buffer.c) (1 samples, 0.28%)</title><rect x="1183" y="276" width="3" height="15" fill="rgb(206,213,16)"/><text x="1186.00" y="286.50"></text></g><g><title>all (360 samples, 100%)</title><rect x="10" y="36" width="1180" height="15" fill="rgb(244,160,18)"/><text x="13.00" y="46.50"></text></g><g><title>&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (360 samples, 100.00%)</title><rect x="10" y="52" width="1180" height="15" fill="rgb(223,93,22)"/><text x="13.00" y="62.50">&lt;module&gt; (bench_MLPRegressor_default_b_reg_1_50_12_float_.py)</text></g><g><title>start (bench_MLPRegressor_default_b_reg_1_50_12_float_.py) (4 samples, 1.11%)</title><rect x="1176" y="68" width="14" height="15" fill="rgb(208,50,50)"/><text x="1179.00" y="78.50"></text></g><g><title>setup_cache (profiles/benches/neural_network/MLPRegressor/bench_MLPRegressor_default_b_reg.py) (4 samples, 1.11%)</title><rect x="1176" y="84" width="14" height="15" fill="rgb(224,120,33)"/><text x="1179.00" y="94.50"></text></g><g><title>setup_cache (mlprodict/asv_benchmark/common_asv_skl.py) (4 samples, 1.11%)</title><rect x="1176" y="100" width="14" height="15" fill="rgb(236,111,47)"/><text x="1179.00" y="110.50"></text></g><g><title>fit (sklearn/neural_network/_multilayer_perceptron.py) (4 samples, 1.11%)</title><rect x="1176" y="116" width="14" height="15" fill="rgb(210,2,45)"/><text x="1179.00" y="126.50"></text></g><g><title>_fit (sklearn/neural_network/_multilayer_perceptron.py) (4 samples, 1.11%)</title><rect x="1176" y="132" width="14" height="15" fill="rgb(228,56,50)"/><text x="1179.00" y="142.50"></text></g><g><title>_fit_stochastic (sklearn/neural_network/_multilayer_perceptron.py) (4 samples, 1.11%)</title><rect x="1176" y="148" width="14" height="15" fill="rgb(219,29,28)"/><text x="1179.00" y="158.50"></text></g><g><title>update_params (sklearn/neural_network/_stochastic_optimizers.py) (2 samples, 0.56%)</title><rect x="1183" y="164" width="7" height="15" fill="rgb(218,208,23)"/><text x="1186.00" y="174.50"></text></g><g><title>ufunc_generic_call (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1186" y="180" width="4" height="15" fill="rgb(215,73,40)"/><text x="1189.00" y="190.50"></text></g><g><title>PyUFunc_GenericFunction (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1186" y="196" width="4" height="15" fill="rgb(218,226,32)"/><text x="1189.00" y="206.50"></text></g><g><title>execute_legacy_ufunc_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1186" y="212" width="4" height="15" fill="rgb(218,83,25)"/><text x="1189.00" y="222.50"></text></g><g><title>iterator_loop (ufunc_object.c) (1 samples, 0.28%)</title><rect x="1186" y="228" width="4" height="15" fill="rgb(208,41,6)"/><text x="1189.00" y="238.50"></text></g><g><title>NpyIter_AdvancedNew (nditer_constr.c) (1 samples, 0.28%)</title><rect x="1186" y="244" width="4" height="15" fill="rgb(216,210,39)"/><text x="1189.00" y="254.50"></text></g></g></svg>